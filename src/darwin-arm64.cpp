// Auto generated by JuleC.
// JuleC version: jule0.0.12 @master
// Date: 17/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1d0526c4d_Importer{};
struct _1d05c40c5_Kind{};
struct _1d05e0476_Lookup{};
struct _1a956e173_CommonFlag{};
struct _22dbc3e18_Range16;
struct _22dbc438b_Range32;
struct _22dbc480e_RangeTable;
struct _22dc8caa3_acceptRange;
struct _22dcc58bb_lazyBuff;
struct _22b24c131_DirEntry;
struct _22b2951e0_Directory;
struct _22b1e9694_File;
struct _22c0b62c9_Status;
struct _21272d230_Cmd;
struct _22ca31eb9_Log;
struct _212a0c2ab_Token;
struct _212a12646_File;
struct _212a1469d_kindPair;
struct _212a1a20e_lex;
struct _1ea2be217_Ast;
struct _1ea2c0009_Node;
struct _1ea2c0405_Directive;
struct _1ea30369c_TypeDecl;
struct _1ea303c63_IdentTypeDecl;
struct _1ea3043b2_SubIdentTypeDecl;
struct _1ea304769_NamespaceTypeDecl;
struct _1ea304a55_SptrTypeDecl;
struct _1ea304e51_SlcTypeDecl;
struct _1ea30523c_TupleTypeDecl;
struct _1ea305528_PtrTypeDecl;
struct _1ea305baa_ArrTypeDecl;
struct _1ea306408_MapTypeDecl;
struct _1ea3067b0_RetTypeDecl;
struct _1ea307bbd_Expr;
struct _1ea307ea9_RangeExpr;
struct _1ea30855e_UseExpr;
struct _1ea30884a_TupleExpr;
struct _1ea308c02_LitExpr;
struct _1ea30940b_UnsafeExpr;
struct _1ea30987e_IdentExpr;
struct _1ea30a088_UnaryExpr;
struct _1ea30a440_VariadicExpr;
struct _1ea30a7e7_CastExpr;
struct _1ea30ab9e_NsSelectionExpr;
struct _1ea30b122_SubIdentExpr;
struct _1ea30b595_BinopExpr;
struct _1ea30bba0_FnCallExpr;
struct _1ea30c62e_FieldExprPair;
struct _1ea30cd7c_StructLit;
struct _1ea30d300_BraceLit;
struct _1ea30dac5_KeyValPair;
struct _1ea30e2ac_SliceExpr;
struct _1ea30eb2b_IndexingExpr;
struct _1ea310236_SlicingExpr;
struct _1ea310522_Constraint;
struct _1ea310995_GenericDecl;
struct _1ea310d4c_LabelSt;
struct _1ea311204_GotoSt;
struct _1ea3114e0_FallSt;
struct _1ea311aea_AssignLeft;
struct _1ea312139_AssignSt;
struct _1ea31302a_Stmt;
struct _1ea313635_ScopeTree;
struct _1ea313d0b_ParamDecl;
struct _1ea31512b_FnDecl;
struct _1ea31610a_VarDecl;
struct _1ea3164b2_RetSt;
struct _1ea316b22_Iter;
struct _1ea3173e7_WhileKind;
struct _1ea317c88_RangeKind;
struct _1ea318140_BreakSt;
struct _1ea3184e7_ContSt;
struct _1ea31896a_If;
struct _1ea318d22_Else;
struct _1ea319295_Conditional;
struct _1ea31996b_TypeAliasDecl;
struct _1ea319dde_Case;
struct _1ea31a5b5_MatchCase;
struct _1ea31ad57_UseDecl;
struct _1ea31b2ca_EnumItemDecl;
struct _1ea31bd03_EnumDecl;
struct _1ea31c809_TypeEnumItemDecl;
struct _1ea31ce14_TypeEnumDecl;
struct _1ea31d112_FieldDecl;
struct _1ea31d8b5_StructDecl;
struct _1ea31dec0_TraitDecl;
struct _1ea31e5ca_Impl;
struct _22c00d485_floatInfo;
struct _1eaed9041_decimalSlice;
struct _1eaee558b_leftCheat;
struct _1eaee605e_decimal;
struct _1eb0095b1_Const;
struct _1ea2e3deb_Field;
struct _1ea2eb541_Operators;
struct _1ea31ed8e_Struct;
struct _1ea32007b_FieldIns;
struct _1eb0153d0_OperandExprModel;
struct _1eb015897_BinopExprModel;
struct _1eb015c4e_UnaryExprModel;
struct _1eb01614a_StructArgExprModel;
struct _1eb016502_StructLitExprModel;
struct _1eb016810_AllocStructLitExprModel;
struct _1eb016d60_CastingExprModel;
struct _1eb017712_FnCallExprModel;
struct _1eb017ab9_SliceExprModel;
struct _1eb01803c_IndexingExprModel;
struct _1eb0183e4_AnonFnExprModel;
struct _1eb01879b_KeyValPairExprModel;
struct _1eb018c1e_MapExprModel;
struct _1eb01925d_SlicingExprModel;
struct _1eb01979c_TraitSubIdentExprModel;
struct _1eb01a14e_StructSubIdentExprModel;
struct _1eb01a4e5_StructStaticIdentExprModel;
struct _1eb01a8ad_ArrayExprModel;
struct _1eb01ab99_CommonIdentExprModel;
struct _1eb01b20a_CommonSubIdentExprModel;
struct _1eb01b507_TupleExprModel;
struct _1eb01b8d1_BuiltinOutCallExprModel;
struct _1eb01bcbb_BuiltinOutlnCallExprModel;
struct _1eb01c0da_BuiltinCloneCallExprModel;
struct _1eb01c4c5_BuiltinNewCallExprModel;
struct _1eb01c8b0_BuiltinPanicCallExprModel;
struct _1eb01cd66_BuiltinAssertCallExprModel;
struct _1eb01d31c_BuiltinMakeCallExprModel;
struct _1eb01d707_BuiltinAppendCallExprModel;
struct _1eb01da26_BuiltinLenCallExprModel;
struct _1eb01dd45_BuiltinCapCallExprModel;
struct _1eb01e4e9_BuiltinDeleteCallExprModel;
struct _1eb01e85c_BuiltinCopyCallExprModel;
struct _1eb01ec47_BuiltinErrorCallExprModel;
struct _1eb020044_SizeofExprModel;
struct _1eb020330_AlignofExprModel;
struct _1eb02061b_RuneExprModel;
struct _1eb020929_IntegratedToStrExprModel;
struct _1eb020ce2_BackendEmitExprModel;
struct _1eb0210cd_FreeExprModel;
struct _1eb021b6c_RetType;
struct _1eb022343_Param;
struct _1eb023b80_Fn;
struct _1eb025962_ParamIns;
struct _1eb026831_FnIns;
struct _1d04e218b_ReferenceStack;
struct _1d04e3533_Pass;
struct _1d04e79cc_symbolBuilder;
struct _1d04ed4a5_Trait;
struct _1d04eeb05_EnumItem;
struct _1d05005ea_Enum;
struct _1d050162e_TypeEnumItem;
struct _1d0501be5_TypeEnum;
struct _1d0504225_constraintChecker;
struct _1d050615b_Impl;
struct _1d050b1b6_Scope;
struct _1d050b5b2_If;
struct _1d050b89d_Else;
struct _1d050bc22_Conditional;
struct _1d050c00d_InfIter;
struct _1d050c481_WhileIter;
struct _1d050cd66_RangeIter;
struct _1d050d262_ContSt;
struct _1d050d619_BreakSt;
struct _1d050d905_Label;
struct _1d050dbe1_GotoSt;
struct _1d050e098_Postfix;
struct _1d050e51b_Assign;
struct _1d050e8c3_MultiAssign;
struct _1d050ee12_Match;
struct _1d051095c_Case;
struct _1d0511012_FallSt;
struct _1d0511386_RetSt;
struct _1d0511991_scopeLabel;
struct _1d0511e14_scopeGoto;
struct _1d0512c28_scopeChecker;
struct _1d052383d_directiveChecker;
struct _1d05298bb_ImportInfo;
struct _1d052c825_Package;
struct _1d0532a17_Sema;
struct _1d054cd1d_missingRetChecker;
struct _1d054e9ce_IterRelation;
struct _1d0550a13_Var;
struct _1d05517b1_FuncPattern;
struct _1d058233b_typeCompatibilityChecker;
struct _1d0583e64_assignTypeChecker;
struct _1d0585949_dynamicTypeAnnotation;
struct _1d058a311_fnCallArgChecker;
struct _1d058cc1a_structLitChecker;
struct _1d058e7ee_rangeChecker;
struct _1d0591889_retTypeChecker;
struct _1d0593748_SymbolTable;
struct _1d0598572_Data;
struct _1d05995ea_Value;
struct _1d059a0e0_Eval;
struct _1d05b5e85_unaryEval;
struct _1d05b7c23_binaryEval;
struct _1d05c2cc7_InsGeneric;
struct _1d05c3811_TypeAlias;
struct _1d05c4504_TypeKind;
struct _1d05c88d2_TypeSymbol;
struct _1d05c9251_Prim;
struct _1d05cc9d5_Sptr;
struct _1d05cd442_Slc;
struct _1d05cdec0_Tuple;
struct _1d05ce9e8_Map;
struct _1d05d05dc_Arr;
struct _1d05d1049_Ptr;
struct _1d05d1e90_referencer;
struct _1d05d2d70_typeChecker;
struct _1d05da581_identTypeLookup;
struct _1b7bd9060_FileInfo;
struct _1b7c32b7a_stmt;
struct _1b7c334a5_scopeParser;
struct _1b7c3e9bc_exprBuilder;
struct _1b7c4b2c0_assignInfo;
struct _1b7c4eaed_parser;
struct _1b7c60812_typeBuilder;
struct _1d0773395_CompileInfo;
struct _1d07746e8_directiveEval;
struct _1b7b56cbe_JuleImporter;
struct _1d0973210_OrderedDefines;
struct _1b6c9a3ca_defineOrderer;
struct _1b7d39303_liveTable;
struct _1b7d6ee4e_scopeDeadCode;
struct _1b7d73da9_exprDeadCode;
struct _1d068d832_UnsafeBinopExprModel;
struct _1d068db51_UnsafeIndexingExprModel;
struct _1d068e019_PushToSliceExprModel;
struct _1d068e5d0_MutSlicingExprModel;
struct _1d068e976_StrInsertBeginExprModel;
struct _1d0690b31_scopeOptimizer;
struct _1d06961ec_exprOptimizer;
struct _1b7c70e1b_Optimizer;
struct _1b7e7e5be_AnsiEscape;
struct _1b7e80d51_Logger;
struct _1a95134e1_AbsTime;
struct _1a9513b84_Time;
struct _1a945957a_scopeCoder;
struct _1a9462220_exprCoder;
struct _1a9471383_deriveCoder;
struct _1a9472807_TestCoder;
struct _1a9474e58_identCoder;
struct _1a94a76e9_SerializationInfo;
struct _1a947cc0d_traitHash;
struct _1a9520e27_customType;
struct _1a9521730_typeCoder;
struct _1a9528160_resultCoder;
struct _1abb707e9_Flag;
struct _1abb7459a_Flag;
struct _1abb77db7_Flag;
struct _1abb7b728_Flag;
struct _1abb80045_Flag;
struct _1a9570ae2_FlagSet;
struct _1ea320268_StructIns;
struct _1b7d395bc_ObjectDeadCode;
struct _1a951a99e_ObjectCoder;
struct _1b6c04994_IR;
struct _1a95732ba_argParser;
struct _22dbc3e18_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_22dbc3e18_Range16(void) = default;

	inline bool operator==(_22dbc3e18_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22dbc3e18_Range16 _other) { return !this->operator==(_other); }


};
struct _22dbc438b_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_22dbc438b_Range32(void) = default;

	inline bool operator==(_22dbc438b_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22dbc438b_Range32 _other) { return !this->operator==(_other); }


};
struct _22dbc480e_RangeTable {
	jule::Slice<_22dbc3e18_Range16> _field_R16;
	jule::Slice<_22dbc438b_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_22dbc480e_RangeTable(void) = default;


};
struct _22dc8caa3_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_22dc8caa3_acceptRange(void) = default;

	inline bool operator==(_22dc8caa3_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22dc8caa3_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _22dcc5d3e_index(_22dcc58bb_lazyBuff*, jule::I64);
inline void _22dcc60b4_append(_22dcc58bb_lazyBuff*, jule::U8);
inline jule::Str _22dcc6328_string(_22dcc58bb_lazyBuff*);
struct _22dcc58bb_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_22dcc58bb_lazyBuff(void) = default;


};
struct _22b24c131_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_22c0b62c9_Status> _field_Stat;
	

	_22b24c131_DirEntry(void) = default;

	inline bool operator==(_22b24c131_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_22b24c131_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_22b24c131_DirEntry>>> static__22dcc9e31_Read(jule::Str);
inline jule::VoidExceptional static__22dcca140_Create(jule::Str);
inline jule::VoidExceptional static__22dcca34e_Remove(jule::Str);
struct _22b2951e0_Directory {
	

	_22b2951e0_Directory(void) = default;

	inline bool operator==(_22b2951e0_Directory _other) { return true; }

	inline bool operator!=(_22b2951e0_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_22b1e9694_File>> static__22b1ea5da_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__22b1eb93d_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _22b295e5a_Write(_22b1e9694_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _22b1ad180_Read(_22b1e9694_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_22b1e9694_File> static__22b1e9881_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_22b1e9694_File>> static__22b1c8c17_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__22b1c9399_Read(jule::Str);
inline jule::VoidExceptional static__22b24c7e6_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::Exceptional<jule::I64> _22b24cdce_Seek(_22b1e9694_File*, jule::I64, jule::I64);
inline jule::VoidExceptional _22b24d495_Close(_22b1e9694_File*);
struct _22b1e9694_File {
	jule::Uintptr _field_handle = 0;
	

	_22b1e9694_File(void) = default;

	inline bool operator==(_22b1e9694_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_22b1e9694_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_22c0b62c9_Status>> static__22b1c7e14_Of(jule::Str);
inline jule::Bool _22b1c84ca_IsDir(_22c0b62c9_Status*);
inline jule::Bool _22b1ea431_IsReg(_22c0b62c9_Status*);
struct _22c0b62c9_Status {
	jule::U64 _field_Mode = 0;
	jule::U64 _field_Size = 0;
	

	_22c0b62c9_Status(void) = default;

	inline bool operator==(_22c0b62c9_Status _other) {
		return 
			this->_field_Mode == _other._field_Mode &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_22c0b62c9_Status _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21272d230_Cmd> static__21272d65e_New(jule::Str);
inline jule::Exceptional<jule::I64> _21272d8c3_Spawn(_21272d230_Cmd*);
inline jule::Exceptional<jule::I64> _212731794_spawn(_21272d230_Cmd*);
struct _21272d230_Cmd {
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_21272d230_Cmd(void) = default;


};
struct _22ca31eb9_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_22ca31eb9_Log(void) = default;

	inline bool operator==(_22ca31eb9_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_22ca31eb9_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _212a0c663_Prec(_212a0c2ab_Token*);
struct _212a0c2ab_Token {
	jule::Ptr<_212a12646_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_212a0c2ab_Token(void) = default;

	inline bool operator==(_212a0c2ab_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_212a0c2ab_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _212a12a53_IsOk(_212a12646_File*);
inline void _212a12cc8_Fill(_212a12646_File*, jule::Slice<jule::U8>);
inline jule::Str _212a1303c_Dir(_212a12646_File*);
inline jule::Str _212a132a1_Name(_212a12646_File*);
inline jule::Uintptr _212a13515_Addr(_212a12646_File*);
inline jule::Str _212a13823_GetRow(_212a12646_File*, jule::I64);
struct _212a12646_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Tokens;
	

	_212a12646_File(void) = default;


};
struct _212a1469d_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_212a1469d_kindPair(void) = default;

	inline bool operator==(_212a1469d_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_212a1469d_kindPair _other) { return !this->operator==(_other); }


};
inline void _212a1a7a3_pushErr(_212a1a20e_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _212a1aac2_pushErrTok(_212a1a20e_lex*, jule::Ptr<_212a0c2ab_Token>&, jule::Str);
inline void _212a1ac9d_lex(_212a1a20e_lex*);
inline jule::Str _212a1b0ab_id(_212a1a20e_lex*, jule::Slice<jule::U8>&);
inline jule::Slice<jule::U8> _212a1b320_resume(_212a1a20e_lex*);
inline void _212a1b595_lexLineComment(_212a1a20e_lex*, jule::Ptr<_212a0c2ab_Token>&);
inline void _212a1b81a_lexRangeComment(_212a1a20e_lex*, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Str _212a1bb28_num(_212a1a20e_lex*, jule::Slice<jule::U8>&);
inline jule::Str _212a1be36_escapeSeq(_212a1a20e_lex*, jule::Slice<jule::U8>&);
inline jule::Str _212a1c2dd_getRune(_212a1a20e_lex*, jule::Slice<jule::U8>&, jule::Bool);
inline jule::Str _212a1c5eb_lexRune(_212a1a20e_lex*, jule::Slice<jule::U8>&);
inline jule::Str _212a1c860_lexStr(_212a1a20e_lex*);
inline jule::Bool _212a1cac4_isFirstTokenOfLine(_212a1a20e_lex*);
inline void _212a1cca0_newLine(_212a1a20e_lex*);
inline jule::Bool _212a1d29a_isOp(_212a1a20e_lex*, jule::Slice<jule::U8>&, jule::Str, jule::U64, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _212a1d652_lexBasicOps(_212a1a20e_lex*, jule::Slice<jule::U8>, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _212a1da09_lexId(_212a1a20e_lex*, jule::Slice<jule::U8>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _212a1ddb1_lexNum(_212a1a20e_lex*, jule::Slice<jule::U8>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Ptr<_212a0c2ab_Token> _212a1e125_token(_212a1a20e_lex*);
struct _212a1a20e_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_tokens;
	jule::Ptr<_212a12646_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_22ca31eb9_Log> _field_errors;
	

	_212a1a20e_lex(void) = default;


};
struct _1ea2be217_Ast {
	jule::Ptr<_212a12646_File> _field_File;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ea31ad57_UseDecl>> _field_UseDecls;
	jule::Slice<_1ea2c0009_Node> _field_Nodes;
	

	_1ea2be217_Ast(void) = default;


};
struct _1ea2c0009_Node {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1ea2c0009_Node(void) = default;

	inline bool operator==(_1ea2c0009_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ea2c0009_Node _other) { return !this->operator==(_other); }


};
struct _1ea2c0405_Directive {
	jule::Ptr<_212a0c2ab_Token> _field_Tag;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Args;
	

	_1ea2c0405_Directive(void) = default;


};
struct _1ea30369c_TypeDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1ea30369c_TypeDecl(void) = default;

	inline bool operator==(_1ea30369c_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ea30369c_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea3040c6_IsPrim(_1ea303c63_IdentTypeDecl*);
struct _1ea303c63_IdentTypeDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _field_Generics;
	

	_1ea303c63_IdentTypeDecl(void) = default;


};
struct _1ea3043b2_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1ea303c63_IdentTypeDecl>> _field_Idents;
	

	_1ea3043b2_SubIdentTypeDecl(void) = default;


};
struct _1ea304769_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Idents;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	

	_1ea304769_NamespaceTypeDecl(void) = default;


};
struct _1ea304a55_SptrTypeDecl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Elem;
	

	_1ea304a55_SptrTypeDecl(void) = default;

	inline bool operator==(_1ea304a55_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ea304a55_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ea304e51_SlcTypeDecl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Elem;
	

	_1ea304e51_SlcTypeDecl(void) = default;

	inline bool operator==(_1ea304e51_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ea304e51_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ea30523c_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _field_Types;
	

	_1ea30523c_TupleTypeDecl(void) = default;


};
inline jule::Bool _1ea30587a_IsUnsafe(_1ea305528_PtrTypeDecl*);
struct _1ea305528_PtrTypeDecl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Elem;
	

	_1ea305528_PtrTypeDecl(void) = default;

	inline bool operator==(_1ea305528_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1ea305528_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea306084_AutoSized(_1ea305baa_ArrTypeDecl*);
struct _1ea305baa_ArrTypeDecl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Elem;
	jule::Ptr<_1ea307bbd_Expr> _field_Size;
	

	_1ea305baa_ArrTypeDecl(void) = default;

	inline bool operator==(_1ea305baa_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1ea305baa_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ea306408_MapTypeDecl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Key;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Val;
	

	_1ea306408_MapTypeDecl(void) = default;

	inline bool operator==(_1ea306408_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1ea306408_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1ea3067b0_RetTypeDecl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Idents;
	

	_1ea3067b0_RetTypeDecl(void) = default;


};
struct _1ea307bbd_Expr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1ea307bbd_Expr(void) = default;

	inline bool operator==(_1ea307bbd_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ea307bbd_Expr _other) { return !this->operator==(_other); }


};
struct _1ea307ea9_RangeExpr {
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea307ea9_RangeExpr(void) = default;

	inline bool operator==(_1ea307ea9_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea307ea9_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1ea30855e_UseExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea30855e_UseExpr(void) = default;

	inline bool operator==(_1ea30855e_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea30855e_UseExpr _other) { return !this->operator==(_other); }


};
struct _1ea30884a_TupleExpr {
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_Expr;
	

	_1ea30884a_TupleExpr(void) = default;


};
inline jule::Bool _1ea309054_IsNil(_1ea308c02_LitExpr*);
struct _1ea308c02_LitExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Value;
	

	_1ea308c02_LitExpr(void) = default;

	inline bool operator==(_1ea308c02_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1ea308c02_LitExpr _other) { return !this->operator==(_other); }


};
struct _1ea30940b_UnsafeExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea30940b_UnsafeExpr(void) = default;

	inline bool operator==(_1ea30940b_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea30940b_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea309bd1_IsSelf(_1ea30987e_IdentExpr*);
struct _1ea30987e_IdentExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1ea30987e_IdentExpr(void) = default;

	inline bool operator==(_1ea30987e_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1ea30987e_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1ea30a088_UnaryExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Op;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea30a088_UnaryExpr(void) = default;

	inline bool operator==(_1ea30a088_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea30a088_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1ea30a440_VariadicExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea30a440_VariadicExpr(void) = default;

	inline bool operator==(_1ea30a440_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea30a440_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1ea30a7e7_CastExpr {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea30a7e7_CastExpr(void) = default;

	inline bool operator==(_1ea30a7e7_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea30a7e7_CastExpr _other) { return !this->operator==(_other); }


};
struct _1ea30ab9e_NsSelectionExpr {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Ns;
	jule::Ptr<_212a0c2ab_Token> _field_Ident;
	

	_1ea30ab9e_NsSelectionExpr(void) = default;


};
struct _1ea30b122_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Ptr<_212a0c2ab_Token> _field_Ident;
	

	_1ea30b122_SubIdentExpr(void) = default;

	inline bool operator==(_1ea30b122_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ea30b122_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1ea30b595_BinopExpr {
	jule::Ptr<_1ea307bbd_Expr> _field_Left;
	jule::Ptr<_1ea307bbd_Expr> _field_Right;
	jule::Ptr<_212a0c2ab_Token> _field_Op;
	

	_1ea30b595_BinopExpr(void) = default;

	inline bool operator==(_1ea30b595_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ea30b595_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea30c013_Unhandled(_1ea30bba0_FnCallExpr*);
inline jule::Bool _1ea30c277_Ignored(_1ea30bba0_FnCallExpr*);
struct _1ea30bba0_FnCallExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_Args;
	jule::Ptr<_1ea313635_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1ea30bba0_FnCallExpr(void) = default;


};
inline jule::Bool _1ea30c981_IsTargeted(_1ea30c62e_FieldExprPair*);
struct _1ea30c62e_FieldExprPair {
	jule::Ptr<_212a0c2ab_Token> _field_Field;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea30c62e_FieldExprPair(void) = default;

	inline bool operator==(_1ea30c62e_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea30c62e_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1ea30cd7c_StructLit {
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_Exprs;
	

	_1ea30cd7c_StructLit(void) = default;


};
inline jule::Bool _1ea30d652_IsEmpty(_1ea30d300_BraceLit*);
struct _1ea30d300_BraceLit {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_Exprs;
	

	_1ea30d300_BraceLit(void) = default;


};
struct _1ea30dac5_KeyValPair {
	jule::Ptr<_1ea307bbd_Expr> _field_Key;
	jule::Ptr<_1ea307bbd_Expr> _field_Val;
	jule::Ptr<_212a0c2ab_Token> _field_Colon;
	

	_1ea30dac5_KeyValPair(void) = default;

	inline bool operator==(_1ea30dac5_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1ea30dac5_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea30e5dc_IsEmpty(_1ea30e2ac_SliceExpr*);
struct _1ea30e2ac_SliceExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_Exprs;
	

	_1ea30e2ac_SliceExpr(void) = default;


};
struct _1ea30eb2b_IndexingExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Ptr<_1ea307bbd_Expr> _field_Index;
	

	_1ea30eb2b_IndexingExpr(void) = default;

	inline bool operator==(_1ea30eb2b_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1ea30eb2b_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1ea310236_SlicingExpr {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Ptr<_1ea307bbd_Expr> _field_Start;
	jule::Ptr<_1ea307bbd_Expr> _field_To;
	

	_1ea310236_SlicingExpr(void) = default;

	inline bool operator==(_1ea310236_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1ea310236_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1ea310522_Constraint {
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _field_Mask;
	

	_1ea310522_Constraint(void) = default;


};
struct _1ea310995_GenericDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ea310522_Constraint> _field_Constraint;
	

	_1ea310995_GenericDecl(void) = default;

	inline bool operator==(_1ea310995_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1ea310995_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1ea310d4c_LabelSt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1ea310d4c_LabelSt(void) = default;

	inline bool operator==(_1ea310d4c_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ea310d4c_LabelSt _other) { return !this->operator==(_other); }


};
struct _1ea311204_GotoSt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_Label;
	

	_1ea311204_GotoSt(void) = default;

	inline bool operator==(_1ea311204_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ea311204_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ea3114e0_FallSt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	

	_1ea3114e0_FallSt(void) = default;

	inline bool operator==(_1ea3114e0_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1ea3114e0_FallSt _other) { return !this->operator==(_other); }


};
struct _1ea311aea_AssignLeft {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea311aea_AssignLeft(void) = default;

	inline bool operator==(_1ea311aea_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea311aea_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1ea312139_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_212a0c2ab_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ea311aea_AssignLeft>> _field_Left;
	jule::Ptr<_1ea307bbd_Expr> _field_Right;
	

	_1ea312139_AssignSt(void) = default;


};
struct _1ea31302a_Stmt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1ea31302a_Stmt(void) = default;

	inline bool operator==(_1ea31302a_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1ea31302a_Stmt _other) { return !this->operator==(_other); }


};
struct _1ea313635_ScopeTree {
	jule::Ptr<_1ea313635_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1ea31302a_Stmt> _field_Stmts;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	

	_1ea313635_ScopeTree(void) = default;


};
inline jule::Bool _1ea31416e_IsSelf(_1ea313d0b_ParamDecl*);
inline jule::Bool _1ea3143d3_IsRef(_1ea313d0b_ParamDecl*);
struct _1ea313d0b_ParamDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1ea313d0b_ParamDecl(void) = default;

	inline bool operator==(_1ea313d0b_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ea313d0b_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea31547d_IsAnon(_1ea31512b_FnDecl*);
struct _1ea31512b_FnDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_Directives;
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _field_Generics;
	jule::Ptr<_1ea3067b0_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>> _field_Params;
	

	_1ea31512b_FnDecl(void) = default;


};
struct _1ea31610a_VarDecl {
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_Directives;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea31610a_VarDecl(void) = default;


};
struct _1ea3164b2_RetSt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea3164b2_RetSt(void) = default;

	inline bool operator==(_1ea3164b2_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea3164b2_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea316e74_IsInf(_1ea316b22_Iter*);
struct _1ea316b22_Iter {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	

	_1ea316b22_Iter(void) = default;

	inline bool operator==(_1ea316b22_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ea316b22_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea317749_IsWhileNext(_1ea3173e7_WhileKind*);
struct _1ea3173e7_WhileKind {
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_212a0c2ab_Token> _field_NextToken;
	

	_1ea3173e7_WhileKind(void) = default;

	inline bool operator==(_1ea3173e7_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1ea3173e7_WhileKind _other) { return !this->operator==(_other); }


};
struct _1ea317c88_RangeKind {
	jule::Ptr<_212a0c2ab_Token> _field_InToken;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Ptr<_1ea31610a_VarDecl> _field_KeyA;
	jule::Ptr<_1ea31610a_VarDecl> _field_KeyB;
	

	_1ea317c88_RangeKind(void) = default;

	inline bool operator==(_1ea317c88_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ea317c88_RangeKind _other) { return !this->operator==(_other); }


};
struct _1ea318140_BreakSt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_Label;
	

	_1ea318140_BreakSt(void) = default;

	inline bool operator==(_1ea318140_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ea318140_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ea3184e7_ContSt {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_Label;
	

	_1ea3184e7_ContSt(void) = default;

	inline bool operator==(_1ea3184e7_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ea3184e7_ContSt _other) { return !this->operator==(_other); }


};
struct _1ea31896a_If {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	

	_1ea31896a_If(void) = default;

	inline bool operator==(_1ea31896a_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ea31896a_If _other) { return !this->operator==(_other); }


};
struct _1ea318d22_Else {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	

	_1ea318d22_Else(void) = default;

	inline bool operator==(_1ea318d22_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ea318d22_Else _other) { return !this->operator==(_other); }


};
struct _1ea319295_Conditional {
	jule::Ptr<_1ea31896a_If> _field_Head;
	jule::Slice<jule::Ptr<_1ea31896a_If>> _field_Tail;
	jule::Ptr<_1ea318d22_Else> _field_Default;
	

	_1ea319295_Conditional(void) = default;


};
struct _1ea31996b_TypeAliasDecl {
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	

	_1ea31996b_TypeAliasDecl(void) = default;

	inline bool operator==(_1ea31996b_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ea31996b_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1ea319dde_Case {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_Exprs;
	

	_1ea319dde_Case(void) = default;


};
struct _1ea31a5b5_MatchCase {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ea319dde_Case>> _field_Cases;
	jule::Ptr<_1ea318d22_Else> _field_Default;
	

	_1ea31a5b5_MatchCase(void) = default;


};
struct _1ea31ad57_UseDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1ea31ad57_UseDecl(void) = default;


};
inline jule::Bool _1ea31b62c_AutoExpr(_1ea31b2ca_EnumItemDecl*);
struct _1ea31b2ca_EnumItemDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	

	_1ea31b2ca_EnumItemDecl(void) = default;

	inline bool operator==(_1ea31b2ca_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ea31b2ca_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ea31c386_DefaultTyped(_1ea31bd03_EnumDecl*);
struct _1ea31bd03_EnumDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>> _field_Items;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	

	_1ea31bd03_EnumDecl(void) = default;


};
struct _1ea31c809_TypeEnumItemDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	

	_1ea31c809_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1ea31c809_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1ea31c809_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1ea31ce14_TypeEnumDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	

	_1ea31ce14_TypeEnumDecl(void) = default;


};
struct _1ea31d112_FieldDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Kind;
	jule::Ptr<_1ea307bbd_Expr> _field_Default;
	

	_1ea31d112_FieldDecl(void) = default;

	inline bool operator==(_1ea31d112_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ea31d112_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1ea31d8b5_StructDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ea31d112_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _field_Generics;
	

	_1ea31d8b5_StructDecl(void) = default;


};
struct _1ea31dec0_TraitDecl {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1ea31512b_FnDecl>> _field_Methods;
	

	_1ea31dec0_TraitDecl(void) = default;


};
inline jule::Bool _1ea31e93d_IsTraitImpl(_1ea31e5ca_Impl*);
inline jule::Bool _1ea31eba2_IsStructImpl(_1ea31e5ca_Impl*);
struct _1ea31e5ca_Impl {
	jule::Ptr<_212a0c2ab_Token> _field_End;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Base;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ea31512b_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ea31610a_VarDecl>> _field_Statics;
	

	_1ea31e5ca_Impl(void) = default;


};
struct _22c00d485_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_22c00d485_floatInfo(void) = default;

	inline bool operator==(_22c00d485_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_22c00d485_floatInfo _other) { return !this->operator==(_other); }


};
struct _1eaed9041_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1eaed9041_decimalSlice(void) = default;


};
struct _1eaee558b_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1eaee558b_leftCheat(void) = default;

	inline bool operator==(_1eaee558b_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1eaee558b_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1eaedd0cd_set(_1eaee605e_decimal*, jule::Str);
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_u64__jule_tuple_bool _1eaedd3db_floatBits(_1eaee605e_decimal*, _22c00d485_floatInfo&);
inline void _1eaee6438_assign(_1eaee605e_decimal*, jule::U64);
inline void _1eaee66ad_shift(_1eaee605e_decimal*, jule::I64);
inline void _1eaee6933_roundDown(_1eaee605e_decimal*, jule::I64);
inline void _1eaee6ba8_roundUp(_1eaee605e_decimal*, jule::I64);
inline void _1eaee6e2d_round(_1eaee605e_decimal*, jule::I64);
inline jule::U64 _1eaee7192_roundedInteger(_1eaee605e_decimal*);
struct _1eaee605e_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1eaee605e_decimal(void) = default;

	inline bool operator==(_1eaee605e_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1eaee605e_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1eb0095b1_Const> static__1eb009a34_NewI64(jule::I64);
inline jule::Ptr<_1eb0095b1_Const> static__1eb009ccb_NewU64(jule::U64);
inline jule::Ptr<_1eb0095b1_Const> static__1eb00a073_NewBool(jule::Bool);
inline jule::Ptr<_1eb0095b1_Const> static__1eb00a31a_NewStr(jule::Str);
inline jule::Ptr<_1eb0095b1_Const> static__1eb00a5b2_NewF64(jule::F64);
inline jule::Ptr<_1eb0095b1_Const> static__1eb00a7b0_NewNil(void);
inline jule::I64 _1eb00ada9_ReadI64(_1eb0095b1_Const*);
inline jule::U64 _1eb00b11d_ReadU64(_1eb0095b1_Const*);
inline jule::Bool _1eb00b382_ReadBool(_1eb0095b1_Const*);
inline jule::Str _1eb00b5e6_ReadStr(_1eb0095b1_Const*);
inline jule::F64 _1eb00b85a_ReadF64(_1eb0095b1_Const*);
inline jule::I64 _1eb00babe_AsI64(_1eb0095b1_Const*);
inline jule::U64 _1eb00bd33_AsU64(_1eb0095b1_Const*);
inline jule::F64 _1eb00c097_AsF64(_1eb0095b1_Const*);
inline void _1eb00c31c_SetI64(_1eb0095b1_Const*, jule::I64);
inline void _1eb00c592_SetU64(_1eb0095b1_Const*, jule::U64);
inline void _1eb00c817_SetBool(_1eb0095b1_Const*, jule::Bool);
inline void _1eb00ca8c_SetStr(_1eb0095b1_Const*, jule::Str);
inline void _1eb00cd12_SetF64(_1eb0095b1_Const*, jule::F64);
inline void _1eb00cedd_SetNil(_1eb0095b1_Const*);
inline jule::Bool _1eb00d252_IsI64(_1eb0095b1_Const*);
inline jule::Bool _1eb00d4b6_IsU64(_1eb0095b1_Const*);
inline jule::Bool _1eb00d72a_IsBool(_1eb0095b1_Const*);
inline jule::Bool _1eb00d98e_IsStr(_1eb0095b1_Const*);
inline jule::Bool _1eb00dc03_IsF64(_1eb0095b1_Const*);
inline jule::Bool _1eb00de67_IsNil(_1eb0095b1_Const*);
inline jule::Bool _1eb00e275_AreSameTypes(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb00e583_And(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb00e891_Or(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb00eb9e_Eq(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb00eeac_Lt(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb0102ba_LtEq(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb0105c8_Gt(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb0108d6_GtEq(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb010be4_Add(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb011002_Sub(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb011310_Mul(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb01161d_Div(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb01192b_Mod(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb011c39_BitwiseAnd(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb012047_BitwiseOr(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb012355_Xor(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb012663_Lshift(_1eb0095b1_Const*, _1eb0095b1_Const);
inline jule::Bool _1eb012971_Rshift(_1eb0095b1_Const*, _1eb0095b1_Const);
struct _1eb0095b1_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1eb0095b1_Const(void) = default;

	inline jule::Bool operator==(_1eb0095b1_Const _other) { return _1eb00eb9e_Eq(this, _other); }

	inline bool operator!=(_1eb0095b1_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1eb0095b1_Const _other) { return _1eb0105c8_Gt(this, _other); }

	inline jule::Bool operator>=(_1eb0095b1_Const _other) { return _1eb0108d6_GtEq(this, _other); }

	inline jule::Bool operator<(_1eb0095b1_Const _other) { return _1eb00eeac_Lt(this, _other); }

	inline jule::Bool operator<=(_1eb0095b1_Const _other) { return _1eb0102ba_LtEq(this, _other); }


};
inline jule::Ptr<_1ea32007b_FieldIns> _1ea2cb642_instance(jule::Ptr<_1ea2e3deb_Field>);
struct _1ea2e3deb_Field {
	jule::Ptr<_1ea31ed8e_Struct> _field_Owner;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	jule::Ptr<_1ea307bbd_Expr> _field_Default;
	

	_1ea2e3deb_Field(void) = default;

	inline bool operator==(_1ea2e3deb_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ea2e3deb_Field _other) { return !this->operator==(_other); }


};
struct _1ea2eb541_Operators {
	jule::Ptr<_1eb026831_FnIns> _field_Eq;
	jule::Ptr<_1eb026831_FnIns> _field_Gt;
	jule::Ptr<_1eb026831_FnIns> _field_GtEq;
	jule::Ptr<_1eb026831_FnIns> _field_Lt;
	jule::Ptr<_1eb026831_FnIns> _field_LtEq;
	jule::Ptr<_1eb026831_FnIns> _field_Shl;
	jule::Ptr<_1eb026831_FnIns> _field_Shr;
	jule::Ptr<_1eb026831_FnIns> _field_Add;
	jule::Ptr<_1eb026831_FnIns> _field_Sub;
	jule::Ptr<_1eb026831_FnIns> _field_Div;
	jule::Ptr<_1eb026831_FnIns> _field_Mul;
	jule::Ptr<_1eb026831_FnIns> _field_Mod;
	jule::Ptr<_1eb026831_FnIns> _field_BitAnd;
	jule::Ptr<_1eb026831_FnIns> _field_BitOr;
	jule::Ptr<_1eb026831_FnIns> _field_BitXor;
	jule::Ptr<_1eb026831_FnIns> _field_Neg;
	jule::Ptr<_1eb026831_FnIns> _field_Pos;
	jule::Ptr<_1eb026831_FnIns> _field_BitNot;
	jule::Ptr<_1eb026831_FnIns> _field_AddAssign;
	jule::Ptr<_1eb026831_FnIns> _field_SubAssign;
	jule::Ptr<_1eb026831_FnIns> _field_DivAssign;
	jule::Ptr<_1eb026831_FnIns> _field_MulAssign;
	jule::Ptr<_1eb026831_FnIns> _field_ModAssign;
	jule::Ptr<_1eb026831_FnIns> _field_ShlAssign;
	jule::Ptr<_1eb026831_FnIns> _field_ShrAssign;
	jule::Ptr<_1eb026831_FnIns> _field_BitOrAssign;
	jule::Ptr<_1eb026831_FnIns> _field_BitAndAssign;
	jule::Ptr<_1eb026831_FnIns> _field_BitXorAssign;
	

	_1ea2eb541_Operators(void) = default;

	inline bool operator==(_1ea2eb541_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1ea2eb541_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea320268_StructIns> _1ea2d0415_instance(jule::Ptr<_1ea31ed8e_Struct>);
inline jule::Ptr<_1ea320268_StructIns> _1ea2d116e_appendInstance(_1ea31ed8e_Struct*, jule::Ptr<_1ea320268_StructIns>&);
inline jule::Ptr<_1eb023b80_Fn> _1ea2d42c6_FindMethod(_1ea31ed8e_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1d0550a13_Var> _1ea2d3726_FindStatic(_1ea31ed8e_Struct*, jule::Str);
inline jule::Ptr<_1ea2e3deb_Field> _1ea2d5b02_FindField(_1ea31ed8e_Struct*, jule::Str);
inline jule::Bool _1ea2d4ded_IsImplements(_1ea31ed8e_Struct*, jule::Ptr<_1d04ed4a5_Trait>);
inline jule::Bool _1ea2d8dbe_IsDerives(_1ea31ed8e_Struct*, jule::Str);
inline jule::Bool _1ea2d9584_IsUses(_1ea31ed8e_Struct*, jule::Ptr<_1ea31ed8e_Struct>);
inline jule::Bool _1ea2dea51_HasRefAccessible(_1ea31ed8e_Struct*);
struct _1ea31ed8e_Struct {
	jule::Ptr<_1d0532a17_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _field_Uses;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ea2e3deb_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1eb023b80_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1d04ed4a5_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ea320268_StructIns>> _field_Instances;
	

	_1ea31ed8e_Struct(void) = default;


};
struct _1ea32007b_FieldIns {
	jule::Ptr<_1ea2e3deb_Field> _field_Decl;
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Ptr<_1d0598572_Data> _field_Default;
	

	_1ea32007b_FieldIns(void) = default;

	inline bool operator==(_1ea32007b_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1ea32007b_FieldIns _other) { return !this->operator==(_other); }


};
struct _1eb0153d0_OperandExprModel {
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1eb0153d0_OperandExprModel(void) = default;

	inline bool operator==(_1eb0153d0_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1eb0153d0_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1eb015897_BinopExprModel {
	jule::Ptr<_1eb0153d0_OperandExprModel> _field_Left;
	jule::Ptr<_1eb0153d0_OperandExprModel> _field_Right;
	jule::Ptr<_212a0c2ab_Token> _field_Op;
	

	_1eb015897_BinopExprModel(void) = default;

	inline bool operator==(_1eb015897_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1eb015897_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1eb015c4e_UnaryExprModel {
	jule::Ptr<_1d0598572_Data> _field_Expr;
	jule::Ptr<_212a0c2ab_Token> _field_Op;
	

	_1eb015c4e_UnaryExprModel(void) = default;

	inline bool operator==(_1eb015c4e_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1eb015c4e_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01614a_StructArgExprModel {
	jule::Ptr<_1ea32007b_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb01614a_StructArgExprModel(void) = default;

	inline bool operator==(_1eb01614a_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb01614a_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1eb016502_StructLitExprModel {
	jule::Ptr<_1ea320268_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1eb01614a_StructArgExprModel>> _field_Args;
	

	_1eb016502_StructLitExprModel(void) = default;


};
struct _1eb016810_AllocStructLitExprModel {
	jule::Ptr<_1eb016502_StructLitExprModel> _field_Lit;
	

	_1eb016810_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1eb016810_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1eb016810_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1eb016d60_CastingExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Ptr<_1d05c4504_TypeKind> _field_ExprKind;
	

	_1eb016d60_CastingExprModel(void) = default;

	inline bool operator==(_1eb016d60_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1eb016d60_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1eb017712_FnCallExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1eb026831_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1d050b1b6_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1eb017712_FnCallExprModel(void) = default;


};
struct _1eb017ab9_SliceExprModel {
	jule::Ptr<_1d05c4504_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1eb017ab9_SliceExprModel(void) = default;


};
struct _1eb01803c_IndexingExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1d0598572_Data> _field_Expr;
	jule::Ptr<_1d0598572_Data> _field_Index;
	

	_1eb01803c_IndexingExprModel(void) = default;

	inline bool operator==(_1eb01803c_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1eb01803c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1eb0183e4_AnonFnExprModel {
	jule::Ptr<_1eb026831_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1eb0183e4_AnonFnExprModel(void) = default;

	inline bool operator==(_1eb0183e4_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1eb0183e4_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01879b_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1eb01879b_KeyValPairExprModel(void) = default;

	inline bool operator==(_1eb01879b_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1eb01879b_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1eb018c1e_MapExprModel {
	jule::Ptr<_1d05c4504_TypeKind> _field_KeyKind;
	jule::Ptr<_1d05c4504_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1eb01879b_KeyValPairExprModel>> _field_Entries;
	

	_1eb018c1e_MapExprModel(void) = default;


};
struct _1eb01925d_SlicingExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1eb01925d_SlicingExprModel(void) = default;

	inline bool operator==(_1eb01925d_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1eb01925d_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01979c_TraitSubIdentExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1eb023b80_Fn> _field_Method;
	jule::Ptr<_1d04ed4a5_Trait> _field_Trt;
	

	_1eb01979c_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1eb01979c_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1eb01979c_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01a14e_StructSubIdentExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Ptr<_1d0598572_Data> _field_Expr;
	jule::Ptr<_1d05c4504_TypeKind> _field_ExprKind;
	jule::Ptr<_1eb026831_FnIns> _field_Method;
	jule::Ptr<_1ea32007b_FieldIns> _field_Field;
	jule::Ptr<_1ea320268_StructIns> _field_Owner;
	

	_1eb01a14e_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1eb01a14e_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1eb01a14e_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01a4e5_StructStaticIdentExprModel {
	jule::Ptr<_1ea320268_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1eb026831_FnIns> _field_Method;
	

	_1eb01a4e5_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1eb01a4e5_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1eb01a4e5_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01a8ad_ArrayExprModel {
	jule::Ptr<_1d05d05dc_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1eb01a8ad_ArrayExprModel(void) = default;


};
struct _1eb01ab99_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1eb01ab99_CommonIdentExprModel(void) = default;

	inline bool operator==(_1eb01ab99_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1eb01ab99_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01b20a_CommonSubIdentExprModel {
	jule::Ptr<_1d05c4504_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1eb01b20a_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1eb01b20a_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1eb01b20a_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01b507_TupleExprModel {
	jule::Slice<jule::Ptr<_1d0598572_Data>> _field_Datas;
	

	_1eb01b507_TupleExprModel(void) = default;


};
struct _1eb01b8d1_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1eb01b8d1_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1eb01b8d1_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1eb01b8d1_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01bcbb_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1eb01bcbb_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1eb01bcbb_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1eb01bcbb_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01c0da_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb01c0da_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1eb01c0da_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb01c0da_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01c4c5_BuiltinNewCallExprModel {
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1eb01c4c5_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1eb01c4c5_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1eb01c4c5_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01c8b0_BuiltinPanicCallExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb01c8b0_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1eb01c8b0_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb01c8b0_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01cd66_BuiltinAssertCallExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1eb01cd66_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1eb01cd66_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1eb01cd66_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01d31c_BuiltinMakeCallExprModel {
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1eb01d31c_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1eb01d31c_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1eb01d31c_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01d707_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1eb01d707_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1eb01d707_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1eb01d707_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01da26_BuiltinLenCallExprModel {
	jule::Ptr<_1d0598572_Data> _field_Expr;
	

	_1eb01da26_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1eb01da26_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb01da26_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01dd45_BuiltinCapCallExprModel {
	jule::Ptr<_1d0598572_Data> _field_Expr;
	

	_1eb01dd45_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1eb01dd45_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb01dd45_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01e4e9_BuiltinDeleteCallExprModel {
	jule::Ptr<_1d0598572_Data> _field_Dest;
	jule::Ptr<_1d0598572_Data> _field_Key;
	

	_1eb01e4e9_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1eb01e4e9_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1eb01e4e9_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01e85c_BuiltinCopyCallExprModel {
	jule::Ptr<_1d0598572_Data> _field_Dest;
	jule::Ptr<_1d0598572_Data> _field_Src;
	

	_1eb01e85c_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1eb01e85c_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1eb01e85c_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb01ec47_BuiltinErrorCallExprModel {
	jule::Ptr<_1eb026831_FnIns> _field_Func;
	jule::Ptr<_1d0598572_Data> _field_Err;
	

	_1eb01ec47_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1eb01ec47_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1eb01ec47_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1eb020044_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb020044_SizeofExprModel(void) = default;

	inline bool operator==(_1eb020044_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb020044_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1eb020330_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb020330_AlignofExprModel(void) = default;

	inline bool operator==(_1eb020330_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb020330_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1eb02061b_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1eb02061b_RuneExprModel(void) = default;

	inline bool operator==(_1eb02061b_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1eb02061b_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1eb020929_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb020929_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1eb020929_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb020929_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1eb020ce2_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1eb020ce2_BackendEmitExprModel(void) = default;


};
struct _1eb0210cd_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1eb0210cd_FreeExprModel(void) = default;

	inline bool operator==(_1eb0210cd_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1eb0210cd_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1eb021b6c_RetType {
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Idents;
	

	_1eb021b6c_RetType(void) = default;


};
inline jule::Ptr<_1eb025962_ParamIns> _1eb02270b_instance(jule::Ptr<_1eb022343_Param>);
inline jule::Bool _1eb022970_IsSelf(_1eb022343_Param*);
inline jule::Bool _1eb022bd4_IsRef(_1eb022343_Param*);
struct _1eb022343_Param {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1eb022343_Param(void) = default;

	inline bool operator==(_1eb022343_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1eb022343_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1eb0240e2_IsVoid(_1eb023b80_Fn*);
inline jule::Bool _1eb024356_IsMethod(_1eb023b80_Fn*);
inline jule::Bool _1eb0245ba_IsEntryPoint(_1eb023b80_Fn*);
inline jule::Bool _1eb02482e_IsInit(_1eb023b80_Fn*);
inline jule::Bool _1eb024a93_IsAnon(_1eb023b80_Fn*);
inline jule::Bool _1eb024d07_AnyVar(_1eb023b80_Fn*);
inline jule::Ptr<_1eb026831_FnIns> _1eb02506b_instanceForce(jule::Ptr<_1eb023b80_Fn>);
inline jule::Ptr<_1eb026831_FnIns> _1eb0252d0_instance(jule::Ptr<_1eb023b80_Fn>);
inline jule::Ptr<_1eb026831_FnIns> _1eb0255aa_appendInstance(_1eb023b80_Fn*, jule::Ptr<_1eb026831_FnIns>&);
struct _1eb023b80_Fn {
	jule::Ptr<_1d0532a17_Sema> _field_sema;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_Directives;
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _field_Generics;
	jule::Ptr<_1eb021b6c_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1eb022343_Param>> _field_Params;
	jule::Ptr<_1ea31ed8e_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1eb026831_FnIns>> _field_Instances;
	

	_1eb023b80_Fn(void) = default;


};
inline jule::Str _1eb025d3b_Str(_1eb025962_ParamIns*);
struct _1eb025962_ParamIns {
	jule::Ptr<_1eb022343_Param> _field_Decl;
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	

	_1eb025962_ParamIns(void) = default;

	inline bool operator==(_1eb025962_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1eb025962_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1eb026b61_Str(_1eb026831_FnIns*);
inline jule::Bool _1eb026e6e_Equal(jule::Ptr<_1eb026831_FnIns>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1eb0273d1_EqualFn(jule::Ptr<_1eb026831_FnIns>, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Bool _1eb0276de_equalTrait(jule::Ptr<_1eb026831_FnIns>, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _1eb027953_Types(_1eb026831_FnIns*);
inline jule::Bool _1eb027bb7_IsBuiltin(_1eb026831_FnIns*);
inline jule::Bool _1eb027e2b_IsAnon(_1eb026831_FnIns*);
inline jule::Bool _1eb028239_Same(_1eb026831_FnIns*, jule::Ptr<_1eb026831_FnIns>);
inline jule::Str _1eb028547_GetKindStr(_1eb026831_FnIns*, jule::Bool);
struct _1eb026831_FnIns {
	jule::Ptr<_1ea320268_StructIns> _field_Owner;
	jule::Ptr<_1eb023b80_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1d05c2cc7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1eb025962_ParamIns>> _field_Params;
	jule::Ptr<_1d05c4504_TypeKind> _field_Result;
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	jule::Ptr<_1d04e218b_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1eb026831_FnIns(void) = default;


};
inline jule::Ptr<_1d04e218b_ReferenceStack> static__1d04e2455_new(void);
inline jule::I64 _1d04e27da_Len(_1d04e218b_ReferenceStack*);
inline jule::Any _1d04e2ae8_At(_1d04e218b_ReferenceStack*, jule::I64);
inline void _1d04e2d6d_Push(_1d04e218b_ReferenceStack*, jule::Any);
inline jule::Bool _1ab0077db_Exist(_1d04e218b_ReferenceStack*, jule::Ptr<_1eb026831_FnIns>);
inline jule::Bool _1ab01b79a_Exist(_1d04e218b_ReferenceStack*, jule::Ptr<_1d0550a13_Var>);
inline jule::Bool _1aa18be6b_Exist(_1d04e218b_ReferenceStack*, jule::Ptr<_1ea320268_StructIns>);
inline jule::Bool _1ab2d73d4_Exist(_1d04e218b_ReferenceStack*, jule::Ptr<_1d04ed4a5_Trait>);
struct _1d04e218b_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1d04e218b_ReferenceStack(void) = default;


};
struct _1d04e3533_Pass {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Text;
	

	_1d04e3533_Pass(void) = default;

	inline bool operator==(_1d04e3533_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1d04e3533_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d04e79cc_symbolBuilder> _1d04e7e83_getRoot(jule::Ptr<_1d04e79cc_symbolBuilder>);
inline void _1d04e834b_pushErr(_1d04e79cc_symbolBuilder*, jule::Ptr<_212a0c2ab_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1d04e8714_pushErrText(_1d04e79cc_symbolBuilder*, jule::Ptr<_212a0c2ab_Token>&, jule::Str, jule::Slice<jule::Any>);
inline void _1d04e8a33_pushSuggestion(_1d04e79cc_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d04e8dda_checkCppUseDeclPath(_1d04e79cc_symbolBuilder*, jule::Ptr<_1ea31ad57_UseDecl>&, jule::Str);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e91b5_buildCppHeaderImport(_1d04e79cc_symbolBuilder*, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e94c3_buildStdImport(_1d04e79cc_symbolBuilder*, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e97d1_buildIdentImport(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e9ade_buildImport(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Bool _1d04e9dec_checkDuplicateUseDecl(_1d04e79cc_symbolBuilder*, jule::Ptr<_1d05298bb_ImportInfo>&);
inline void _1d04ea21b_implImportSelections(_1d04e79cc_symbolBuilder*, jule::Ptr<_1d05298bb_ImportInfo>&, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Str _1d04ea529_getAsLinkPath(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Str);
inline void _1d04ea8e2_pushCycleError(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1d04e79cc_symbolBuilder>&, jule::Str, jule::Str&);
inline void _1d04eacaa_pushCrossCycleError(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1d04e79cc_symbolBuilder>&, jule::Ptr<_1d05298bb_ImportInfo>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1d04eb162_checkImportCycles(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1d05298bb_ImportInfo>, jule::Ptr<_1ea31ad57_UseDecl>&);
inline void _1d04eb54c_checkPackageAccessibility(_1d04e79cc_symbolBuilder*, jule::Ptr<_1ea31ad57_UseDecl>&, jule::Str&, jule::Str&);
inline jule::Bool _1d04eb915_importPackage(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1d05298bb_ImportInfo>&, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d04ebc23_importUseDecl(jule::Ptr<_1d04e79cc_symbolBuilder>, jule::Ptr<_1ea31ad57_UseDecl>&);
inline void _1d04ebdee_importUseDecls(jule::Ptr<_1d04e79cc_symbolBuilder>);
inline void _1d04ec174_appendNode(_1d04e79cc_symbolBuilder*, _1ea2c0009_Node&);
inline void _1d04ec350_appendNodes(_1d04e79cc_symbolBuilder*);
inline void _1d04ec5c5_pushDirectivePass(_1d04e79cc_symbolBuilder*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d04ec7a1_appendTopDirectives(_1d04e79cc_symbolBuilder*);
inline void _1d04ec97c_build(jule::Ptr<_1d04e79cc_symbolBuilder>);
struct _1d04e79cc_symbolBuilder {
	jule::Ptr<_1d04e79cc_symbolBuilder> _field_owner;
	jule::Trait<_1d0526c4d_Importer> _field_importer;
	jule::Slice<_22ca31eb9_Log> _field_errors;
	jule::Ptr<_1ea2be217_Ast> _field_ast;
	jule::Ptr<_1d0593748_SymbolTable> _field_table;
	

	_1d04e79cc_symbolBuilder(void) = default;


};
inline jule::Str _1d04ed8a1_Str(_1d04ed4a5_Trait*);
inline jule::Bool _1d04edbae_Equal(jule::Ptr<_1d04ed4a5_Trait>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1d04ee022_IsBuiltin(_1d04ed4a5_Trait*);
inline jule::Ptr<_1eb023b80_Fn> _1d04ee330_FindMethod(_1d04ed4a5_Trait*, jule::Str);
struct _1d04ed4a5_Trait {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1eb023b80_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _field_Implemented;
	

	_1d04ed4a5_Trait(void) = default;


};
inline jule::Bool _1d04eeee0_AutoExpr(_1d04eeb05_EnumItem*);
struct _1d04eeb05_EnumItem {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05995ea_Value> _field_Value;
	

	_1d04eeb05_EnumItem(void) = default;

	inline bool operator==(_1d04eeb05_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1d04eeb05_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1d050095d_Str(_1d05005ea_Enum*);
inline jule::Bool _1d0500c6b_Equal(jule::Ptr<_1d05005ea_Enum>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Ptr<_1d04eeb05_EnumItem> _1d05011ab_FindItem(_1d05005ea_Enum*, jule::Str);
struct _1d05005ea_Enum {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>> _field_Items;
	

	_1d05005ea_Enum(void) = default;


};
struct _1d050162e_TypeEnumItem {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	

	_1d050162e_TypeEnumItem(void) = default;

	inline bool operator==(_1d050162e_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d050162e_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1d0502025_Str(_1d0501be5_TypeEnum*);
inline jule::Bool _1d0502333_Equal(jule::Ptr<_1d0501be5_TypeEnum>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Ptr<_1d050162e_TypeEnumItem> _1d050272e_FindItem(_1d0501be5_TypeEnum*, jule::Str);
struct _1d0501be5_TypeEnum {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>> _field_Items;
	

	_1d0501be5_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1d0532a17_Sema>&,jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&)> _1d0504654_readyFn(jule::Ptr<_1d0504225_constraintChecker>);
inline jule::Bool _1d05048b8_readyFi(jule::Ptr<_1d0504225_constraintChecker>);
inline jule::Bool _1d0504b2c_readySi(jule::Ptr<_1d0504225_constraintChecker>);
inline jule::Bool _1d0504d91_ready(jule::Ptr<_1d0504225_constraintChecker>);
inline jule::Bool _1d0505105_check(jule::Ptr<_1d0504225_constraintChecker>);
struct _1d0504225_constraintChecker {
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1d05c2cc7_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _field_genericsA;
	jule::Ptr<_1eb026831_FnIns> _field_fi;
	jule::Ptr<_1ea320268_StructIns> _field_si;
	jule::Ptr<_212a0c2ab_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1d0504225_constraintChecker(void) = default;


};
inline jule::Bool _1d0506557_IsTraitImpl(_1d050615b_Impl*);
inline jule::Bool _1d05067bb_IsStructImpl(_1d050615b_Impl*);
struct _1d050615b_Impl {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Base;
	jule::Ptr<_1ea30369c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1eb023b80_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_Statics;
	

	_1d050615b_Impl(void) = default;


};
struct _1d050b1b6_Scope {
	jule::Ptr<_1d050b1b6_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1d050b1b6_Scope(void) = default;


};
struct _1d050b5b2_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	

	_1d050b5b2_If(void) = default;

	inline bool operator==(_1d050b5b2_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d050b5b2_If _other) { return !this->operator==(_other); }


};
struct _1d050b89d_Else {
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	

	_1d050b89d_Else(void) = default;

	inline bool operator==(_1d050b89d_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d050b89d_Else _other) { return !this->operator==(_other); }


};
struct _1d050bc22_Conditional {
	jule::Slice<jule::Ptr<_1d050b5b2_If>> _field_Elifs;
	jule::Ptr<_1d050b89d_Else> _field_Default;
	

	_1d050bc22_Conditional(void) = default;


};
struct _1d050c00d_InfIter {
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	

	_1d050c00d_InfIter(void) = default;

	inline bool operator==(_1d050c00d_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d050c00d_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d050c827_IsWhileNext(_1d050c481_WhileIter*);
struct _1d050c481_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	

	_1d050c481_WhileIter(void) = default;

	inline bool operator==(_1d050c481_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d050c481_WhileIter _other) { return !this->operator==(_other); }


};
struct _1d050cd66_RangeIter {
	jule::Ptr<_1d0598572_Data> _field_Expr;
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	jule::Ptr<_1d0550a13_Var> _field_KeyA;
	jule::Ptr<_1d0550a13_Var> _field_KeyB;
	

	_1d050cd66_RangeIter(void) = default;

	inline bool operator==(_1d050cd66_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1d050cd66_RangeIter _other) { return !this->operator==(_other); }


};
struct _1d050d262_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1d050d262_ContSt(void) = default;

	inline bool operator==(_1d050d262_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1d050d262_ContSt _other) { return !this->operator==(_other); }


};
struct _1d050d619_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1d050d619_BreakSt(void) = default;

	inline bool operator==(_1d050d619_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1d050d619_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d050d905_Label {
	jule::Str _field_Ident;
	

	_1d050d905_Label(void) = default;

	inline bool operator==(_1d050d905_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d050d905_Label _other) { return !this->operator==(_other); }


};
struct _1d050dbe1_GotoSt {
	jule::Str _field_Ident;
	

	_1d050dbe1_GotoSt(void) = default;

	inline bool operator==(_1d050dbe1_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d050dbe1_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d050e098_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1d050e098_Postfix(void) = default;

	inline bool operator==(_1d050e098_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d050e098_Postfix _other) { return !this->operator==(_other); }


};
struct _1d050e51b_Assign {
	jule::Ptr<_1eb0153d0_OperandExprModel> _field_L;
	jule::Ptr<_1eb0153d0_OperandExprModel> _field_R;
	jule::Ptr<_212a0c2ab_Token> _field_Op;
	

	_1d050e51b_Assign(void) = default;

	inline bool operator==(_1d050e51b_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d050e51b_Assign _other) { return !this->operator==(_other); }


};
struct _1d050e8c3_MultiAssign {
	jule::Slice<jule::Ptr<_1d0598572_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1d050e8c3_MultiAssign(void) = default;


};
inline jule::Bool _1d051041d_IsGenericTypeMatch(_1d050ee12_Match*);
struct _1d050ee12_Match {
	jule::Ptr<_1d0598572_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1d051095c_Case>> _field_Cases;
	jule::Ptr<_1d051095c_Case> _field_Default;
	

	_1d050ee12_Match(void) = default;


};
inline jule::Bool _1d0510c26_isDefault(_1d051095c_Case*);
struct _1d051095c_Case {
	jule::Ptr<_1d050ee12_Match> _field_Owner;
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1d0598572_Data>> _field_Exprs;
	jule::Ptr<_1d051095c_Case> _field_Next;
	

	_1d051095c_Case(void) = default;


};
struct _1d0511012_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1d0511012_FallSt(void) = default;

	inline bool operator==(_1d0511012_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1d0511012_FallSt _other) { return !this->operator==(_other); }


};
struct _1d0511386_RetSt {
	jule::Ptr<_1eb026831_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d0511386_RetSt(void) = default;

	inline bool operator==(_1d0511386_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0511386_RetSt _other) { return !this->operator==(_other); }


};
struct _1d0511991_scopeLabel {
	jule::Ptr<_212a0c2ab_Token> _field_token;
	jule::Ptr<_1d050d905_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1d0512c28_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1d0511991_scopeLabel(void) = default;

	inline bool operator==(_1d0511991_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1d0511991_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1d0511e14_scopeGoto {
	jule::Ptr<_1ea311204_GotoSt> _field_gt;
	jule::Ptr<_1d0512c28_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1d0511e14_scopeGoto(void) = default;

	inline bool operator==(_1d0511e14_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1d0511e14_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05131ac_FindPackage(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05134ba_SelectPackage(_1d0512c28_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>);
inline jule::Ptr<_1d0550a13_Var> _1d0513872_FindVar(_1d0512c28_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d0513c29_FindTypeAlias(_1d0512c28_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1ea31ed8e_Struct> _1d05140d1_FindStruct(_1d0512c28_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1eb023b80_Fn> _1d0514488_FindFn(_1d0512c28_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d04ed4a5_Trait> _1d0514796_FindTrait(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Ptr<_1d05005ea_Enum> _1d0514aa4_FindEnum(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d0514db2_FindTypeEnum(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Bool _1d05151e2_isUnsafe(jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Bool _1d0515456_isRoot(_1d0512c28_scopeChecker*);
inline void _1d0515632_stop(_1d0512c28_scopeChecker*);
inline jule::Bool _1d0515896_stopped(_1d0512c28_scopeChecker*);
inline jule::Bool _1d0515b0a_isDeferred(jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Ptr<_1d0512c28_scopeChecker> _1d0515d6e_getRoot(jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Ptr<_1d0512c28_scopeChecker> _1d05160d3_getHardRoot(jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Ptr<_1d050d905_Label> _1d05163e1_findLabel(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Ptr<_1d0511991_scopeLabel> _1d05166ee_findLabelScope(jule::Ptr<_1d0512c28_scopeChecker>, jule::Str);
inline jule::Ptr<_1d0511991_scopeLabel> _1d0516a0c_findLabelAll(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Bool _1d0516db4_isDuplicatedIdent(_1d0512c28_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1d0517139_checkVarDecl(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31610a_VarDecl>);
inline void _1d05173ae_checkTypeAliasDecl(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31996b_TypeAliasDecl>);
inline jule::Ptr<_1d050b1b6_Scope> _1d0517623_getChild(_1d0512c28_scopeChecker*);
inline void _1d05179db_checkChildSsc(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea313635_ScopeTree>&, jule::Ptr<_1d050b1b6_Scope>&, jule::Ptr<_1d0512c28_scopeChecker>&);
inline jule::Ptr<_1d050b1b6_Scope> _1d0517d93_checkChildSc(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea313635_ScopeTree>&, jule::Ptr<_1d0512c28_scopeChecker>&);
inline jule::Ptr<_1d050b1b6_Scope> _1d05181a1_checkChild(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea313635_ScopeTree>&);
inline void _1d0518426_checkAnonScope(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea313635_ScopeTree>);
inline void _1d0518745_processErrorCall(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel>&, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05189ba_checkExpr(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea307bbd_Expr>);
inline jule::Ptr<_1d050b5b2_If> _1d0518cc8_checkIf(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31896a_If>);
inline jule::Ptr<_1d050b89d_Else> _1d05190d6_checkElse(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea318d22_Else>);
inline void _1d051935b_checkConditional(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea319295_Conditional>);
inline void _1d05197bd_checkIterScopeSsc(jule::Ptr<_1d0512c28_scopeChecker>, jule::Uintptr, jule::Ptr<_1ea313635_ScopeTree>, jule::Ptr<_1d050b1b6_Scope>&, jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Ptr<_1d050b1b6_Scope> _1d0519c1e_checkIterScopeSc(jule::Ptr<_1d0512c28_scopeChecker>, jule::Uintptr, jule::Ptr<_1ea313635_ScopeTree>, jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Ptr<_1d050b1b6_Scope> _1d051a0c6_checkIterScope(jule::Ptr<_1d0512c28_scopeChecker>, jule::Uintptr, jule::Ptr<_1ea313635_ScopeTree>&);
inline void _1d051a34b_checkInfIter(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea316b22_Iter>&);
inline void _1d051a5c1_checkWhileIter(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea316b22_Iter>&);
inline void _1d051a846_checkRangeIter(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea316b22_Iter>&);
inline void _1d051aabb_checkIter(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea316b22_Iter>);
inline jule::Bool _1d051adc9_checkValidContLabel(jule::Ptr<_1d0512c28_scopeChecker>, jule::Uintptr);
inline jule::Bool _1d051b1d7_checkValidBreakLabel(jule::Ptr<_1d0512c28_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1d050d262_ContSt> _1d051b4e5_checkContValidScope(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea3184e7_ContSt>);
inline void _1d051b76a_checkCont(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea3184e7_ContSt>);
inline void _1d051b9e0_checkLabel(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea310d4c_LabelSt>);
inline void _1d051bc65_pushGoto(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea311204_GotoSt>);
inline void _1d051beda_checkPostfix(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea312139_AssignSt>);
inline jule::Bool _1d051c2e8_isNewAssignIdent(_1d0512c28_scopeChecker*, jule::Str);
inline jule::Bool _1d051c749_checkStructureAssignOp(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_1ea312139_AssignSt>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d051c9be_checkSingleAssign(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea312139_AssignSt>&);
inline void _1d051ceec_processEndPartOfMultiAssign(_1d0512c28_scopeChecker*, jule::Ptr<_1d050e8c3_MultiAssign>&, jule::Ptr<_1ea312139_AssignSt>&, jule::Ptr<_1ea311aea_AssignLeft>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d051d283_checkMultiAssign(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea312139_AssignSt>&);
inline void _1d051d508_checkAssignSt(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea312139_AssignSt>);
inline jule::Ptr<_1d050b1b6_Scope> _1d051d8b0_checkCaseScope(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1d051095c_Case>&, jule::Ptr<_1ea313635_ScopeTree>&);
inline jule::Ptr<_1d051095c_Case> _1d051ddaa_checkCase(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1d050ee12_Match>, jule::I64, jule::Ptr<_1ea319dde_Case>, jule::Ptr<_1d0598572_Data>);
inline void _1d051e273_checkCases(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31a5b5_MatchCase>&, jule::Ptr<_1d050ee12_Match>, jule::Ptr<_1d0598572_Data>);
inline jule::Ptr<_1d051095c_Case> _1d051e62a_checkDefault(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1d050ee12_Match>, jule::Ptr<_1ea318d22_Else>);
inline void _1d051e8a0_checkComptimePanic(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1d050b1b6_Scope>&);
inline void _1d051ebbe_pushTypeMatch(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1d050ee12_Match>, jule::Ptr<_1ea31a5b5_MatchCase>&);
inline void _1d051ee44_checkTypeMatch(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31a5b5_MatchCase>&);
inline void _1d05201b9_checkCommonMatch(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31a5b5_MatchCase>&);
inline void _1d052043e_checkMatch(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea31a5b5_MatchCase>);
inline void _1d05206b4_checkFall(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea3114e0_FallSt>);
inline jule::Ptr<_1d050d619_BreakSt> _1d05209c2_checkBreakWithLabel(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea318140_BreakSt>);
inline jule::Ptr<_1d050d619_BreakSt> _1d0520cd0_checkPlainBreak(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea318140_BreakSt>);
inline void _1d0521055_checkBreak(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea318140_BreakSt>);
inline void _1d05212ca_checkRet(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea3164b2_RetSt>);
inline void _1d0521550_checkUseExpr(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea30855e_UseExpr>);
inline void _1d05217c5_checkNode(jule::Ptr<_1d0512c28_scopeChecker>, jule::Any&);
inline void _1d05219a1_checkResult(jule::Ptr<_1d0512c28_scopeChecker>);
inline void _1d0521b7c_checkTree(jule::Ptr<_1d0512c28_scopeChecker>);
inline void _1d0521e9b_checkGoto(_1d0512c28_scopeChecker*, jule::Ptr<_1d0511e14_scopeGoto>&, jule::Ptr<_1d0511991_scopeLabel>&);
inline void _1d0522177_checkGotos(_1d0512c28_scopeChecker*);
inline void _1d0522353_checkLabels(_1d0512c28_scopeChecker*);
inline void _1d052252e_checkVars(_1d0512c28_scopeChecker*);
inline void _1d052270a_checkAliases(_1d0512c28_scopeChecker*);
inline void _1d0522a29_check(jule::Ptr<_1d0512c28_scopeChecker>, jule::Ptr<_1ea313635_ScopeTree>&, jule::Ptr<_1d050b1b6_Scope>&);
inline jule::Ptr<_1d0512c28_scopeChecker> _1d0522c8d_newChildChecker(jule::Ptr<_1d0512c28_scopeChecker>);
struct _1d0512c28_scopeChecker {
	jule::Ptr<_212a0c2ab_Token> _field_calledFrom;
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Ptr<_1eb026831_FnIns> _field_owner;
	jule::Ptr<_1d0512c28_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1d0593748_SymbolTable> _field_table;
	jule::Ptr<_1d050b1b6_Scope> _field_scope;
	jule::Ptr<_1ea313635_ScopeTree> _field_tree;
	jule::Ptr<_1eb026831_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1d0511991_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1d0511e14_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1d0512c28_scopeChecker(void) = default;

	inline bool operator==(_1d0512c28_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d0512c28_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1d0523c7d_checkCdef(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d0524003_checkTypedef(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d0524278_checkDerive(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d05244ed_checkNamespace(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d0524773_checkDeprecated(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d05249e8_checkTest(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d0524c6d_checkDirective(_1d052383d_directiveChecker*, jule::Ptr<_1ea2c0405_Directive>&);
inline void _1d0524e49_check(_1d052383d_directiveChecker*);
struct _1d052383d_directiveChecker {
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1ea2c0405_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1d052383d_directiveChecker(void) = default;

	inline bool operator==(_1d052383d_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1d052383d_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d05298bb_ImportInfo> _1d0529dd8_FindPackage(_1d05298bb_ImportInfo*, jule::Str);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d052a1e6_SelectPackage(_1d05298bb_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>);
inline jule::Ptr<_1d0550a13_Var> _1d052a59d_FindVar(_1d05298bb_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d052a955_FindTypeAlias(_1d05298bb_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1ea31ed8e_Struct> _1d052ad0c_FindStruct(_1d05298bb_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1eb023b80_Fn> _1d052b1b4_FindFn(_1d05298bb_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d04ed4a5_Trait> _1d052b4c2_FindTrait(_1d05298bb_ImportInfo*, jule::Str);
inline jule::Ptr<_1d05005ea_Enum> _1d052b7d0_FindEnum(_1d05298bb_ImportInfo*, jule::Str);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d052badd_FindTypeEnum(_1d05298bb_ImportInfo*, jule::Str);
inline jule::Bool _1d052be84_isLookupable(_1d05298bb_ImportInfo*, jule::Str);
inline jule::Bool _1d052c292_existIdent(_1d05298bb_ImportInfo*, jule::Str);
inline jule::Bool _1d052c528_isAccessibleViaSelection(_1d05298bb_ImportInfo*);
struct _1d05298bb_ImportInfo {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_Selected;
	jule::Ptr<_1d052c825_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1d05298bb_ImportInfo(void) = default;


};
inline jule::Ptr<_1d05298bb_ImportInfo> _1d052cced_FindPackage(_1d052c825_Package*, jule::Str);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d052d10b_SelectPackage(_1d052c825_Package*, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>);
inline jule::Ptr<_1d0550a13_Var> _1d052d4b3_FindVar(_1d052c825_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d052d86a_FindTypeAlias(_1d052c825_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1ea31ed8e_Struct> _1d052dc22_FindStruct(_1d052c825_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1eb023b80_Fn> _1d052e0c9_FindFn(_1d052c825_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d04ed4a5_Trait> _1d052e3d7_FindTrait(_1d052c825_Package*, jule::Str);
inline jule::Ptr<_1d05005ea_Enum> _1d052e6e5_FindEnum(_1d052c825_Package*, jule::Str);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d052ea03_FindTypeEnum(_1d052c825_Package*, jule::Str);
struct _1d052c825_Package {
	jule::Slice<jule::Ptr<_1d0593748_SymbolTable>> _field_Files;
	

	_1d052c825_Package(void) = default;


};
inline jule::Ptr<_1d05298bb_ImportInfo> _1d0533034_FindPackage(_1d0532a17_Sema*, jule::Str);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d0533342_SelectPackage(_1d0532a17_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>);
inline jule::Ptr<_1d0550a13_Var> _1d05336e9_FindVar(_1d0532a17_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d0533aa1_FindTypeAlias(_1d0532a17_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1ea31ed8e_Struct> _1d0533e58_FindStruct(_1d0532a17_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1eb023b80_Fn> _1d0534310_FindFn(_1d0532a17_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d04ed4a5_Trait> _1d053461d_FindTrait(_1d0532a17_Sema*, jule::Str);
inline jule::Ptr<_1d05005ea_Enum> _1d053492b_FindEnum(_1d0532a17_Sema*, jule::Str);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d0534c39_FindTypeEnum(_1d0532a17_Sema*, jule::Str);
inline jule::Bool _1d053508b_isFlag(_1d0532a17_Sema*, jule::I64);
inline void _1d0535311_setCurrentFile(_1d0532a17_Sema*, jule::Ptr<_1d0593748_SymbolTable>);
inline void _1d05356c9_pushErr(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d05359e8_pushSugggestion(_1d0532a17_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d0535da0_isAccessibleDefine(_1d0532a17_Sema*, jule::Bool, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d0536301_isDuplicatedIdent(_1d0532a17_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1d0536620_checkDirectives(jule::Ptr<_1d0532a17_Sema>, jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Any);
inline jule::Bool _1d0536a71_checkGenericQuantity(_1d0532a17_Sema*, jule::I64, jule::I64, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d0536e4a_isDuplicatedImportSelection(_1d0532a17_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1d0537313_getImportDef(_1d0532a17_Sema*, jule::Str, jule::Ptr<_1d05298bb_ImportInfo>&);
inline jule::Bool _1aab7c0ba_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1d0550a13_Var>&);
inline jule::Bool _1aab8108b_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1d05c3811_TypeAlias>&);
inline jule::Bool _1aab85029_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Bool _1aab8914e_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1d04ed4a5_Trait>&);
inline jule::Bool _1aab8d0dc_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1d05005ea_Enum>&);
inline jule::Bool _1aab9207a_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1d0501be5_TypeEnum>&);
inline jule::Bool _1aab96018_checkImportSelection(_1d0532a17_Sema*, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1eb023b80_Fn>&);
inline jule::Bool _1d05379ea_checkImportSelectedSelections(_1d0532a17_Sema*, jule::Ptr<_1d05298bb_ImportInfo>&);
inline jule::Bool _1aab9a4a1_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d0550a13_Var>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1aab9da37_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1aab9e142_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1aaba4510_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1eb023b80_Fn>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1aaba4b2b_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d04ed4a5_Trait>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1aaba7843_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d05005ea_Enum>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1aabaa55a_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d0501be5_TypeEnum>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1d0538226_checkImportAllSelections(_1d0532a17_Sema*, jule::Ptr<_1d05298bb_ImportInfo>&);
inline jule::Bool _1d0538545_checkImportSelections(_1d0532a17_Sema*, jule::Ptr<_1d05298bb_ImportInfo>&);
inline jule::Bool _1d0538853_isUseAliasDuplication(_1d0532a17_Sema*, jule::Ptr<_1d05298bb_ImportInfo>&);
inline jule::Bool _1d0538b61_checkImport(_1d0532a17_Sema*, jule::Ptr<_1d05298bb_ImportInfo>&);
inline void _1d0538d3c_checkImports(_1d0532a17_Sema*);
inline void _1d0539018_implFileImpls(jule::Ptr<_1d0532a17_Sema>);
inline void _1d05391e4_implImpls(jule::Ptr<_1d0532a17_Sema>);
inline void _1d05393c0_checkEnums(jule::Ptr<_1d0532a17_Sema>);
inline _1d05d2d70_typeChecker _1d0539821_typeChecker(jule::Ptr<_1d0532a17_Sema>, jule::Trait<_1d05e0476_Lookup>, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>, jule::Ptr<_1d05d1e90_referencer>);
inline jule::Ptr<_1d05c4504_TypeKind> _1d0539d1b_buildTypeWithRefers(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea30369c_TypeDecl>&, jule::Trait<_1d05e0476_Lookup>, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>, jule::Ptr<_1d05d1e90_referencer>);
inline jule::Bool _1d053a316_checkTypeWithRefers(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05c88d2_TypeSymbol>&, jule::Trait<_1d05e0476_Lookup>, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>, jule::Ptr<_1d05d1e90_referencer>);
inline jule::Ptr<_1d0504225_constraintChecker> _1d053a57a_constraintChecker(jule::Ptr<_1d0532a17_Sema>);
inline jule::Bool _1d053a932_checkType(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05c88d2_TypeSymbol>&, jule::Trait<_1d05e0476_Lookup>);
inline jule::Ptr<_1d05c4504_TypeKind> _1d053ad83_buildTypeWithGenerics(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea30369c_TypeDecl>&, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>, jule::Ptr<_1d04e218b_ReferenceStack>);
inline jule::Ptr<_1d05c4504_TypeKind> _1d053b191_buildType(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea30369c_TypeDecl>&);
inline jule::Ptr<_1d05c4504_TypeKind> _1d053b49e_selectType(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea30369c_TypeDecl>&);
inline jule::Ptr<_1d059a0e0_Eval> _1d053b900_evalpd(jule::Ptr<_1d0532a17_Sema>, jule::Trait<_1d05e0476_Lookup>, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0550a13_Var>);
inline jule::Ptr<_1d059a0e0_Eval> _1d053bca7_evalp(jule::Ptr<_1d0532a17_Sema>, jule::Trait<_1d05e0476_Lookup>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Ptr<_1d059a0e0_Eval> _1d053c0b5_eval(jule::Ptr<_1d0532a17_Sema>, jule::Trait<_1d05e0476_Lookup>);
inline jule::Bool _1d053c5b0_checkAssignType(jule::Ptr<_1d0532a17_Sema>, jule::Bool, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d053ca11_checkTypeCompatibility(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Ptr<_1d05c4504_TypeKind> _1d053ce84_buildNonGenericTypeKind(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea30369c_TypeDecl>&, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>&, jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>&);
inline jule::Bool _1d053d36e_buildFnNonGenericTypeKinds(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb026831_FnIns>&, jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>&);
inline jule::Ptr<_1eb026831_FnIns> _1d053d68d_getTraitCheckFnKind(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb023b80_Fn>&);
inline jule::Bool _1d053dade_checkConstraintsFn(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1eb026831_FnIns>);
inline jule::Bool _1d053e040_checkConstraintsStruct(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1ea320268_StructIns>);
inline jule::Bool _1d053e3e7_fnEnvironment(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb026831_FnIns>&, jule::Fn<jule::Bool(jule::Ptr<_1d0532a17_Sema>&,jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&)>);
inline void _1d053e66c_checkFnParamKind(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb025962_ParamIns>&);
inline jule::Bool _1d053e97a_reloadFnInsTypes(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb026831_FnIns>);
inline jule::Bool _1d053eded_checkRefValidityForInitExpr(jule::Ptr<_1d0532a17_Sema>, jule::Bool, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1d05404c5_checkValidityForInitExpr(jule::Ptr<_1d0532a17_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1d054088d_checkTypeAliasDeclKind(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05c3811_TypeAlias>&, jule::Trait<_1d05e0476_Lookup>);
inline void _1d0540bac_checkTypeAliasDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05c3811_TypeAlias>&, jule::Trait<_1d05e0476_Lookup>);
inline void _1d0540e32_checkTypeAliasDeclDup(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05c3811_TypeAlias>&);
inline jule::Bool _1d0541196_checkTypeAliasDecls(jule::Ptr<_1d0532a17_Sema>);
inline void _1aac2bea0_checkEnumItemsDup(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>>);
inline void _1aac3741c_checkEnumItemsDup(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>>);
inline void _1d0541691_checkEnumItemsStr(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05005ea_Enum>&);
inline void _1d0541916_checkEnumItemsInt(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05005ea_Enum>&);
inline void _1d0541b8b_checkEnumDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d05005ea_Enum>&);
inline void _1d0541e11_checkTypeEnumDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d0501be5_TypeEnum>&);
inline jule::Bool _1d0542175_checkEnumDecls(jule::Ptr<_1d0532a17_Sema>);
inline jule::Bool _1d05423d9_checkTypeEnumDecls(jule::Ptr<_1d0532a17_Sema>);
inline jule::Bool _1d05426e7_checkDeclGenerics(_1d0532a17_Sema*, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>&);
inline jule::Bool _1d0542a05_checkFnDeclParamsDup(_1d0532a17_Sema*, jule::Ptr<_1eb023b80_Fn>&);
inline jule::Bool _1d0542d13_checkFnDeclResultDup(_1d0532a17_Sema*, jule::Ptr<_1eb023b80_Fn>&);
inline void _1d0543088_checkFnDeclPrototype(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb023b80_Fn>&);
inline void _1d054330d_checkTraitDeclMethod(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb023b80_Fn>&);
inline void _1d0543583_checkTraitDeclMethods(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d04ed4a5_Trait>&);
inline void _1d0543808_checkTraitDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d04ed4a5_Trait>&);
inline jule::Bool _1d0543a6c_checkTraitDecls(jule::Ptr<_1d0532a17_Sema>);
inline jule::Bool _1d0543e24_checkTraitImplMethods(_1d0532a17_Sema*, jule::Ptr<_1d04ed4a5_Trait>&, jule::Ptr<_1d050615b_Impl>&);
inline jule::Bool _1d05442cb_implToStruct(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&, jule::Ptr<_1d050615b_Impl>&);
inline void _1d0544551_implTrait(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d050615b_Impl>&);
inline void _1d05447c6_implStruct(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d050615b_Impl>&);
inline void _1d0544a4b_implImpl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d050615b_Impl>&);
inline void _1d0544d6a_checkVarDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d0550a13_Var>&, jule::Trait<_1d05e0476_Lookup>);
inline void _1d05450e0_checkGlobalVarDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d0550a13_Var>&);
inline jule::Bool _1d0545354_checkGlobalDecls(jule::Ptr<_1d0532a17_Sema>);
inline jule::Bool _1d054570b_checkStructTraitImpl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&, jule::Ptr<_1d04ed4a5_Trait>&);
inline jule::Bool _1d0545a19_checkStructImpls(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Bool _1d0545d27_checkStructFields(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1d054609c_checkStructDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Bool _1d0546311_checkStructDecls(jule::Ptr<_1d0532a17_Sema>);
inline void _1d0546586_checkFnDecl(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb023b80_Fn>&);
inline jule::Bool _1d05467ea_checkFnDecls(jule::Ptr<_1d0532a17_Sema>);
inline void _1d0546bb3_pushCycleError(_1d0532a17_Sema*, jule::Ptr<_1ea31ed8e_Struct>&, jule::Ptr<_1ea31ed8e_Struct>&, jule::Str&);
inline jule::Bool _1d0547114_checkCrossCycle(_1d0532a17_Sema*, jule::Ptr<_1ea31ed8e_Struct>&, jule::Ptr<_1ea31ed8e_Struct>&, jule::Str&);
inline jule::Bool _1d0547587_checkStructDeriveIllegalCycles(_1d0532a17_Sema*, jule::Str, jule::Ptr<_1ea31ed8e_Struct>&, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05478c8_checkStructInsDeriveClone(_1d0532a17_Sema*, jule::Ptr<_1ea320268_StructIns>);
inline void _1d0547ab5_checkPackageDecls(jule::Ptr<_1d0532a17_Sema>);
inline void _1d0547e06_checkDataForTypeInference(_1d0532a17_Sema*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline void _1d054818c_checkVar(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d0550a13_Var>&);
inline void _1d05484ab_checkTypeVar(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1d0550a13_Var>&, jule::Trait<_1d05e0476_Lookup>);
inline void _1d0548687_checkGlobalTypes(jule::Ptr<_1d0532a17_Sema>);
inline jule::Ptr<_1eb026831_FnIns> _1d0548a3e_readyToCheckFn(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_1eb023b80_Fn>&);
inline void _1d0548d5d_checkTypeMethod(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_1eb023b80_Fn>&);
inline jule::Ptr<_1eb026831_FnIns> _1d05492ae_checkStructInsOp(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_1eb023b80_Fn>&, jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>);
inline jule::Bool _1d0549666_checkStructEnv(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d0549a1d_precheckStructIns(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_212a0c2ab_Token>);
inline void _1d0549c93_checkStructIns(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1d054a018_checkTypeStruct(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1d054a1e4_checkStructTypes(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054a48b_checkStructInsOperators(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea320268_StructIns>);
inline void _1d054a722_precheckStructType(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1d054a8ed_precheckStructTypes(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054ab73_checkRets(_1d0532a17_Sema*, jule::Ptr<_1eb026831_FnIns>&);
inline void _1d054ae92_checkFnInsSc(_1d0532a17_Sema*, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_1d0512c28_scopeChecker>&);
inline void _1d054b2b1_checkFnInsCaller(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_212a0c2ab_Token>);
inline void _1d054b536_checkFnIns(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb026831_FnIns>&);
inline void _1d054b7ab_checkTypeFn(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb023b80_Fn>&);
inline void _1d054ba31_checkTestFn(_1d0532a17_Sema*, jule::Ptr<_1eb026831_FnIns>&);
inline void _1d054bca6_precheckTypeFn(jule::Ptr<_1d0532a17_Sema>, jule::Ptr<_1eb023b80_Fn>&);
inline void _1d054be82_precheckFnTypes(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054c15d_checkFnTypes(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054c339_checkPackageTypes(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054c515_setFileSemaFields(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054c6e1_setSemaFields(jule::Ptr<_1d0532a17_Sema>);
inline void _1d054c966_check(jule::Ptr<_1d0532a17_Sema>, jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&);
struct _1d0532a17_Sema {
	jule::Slice<_22ca31eb9_Log> _field_errors;
	jule::Slice<jule::Ptr<_1d0593748_SymbolTable>> _field_files;
	jule::Ptr<_1d0593748_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_1d0532a17_Sema(void) = default;


};
inline _1d054cd1d_missingRetChecker static__1d054d1d6_new(void);
inline jule::Bool _1d054d4b1_checkConditional(_1d054cd1d_missingRetChecker*, jule::Ptr<_1d050bc22_Conditional>);
inline jule::Bool _1d054d7be_checkMatch(_1d054cd1d_missingRetChecker*, jule::Ptr<_1d050ee12_Match>);
inline jule::Bool _1d054dacc_checkInfIter(_1d054cd1d_missingRetChecker*, jule::Ptr<_1d050c00d_InfIter>);
inline jule::Bool _1d054ddda_checkScope(_1d054cd1d_missingRetChecker*, jule::Ptr<_1d050b1b6_Scope>);
inline jule::Bool _1d054e1e8_check(_1d054cd1d_missingRetChecker*, jule::Ptr<_1d050b1b6_Scope>);
struct _1d054cd1d_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1d054cd1d_missingRetChecker(void) = default;


};
struct _1d054e9ce_IterRelation {
	jule::Ptr<_1d0550a13_Var> _field_Range;
	

	_1d054e9ce_IterRelation(void) = default;

	inline bool operator==(_1d054e9ce_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1d054e9ce_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0550dcb_IsInitialized(_1d0550a13_Var*);
inline jule::Bool _1d0551140_IsTypeInferred(_1d0550a13_Var*);
inline jule::Bool _1d05513a4_untypedConstant(_1d0550a13_Var*);
struct _1d0550a13_Var {
	jule::Ptr<_1d050b1b6_Scope> _field_Scope;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	jule::Ptr<_1d05995ea_Value> _field_Value;
	jule::Ptr<_1d04e218b_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_Directives;
	jule::Ptr<_1d054e9ce_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_Depends;
	

	_1d0550a13_Var(void) = default;


};
inline jule::Bool static__1d0551e32_Dispose(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d05521c9_Str(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d055251a_logical(jule::Ptr<_1eb023b80_Fn>&, jule::Str);
inline jule::Bool static__1d05527b2_Eq(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0552a59_Gt(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0552d01_GtEq(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0553098_Lt(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0553340_LtEq(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0553681_result(jule::Ptr<_1eb023b80_Fn>&, jule::Str);
inline jule::Bool static__1d0553928_Shl(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0553bc0_Shr(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0553e67_Add(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d055420e_Sub(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d05544a6_Div(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d055474d_Mul(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d05549e5_Mod(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0554c8c_BitAnd(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0555034_BitOr(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d05552cb_BitXor(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d055561c_unary(jule::Ptr<_1eb023b80_Fn>&, jule::Str);
inline jule::Bool static__1d05558b4_Neg(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0555b5b_Pos(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0555e03_BitNot(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0556244_assign(jule::Ptr<_1eb023b80_Fn>&, jule::Str);
inline jule::Bool static__1d05564db_AddAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0556783_SubAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0556a2a_DivAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0556cc2_MulAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0557069_ModAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0557311_ShlAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d05575a8_ShrAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0557850_BitOrAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0557ae7_BitAndAssign(jule::Ptr<_1eb023b80_Fn>);
inline jule::Bool static__1d0557d8e_BitXorAssign(jule::Ptr<_1eb023b80_Fn>);
struct _1d05517b1_FuncPattern {
	

	_1d05517b1_FuncPattern(void) = default;


};
inline void _1d0582858_pushErr(_1d058233b_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d0582abc_checkTrait(_1d058233b_typeCompatibilityChecker*);
inline jule::Bool _1d0582d31_checkPtr(_1d058233b_typeCompatibilityChecker*);
inline jule::Bool _1d0583095_checkPrim(_1d058233b_typeCompatibilityChecker*);
inline jule::Bool _1d058344c_typeEnum(_1d058233b_typeCompatibilityChecker*, jule::Ptr<_1d0501be5_TypeEnum>&, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05836b1_checkTypeEnum(_1d058233b_typeCompatibilityChecker*);
inline jule::Bool _1d0583925_check(_1d058233b_typeCompatibilityChecker*);
struct _1d058233b_typeCompatibilityChecker {
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Ptr<_1d05c4504_TypeKind> _field_dest;
	jule::Ptr<_1d05c4504_TypeKind> _field_src;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	

	_1d058233b_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1d058233b_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1d058233b_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1d05843c6_pushErr(_1d0583e64_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d058463a_checkValidity(_1d0583e64_assignTypeChecker*);
inline jule::Bool _1d058489e_checkConst(_1d0583e64_assignTypeChecker*);
inline jule::Bool _1d0584b13_isPrim(_1d0583e64_assignTypeChecker*);
inline jule::Bool _1d0584d77_checkCompatibility(_1d0583e64_assignTypeChecker*);
inline jule::Bool _1d05850db_check(_1d0583e64_assignTypeChecker*);
struct _1d0583e64_assignTypeChecker {
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Ptr<_1d05c4504_TypeKind> _field_dest;
	jule::Ptr<_1d0598572_Data> _field_d;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	

	_1d0583e64_assignTypeChecker(void) = default;

	inline bool operator==(_1d0583e64_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1d0583e64_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1aadbd62a_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1aadbcd22_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1aadc282c_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1aadbd1a7_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d058632e_annotateConstraintMap(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d058663c_annotateConstraintTup(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d058694a_annotateConstraintFn(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0586c7a_annotateConstraintIdent(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0587099_annotateConstraint(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline void _1d05873b8_pushGeneric(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&, jule::I64);
inline jule::Bool _1d05876c6_annotatePrim(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05879d4_annotateArr(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0587ce2_annotateSlc(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0588199_checkMapKey(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05884a7_annotateMap(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05887b5_annotateFn(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0588ac3_annotatePtr(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0588dd1_annotateSptr(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05891de_annotateStruct(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05894ec_annotateAny(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d058980a_annotateKind(_1d0585949_dynamicTypeAnnotation*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d0589a6e_annotate(_1d0585949_dynamicTypeAnnotation*);
struct _1d0585949_dynamicTypeAnnotation {
	jule::Ptr<_1d059a0e0_Eval> _field_e;
	jule::Ptr<_1eb026831_FnIns> _field_f;
	jule::Ptr<_1eb025962_ParamIns> _field_p;
	jule::Ptr<_1d0598572_Data> _field_a;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	jule::Ptr<_1d05c4504_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1ea30369c_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _field_ignored;
	

	_1d0585949_dynamicTypeAnnotation(void) = default;


};
inline void _1d058a861_pushErrToken(_1d058a311_fnCallArgChecker*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d058ab80_pushErr(_1d058a311_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1eb025962_ParamIns>> _1d058ade4_getParams(_1d058a311_fnCallArgChecker*);
inline jule::Bool _1d058b202_checkCounts(_1d058a311_fnCallArgChecker*, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>&);
inline jule::Bool _1d058b653_checkArg(_1d058a311_fnCallArgChecker*, jule::Ptr<_1eb025962_ParamIns>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Bool _1d058ba0a_push(_1d058a311_fnCallArgChecker*, jule::Ptr<_1eb025962_ParamIns>&, jule::Ptr<_1ea307bbd_Expr>);
inline jule::Bool _1d058bdb2_pushVariadic(_1d058a311_fnCallArgChecker*, jule::Ptr<_1eb025962_ParamIns>&, jule::I64);
inline jule::Bool _1d058c1c0_checkArgs(_1d058a311_fnCallArgChecker*, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>&);
inline jule::Bool _1d058c456_checkDynamicTypeAnnotation(_1d058a311_fnCallArgChecker*);
inline jule::Bool _1d058c6cb_check(_1d058a311_fnCallArgChecker*);
struct _1d058a311_fnCallArgChecker {
	jule::Ptr<_1d059a0e0_Eval> _field_e;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_args;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	jule::Ptr<_1eb026831_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _field_ignored;
	

	_1d058a311_fnCallArgChecker(void) = default;


};
inline void _1d058d226_pushErr(_1d058cc1a_structLitChecker*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d058d545_pushSugggestion(_1d058cc1a_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1d058d90d_pushMatch(_1d058cc1a_structLitChecker*, jule::Ptr<_1ea32007b_FieldIns>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline void _1d058dc2c_checkPair(_1d058cc1a_structLitChecker*, jule::Ptr<_1ea30c62e_FieldExprPair>&, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>&);
inline jule::Bool _1d058e03a_readyExprs(_1d058cc1a_structLitChecker*, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>&);
inline void _1d058e2b0_check(_1d058cc1a_structLitChecker*, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>&);
struct _1d058cc1a_structLitChecker {
	jule::Ptr<_1d059a0e0_Eval> _field_e;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	jule::Ptr<_1ea320268_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1eb01614a_StructArgExprModel>> _field_args;
	

	_1d058cc1a_structLitChecker(void) = default;


};
inline jule::Ptr<_1d0550a13_Var> _1d058ec94_buildVar(_1d058e7ee_rangeChecker*, jule::Ptr<_1ea31610a_VarDecl>&);
inline void _1d058ee70_setSizeKey(_1d058e7ee_rangeChecker*);
inline void _1d0590338_checkRangeExprValidity(_1d058e7ee_rangeChecker*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0550a13_Var>&, jule::Ptr<_1d05c4504_TypeKind>&);
inline void _1d0590514_checkSlice(_1d058e7ee_rangeChecker*);
inline void _1d05906e0_checkArray(_1d058e7ee_rangeChecker*);
inline void _1d05908bb_checkMapKeyA(_1d058e7ee_rangeChecker*);
inline void _1d0590a97_checkMapKeyB(_1d058e7ee_rangeChecker*);
inline void _1d0590c73_checkMap(_1d058e7ee_rangeChecker*);
inline void _1d0590e4e_checkStr(_1d058e7ee_rangeChecker*);
inline jule::Bool _1d05911b3_check(_1d058e7ee_rangeChecker*);
struct _1d058e7ee_rangeChecker {
	jule::Ptr<_1d0512c28_scopeChecker> _field_sc;
	jule::Ptr<_1ea317c88_RangeKind> _field_rang;
	jule::Ptr<_1d050cd66_RangeIter> _field_Kind;
	jule::Ptr<_1d0598572_Data> _field_d;
	

	_1d058e7ee_rangeChecker(void) = default;

	inline bool operator==(_1d058e7ee_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1d058e7ee_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1d0591d2e_prepareTypes(_1d0591889_retTypeChecker*);
inline void _1d05920a4_prepareExprs(_1d0591889_retTypeChecker*, jule::Ptr<_1ea307bbd_Expr>&);
inline void _1d0592280_checkExprs(_1d0591889_retTypeChecker*);
inline jule::Bool _1d059258d_check(_1d0591889_retTypeChecker*, jule::Ptr<_1ea307bbd_Expr>&);
struct _1d0591889_retTypeChecker {
	jule::Ptr<_1d0512c28_scopeChecker> _field_sc;
	jule::Ptr<_1eb026831_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _field_exprs;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1d0591889_retTypeChecker(void) = default;


};
inline jule::Ptr<_1d05298bb_ImportInfo> _1d0593c65_FindPackage(_1d0593748_SymbolTable*, jule::Str);
inline jule::Ptr<_1d05298bb_ImportInfo> _1d0594073_SelectPackage(_1d0593748_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>);
inline jule::Ptr<_1d0550a13_Var> _1d059442a_FindVar(_1d0593748_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05947d2_FindTypeAlias(_1d0593748_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1ea31ed8e_Struct> _1d0594b89_FindStruct(_1d0593748_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1eb023b80_Fn> _1d0595041_FindFn(_1d0593748_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d04ed4a5_Trait> _1d059534e_FindTrait(_1d0593748_SymbolTable*, jule::Str);
inline jule::Ptr<_1d05005ea_Enum> _1d059565c_FindEnum(_1d0593748_SymbolTable*, jule::Str);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d059596a_FindTypeEnum(_1d0593748_SymbolTable*, jule::Str);
inline jule::Ptr<_1d0550a13_Var> _1d0595edc_findVar(_1d0593748_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d059643d_findTypeAlias(_1d0593748_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1d05967e5_defByIdent(_1d0593748_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1d0596c46_isDuplicatedIdent(_1d0593748_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1d0593748_SymbolTable {
	jule::Ptr<_212a12646_File> _field_File;
	jule::Slice<_1d04e3533_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1eb023b80_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1d04ed4a5_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1d05005ea_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1d0501be5_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1d050615b_Impl>> _field_Impls;
	

	_1d0593748_SymbolTable(void) = default;


};
inline jule::Bool _1d059895c_IsNil(_1d0598572_Data*);
inline jule::Bool _1d0598bc1_IsVoid(_1d0598572_Data*);
inline jule::Bool _1d0598e35_IsConst(_1d0598572_Data*);
inline jule::Bool _1d0599243_GoodOperand(_1d0598572_Data*, jule::Ptr<_1d0598572_Data>&);
struct _1d0598572_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1eb0095b1_Const> _field_Constant;
	

	_1d0598572_Data(void) = default;

	inline bool operator==(_1d0598572_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1d0598572_Data _other) { return !this->operator==(_other); }


};
struct _1d05995ea_Value {
	jule::Ptr<_1ea307bbd_Expr> _field_Expr;
	jule::Ptr<_1d0598572_Data> _field_Data;
	

	_1d05995ea_Value(void) = default;

	inline bool operator==(_1d05995ea_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d05995ea_Value _other) { return !this->operator==(_other); }


};
inline void _1d059a5eb_pushErr(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d059a91a_pushSugggestion(_1d059a0e0_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1d059aae6_allowBuiltin(_1d059a0e0_Eval*);
inline void _1d059acc2_disallowBuiltin(_1d059a0e0_Eval*);
inline jule::Bool _1d059b036_isUnsafe(_1d059a0e0_Eval*);
inline jule::Bool _1d059b29a_isGlobal(_1d059a0e0_Eval*);
inline jule::Bool _1d059b575_applyNumericPrefix(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d059b7d9_litNil(_1d059a0e0_Eval*);
inline jule::Ptr<_1d0598572_Data> _1d059bae7_litStr(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d059be05_litBool(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d059c213_litRune(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d059c521_litFloat(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d059c82e_litInt(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d059cb3c_litNum(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d059ce4a_evalLit(_1d059a0e0_Eval*, jule::Ptr<_1ea308c02_LitExpr>);
inline jule::Any _1d059d258_findBuiltins(_1d059a0e0_Eval*, jule::Str);
inline jule::Any _1d059d610_getDef(_1d059a0e0_Eval*, jule::Str, jule::Bool);
inline void _1ab00509c_pushReference(_1d059a0e0_Eval*, jule::Ptr<_1eb026831_FnIns>&);
inline void _1ab0190a0_pushReference(_1d059a0e0_Eval*, jule::Ptr<_1d0550a13_Var>&);
inline void _1aa1896b6_pushReference(_1d059a0e0_Eval*, jule::Ptr<_1ea320268_StructIns>&);
inline jule::Ptr<_1d0598572_Data> _1d059db93__evalEnum(_1d059a0e0_Eval*, jule::Ptr<_1d05005ea_Enum>);
inline jule::Ptr<_1d0598572_Data> _1d059e04a_evalEnum(_1d059a0e0_Eval*, jule::Ptr<_1d05005ea_Enum>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d059e358__evalTypeEnum(_1d059a0e0_Eval*, jule::Ptr<_1d0501be5_TypeEnum>);
inline jule::Ptr<_1d0598572_Data> _1d059e710_evalTypeEnum(_1d059a0e0_Eval*, jule::Ptr<_1d0501be5_TypeEnum>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d059ea1d__evalStruct(_1d059a0e0_Eval*, jule::Ptr<_1ea320268_StructIns>);
inline jule::Ptr<_1d0598572_Data> _1d059edc5_evalStruct(_1d059a0e0_Eval*, jule::Ptr<_1ea320268_StructIns>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05a01d3_evalFnIns(_1d059a0e0_Eval*, jule::Ptr<_1eb026831_FnIns>);
inline void _1d05a0502_checkDeprecated(_1d059a0e0_Eval*, jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05a08a9_evalFn(_1d059a0e0_Eval*, jule::Ptr<_1eb023b80_Fn>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a0c72_pushIllegalCycleError(_1d059a0e0_Eval*, jule::Ptr<_1d0550a13_Var>&, jule::Ptr<_1d0550a13_Var>&, jule::Str&);
inline jule::Bool _1d05a1129_checkCrossCycle(_1d059a0e0_Eval*, jule::Ptr<_1d0550a13_Var>&, jule::Str&);
inline jule::Bool _1d05a14d1_checkIllegalCycles(_1d059a0e0_Eval*, jule::Ptr<_1d0550a13_Var>&, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05a1888_evalVar(_1d059a0e0_Eval*, jule::Ptr<_1d0550a13_Var>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05a1c40_evalTypeAlias(_1d059a0e0_Eval*, jule::Ptr<_1d05c3811_TypeAlias>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05a20e7_evalDef(_1d059a0e0_Eval*, jule::Any, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05a2405_evalIdent(_1d059a0e0_Eval*, jule::Ptr<_1ea30987e_IdentExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05a2713_evalUnary(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30a088_UnaryExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05a2a21_evalVariadic(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30a440_VariadicExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05a2d2e_evalUnsafe(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30940b_UnsafeExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05a313c_evalArr(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30e2ac_SliceExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05a358d_evalExpSlc(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30e2ac_SliceExpr>, jule::Ptr<_1d05c4504_TypeKind>, jule::Any);
inline jule::Ptr<_1d0598572_Data> _1d05a389b_evalSliceExpr(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30e2ac_SliceExpr>);
inline void _1d05a3bdc_checkIntegerIndexingByData(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a40b6_indexingPtr(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline void _1d05a447e_indexingArr(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline void _1d05a4847_indexingSlc(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline void _1d05a4c10_indexingMap(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline void _1d05a50c8_indexingStr(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline void _1d05a5491_toIndexing(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline jule::Bool _1d05a5914_pushGenericsFromExprSubIdent(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30b122_SubIdentExpr>&, jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>&, jule::Ptr<_1ea307bbd_Expr>&);
inline jule::Bool _1d05a5ccc_pushGenericsFromData(jule::Ptr<_1d059a0e0_Eval>, jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>&, jule::Ptr<_1ea307bbd_Expr>&);
inline void _1d05a611d_evalIdentDeclFromIndexing(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline jule::Bool _1d05a6580_checkGenericFn(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_212a0c2ab_Token>&, jule::Any&);
inline void _1d05a68c1_evalFnGenericFromIndexing(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea30eb2b_IndexingExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d05a6be0_evalIndexing(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30eb2b_IndexingExpr>);
struct __jule_tuple_x_1d0598572_Data__jule_tuple_x_1d0598572_Data {
	jule::Ptr<_1d0598572_Data> __jule_result_arg0;
	jule::Ptr<_1d0598572_Data> __jule_result_arg1;
};
inline __jule_tuple_x_1d0598572_Data__jule_tuple_x_1d0598572_Data _1d05a6eed_evalSlicingExprs(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea310236_SlicingExpr>&);
inline void _1d05a7273_slicingArr(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&);
inline void _1d05a763b_slicingStr(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05a7a9d_checkSlicing(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1ea310236_SlicingExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d05a7dab_evalSlicing(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea310236_SlicingExpr>);
inline void _1d05a8274_castPtr(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a863c_castStruct(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a8a05_castRef(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a8dbd_castSlc(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a91dc_castStr(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a95a5_castInt(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a996d_castNum(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05a9d36_castPrim(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05aa155_castConstant(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05aa51d_castTypeEnum(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline void _1d05aa8d6_castTypeEnumT(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Ptr<_1d0598572_Data> _1d05aad37_evalCastByTypeNData(_1d059a0e0_Eval*, jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05ab288_evalCastT(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1ea307bbd_Expr>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Ptr<_1d0598572_Data> _1d05ab596_evalCast(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30a7e7_CastExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05ab8a4_evalNsSelection(_1d059a0e0_Eval*, jule::Ptr<_1ea30ab9e_NsSelectionExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05abd05_evalStructLitExplicit(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea320268_StructIns>, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05ac113_evalStructLit(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30cd7c_StructLit>);
inline _1d05d2d70_typeChecker _1d05ac377_typeChecker(_1d059a0e0_Eval*);
inline jule::Ptr<_1d0598572_Data> _1d05ac685_evalType(_1d059a0e0_Eval*, jule::Ptr<_1ea30369c_TypeDecl>);
inline void _1d05ac9a4_callTypeFn(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05accc3_callBuiltinFn(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05ad114_checkFnOfConcurrentCall(_1d059a0e0_Eval*, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_212a0c2ab_Token>);
inline void _1d05ad510_processExceptionalHandler(_1d059a0e0_Eval*, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05ad840_callFn(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d05adb4d_evalFnCall(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30bba0_FnCallExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05ae005_evalEnumStatic(_1d059a0e0_Eval*, jule::Ptr<_1d05005ea_Enum>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05ae3ac_evalTypeEnumStatic(_1d059a0e0_Eval*, jule::Ptr<_1d0501be5_TypeEnum>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05ae764_evalStructStatic(_1d059a0e0_Eval*, jule::Ptr<_1ea320268_StructIns>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05aebb5_evalTraitSubIdent(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_1d04ed4a5_Trait>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b01b0_evalStructSubIdent(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_1ea320268_StructIns>, jule::Ptr<_1ea30b122_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1d0598572_Data> _1d05b0567_evalSliceSubIdent(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b091e_evalArraySubIdent(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b0c2c_evalIntTypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b103a_evalUintTypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b1348_evalI8TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b1656_evalI16TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b1964_evalI32TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b1c72_evalI64TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b2080_evalU8TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b238d_evalU16TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b269b_evalU32TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b29a9_evalU64TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b2cb7_evalF32TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b30c5_evalF64TypeStatic(_1d059a0e0_Eval*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b347c_evalPrimStatic(_1d059a0e0_Eval*, jule::Str, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1d0598572_Data> _1d05b3834_evalTypeStatic(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_1ea30b122_SubIdentExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05b3bdb_evalObjSubIdent(_1d059a0e0_Eval*, jule::Ptr<_1d0598572_Data>, jule::Ptr<_1ea30b122_SubIdentExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05b3ee9_evalSubIdent(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30b122_SubIdentExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05b4307_evalTuple(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30884a_TupleExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05b46ae_evalMap(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1d05ce9e8_Map>, jule::Ptr<_1ea30d300_BraceLit>);
inline jule::Ptr<_1d0598572_Data> _1d05b49bc_evalBraceLit(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30d300_BraceLit>);
inline jule::Ptr<_1d0598572_Data> _1d05b4cca_evalAnonFn(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea31512b_FnDecl>);
inline jule::Ptr<_1d0598572_Data> _1d05b50d8_evalBinop(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea30b595_BinopExpr>);
inline jule::Ptr<_1d0598572_Data> _1d05b53e6_evalExprKind(jule::Ptr<_1d059a0e0_Eval>, jule::Any);
inline jule::Ptr<_1d0598572_Data> _1d05b5704_eval(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea307bbd_Expr>);
inline jule::Ptr<_1d0598572_Data> _1d05b5a12_evalExpr(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_1ea307bbd_Expr>);
struct _1d059a0e0_Eval {
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Trait<_1d05e0476_Lookup> _field_lookup;
	jule::Ptr<_1d05c4504_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1d0550a13_Var> _field_owner;
	jule::Ptr<_1ea32007b_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1d059a0e0_Eval(void) = default;

	inline bool operator==(_1d059a0e0_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1d059a0e0_Eval _other) { return !this->operator==(_other); }


};
inline _1d05b5e85_unaryEval static__1d05b643b_new(jule::Ptr<_1d059a0e0_Eval>);
inline void _1d05b6617_minus(_1d05b5e85_unaryEval*);
inline void _1d05b67e3_plus(_1d05b5e85_unaryEval*);
inline void _1d05b69be_caret(_1d05b5e85_unaryEval*);
inline void _1d05b6b9a_excl(_1d05b5e85_unaryEval*);
inline void _1d05b6d76_star(_1d05b5e85_unaryEval*);
inline void _1d05b7052_amper(_1d05b5e85_unaryEval*);
inline void _1d05b722d_typeDecl(_1d05b5e85_unaryEval*);
inline void _1d05b7409_evalData(_1d05b5e85_unaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b76d4_eval(_1d05b5e85_unaryEval*, jule::Ptr<_1ea30a088_UnaryExpr>);
struct _1d05b5e85_unaryEval {
	jule::Ptr<_1d059a0e0_Eval> _field_e;
	jule::Ptr<_1d0598572_Data> _field_d;
	jule::Ptr<_1ea30a088_UnaryExpr> _field_u;
	

	_1d05b5e85_unaryEval(void) = default;

	inline bool operator==(_1d05b5e85_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1d05b5e85_unaryEval _other) { return !this->operator==(_other); }


};
inline _1d05b7c23_binaryEval static__1d05b82ea_newPlain(jule::Ptr<_1d059a0e0_Eval>);
inline _1d05b7c23_binaryEval static__1d05b863b_new(jule::Ptr<_1d059a0e0_Eval>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d05b88a0_checkTypeCompatibility(_1d05b7c23_binaryEval*);
inline jule::Bool _1d05b8b47_checkStructCommonOperatorCompatibility(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b8dde_evalNil(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b9153_evalEnum(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b93b7_evalTypeEnum(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b962b_evalSptr(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b9890_evalPtr(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b9b04_evalArr(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05b9d68_evalSlc(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05ba0cc_evalFn(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05ba341_evalStruct(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05ba5a5_evalTrait(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05ba819_evalAny(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05baa7d_evalBool(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05bace2_evalStr(_1d05b7c23_binaryEval*);
inline void _1d05baebd_setTypeToGreater(_1d05b7c23_binaryEval*);
inline void _1d05bb210_checkModData(_1d05b7c23_binaryEval*, jule::Ptr<_1d0598572_Data>&);
inline void _1d05bb3db_mod(_1d05b7c23_binaryEval*);
inline jule::Bool _1d05bb793_numbersAreCompatibile(_1d05b7c23_binaryEval*, jule::Str&, jule::Str&);
inline jule::Ptr<_1d0598572_Data> _1d05bba07_evalFloat(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05bbc6b_evalInt(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05bbed0_evalPrim(_1d05b7c23_binaryEval*);
inline void _1d05bc1ab_checkSpecialCases(_1d05b7c23_binaryEval*);
inline jule::Ptr<_1d0598572_Data> _1d05bc420_evalOp(_1d05b7c23_binaryEval*);
inline void _1d05bc695_evalConst(_1d05b7c23_binaryEval*, jule::Ptr<_1d0598572_Data>&);
inline void _1d05bc91a_checkData(_1d05b7c23_binaryEval*, jule::Ptr<_1d0598572_Data>&);
inline void _1d05bcae6_checkDatas(_1d05b7c23_binaryEval*);
inline void _1d05bcd6b_setModel(_1d05b7c23_binaryEval*, jule::Ptr<_1d0598572_Data>&);
inline void _1d05bd0e1_postEval(_1d05b7c23_binaryEval*, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d05bd498_solveExplicit(_1d05b7c23_binaryEval*, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d05bd7a6_eval(_1d05b7c23_binaryEval*, jule::Ptr<_1ea30b595_BinopExpr>&);
struct _1d05b7c23_binaryEval {
	jule::Ptr<_1d059a0e0_Eval> _field_e;
	jule::Ptr<_1d0598572_Data> _field_l;
	jule::Ptr<_1d0598572_Data> _field_r;
	jule::Ptr<_212a0c2ab_Token> _field_op;
	

	_1d05b7c23_binaryEval(void) = default;

	inline bool operator==(_1d05b7c23_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d05b7c23_binaryEval _other) { return !this->operator==(_other); }


};
struct _1d05c2cc7_InsGeneric {
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _field_Constraint;
	

	_1d05c2cc7_InsGeneric(void) = default;


};
struct _1d05c3811_TypeAlias {
	jule::Ptr<_1ea313635_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05c88d2_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _field_Generics;
	

	_1d05c3811_TypeAlias(void) = default;


};
inline jule::Str _1d05c4900_Str(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c4c0d_Equal(jule::Ptr<_1d05c4504_TypeKind>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1d05c51c5_CppLinked(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c5439_IsNil(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c569d_Void(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c5912_Comparable(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c5b76_Mutable(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c5dda_NilCompatible(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c614e_PerformsRC(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c63b3_SupportsCloning(_1d05c4504_TypeKind*);
inline jule::Bool _1d05c6627_Variadicable(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05c9251_Prim> _1d05c688b_Prim(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05cc9d5_Sptr> _1d05c6b00_Sptr(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05d1049_Ptr> _1d05c6d64_Ptr(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05005ea_Enum> _1d05c70c8_Enum(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05c733c_TypeEnum(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05d05dc_Arr> _1d05c75a1_Arr(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05cd442_Slc> _1d05c7815_Slc(_1d05c4504_TypeKind*);
inline jule::Ptr<_1eb026831_FnIns> _1d05c7a79_Fn(_1d05c4504_TypeKind*);
inline jule::Ptr<_1ea320268_StructIns> _1d05c7cdd_Struct(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d04ed4a5_Trait> _1d05c8052_Trait(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05ce9e8_Map> _1d05c82b6_Map(_1d05c4504_TypeKind*);
inline jule::Ptr<_1d05cdec0_Tuple> _1d05c852a_Tup(_1d05c4504_TypeKind*);
struct _1d05c4504_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1d05c40c5_Kind> _field_Kind;
	

	_1d05c4504_TypeKind(void) = default;

	inline bool operator==(_1d05c4504_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d05c4504_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d05c8c89_checked(_1d05c88d2_TypeSymbol*);
inline void _1d05c8e65_removeKind(_1d05c88d2_TypeSymbol*);
struct _1d05c88d2_TypeSymbol {
	jule::Ptr<_1ea30369c_TypeDecl> _field_Decl;
	jule::Ptr<_1d05c4504_TypeKind> _field_Kind;
	

	_1d05c88d2_TypeSymbol(void) = default;

	inline bool operator==(_1d05c88d2_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d05c88d2_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1d05c95b4_Str(_1d05c9251_Prim*);
inline jule::Bool _1d05c98c2_Equal(jule::Ptr<_1d05c9251_Prim>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1d05c9d45_IsConstraint(_1d05c9251_Prim*);
inline jule::Bool _1d05ca0a9_IsI8(_1d05c9251_Prim*);
inline jule::Bool _1d05ca31d_IsI16(_1d05c9251_Prim*);
inline jule::Bool _1d05ca582_IsI32(_1d05c9251_Prim*);
inline jule::Bool _1d05ca7e6_IsI64(_1d05c9251_Prim*);
inline jule::Bool _1d05caa5a_IsU8(_1d05c9251_Prim*);
inline jule::Bool _1d05cacbe_IsU16(_1d05c9251_Prim*);
inline jule::Bool _1d05cb033_IsU32(_1d05c9251_Prim*);
inline jule::Bool _1d05cb297_IsU64(_1d05c9251_Prim*);
inline jule::Bool _1d05cb50b_IsF32(_1d05c9251_Prim*);
inline jule::Bool _1d05cb770_IsF64(_1d05c9251_Prim*);
inline jule::Bool _1d05cb9d4_IsInt(_1d05c9251_Prim*);
inline jule::Bool _1d05cbc48_IsUint(_1d05c9251_Prim*);
inline jule::Bool _1d05cbeac_IsUintptr(_1d05c9251_Prim*);
inline jule::Bool _1d05cc221_IsBool(_1d05c9251_Prim*);
inline jule::Bool _1d05cc485_IsStr(_1d05c9251_Prim*);
inline jule::Bool _1d05cc6e9_IsAny(_1d05c9251_Prim*);
struct _1d05c9251_Prim {
	jule::Str _field_Kind;
	

	_1d05c9251_Prim(void) = default;

	inline bool operator==(_1d05c9251_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d05c9251_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1d05ccd48_Str(_1d05cc9d5_Sptr*);
inline jule::Bool _1d05cd156_Equal(jule::Ptr<_1d05cc9d5_Sptr>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1d05cc9d5_Sptr {
	jule::Ptr<_1d05c4504_TypeKind> _field_Elem;
	

	_1d05cc9d5_Sptr(void) = default;

	inline bool operator==(_1d05cc9d5_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05cc9d5_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1d05cd94d_Str(_1d05cd442_Slc*);
inline jule::Bool _1d05cdc5b_Equal(jule::Ptr<_1d05cd442_Slc>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1d05cd442_Slc {
	jule::Ptr<_1d05c4504_TypeKind> _field_Elem;
	

	_1d05cd442_Slc(void) = default;

	inline bool operator==(_1d05cd442_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05cd442_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1d05ce333_Str(_1d05cdec0_Tuple*);
inline jule::Bool _1d05ce641_Equal(jule::Ptr<_1d05cdec0_Tuple>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1d05cdec0_Tuple {
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _field_Types;
	

	_1d05cdec0_Tuple(void) = default;


};
inline jule::Str _1d05ced5b_Str(_1d05ce9e8_Map*);
inline jule::Bool _1d05d0169_Equal(jule::Ptr<_1d05ce9e8_Map>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1d05ce9e8_Map {
	jule::Ptr<_1d05c4504_TypeKind> _field_Key;
	jule::Ptr<_1d05c4504_TypeKind> _field_Val;
	

	_1d05ce9e8_Map(void) = default;

	inline bool operator==(_1d05ce9e8_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d05ce9e8_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1d05d0950_Str(_1d05d05dc_Arr*);
inline jule::Bool _1d05d0c5d_Equal(jule::Ptr<_1d05d05dc_Arr>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1d05d05dc_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1d05c4504_TypeKind> _field_Elem;
	

	_1d05d05dc_Arr(void) = default;

	inline bool operator==(_1d05d05dc_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05d05dc_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1d05d13ac_Str(_1d05d1049_Ptr*);
inline jule::Bool _1d05d16ba_Equal(jule::Ptr<_1d05d1049_Ptr>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1d05d1a1c_IsUnsafe(_1d05d1049_Ptr*);
struct _1d05d1049_Ptr {
	jule::Ptr<_1d05c4504_TypeKind> _field_Elem;
	

	_1d05d1049_Ptr(void) = default;

	inline bool operator==(_1d05d1049_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05d1049_Ptr _other) { return !this->operator==(_other); }


};
struct _1d05d1e90_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1d05d1e90_referencer(void) = default;

	inline bool operator==(_1d05d1e90_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1d05d1e90_referencer _other) { return !this->operator==(_other); }


};
inline void _1d05d3579_pushErr(_1d05d2d70_typeChecker*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d05d3755_allowBuiltin(_1d05d2d70_typeChecker*);
inline void _1d05d3931_disallowBuiltin(_1d05d2d70_typeChecker*);
inline jule::Ptr<_1d05c9251_Prim> _1d05d3c3e_buildPrim(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&);
inline void _1ab2d2830_pushReference(_1d05d2d70_typeChecker*, jule::Ptr<_1ea320268_StructIns>&);
inline void _1ab2d5723_pushReference(_1d05d2d70_typeChecker*, jule::Ptr<_1d04ed4a5_Trait>&);
inline void _1d05d4239_pushReferenceByKind(_1d05d2d70_typeChecker*, jule::Ptr<_1d05c4504_TypeKind>&);
inline void _1d05d4602_pushCycleError(_1d05d2d70_typeChecker*, jule::Any, jule::Any, jule::Str&);
inline jule::Bool _1d05d49a9_checkCrossCycle(_1d05d2d70_typeChecker*, jule::Any, jule::Str&);
inline jule::Bool _1d05d4d61_checkIllegalCycles(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Any);
inline jule::Trait<_1d05c40c5_Kind> _1d05d5218_fromTypeAlias(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Ptr<_1d05c3811_TypeAlias>&);
inline jule::Ptr<_1d05005ea_Enum> _1d05d55c0_fromEnum(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Ptr<_1d05005ea_Enum>&);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05d5977_fromTypeEnum(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Ptr<_1d0501be5_TypeEnum>&);
inline jule::Ptr<_1d04ed4a5_Trait> _1d05d5d2e_fromTrait(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Ptr<_1d04ed4a5_Trait>&);
inline jule::Bool _1d05d61d6_checkStructIns(_1d05d2d70_typeChecker*, jule::Ptr<_1ea320268_StructIns>&, jule::Ptr<_212a0c2ab_Token>&);
inline void _1d05d647d_appendUsedStructReference(_1d05d2d70_typeChecker*, jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Ptr<_1ea320268_StructIns> _1d05d6846_buildStructInstance(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Ptr<_1ea320268_StructIns> _1d05d6bed_fromStruct(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&, jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Trait<_1d05c40c5_Kind> _1d05d700b_getDef(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>&);
inline jule::Trait<_1d05c40c5_Kind> _1d05d7319_buildIdent(_1d05d2d70_typeChecker*, jule::Ptr<_1ea303c63_IdentTypeDecl>);
inline jule::Trait<_1d05c40c5_Kind> _1d05d7627_buildSubIdent(_1d05d2d70_typeChecker*, jule::Ptr<_1ea3043b2_SubIdentTypeDecl>);
inline jule::Ptr<_1d05cc9d5_Sptr> _1d05d7935_buildSptrFromType(_1d05d2d70_typeChecker*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Ptr<_1d05cc9d5_Sptr> _1d05d7c43_buildSptr(_1d05d2d70_typeChecker*, jule::Ptr<_1ea304a55_SptrTypeDecl>);
inline jule::Ptr<_1d05d1049_Ptr> _1d05d8051_buildPtrFromType(_1d05d2d70_typeChecker*, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Ptr<_1d05d1049_Ptr> _1d05d835e_buildPtr(_1d05d2d70_typeChecker*, jule::Ptr<_1ea305528_PtrTypeDecl>);
inline jule::Ptr<_1d05cd442_Slc> _1d05d866c_buildSlc(_1d05d2d70_typeChecker*, jule::Ptr<_1ea304e51_SlcTypeDecl>);
inline jule::Ptr<_1d05d05dc_Arr> _1d05d897a_buildArr(_1d05d2d70_typeChecker*, jule::Ptr<_1ea305baa_ArrTypeDecl>);
inline jule::Ptr<_1d05ce9e8_Map> _1d05d8c88_buildMap(_1d05d2d70_typeChecker*, jule::Ptr<_1ea306408_MapTypeDecl>);
inline jule::Ptr<_1d05cdec0_Tuple> _1d05d9096_buildTuple(_1d05d2d70_typeChecker*, jule::Ptr<_1ea30523c_TupleTypeDecl>);
inline jule::Bool _1d05d93a4_checkFnTypes(_1d05d2d70_typeChecker*, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Ptr<_1eb026831_FnIns> _1d05d96b2_buildFn(_1d05d2d70_typeChecker*, jule::Ptr<_1ea31512b_FnDecl>);
inline jule::Trait<_1d05c40c5_Kind> _1d05d99c0_buildByNamespace(_1d05d2d70_typeChecker*, jule::Ptr<_1ea304769_NamespaceTypeDecl>);
inline jule::Ptr<_1d05c4504_TypeKind> _1d05d9ccd_build(_1d05d2d70_typeChecker*, jule::Any&);
inline jule::Ptr<_1d05c4504_TypeKind> _1d05da0db_checkDecl(_1d05d2d70_typeChecker*, jule::Ptr<_1ea30369c_TypeDecl>&);
inline void _1d05da361_check(_1d05d2d70_typeChecker*, jule::Ptr<_1d05c88d2_TypeSymbol>&);
struct _1d05d2d70_typeChecker {
	jule::Ptr<_1d0532a17_Sema> _field_s;
	jule::Trait<_1d05e0476_Lookup> _field_rootLookup;
	jule::Trait<_1d05e0476_Lookup> _field_lookup;
	jule::Ptr<_1d05d1e90_referencer> _field_referencer;
	jule::Ptr<_1d04e218b_ReferenceStack> _field_refers;
	jule::Ptr<_212a0c2ab_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1d05c3811_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1d05d2d70_typeChecker(void) = default;


};
inline jule::Bool static__1d05da9c1_prim(jule::Str&, jule::Ptr<_1d05c9251_Prim>);
inline jule::Bool static__1d05dad12_exist(jule::Str&, jule::Ptr<_1d05c4504_TypeKind>&);
struct _1d05da581_identTypeLookup {
	

	_1d05da581_identTypeLookup(void) = default;

	inline bool operator==(_1d05da581_identTypeLookup _other) { return true; }

	inline bool operator!=(_1d05da581_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1b7bd9060_FileInfo {
	jule::Ptr<_1ea2be217_Ast> _field_Ast;
	jule::Slice<_22ca31eb9_Log> _field_Errors;
	

	_1b7bd9060_FileInfo(void) = default;


};
struct _1b7c32b7a_stmt {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1b7c32b7a_stmt(void) = default;


};
inline void _1b7c33b37_stop(_1b7c334a5_scopeParser*);
inline jule::Bool _1b7c33d9b_stopped(_1b7c334a5_scopeParser*);
inline jule::Bool _1b7c34110_finished(_1b7c334a5_scopeParser*);
inline jule::Bool _1b7c34374_isLastSt(_1b7c334a5_scopeParser*);
inline void _1b7c34693_pushErr(_1b7c334a5_scopeParser*, jule::Ptr<_212a0c2ab_Token>, jule::Str);
inline void _1b7c349b2_pushSuggestion(_1b7c334a5_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1b7c34c37_insertAsNext(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1b7c32b7a_stmt> _1b7c34e9b_next(_1b7c334a5_scopeParser*);
inline jule::Ptr<_1ea313635_ScopeTree> _1b7c35353_buildScope(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1ea31610a_VarDecl> _1b7c35661_buildVarSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea3164b2_RetSt> _1b7c3596e_buildRetSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea316b22_Iter> _1b7c35c7c_buildWhileNextIter(_1b7c334a5_scopeParser*, jule::Ptr<_1b7c32b7a_stmt>&);
inline jule::Ptr<_1ea3173e7_WhileKind> _1b7c3608a_buildWhileIterKind(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c36398_getRangeKindKeysTokens(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31610a_VarDecl> _1b7c366a6_buildRangeKindKey(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_1ea31610a_VarDecl>> _1b7c369b4_buildRangeKindKeys(_1b7c334a5_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>&);
inline void _1b7c36d05_setupRangeKindKeysPlain(_1b7c334a5_scopeParser*, jule::Ptr<_1ea317c88_RangeKind>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c37157_setupRangeKindKeysExplicit(_1b7c334a5_scopeParser*, jule::Ptr<_1ea317c88_RangeKind>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c37487_setupRangeKindKeys(_1b7c334a5_scopeParser*, jule::Ptr<_1ea317c88_RangeKind>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea317c88_RangeKind> _1b7c378d8_buildRangeIterKind(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Any _1b7c37c90_buildCommonIterKind(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Ptr<_1ea316b22_Iter> _1b7c3809d_buildCommonIter(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea316b22_Iter> _1b7c383ab_buildIterSt(_1b7c334a5_scopeParser*, jule::Ptr<_1b7c32b7a_stmt>&);
inline jule::Ptr<_1ea318140_BreakSt> _1b7c386b9_buildBreakSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea3184e7_ContSt> _1b7c389c7_buildContSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31896a_If> _1b7c38cd5_buildIf(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea318d22_Else> _1b7c390e3_buildElse(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea319295_Conditional> _1b7c39401_buildIfElseChain(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea307bbd_Expr> _1b7c3970e_buildCoCallSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea311204_GotoSt> _1b7c39a1c_buildGotoSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea3114e0_FallSt> _1b7c39d2a_buildFallSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31996b_TypeAliasDecl> _1b7c3a138_buildTypeAliasSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c3a59a_pushCaseExpr(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Ptr<_212a0c2ab_Token>, jule::Bool, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>&);
inline jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _1b7c3a9eb_buildCaseExprs(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>&, jule::Bool);
inline jule::Ptr<_1ea313635_ScopeTree> _1b7c3ad09_buildCaseScope(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
struct __jule_tuple_x_1ea319dde_Case__jule_tuple_bool {
	jule::Ptr<_1ea319dde_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_x_1ea319dde_Case__jule_tuple_bool _1b7c3b1b1_buildCase(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Bool);
struct __jule_tuple_sx_1ea319dde_Case__jule_tuple_x_1ea318d22_Else {
	jule::Slice<jule::Ptr<_1ea319dde_Case>> __jule_result_arg0;
	jule::Ptr<_1ea318d22_Else> __jule_result_arg1;
};
inline __jule_tuple_sx_1ea319dde_Case__jule_tuple_x_1ea318d22_Else _1b7c3b568_buildCases(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Bool);
inline jule::Ptr<_1ea31a5b5_MatchCase> _1b7c3b876_buildMatchCase(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea313635_ScopeTree> _1b7c3bb84_buildScopeSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea310d4c_LabelSt> _1b7c3be92_buildLabelSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
struct __jule_tuple__1ea312ce9_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple__1ea312ce9_StmtData__jule_tuple_bool _1b7c3c2a0_buildIdSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1b7c4b2c0_assignInfo> _1b7c3c5ad_buildAssignInfo(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea311aea_AssignLeft> _1b7c3c8bb_buildAssignL(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_1ea311aea_AssignLeft>> _1b7c3cbc9_buildAssignLs(_1b7c334a5_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>&);
struct __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ea312139_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool _1b7c3ced7_buildPlainAssign(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool _1b7c3d2e5_buildDeclAssign(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool _1b7c3d603_buildAssignSt(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30855e_UseExpr> _1b7c3d911_buildUseExpr(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c3dc1e_buildSt(_1b7c334a5_scopeParser*, jule::Ptr<_1b7c32b7a_stmt>&);
inline void _1b7c3e03d_build(_1b7c334a5_scopeParser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_1ea313635_ScopeTree>&);
struct _1b7c334a5_scopeParser {
	jule::Ptr<_1b7c4eaed_parser> _field_p;
	jule::Ptr<_1ea313635_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1b7c334a5_scopeParser(void) = default;


};
inline void _1b7c4025e_pushErr(_1b7c3e9bc_exprBuilder*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b7c4057d_pushSuggestion(_1b7c3e9bc_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ea30884a_TupleExpr> _1b7c4088b_buildTuple(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>&);
inline jule::Ptr<_1ea308c02_LitExpr> _1b7c40b99_buildLit(_1b7c3e9bc_exprBuilder*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c40ea7_buildPrimitiveType(_1b7c3e9bc_exprBuilder*, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Any _1b7c412b5_buildSingle(_1b7c3e9bc_exprBuilder*, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1ea30987e_IdentExpr> _1b7c415c3_buildCppLinkedIdent(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30a088_UnaryExpr> _1b7c418d1_buildUnary(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30b122_SubIdentExpr> _1b7c41bde_buildObjSubIdent(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30ab9e_NsSelectionExpr> _1b7c41eec_buildNsSubIdent(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c4230a_buildType(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c42618_buildSubIdent(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30a440_VariadicExpr> _1b7c42926_buildVariadic(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Any _1b7c42c34_buildOpRight(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea307ea9_RangeExpr> _1b7c43064_buildBetweenParentheses(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30a7e7_CastExpr> _1b7c43383_tryBuildCast(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c4374b_pushArg(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _1b7c43a59_buildArgs(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _1b7c43d67_buildCallGenerics(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30bba0_FnCallExpr> _1b7c442b8_buildFnCall(_1b7c3e9bc_exprBuilder*, jule::Ptr<_212a0c2ab_Token>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c445c6_buildParenthesesRange(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30940b_UnsafeExpr> _1b7c448d4_buildUnsafeExpr(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31512b_FnDecl> _1b7c44be2_buildAnonFn(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c45000_buildUnsafe(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c453b8_pushRangeLitPart(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Ptr<_212a0c2ab_Token>, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c456e8_getBraceRangeLitExprParts(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30c62e_FieldExprPair> _1b7c45a17_buildFieldExprPair(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea307bbd_Expr> _1b7c45d25_buildStructLitExpr(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _1b7c46133_buildStructLitExprs(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30cd7c_StructLit> _1b7c46463_buildTypedStructLiteral(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea307bbd_Expr> _1b7c46782_buildBraceLitPart(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30d300_BraceLit> _1b7c46a90_buildBraceLit(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c46d9d_buildBraceRange(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c471ab_getEnumerableParts(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30e2ac_SliceExpr> _1b7c474b9_buildSlice(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea30eb2b_IndexingExpr> _1b7c4791a_buildIndexing(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Ptr<_1ea310236_SlicingExpr> _1b7c47eae_buildSlicing(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_212a0c2ab_Token>);
inline jule::Any _1b7c482bc_buildBracketRange(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Any _1b7c485ca_buildData(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c48982_buildBinop(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64);
inline jule::Any _1b7c48c90_build(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c4909d_buildKind(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea307bbd_Expr> _1b7c493ab_buildFromTokens(_1b7c3e9bc_exprBuilder*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
struct _1b7c3e9bc_exprBuilder {
	jule::Ptr<_1b7c4eaed_parser> _field_p;
	

	_1b7c3e9bc_exprBuilder(void) = default;

	inline bool operator==(_1b7c3e9bc_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1b7c3e9bc_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1b7c4b2c0_assignInfo {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_l;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_r;
	jule::Ptr<_212a0c2ab_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1b7c4b2c0_assignInfo(void) = default;


};
inline void _1b7c4ee2d_stop(_1b7c4eaed_parser*);
inline jule::Bool _1b7c50192_stopped(_1b7c4eaed_parser*);
inline void _1b7c5055a_pushErr(_1b7c4eaed_parser*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b7c50879_pushSuggestion(_1b7c4eaed_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ea307bbd_Expr> _1b7c50b87_buildExpr(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea2c0405_Directive> _1b7c50e95_buildDirective(_1b7c4eaed_parser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c5121a_pushDirective(_1b7c4eaed_parser*, jule::Ptr<_1ea2c0405_Directive>);
inline jule::Ptr<_1ea313635_ScopeTree> _1b7c515c2_buildScope(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>);
struct __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1ea30369c_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool _1b7c51a23__buildType(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64*, jule::Bool);
inline __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool _1b7c51e74_buildType(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64*, jule::Bool);
inline jule::Ptr<_1ea31996b_TypeAliasDecl> _1b7c52282_buildTypeAliasDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c525a1_buildVarTypeAndExpr(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_1ea31610a_VarDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c528c0_buildVarCommon(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_1ea31610a_VarDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c52c88_buildVarBegin(_1b7c4eaed_parser*, jule::Ptr<_1ea31610a_VarDecl>&, jule::I64&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31610a_VarDecl> _1b7c53096_buildVar(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea310995_GenericDecl> _1b7c533a4_buildGeneric(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _1b7c5375b_buildGenerics(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Ptr<_212a0c2ab_Token>&);
inline jule::Ptr<_1ea313d0b_ParamDecl> _1b7c53a69_buildSelfParam(_1b7c4eaed_parser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c53e32_paramTypeBegin(_1b7c4eaed_parser*, jule::Ptr<_1ea313d0b_ParamDecl>&, jule::I64&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c54251_buildParamType(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_1ea313d0b_ParamDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c54570_buildParamBody(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_1ea313d0b_ParamDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea313d0b_ParamDecl> _1b7c5487d_buildParam(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c54b03_checkParams(_1b7c4eaed_parser*, jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>>&);
inline jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>> _1b7c54eaa_buildParams(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Bool);
struct __jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1ea3067b0_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool _1b7c55362_buildMultiRetType(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64&);
inline __jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool _1b7c55719_buildRetType(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64&);
inline jule::Ptr<_1ea31512b_FnDecl> _1b7c55b6a_buildFnPrototype(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64&, jule::Bool);
inline jule::Ptr<_1ea31512b_FnDecl> _1b7c560bb_buildFn(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_212a0c2ab_Token>> _1b7c563c9_getUseDeclSelectors(_1b7c4eaed_parser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c566e8_buildCppUseDecl(_1b7c4eaed_parser*, jule::Ptr<_1ea31ad57_UseDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c56a17_buildStdUseDecl(_1b7c4eaed_parser*, jule::Ptr<_1ea31ad57_UseDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c56d36_buildIdentUseDecl(_1b7c4eaed_parser*, jule::Ptr<_1ea31ad57_UseDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline void _1b7c57155_parseUseDecl(_1b7c4eaed_parser*, jule::Ptr<_1ea31ad57_UseDecl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31ad57_UseDecl> _1b7c5750c_buildUseDecl(_1b7c4eaed_parser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>, jule::Bool);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c578b4_buildTypeEnumItemKind(jule::Ptr<_1b7c4eaed_parser>, jule::I64&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>> _1b7c57bc2_buildTypeEnumItems(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31ce14_TypeEnumDecl> _1b7c57ed0_buildTypeEnumDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea307bbd_Expr> _1b7c58387_buildEnumItemExpr(jule::Ptr<_1b7c4eaed_parser>, jule::I64&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>> _1b7c58695_buildEnumItems(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31bd03_EnumDecl> _1b7c589a3_buildEnumDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Any _1b7c58cb1_buildNodeEnumDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31d112_FieldDecl> _1b7c590be_buildField(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Slice<jule::Ptr<_1ea31d112_FieldDecl>> _1b7c593cc_buildStructDeclFields(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31d8b5_StructDecl> _1b7c596da_buildStructDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c59960_checkMethodReceiver(_1b7c4eaed_parser*, jule::Ptr<_1ea31512b_FnDecl>&);
inline jule::Slice<jule::Ptr<_1ea31512b_FnDecl>> _1b7c59c6d_buildTraitMethods(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31dec0_TraitDecl> _1b7c5a07b_buildTraitDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31512b_FnDecl> _1b7c5a389_buildCppLinkFn(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31610a_VarDecl> _1b7c5a697_buildCppLinkVar(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31d8b5_StructDecl> _1b7c5a9a5_buildCppLinkStruct(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31996b_TypeAliasDecl> _1b7c5acb3_buildCppLinkTypeAlias(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea31ad57_UseDecl> _1b7c5b0c1_buildCppLinkUse(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Any _1b7c5b3ce_buildCppLink(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31512b_FnDecl> _1b7c5b6dc_getMethod(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c5ba0b_parseImplBody(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_1ea31e5ca_Impl>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea31e5ca_Impl> _1b7c5bd19_buildImpl(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Any _1b7c5c127_buildNodeData(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c5c39c_applyFnMeta(_1b7c4eaed_parser*, jule::Ptr<_1ea31512b_FnDecl>&);
inline void _1b7c5c622_applyMeta(_1b7c4eaed_parser*, _1ea2c0009_Node&);
inline void _1b7c5c897_pushUseDecl(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_1ea31ad57_UseDecl>&);
inline jule::Bool _1b7c5cba5_pushMetaNodes(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline _1ea2c0009_Node _1b7c5ceb3_parseNode(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c5d238_appendNode(jule::Ptr<_1b7c4eaed_parser>, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c5d69a_removeRange(_1b7c4eaed_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::I64>&);
inline void _1b7c5da63_pushWrongOrderCloseErr(_1b7c4eaed_parser*, jule::Ptr<_212a0c2ab_Token>&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::I64>&);
inline void _1b7c5dec5_pushRangeClose(_1b7c4eaed_parser*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Slice<jule::I64>&);
inline void _1b7c5e24a_checkRanges(_1b7c4eaed_parser*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline void _1b7c5e4c0_parse(jule::Ptr<_1b7c4eaed_parser>, jule::Ptr<_212a12646_File>&);
struct _1b7c4eaed_parser {
	jule::Ptr<_1ea2be217_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1ea2c0405_Directive>> _field_directives;
	jule::Slice<_22ca31eb9_Log> _field_errors;
	

	_1b7c4eaed_parser(void) = default;


};
inline void _1b7c60dd9_pushErr(_1b7c60812_typeBuilder*, jule::Ptr<_212a0c2ab_Token>, jule::Str);
inline void _1b7c61208_pushSuggestion(_1b7c60812_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6146c_buildPrim(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c616d1_buildNamespace(_1b7c60812_typeBuilder*);
inline jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _1b7c61945_buildGenerics(_1b7c60812_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c61ba9_identGenerics(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c61e1d_buildIdent(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c62182_buildCppLink(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c623e6_buildFn(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6265a_buildPtr(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c628be_buildSptr(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c62b33_buildOp(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c62d97_buildSlc(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6310b_buildArr(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c63370_buildMap(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c635d4_buildEnumerable(_1b7c60812_typeBuilder*);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c63848_step(_1b7c60812_typeBuilder*);
inline __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool _1b7c63aac_build(_1b7c60812_typeBuilder*);
struct _1b7c60812_typeBuilder {
	jule::Ptr<_1b7c4eaed_parser> _field_p;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1b7c60812_typeBuilder(void) = default;


};
struct _1d0773395_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1d0773395_CompileInfo(void) = default;

	inline bool operator==(_1d0773395_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1d0773395_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1d0774c48_pushErr(_1d07746e8_directiveEval*, jule::Ptr<_212a0c2ab_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1d0775100_splitOperans(_1d07746e8_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Bool _1d077540d_evalDirectiveIdent(_1d07746e8_directiveEval*, jule::Str);
inline jule::Bool _1d077571b_evalDirectivePart(_1d07746e8_directiveEval*, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Bool _1d0775980_eval(_1d07746e8_directiveEval*);
struct _1d07746e8_directiveEval {
	jule::Slice<_22ca31eb9_Log> _field_logs;
	jule::Ptr<_1ea2c0405_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1d07746e8_directiveEval(void) = default;


};
inline jule::Ptr<_1b7b56cbe_JuleImporter> static__1d09bd7bb_New(_1d0773395_CompileInfo);
inline jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>> _1d09dc90b_AllPackages(_1b7b56cbe_JuleImporter*);
inline void _1d09ee07c_SetModPath(_1b7b56cbe_JuleImporter*, jule::Str);
inline jule::Str _1d0a2a6c4_GetModPath(_1b7b56cbe_JuleImporter*);
inline jule::Str _1d0a2ece4_ModById(_1b7b56cbe_JuleImporter*, jule::I64);
inline jule::Ptr<_1d05298bb_ImportInfo> _1b6bdd96c_GetImport(_1b7b56cbe_JuleImporter*, jule::Str);
struct __jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log {
	jule::Slice<jule::Ptr<_1ea2be217_Ast>> __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log _1b6bec6e5_ImportPackage(_1b7b56cbe_JuleImporter*, jule::Str, jule::Bool);
inline void _1b6c00011_Imported(_1b7b56cbe_JuleImporter*, jule::Ptr<_1d05298bb_ImportInfo>);
struct __jule_tuple_bool__jule_tuple_s_22ca31eb9_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_bool__jule_tuple_s_22ca31eb9_Log _1b6c47685_isPassBuildDirectives(_1b7b56cbe_JuleImporter*, jule::Ptr<_1ea2be217_Ast>&);
struct _1b7b56cbe_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1b7b56cbe_JuleImporter(void) = default;


};
struct _1d0973210_OrderedDefines {
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_Globals;
	

	_1d0973210_OrderedDefines(void) = default;


};
inline jule::Bool _1ab7967c7_isCommonOrdered(jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>, jule::Ptr<_1ea31ed8e_Struct>);
inline jule::Bool _1ab79da65_isCommonOrdered(jule::Slice<jule::Ptr<_1d0550a13_Var>>, jule::Ptr<_1d0550a13_Var>);
inline void _1ab790d54_orderCommon(jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>&);
inline void _1ab7916e5_orderCommon(jule::Slice<jule::Ptr<_1d0550a13_Var>>&);
inline void static__1b7b384cb_orderStructures(jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>&);
inline void static__1b7b4c358_orderVars(jule::Slice<jule::Ptr<_1d0550a13_Var>>&);
struct _1b6c9a3ca_defineOrderer {
	

	_1b6c9a3ca_defineOrderer(void) = default;

	inline bool operator==(_1b6c9a3ca_defineOrderer _other) { return true; }

	inline bool operator!=(_1b6c9a3ca_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1b7d39303_liveTable {
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1eb026831_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ea320268_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1d04ed4a5_Trait>> _field_traits;
	

	_1b7d39303_liveTable(void) = default;


};
inline void _1b7d70427_optimizeChild(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050b1b6_Scope>&);
inline void _1b7d706be_optimizeBodyChildExceptional(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050b1b6_Scope>&);
inline void _1b7d70955_optimizeBodyChild(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050b1b6_Scope>&);
inline void _1b7d70bca_optimizeExprModel(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Any&);
inline void _1b7d70da6_eliminateFollowed(_1b7d6ee4e_scopeDeadCode*);
inline void _1b7d7112b_pushGoto(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050dbe1_GotoSt>);
inline void _1b7d713a1_pushLabel(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050d905_Label>);
inline void _1b7d71626_optimizeRangeIter(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050cd66_RangeIter>);
inline void _1b7d7189b_optimizeWhileIter(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050c481_WhileIter>);
inline void _1b7d71b21_optimizeInfIter(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050c00d_InfIter>);
inline void _1b7d71d96_optimizeConditional(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050bc22_Conditional>);
inline void _1b7d7211b_optimizeMatch(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050ee12_Match>);
inline void _1b7d72391_optimizeAssign(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050e51b_Assign>);
inline void _1b7d72616_optimizeMultiAssign(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Ptr<_1d050e8c3_MultiAssign>);
inline void _1b7d7288b_optimizeStmt(jule::Ptr<_1b7d6ee4e_scopeDeadCode>, jule::Any);
inline void _1b7d72a67_optimizeStmts(jule::Ptr<_1b7d6ee4e_scopeDeadCode>);
struct _1b7d6ee4e_scopeDeadCode {
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _field_parent;
	jule::Ptr<_1d050b1b6_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1d050d905_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1d050dbe1_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1b7d6ee4e_scopeDeadCode(void) = default;

	inline bool operator==(_1b7d6ee4e_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1b7d6ee4e_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1b7d73da9_exprDeadCode static__1b7d744d6_new(jule::Ptr<_1b7d6ee4e_scopeDeadCode>&);
inline void _1b7d7475b_binary(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb015897_BinopExprModel>);
inline void _1b7d749d1_unary(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb015c4e_UnaryExprModel>);
inline void _1b7d74c56_structureLit(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb016502_StructLitExprModel>);
inline void _1b7d74ecb_allocStructure(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb016810_AllocStructLitExprModel>);
inline void _1b7d75251_casting(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb016d60_CastingExprModel>);
inline void _1b7d754c6_args(_1b7d73da9_exprDeadCode*, jule::Slice<jule::Any>&);
inline void _1b7d7574b_funcCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb017712_FnCallExprModel>);
inline void _1b7d759c1_slice(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb017ab9_SliceExprModel>);
inline void _1b7d75c46_array(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01a8ad_ArrayExprModel>);
inline void _1b7d75ebb_indexing(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01803c_IndexingExprModel>);
inline void _1b7d76241_anonFunc(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb0183e4_AnonFnExprModel>);
inline void _1b7d764b6_mapExpr(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb018c1e_MapExprModel>);
inline void _1b7d7673b_slicing(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01925d_SlicingExprModel>);
inline void _1b7d769b1_traitSub(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01979c_TraitSubIdentExprModel>);
inline void _1b7d76c36_structureSub(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01a14e_StructSubIdentExprModel>);
inline void _1b7d76eab_commonSub(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01b20a_CommonSubIdentExprModel>);
inline void _1b7d77231_tuple(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01b507_TupleExprModel>);
inline void _1b7d774a6_newCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel>);
inline void _1b7d7772b_outCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel>);
inline void _1b7d779a1_outlnCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>);
inline void _1b7d77c26_panicCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel>);
inline void _1b7d77e9b_assertCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel>);
inline void _1b7d78221_errorCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel>);
inline void _1b7d78496_makeCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>);
inline void _1b7d7871b_appendCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel>);
inline void _1b7d78991_lenCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01da26_BuiltinLenCallExprModel>);
inline void _1b7d78c16_capCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel>);
inline void _1b7d78e8b_cloneCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel>);
inline void _1b7d79211_deleteCall(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>);
inline void _1b7d79486_sizeof(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb020044_SizeofExprModel>);
inline void _1b7d7970b_alignof(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb020330_AlignofExprModel>);
inline void _1b7d79981_integratedToStr(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb020929_IntegratedToStrExprModel>);
inline void _1b7d79c06_free(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb0210cd_FreeExprModel>);
inline void _1b7d79e7b_backendEmit(_1b7d73da9_exprDeadCode*, jule::Ptr<_1eb020ce2_BackendEmitExprModel>);
inline void _1b7d7a201_optimize(_1b7d73da9_exprDeadCode*, jule::Any&);
struct _1b7d73da9_exprDeadCode {
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _field_s;
	

	_1b7d73da9_exprDeadCode(void) = default;

	inline bool operator==(_1b7d73da9_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1b7d73da9_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1d068d832_UnsafeBinopExprModel {
	jule::Ptr<_1eb015897_BinopExprModel> _field_Node;
	

	_1d068d832_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1d068d832_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d068d832_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d068db51_UnsafeIndexingExprModel {
	jule::Ptr<_1eb01803c_IndexingExprModel> _field_Node;
	

	_1d068db51_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1d068db51_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d068db51_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d068e019_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1eb017ab9_SliceExprModel> _field_Elems;
	

	_1d068e019_PushToSliceExprModel(void) = default;

	inline bool operator==(_1d068e019_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1d068e019_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1d068e5d0_MutSlicingExprModel {
	jule::Ptr<_212a0c2ab_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1d068e5d0_MutSlicingExprModel(void) = default;

	inline bool operator==(_1d068e5d0_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1d068e5d0_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d068e976_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d068e976_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1d068e976_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d068e976_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d0690b31_scopeOptimizer> static__1d069114d_new(jule::Ptr<_1d050b1b6_Scope>);
inline void _1d06913c3_setCurrentStmt(_1d0690b31_scopeOptimizer*, jule::Any);
inline void _1d0691648_optimizeData(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d0598572_Data>);
inline void _1d06918bd_optimizeVar(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d0550a13_Var>);
inline void _1d0691b43_optimizeConditional(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050bc22_Conditional>);
inline void _1d069202d_buildDefaultConstatTrueCase(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d051095c_Case>, jule::I64&, jule::Ptr<_1d050ee12_Match>&);
inline void _1d069223c_optimizeMatch(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050ee12_Match>);
inline void _1d06924b2_optimizeRangeIter(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050cd66_RangeIter>);
inline void _1d0692737_optimizeWhileIter(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050c481_WhileIter>);
inline jule::Bool _1d0692a45_substr(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050e51b_Assign>);
inline jule::Bool _1d0692d53_strInsert(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050e51b_Assign>);
inline jule::Bool _1d0693161_strAssign(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050e51b_Assign>);
inline void _1d06933d6_optimizeAssign(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050e51b_Assign>);
inline void _1d069365b_optimizeMultiAssign(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050e8c3_MultiAssign>);
inline void _1d06938d1_optimizeRet(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d0511386_RetSt>);
inline void _1d0693b56_optimizeStmt(_1d0690b31_scopeOptimizer*, jule::Any);
inline void _1d0693dcb_optimizeChild(_1d0690b31_scopeOptimizer*, jule::Ptr<_1d050b1b6_Scope>);
inline void _1d06940a7_optimize(_1d0690b31_scopeOptimizer*);
struct _1d0690b31_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1d050b1b6_Scope> _field_scope;
	

	_1d0690b31_scopeOptimizer(void) = default;

	inline bool operator==(_1d0690b31_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d0690b31_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1d0696708_optimize(jule::Any&);
inline jule::Bool _1d0696a16_strCond(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb015897_BinopExprModel>);
inline void _1d0696c8b_binary(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb015897_BinopExprModel>);
inline void _1d0697011_unary(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb015c4e_UnaryExprModel>);
inline void _1d0697286_structureLit(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb016502_StructLitExprModel>);
inline void _1d069750b_allocStructure(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb016810_AllocStructLitExprModel>);
inline void _1d0697781_casting(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb016d60_CastingExprModel>);
inline void _1d0697a06_args(_1d06961ec_exprOptimizer*, jule::Slice<jule::Any>&);
inline void _1d0697c7b_scope(_1d06961ec_exprOptimizer*, jule::Ptr<_1d050b1b6_Scope>&);
inline void _1d0698001_funcCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb017712_FnCallExprModel>);
inline void _1d0698276_slice(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb017ab9_SliceExprModel>);
inline void _1d06984eb_array(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01a8ad_ArrayExprModel>);
inline void _1d0698771_indexing(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01803c_IndexingExprModel>);
inline void _1d06989e6_anonFunc(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb0183e4_AnonFnExprModel>);
inline void _1d0698c6b_mapExpr(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb018c1e_MapExprModel>);
inline void _1d0698ee1_slicing(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01925d_SlicingExprModel>);
inline void _1d0699266_traitSub(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01979c_TraitSubIdentExprModel>);
inline void _1d06994db_structureSub(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01a14e_StructSubIdentExprModel>);
inline void _1d0699761_commonSub(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01b20a_CommonSubIdentExprModel>);
inline void _1d06999d6_tuple(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01b507_TupleExprModel>);
inline void _1d0699c5b_newCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel>);
inline void _1d0699ed1_outCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel>);
inline void _1d069a256_outlnCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>);
inline void _1d069a4cb_panicCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel>);
inline void _1d069a751_assertCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel>);
inline void _1d069a9c6_errorCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel>);
inline void _1d069ac4b_makeCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>);
inline void _1d069aec1_appendCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel>);
inline void _1d069b246_lenCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01da26_BuiltinLenCallExprModel>);
inline void _1d069b4bb_capCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel>);
inline void _1d069b741_cloneCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel>);
inline void _1d069b9b6_deleteCall(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>);
inline void _1d069bc3b_sizeof(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb020044_SizeofExprModel>);
inline void _1d069beb1_alignof(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb020330_AlignofExprModel>);
inline void _1d069c236_integratedToStr(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb020929_IntegratedToStrExprModel>);
inline void _1d069c4ab_free(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb0210cd_FreeExprModel>);
inline void _1d069c731_backendEmit(_1d06961ec_exprOptimizer*, jule::Ptr<_1eb020ce2_BackendEmitExprModel>);
inline void _1d069c90c_do(_1d06961ec_exprOptimizer*);
struct _1d06961ec_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1d06961ec_exprOptimizer(void) = default;

	inline bool operator==(_1d06961ec_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d06961ec_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b7c70e1b_Optimizer> static__1b7c90622_New(jule::Ptr<_1b6c04994_IR>&);
inline void _1b7c9da92_optimizeGlobal(_1b7c70e1b_Optimizer*, jule::Ptr<_1d0550a13_Var>&);
inline void _1b7cccb59_optimizeFunction(_1b7c70e1b_Optimizer*, jule::Ptr<_1eb023b80_Fn>&);
inline void _1b7cdc43d_optimizeStruct(_1b7c70e1b_Optimizer*, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1b7ce5644_optimizeGlobals(_1b7c70e1b_Optimizer*, jule::Ptr<_1d052c825_Package>&);
inline void _1b7d0a1e7_optimizeFunctions(_1b7c70e1b_Optimizer*, jule::Ptr<_1d052c825_Package>&);
inline void _1b7d0b935_optimizeStructs(_1b7c70e1b_Optimizer*, jule::Ptr<_1d052c825_Package>&);
inline void _1b7ca2139_optimizePackage(_1b7c70e1b_Optimizer*, jule::Ptr<_1d052c825_Package>&);
inline void _1b7cd0992_Optimize(_1b7c70e1b_Optimizer*);
struct _1b7c70e1b_Optimizer {
	jule::Ptr<_1b6c04994_IR> _field_ir;
	

	_1b7c70e1b_Optimizer(void) = default;

	inline bool operator==(_1b7c70e1b_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1b7c70e1b_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1b7e7d513_Reset(void);
inline void static__1b7e7e7ab_Print(jule::Str, jule::Str);
struct _1b7e7e5be_AnsiEscape {
	

	_1b7e7e5be_AnsiEscape(void) = default;

	inline bool operator==(_1b7e7e5be_AnsiEscape _other) { return true; }

	inline bool operator!=(_1b7e7e5be_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1b7e810a4_LogFlat(_22ca31eb9_Log&);
inline void static__1b7e812b3_LogError(_22ca31eb9_Log&);
inline void static__1b7e814c2_Log(_22ca31eb9_Log&);
inline void static__1b7e816d1_PrintLogs(jule::Slice<_22ca31eb9_Log>&);
struct _1b7e80d51_Logger {
	

	_1b7e80d51_Logger(void) = default;

	inline bool operator==(_1b7e80d51_Logger _other) { return true; }

	inline bool operator!=(_1b7e80d51_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a9513898_Unix(_1a95134e1_AbsTime*);
struct _1a95134e1_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1a95134e1_AbsTime(void) = default;

	inline bool operator==(_1a95134e1_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a95134e1_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a9513b84_Time static__1a951402a_Unix(jule::U64);
inline _1a9513b84_Time static__1a9514228_Now(void);
inline jule::U64 _1a9514679_Unix(_1a9513b84_Time*);
inline jule::U64 _1a95148dd_Day(_1a9513b84_Time*);
inline jule::U64 _1a9514b52_Month(_1a9513b84_Time*);
inline jule::U64 _1a9514db6_Year(_1a9513b84_Time*);
inline jule::U64 _1a951512a_Second(_1a9513b84_Time*);
inline jule::U64 _1a951538e_Minute(_1a9513b84_Time*);
inline jule::U64 _1a9515603_Hour(_1a9513b84_Time*);
inline _1a95134e1_AbsTime _1a9515867_Abs(_1a9513b84_Time*);
struct _1a9513b84_Time {
	jule::U64 _field_sec = 0;
	

	_1a9513b84_Time(void) = default;

	inline bool operator==(_1a9513b84_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a9513b84_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a945957a_scopeCoder> static__1a9459b96_new(jule::Ptr<_1a951a99e_ObjectCoder>&);
inline void _1a9459e1b_rangeIndexIter(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050cd66_RangeIter>&);
inline void _1a945a191_rangeHashmapIter(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050cd66_RangeIter>&);
inline void _1a945a416_ifCase(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050b5b2_If>);
inline void _1a945a68b_conditional(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050bc22_Conditional>);
inline void _1a945a911_infIter(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050c00d_InfIter>);
inline void _1a945ab86_whileIter(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050c481_WhileIter>);
inline void _1a945ae0b_rangeIter(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050cd66_RangeIter>);
inline void _1a945b181_cont(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050d262_ContSt>);
inline void _1a945b406_label(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050d905_Label>);
inline void _1a945b67b_gotoSt(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050dbe1_GotoSt>);
inline void _1a945b901_postfix(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050e098_Postfix>);
inline void _1a945bb76_assign(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050e51b_Assign>);
inline void _1a945bdeb_mapLookupAssign(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050e8c3_MultiAssign>&);
inline void _1a945c171_multiAssignTup(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050e8c3_MultiAssign>&);
inline void _1a945c3e6_multiAssignFn(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050e8c3_MultiAssign>&);
inline void _1a945c66b_multiAssign(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050e8c3_MultiAssign>);
inline jule::Fn<void(void)> _1a945c979_matchExpr(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050ee12_Match>);
inline void _1a945cc98_case(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050ee12_Match>, jule::Ptr<_1d051095c_Case>);
inline void _1a945d01d_matchSt(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050ee12_Match>);
inline void _1a945d293_fallSt(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d0511012_FallSt>);
inline void _1a945d518_breakSt(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050d619_BreakSt>);
inline void _1a945d78d_setResult(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d0511386_RetSt>);
inline void _1a945da13_retSt(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d0511386_RetSt>);
inline void _1a945dc88_var(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d0550a13_Var>);
inline void _1a945e00d_st(jule::Ptr<_1a945957a_scopeCoder>, jule::Any);
inline void _1a945e283_scopeStmts(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050b1b6_Scope>&);
inline void _1a945e508_scope(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1d050b1b6_Scope>);
inline void _1a945e77d_funcScope(jule::Ptr<_1a945957a_scopeCoder>, jule::Ptr<_1eb026831_FnIns>);
struct _1a945957a_scopeCoder {
	jule::Ptr<_1a951a99e_ObjectCoder> _field_oc;
	

	_1a945957a_scopeCoder(void) = default;

	inline bool operator==(_1a945957a_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a945957a_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9462220_exprCoder> static__1a946261b_new(jule::Ptr<_1a951a99e_ObjectCoder>&);
inline void _1a9462891_string(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0095b1_Const>&);
inline void _1a9462b16_boolean(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0095b1_Const>&);
inline void _1a9462ce2_nilLit(jule::Ptr<_1a9462220_exprCoder>);
inline jule::Bool _1a9463100_ftoaSpecialCases(jule::Ptr<_1a9462220_exprCoder>, jule::F64&);
inline void _1a9463375_float32(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0095b1_Const>&);
inline void _1a94635ea_float64(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0095b1_Const>&);
inline void _1a9463870_constant(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0095b1_Const>);
inline void _1a9463c38_divByZeroBinary(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_212a0c2ab_Token>&, jule::Ptr<_1eb0153d0_OperandExprModel>&, jule::Ptr<_1eb0153d0_OperandExprModel>&);
inline void _1a9463ead_unsafeBinary(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb015897_BinopExprModel>);
inline void _1a9464233_binary(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb015897_BinopExprModel>);
inline void _1a94644a8_var(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d0550a13_Var>);
inline void _1a946472d_structureIns(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1ea320268_StructIns>);
inline void _1a94649a3_unary(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb015c4e_UnaryExprModel>);
inline void _1a9464c28_structureLit(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb016502_StructLitExprModel>);
inline void _1a9464e9d_allocStructure(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb016810_AllocStructLitExprModel>);
inline void _1a9465223_casting(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb016d60_CastingExprModel>);
inline void _1a9465498_args(jule::Ptr<_1a9462220_exprCoder>, jule::Slice<jule::Any>);
inline void _1a946571d_modelForCall(jule::Ptr<_1a9462220_exprCoder>, jule::Any);
inline void _1a9465993_pushCallInf(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb017712_FnCallExprModel>&);
inline jule::Bool _1a9465ca1_isWrapped(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb017712_FnCallExprModel>&);
inline void _1a9466026_pureFuncCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb017712_FnCallExprModel>&);
inline void _1a946629b_coFuncCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb017712_FnCallExprModel>&);
inline void _1a94665ba_writeUseExpr(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb026831_FnIns>&, jule::Ptr<_1d0598572_Data>);
inline void _1a9466840_funcCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb017712_FnCallExprModel>);
inline void _1a9466ab5_slice(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb017ab9_SliceExprModel>);
inline void _1a9466d3a_indexing(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01803c_IndexingExprModel>);
inline void _1a94670b0_unsafeIndexing(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d068db51_UnsafeIndexingExprModel>);
inline void _1a9467335_anonFunc(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0183e4_AnonFnExprModel>);
inline void _1a94675aa_mapExpr(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb018c1e_MapExprModel>);
inline void _1a9467830_slicing(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01925d_SlicingExprModel>);
inline void _1a9467aa5_traitSub(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01979c_TraitSubIdentExprModel>);
inline void _1a9467d2a_structureSub(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01a14e_StructSubIdentExprModel>);
inline void _1a94680a0_commonIdent(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01ab99_CommonIdentExprModel>);
inline void _1a9468325_commonSub(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01b20a_CommonSubIdentExprModel>);
inline void _1a946859a_array(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01a8ad_ArrayExprModel>);
inline void _1a9468820_funcInsCommon(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb026831_FnIns>);
inline void _1a9468a95_funcIns(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb026831_FnIns>);
inline void _1a9468d1a_tuple(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01b507_TupleExprModel>);
inline void _1a9469090_newCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel>);
inline void _1a9469315_outCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel>);
inline void _1a946958a_outlnCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>);
inline void _1a9469810_panicCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel>);
inline void _1a9469a85_assertCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel>);
inline void _1a9469d0a_errorCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel>);
inline void _1a946a080_copyCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01e85c_BuiltinCopyCallExprModel>);
inline void _1a946a305_lenCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01da26_BuiltinLenCallExprModel>);
inline void _1a946a57a_capCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel>);
inline void _1a946a800_deleteCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>);
inline void _1a946aa75_makeCallSlice(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>&);
inline void _1a946acea_makeCallStr(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>&);
inline void _1a946b070_makeCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>);
inline void _1a946b2e5_pushToSlice(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d068e019_PushToSliceExprModel>);
inline void _1a946b56a_appendCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel>);
inline void _1a946b7e0_cloneCall(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel>);
inline void _1a946ba65_sizeof(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb020044_SizeofExprModel>);
inline void _1a946bcda_alignof(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb020330_AlignofExprModel>);
inline jule::Str _1a946c0e8_runeLit(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb02061b_RuneExprModel>);
inline void _1a946c36d_structureStatic(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb01a4e5_StructStaticIdentExprModel>);
inline void _1a946c5e3_integratedToStr(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb020929_IntegratedToStrExprModel>);
inline void _1a946c868_backendEmit(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb020ce2_BackendEmitExprModel>);
inline void _1a946cadd_free(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1eb0210cd_FreeExprModel>);
inline void _1a946cd63_mutSlicing(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d068e5d0_MutSlicingExprModel>);
inline void _1a946d0d8_strInsertBegin(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d068e976_StrInsertBeginExprModel>);
inline void _1a946d35d_model(jule::Ptr<_1a9462220_exprCoder>, jule::Any);
inline void _1a946d5d3_expr(jule::Ptr<_1a9462220_exprCoder>, jule::Any);
inline void _1a946d858_val(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d05995ea_Value>);
inline void _1a946dacd_initExpr(jule::Ptr<_1a9462220_exprCoder>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1a9462220_exprCoder {
	jule::Ptr<_1a951a99e_ObjectCoder> _field_oc;
	

	_1a9462220_exprCoder(void) = default;

	inline bool operator==(_1a9462220_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9462220_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a9471680_cloneFuncDecl(jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Str static__1a9471927_cloneFuncDef(jule::Ptr<_1ea31ed8e_Struct>&);
struct _1a9471383_deriveCoder {
	

	_1a9471383_deriveCoder(void) = default;

	inline bool operator==(_1a9471383_deriveCoder _other) { return true; }

	inline bool operator!=(_1a9471383_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9472807_TestCoder> static__1a9472c7a_New(jule::Ptr<_1a951a99e_ObjectCoder>&);
inline jule::Ptr<_1d05298bb_ImportInfo> _1a9472ede_findTestingPackage(jule::Ptr<_1a9472807_TestCoder>);
inline void _1a9473264_appendTest(jule::Ptr<_1a9472807_TestCoder>, jule::Ptr<_1eb026831_FnIns>);
inline void _1a94734d9_appendPackageTests(jule::Ptr<_1a9472807_TestCoder>, jule::Ptr<_1d052c825_Package>&);
inline jule::Bool _1a947374d_readyTestingPackage(jule::Ptr<_1a9472807_TestCoder>);
inline void _1a9473929_callTmReset(jule::Ptr<_1a9472807_TestCoder>);
inline void _1a9473b05_callTmFailed(jule::Ptr<_1a9472807_TestCoder>);
inline void _1a9473cd1_callTmSkipped(jule::Ptr<_1a9472807_TestCoder>);
inline void _1a9473eac_Serialize(jule::Ptr<_1a9472807_TestCoder>);
struct _1a9472807_TestCoder {
	jule::Ptr<_1ea320268_StructIns> _field_t;
	jule::Ptr<_1eb023b80_Fn> _field_tmReset;
	jule::Ptr<_1eb023b80_Fn> _field_tmFailed;
	jule::Ptr<_1eb023b80_Fn> _field_tmSkipped;
	jule::Ptr<_1a951a99e_ObjectCoder> _field_oc;
	

	_1a9472807_TestCoder(void) = default;

	inline bool operator==(_1a9472807_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a9472807_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a9475420_toOut(jule::Str&, jule::Uintptr);
inline jule::Str static__1a947580a_toLocal(jule::I64, jule::I64, jule::Str&);
inline jule::Str static__1a9475aa2_func(jule::Ptr<_1eb023b80_Fn>&);
inline jule::Str static__1a9475d49_funcIns(jule::Ptr<_1eb026831_FnIns>&);
inline jule::Str static__1a94760e1_traitDecl(jule::Ptr<_1d04ed4a5_Trait>);
inline jule::Str static__1a9476388_param(jule::Ptr<_1eb022343_Param>&);
inline jule::Str static__1a9476630_structure(jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Str static__1a94768c7_structureIns(jule::Ptr<_1ea320268_StructIns>&);
inline jule::Str static__1a9476b6e_field(jule::Ptr<_1ea2e3deb_Field>&);
inline jule::Str static__1a9476e16_var(jule::Ptr<_1d0550a13_Var>);
inline jule::Str static__1a94771ad_iterBegin(jule::Uintptr);
inline jule::Str static__1a9477455_iterEnd(jule::Uintptr);
inline jule::Str static__1a94776ec_iterNext(jule::Uintptr);
inline jule::Str static__1a9477994_label(jule::Str&);
inline jule::Str static__1a9477c3b_matchEnd(jule::Uintptr);
inline jule::Str static__1a9477ed3_caseBegin(jule::Uintptr);
struct _1a9474e58_identCoder {
	

	_1a9474e58_identCoder(void) = default;

	inline bool operator==(_1a9474e58_identCoder _other) { return true; }

	inline bool operator!=(_1a9474e58_identCoder _other) { return !this->operator==(_other); }


};
struct _1a94a76e9_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1a94a76e9_SerializationInfo(void) = default;

	inline bool operator==(_1a94a76e9_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a94a76e9_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a947cc0d_traitHash {
	jule::Ptr<_1d04ed4a5_Trait> _field_t;
	jule::Ptr<_1ea320268_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1a947cc0d_traitHash(void) = default;

	inline bool operator==(_1a947cc0d_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a947cc0d_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9521202_Str(_1a9520e27_customType*);
inline jule::Bool _1a9521510_Equal(jule::Ptr<_1a9520e27_customType>, jule::Ptr<_1d05c4504_TypeKind>);
struct _1a9520e27_customType {
	jule::Str _field_kind;
	

	_1a9520e27_customType(void) = default;

	inline bool operator==(_1a9520e27_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a9520e27_customType _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a9521c5d_toType(jule::Str);
inline jule::Str static__1a9522005_prim(jule::Ptr<_1d05c9251_Prim>);
inline jule::Str static__1a952229c_tuple(jule::Ptr<_1d05cdec0_Tuple>);
inline jule::Str static__1a9522544_asSptr(jule::Str);
inline jule::Str static__1a95227db_asPtr(jule::Str);
inline jule::Str static__1a9522a83_sptr(jule::Ptr<_1d05cc9d5_Sptr>);
inline jule::Str static__1a9522d2a_ptr(jule::Ptr<_1d05d1049_Ptr>);
inline jule::Str static__1a95230c2_enumDecl(jule::Ptr<_1d05005ea_Enum>);
inline jule::Str static__1a9523369_typeEnumDecl(jule::Ptr<_1d0501be5_TypeEnum>);
inline jule::Str static__1a9523611_asSlice(jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Str static__1a95238a8_slice(jule::Ptr<_1d05cd442_Slc>);
inline jule::Str static__1a9523b50_mapType(jule::Ptr<_1d05ce9e8_Map>);
inline jule::Str static__1a9523de7_traitIdent(jule::Str);
inline jule::Str static__1a952418e_traitDecl(jule::Ptr<_1d04ed4a5_Trait>);
inline jule::Str static__1a9524436_structure(jule::Ptr<_1ea31ed8e_Struct>);
inline jule::Str static__1a95246cd_structureIns(jule::Ptr<_1ea320268_StructIns>);
inline jule::Str static__1a9524975_array(jule::Ptr<_1d05d05dc_Arr>);
inline jule::Str static__1a9524eb4_paramIns(jule::Ptr<_1eb025962_ParamIns>&);
inline void static__1a9525514_funcInsResult(jule::Str&, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Str static__1a95257ab_anonFunc(jule::Ptr<_1eb026831_FnIns>);
inline jule::Str static__1a9525a53_func(jule::Ptr<_1eb026831_FnIns>);
inline jule::Str static__1a9525cea_kind(jule::Ptr<_1d05c4504_TypeKind>);
struct _1a9521730_typeCoder {
	

	_1a9521730_typeCoder(void) = default;

	inline bool operator==(_1a9521730_typeCoder _other) { return true; }

	inline bool operator!=(_1a9521730_typeCoder _other) { return !this->operator==(_other); }


};
inline void static__1a9528638_ptr(jule::Str&, jule::Ptr<_1d05d1049_Ptr>);
inline void static__1a95288e1_sptr(jule::Str&, jule::Ptr<_1d05cc9d5_Sptr>);
inline void static__1a9528b99_mapType(jule::Str&, jule::Ptr<_1d05ce9e8_Map>);
inline void static__1a9528e52_slice(jule::Str&, jule::Ptr<_1d05cd442_Slc>);
inline void static__1a952920a_arr(jule::Str&, jule::Ptr<_1d05d05dc_Arr>);
inline void static__1a95294b3_func(jule::Str&, jule::Ptr<_1eb026831_FnIns>);
inline void static__1a952976b_tup(jule::Str&, jule::Ptr<_1d05cdec0_Tuple>);
inline void static__1a9529a24_codeMut(jule::Str&, jule::Ptr<_1d05c4504_TypeKind>&);
inline void static__1a9529ccc_codeMut1(jule::Str&, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Str static__1a952a074_code(jule::Ptr<_1d05c4504_TypeKind>&);
struct _1a9528160_resultCoder {
	

	_1a9528160_resultCoder(void) = default;

	inline bool operator==(_1a9528160_resultCoder _other) { return true; }

	inline bool operator!=(_1a9528160_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1abb70bb2_Name(_1abb707e9_Flag*);
inline jule::Str _1abb70d05_What(_1abb707e9_Flag*);
inline void _1abb70e48_Reset(_1abb707e9_Flag*);
inline jule::I32 _1abb7108b_Short(_1abb707e9_Flag*);
struct _1abb707e9_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1abb707e9_Flag(void) = default;

	inline bool operator==(_1abb707e9_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1abb707e9_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1abb72d3a_Name(_1abb7459a_Flag*);
inline jule::Str _1abb74127_What(_1abb7459a_Flag*);
inline void _1abb74886_Reset(_1abb7459a_Flag*);
inline jule::I32 _1abb749b8_Short(_1abb7459a_Flag*);
struct _1abb7459a_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1abb7459a_Flag(void) = default;

	inline bool operator==(_1abb7459a_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1abb7459a_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1abb76657_Name(_1abb77db7_Flag*);
inline jule::Str _1abb77944_What(_1abb77db7_Flag*);
inline void _1abb781a3_Reset(_1abb77db7_Flag*);
inline jule::I32 _1abb782d5_Short(_1abb77db7_Flag*);
struct _1abb77db7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1abb77db7_Flag(void) = default;

	inline bool operator==(_1abb77db7_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1abb77db7_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1abb79eb8_Name(_1abb7b728_Flag*);
inline jule::Str _1abb7b2a5_What(_1abb7b728_Flag*);
inline void _1abb7ba14_Reset(_1abb7b728_Flag*);
inline jule::I32 _1abb7bb46_Short(_1abb7b728_Flag*);
struct _1abb7b728_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1abb7b728_Flag(void) = default;

	inline bool operator==(_1abb7b728_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1abb7b728_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1abb7d7d5_Name(_1abb80045_Flag*);
inline jule::Str _1abb7eac2_What(_1abb80045_Flag*);
inline void _1abb80331_Reset(_1abb80045_Flag*);
inline jule::I32 _1abb80463_Short(_1abb80045_Flag*);
struct _1abb80045_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1abb80045_Flag(void) = default;

	inline bool operator==(_1abb80045_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1abb80045_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a9570ae2_FlagSet> static__1a9570dcd_New(void);
inline jule::Trait<_1a956e173_CommonFlag> _1a9571362_FindFlag(_1a9570ae2_FlagSet*, jule::Str);
inline jule::Trait<_1a956e173_CommonFlag> _1a9571670_FindFlagShort(_1a9570ae2_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a956e173_CommonFlag>> _1a95718d4_Flags(_1a9570ae2_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a9571be2_Parse(_1a9570ae2_FlagSet*, jule::Slice<jule::Str>);
inline void _1a9571dbd_Reset(_1a9570ae2_FlagSet*);
inline jule::Ptr<_1abb80045_Flag> _1abc01e96_addFlagCommon(_1a9570ae2_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1abb7b728_Flag> _1abc0a895_addFlagCommon(_1a9570ae2_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1abbeee1c_AddVar(_1a9570ae2_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1abc0884e_AddVar(_1a9570ae2_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a9570ae2_FlagSet {
	jule::Slice<jule::Trait<_1a956e173_CommonFlag>> _field_flags;
	

	_1a9570ae2_FlagSet(void) = default;


};
inline jule::Str _1ea2e5abd_Str(_1ea320268_StructIns*);
inline jule::Bool _1ea2e6c23_Equal(jule::Ptr<_1ea320268_StructIns>, jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1ea2e9077_Same(_1ea320268_StructIns*, jule::Ptr<_1ea320268_StructIns>);
inline jule::Ptr<_1eb023b80_Fn> _1ea2ea397_FindMethod(_1ea320268_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1ea32007b_FieldIns> _1ea2cc313_FindField(_1ea320268_StructIns*, jule::Str);
inline jule::Ptr<_1d0550a13_Var> _1ea2d8330_FindStatic(_1ea320268_StructIns*, jule::Str);
struct _1ea320268_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1ea31ed8e_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1d05c2cc7_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ea32007b_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1eb023b80_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1d04e218b_ReferenceStack> _field_Refers;
	_1ea2eb541_Operators _field_Operators;
	

	_1ea320268_StructIns(void) = default;


};
inline jule::Ptr<_1b7d395bc_ObjectDeadCode> static__1b7d39a1d_new(jule::Ptr<_1b6c04994_IR>&);
inline jule::Bool _1ab7c599e_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d04ed4a5_Trait>&);
inline jule::Bool _1ab7ca9d7_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Bool _1ab7d3429_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1ea320268_StructIns>&);
inline jule::Bool _1ab7d9056_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d0550a13_Var>&);
inline void _1ab7c5d12_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d04ed4a5_Trait>);
inline void _1ab7cb39a_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1eb026831_FnIns>);
inline void _1ab7d2703_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1ea320268_StructIns>);
inline void _1ab7d93b9_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d0550a13_Var>);
inline void _1b7d6bbe8_setReferencesAsLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d04e218b_ReferenceStack>&);
inline void _1b7d6be6d_inits(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d052c825_Package>&);
inline void _1b7d6c1e3_collectLivePackage(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d052c825_Package>&);
inline void _1b7d6c3be_collectLive(jule::Ptr<_1b7d395bc_ObjectDeadCode>);
inline void _1b7d6c644_removeDeadGlobals(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d0550a13_Var>>&);
inline void _1b7d6c8b9_removeDeadFns(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Slice<jule::Ptr<_1eb023b80_Fn>>&);
inline void _1b7d6cb3e_removeDeadStructs(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>&);
inline void _1b7d6cdb4_removeDeadTraits(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d04ed4a5_Trait>>&);
inline void _1b7d6d139_removeDeadsFile(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d0593748_SymbolTable>&);
inline void _1b7d6d3ae_removeDeadsPackage(jule::Ptr<_1b7d395bc_ObjectDeadCode>, jule::Ptr<_1d052c825_Package>&);
inline void _1b7d6d58a_removeDeads(jule::Ptr<_1b7d395bc_ObjectDeadCode>);
inline void _1b7d6d766_elimanate(jule::Ptr<_1b7d395bc_ObjectDeadCode>);
struct _1b7d395bc_ObjectDeadCode {
	_1b7d39303_liveTable _field_live;
	jule::Ptr<_1b6c04994_IR> _field_ir;
	

	_1b7d395bc_ObjectDeadCode(void) = default;


};
inline jule::Ptr<_1a951a99e_ObjectCoder> static__1a94de214_New(jule::Ptr<_1b6c04994_IR>&, _1a94a76e9_SerializationInfo);
inline void _1a947c1e6_write(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Str);
inline void _1a949c5ce_addIndent(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a94db7a5_doneIndent(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a94dbcc2_indent(jule::Ptr<_1a951a99e_ObjectCoder>);
inline jule::I64 _1a94e0325_findAnyType(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::I64 _1a94e6309_pushAnyType(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1d05c4504_TypeKind>&);
inline void _1a94a1bcc_pushResult(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1eb023b80_Fn>&);
inline jule::I64 _1a94a0e0c_findTypeOffset(_1a951a99e_ObjectCoder*, jule::Ptr<_1d04ed4a5_Trait>, jule::Ptr<_1d05c4504_TypeKind>);
inline void _1a94ddc6e_locInfo(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_212a0c2ab_Token>&);
inline void _1a947c966_head(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951b076_links(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951b1a8_prepareStructures(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951b2da_iterPackages(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>);
inline void _1a951b41c_buildTraitMap(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951b54e_traitDecls(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951b681_structurePlainDecl(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1a951b7b3_structurePlainDecls(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951b8e5_fieldDecl(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea32007b_FieldIns>&);
inline void _1a951ba27_structureDestructor(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951bb59_structureDeriveDefsDecls(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951bc8b_structureOperatorEq(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Str&, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951bdbd_structureOperatorNotEq(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Str&, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951c000_structureOperator(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Str&, jule::Ptr<_1eb026831_FnIns>&, jule::Str);
inline void _1a951c132_structureOperators(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951c264_structureInsDecl(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951c396_structureDecl(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1a951c4c8_structureDecls(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951c60a_paramsDecls(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>&);
inline void _1a951c73c_funcHead(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1eb026831_FnIns>&, jule::Bool);
inline void _1a951c86e_funcDecl(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1eb023b80_Fn>&, jule::Bool);
inline void _1a951c9a1_funcDecls(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951cad3_traitDataTypes(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951cc15_paramIns(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1eb025962_ParamIns>&);
inline void _1a951cd47_paramsIns(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>&);
inline void _1a951ce79_varInitExpr(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1d0550a13_Var>&, jule::Fn<void(void)>);
inline void _1a951d0ab_var(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1d0550a13_Var>);
inline void _1a951d1dd_func(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1eb023b80_Fn>&);
inline void _1a951d320_traitWrappers(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951d452_traitDatas(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951d584_globals(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951d6b6_decls(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951d7e8_structureMethods(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951d92a_structureDeriveDefs(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951da5c_structureOstream(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951db8e_structureIns(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea320268_StructIns>&);
inline void _1a951dcc1_structure(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1ea31ed8e_Struct>&);
inline void _1a951de03_structures(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951e035_funcs(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951e167_pushInit(jule::Ptr<_1a951a99e_ObjectCoder>, jule::Ptr<_1d052c825_Package>&);
inline void _1a951e332_initCaller(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951e50d_end(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951e6d9_serializeHead(jule::Ptr<_1a951a99e_ObjectCoder>);
inline void _1a951e8b5_Serialize(jule::Ptr<_1a951a99e_ObjectCoder>);
struct _1a951a99e_ObjectCoder {
	jule::Str _field_Obj;
	jule::Str _field_anyObj;
	jule::Ptr<_1b6c04994_IR> _field_ir;
	_1a94a76e9_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a947cc0d_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1a9462220_exprCoder> _field_ec;
	jule::Ptr<_1a945957a_scopeCoder> _field_sc;
	jule::I64 _field_declPos = 0;
	

	_1a951a99e_ObjectCoder(void) = default;


};
struct __jule_tuple_x_1b6c04994_IR__jule_tuple_s_22ca31eb9_Log {
	jule::Ptr<_1b6c04994_IR> __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_x_1b6c04994_IR__jule_tuple_s_22ca31eb9_Log static__1b6c58b4c_Build(jule::Str, jule::I64);
inline void _1b6c6b5aa_appendStructs(_1b6c04994_IR*, jule::Ptr<_1d052c825_Package>&, jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>&);
inline jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _1b6c7e5e0_GetAllStructures(_1b6c04994_IR*);
inline void _1b6c8d456_appendGlobals(_1b6c04994_IR*, jule::Ptr<_1d052c825_Package>&, jule::Slice<jule::Ptr<_1d0550a13_Var>>&);
inline jule::Slice<jule::Ptr<_1d0550a13_Var>> _1b6e1c140_GetAllGlobals(_1b6c04994_IR*);
inline void _1b6e243ab_Order(_1b6c04994_IR*);
struct _1b6c04994_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1d052c825_Package> _field_Main;
	jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>> _field_Used;
	_1d0973210_OrderedDefines _field_Ordered;
	

	_1b6c04994_IR(void) = default;


};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_i64__jule_tuple_bool _1abb934cb_parseInteger(_1a95732ba_argParser*, jule::Str&, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1abb9b5c2_parseInteger(_1a95732ba_argParser*, jule::Str&, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1a9573ab2_getData(_1a95732ba_argParser*);
inline jule::VoidExceptional _1a9573d04_processFlag(_1a95732ba_argParser*, jule::Trait<_1a956e173_CommonFlag>&);
inline jule::VoidExceptional _1a9574079_singleDash(_1a95732ba_argParser*, jule::Str&);
inline jule::VoidExceptional _1a95742ee_doubleDash(_1a95732ba_argParser*, jule::Str&);
inline jule::VoidExceptional _1a95744ca_tryArg(_1a95732ba_argParser*);
inline jule::VoidExceptional _1a95746a6_parse(_1a95732ba_argParser*);
struct _1a95732ba_argParser {
	_1a9570ae2_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1a95732ba_argParser(void) = default;


};
inline void _22b2d95ec_Free(void*);
inline jule::Str _22b2edd2b_BytePtrToStr(jule::U8*);
inline jule::I64 _22b1a4990_GetLastErrno(void);
inline jule::I64 _22b31c0e1_Stat(jule::U8*, struct stat*);
inline jule::I64 _22b31c4cb_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _22b31c81c_Getcwd(jule::U8*, jule::U64);
inline DIR* _22b31cce5_Opendir(jule::U8*);
inline struct dirent* _22b31d08c_Readdir(DIR*);
inline jule::I64 _22b31d334_Closedir(DIR*);
inline jule::I64 _22b31dbb4_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _22b31de5b_Rmdir(jule::U8*);
inline jule::I64 _22b31e203_Unlink(jule::U8*);
inline jule::I64 _22c09b2e2_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _22c09b6cc_Read(jule::I64, void*, jule::U64);
inline jule::I64 _22c09ba51_Close(jule::I64);
inline jule::I64 _22c09be3b_Write(jule::I64, void*, jule::U64);
inline void _22c09c14a_Exit(jule::I64);
inline jule::I64 _22c14aa56_getLastOsError(void);
inline jule::Slice<jule::Str> _22c14ba79_Args(void);
inline jule::Exceptional<jule::Str> _22c14beec_WorkingDir(void);
inline jule::Exceptional<jule::Str> _22c14c8b0_getwd(void);
inline jule::Bool _22db5d006_IsLetter(jule::I32);
inline jule::Bool _22dbc59ca_is16(jule::Slice<_22dbc3e18_Range16>, jule::U16);
inline jule::Bool _22dbc5d1b_is32(jule::Slice<_22dbc438b_Range32>, jule::U32);
inline jule::Bool _22dbc65ad_isExcludingLatin(jule::Ptr<_22dbc480e_RangeTable>, jule::I32);
inline jule::Bool _22dbc6855_IsUpper(jule::I32);
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline __jule_tuple_i32__jule_tuple_int _22dc8d642_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _22dc8d961_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _22dc8dc08_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _22dc8e9a6_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _22dc8ece7_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _22dc90336_RuneCountStr(jule::Str);
inline jule::Bool _22dc905cd_RuneStart(jule::U8);
inline jule::Slice<jule::U8> _22dcb16ba_Stobs(jule::Str&);
inline void _22dcb6ca8_PushToStrBuffer(jule::Str&, jule::Slice<jule::U8>);
inline jule::I64 _22dcb72a3_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _22dcb7528_FindLastByteStr(jule::Str&, jule::U8);
inline jule::Str _22dc94ca8_Repeat(jule::Str, jule::I64);
inline jule::Bool _22dc98163_hasPrefix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _22dc943e5_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _22dcb768d_hasSuffix(jule::Str&, jule::Str&, jule::I64);
inline jule::Bool _22dcb7946_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _22dcb7d31_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _22dcb866c_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _22dcb8a24_FindLast(jule::Str, jule::Str);
inline jule::I64 _22dcc0047_findRune(jule::Slice<jule::U8>&, jule::I32);
inline jule::I64 _22dcc0883_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _22dcc1697_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _22dcc1dc3_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _22dcc2214_Contains(jule::Str, jule::Str);
inline jule::Bool _22dcc2bd7_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _22dcc3028_Count(jule::Str, jule::Str);
inline jule::Str _22dcc34ac_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _22dcc0520_trimLeft(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _22dcc4568_TrimLeft(jule::Str, jule::Str);
inline void _22dcc4821_trimRight(jule::Slice<jule::U8>&, jule::Slice<jule::U8>&);
inline jule::Str _22dcc4ea3_Trim(jule::Str, jule::Str);
inline jule::Str _22dcc52e4_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _22dcc667a_Clean(jule::Str);
inline jule::Str _22dcc6c0d_FromSlash(jule::Str);
inline jule::Str _22dcc702c_Join(jule::Slice<jule::Str>);
inline jule::Str _22dcc72c4_Ext(jule::Str);
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_str__jule_tuple_bool _22dcc756b_Abs(jule::Str);
inline jule::Str _22dcc7813_Base(jule::Str);
inline jule::Str _22dcc7b87_Dir(jule::Str);
inline jule::Str _22dcc7e2e_VolumeName(jule::Str);
inline jule::Bool _22dcc8c87_IsPathSep(jule::U8);
inline jule::Bool _22dcc9073_IsAbs(jule::Str);
inline jule::I64 _22dcc931a_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22dcc9639_abs(jule::Str);
inline jule::Str _22dcc98d1_join(jule::Slice<jule::Str>);
inline jule::I64 _22b1cdd93_getLastFsError(void);
inline jule::I64 _21272c99e_getLastProcessError(void);
inline jule::Slice<char*> _212730b6c_strSliceToCstrSlice(jule::Slice<jule::Str>);
inline jule::I64 _2127310bd_execvp(jule::Str, jule::Slice<jule::Str>);
inline jule::I64 _2127314a8_execve(jule::Str, jule::Slice<jule::Str>, jule::Slice<jule::Str>);
inline void _2127320be_Exit(jule::I64);
inline jule::Str _2127322bc_Executable(void);
inline jule::Bool _22ca24d58_IsStdHeaderPath(jule::Str);
inline jule::Bool _22ca25111_IsValidHeaderExt(jule::Str);
inline jule::Bool _22ca253a8_IsValidCppExt(jule::Str);
inline jule::Str _22ca32409_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _22ca326e5_argToStr(jule::Any);
inline jule::I64 _22ca3298c_findNextFmt(jule::Str);
inline jule::Str _22ca32d22_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22ca33d9a_IsTopDirective(jule::Str);
inline jule::Bool _22ca352ca_IsWindows(jule::Str);
inline jule::Bool _22ca35583_IsDarwin(jule::Str);
inline jule::Bool _22ca3582a_IsLinux(jule::Str);
inline jule::Bool _22ca35b49_IsI386(jule::Str);
inline jule::Bool _22ca35de1_IsAmd64(jule::Str);
inline jule::Bool _22ca36188_IsArm64(jule::Str);
inline jule::Bool _22ca36430_IsUnix(jule::Str);
inline jule::Bool _22ca367a4_Is32Bit(jule::Str);
inline jule::Bool _22ca36a4b_Is64Bit(jule::Str);
inline void _21271c6b4_init(void);
inline jule::Bool _212a0c9b5_IsUnaryOp(jule::Str);
inline jule::Bool _212a0cca1_IsBinOp(jule::Str);
inline jule::Bool _212a0d367_IsStr(jule::Str);
inline jule::Bool _212a0d60e_IsRawStr(jule::Str);
inline jule::Bool _212a0d8a6_IsRune(jule::Str);
inline jule::Bool _212a0dec2_IsBool(jule::Str);
inline jule::Bool _212a0e269_IsFloat(jule::Str);
inline jule::Bool _212a0e511_IsNum(jule::Str);
inline jule::Bool _212a0ea50_IsIgnoreIdent(jule::Str);
inline jule::Bool _212a0ece7_IsAnonIdent(jule::Str);
inline jule::Bool _212a10336_IsSpace(jule::I32);
inline jule::Bool _212a10787_IsLetter(jule::I32);
inline jule::Bool _212a10cc6_IsDecimal(jule::U8);
inline jule::Bool _212a1106d_IsBinary(jule::U8);
inline jule::Bool _212a11315_IsOctal(jule::U8);
inline jule::Bool _212a115ac_IsHex(jule::U8);
inline jule::Bool _212a11854_IsAssign(jule::U64);
inline jule::Bool _212a11aeb_IsPostfixOp(jule::Str);
inline jule::Bool _212a11d93_IsAssignOp(jule::Str);
inline jule::Ptr<_212a12646_File> _212a13b75_NewFileSet(jule::Str);
inline _22ca31eb9_Log _212a15418_makeErr(jule::I64, jule::I64, jule::Ptr<_212a12646_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _212a1579d_bytesHasPrefix(jule::Slice<jule::U8>&, jule::Str);
inline jule::Str _212a15ade_floatFmtE(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a15e74_floatFmtP(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a162b5_floatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a16606_floatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a16947_floatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a16d98_floatNum(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a17140_commonNum(jule::Slice<jule::U8>&);
inline jule::Str _212a173d7_binaryNum(jule::Slice<jule::U8>&);
inline jule::Bool _212a17728_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _212a17a69_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _212a17daa_isFloatFmtDotnp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _212a181eb_isFloatFmtDotp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Bool _212a1853c_isFloatFmtDotfp(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a1898d_octalNum(jule::Slice<jule::U8>&);
inline jule::Str _212a18c35_hexNum(jule::Slice<jule::U8>&);
inline jule::Str _212a19076_hexEscape(jule::Slice<jule::U8>&, jule::I64);
inline jule::Str _212a1931d_bigUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _212a195d7_littleUnicodePointEscape(jule::Slice<jule::U8>&);
inline jule::Str _212a19791_hexByteEscape(jule::Slice<jule::U8>&);
inline jule::Str _212a19a27_byteEscape(jule::Slice<jule::U8>&);
inline jule::Slice<_22ca31eb9_Log> _212a1e521_Lex(jule::Ptr<_212a12646_File>, jule::I64);
inline jule::I64 _1eae9d225_LeadingZeros64(jule::U64);
inline jule::I64 _1eae9e15a_TrailingZeros(jule::U64);
inline jule::I64 _1eae9ea51_TrailingZeros32(jule::U32);
inline jule::I64 _1eae9ece8_TrailingZeros64(jule::U64);
inline jule::I64 _1eaea5408_Len32(jule::U32);
inline jule::I64 _1eaea56a0_Len64(jule::U64);
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
inline __jule_tuple_u64__jule_tuple_u64 _1eaea6360_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1eaea79e3_Mul64(jule::U64, jule::U64);
inline jule::U32 _1eadca0b9_F32Bits(jule::F32);
inline jule::F32 _1eadca3a5_F32FromBits(jule::U32);
inline jule::U64 _1eadca64c_F64Bits(jule::F64);
inline jule::F64 _1eadca96b_F64FromBits(jule::U64);
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline __jule_tuple_f64__jule_tuple_int _1eadcce57_Frexp(jule::F64);
inline jule::F64 _1eaeab794_NaN(void);
inline jule::Bool _1eaeab8c6_IsNaN(jule::F64);
inline jule::F64 _1eaeaba08_Inf(jule::I64);
inline jule::Bool _1eaeabb3a_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1eaeabc6c_normalize(jule::F64);
inline jule::F64 _1eaeacb3b_Log(jule::F64);
inline jule::F64 _1eaead257_Abs(jule::F64);
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
inline __jule_tuple_f64__jule_tuple_f64 _1eaeb2008_Modf(jule::F64);
inline jule::F64 _1eaeb2448_Log2(jule::F64);
inline jule::Str _22bec87a2_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _22bec8ad2_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _22c026a0e_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _22c00d485_floatInfo&);
inline jule::Slice<jule::U8> _1eaed922d_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1eaed9041_decimalSlice, jule::I64, jule::U8);
inline void _1eaed9360_roundShortest(_1eaee605e_decimal&, jule::U64, jule::I64, _22c00d485_floatInfo&);
inline jule::Slice<jule::U8> _1eaed9492_fmtE(jule::Slice<jule::U8>, jule::Bool, _1eaed9041_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1eaed95c4_fmtF(jule::Slice<jule::U8>, jule::Bool, _1eaed9041_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1eaed9816_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _22c00d485_floatInfo&);
inline jule::Slice<jule::U8> _1eaed9948_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _22c00d485_floatInfo&);
inline jule::I64 _1eaed9a7a_min(jule::I64, jule::I64);
inline jule::I64 _1eaed9bac_max(jule::I64, jule::I64);
inline jule::U8 _1eaeda20c_lower(jule::U8);
struct __jule_tuple_u64__jule_tuple__1ea935383_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline __jule_tuple_u64__jule_tuple__1ea935383_ConvError _1eaeda33e_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1eaeda471_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1eaeda5a3_ParseInt(jule::Str, jule::I64, jule::I64);
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_f64__jule_tuple_bool _1eaeda9e3_eiselLemire64(jule::U64, jule::I64, jule::Bool);
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_f32__jule_tuple_bool _1eaedab25_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1eaedc385_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1eaedc682_special(jule::Str);
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1eaedc929_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1eaede3a9_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1eaede794_atof32exact(jule::U64, jule::I64, jule::Bool);
struct __jule_tuple_f64__jule_tuple__1ea935383_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline __jule_tuple_f64__jule_tuple__1ea935383_ConvError _1eaeded6b_atofHex(jule::Str, _22c00d485_floatInfo&, jule::U64, jule::I64, jule::Bool, jule::Bool);
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1ea935383_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ea935383_ConvError _1eaee0223_atof32(jule::Str);
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError _1eaee04ba_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError _1eaee080b_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1eaee0b4c_ParseFloat(jule::Str, jule::I64);
inline void _1eaee13bc_ryuFtoaFixed32(_1eaed9041_decimalSlice&, jule::U32, jule::I64, jule::I64);
inline void _1eaee180c_ryuFtoaFixed64(_1eaed9041_decimalSlice&, jule::U64, jule::I64, jule::I64);
inline void _1eaee20e3_formatDecimal(_1eaed9041_decimalSlice&, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1eaee2566_ryuFtoaShortest(_1eaed9041_decimalSlice&, jule::U64, jule::I64, _22c00d485_floatInfo&);
inline jule::I64 _1eaee280d_mulByLog2Log10(jule::I64);
inline jule::I64 _1eaee2aa5_mulByLog10Log2(jule::I64);
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1eaee2e90_computeBounds(jule::U64, jule::I64, _22c00d485_floatInfo&);
inline void _1eaee3534_ryuDigits(_1eaed9041_decimalSlice&, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1eaee3b1c_ryuDigits32(_1eaed9041_decimalSlice&, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1eaee4007_mult64bitPow10(jule::U32, jule::I64, jule::I64);
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1eaee43e2_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1eaee4733_divisibleByPow5(jule::U64, jule::I64);
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
inline __jule_tuple_u32__jule_tuple_u32 _1eaee49ca_divmod1e9(jule::U64);
inline void _1eaee7747_trim(_1eaee605e_decimal&);
inline void _1eaee7a00_rightShift(_1eaee605e_decimal&, jule::U64);
inline jule::Bool _1eaee7e62_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1eaee81d7_leftShift(_1eaee605e_decimal&, jule::U64);
inline jule::Bool _1eaee8528_shouldRoundUp(_1eaee605e_decimal&, jule::I64);
inline jule::Str _1eaee9b45_FmtUint(jule::U64, jule::I64);
inline jule::Str _1eaee9eca_FmtInt(jule::I64, jule::I64);
inline jule::Str _1eaeea272_Itoa(jule::I64);
inline jule::Str _1eaeea591_small(jule::I64);
inline jule::Bool _1eaeea838_isPowerOfTwo(jule::I64);
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline __jule_tuple_su8__jule_tuple_str _1eaeead66_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1eaeec274_RealKindOf(jule::Str);
inline jule::I64 _1eaeec51b_BitsizeOf(jule::Str);
inline jule::Str _1eaeec83a_IntFromBits(jule::I64);
inline jule::Str _1eaeecad2_UintFromBits(jule::I64);
inline jule::Str _1eaeecd79_FloatFromBits(jule::I64);
inline jule::Bool _1eaeed929_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1eaeedbc1_BitsizeOfFloat(jule::F64);
inline jule::I64 _1eaeede68_BitsizeOfInt(jule::I64);
inline jule::I64 _1eaeee210_BitsizeOfUint(jule::U64);
inline void _1eaeee375_UpdateTarget(void);
inline void _1eaeee4da_init(void);
inline jule::F64 _1eb003324_Min(jule::Str);
inline jule::F64 _1eb003610_Max(jule::Str);
inline jule::Bool _1eb003984_IsI8Compatible(jule::Str);
inline jule::Bool _1eb003c70_IsI16Compatible(jule::Str);
inline jule::Bool _1eb004017_IsI32Compatible(jule::Str);
inline jule::Bool _1eb004336_IsI64Compatible(jule::Str);
inline jule::Bool _1eb0045cd_IsU8Compatible(jule::Str);
inline jule::Bool _1eb004875_IsU16Compatible(jule::Str);
inline jule::Bool _1eb004b1c_IsU32Compatible(jule::Str);
inline jule::Bool _1eb004e91_IsU64Compatible(jule::Str);
inline jule::Bool _1eb005238_IsF32Compatible(jule::Str);
inline jule::Bool _1eb0054d0_IsF64Compatible(jule::Str);
inline jule::Bool _1eb005821_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1eb005ab8_IsI16Greater(jule::Str);
inline jule::Bool _1eb005d60_IsI32Greater(jule::Str);
inline jule::Bool _1eb006107_IsI64Greater(jule::Str);
inline jule::Bool _1eb00639e_IsU16Greater(jule::Str);
inline jule::Bool _1eb006800_IsU32Greater(jule::Str);
inline jule::Bool _1eb006a97_IsU64Greater(jule::Str);
inline jule::Bool _1eb006d3e_IsF32Greater(jule::Str);
inline jule::Bool _1eb0070d6_IsF64Greater(jule::Str);
inline jule::Bool _1eb007427_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1eb00845b_IsSigInt(jule::Str);
inline jule::Bool _1eb008747_IsUnsigInt(jule::Str);
inline jule::Bool _1eb0089de_IsInt(jule::Str);
inline jule::Bool _1eb008d0d_IsFloat(jule::Str);
inline jule::Bool _1eb0090a5_IsNum(jule::Str);
inline jule::Bool _1eb00934c_IsSigNum(jule::Str);
inline void _1eb012cd4_lshiftUnsig(_1eb0095b1_Const&, _1eb0095b1_Const&);
inline void _1eb0130d1_rshiftUnsig(_1eb0095b1_Const&, _1eb0095b1_Const&);
inline jule::Bool _1d0569059_IsAscii(jule::I32);
inline jule::I32 _1d05691d0_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1d0581219_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1d0581516_ToStr(jule::Slice<jule::U8>);
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_u8__jule_tuple_bool _1d05817ad_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1d0581abb_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::Slice<jule::U8> _1d0581e0c_strEsqSeq(jule::Slice<jule::U8>, jule::I64&);
inline jule::I64 _1d067d02a_findFormatPrefix(jule::Slice<jule::U8>&, jule::I64&);
inline jule::Slice<jule::U8> _1d0683b24_getFormatRange(jule::I64&, jule::Slice<jule::U8>&);
inline void _1d0683dcc_FmtByDefault(jule::Str&, jule::Any&);
inline void _1d06842a6_applyFmtByDefault(jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline void _1d06846a2_applyFmt(jule::Slice<jule::U8>&, jule::Str&, jule::I64&, jule::Slice<jule::Any>&);
inline jule::Str _1d06849b0_Format(jule::Str&, jule::Slice<jule::Any>);
inline jule::Str _1d06852c9_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1eb028943_parameterUsesGenerics(jule::Ptr<_1eb025962_ParamIns>&, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>&);
inline jule::Ptr<_1d05c88d2_TypeSymbol> _1d04e3885_buildType(jule::Ptr<_1ea30369c_TypeDecl>);
inline jule::Ptr<_1d05995ea_Value> _1d04e3b71_buildExpr(jule::Ptr<_1ea307bbd_Expr>);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d04e3e18_buildTypeAlias(jule::Ptr<_1ea31996b_TypeAliasDecl>);
inline jule::Ptr<_1ea2e3deb_Field> _1d04e4237_buildField(jule::Ptr<_1ea31d112_FieldDecl>);
inline jule::Slice<jule::Ptr<_1ea2e3deb_Field>> _1d04e44ce_buildFields(jule::Slice<jule::Ptr<_1ea31d112_FieldDecl>>&);
inline jule::Ptr<_1ea31ed8e_Struct> _1d04e4776_buildStruct(jule::Ptr<_1ea31d8b5_StructDecl>);
inline jule::Ptr<_1eb022343_Param> _1d04e4a1d_buildParam(jule::Ptr<_1ea313d0b_ParamDecl>);
inline jule::Slice<jule::Ptr<_1eb022343_Param>> _1d04e4d92_buildParams(jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>>&);
inline jule::Ptr<_1eb021b6c_RetType> _1d04e5139_buildRetType(jule::Ptr<_1ea3067b0_RetTypeDecl>);
inline jule::Ptr<_1eb023b80_Fn> _1d04e53d1_buildFn(jule::Ptr<_1ea31512b_FnDecl>);
inline jule::Slice<jule::Ptr<_1eb023b80_Fn>> _1d04e5678_buildMethods(jule::Slice<jule::Ptr<_1ea31512b_FnDecl>>&);
inline jule::Ptr<_1d04ed4a5_Trait> _1d04e5920_buildTrait(jule::Ptr<_1ea31dec0_TraitDecl>);
inline jule::Ptr<_1d04eeb05_EnumItem> _1d04e5bb7_buildEnumItem(jule::Ptr<_1ea31b2ca_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>> _1d04e5e5e_buildEnumItems(jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>>&);
inline jule::Ptr<_1d05005ea_Enum> _1d04e6206_buildEnum(jule::Ptr<_1ea31bd03_EnumDecl>);
inline jule::Ptr<_1d050162e_TypeEnumItem> _1d04e6657_buildTypeEnumItem(jule::Ptr<_1ea31c809_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>> _1d04e68ee_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>>&);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d04e6b96_buildTypeEnum(jule::Ptr<_1ea31ce14_TypeEnumDecl>);
inline jule::Ptr<_1d0550a13_Var> _1d04e6e3d_buildVar(jule::Ptr<_1ea31610a_VarDecl>);
inline jule::Slice<jule::Ptr<_1d0550a13_Var>> _1d04e71d5_buildVars(jule::Slice<jule::Ptr<_1ea31610a_VarDecl>>);
inline jule::Ptr<_1d050615b_Impl> _1d04e747c_buildImpl(jule::Ptr<_1ea31e5ca_Impl>);
inline jule::Bool _1d0505501_matchConstraint(jule::Str&, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05057dc_isBuiltinConstraint(jule::Str&);
inline jule::Ptr<_1d0512c28_scopeChecker> _1d05081e6_newScopeCheckerBase(jule::Ptr<_1d0532a17_Sema>&, jule::Ptr<_1eb026831_FnIns>);
inline jule::Ptr<_1d0512c28_scopeChecker> _1d050857b_newScopeChecker(jule::Ptr<_1d0532a17_Sema>&, jule::Ptr<_1eb026831_FnIns>);
inline jule::Ptr<_1d0511991_scopeLabel> _1d05088bc_findLabelParent(jule::Str, jule::Ptr<_1d0512c28_scopeChecker>);
inline jule::Bool _1d0508c52_modelIsGotoScope(jule::Any, jule::Ptr<_1d050b1b6_Scope>&);
inline jule::Bool _1d0509093_stmtIsGotoScope(jule::Any&, jule::Ptr<_1d050b1b6_Scope>&);
inline jule::I64 _1d05093d4_countMatchType(jule::Ptr<_1d050ee12_Match>&, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Slice<jule::Ptr<_1d0598572_Data>> _1d050967b_getDatasFromTupleData(jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d0509eb7_checkMut(jule::Ptr<_1d0532a17_Sema>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d050a44b_checkAssign(jule::Ptr<_1d0532a17_Sema>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1d050a6e3_isValidAstStForNextSt(jule::Any&);
inline jule::Bool _1d050a98a_isValidStForNextSt(jule::Any&);
inline jule::Bool _1d050ac32_stmtIsDef(jule::Any&);
inline jule::Ptr<_1d0550a13_Var> _1d05270d3_findVarInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d0527512_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1ea31ed8e_Struct> _1d05278ec_findStructInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1eb023b80_Fn> _1d0527d5e_findFnInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str, jule::Bool);
inline jule::Ptr<_1d04ed4a5_Trait> _1d052816c_findTraitInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1d05005ea_Enum> _1d05284ad_findEnumInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str);
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05287ee_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str);
inline jule::Any _1d0528ce9_defByIdentPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Str&, jule::Bool);
inline jule::Bool _1d052edee_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1d0530bd0_isValidModelForRef(jule::Any&);
inline _22ca31eb9_Log _1d05310ed_compilerErr(jule::Ptr<_212a0c2ab_Token>&, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d053143e_impIsLookupable(jule::Ptr<_1d05298bb_ImportInfo>&, jule::Str);
inline void _1d053173b_appendRetVars(jule::Slice<jule::Ptr<_1d0550a13_Var>>&, jule::Ptr<_1eb026831_FnIns>&);
inline void _1d05319e4_appendParamVars(jule::Slice<jule::Ptr<_1d0550a13_Var>>&, jule::Ptr<_1eb026831_FnIns>&);
inline void _1d0531cbe_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Ptr<_1d0593748_SymbolTable> _1d0532121_findFile(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>&, jule::Ptr<_212a12646_File>&);
inline void _1d0532583_pushSugggestion(_22ca31eb9_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d0569477_traitHasReferenceReceiver(jule::Ptr<_1d04ed4a5_Trait>&);
inline jule::Bool _1d05695a9_floatAssignable(jule::Str, jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d0580e83_sigAssignable(jule::Str, jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d05810b5_unsigAssignable(jule::Str, jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d0582160_intAssignable(jule::Str, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d05c4504_TypeKind> _1d05927be_lenKind(void);
inline jule::Ptr<_1ea2c0405_Directive> _1d05bdba2_findDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Str);
inline jule::Any _1d05be037_findBuiltinsImport(jule::Str, jule::Ptr<_1d05298bb_ImportInfo>);
inline void _1d05be246_fitBitsize(jule::Ptr<_1d0598572_Data>&);
inline void _1d05be543_makeStructLitAlloc(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1eb016502_StructLitExprModel>&);
inline jule::Ptr<_1d0550a13_Var> _1d05be884_buildErrorVar(jule::Ptr<_1d050b1b6_Scope>&, jule::Ptr<_1ea30bba0_FnCallExpr>&);
inline jule::Any _1d05bebc5_findBuiltinsSema(jule::Str, jule::Ptr<_1d0532a17_Sema>);
inline jule::Bool _1d05bee6c_isOkForShifting(jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d05c0324_isInstancedStruct(jule::Ptr<_1ea320268_StructIns>);
inline jule::Bool _1d05c0687_isPtrArithmeticCompatible(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05c08c9_applyCastKindModel(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d05c4504_TypeKind>&);
inline void _1d05c0b82_applyCastKind(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Ptr<_1d0598572_Data> _1d05c0d80_buildVoidData(void);
inline jule::Str _1d05c1149_checkDataForIntegerIndexing(jule::Ptr<_1d0598572_Data>&);
inline void _1d05c1413_applyCastModelByEnum(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d05005ea_Enum>);
inline void _1d05c16bb_castConstByType(jule::Str&, jule::Ptr<_1d0598572_Data>&);
inline void _1d05c1bc7_updateModelToGenericIns(jule::Any&, jule::Ptr<_1eb026831_FnIns>&);
inline jule::Bool _1d05c1e19_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1ea3043b2_SubIdentTypeDecl>&);
inline jule::Bool _1d05db20d_kindUsesGenerics(jule::Ptr<_1d05c4504_TypeKind>&, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>&);
inline jule::Bool _1d05db593_hasDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Str);
inline jule::Bool _1d05db83a_canGetPtr(jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d05dbb59_isValidForSptrType(jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05dbe01_isValidForRef(jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Bool _1d05dc1ba_isBuiltinStrConvertable(jule::Ptr<_1d05c4504_TypeKind>&);
inline jule::Str _1d05dc440_buildLinkPathByTokens(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1d05c9251_Prim> _1d05dc7e7_buildPrimType(jule::Str);
inline jule::Ptr<_1ea31ed8e_Struct> _1d05dca8e_getStructFromKind(jule::Ptr<_1d05c4504_TypeKind>);
inline jule::Bool _1d05dcd36_isPrim(jule::Str);
inline void _1d05dd0de_applyImplicitCast(jule::Ptr<_1d05c4504_TypeKind>&, jule::Ptr<_1d0598572_Data>&);
struct __jule_tuple_x_1d0593748_SymbolTable__jule_tuple_s_22ca31eb9_Log {
	jule::Ptr<_1d0593748_SymbolTable> __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_x_1d0593748_SymbolTable__jule_tuple_s_22ca31eb9_Log _1d05e1158_buildSymbols(jule::Ptr<_1ea2be217_Ast>&, jule::Trait<_1d0526c4d_Importer>&, jule::Ptr<_1d04e79cc_symbolBuilder>);
struct __jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log {
	jule::Ptr<_1d052c825_Package> __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log _1d05e1587_analyzePackage(jule::Slice<jule::Ptr<_1ea2be217_Ast>>&, jule::Trait<_1d0526c4d_Importer>&, jule::I64&);
inline __jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log _1d05e1972_AnalyzePackage(jule::Slice<jule::Ptr<_1ea2be217_Ast>>, jule::Trait<_1d0526c4d_Importer>, jule::I64);
inline jule::Ptr<_1eb026831_FnIns> _1d05eca38_findBuiltinFn(jule::Str);
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05ee672_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1d060404a_findBuiltinDef(jule::Str);
inline jule::Any _1d0603203_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1d0603335_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1d05ea2b6_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1d05ea3e8_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1d0598572_Data> _1d068540b_builtinCallerCommonPlain(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d06856b4_builtinCallerCommon(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0685a9e_builtinCallerCommonMut(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0685de0_builtinCallerError(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&);
inline jule::Ptr<_1d0598572_Data> _1d06862ca_builtinCallerOut(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d06866b5_builtinCallerOutln(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0686aa0_builtinCallerNew(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0686e8a_builtinCallerPanic(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d06875a6_builtinCallerMake(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0687991_builtinCallerAppend(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0687e25_callerCopySlice(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d06883a9_callerCopyStr(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0688794_builtinCallerCopy(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0688ad5_callerLenSlice(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0688e26_callerLenMap(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0689267_callerLenArr(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d06895a8_callerLenStr(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0689993_builtinCallerLen(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d0689cd4_callerCapSlice(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068a125_callerCapStr(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068a510_builtinCallerCap(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068a994_callerDeleteMap(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068ad7e_builtinCallerDelete(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068b269_builtinCallerClone(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068b830_builtinCallerAssert(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068bb93_builtinCallerStdMemSizeOf(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068c0b1_builtinCallerStdMemAlignOf(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068c4ce_builtinCallerStdMemFree(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068c90d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068cd2b_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068d26b_builtinCallerStdDebugOut(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Ptr<_1d0598572_Data> _1d068d656_builtinCallerStdDebugOutln(jule::Ptr<_1d059a0e0_Eval>&, jule::Ptr<_1ea30bba0_FnCallExpr>&, jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1d0784681_FindModuleFile(jule::Slice<jule::Ptr<_22b24c131_DirEntry>>&);
inline jule::Str _1d0784829_FindModuleFileDeep(jule::Str);
inline jule::Slice<_22ca31eb9_Log> _1d0784ac1_CheckModuleFile(jule::Str);
inline jule::Ptr<_1b7bd9060_FileInfo> _1b7c30abd_ParseFile(jule::Ptr<_212a12646_File>);
struct __jule_tuple_x_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log {
	jule::Ptr<_1ea2be217_Ast> __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_x_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log _1b7c31151_parseFileset(jule::Ptr<_212a12646_File>);
inline jule::Ptr<_1ea313635_ScopeTree> _1b7c31aad_newScope(void);
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_bool__jule_tuple_bool _1b7c31d66_isSt(jule::Ptr<_212a0c2ab_Token>, jule::Ptr<_212a0c2ab_Token>);
inline jule::Bool _1b7c321a7_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64&);
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_int__jule_tuple_bool _1b7c3253c_nextStPos(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::I64);
struct __jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool _1b7c3287d_skipSt(jule::I64&, jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _1b7c33021_splitStmts(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Bool _1b7c4970d_isTypeOp(jule::Str&);
inline jule::Bool _1b7c499e9_isTypeRange(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Slice<jule::Ptr<_212a0c2ab_Token>> _1b7c49c91_getBlockExpr(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
struct __jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> __jule_result_arg1;
};
inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token _1b7c4a126_splitDelim(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::U64);
inline jule::I64 _1b7c4a3bd_findLowestPrecOp(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Ptr<_1ea30987e_IdentExpr> _1b7c4a665_buildIdentExpr(jule::Ptr<_212a0c2ab_Token>&);
struct __jule_tuple_sx_212a0c2ab_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_int _1b7c4a90c_getRangeExprTokens(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Bool _1b7c4b666_checkAssignTokens(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline _22ca31eb9_Log _1b7c4c887_makeErr(jule::I64, jule::I64, jule::Ptr<_212a12646_File>&, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_212a0c2ab_Token>> _1b7c4cd60_range(jule::I64&, jule::Str, jule::Str, jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token _1b7c4d107_rangeLast(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
struct __jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> __jule_result_arg0;
	jule::Slice<_22ca31eb9_Log> __jule_result_arg1;
};
inline __jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log _1b7c4d4e2_partsKind(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::Str, jule::Bool);
inline __jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log _1b7c4d8cc_parts(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&, jule::U64, jule::Bool);
inline jule::Str _1b7c4db74_getCloseKindOfBrace(jule::Str);
inline _22ca31eb9_Log _1b7c4e05e_compilerErr(jule::Ptr<_212a0c2ab_Token>&, jule::Str&, jule::Slice<jule::Any>);
inline void _1b7c4e48d_pushSuggestion(_22ca31eb9_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1b7c4e735_tokstoa(jule::Slice<jule::Ptr<_212a0c2ab_Token>>&);
inline jule::Bool _1b7c5e79a_isPub(jule::Str&);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6016e_buildVoidType(void);
inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6037d_buildPrimType(jule::Ptr<_212a0c2ab_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1d075d869_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1d076ed0e_checkArch(jule::Str);
inline jule::Bool _1d0758a95_isPassFileAnnotation(jule::Str);
inline void _1d07736a3_setOsVars(jule::Slice<jule::Str>&);
inline void _1d0773906_setArchVars(jule::Slice<jule::Str>&);
inline void _1d0773bae_initVars(jule::Slice<jule::Str>&, _1d0773395_CompileInfo&);
inline jule::Slice<jule::U8> _1d0974a19_readBuff(jule::Str);
inline _22ca31eb9_Log _1d097a206_flatCompilerErr(jule::Str);
inline void _1b6e27d2c_pushPasses(jule::Ptr<_1d052c825_Package>&, jule::Slice<jule::Str>&);
inline jule::Slice<jule::Str> _1b7a9c64e_getAllUniquePasses(jule::Ptr<_1d052c825_Package>&, jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>>);
inline _1d0773395_CompileInfo _1b7ab80b5_buildCompileInfo(void);
inline void _1b7d6da30_EliminateDefines(jule::Ptr<_1b6c04994_IR>&);
inline jule::Ptr<_1ea2c0405_Directive> _1b7d6ddb5_findDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Str);
inline jule::Bool _1b7d6e206_hasDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Str);
inline void _1b7d72d53_eliminateDeadCodeOfScope(jule::Ptr<_1d050b1b6_Scope>);
inline void _1b7d730d9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1eb023b80_Fn>>&);
inline void _1b7d7332b_eliminateFunctionsScopePackage(jule::Ptr<_1d052c825_Package>&);
inline void _1b7d735c3_eliminateScopePackage(jule::Ptr<_1d052c825_Package>&);
inline void _1b7d737d2_EliminateScopes(jule::Ptr<_1b6c04994_IR>&);
inline jule::Bool _1d06944a3_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1d06947b1_isConstantValidConditionalCase(jule::Ptr<_1d050b5b2_If>&);
inline jule::Bool _1d0694a69_isUnreachableExpr(jule::Any&);
inline jule::Bool _1d0694daa_isConstantValidMatchCase(jule::Ptr<_1d051095c_Case>&);
inline jule::Bool _1d0695152_isUnreachableConditionalCase(jule::Ptr<_1d050b5b2_If>&);
inline jule::Bool _1d069540a_isUnreachableMatchCase(jule::Ptr<_1d051095c_Case>&);
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
inline __jule_tuple_bool__jule_tuple_u64 _1d069cd08_checkForBitShiftOpt(jule::Ptr<_1eb0153d0_OperandExprModel>&, jule::Ptr<_1eb0153d0_OperandExprModel>&);
inline void _1d069ed3d_PushOptLevel(jule::I64);
inline void _1b7d05a0b_detectEnabled(void);
inline void _1b7e8210a_Throw(jule::Str);
inline jule::U64 _1a9515b20_unix(void);
inline jule::U64 _1a9515e2d_unixYearToSeconds(jule::U64, jule::Bool&);
inline jule::U64 _1a95162b3_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1a945ead0_isCopyOptimizable(jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1a945ee65_isIterCopyOptimizable(jule::Ptr<_1d0598572_Data>&, jule::Ptr<_1d0550a13_Var>&);
inline jule::Str _1a946de30_decomposeCommonEsq(jule::U8);
inline jule::Str _1a946e21b_sbtoa(jule::U8);
inline jule::Str _1a946e4b3_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1a946e7d2_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1a946eae0_ftoa(jule::F64, jule::I64);
inline jule::Str _1a946ed87_itoa(jule::I64);
inline jule::Str _1a947012e_utoa(jule::U64);
inline jule::Bool _1a94704d6_isForwarded(jule::Ptr<_1d050b1b6_Scope>&);
inline jule::Bool _1a94707a0_isBuiltinCallHasDebuginf(jule::Ptr<_1eb017712_FnCallExprModel>&);
inline jule::Bool _1a94709d1_isExprComesFromBind(jule::Ptr<_1d0598572_Data>&);
inline jule::Bool _1a9470c78_isAny(jule::Ptr<_1d05c4504_TypeKind>&);
inline void _1a951ec28_iterFiles(jule::Ptr<_1d052c825_Package>&, jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>);
inline void _1a951ee7b_prepareStructure(jule::Ptr<_1ea31ed8e_Struct>&);
inline jule::Str _1a9520223_concatAllParts(jule::Slice<jule::Ptr<_212a0c2ab_Token>>);
inline jule::Ptr<_1ea2c0405_Directive> _1a952b95a_findDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Str);
inline jule::Bool _1a952bce0_hasDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>&, jule::Str);
inline jule::Bool _1a952c087_shouldInitialized(jule::Ptr<_1d05c4504_TypeKind>&);
inline void _22ca13e02_printErrorMessage(jule::Str);
inline void _22ca07a2d_help(jule::Slice<jule::Str>&);
inline void _22ca07b60_version(jule::Slice<jule::Str>&);
inline void _22ca00927_toolDistos(void);
inline void _22ca00a59_toolDistarch(void);
inline void _22ca157b6_tool(jule::Slice<jule::Str>&);
inline void _22ca158e8_julenv(jule::Slice<jule::Str>&);
inline void _22ca217b1_mod(jule::Slice<jule::Str>&);
inline jule::Bool _22ca2453e_processCommand(jule::Slice<jule::Str>&);
inline void _22ca24671_showInfo(void);
void entry_point(void);
inline void _1a9544511_init(void);
inline jule::Ptr<_22b1e9694_File> _1a9547aec_openOutput(jule::Str&);
inline void _1a9553c3a_clearObjects(void);
inline void _1a9542740_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a9563750_isCppSourceFile(jule::Str);
inline void _1a9567842_pushCompCmdClang(jule::Str&);
inline void _1a9540a07_pushCompCmdGcc(jule::Str&);
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline __jule_tuple_str__jule_tuple_str _1a9545985_genCompileCmd(jule::Str, jule::Ptr<_1b6c04994_IR>&);
inline jule::Str _1a9540089_getCompilePath(void);
inline void _1a954ea5a_applyTargetIndependentOptimizations(jule::Ptr<_1b6c04994_IR>&);
inline void _1a953e9b2_checkCompilerFlag(void);
inline void _1a9543796_checkTargetArch(jule::Str);
inline void _1a95438c8_checkTargetOs(jule::Str);
inline void _1a95748c6_checkTargetFlag(jule::Str&);
inline void _1a9574a08_checkOptFlag(jule::Str&);
inline void _1a9574d6b_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a9574e9d_checkFlags(jule::Slice<jule::Str>&);
inline void _1a95750d0_setupSemaFlags(jule::I64&);
inline jule::Ptr<_1b6c04994_IR> _1a9575212_buildIr(jule::Slice<jule::Str>&);
inline void _1a9575344_compileCommand(jule::Slice<jule::Str>&);


struct _1d0526c4d_ImporterMptrData {
	void(*_1d0525b5e_SetModPath)(jule::Trait<_1d0526c4d_Importer>, jule::Str);
	jule::Str(*_1d0525db2_GetModPath)(jule::Trait<_1d0526c4d_Importer>);
	jule::Str(*_1d05261c0_ModById)(jule::Trait<_1d0526c4d_Importer>, jule::I64);
	jule::Ptr<_1d05298bb_ImportInfo>(*_1d05264cd_GetImport)(jule::Trait<_1d0526c4d_Importer>, jule::Str);
	__jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log(*_1d0526885_ImportPackage)(jule::Trait<_1d0526c4d_Importer>, jule::Str, jule::Bool);
	void(*_1d0526b0a_Imported)(jule::Trait<_1d0526c4d_Importer>, jule::Ptr<_1d05298bb_ImportInfo>);
};

struct _1d05c40c5_KindMptrData {
	jule::Str(*_1d05c3b74_Str)(jule::Trait<_1d05c40c5_Kind>);
	jule::Bool(*_1d05c3e82_Equal)(jule::Trait<_1d05c40c5_Kind>, jule::Ptr<_1d05c4504_TypeKind>);
};

struct _1d05e0476_LookupMptrData {
	jule::Ptr<_1d05298bb_ImportInfo>(*_1d05dd62d_FindPackage)(jule::Trait<_1d05e0476_Lookup>, jule::Str);
	jule::Ptr<_1d05298bb_ImportInfo>(*_1d05dd93b_SelectPackage)(jule::Trait<_1d05e0476_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>);
	jule::Ptr<_1d0550a13_Var>(*_1d05ddce3_FindVar)(jule::Trait<_1d05e0476_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d05c3811_TypeAlias>(*_1d05de19a_FindTypeAlias)(jule::Trait<_1d05e0476_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1ea31ed8e_Struct>(*_1d05de552_FindStruct)(jule::Trait<_1d05e0476_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1eb023b80_Fn>(*_1d05de909_FindFn)(jule::Trait<_1d05e0476_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d04ed4a5_Trait>(*_1d05dec17_FindTrait)(jule::Trait<_1d05e0476_Lookup>, jule::Str);
	jule::Ptr<_1d05005ea_Enum>(*_1d05e0025_FindEnum)(jule::Trait<_1d05e0476_Lookup>, jule::Str);
	jule::Ptr<_1d0501be5_TypeEnum>(*_1d05e0333_FindTypeEnum)(jule::Trait<_1d05e0476_Lookup>, jule::Str);
};

struct _1a956e173_CommonFlagMptrData {
	jule::Str(*_1a953e495_Name)(jule::Trait<_1a956e173_CommonFlag>);
	jule::I32(*_1a953e5c7_Short)(jule::Trait<_1a956e173_CommonFlag>);
	jule::Str(*_1a953e709_What)(jule::Trait<_1a956e173_CommonFlag>);
	void(*_1a953e880_Reset)(jule::Trait<_1a956e173_CommonFlag>);
};



inline void _1d0525b5e_SetModPath_0(jule::Trait<_1d0526c4d_Importer> _self_, jule::Str _1729_path) {
	_1d09ee07c_SetModPath(_self_.safe_ptr<_1b7b56cbe_JuleImporter>(), _1729_path);
}
inline jule::Str _1d0525db2_GetModPath_0(jule::Trait<_1d0526c4d_Importer> _self_) {
	return _1d0a2a6c4_GetModPath(_self_.safe_ptr<_1b7b56cbe_JuleImporter>());
}
inline jule::Str _1d05261c0_ModById_0(jule::Trait<_1d0526c4d_Importer> _self_, jule::I64 _2522_id) {
	return _1d0a2ece4_ModById(_self_.safe_ptr<_1b7b56cbe_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05264cd_GetImport_0(jule::Trait<_1d0526c4d_Importer> _self_, jule::Str _3128_path) {
	return _1b6bdd96c_GetImport(_self_.safe_ptr<_1b7b56cbe_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log _1d0526885_ImportPackage_0(jule::Trait<_1d0526c4d_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1b6bec6e5_ImportPackage(_self_.safe_ptr<_1b7b56cbe_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1d0526b0a_Imported_0(jule::Trait<_1d0526c4d_Importer> _self_, jule::Ptr<_1d05298bb_ImportInfo> _4131__0) {
	_1b6c00011_Imported(_self_.safe_ptr<_1b7b56cbe_JuleImporter>(), _4131__0);
}
inline jule::Str _1d05c3b74_Str_0(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1ea2e5abd_Str(_self_.safe_ptr<_1ea320268_StructIns>());
}
inline jule::Bool _1d05c3e82_Equal_0(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1ea2e6c23_Equal(_self_.data.as<_1ea320268_StructIns>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_1(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1eb026b61_Str(_self_.safe_ptr<_1eb026831_FnIns>());
}
inline jule::Bool _1d05c3e82_Equal_1(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1eb026e6e_Equal(_self_.data.as<_1eb026831_FnIns>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_2(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d04ed8a1_Str(_self_.safe_ptr<_1d04ed4a5_Trait>());
}
inline jule::Bool _1d05c3e82_Equal_2(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d04edbae_Equal(_self_.data.as<_1d04ed4a5_Trait>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_3(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d050095d_Str(_self_.safe_ptr<_1d05005ea_Enum>());
}
inline jule::Bool _1d05c3e82_Equal_3(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d0500c6b_Equal(_self_.data.as<_1d05005ea_Enum>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_4(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d0502025_Str(_self_.safe_ptr<_1d0501be5_TypeEnum>());
}
inline jule::Bool _1d05c3e82_Equal_4(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d0502333_Equal(_self_.data.as<_1d0501be5_TypeEnum>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_5(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05c4900_Str(_self_.safe_ptr<_1d05c4504_TypeKind>());
}
inline jule::Bool _1d05c3e82_Equal_5(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05c4c0d_Equal(_self_.data.as<_1d05c4504_TypeKind>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_6(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05c95b4_Str(_self_.safe_ptr<_1d05c9251_Prim>());
}
inline jule::Bool _1d05c3e82_Equal_6(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05c98c2_Equal(_self_.data.as<_1d05c9251_Prim>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_7(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05ccd48_Str(_self_.safe_ptr<_1d05cc9d5_Sptr>());
}
inline jule::Bool _1d05c3e82_Equal_7(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05cd156_Equal(_self_.data.as<_1d05cc9d5_Sptr>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_8(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05cd94d_Str(_self_.safe_ptr<_1d05cd442_Slc>());
}
inline jule::Bool _1d05c3e82_Equal_8(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05cdc5b_Equal(_self_.data.as<_1d05cd442_Slc>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_9(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05ce333_Str(_self_.safe_ptr<_1d05cdec0_Tuple>());
}
inline jule::Bool _1d05c3e82_Equal_9(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05ce641_Equal(_self_.data.as<_1d05cdec0_Tuple>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_10(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05ced5b_Str(_self_.safe_ptr<_1d05ce9e8_Map>());
}
inline jule::Bool _1d05c3e82_Equal_10(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05d0169_Equal(_self_.data.as<_1d05ce9e8_Map>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_11(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05d0950_Str(_self_.safe_ptr<_1d05d05dc_Arr>());
}
inline jule::Bool _1d05c3e82_Equal_11(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05d0c5d_Equal(_self_.data.as<_1d05d05dc_Arr>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_12(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1d05d13ac_Str(_self_.safe_ptr<_1d05d1049_Ptr>());
}
inline jule::Bool _1d05c3e82_Equal_12(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1d05d16ba_Equal(_self_.data.as<_1d05d1049_Ptr>(), _5621_other);
}
inline jule::Str _1d05c3b74_Str_13(jule::Trait<_1d05c40c5_Kind> _self_) {
	return _1a9521202_Str(_self_.safe_ptr<_1a9520e27_customType>());
}
inline jule::Bool _1d05c3e82_Equal_13(jule::Trait<_1d05c40c5_Kind> _self_, jule::Ptr<_1d05c4504_TypeKind> _5621_other) {
	return _1a9521510_Equal(_self_.data.as<_1a9520e27_customType>(), _5621_other);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd62d_FindPackage_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _930_ident) {
	return _1d05131ac_FindPackage(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd93b_SelectPackage_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _1332_selector) {
	return _1d05134ba_SelectPackage(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1d0550a13_Var> _1d05ddce3_FindVar_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1d0513872_FindVar(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05de19a_FindTypeAlias_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1d0513c29_FindTypeAlias(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ea31ed8e_Struct> _1d05de552_FindStruct_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1d05140d1_FindStruct(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1eb023b80_Fn> _1d05de909_FindFn_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1d0514488_FindFn(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1d04ed4a5_Trait> _1d05dec17_FindTrait_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3328_ident) {
	return _1d0514796_FindTrait(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1d05005ea_Enum> _1d05e0025_FindEnum_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3727_ident) {
	return _1d0514aa4_FindEnum(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05e0333_FindTypeEnum_0(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _4131_ident) {
	return _1d0514db2_FindTypeEnum(_self_.safe_ptr<_1d0512c28_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd62d_FindPackage_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _930_ident) {
	return _1d0529dd8_FindPackage(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd93b_SelectPackage_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _1332_selector) {
	return _1d052a1e6_SelectPackage(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1d0550a13_Var> _1d05ddce3_FindVar_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1d052a59d_FindVar(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05de19a_FindTypeAlias_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1d052a955_FindTypeAlias(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ea31ed8e_Struct> _1d05de552_FindStruct_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1d052ad0c_FindStruct(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1eb023b80_Fn> _1d05de909_FindFn_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1d052b1b4_FindFn(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1d04ed4a5_Trait> _1d05dec17_FindTrait_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3328_ident) {
	return _1d052b4c2_FindTrait(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1d05005ea_Enum> _1d05e0025_FindEnum_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3727_ident) {
	return _1d052b7d0_FindEnum(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05e0333_FindTypeEnum_1(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _4131_ident) {
	return _1d052badd_FindTypeEnum(_self_.safe_ptr<_1d05298bb_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd62d_FindPackage_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _930_ident) {
	return _1d052cced_FindPackage(_self_.safe_ptr<_1d052c825_Package>(), _930_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd93b_SelectPackage_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _1332_selector) {
	return _1d052d10b_SelectPackage(_self_.safe_ptr<_1d052c825_Package>(), _1332_selector);
}
inline jule::Ptr<_1d0550a13_Var> _1d05ddce3_FindVar_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1d052d4b3_FindVar(_self_.safe_ptr<_1d052c825_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05de19a_FindTypeAlias_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1d052d86a_FindTypeAlias(_self_.safe_ptr<_1d052c825_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ea31ed8e_Struct> _1d05de552_FindStruct_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1d052dc22_FindStruct(_self_.safe_ptr<_1d052c825_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1eb023b80_Fn> _1d05de909_FindFn_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1d052e0c9_FindFn(_self_.safe_ptr<_1d052c825_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1d04ed4a5_Trait> _1d05dec17_FindTrait_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3328_ident) {
	return _1d052e3d7_FindTrait(_self_.safe_ptr<_1d052c825_Package>(), _3328_ident);
}
inline jule::Ptr<_1d05005ea_Enum> _1d05e0025_FindEnum_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3727_ident) {
	return _1d052e6e5_FindEnum(_self_.safe_ptr<_1d052c825_Package>(), _3727_ident);
}
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05e0333_FindTypeEnum_2(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _4131_ident) {
	return _1d052ea03_FindTypeEnum(_self_.safe_ptr<_1d052c825_Package>(), _4131_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd62d_FindPackage_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _930_ident) {
	return _1d0533034_FindPackage(_self_.safe_ptr<_1d0532a17_Sema>(), _930_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd93b_SelectPackage_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _1332_selector) {
	return _1d0533342_SelectPackage(_self_.safe_ptr<_1d0532a17_Sema>(), _1332_selector);
}
inline jule::Ptr<_1d0550a13_Var> _1d05ddce3_FindVar_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1d05336e9_FindVar(_self_.safe_ptr<_1d0532a17_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05de19a_FindTypeAlias_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1d0533aa1_FindTypeAlias(_self_.safe_ptr<_1d0532a17_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ea31ed8e_Struct> _1d05de552_FindStruct_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1d0533e58_FindStruct(_self_.safe_ptr<_1d0532a17_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1eb023b80_Fn> _1d05de909_FindFn_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1d0534310_FindFn(_self_.safe_ptr<_1d0532a17_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1d04ed4a5_Trait> _1d05dec17_FindTrait_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3328_ident) {
	return _1d053461d_FindTrait(_self_.safe_ptr<_1d0532a17_Sema>(), _3328_ident);
}
inline jule::Ptr<_1d05005ea_Enum> _1d05e0025_FindEnum_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3727_ident) {
	return _1d053492b_FindEnum(_self_.safe_ptr<_1d0532a17_Sema>(), _3727_ident);
}
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05e0333_FindTypeEnum_3(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _4131_ident) {
	return _1d0534c39_FindTypeEnum(_self_.safe_ptr<_1d0532a17_Sema>(), _4131_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd62d_FindPackage_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _930_ident) {
	return _1d0593c65_FindPackage(_self_.safe_ptr<_1d0593748_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1d05298bb_ImportInfo> _1d05dd93b_SelectPackage_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _1332_selector) {
	return _1d0594073_SelectPackage(_self_.safe_ptr<_1d0593748_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1d0550a13_Var> _1d05ddce3_FindVar_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1d059442a_FindVar(_self_.safe_ptr<_1d0593748_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1d05c3811_TypeAlias> _1d05de19a_FindTypeAlias_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1d05947d2_FindTypeAlias(_self_.safe_ptr<_1d0593748_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1ea31ed8e_Struct> _1d05de552_FindStruct_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1d0594b89_FindStruct(_self_.safe_ptr<_1d0593748_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1eb023b80_Fn> _1d05de909_FindFn_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1d0595041_FindFn(_self_.safe_ptr<_1d0593748_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1d04ed4a5_Trait> _1d05dec17_FindTrait_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3328_ident) {
	return _1d059534e_FindTrait(_self_.safe_ptr<_1d0593748_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1d05005ea_Enum> _1d05e0025_FindEnum_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _3727_ident) {
	return _1d059565c_FindEnum(_self_.safe_ptr<_1d0593748_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1d0501be5_TypeEnum> _1d05e0333_FindTypeEnum_4(jule::Trait<_1d05e0476_Lookup> _self_, jule::Str _4131_ident) {
	return _1d059596a_FindTypeEnum(_self_.safe_ptr<_1d0593748_SymbolTable>(), _4131_ident);
}
inline jule::Str _1a953e495_Name_0(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb70bb2_Name(_self_.safe_ptr<_1abb707e9_Flag>());
}
inline jule::I32 _1a953e5c7_Short_0(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb7108b_Short(_self_.safe_ptr<_1abb707e9_Flag>());
}
inline jule::Str _1a953e709_What_0(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb70d05_What(_self_.safe_ptr<_1abb707e9_Flag>());
}
inline void _1a953e880_Reset_0(jule::Trait<_1a956e173_CommonFlag> _self_) {
	_1abb70e48_Reset(_self_.safe_ptr<_1abb707e9_Flag>());
}
inline jule::Str _1a953e495_Name_1(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb72d3a_Name(_self_.safe_ptr<_1abb7459a_Flag>());
}
inline jule::I32 _1a953e5c7_Short_1(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb749b8_Short(_self_.safe_ptr<_1abb7459a_Flag>());
}
inline jule::Str _1a953e709_What_1(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb74127_What(_self_.safe_ptr<_1abb7459a_Flag>());
}
inline void _1a953e880_Reset_1(jule::Trait<_1a956e173_CommonFlag> _self_) {
	_1abb74886_Reset(_self_.safe_ptr<_1abb7459a_Flag>());
}
inline jule::Str _1a953e495_Name_2(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb76657_Name(_self_.safe_ptr<_1abb77db7_Flag>());
}
inline jule::I32 _1a953e5c7_Short_2(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb782d5_Short(_self_.safe_ptr<_1abb77db7_Flag>());
}
inline jule::Str _1a953e709_What_2(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb77944_What(_self_.safe_ptr<_1abb77db7_Flag>());
}
inline void _1a953e880_Reset_2(jule::Trait<_1a956e173_CommonFlag> _self_) {
	_1abb781a3_Reset(_self_.safe_ptr<_1abb77db7_Flag>());
}
inline jule::Str _1a953e495_Name_3(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb79eb8_Name(_self_.safe_ptr<_1abb7b728_Flag>());
}
inline jule::I32 _1a953e5c7_Short_3(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb7bb46_Short(_self_.safe_ptr<_1abb7b728_Flag>());
}
inline jule::Str _1a953e709_What_3(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb7b2a5_What(_self_.safe_ptr<_1abb7b728_Flag>());
}
inline void _1a953e880_Reset_3(jule::Trait<_1a956e173_CommonFlag> _self_) {
	_1abb7ba14_Reset(_self_.safe_ptr<_1abb7b728_Flag>());
}
inline jule::Str _1a953e495_Name_4(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb7d7d5_Name(_self_.safe_ptr<_1abb80045_Flag>());
}
inline jule::I32 _1a953e5c7_Short_4(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb80463_Short(_self_.safe_ptr<_1abb80045_Flag>());
}
inline jule::Str _1a953e709_What_4(jule::Trait<_1a956e173_CommonFlag> _self_) {
	return _1abb7eac2_What(_self_.safe_ptr<_1abb80045_Flag>());
}
inline void _1a953e880_Reset_4(jule::Trait<_1a956e173_CommonFlag> _self_) {
	_1abb80331_Reset(_self_.safe_ptr<_1abb80045_Flag>());
}


static _1d0526c4d_ImporterMptrData _1d0526c4d_Importer_mptr_data[] = {
	{
		._1d0525b5e_SetModPath=_1d0525b5e_SetModPath_0,
		._1d0525db2_GetModPath=_1d0525db2_GetModPath_0,
		._1d05261c0_ModById=_1d05261c0_ModById_0,
		._1d05264cd_GetImport=_1d05264cd_GetImport_0,
		._1d0526885_ImportPackage=_1d0526885_ImportPackage_0,
		._1d0526b0a_Imported=_1d0526b0a_Imported_0,
	},
};
static _1d05c40c5_KindMptrData _1d05c40c5_Kind_mptr_data[] = {
	{
		._1d05c3b74_Str=_1d05c3b74_Str_0,
		._1d05c3e82_Equal=_1d05c3e82_Equal_0,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_1,
		._1d05c3e82_Equal=_1d05c3e82_Equal_1,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_2,
		._1d05c3e82_Equal=_1d05c3e82_Equal_2,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_3,
		._1d05c3e82_Equal=_1d05c3e82_Equal_3,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_4,
		._1d05c3e82_Equal=_1d05c3e82_Equal_4,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_5,
		._1d05c3e82_Equal=_1d05c3e82_Equal_5,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_6,
		._1d05c3e82_Equal=_1d05c3e82_Equal_6,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_7,
		._1d05c3e82_Equal=_1d05c3e82_Equal_7,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_8,
		._1d05c3e82_Equal=_1d05c3e82_Equal_8,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_9,
		._1d05c3e82_Equal=_1d05c3e82_Equal_9,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_10,
		._1d05c3e82_Equal=_1d05c3e82_Equal_10,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_11,
		._1d05c3e82_Equal=_1d05c3e82_Equal_11,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_12,
		._1d05c3e82_Equal=_1d05c3e82_Equal_12,
	},
	{
		._1d05c3b74_Str=_1d05c3b74_Str_13,
		._1d05c3e82_Equal=_1d05c3e82_Equal_13,
	},
};
static _1d05e0476_LookupMptrData _1d05e0476_Lookup_mptr_data[] = {
	{
		._1d05dd62d_FindPackage=_1d05dd62d_FindPackage_0,
		._1d05dd93b_SelectPackage=_1d05dd93b_SelectPackage_0,
		._1d05ddce3_FindVar=_1d05ddce3_FindVar_0,
		._1d05de19a_FindTypeAlias=_1d05de19a_FindTypeAlias_0,
		._1d05de552_FindStruct=_1d05de552_FindStruct_0,
		._1d05de909_FindFn=_1d05de909_FindFn_0,
		._1d05dec17_FindTrait=_1d05dec17_FindTrait_0,
		._1d05e0025_FindEnum=_1d05e0025_FindEnum_0,
		._1d05e0333_FindTypeEnum=_1d05e0333_FindTypeEnum_0,
	},
	{
		._1d05dd62d_FindPackage=_1d05dd62d_FindPackage_1,
		._1d05dd93b_SelectPackage=_1d05dd93b_SelectPackage_1,
		._1d05ddce3_FindVar=_1d05ddce3_FindVar_1,
		._1d05de19a_FindTypeAlias=_1d05de19a_FindTypeAlias_1,
		._1d05de552_FindStruct=_1d05de552_FindStruct_1,
		._1d05de909_FindFn=_1d05de909_FindFn_1,
		._1d05dec17_FindTrait=_1d05dec17_FindTrait_1,
		._1d05e0025_FindEnum=_1d05e0025_FindEnum_1,
		._1d05e0333_FindTypeEnum=_1d05e0333_FindTypeEnum_1,
	},
	{
		._1d05dd62d_FindPackage=_1d05dd62d_FindPackage_2,
		._1d05dd93b_SelectPackage=_1d05dd93b_SelectPackage_2,
		._1d05ddce3_FindVar=_1d05ddce3_FindVar_2,
		._1d05de19a_FindTypeAlias=_1d05de19a_FindTypeAlias_2,
		._1d05de552_FindStruct=_1d05de552_FindStruct_2,
		._1d05de909_FindFn=_1d05de909_FindFn_2,
		._1d05dec17_FindTrait=_1d05dec17_FindTrait_2,
		._1d05e0025_FindEnum=_1d05e0025_FindEnum_2,
		._1d05e0333_FindTypeEnum=_1d05e0333_FindTypeEnum_2,
	},
	{
		._1d05dd62d_FindPackage=_1d05dd62d_FindPackage_3,
		._1d05dd93b_SelectPackage=_1d05dd93b_SelectPackage_3,
		._1d05ddce3_FindVar=_1d05ddce3_FindVar_3,
		._1d05de19a_FindTypeAlias=_1d05de19a_FindTypeAlias_3,
		._1d05de552_FindStruct=_1d05de552_FindStruct_3,
		._1d05de909_FindFn=_1d05de909_FindFn_3,
		._1d05dec17_FindTrait=_1d05dec17_FindTrait_3,
		._1d05e0025_FindEnum=_1d05e0025_FindEnum_3,
		._1d05e0333_FindTypeEnum=_1d05e0333_FindTypeEnum_3,
	},
	{
		._1d05dd62d_FindPackage=_1d05dd62d_FindPackage_4,
		._1d05dd93b_SelectPackage=_1d05dd93b_SelectPackage_4,
		._1d05ddce3_FindVar=_1d05ddce3_FindVar_4,
		._1d05de19a_FindTypeAlias=_1d05de19a_FindTypeAlias_4,
		._1d05de552_FindStruct=_1d05de552_FindStruct_4,
		._1d05de909_FindFn=_1d05de909_FindFn_4,
		._1d05dec17_FindTrait=_1d05dec17_FindTrait_4,
		._1d05e0025_FindEnum=_1d05e0025_FindEnum_4,
		._1d05e0333_FindTypeEnum=_1d05e0333_FindTypeEnum_4,
	},
};
static _1a956e173_CommonFlagMptrData _1a956e173_CommonFlag_mptr_data[] = {
	{
		._1a953e495_Name=_1a953e495_Name_0,
		._1a953e5c7_Short=_1a953e5c7_Short_0,
		._1a953e709_What=_1a953e709_What_0,
		._1a953e880_Reset=_1a953e880_Reset_0,
	},
	{
		._1a953e495_Name=_1a953e495_Name_1,
		._1a953e5c7_Short=_1a953e5c7_Short_1,
		._1a953e709_What=_1a953e709_What_1,
		._1a953e880_Reset=_1a953e880_Reset_1,
	},
	{
		._1a953e495_Name=_1a953e495_Name_2,
		._1a953e5c7_Short=_1a953e5c7_Short_2,
		._1a953e709_What=_1a953e709_What_2,
		._1a953e880_Reset=_1a953e880_Reset_2,
	},
	{
		._1a953e495_Name=_1a953e495_Name_3,
		._1a953e5c7_Short=_1a953e5c7_Short_3,
		._1a953e709_What=_1a953e709_What_3,
		._1a953e880_Reset=_1a953e880_Reset_3,
	},
	{
		._1a953e495_Name=_1a953e495_Name_4,
		._1a953e5c7_Short=_1a953e5c7_Short_4,
		._1a953e709_What=_1a953e709_What_4,
		._1a953e880_Reset=_1a953e880_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Any>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Any*>(alloc) == *static_cast<jule::Any*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Any*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::Any &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I32*>(alloc) == *static_cast<jule::I32*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U64*>(alloc) == *static_cast<jule::U64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Bool*>(alloc) == *static_cast<jule::Bool*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type7_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type7_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=__jule_any_type7_eq, .to_str=__jule_any_type7_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type7 && __jule_any_type7_eq(any.data.alloc, (void*)&other); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type8_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F64*>(alloc) == *static_cast<jule::F64*>(other); }
jule::Str __jule_any_type8_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=__jule_any_type8_eq, .to_str=__jule_any_type8_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type8 && __jule_any_type8_eq(any.data.alloc, (void*)&other); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb026831_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1eb026831_FnIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0550a13_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1d0550a13_Var> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea320268_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1ea320268_StructIns> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d04ed4a5_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1d04ed4a5_Trait> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31e5ca_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1ea31e5ca_Impl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31996b_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ea31996b_TypeAliasDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31d8b5_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1ea31d8b5_StructDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31512b_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1ea31512b_FnDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31dec0_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1ea31dec0_TraitDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31610a_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1ea31610a_VarDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31bd03_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ea31bd03_EnumDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31ce14_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ea31ce14_TypeEnumDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea303c63_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ea303c63_IdentTypeDecl> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050d905_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1d050d905_Label> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050b1b6_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1d050b1b6_Scope> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01ec47_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0598572_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1d0598572_Data> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb020ce2_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1eb020ce2_BackendEmitExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01d707_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01c0da_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01b8d1_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01bcbb_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01c8b0_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01cd66_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01e85c_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1eb01e85c_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01e4e9_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb0210cd_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1eb0210cd_FreeExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb017712_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1eb017712_FnCallExprModel> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050bc22_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1d050bc22_Conditional> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050c00d_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1d050c00d_InfIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea3173e7_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ea3173e7_WhileKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050c481_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1d050c481_WhileIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea317c88_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ea317c88_RangeKind> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050cd66_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1d050cd66_RangeIter> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050d262_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1d050d262_ContSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050dbe1_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1d050dbe1_GotoSt> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050e098_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1d050e098_Postfix> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050e51b_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1d050e51b_Assign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01803c_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1eb01803c_IndexingExprModel> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050e8c3_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1d050e8c3_MultiAssign> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb0095b1_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1eb0095b1_Const> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050ee12_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1d050ee12_Match> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0511012_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1d0511012_FallSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d050d619_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1d050d619_BreakSt> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0511386_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1d0511386_RetSt> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea313635_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ea313635_ScopeTree> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea307bbd_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ea307bbd_Expr> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea319295_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ea319295_Conditional> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea316b22_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ea316b22_Iter> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea3184e7_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ea3184e7_ContSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea310d4c_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ea310d4c_LabelSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea311204_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ea311204_GotoSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea312139_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ea312139_AssignSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31a5b5_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ea31a5b5_MatchCase> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea3114e0_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ea3114e0_FallSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea318140_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1ea318140_BreakSt> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea3164b2_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ea3164b2_RetSt> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30855e_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ea30855e_UseExpr> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb023b80_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1eb023b80_Fn> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea31ed8e_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ea31ed8e_Struct> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05c3811_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1d05c3811_TypeAlias> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05005ea_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1d05005ea_Enum> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0501be5_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1d0501be5_TypeEnum> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01979c_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1eb01979c_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01a14e_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1eb01a14e_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01ab99_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1eb01ab99_CommonIdentExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01b20a_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1eb01b20a_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb015c4e_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1eb015c4e_UnaryExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type77_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type77_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=__jule_any_type77_eq, .to_str=__jule_any_type77_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type77 && __jule_any_type77_eq(any.data.alloc, (void*)&other); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea305baa_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1ea305baa_ArrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea304e51_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ea304e51_SlcTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea305528_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1ea305528_PtrTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea304a55_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ea304a55_SptrTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea306408_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ea306408_MapTypeDecl> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30523c_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ea30523c_TupleTypeDecl> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30a440_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1ea30a440_VariadicExpr> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb017ab9_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1eb017ab9_SliceExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30c62e_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1ea30c62e_FieldExprPair> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30dac5_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1ea30dac5_KeyValPair> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30987e_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1ea30987e_IdentExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30884a_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ea30884a_TupleExpr> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01b507_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1eb01b507_TupleExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb02061b_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1eb02061b_RuneExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05c4504_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1d05c4504_TypeKind> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01a8ad_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1eb01a8ad_ArrayExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30b122_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1ea30b122_SubIdentExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea3043b2_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1ea3043b2_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30a088_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1ea30a088_UnaryExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30369c_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ea30369c_TypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30ab9e_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1ea30ab9e_NsSelectionExpr> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea304769_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1ea304769_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01925d_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1eb01925d_SlicingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type101_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type101_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=__jule_any_type101_eq, .to_str=__jule_any_type101_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type101 && __jule_any_type101_eq(any.data.alloc, (void*)&other); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb016d60_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1eb016d60_CastingExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30e2ac_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1ea30e2ac_SliceExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb016502_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1eb016502_StructLitExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01a4e5_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1eb01a4e5_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb018c1e_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1eb018c1e_MapExprModel> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb0183e4_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1eb0183e4_AnonFnExprModel> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea307ea9_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ea307ea9_RangeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea308c02_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ea308c02_LitExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30940b_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ea30940b_UnsafeExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30eb2b_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ea30eb2b_IndexingExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea310236_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ea310236_SlicingExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30a7e7_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1ea30a7e7_CastExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30cd7c_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1ea30cd7c_StructLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30bba0_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1ea30bba0_FnCallExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30d300_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1ea30d300_BraceLit> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ea30b595_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1ea30b595_BinopExpr> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type118_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type118_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=__jule_any_type118_eq, .to_str=__jule_any_type118_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type118 && __jule_any_type118_eq(any.data.alloc, (void*)&other); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb015897_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1eb015897_BinopExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb016810_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1eb016810_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01c4c5_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01d31c_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01da26_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1eb01da26_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb01dd45_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb020044_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1eb020044_SizeofExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb020330_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1eb020330_AlignofExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1eb020929_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1eb020929_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d068e5d0_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1d068e5d0_MutSlicingExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d068e976_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1d068e976_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d068e019_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1d068e019_PushToSliceExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d068d832_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1d068d832_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d068db51_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1d068db51_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U8*>(alloc) == *static_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F32*>(alloc) == *static_cast<jule::F32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I8*>(alloc) == *static_cast<jule::I8*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I16*>(alloc) == *static_cast<jule::I16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U16*>(alloc) == *static_cast<jule::U16*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
void __jule_any_type140_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U32*>(alloc) == *static_cast<jule::U32*>(other); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_any_type140_dealloc, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
jule::Str _1a95402cb_OutDir = jule::Str("dist", 4);
jule::Str _1a95405d9_OutName = jule::Str("ir.cpp", 6);
jule::Str _1a954073d_Out = jule::Str();
jule::Str _22b069a42_Compiler = jule::Str();
jule::Str _22b1277e2_CompilerPath = jule::Str();
jule::Str _22b127a12_CppStd = jule::Str("cpp17", 5);
jule::Bool _22b127c32_Shadowing = false;
jule::Bool _22b127e85_Transpilation = false;
jule::Bool _22b12824e_Test = false;
jule::Bool _22b128518_RC = true;
jule::Bool _22b1288e2_Safety = true;
jule::Bool _22b128bab_Production = false;
jule::Ptr<_22dbc480e_RangeTable> _22db6004c__L = jule::new_ptr<_22dbc480e_RangeTable>(_22dbc480e_RangeTable{._field_R16=jule::Slice<_22dbc3e18_Range16>::make({_22dbc3e18_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22dbc3e18_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22dbc3e18_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22dbc3e18_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22dbc3e18_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22dbc3e18_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22dbc3e18_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22dbc3e18_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22dbc3e18_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22dbc3e18_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22dbc3e18_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22dbc3e18_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22dbc3e18_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22dbc3e18_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22dbc3e18_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22dbc3e18_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22dbc3e18_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22dbc3e18_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22dbc3e18_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22dbc3e18_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22dbc3e18_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22dbc3e18_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22dbc3e18_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22dbc3e18_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22dbc3e18_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22dbc3e18_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22dbc3e18_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22dbc3e18_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22dbc3e18_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22dbc3e18_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22dbc3e18_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22dbc3e18_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22dbc3e18_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22dbc3e18_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22dbc3e18_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22dbc3e18_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22dbc3e18_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22dbc3e18_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22dbc3e18_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22dbc3e18_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22dbc3e18_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22dbc3e18_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22dbc438b_Range32>::make({_22dbc438b_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22dbc438b_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22dbc438b_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22dbc438b_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22dbc438b_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22dbc438b_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22dbc438b_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22dbc438b_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22dbc438b_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22dbc438b_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22dbc438b_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22dbc438b_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22dbc438b_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22dbc438b_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22dbc438b_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22dbc438b_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22dbc438b_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22dbc438b_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22dbc438b_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22dbc438b_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22dbc438b_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22dbc438b_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22dbc438b_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22dbc438b_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_22dbc480e_RangeTable> _22db6103c__LU = jule::new_ptr<_22dbc480e_RangeTable>(_22dbc480e_RangeTable{._field_R16=jule::Slice<_22dbc3e18_Range16>::make({_22dbc3e18_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22dbc3e18_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22dbc3e18_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22dbc3e18_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22dbc3e18_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22dbc3e18_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22dbc3e18_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22dbc3e18_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22dbc3e18_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22dbc3e18_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22dbc3e18_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22dbc3e18_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22dbc438b_Range32>::make({_22dbc438b_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22dbc438b_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22dbc438b_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22dbc438b_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22dbc438b_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22dbc438b_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _22ca22a8c_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _22ca247c5_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _22ca24a6c_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _21271b5e7_PathStdlib = jule::Str();
jule::Str _21271be77_PathExec = jule::Str();
jule::Str _21271d198_PathWd = jule::Str();
jule::Str _21272ba14_PathApi = jule::Str();
jule::Array<jule::I32,5> _21295b749_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _21295b969_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _21295bbbc_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _212a067b1_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _212a06aad_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_212a1469d_kindPair,47> _212a14acc_keywords = jule::Array<_212a1469d_kindPair,47>({_212a1469d_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_212a1469d_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_212a1469d_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_212a1469d_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_212a1469d_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_212a1469d_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_212a1469d_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_212a1469d_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_212a1469d_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_212a1469d_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_212a1469d_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_212a1469d_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_212a1469d_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_212a1469d_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_212a1469d_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_212a1469d_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_212a1469d_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_212a1469d_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_212a1469d_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_212a1469d_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_212a1469d_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_212a1469d_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_212a1469d_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_212a1469d_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_212a1469d_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_212a1469d_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_212a1469d_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_212a1469d_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_212a1469d_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_212a1469d_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_212a1469d_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_212a1469d_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_212a1469d_kindPair,39> _212a14e1d_basicOps = jule::Array<_212a1469d_kindPair,39>({_212a1469d_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_212a1469d_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_212a1469d_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_212a1469d_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_212a1469d_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_212a1469d_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_212a1469d_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1eae9d830__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1eae9dde6__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_22c00d485_floatInfo _22c024644_f32info = _22c00d485_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_22c00d485_floatInfo _22c040b9e_f64info = _22c00d485_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1eaedb1b9_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1eaedcc6a_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1eaedd7c6_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1eaeddb17_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1eaee1b3c_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1eaee558b_leftCheat> _1eaee59ba_leftCheats = jule::Slice<_1eaee558b_leftCheat>::make({_1eaee558b_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1eaee558b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1eaee558b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1eaee558b_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1eaee558b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1eaee558b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1eaee558b_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1eaee558b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1eaee558b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1eaee558b_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1eaee558b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1eaee558b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1eaee558b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1eaee558b_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1eaee558b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1eaee558b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1eaee558b_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1eaee558b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1eaee558b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1eaee558b_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1eaee558b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1eaee558b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1eaee558b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1eaee558b_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1eaee558b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1eaee558b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1eaee558b_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1eaee558b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1eaee558b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1eaee558b_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1eaee558b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1eaee558b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1eaee558b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1eaee558b_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1eaee558b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1eaee558b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1eaee558b_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1eaee558b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1eaee558b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1eaee558b_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1eaee558b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1eaee558b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1eaee558b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1eaee558b_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1eaee558b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1eaee558b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1eaee558b_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1eaee558b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1eaee558b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1eaee558b_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1eaee558b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1eaee558b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1eaee558b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1eaee558b_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1eaee558b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1eaee558b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1eaee558b_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1eaee558b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1eaee558b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1eaee558b_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1eaee558b_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1eaeeb55e_BitSize = 0LL;
jule::Str _1eaeeb7c3_SysInt = jule::Str();
jule::Str _1eaeeba8c_SysUint = jule::Str();
jule::Slice<jule::Str> _1d0503961_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1d069d556_Copy = false;
jule::Bool _1d069d864_Deadcode = false;
jule::Bool _1d069db2d_Append = false;
jule::Bool _1d069de3b_Math = false;
jule::Bool _1d069e205_Access = false;
jule::Bool _1d069e4be_Inline = false;
jule::Bool _1d069e788_Ptr = false;
jule::Bool _1d069eb62_Cond = false;
jule::Bool _1b7c727d0_exprEnabled = false;
jule::Bool _1b7c7344b_scopeEnabled = false;
jule::Array<jule::U64,12> _1a9512a73_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a9459008_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_22dbc480e_RangeTable> _22db6d742_Upper = _22db6103c__LU;
jule::Array<jule::U8,256> _22dbbd275__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _22dc8c520_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_22dc8caa3_acceptRange,16> _22dc8cdb1_acceptRanges = jule::Array<_22dc8caa3_acceptRange,16>({_22dc8caa3_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_22dc8caa3_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_22dc8caa3_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_22dc8caa3_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_22dc8caa3_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _22ca13682_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _21271b97c_Os = jule::Str("darwin", 6);
jule::Str _2126e4108_Arch = jule::Str("arm64", 5);
jule::Ptr<_22dbc480e_RangeTable> _22db671db_Letter = _22db6004c__L;





std::ostream &operator<<(std::ostream &_Stream, _22dbc3e18_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22dbc438b_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22dbc480e_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22dc8caa3_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22dcc5d3e_index(_22dcc58bb_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*_self_)._field_buff != nullptr)) {
		return (*_self_)._field_buff[_5424_i];;
	};
	return (*_self_)._field_path[_5424_i];;
}



inline void _22dcc60b4_append(_22dcc58bb_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*_self_)._field_buff == nullptr)) {
		if ((((*_self_)._field_w < (*_self_)._field_path.len()) && ((*_self_)._field_path[(*_self_)._field_w] == _6125_c))) {
			((*_self_)._field_w)++;
			return;;
		};
		(*_self_)._field_buff=jule::Slice<jule::U8>::alloc((*_self_)._field_path.len(), (*_self_)._field_path.len(), 0);
		jule::copy(((*_self_)._field_buff), (static_cast<jule::Slice<jule::U8>>((*_self_)._field_path.slice(0LL,(*_self_)._field_w))));
	};
	(*_self_)._field_buff[(*_self_)._field_w]=_6125_c;
	((*_self_)._field_w)++;
}



inline jule::Str _22dcc6328_string(_22dcc58bb_lazyBuff* _self_) {
	if (((*_self_)._field_buff == nullptr)) {
		return (*_self_)._field_volAndPath.slice(0LL,((*_self_)._field_volLen + (*_self_)._field_w));;
	};
	return ((*_self_)._field_volAndPath.slice(0LL,(*_self_)._field_volLen) + static_cast<jule::Str>((*_self_)._field_buff.slice(0LL,(*_self_)._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _22dcc58bb_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22b24c131_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_22b24c131_DirEntry>>> static__22dcc9e31_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_22b24c131_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _22b31cce5_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_22b24c131_DirEntry>>>(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _22b31d08c_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1a9d7895a;
			};
			jule::Str _2517_name = _22b2edd2b_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_22c0b62c9_Status> _2621_stat = ({
				auto except = static__22b1c7e14_Of(_22dcc702c_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_22b24c131_DirEntry>>>(jule::Any(except.error, &__jule_any_type1));
				} jule::Ptr<_22c0b62c9_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_22b24c131_DirEntry>(_22b24c131_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1a9d7895a:;
	}
	_iter_end_1a9d7895a:;;
	_22b31d334_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_22b24c131_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__22dcca140_Create(jule::Str _3922_path) {
	if ((_22b31dbb4_Mkdir((&(_3922_path[0LL])),448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22dcca34e_Remove(jule::Str _5122_path) {
	if ((_22b31de5b_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22b2951e0_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22b1e9694_File>> static__22b1ea5da_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _22b31c4cb_Open((&(_1820_path[0LL])),static_cast<jule::I64>(_1831_flag),_1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22b1e9694_File>>(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_22b1e9694_File>>(jule::Any(), static__22b1e9881_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__22b1eb93d_Remove(jule::Str _3022_path) {
	if ((_22b31e203_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22b295e5a_Write(_22b1e9694_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22c09be3b_Write(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_4424_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _22b1ad180_Read(_22b1e9694_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22c09b6cc_Read(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),(&(_6427_buff[0LL])),static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_22b1e9694_File> static__22b1e9881_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_22b1e9694_File>(_22b1e9694_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_22b1e9694_File>> static__22b1c8c17_Create(jule::Str _5522_path) {
	return jule::Exceptional<jule::Ptr<_22b1e9694_File>>(jule::Any(), ({
		auto except = static__22b1ea5da_Open(_5522_path,static_cast<jule::I64>(1538LL),438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_22b1e9694_File>>(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_22b1e9694_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__22b1c9399_Read(jule::Str _6720_path) {
	jule::Ptr<_22c0b62c9_Status> _6813_s = ({
		auto except = static__22b1c7e14_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_22c0b62c9_Status>(nullptr);});
	});;
	if ((!(_22b1ea431_IsReg(_6813_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_6813_s.get()._field_Size == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_22b1e9694_File> _7817_f = ({
		auto except = static__22b1ea5da_Open(_6720_path,static_cast<jule::I64>(0LL),0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_22b1e9694_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _22b24d495_Close(_7817_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:79:17"));
		});
	});;
	jule::Slice<jule::U8> _8117_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_6813_s.get()._field_Size), static_cast<jule::I64>(_6813_s.get()._field_Size), 0);;
	jule::I64 _8213_n = ({
		auto except = _22b1ad180_Read(_7817_f.ptr(), _8117_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(except.error, &__jule_any_type1));
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8117_buff.slice(0LL,_8213_n));;
}



inline jule::VoidExceptional static__22b24c7e6_Write(jule::Str _9121_path, jule::Slice<jule::U8> _9132_data, jule::I64 _9146_perm) {
	jule::Ptr<_22b1e9694_File> _9217_f = ({
		auto except = static__22b1ea5da_Open(_9121_path,static_cast<jule::I64>(1537LL),_9146_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		} jule::Ptr<_22b1e9694_File>(nullptr);});
	});;
	({
		auto except = _22b295e5a_Write(_9217_f.ptr(), _9132_data);
		if (!except.ok()) {
			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		}
	});
	({
		auto except = _22b24d495_Close(_9217_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22b24cdce_Seek(_22b1e9694_File* _self_, jule::I64 _10523_offset, jule::I64 _10536_origin) {
	jule::I64 _10613_pos = _22c09b2e2_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle)),_10523_offset,static_cast<jule::I64>(_10536_origin));;
	if ((_10613_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _10613_pos);;
}



inline jule::VoidExceptional _22b24d495_Close(_22b1e9694_File* _self_) {
	if ((_22c09ba51_Close(static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22b1e9694_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22c0b62c9_Status>> static__22b1c7e14_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_22c0b62c9_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _22b31c0e1_Stat((&(_1118_path[0LL])),(&(_1517_handle)));;
	if ((_1613_code != -1LL)) {
		return jule::Exceptional<jule::Ptr<_22c0b62c9_Status>>(jule::Any(), jule::new_ptr<_22c0b62c9_Status>(_22c0b62c9_Status{._field_Mode=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_mode)), ._field_Size=static_cast<jule::U64>(static_cast<jule::U64>(_1517_handle.st_size))}));;
	};
	return jule::Exceptional<jule::Ptr<_22c0b62c9_Status>>(jule::Any(_22b1cdd93_getLastFsError(), &__jule_any_type0));
}



inline jule::Bool _22b1c84ca_IsDir(_22c0b62c9_Status* _self_) {
	return (((*_self_)._field_Mode & 16384LLU) == 16384LLU);;
}



inline jule::Bool _22b1ea431_IsReg(_22c0b62c9_Status* _self_) {
	return (((*_self_)._field_Mode & 32768LLU) == 32768LLU);;
}







std::ostream &operator<<(std::ostream &_Stream, _22c0b62c9_Status _Src) {
	_Stream << "Status{";
	_Stream << "Mode:" << _Src._field_Mode << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21272d230_Cmd> static__21272d65e_New(jule::Str _2019_path) {
	return jule::new_ptr<_21272d230_Cmd>(_21272d230_Cmd{._field_path=_2019_path, });;
}



inline jule::Exceptional<jule::I64> _21272d8c3_Spawn(_21272d230_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _212731794_spawn(&(*_self_));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(jule::Any(except.error, &__jule_any_type1));
		} 0;});
	})));;
}



inline jule::Exceptional<jule::I64> _212731794_spawn(_21272d230_Cmd* _self_) {
	if ((*_self_)._field_path.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type2));
	};
	jule::I64 _4913_pid = fork();;
	{
		auto &_match_expr{ _4913_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a9d9be34:;
			{
				return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type2));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a9d9c97e:;
			{
				jule::I64 _5421_status = 0LL;;
				if (((*_self_)._field_Env == nullptr)) {
					_5421_status=static_cast<jule::I64>(_2127310bd_execvp((*_self_)._field_path,(*_self_)._field_Args));
				} else {
					_5421_status=static_cast<jule::I64>(_2127314a8_execve((*_self_)._field_path,(*_self_)._field_Args,(*_self_)._field_Env));
				};
				if ((_5421_status == -1LL)) {
					kill(static_cast<jule::I64>(getpid()),SIGTERM);
				};
				_2127320be_Exit(255LL);
			}
		}
		_match_end_1a9d9c8d5:;
	};
	jule::I64 _6513_status = 0LL;;
	if ((waitpid(_4913_pid,((signed*)((&(_6513_status)))),WUNTRACED) == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_21272c99e_getLastProcessError(), &__jule_any_type2));
	};
	if (WIFSIGNALED(_6513_status)) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type2));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_6513_status)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21272d230_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22ca31eb9_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _212a0c663_Prec(_212a0c2ab_Token* _self_) {
	if (((*_self_)._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a9e4ddc6:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a9e4de3c:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a9e4db84:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a9e4dbea:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a9e4dc61:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a9e4d5ce:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a9e4d579:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _212a0c2ab_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _212a12a53_IsOk(_212a12646_File* _self_) {
	({
		auto except = static__22b1c7e14_Of((*_self_)._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_22c0b62c9_Status>(nullptr);});
	});
	return true;;
}



inline void _212a12cc8_Fill(_212a12646_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*_self_)._field_Data=_2327_data;
}



inline jule::Str _212a1303c_Dir(_212a12646_File* _self_) {
	return _22dcc7b87_Dir((*_self_)._field_Path);;
}



inline jule::Str _212a132a1_Name(_212a12646_File* _self_) {
	return _22dcc7813_Base((*_self_)._field_Path);;
}



inline jule::Uintptr _212a13515_Addr(_212a12646_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*_self_))))));;
}



inline jule::Str _212a13823_GetRow(_212a12646_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*_self_)._field_Data.len()); (_4717_i)++) {
		{
			if (((*_self_)._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1a9e5397a;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*_self_)._field_Data.slice(_4617_lineStart,_4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a9e5397a:;
	}
	_iter_end_1a9e5397a:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _212a12646_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _212a1469d_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _212a1a7a3_pushErr(_212a1a20e_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_212a15418_makeErr((*_self_)._field_row,(*_self_)._field_column,(*_self_)._field_file,_45826_fmt,_45839_args));;
}



inline void _212a1aac2_pushErrTok(_212a1a20e_lex* _self_, jule::Ptr<_212a0c2ab_Token>& _46330_token, jule::Str _46345_fmt) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_212a15418_makeErr(_46330_token.get()._field_Row,_46330_token.get()._field_Column,(*_self_)._field_file,_46345_fmt,jule::Slice<jule::Any>()));;
}



inline void _212a1ac9d_lex(_212a1a20e_lex* _self_) {
	(*_self_)._field_errors=nullptr;
	_212a1cca0_newLine(&(*_self_));
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_212a0c2ab_Token> _47321_token = _212a1e125_token(&(*_self_));;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*_self_)._field_tokens = jule::alloc_for_append((*_self_)._field_tokens,1);(*_self_)._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1a9e873e8:;
	}
	_iter_end_1a9e873e8:;;
}



inline jule::Str _212a1b0ab_id(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _48222_ln) {
	if ((_48222_ln.len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_48222_ln);
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_212a10787_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < _48222_ln.len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_48222_ln.slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_212a10cc6_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_212a10787_IsLetter(_49218_pr))))) {
				(*_self_)._field_pos+=_48621_i;
				return static_cast<jule::Str>(_48222_ln.slice(0LL,_48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1a9e8a5d8:;
	}
	_iter_end_1a9e8a5d8:;;
	(*_self_)._field_pos+=_48222_ln.len();
	return static_cast<jule::Str>(_48222_ln);;
}



inline jule::Slice<jule::U8> _212a1b320_resume(_212a1a20e_lex* _self_) {
	jule::I64 _50717_i = (*_self_)._field_pos;;
	for (; (_50717_i < (*_self_)._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*_self_)._field_file.get()._field_Data[_50717_i]);;
			if (_212a10336_IsSpace(_50917_r)) {
				;
				((*_self_)._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a9e900b0:;
						{
							_212a1cca0_newLine(&(*_self_));
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a9e8ed90:;
						{
							(*_self_)._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a9e8a550:;
						{
							((*_self_)._field_column)++;
						}
					}
					_match_end_1a9e8e994:;
				};
				goto _iter_next_1a9e8d245;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*_self_)._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*_self_)._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1a9e8dd4a;
					};
				}
			_iter_next_1a9e8dd4a:;
			}
			_iter_end_1a9e8dd4a:;;
			return (*_self_)._field_file.get()._field_Data.slice(_50717_i,_52421_j);;
		}
	_iter_next_1a9e8d245:;
	}
	_iter_end_1a9e8d245:;;
	return nullptr;;
}



inline void _212a1b595_lexLineComment(_212a1a20e_lex* _self_, jule::Ptr<_212a0c2ab_Token>& _53538_token) {
	jule::I64 _53613_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _53917_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1a9e92898;
			};
		}
	_iter_next_1a9e92898:;
	}
	_iter_end_1a9e92898:;;
	if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		_53538_token.get()._field_Id=static_cast<jule::U64>(18LLU);
		_53538_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_53613_start,(*_self_)._field_pos));
	};
}



inline void _212a1b81a_lexRangeComment(_212a1a20e_lex* _self_, jule::Ptr<_212a0c2ab_Token>& _55039_token) {
	jule::I64 _55113_start = (*_self_)._field_pos;;
	(*_self_)._field_pos+=2LL;
	for (; ((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len()); ((*_self_)._field_pos)++) {
		{
			jule::U8 _55417_r = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1a9e95bdc;
			};
			if ((_55417_r == '\n')) {
				_212a1cca0_newLine(&(*_self_));
				goto _iter_next_1a9e95bdc;
			};
			(*_self_)._field_column+=1LL;
			if ((((((*_self_)._field_pos + 1LL) < (*_self_)._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*_self_)._field_file.get()._field_Data[((*_self_)._field_pos + 1LL)] == '/'))) {
				(*_self_)._field_column+=2LL;
				(*_self_)._field_pos+=2LL;
				if ((((*_self_)._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					_55039_token.get()._field_Id=static_cast<jule::U64>(18LLU);
					_55039_token.get()._field_Kind=static_cast<jule::Str>((*_self_)._field_file.get()._field_Data.slice(_55113_start,(*_self_)._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a9e95bdc:;
	}
	_iter_end_1a9e95bdc:;;
	_212a1a7a3_pushErr(&(*_self_), jule::Str("missing block comment close", 27),jule::Slice<jule::Any>());
}



inline jule::Str _212a1bb28_num(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _57823_txt) {
	jule::Str __jule_func_result;
	if ((_57823_txt[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_212a18c35_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_212a1898d_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_212a173d7_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_212a17140_commonNum(_57823_txt);
	_julec_label_end:;
	(*_self_)._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _212a1be36_escapeSeq(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if ((_60029_txt.len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ _60029_txt[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a9ea0bb4:;
			{
				(*_self_)._field_pos+=2LL;
				return static_cast<jule::Str>(_60029_txt.slice(0LL,2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a9ea0ae8:;
			{
				_60117_seq=_212a1931d_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a9ea082e:;
			{
				_60117_seq=_212a195d7_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a9ea0895:;
			{
				_60117_seq=_212a19791_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1a9ea00c0:;
			{
				_60117_seq=_212a19a27_byteEscape(_60029_txt);
			}
		}
		_match_end_1a9ea070d:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*_self_)._field_pos)++;
		_212a1a7a3_pushErr(&(*_self_), jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*_self_)._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _212a1c2dd_getRune(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && (_63027_txt[0LL] == '\\'))) {
		return _212a1be36_escapeSeq(&(*_self_), _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_63027_txt);
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _212a1c5eb_lexRune(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*_self_)._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < _63927_txt.len()); (_64317_i)++) {
		{
			if ((_63927_txt[_64317_i] == '\r')) {
				goto _iter_next_1a9eaba38;
			};
			if ((_63927_txt[_64317_i] == '\n')) {
				_212a1a7a3_pushErr(&(*_self_), jule::Str("rune is not finished", 20),jule::Slice<jule::Any>());
				((*_self_)._field_pos)++;
				_212a1cca0_newLine(&(*_self_));
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = _63927_txt.slice(_64317_i);;
			jule::Str _65617_r = _212a1c2dd_getRune(&(*_self_), _65517_part,false);;
			_64017_run+=_65617_r;
			(*_self_)._field_column+=_22dc90336_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*_self_)._field_pos)++;
				goto _iter_end_1a9eaba38;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1a9eaba38:;
	}
	_iter_end_1a9eaba38:;;
	if ((_64217_n == 0LL)) {
		_212a1a7a3_pushErr(&(*_self_), jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_212a1a7a3_pushErr(&(*_self_), jule::Str("rune is should be single", 24),jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _212a1c860_lexStr(_212a1a20e_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
	((*_self_)._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*_self_)._field_column)++;
	while (((*_self_)._field_pos < (*_self_)._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*_self_)._field_file.get()._field_Data[(*_self_)._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1a9eb3633;
			};
			if ((_68717_ch == '\n')) {
				_212a1cca0_newLine(&(*_self_));
				if ((!(_68213_raw))) {
					_212a1a7a3_pushErr(&(*_self_), jule::Str("string is not finished", 22),jule::Slice<jule::Any>());
					((*_self_)._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*_self_)._field_file.get()._field_Data.slice((*_self_)._field_pos);;
			jule::Str _70017_r = _212a1c2dd_getRune(&(*_self_), _69921_part,_68213_raw);;
			_67917_s+=_70017_r;
			(*_self_)._field_column+=_22dc90336_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1a9eb3633;
			};
		}
	_iter_next_1a9eb3633:;
	}
	_iter_end_1a9eb3633:;;
	return _67917_s;;
}



inline jule::Bool _212a1cac4_isFirstTokenOfLine(_212a1a20e_lex* _self_) {
	return ((*_self_)._field_column == 1LL);;
}



inline void _212a1cca0_newLine(_212a1a20e_lex* _self_) {
	((*_self_)._field_row)++;
	(*_self_)._field_column=1LL;
}



inline jule::Bool _212a1d29a_isOp(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_212a0c2ab_Token>& _72066_t) {
	if ((!(_212a1579d_bytesHasPrefix(_72024_txt,_72037_kind)))) {
		return false;;
	};
	_72066_t.get()._field_Kind=_72037_kind;
	_72066_t.get()._field_Id=_72048_id;
	(*_self_)._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _212a1d652_lexBasicOps(_212a1a20e_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_212a0c2ab_Token>& _73048_tok) {
	{
		auto &expr = _212a14e1d_basicOps;
		auto it = expr.begin();
		_iter_begin_1a9eb9815:;
		if (it != expr.end()) {
			_212a1469d_kindPair &_73116_pair = *it;
			{
				if (_212a1d29a_isOp(&(*_self_), _73030_txt,_73116_pair._field_kind,_73116_pair._field_id,_73048_tok)) {
					return true;;
				};
			}
			_iter_next_1a9eb9815:;
			++it;
			goto _iter_begin_1a9eb9815;
		}
		_iter_end_1a9eb9815:;
	};
	return false;;
}



inline jule::Bool _212a1da09_lexId(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _74025_txt, jule::Ptr<_212a0c2ab_Token>& _74043_t) {
	jule::Str _74113_lex = _212a1b0ab_id(&(*_self_), _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	_74043_t.get()._field_Kind=_74113_lex;
	_74043_t.get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _212a1ddb1_lexNum(_212a1a20e_lex* _self_, jule::Slice<jule::U8>& _75026_txt, jule::Ptr<_212a0c2ab_Token>& _75044_t) {
	jule::Str _75113_lex = _212a1bb28_num(&(*_self_), _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	_75044_t.get()._field_Kind=_75113_lex;
	_75044_t.get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_212a0c2ab_Token> _212a1e125_token(_212a1a20e_lex* _self_) {
	jule::Ptr<_212a0c2ab_Token> _76217_t = jule::new_ptr<_212a0c2ab_Token>(_212a0c2ab_Token{._field_File=(*_self_)._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _212a1b320_resume(&(*_self_));;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*_self_)._field_column;
	_76217_t.get()._field_Row=(*_self_)._field_row;
	{
		
		if (_212a1ddb1_lexNum(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1a9ec072d:;
			{
				goto _match_end_1a9ebecd2;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1a9ec094d:;
			{
				_76217_t.get()._field_Kind=_212a1c5eb_lexRune(&(*_self_), _76713_txt);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1a9ec1113:;
			{
				_76217_t.get()._field_Kind=_212a1c860_lexStr(&(*_self_));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_212a1579d_bytesHasPrefix(_76713_txt,jule::Str("//", 2))) {
			_case_begin_1a9ec1465:;
			{
				_212a1b595_lexLineComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_212a1579d_bytesHasPrefix(_76713_txt,jule::Str("/*", 2))) {
			_case_begin_1a9ec14cb:;
			{
				_212a1b81a_lexRangeComment(&(*_self_), _76217_t);
				return _76217_t;;
			}
		}
		else if (_212a1d29a_isOp(&(*_self_), _76713_txt,jule::Str("(", 1),static_cast<jule::U64>(3LLU),_76217_t) || _212a1d29a_isOp(&(*_self_), _76713_txt,jule::Str(")", 1),static_cast<jule::U64>(3LLU),_76217_t) || _212a1d29a_isOp(&(*_self_), _76713_txt,jule::Str("{", 1),static_cast<jule::U64>(3LLU),_76217_t) || _212a1d29a_isOp(&(*_self_), _76713_txt,jule::Str("}", 1),static_cast<jule::U64>(3LLU),_76217_t) || _212a1d29a_isOp(&(*_self_), _76713_txt,jule::Str("[", 1),static_cast<jule::U64>(3LLU),_76217_t) || _212a1d29a_isOp(&(*_self_), _76713_txt,jule::Str("]", 1),static_cast<jule::U64>(3LLU),_76217_t) || _212a1d652_lexBasicOps(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1a9ec1542:;
			{
				goto _match_end_1a9ebecd2;
			}
		}
		else if (_212a1da09_lexId(&(*_self_), _76713_txt,_76217_t)) {
			_case_begin_1a9ebedc0:;
			{
				{
					auto &expr = _212a14acc_keywords;
					auto it = expr.begin();
					_iter_begin_1a9ec6bda:;
					if (it != expr.end()) {
						_212a1469d_kindPair &_80520_pair = *it;
						{
							if ((_80520_pair._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=_80520_pair._field_id;
								goto _iter_end_1a9ec6bda;
							};
						}
						_iter_next_1a9ec6bda:;
						++it;
						goto _iter_begin_1a9ec6bda;
					}
					_iter_end_1a9ec6bda:;
				};
			}
		}
		else {
			_case_begin_1a9ebed59:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_212a1a7a3_pushErr(&(*_self_), jule::Str("undefined token: @", 18),jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type3)}));
				((*_self_)._field_column)++;
				(*_self_)._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1a9ebecd2:;
	};
	(*_self_)._field_column+=_22dc90336_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _212a1a20e_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea2be217_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea2c0009_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea2c0405_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30369c_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea3040c6_IsPrim(_1ea303c63_IdentTypeDecl* _self_) {
	return ((*_self_)._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea303c63_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea3043b2_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea304769_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea304a55_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea304e51_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30523c_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea30587a_IsUnsafe(_1ea305528_PtrTypeDecl* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea305528_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea306084_AutoSized(_1ea305baa_ArrTypeDecl* _self_) {
	return ((*_self_)._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea305baa_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea306408_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea3067b0_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea307bbd_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea307ea9_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30855e_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30884a_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea309054_IsNil(_1ea308c02_LitExpr* _self_) {
	return ((*_self_)._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea308c02_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30940b_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea309bd1_IsSelf(_1ea30987e_IdentExpr* _self_) {
	return ((*_self_)._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30987e_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30a088_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30a440_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30a7e7_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30ab9e_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30b122_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30b595_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea30c013_Unhandled(_1ea30bba0_FnCallExpr* _self_) {
	return ((*_self_)._field_Exception == nullptr);;
}



inline jule::Bool _1ea30c277_Ignored(_1ea30bba0_FnCallExpr* _self_) {
	return (((*_self_)._field_Exception != nullptr) && (*_self_)._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30bba0_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea30c981_IsTargeted(_1ea30c62e_FieldExprPair* _self_) {
	return ((*_self_)._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30c62e_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30cd7c_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea30d652_IsEmpty(_1ea30d300_BraceLit* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30d300_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30dac5_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea30e5dc_IsEmpty(_1ea30e2ac_SliceExpr* _self_) {
	return ((*_self_)._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30e2ac_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea30eb2b_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea310236_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea310522_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea310995_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea310d4c_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea311204_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea3114e0_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea311aea_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea312139_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31302a_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea313635_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea31416e_IsSelf(_1ea313d0b_ParamDecl* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1ea3143d3_IsRef(_1ea313d0b_ParamDecl* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea313d0b_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea31547d_IsAnon(_1ea31512b_FnDecl* _self_) {
	return ((*_self_)._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31512b_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31610a_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea3164b2_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea316e74_IsInf(_1ea316b22_Iter* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea316b22_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea317749_IsWhileNext(_1ea3173e7_WhileKind* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea3173e7_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea317c88_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea318140_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea3184e7_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31896a_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea318d22_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea319295_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31996b_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea319dde_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31a5b5_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31ad57_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea31b62c_AutoExpr(_1ea31b2ca_EnumItemDecl* _self_) {
	return ((*_self_)._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31b2ca_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea31c386_DefaultTyped(_1ea31bd03_EnumDecl* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31bd03_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31c809_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31ce14_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31d112_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31d8b5_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31dec0_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ea31e93d_IsTraitImpl(_1ea31e5ca_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _1ea31eba2_IsStructImpl(_1ea31e5ca_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31e5ca_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22c00d485_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eaed9041_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eaee558b_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1eaedd0cd_set(_1eaee605e_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*_self_)._field_neg=false;
	(*_self_)._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1aa562cc0:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1aa562d47:;
			{
				(*_self_)._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1aa562b5a:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1aa564eae:;
					{
						goto _iter_next_1aa564783;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1aa565036:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*_self_)._field_dp=(*_self_)._field_nd;
						goto _iter_next_1aa564783;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1aa5650ad:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*_self_)._field_nd == 0LL))) {
							((*_self_)._field_dp)--;
							goto _iter_next_1aa564783;
						};
						if (((*_self_)._field_nd < 800LL)) {
							(*_self_)._field_d[(*_self_)._field_nd]=_23322_s[_23417_i];
							((*_self_)._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*_self_)._field_trunc=true;
						};
						goto _iter_next_1aa564783;
					}
				}
				_match_end_1aa564d8d:;
			};
			goto _iter_end_1aa564783;
		}
	_iter_next_1aa564783:;
	}
	_iter_end_1aa564783:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*_self_)._field_dp=(*_self_)._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1eaeda20c_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1aa56c79c;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1aa56c79c:;
		}
		_iter_end_1aa56c79c:;;
		(*_self_)._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1eaedd3db_floatBits(_1eaee605e_decimal* _self_, _22c00d485_floatInfo& _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*_self_)._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	if (((*_self_)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*_self_)._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=_32729_flt._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*_self_)._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*_self_)._field_dp >= _1eaedcc6a_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1eaedcc6a_powtab[(*_self_)._field_dp];
			};
			_1eaee66ad_shift(&(*_self_), static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1aa5741bb:;
	}
	_iter_end_1aa5741bb:;;
	while ((((*_self_)._field_dp < 0LL) || (((*_self_)._field_dp == 0LL) && ((*_self_)._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*_self_)._field_dp)) >= _1eaedcc6a_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1eaedcc6a_powtab[(-((*_self_)._field_dp))];
			};
			_1eaee66ad_shift(&(*_self_), _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1aa57494c:;
	}
	_iter_end_1aa57494c:;;
	(_32817_exp)--;
	if ((_32817_exp < (_32729_flt._field_bias + 1LL))) {
		jule::I64 _38117_n = ((_32729_flt._field_bias + 1LL) - _32817_exp);;
		_1eaee66ad_shift(&(*_self_), static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1eaee66ad_shift(&(*_self_), static_cast<jule::I64>(static_cast<jule::I64>((1LL + _32729_flt._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1eaee7192_roundedInteger(&(*_self_)));
	if ((_32917_mant == (2LLU << _32729_flt._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - _32729_flt._field_bias) >= static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << _32729_flt._field_mantbits)) == 0LLU)) {
		_32817_exp=_32729_flt._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << _32729_flt._field_expbits) - 1LLU) + static_cast<jule::U64>(_32729_flt._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << _32729_flt._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - _32729_flt._field_bias) & static_cast<jule::I64>(((1LL << _32729_flt._field_expbits) - 1LL)))) << _32729_flt._field_mantbits);
	if ((*_self_)._field_neg) {
		_41717_bits|=((1LLU << _32729_flt._field_mantbits) << _32729_flt._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1eaee6438_assign(_1eaee605e_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1aa5828d3:;
	}
	_iter_end_1aa5828d3:;;
	(*_self_)._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*_self_)._field_d[(*_self_)._field_nd]=_33117_buf[_33417_n];
			((*_self_)._field_nd)++;
		}
	_iter_next_1aa583351:;
	}
	_iter_end_1aa583351:;;
	(*_self_)._field_dp=(*_self_)._field_nd;
	_1eaee7747_trim((*_self_));
}



inline void _1eaee66ad_shift(_1eaee605e_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*_self_)._field_nd == 0LL)) {
			_case_begin_1aa585496:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1aa58551d:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1eaee81d7_leftShift((*_self_),60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1aa586288:;
				}
				_iter_end_1aa586288:;;
				_1eaee81d7_leftShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1aa585595:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1eaee7a00_rightShift((*_self_),60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1aa586200:;
				}
				_iter_end_1aa586200:;;
				_1eaee7a00_rightShift((*_self_),static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1aa585375:;
	};
}



inline void _1eaee6933_roundDown(_1eaee605e_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*_self_)._field_nd))) {
		return;;
	};
	(*_self_)._field_nd=_37528_nd;
	_1eaee7747_trim((*_self_));
}



inline void _1eaee6ba8_roundUp(_1eaee605e_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*_self_)._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*_self_)._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*_self_)._field_d[_39017_i])++;
				(*_self_)._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1aa589e07:;
	}
	_iter_end_1aa589e07:;;
	(*_self_)._field_d[0LL]='1';
	(*_self_)._field_nd=1LL;
	((*_self_)._field_dp)++;
}



inline void _1eaee6e2d_round(_1eaee605e_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*_self_)._field_nd))) {
		return;;
	};
	if (_1eaee8528_shouldRoundUp((*_self_),_41124_nd)) {
		_1eaee6ba8_roundUp(&(*_self_), _41124_nd);
	} else {
		_1eaee6933_roundDown(&(*_self_), _41124_nd);
	};
}



inline jule::U64 _1eaee7192_roundedInteger(_1eaee605e_decimal* _self_) {
	if (((*_self_)._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*_self_)._field_dp) && (_42817_i < (*_self_)._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*_self_)._field_d[_42817_i] - '0'))));
		}
	_iter_next_1aa5817e4:;
	}
	_iter_end_1aa5817e4:;;
	for (; (_42817_i < (*_self_)._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1aa58e835:;
	}
	_iter_end_1aa58e835:;;
	if (_1eaee8528_shouldRoundUp((*_self_),(*_self_)._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1eaee605e_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1eb0095b1_Const> static__1eb009a34_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1eb0095b1_Const>(_1eb0095b1_Const{._field_data=jule::Any(_1622_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1eb0095b1_Const> static__1eb009ccb_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1eb0095b1_Const>(_1eb0095b1_Const{._field_data=jule::Any(_1922_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1eb0095b1_Const> static__1eb00a073_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1eb0095b1_Const>(_1eb0095b1_Const{._field_data=jule::Any(_2223_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1eb0095b1_Const> static__1eb00a31a_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1eb0095b1_Const>(_1eb0095b1_Const{._field_data=jule::Any(_2522_x, &__jule_any_type7)});;
}



inline jule::Ptr<_1eb0095b1_Const> static__1eb00a5b2_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1eb0095b1_Const>(_1eb0095b1_Const{._field_data=jule::Any(_2822_x, &__jule_any_type8)});;
}



inline jule::Ptr<_1eb0095b1_Const> static__1eb00a7b0_NewNil(void) {
	return jule::new_ptr<_1eb0095b1_Const>(_1eb0095b1_Const{._field_data=nullptr});;
}



inline jule::I64 _1eb00ada9_ReadI64(_1eb0095b1_Const* _self_) {
	if ((!(_1eb00d252_IsI64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4));;
}



inline jule::U64 _1eb00b11d_ReadU64(_1eb0095b1_Const* _self_) {
	if ((!(_1eb00d4b6_IsU64(&(*_self_))))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5));;
}



inline jule::Bool _1eb00b382_ReadBool(_1eb0095b1_Const* _self_) {
	if ((!(_1eb00d72a_IsBool(&(*_self_))))) {
		return false;;
	};
	return (*_self_)._field_data.cast<jule::Bool>(&__jule_any_type6);;
}



inline jule::Str _1eb00b5e6_ReadStr(_1eb0095b1_Const* _self_) {
	if ((!(_1eb00d98e_IsStr(&(*_self_))))) {
		return jule::Str();;
	};
	return (*_self_)._field_data.cast<jule::Str>(&__jule_any_type7);;
}



inline jule::F64 _1eb00b85a_ReadF64(_1eb0095b1_Const* _self_) {
	if ((!(_1eb00dc03_IsF64(&(*_self_))))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8));;
}



inline jule::I64 _1eb00babe_AsI64(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa616a44:;
			{
				return static_cast<jule::I64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa616aaa:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa6164a0:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8)));;
			}
		}
		else {
			_case_begin_1aa615adc:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa616439:;
	};
}



inline jule::U64 _1eb00bd33_AsU64(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa6184b3:;
			{
				return static_cast<jule::U64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa618529:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa617eeb:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8)));;
			}
		}
		else {
			_case_begin_1aa616b32:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aa617e52:;
	};
}



inline jule::F64 _1eb00c097_AsF64(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa619e32:;
			{
				return static_cast<jule::F64>((*_self_)._field_data.cast<jule::F64>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa619e98:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::I64>(&__jule_any_type4)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa61996a:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*_self_)._field_data.cast<jule::U64>(&__jule_any_type5)));;
			}
		}
		else {
			_case_begin_1aa6185a1:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa6198c1:;
	};
}



inline void _1eb00c31c_SetI64(_1eb0095b1_Const* _self_, jule::I64 _13825_x) {
	(*_self_)._field_data=jule::Any(_13825_x, &__jule_any_type4);
}



inline void _1eb00c592_SetU64(_1eb0095b1_Const* _self_, jule::U64 _14125_x) {
	(*_self_)._field_data=jule::Any(_14125_x, &__jule_any_type5);
}



inline void _1eb00c817_SetBool(_1eb0095b1_Const* _self_, jule::Bool _14426_x) {
	(*_self_)._field_data=jule::Any(_14426_x, &__jule_any_type6);
}



inline void _1eb00ca8c_SetStr(_1eb0095b1_Const* _self_, jule::Str _14725_x) {
	(*_self_)._field_data=jule::Any(_14725_x, &__jule_any_type7);
}



inline void _1eb00cd12_SetF64(_1eb0095b1_Const* _self_, jule::F64 _15025_x) {
	(*_self_)._field_data=jule::Any(_15025_x, &__jule_any_type8);
}



inline void _1eb00cedd_SetNil(_1eb0095b1_Const* _self_) {
	(*_self_)._field_data=nullptr;
}



inline jule::Bool _1eb00d252_IsI64(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa61d908:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa61db7d:;
			{
				return false;;
			}
		}
		_match_end_1aa61db28:;
	};
}



inline jule::Bool _1eb00d4b6_IsU64(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa61e530:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa61dd9d:;
			{
				return false;;
			}
		}
		_match_end_1aa61dc49:;
	};
}



inline jule::Bool _1eb00d72a_IsBool(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aa61e7b6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa61ee9d:;
			{
				return false;;
			}
		}
		_match_end_1aa61ee48:;
	};
}



inline jule::Bool _1eb00d98e_IsStr(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa6209c6:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa6203aa:;
			{
				return false;;
			}
		}
		_match_end_1aa620256:;
	};
}



inline jule::Bool _1eb00dc03_IsF64(_1eb0095b1_Const* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_data };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa620c5c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa621444:;
			{
				return false;;
			}
		}
		_match_end_1aa6213de:;
	};
}



inline jule::Bool _1eb00de67_IsNil(_1eb0095b1_Const* _self_) {
	return ((*_self_)._field_data == nullptr);;
}



inline jule::Bool _1eb00e275_AreSameTypes(_1eb0095b1_Const* _self_, _1eb0095b1_Const _21327_x) {
	{
		
		if ((_1eb00d252_IsI64(&(*_self_)) == _1eb00d252_IsI64(&_21327_x))) {
			_case_begin_1aa623006:;
			{
				return true;;
			}
		}
		else if ((_1eb00d4b6_IsU64(&(*_self_)) == _1eb00d4b6_IsU64(&_21327_x))) {
			_case_begin_1aa62280d:;
			{
				return true;;
			}
		}
		else if ((_1eb00dc03_IsF64(&(*_self_)) == _1eb00dc03_IsF64(&_21327_x))) {
			_case_begin_1aa622885:;
			{
				return true;;
			}
		}
		else if ((_1eb00d72a_IsBool(&(*_self_)) == _1eb00d72a_IsBool(&_21327_x))) {
			_case_begin_1aa62290c:;
			{
				return true;;
			}
		}
		else if ((_1eb00d98e_IsStr(&(*_self_)) == _1eb00d98e_IsStr(&_21327_x))) {
			_case_begin_1aa622984:;
			{
				return true;;
			}
		}
		else if ((_1eb00de67_IsNil(&(*_self_)) == _1eb00de67_IsNil(&_21327_x))) {
			_case_begin_1aa622bd7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa622786:;
			{
				return false;;
			}
		}
		_match_end_1aa6226ba:;
	};
}



inline jule::Bool _1eb00e583_And(_1eb0095b1_Const* _self_, _1eb0095b1_Const _23818_x) {
	{
		
		if ((_1eb00d72a_IsBool(&(*_self_)) && _1eb00d72a_IsBool(&_23818_x))) {
			_case_begin_1aa6262d4:;
			{
				return (_1eb00b382_ReadBool(&(*_self_)) && _1eb00b382_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1aa625adb:;
			{
				return false;;
			}
		}
		_match_end_1aa6256ac:;
	};
}



inline jule::Bool _1eb00e891_Or(_1eb0095b1_Const* _self_, _1eb0095b1_Const _24917_x) {
	{
		
		if ((_1eb00d72a_IsBool(&(*_self_)) && _1eb00d72a_IsBool(&_24917_x))) {
			_case_begin_1aa62768c:;
			{
				return (_1eb00b382_ReadBool(&(*_self_)) || _1eb00b382_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1aa626ec7:;
			{
				return false;;
			}
		}
		_match_end_1aa626625:;
	};
}



inline jule::Bool _1eb00eb9e_Eq(_1eb0095b1_Const* _self_, _1eb0095b1_Const _26017_x) {
	{
		
		if (_1eb00de67_IsNil(&(*_self_))) {
			_case_begin_1aa628aab:;
			{
				return _1eb00de67_IsNil(&_26017_x);;
			}
		}
		else if (_1eb00d72a_IsBool(&(*_self_))) {
			_case_begin_1aa628407:;
			{
				return (_1eb00d72a_IsBool(&_26017_x) && (_1eb00b382_ReadBool(&(*_self_)) == _1eb00b382_ReadBool(&_26017_x)));;
			}
		}
		else if (_1eb00d98e_IsStr(&(*_self_))) {
			_case_begin_1aa62846d:;
			{
				return (_1eb00d98e_IsStr(&_26017_x) && (_1eb00b5e6_ReadStr(&(*_self_)) == _1eb00b5e6_ReadStr(&_26017_x)));;
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa6284e5:;
			{
				return (_1eb00ada9_ReadI64(&(*_self_)) == _1eb00babe_AsI64(&_26017_x));;
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa62856c:;
			{
				return (_1eb00b11d_ReadU64(&(*_self_)) == _1eb00bd33_AsU64(&_26017_x));;
			}
		}
		else if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa6287ae:;
			{
				return (_1eb00b85a_ReadF64(&(*_self_)) == _1eb00c097_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1aa628391:;
			{
				return false;;
			}
		}
		_match_end_1aa6279de:;
	};
}



inline jule::Bool _1eb00eeac_Lt(_1eb0095b1_Const* _self_, _1eb0095b1_Const _28717_x) {
	{
		
		if (_1eb00d98e_IsStr(&(*_self_))) {
			_case_begin_1aa62ca05:;
			{
				return (_1eb00d98e_IsStr(&_28717_x) && (_1eb00b5e6_ReadStr(&(*_self_)) < _1eb00b5e6_ReadStr(&_28717_x)));;
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa62c3b7:;
			{
				return (_1eb00ada9_ReadI64(&(*_self_)) < _1eb00babe_AsI64(&_28717_x));;
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa62c42d:;
			{
				return (_1eb00b11d_ReadU64(&(*_self_)) < _1eb00bd33_AsU64(&_28717_x));;
			}
		}
		else if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa62c494:;
			{
				return (_1eb00b85a_ReadF64(&(*_self_)) < _1eb00c097_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1aa628db9:;
			{
				return false;;
			}
		}
		_match_end_1aa628ced:;
	};
}



inline jule::Bool _1eb0102ba_LtEq(_1eb0095b1_Const* _self_, _1eb0095b1_Const _31019_x) {
	{
		
		if (_1eb00d98e_IsStr(&(*_self_))) {
			_case_begin_1aa6308e8:;
			{
				return (_1eb00d98e_IsStr(&_31019_x) && (_1eb00b5e6_ReadStr(&(*_self_)) <= _1eb00b5e6_ReadStr(&_31019_x)));;
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa6302aa:;
			{
				return (_1eb00ada9_ReadI64(&(*_self_)) <= _1eb00babe_AsI64(&_31019_x));;
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa630321:;
			{
				return (_1eb00b11d_ReadU64(&(*_self_)) <= _1eb00bd33_AsU64(&_31019_x));;
			}
		}
		else if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa630387:;
			{
				return (_1eb00b85a_ReadF64(&(*_self_)) <= _1eb00c097_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1aa62cd13:;
			{
				return false;;
			}
		}
		_match_end_1aa62cc47:;
	};
}



inline jule::Bool _1eb0105c8_Gt(_1eb0095b1_Const* _self_, _1eb0095b1_Const _33317_x) {
	{
		
		if (_1eb00d98e_IsStr(&(*_self_))) {
			_case_begin_1aa6337db:;
			{
				return (_1eb00d98e_IsStr(&_33317_x) && (_1eb00b5e6_ReadStr(&(*_self_)) > _1eb00b5e6_ReadStr(&_33317_x)));;
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa63319d:;
			{
				return (_1eb00ada9_ReadI64(&(*_self_)) > _1eb00babe_AsI64(&_33317_x));;
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa633214:;
			{
				return (_1eb00b11d_ReadU64(&(*_self_)) > _1eb00bd33_AsU64(&_33317_x));;
			}
		}
		else if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa63327a:;
			{
				return (_1eb00b85a_ReadF64(&(*_self_)) > _1eb00c097_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1aa630c06:;
			{
				return false;;
			}
		}
		_match_end_1aa630b3a:;
	};
}



inline jule::Bool _1eb0108d6_GtEq(_1eb0095b1_Const* _self_, _1eb0095b1_Const _35619_x) {
	{
		
		if (_1eb00d98e_IsStr(&(*_self_))) {
			_case_begin_1aa6366ce:;
			{
				return (_1eb00d98e_IsStr(&_35619_x) && (_1eb00b5e6_ReadStr(&(*_self_)) >= _1eb00b5e6_ReadStr(&_35619_x)));;
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa636091:;
			{
				return (_1eb00ada9_ReadI64(&(*_self_)) >= _1eb00babe_AsI64(&_35619_x));;
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa636107:;
			{
				return (_1eb00b11d_ReadU64(&(*_self_)) >= _1eb00bd33_AsU64(&_35619_x));;
			}
		}
		else if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa63616d:;
			{
				return (_1eb00b85a_ReadF64(&(*_self_)) >= _1eb00c097_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1aa633ae9:;
			{
				return false;;
			}
		}
		_match_end_1aa633a2d:;
	};
}



inline jule::Bool _1eb010be4_Add(_1eb0095b1_Const* _self_, _1eb0095b1_Const _37722_x) {
	{
		
		if (_1eb00d98e_IsStr(&(*_self_))) {
			_case_begin_1aa6395c2:;
			{
				if ((!(_1eb00d98e_IsStr(&_37722_x)))) {
					return false;;
				};
				_1eb00ca8c_SetStr(&(*_self_), (_1eb00b5e6_ReadStr(&(*_self_)) + _1eb00b5e6_ReadStr(&_37722_x)));
			}
		}
		else if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa638e84:;
			{
				_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00b85a_ReadF64(&(*_self_)) + _1eb00c097_AsF64(&_37722_x))));
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa638eea:;
			{
				if (_1eb00dc03_IsF64(&_37722_x)) {
					_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00c097_AsF64(&(*_self_)) + _1eb00b85a_ReadF64(&_37722_x))));
				} else {
					_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_1eb00ada9_ReadI64(&(*_self_)) + _1eb00babe_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa639061:;
			{
				if (_1eb00dc03_IsF64(&_37722_x)) {
					_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00c097_AsF64(&(*_self_)) + _1eb00b85a_ReadF64(&_37722_x))));
				} else {
					_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>((_1eb00b11d_ReadU64(&(*_self_)) + _1eb00bd33_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1aa6369dc:;
			{
				return false;;
			}
		}
		_match_end_1aa636921:;
	};
	return true;;
}



inline jule::Bool _1eb011002_Sub(_1eb0095b1_Const* _self_, _1eb0095b1_Const _40622_x) {
	{
		
		if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa63ebc1:;
			{
				_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00b85a_ReadF64(&(*_self_)) - _1eb00c097_AsF64(&_40622_x))));
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa63e4ea:;
			{
				if (_1eb00dc03_IsF64(&_40622_x)) {
					_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00c097_AsF64(&(*_self_)) - _1eb00b85a_ReadF64(&_40622_x))));
				} else {
					_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_1eb00ada9_ReadI64(&(*_self_)) - _1eb00babe_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa63e561:;
			{
				if (_1eb00dc03_IsF64(&_40622_x)) {
					_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00c097_AsF64(&(*_self_)) - _1eb00b85a_ReadF64(&_40622_x))));
				} else {
					_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>((_1eb00b11d_ReadU64(&(*_self_)) - _1eb00bd33_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1aa63e484:;
			{
				return false;;
			}
		}
		_match_end_1aa63db7b:;
	};
	return true;;
}



inline jule::Bool _1eb011310_Mul(_1eb0095b1_Const* _self_, _1eb0095b1_Const _43022_x) {
	{
		
		if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa6442be:;
			{
				_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00b85a_ReadF64(&(*_self_)) * _1eb00c097_AsF64(&_43022_x))));
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa643ae8:;
			{
				if (_1eb00dc03_IsF64(&_43022_x)) {
					_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00c097_AsF64(&(*_self_)) * _1eb00b85a_ReadF64(&_43022_x))));
				} else {
					_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_1eb00ada9_ReadI64(&(*_self_)) * _1eb00babe_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa643b5e:;
			{
				if (_1eb00dc03_IsF64(&_43022_x)) {
					_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>((_1eb00c097_AsF64(&(*_self_)) * _1eb00b85a_ReadF64(&_43022_x))));
				} else {
					_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>((_1eb00b11d_ReadU64(&(*_self_)) * _1eb00bd33_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1aa643a82:;
			{
				return false;;
			}
		}
		_match_end_1aa643136:;
	};
	return true;;
}



inline jule::Bool _1eb01161d_Div(_1eb0095b1_Const* _self_, _1eb0095b1_Const _45822_x) {
	{
		
		if (_1eb00dc03_IsF64(&(*_self_))) {
			_case_begin_1aa6488bc:;
			{
				jule::F64 _46117_l = _1eb00c097_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1eb00b85a_ReadF64(&(*_self_)),_46117_l)));
			}
		}
		else if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa6481e6:;
			{
				jule::F64 _46717_l = _1eb00c097_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1eb00c097_AsF64(&(*_self_)),_46717_l)));
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa64825c:;
			{
				jule::F64 _47317_l = _1eb00c097_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1eb00cd12_SetF64(&(*_self_), static_cast<jule::F64>(jule::div(_1eb00c097_AsF64(&(*_self_)),_47317_l)));
			}
		}
		else {
			_case_begin_1aa648180:;
			{
				return false;;
			}
		}
		_match_end_1aa647734:;
	};
	return true;;
}



inline jule::Bool _1eb01192b_Mod(_1eb0095b1_Const* _self_, _1eb0095b1_Const _48722_x) {
	{
		
		if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa64ce21:;
			{
				jule::I64 _49017_l = _1eb00babe_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>(jule::mod(_1eb00ada9_ReadI64(&(*_self_)),_49017_l)));
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa64c75b:;
			{
				jule::U64 _49617_l = _1eb00bd33_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>(jule::mod(_1eb00b11d_ReadU64(&(*_self_)),_49617_l)));
			}
		}
		else {
			_case_begin_1aa64c6e5:;
			{
				return false;;
			}
		}
		_match_end_1aa64c64b:;
	};
	return true;;
}



inline jule::Bool _1eb011c39_BitwiseAnd(_1eb0095b1_Const* _self_, _1eb0095b1_Const _50929_x) {
	{
		
		if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa6510cd:;
			{
				_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_1eb00ada9_ReadI64(&(*_self_)) & _1eb00babe_AsI64(&_50929_x))));
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa650918:;
			{
				_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>((_1eb00b11d_ReadU64(&(*_self_)) & _1eb00bd33_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1aa6508a2:;
			{
				return false;;
			}
		}
		_match_end_1aa650808:;
	};
	return true;;
}



inline jule::Bool _1eb012047_BitwiseOr(_1eb0095b1_Const* _self_, _1eb0095b1_Const _52328_x) {
	{
		
		if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa6531e0:;
			{
				_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_1eb00ada9_ReadI64(&(*_self_)) | _1eb00babe_AsI64(&_52328_x))));
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa652a2a:;
			{
				_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>((_1eb00b11d_ReadU64(&(*_self_)) | _1eb00bd33_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1aa6529b4:;
			{
				return false;;
			}
		}
		_match_end_1aa6528e8:;
	};
	return true;;
}



inline jule::Bool _1eb012355_Xor(_1eb0095b1_Const* _self_, _1eb0095b1_Const _53722_x) {
	{
		
		if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa655302:;
			{
				_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_1eb00ada9_ReadI64(&(*_self_)) ^ _1eb00babe_AsI64(&_53722_x))));
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa654b3c:;
			{
				_1eb00c592_SetU64(&(*_self_), static_cast<jule::U64>((_1eb00b11d_ReadU64(&(*_self_)) ^ _1eb00bd33_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1aa654ac6:;
			{
				return false;;
			}
		}
		_match_end_1aa654a0a:;
	};
	return true;;
}



inline jule::Bool _1eb012663_Lshift(_1eb0095b1_Const* _self_, _1eb0095b1_Const _55125_x) {
	{
		
		if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa657414:;
			{
				jule::I64 _55417_l = _1eb00babe_AsI64(&(*_self_));;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1eb00bd33_AsU64(&_55125_x);;
					_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1eb012cd4_lshiftUnsig((*_self_),_55125_x);
				};
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa656c4e:;
			{
				_1eb012cd4_lshiftUnsig((*_self_),_55125_x);
			}
		}
		else {
			_case_begin_1aa656bd8:;
			{
				return false;;
			}
		}
		_match_end_1aa656b1c:;
	};
	return true;;
}



inline jule::Bool _1eb012971_Rshift(_1eb0095b1_Const* _self_, _1eb0095b1_Const _57125_x) {
	{
		
		if (_1eb00d252_IsI64(&(*_self_))) {
			_case_begin_1aa659cc9:;
			{
				jule::I64 _57417_l = _1eb00babe_AsI64(&(*_self_));;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1eb00bd33_AsU64(&_57125_x);;
					_1eb00c31c_SetI64(&(*_self_), static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1eb0130d1_rshiftUnsig((*_self_),_57125_x);
				};
			}
		}
		else if (_1eb00d4b6_IsU64(&(*_self_))) {
			_case_begin_1aa659614:;
			{
				_1eb0130d1_rshiftUnsig((*_self_),_57125_x);
			}
		}
		else {
			_case_begin_1aa65959d:;
			{
				return false;;
			}
		}
		_match_end_1aa6594d2:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb0095b1_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea32007b_FieldIns> _1ea2cb642_instance(jule::Ptr<_1ea2e3deb_Field> _self_) {
	return jule::new_ptr<_1ea32007b_FieldIns>(_1ea32007b_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea2e3deb_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea2eb541_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea320268_StructIns> _1ea2d0415_instance(jule::Ptr<_1ea31ed8e_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1ea320268_StructIns> _9917_ins = jule::new_ptr<_1ea320268_StructIns>(_1ea320268_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1ea32007b_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1d0550a13_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1d04e2455_new(), });;
	{
		auto &expr = _self_.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1aa8be9ab:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1d0550a13_Var>((*(_10621_s))));;
			}
			_iter_next_1aa8be9ab:;
			++it;
			goto _iter_begin_1aa8be9ab;
		}
		_iter_end_1aa8be9ab:;
	};
	{
		auto &expr = _self_.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1aa8c0acd:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2e3deb_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1ea2cb642_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1d05c5b76_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1aa8c0acd:;
			++it;
			goto _iter_begin_1aa8c0acd;
		}
		_iter_end_1aa8c0acd:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1eb023b80_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto &expr = _self_.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1aa8c3581:;
			if (it != expr.end()) {
				jule::Ptr<_1eb023b80_Fn> _12125_f = *it;
				{
					jule::Ptr<_1eb023b80_Fn> _12225_fins = jule::new_ptr<_1eb023b80_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1aa8c3581:;
				++it;
				goto _iter_begin_1aa8c3581;
			}
			_iter_end_1aa8c3581:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1ea320268_StructIns> _1ea2d116e_appendInstance(_1ea31ed8e_Struct* _self_, jule::Ptr<_1ea320268_StructIns>& _13338_ins) {
	if ((((*_self_)._field_Generics.len() == 0LL) && ((*_self_)._field_Instances.len() == 1LL))) {
		return (*_self_)._field_Instances[0LL];;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1aa8c57d6:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _13921_ains = *it;
			{
				if (_1ea2e9077_Same(_13921_ains.ptr(), _13338_ins)) {
					return _13921_ains;;
				};
			}
			_iter_next_1aa8c57d6:;
			++it;
			goto _iter_begin_1aa8c57d6;
		}
		_iter_end_1aa8c57d6:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_13338_ins);;
	return nullptr;;
}



inline jule::Ptr<_1eb023b80_Fn> _1ea2d42c6_FindMethod(_1ea31ed8e_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aa8c6cc1:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1aa8c6cc1:;
			++it;
			goto _iter_begin_1aa8c6cc1;
		}
		_iter_end_1aa8c6cc1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0550a13_Var> _1ea2d3726_FindStatic(_1ea31ed8e_Struct* _self_, jule::Str _16229_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1aa8c7e6a:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1aa8c7e6a:;
			++it;
			goto _iter_begin_1aa8c7e6a;
		}
		_iter_end_1aa8c7e6a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ea2e3deb_Field> _1ea2d5b02_FindField(_1ea31ed8e_Struct* _self_, jule::Str _17328_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1aa8c83dd:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2e3deb_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1aa8c83dd:;
			++it;
			goto _iter_begin_1aa8c83dd;
		}
		_iter_end_1aa8c83dd:;
	};
	return nullptr;;
}



inline jule::Bool _1ea2d4ded_IsImplements(_1ea31ed8e_Struct* _self_, jule::Ptr<_1d04ed4a5_Trait> _18327_t) {
	{
		auto &expr = (*_self_)._field_Implements;
		auto it = expr.begin();
		_iter_begin_1aa8c9312:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> &_18416_it = *it;
			{
				if ((_18327_t == _18416_it)) {
					return true;;
				};
			}
			_iter_next_1aa8c9312:;
			++it;
			goto _iter_begin_1aa8c9312;
		}
		_iter_end_1aa8c9312:;
	};
	return false;;
}



inline jule::Bool _1ea2d8dbe_IsDerives(_1ea31ed8e_Struct* _self_, jule::Str _19324_ident) {
	{
		auto &expr = (*_self_)._field_Directives;
		auto it = expr.begin();
		_iter_begin_1aa8ca28b:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> &_19416_d = *it;
			{
				if ((_19416_d.get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if (((_19416_d.get()._field_Args.len() == 1LL) && (_19416_d.get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1aa8ca28b:;
			++it;
			goto _iter_begin_1aa8ca28b;
		}
		_iter_end_1aa8ca28b:;
	};
	return false;;
}



inline jule::Bool _1ea2d9584_IsUses(_1ea31ed8e_Struct* _self_, jule::Ptr<_1ea31ed8e_Struct> _20521_s) {
	{
		auto &expr = (*_self_)._field_Uses;
		auto it = expr.begin();
		_iter_begin_1aa8cc9a8:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> &_20616_u = *it;
			{
				while ((_20521_s == _20616_u)) {
					{
						return true;;
					}
				_iter_next_1aa8cd217:;
				}
				_iter_end_1aa8cd217:;;
			}
			_iter_next_1aa8cc9a8:;
			++it;
			goto _iter_begin_1aa8cc9a8;
		}
		_iter_end_1aa8cc9a8:;
	};
	return false;;
}



inline jule::Bool _1ea2dea51_HasRefAccessible(_1ea31ed8e_Struct* _self_) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aa8cd3d2:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> &_21616_m = *it;
			{
				if (((_21616_m.get()._field_Params.len() > 0LL) && _1eb022bd4_IsRef(_21616_m.get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1aa8cd3d2:;
			++it;
			goto _iter_begin_1aa8cd3d2;
		}
		_iter_end_1aa8cd3d2:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea31ed8e_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea32007b_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb0153d0_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb015897_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb015c4e_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01614a_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb016502_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb016810_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb016d60_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb017712_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb017ab9_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01803c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb0183e4_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01879b_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb018c1e_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01925d_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01979c_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01a14e_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01a4e5_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01a8ad_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01ab99_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01b20a_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01b507_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01b8d1_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01bcbb_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01c0da_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01c4c5_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01c8b0_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01cd66_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01d31c_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01d707_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01da26_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01dd45_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01e4e9_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01e85c_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb01ec47_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb020044_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb020330_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb02061b_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb020929_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb020ce2_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb0210cd_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb021b6c_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1eb025962_ParamIns> _1eb02270b_instance(jule::Ptr<_1eb022343_Param> _self_) {
	return jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1eb022970_IsSelf(_1eb022343_Param* _self_) {
	return (((*_self_)._field_Ident == jule::Str("&self", 5)) || ((*_self_)._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1eb022bd4_IsRef(_1eb022343_Param* _self_) {
	return ((!((*_self_)._field_Ident.empty())) && ((*_self_)._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb022343_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1eb0240e2_IsVoid(_1eb023b80_Fn* _self_) {
	return ((*_self_)._field_Result == nullptr);;
}



inline jule::Bool _1eb024356_IsMethod(_1eb023b80_Fn* _self_) {
	return ((*_self_)._field_Owner != nullptr);;
}



inline jule::Bool _1eb0245ba_IsEntryPoint(_1eb023b80_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _1eb02482e_IsInit(_1eb023b80_Fn* _self_) {
	return ((*_self_)._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _1eb024a93_IsAnon(_1eb023b80_Fn* _self_) {
	return _212a0ece7_IsAnonIdent((*_self_)._field_Ident);;
}



inline jule::Bool _1eb024d07_AnyVar(_1eb023b80_Fn* _self_) {
	return (((*_self_)._field_Result != nullptr) && ((*_self_)._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1eb026831_FnIns> _1eb02506b_instanceForce(jule::Ptr<_1eb023b80_Fn> _self_) {
	jule::Ptr<_1eb026831_FnIns> _10017_ins = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1d050b1b6_Scope>(), ._field_Refers=static__1d04e2455_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1eb025962_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto &expr = _self_.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aa8e2380:;
		if (it != expr.end()) {
			jule::Ptr<_1eb022343_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1eb02270b_instance(_10721_p));;
			}
			_iter_next_1aa8e2380:;
			++it;
			goto _iter_begin_1aa8e2380;
		}
		_iter_end_1aa8e2380:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1eb026831_FnIns> _1eb0252d0_instance(jule::Ptr<_1eb023b80_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1eb02506b_instanceForce(_self_);;
}



inline jule::Ptr<_1eb026831_FnIns> _1eb0255aa_appendInstance(_1eb023b80_Fn* _self_, jule::Ptr<_1eb026831_FnIns>& _12838_ins) {
	if (((*_self_)._field_Generics.len() == 0LL)) {
		if (((*_self_)._field_Instances.len() == 1LL)) {
			return (*_self_)._field_Instances[0LL];;
		};
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	if (((*_self_)._field_Instances.len() == 0LL)) {
		(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Instances;
		auto it = expr.begin();
		_iter_begin_1aa8e6d35:;
		if (it != expr.end()) {
			jule::Ptr<_1eb026831_FnIns> _14421_ains = *it;
			{
				if (_1eb028239_Same(_14421_ains.ptr(), _12838_ins)) {
					return _14421_ains;;
				};
			}
			_iter_next_1aa8e6d35:;
			++it;
			goto _iter_begin_1aa8e6d35;
		}
		_iter_end_1aa8e6d35:;
	};
	(*_self_)._field_Instances = jule::alloc_for_append((*_self_)._field_Instances,1);(*_self_)._field_Instances.__push(_12838_ins);;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb023b80_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1eb025d3b_Str(_1eb025962_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*_self_)._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1eb022970_IsSelf((*_self_)._field_Decl.ptr())) {
		if (_1eb022bd4_IsRef((*_self_)._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*_self_)._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*_self_)._field_Kind != nullptr)) {
		_16617_s+=_1d05c4900_Str((*_self_)._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb025962_ParamIns _Src) {
	_Stream << _1eb025d3b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1eb026b61_Str(_1eb026831_FnIns* _self_) {
	;
	return _1eb028547_GetKindStr(&(*_self_), false);;
}



inline jule::Bool _1eb026e6e_Equal(jule::Ptr<_1eb026831_FnIns> _self_, jule::Ptr<_1d05c4504_TypeKind> _21721_other) {
	jule::Ptr<_1eb026831_FnIns> _21813_f = _1d05c7a79_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1eb0273d1_EqualFn(_self_, _21813_f);;
}



inline jule::Bool _1eb0273d1_EqualFn(jule::Ptr<_1eb026831_FnIns> _self_, jule::Ptr<_1eb026831_FnIns>& _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != _22824_f.get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != _22824_f.get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1eb0240e2_IsVoid(_self_.get()._field_Decl.ptr()) != _1eb0240e2_IsVoid(_22824_f.get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1eb025962_ParamIns>,jule::Ptr<_1eb025962_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1eb025962_ParamIns>,jule::Ptr<_1eb025962_ParamIns>)>([=](jule::Ptr<_1eb025962_ParamIns> _23830_p1, jule::Ptr<_1eb025962_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1eb022970_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1eb022970_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1eb022bd4_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1eb022bd4_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1d05c4c0d_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if ((_22824_f.get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i],_22824_f.get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1aa904b56:;
	}
	_iter_end_1aa904b56:;;
	if ((!(_1eb0240e2_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1d05c4c0d_Equal(_self_.get()._field_Result, _22824_f.get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1eb0276de_equalTrait(jule::Ptr<_1eb026831_FnIns> _self_, jule::Ptr<_1eb026831_FnIns>& _28727_other) {
	if ((!(_1eb0273d1_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != _28727_other.get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _1eb027953_Types(_1eb026831_FnIns* _self_) {
	{
		
		if (((*_self_)._field_Result == nullptr)) {
			_case_begin_1aa908187:;
			{
				return nullptr;;
			}
		}
		else if ((_1d05c852a_Tup((*_self_)._field_Result.ptr()) == nullptr)) {
			_case_begin_1aa9081ed:;
			{
				return jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>::make({(*_self_)._field_Result});;
			}
		}
		else {
			_case_begin_1aa908121:;
			{
				return _1d05c852a_Tup((*_self_)._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1aa908055:;
	};
}



inline jule::Bool _1eb027bb7_IsBuiltin(_1eb026831_FnIns* _self_) {
	return ((*_self_)._field_caller != nullptr);;
}



inline jule::Bool _1eb027e2b_IsAnon(_1eb026831_FnIns* _self_) {
	return ((*_self_)._field_Anon || (((*_self_)._field_Decl != nullptr) && _1eb024a93_IsAnon((*_self_)._field_Decl.ptr())));;
}



inline jule::Bool _1eb028239_Same(_1eb026831_FnIns* _self_, jule::Ptr<_1eb026831_FnIns> _32419_f) {
	if ((((*_self_)._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aa90ba5e:;
		if (it != expr.end()) {
			jule::I64 _32913_i = it - expr.begin();
			jule::Ptr<_1d05c2cc7_InsGeneric> &_32916_g = *it;
			{
				if ((!(_1d05c4c0d_Equal(_32916_g.get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1aa90ba5e:;
			++it;
			_32913_i++;
			goto _iter_begin_1aa90ba5e;
		}
		_iter_end_1aa90ba5e:;
	};
	return true;;
}



inline jule::Str _1eb028547_GetKindStr(_1eb026831_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*_self_)._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*_self_)._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*_self_)._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*_self_)._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto &expr = (*_self_)._field_Params;
			auto it = expr.begin();
			_iter_begin_1aa910898:;
			if (it != expr.end()) {
				jule::Ptr<_1eb025962_ParamIns> &_35620_p = *it;
				{
					_34117_s+=_1eb025d3b_Str(_35620_p.ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1aa910898:;
				++it;
				goto _iter_begin_1aa910898;
			}
			_iter_end_1aa910898:;
		};
		(_34117_s).mut_slice(0LL,(_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*_self_)._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1eb0240e2_IsVoid((*_self_)._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1d05c4900_Str((*_self_)._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1eb026831_FnIns _Src) {
	_Stream << _1eb026b61_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d04e218b_ReferenceStack> static__1d04e2455_new(void) {
	return jule::new_ptr<_1d04e218b_ReferenceStack>(_1d04e218b_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1d04e27da_Len(_1d04e218b_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*_self_)._field_buffer.len());;
}



inline jule::Any _1d04e2ae8_At(_1d04e218b_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*_self_)._field_buffer[_6821_i];;
}



inline void _1d04e2d6d_Push(_1d04e218b_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*_self_)._field_buffer = jule::alloc_for_append((*_self_)._field_buffer,1);(*_self_)._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1ab0077db_Exist(_1d04e218b_ReferenceStack* _self_, jule::Ptr<_1eb026831_FnIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab008b0b:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type9_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab008b0b:;
			++it;
			goto _iter_begin_1ab008b0b;
		}
		_iter_end_1ab008b0b:;
	};
	return false;;
}

inline jule::Bool _1ab01b79a_Exist(_1d04e218b_ReferenceStack* _self_, jule::Ptr<_1d0550a13_Var> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab01ca76:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type10_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab01ca76:;
			++it;
			goto _iter_begin_1ab01ca76;
		}
		_iter_end_1ab01ca76:;
	};
	return false;;
}

inline jule::Bool _1aa18be6b_Exist(_1d04e218b_ReferenceStack* _self_, jule::Ptr<_1ea320268_StructIns> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1aa18d2d0:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type11_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1aa18d2d0:;
			++it;
			goto _iter_begin_1aa18d2d0;
		}
		_iter_end_1aa18d2d0:;
	};
	return false;;
}

inline jule::Bool _1ab2d73d4_Exist(_1d04e218b_ReferenceStack* _self_, jule::Ptr<_1d04ed4a5_Trait> _7823_t) {
	{
		auto &expr = (*_self_)._field_buffer;
		auto it = expr.begin();
		_iter_begin_1ab2d8638:;
		if (it != expr.end()) {
			jule::Any &_7916_ref = *it;
			{
				if ((__jule_any_type12_compare(_7916_ref, _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ab2d8638:;
			++it;
			goto _iter_begin_1ab2d8638;
		}
		_iter_end_1ab2d8638:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d04e218b_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d04e3533_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d04e79cc_symbolBuilder> _1d04e7e83_getRoot(jule::Ptr<_1d04e79cc_symbolBuilder> _self_) {
	jule::Ptr<_1d04e79cc_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1aa92841b:;
	}
	_iter_end_1aa92841b:;;
	return _31617_root;;
}



inline void _1d04e834b_pushErr(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_212a0c2ab_Token>& _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d05310ed_compilerErr(_32327_token,true,_32342_fmt,_32355_args));;
}



inline void _1d04e8714_pushErrText(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_212a0c2ab_Token>& _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d05310ed_compilerErr(_32731_token,false,_32746_fmt,_32759_args));;
}



inline void _1d04e8a33_pushSuggestion(_1d04e79cc_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1d0532583_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_33233_fmt,_33246_args);
	};
}



inline jule::Bool _1d04e8dda_checkCppUseDeclPath(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _22dcc72c4_Ext(_33655_path);;
	if (((!(_22ca25111_IsValidHeaderExt(_33713_ext))) && (!(_22ca253a8_IsValidCppExt(_33713_ext))))) {
		_1d04e834b_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22c0b62c9_Status> _34413_info = ({
		auto except = static__22b1c7e14_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1d04e834b_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type7)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_22c0b62c9_Status>(nullptr);});
	});;
	if (_22b1c84ca_IsDir(_34413_info.ptr())) {
		_1d04e834b_pushErr(&(*_self_), _33639_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_33639_decl.get()._field_LinkPath, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e91b5_buildCppHeaderImport(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _35644_decl) {
	jule::Str _35717_path = _35644_decl.get()._field_LinkPath;;
	if ((!(_22ca24d58_IsStdHeaderPath(_35644_decl.get()._field_LinkPath)))) {
		_35717_path=_22dcc702c_Join(jule::Slice<jule::Str>::make({_212a1303c_Dir(_35644_decl.get()._field_Token.get()._field_File.ptr()),_35644_decl.get()._field_LinkPath}));
		jule::Bool _36121_ok = _1d04e8dda_checkCppUseDeclPath(&(*_self_), _35644_decl,_35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22dcc756b_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_1d04e834b_pushErr(&(*_self_), _35644_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_35644_decl.get()._field_LinkPath, &__jule_any_type7)}));
		};
	};
	return jule::new_ptr<_1d05298bb_ImportInfo>(_1d05298bb_ImportInfo{._field_Token=_35644_decl.get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=_35644_decl.get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e94c3_buildStdImport(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _38438_decl) {
	jule::Str _38517_path = _38438_decl.get()._field_LinkPath.slice(5LL);;
	_38517_path=_22dcc34ac_Replace(_38517_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38517_path=_22dcc702c_Join(jule::Slice<jule::Str>::make({_21271b5e7_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22dcc756b_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_1d04e834b_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_22c0b62c9_Status> _39513_info = ({
		auto except = static__22b1c7e14_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1d04e834b_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type7)}));
			return nullptr;;
		} jule::Ptr<_22c0b62c9_Status>(nullptr);});
	});;
	if ((!(_22b1c84ca_IsDir(_39513_info.ptr())))) {
		_1d04e834b_pushErr(&(*_self_), _38438_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_38438_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_22dcb8a24_FindLast(_38438_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = _38438_decl.get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1d05298bb_ImportInfo>(_1d05298bb_ImportInfo{._field_Token=_38438_decl.get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=_38438_decl.get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=_38438_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=_38438_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1d052c825_Package>(_1d052c825_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e97d1_buildIdentImport(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1ea31ad57_UseDecl>& _42341_decl) {
	jule::Str _42413_modPath = _1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525db2_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1d04e834b_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("no module file found in current directory or any parent directory", 65),jule::Slice<jule::Any>());
		_1d04e8a33_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = _42341_decl.get()._field_LinkPath;;
	_43117_path=_22dcc34ac_Replace(_43117_path,jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_43117_path=_22dcc702c_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22dcc756b_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_1d04e834b_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_22c0b62c9_Status> _44213_info = ({
		auto except = static__22b1c7e14_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1d04e834b_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type7)}));
			return nullptr;;
		} jule::Ptr<_22c0b62c9_Status>(nullptr);});
	});;
	if ((!(_22b1c84ca_IsDir(_44213_info.ptr())))) {
		_1d04e834b_pushErr(_self_.ptr(), _42341_decl.get()._field_Token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>::make({jule::Any(_42341_decl.get()._field_LinkPath, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_22dcb8a24_FindLast(_42341_decl.get()._field_LinkPath,jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = _42341_decl.get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1d05298bb_ImportInfo>(_1d05298bb_ImportInfo{._field_Token=_42341_decl.get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=_42341_decl.get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=_42341_decl.get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=_42341_decl.get()._field_Full, ._field_Package=jule::new_ptr<_1d052c825_Package>(_1d052c825_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d04e9ade_buildImport(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1ea31ad57_UseDecl>& _47036_decl) {
	{
		
		if (_47036_decl.get()._field_CppLinked) {
			_case_begin_1aa940db2:;
			{
				return _1d04e91b5_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if (_47036_decl.get()._field_Std) {
			_case_begin_1aa941115:;
			{
				return _1d04e94c3_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1aa9406b9:;
			{
				return _1d04e97d1_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1aa9405ed:;
	};
}



inline jule::Bool _1d04e9dec_checkDuplicateUseDecl(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05298bb_ImportInfo> _48313_lpkg = _1d0594073_SelectPackage((*_self_)._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>([=](jule::Ptr<_1d05298bb_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return (_48141_pkg.get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1d04e834b_pushErr(&(*_self_), _48141_pkg.get()._field_Token,jule::Str("use declaration duplication: @ is already used above", 52),jule::Slice<jule::Any>::make({jule::Any(_48141_pkg.get()._field_LinkPath, &__jule_any_type7)}));
	_1d04e8a33_pushSuggestion(&(*_self_), jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1d04ea21b_implImportSelections(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _49544_imp, jule::Ptr<_1ea31ad57_UseDecl>& _49567_decl) {
	_49544_imp.get()._field_Selected=_49567_decl.get()._field_Selected;
	{
		auto &expr = _49544_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1aa944aa8:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> _49716_item = *it;
			{
				{
					auto &expr = _49544_imp.get()._field_Selected;
					auto it = expr.begin();
					_iter_begin_1aa9452e5:;
					if (it != expr.end()) {
						jule::Ptr<_212a0c2ab_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1aa9452e5;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1d04e834b_pushErr(&(*_self_), _49716_item,jule::Str("duplicated selection: @ is already selected", 43),jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type7)}));
								_1d04e8a33_pushSuggestion(&(*_self_), jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>());
								goto _iter_end_1aa9452e5;
							};
						}
						_iter_next_1aa9452e5:;
						++it;
						goto _iter_begin_1aa9452e5;
					}
					_iter_end_1aa9452e5:;
				};
			}
			_iter_next_1aa944aa8:;
			++it;
			goto _iter_begin_1aa944aa8;
		}
		_iter_end_1aa944aa8:;
	};
}



inline jule::Str _1d04ea529_getAsLinkPath(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_22dc943e5_HasPrefix(_51037_path,_21271b5e7_PathStdlib)) {
		(_51037_path).mut_slice(_21271b5e7_PathStdlib.len());;
		return (jule::Str("std", 3) + _22dcc34ac_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22dcc756b_Abs(_1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525db2_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _22dcc34ac_Replace(_51037_path,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);;
}



inline void _1d04ea8e2_pushCycleError(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1d04e79cc_symbolBuilder>& _52435_sb, jule::Str _52455_path, jule::Str& _52471_message) {
	;
	jule::Str _52613_refersTo = _22ca32409_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_1d04ea529_getAsLinkPath(_self_, _212a1303c_Dir(_52435_sb.get()._field_table.get()._field_File.ptr())), &__jule_any_type7),jule::Any(_1d04ea529_getAsLinkPath(_self_, _52455_path), &__jule_any_type7)}));;
	(_52471_message).buffer.insert(0, (((_22dc94ca8_Repeat(jule::Str(" ", 1),4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1d04eacaa_pushCrossCycleError(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1d04e79cc_symbolBuilder>& _53340_target, jule::Ptr<_1d05298bb_ImportInfo>& _53365_imp, jule::Ptr<_212a0c2ab_Token>& _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1d04ea8e2_pushCycleError(_self_, _self_,_53365_imp.get()._field_Path,_53417_message);
	jule::Ptr<_1d04e79cc_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1d04e79cc_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1d04ea8e2_pushCycleError(_self_, _53917_old.get()._field_owner,_212a1303c_Dir(_53917_old.get()._field_table.get()._field_File.ptr()),_53417_message);
			if ((_53817_owner.get()._field_owner == _53340_target)) {
				_1d04ea8e2_pushCycleError(_self_, _53340_target,_212a1303c_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()),_53417_message);
				goto _iter_end_1aa94cc9d;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1aa94cc9d:;
	}
	_iter_end_1aa94cc9d:;;
	_1d04e834b_pushErr(_self_.ptr(), _53384_errorToken,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type7)}));
}



inline jule::Bool _1d04eb162_checkImportCycles(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1d05298bb_ImportInfo> _55637_imp, jule::Ptr<_1ea31ad57_UseDecl>& _55656_decl) {
	if ((_55637_imp.get()._field_Path == _212a1303c_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1d04e834b_pushErr(_self_.ptr(), _55656_decl.get()._field_Token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>::make({jule::Any(_1d04ea529_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type7)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_212a1303c_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1d04eacaa_pushCrossCycleError(_self_, _self_.get()._field_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	jule::Ptr<_1d04e79cc_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_212a1303c_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1d04eacaa_pushCrossCycleError(_self_, _57117_owner,_55637_imp,_55656_decl.get()._field_Token);
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1d04eb54c_checkPackageAccessibility(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _59245_decl, jule::Str& _59262_mod, jule::Str& _59273_path) {
	if (((_1d0526c4d_Importer_mptr_data[((*_self_)._field_importer).type_offset]._1d0525db2_GetModPath((*_self_)._field_importer) != _59262_mod) && _22dcc2214_Contains(_59273_path,jule::Str("internal", 8)))) {
		_1d04e834b_pushErr(&(*_self_), _59245_decl.get()._field_Token,jule::Str("you cannot access to internal packages", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d04eb915_importPackage(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1d05298bb_ImportInfo>& _59838_imp, jule::Ptr<_1ea31ad57_UseDecl>& _59861_decl) {
	jule::Bool __jule_func_result = false;
	if (_59838_imp.get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05298bb_ImportInfo> _60317_port = _1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d05264cd_GetImport(_self_.get()._field_importer, _59838_imp.get()._field_Path);;
	if ((_60317_port != nullptr)) {
		_59838_imp.get()._field_Package=_60317_port.get()._field_Package;
		_59838_imp.get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525db2_GetModPath(_self_.get()._field_importer);;
		_1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525b5e_SetModPath(_self_.get()._field_importer, _1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d05261c0_ModById(_self_.get()._field_importer, _59838_imp.get()._field_ModId));
		_1d04eb54c_checkPackageAccessibility(_self_.ptr(), _59861_decl,_60817_oldMod,_60317_port.get()._field_Path);
		_1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525b5e_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1d04eb162_checkImportCycles(_self_, _59838_imp,_59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525db2_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525b5e_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if (_59838_imp.get()._field_Std) {
			_1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0525b5e_SetModPath(_self_.get()._field_importer, _21271b5e7_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1ea2be217_Ast>> _62222_asts;;
		jule::Slice<_22ca31eb9_Log> _62232_errors;;
		({
			__jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0526885_ImportPackage(_self_.get()._field_importer, _59838_imp.get()._field_Path,(!(_59838_imp.get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1d04eb54c_checkPackageAccessibility(_self_.ptr(), _59861_decl,_61717_oldMod,_59838_imp.get()._field_Path);
		{
			auto &expr = _62222_asts;
			auto it = expr.begin();
			_iter_begin_1aa962675:;
			if (it != expr.end()) {
				jule::Ptr<_1ea2be217_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1d0593748_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_1d0593748_SymbolTable__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1d05e1158_buildSymbols(_63025_ast,_self_.get()._field_importer,_self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					_59838_imp.get()._field_Package.get()._field_Files = jule::alloc_for_append(_59838_imp.get()._field_Package.get()._field_Files,1);_59838_imp.get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1aa962675:;
				++it;
				goto _iter_begin_1aa962675;
			}
			_iter_end_1aa962675:;
		};
	};
	_1d04ea21b_implImportSelections(_self_.ptr(), _59838_imp,_59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d04ebc23_importUseDecl(jule::Ptr<_1d04e79cc_symbolBuilder> _self_, jule::Ptr<_1ea31ad57_UseDecl>& _64538_decl) {
	jule::Ptr<_1d05298bb_ImportInfo> _64617_imp = _1d04e9ade_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _1d04e9dec_checkDuplicateUseDecl(_self_.ptr(), _64617_imp);;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_1d04eb915_importPackage(_self_, _64617_imp,_64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_1d0526c4d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d0526b0a_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _1d04ebdee_importUseDecls(jule::Ptr<_1d04e79cc_symbolBuilder> _self_) {
	{
		auto &expr = _self_.get()._field_ast.get()._field_UseDecls;
		auto it = expr.begin();
		_iter_begin_1aa966b52:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ad57_UseDecl> _66721_decl = *it;
			{
				_1d04ebc23_importUseDecl(_self_, _66721_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1aa966b52;
				};
			}
			_iter_next_1aa966b52:;
			++it;
			goto _iter_begin_1aa966b52;
		}
		_iter_end_1aa966b52:;
	};
}



inline void _1d04ec174_appendNode(_1d04e79cc_symbolBuilder* _self_, _1ea2c0009_Node& _67634_node) {
	{
		auto &_match_expr{ _67634_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1aa96734a:;
			{
				(*_self_)._field_table.get()._field_Impls = jule::alloc_for_append((*_self_)._field_table.get()._field_Impls,1);(*_self_)._field_table.get()._field_Impls.__push(_1d04e747c_buildImpl(_67634_node._field_Data.cast_ptr<_1ea31e5ca_Impl>(&__jule_any_type13)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aa96824c:;
			{
				jule::Ptr<_1d05c3811_TypeAlias> _68121_ta = _1d04e3e18_buildTypeAlias(_67634_node._field_Data.cast_ptr<_1ea31996b_TypeAliasDecl>(&__jule_any_type14));;
				(*_self_)._field_table.get()._field_TypeAliases = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeAliases,1);(*_self_)._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1aa9682b3:;
			{
				jule::Ptr<_1ea31ed8e_Struct> _68421_srct = _1d04e4776_buildStruct(_67634_node._field_Data.cast_ptr<_1ea31d8b5_StructDecl>(&__jule_any_type15));;
				(*_self_)._field_table.get()._field_Structs = jule::alloc_for_append((*_self_)._field_table.get()._field_Structs,1);(*_self_)._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aa968329:;
			{
				jule::Ptr<_1eb023b80_Fn> _68721_f = _1d04e53d1_buildFn(_67634_node._field_Data.cast_ptr<_1ea31512b_FnDecl>(&__jule_any_type16));;
				(*_self_)._field_table.get()._field_Funcs = jule::alloc_for_append((*_self_)._field_table.get()._field_Funcs,1);(*_self_)._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1aa968a99:;
			{
				jule::Ptr<_1d04ed4a5_Trait> _69021_t = _1d04e5920_buildTrait(_67634_node._field_Data.cast_ptr<_1ea31dec0_TraitDecl>(&__jule_any_type17));;
				(*_self_)._field_table.get()._field_Traits = jule::alloc_for_append((*_self_)._field_table.get()._field_Traits,1);(*_self_)._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1aa968b10:;
			{
				jule::Ptr<_1d0550a13_Var> _69321_v = _1d04e6e3d_buildVar(_67634_node._field_Data.cast_ptr<_1ea31610a_VarDecl>(&__jule_any_type18));;
				(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1aa968b76:;
			{
				jule::Ptr<_1d05005ea_Enum> _69621_e = _1d04e6206_buildEnum(_67634_node._field_Data.cast_ptr<_1ea31bd03_EnumDecl>(&__jule_any_type19));;
				(*_self_)._field_table.get()._field_Enums = jule::alloc_for_append((*_self_)._field_table.get()._field_Enums,1);(*_self_)._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1aa968bdc:;
			{
				jule::Ptr<_1d0501be5_TypeEnum> _69921_e = _1d04e6b96_buildTypeEnum(_67634_node._field_Data.cast_ptr<_1ea31ce14_TypeEnumDecl>(&__jule_any_type20));;
				(*_self_)._field_table.get()._field_TypeEnums = jule::alloc_for_append((*_self_)._field_table.get()._field_TypeEnums,1);(*_self_)._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1aa96813c:;
			{
				_1d04e834b_pushErr(&(*_self_), _67634_node._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa9680d7:;
	};
}



inline void _1d04ec350_appendNodes(_1d04e79cc_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_Nodes;
		auto it = expr.begin();
		_iter_begin_1aa972289:;
		if (it != expr.end()) {
			_1ea2c0009_Node _70721_node = *it;
			{
				_1d04ec174_appendNode(&(*_self_), _70721_node);
			}
			_iter_next_1aa972289:;
			++it;
			goto _iter_begin_1aa972289;
		}
		_iter_end_1aa972289:;
	};
}



inline void _1d04ec5c5_pushDirectivePass(_1d04e79cc_symbolBuilder* _self_, jule::Ptr<_1ea2c0405_Directive>& _71241_d) {
	if ((_71241_d.get()._field_Args.len() == 0LL)) {
		_1d04e834b_pushErr(&(*_self_), _71241_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_71241_d.get()._field_Args.len() > 1LL)) {
		jule::Ptr<_212a0c2ab_Token> _71717_arg = _71241_d.get()._field_Args[1LL];;
		_1d04e834b_pushErr(&(*_self_), _71717_arg,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_212a0c2ab_Token> _72113_arg = _71241_d.get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1d04e834b_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_1d04e834b_pushErr(&(*_self_), _72113_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	(*_self_)._field_table.get()._field_Passes = jule::alloc_for_append((*_self_)._field_table.get()._field_Passes,1);(*_self_)._field_table.get()._field_Passes.__push(_1d04e3533_Pass{._field_Token=_71241_d.get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL,(_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1d04ec7a1_appendTopDirectives(_1d04e79cc_symbolBuilder* _self_) {
	{
		auto &expr = (*_self_)._field_ast.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1aa97737c:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1aa97803c:;
						{
							_1d04ec5c5_pushDirectivePass(&(*_self_), _73921_d);
						}
					}
					_match_end_1aa977ea4:;
				};
			}
			_iter_next_1aa97737c:;
			++it;
			goto _iter_begin_1aa97737c;
		}
		_iter_end_1aa97737c:;
	};
}



inline void _1d04ec97c_build(jule::Ptr<_1d04e79cc_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1d0593748_SymbolTable>(_1d0593748_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1d04ec7a1_appendTopDirectives(_self_.ptr());
	_1d04ebdee_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1d04ec350_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d04e79cc_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d04ed8a1_Str(_1d04ed4a5_Trait* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1d04edbae_Equal(jule::Ptr<_1d04ed4a5_Trait> _self_, jule::Ptr<_1d05c4504_TypeKind> _2521_other) {
	jule::Ptr<_1d04ed4a5_Trait> _2613_trt = _1d05c8052_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _1d04ee022_IsBuiltin(_1d04ed4a5_Trait* _self_) {
	return ((*_self_)._field_Token == nullptr);;
}



inline jule::Ptr<_1eb023b80_Fn> _1d04ee330_FindMethod(_1d04ed4a5_Trait* _self_, jule::Str _3929_ident) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aa97bd54:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1aa97bd54:;
			++it;
			goto _iter_begin_1aa97bd54;
		}
		_iter_end_1aa97bd54:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d04ed4a5_Trait _Src) {
	_Stream << _1d04ed8a1_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1d04eeee0_AutoExpr(_1d04eeb05_EnumItem* _self_) {
	return ((*_self_)._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d04eeb05_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d050095d_Str(_1d05005ea_Enum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1d0500c6b_Equal(jule::Ptr<_1d05005ea_Enum> _self_, jule::Ptr<_1d05c4504_TypeKind> _3821_other) {
	jule::Ptr<_1d05005ea_Enum> _3913_enm = _1d05c70c8_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1d04eeb05_EnumItem> _1d05011ab_FindItem(_1d05005ea_Enum* _self_, jule::Str _4727_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1aa97e50a:;
		if (it != expr.end()) {
			jule::Ptr<_1d04eeb05_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1aa97e50a:;
			++it;
			goto _iter_begin_1aa97e50a;
		}
		_iter_end_1aa97e50a:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05005ea_Enum _Src) {
	_Stream << _1d050095d_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050162e_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d0502025_Str(_1d0501be5_TypeEnum* _self_) {
	return (*_self_)._field_Ident;;
}



inline jule::Bool _1d0502333_Equal(jule::Ptr<_1d0501be5_TypeEnum> _self_, jule::Ptr<_1d05c4504_TypeKind> _8021_other) {
	jule::Ptr<_1d0501be5_TypeEnum> _8113_tenm = _1d05c733c_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1d050162e_TypeEnumItem> _1d050272e_FindItem(_1d0501be5_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto &expr = (*_self_)._field_Items;
		auto it = expr.begin();
		_iter_begin_1aa98161c:;
		if (it != expr.end()) {
			jule::Ptr<_1d050162e_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1aa98161c:;
			++it;
			goto _iter_begin_1aa98161c;
		}
		_iter_end_1aa98161c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0501be5_TypeEnum _Src) {
	_Stream << _1d0502025_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1d0532a17_Sema>&,jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&)> _1d0504654_readyFn(jule::Ptr<_1d0504225_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1d0532a17_Sema>&,jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&)>([=](jule::Ptr<_1d0532a17_Sema>& _6321_sema, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>& _6339_generics) mutable -> jule::Bool {
		{
			auto &expr = _self_.get()._field_genericsD;
			auto it = expr.begin();
			_iter_begin_1aa98da7a:;
			if (it != expr.end()) {
				jule::I64 _6418_i = it - expr.begin();
				jule::Ptr<_1ea310995_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1d05c2cc7_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1aa98da7a;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto &expr = _6425_g.get()._field_Constraint.get()._field_Mask;
						auto it = expr.begin();
						_iter_begin_1aa991330:;
						if (it != expr.end()) {
							jule::Ptr<_1ea30369c_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = _6321_sema.get()._field_errors.len();;
								jule::Ptr<_1d05c4504_TypeKind> _7229_kind = _1d0539d1b_buildTypeWithRefers(_6321_sema, _7029_mask,jule::Trait<_1d05e0476_Lookup>(_6321_sema, 3),_6339_generics,nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type21) {
											_case_begin_1aa992d8c:;
											{
												jule::Ptr<_1ea303c63_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1ea303c63_IdentTypeDecl>(&__jule_any_type21);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1d05057dc_isBuiltinConstraint(_7637_itd.get()._field_Ident))) {
													_7229_kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													_6321_sema.get()._field_errors=_6321_sema.get()._field_errors.slice(0LL,_7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1aa992d04:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1aa991330:;
							++it;
							goto _iter_begin_1aa991330;
						}
						_iter_end_1aa991330:;
					};
				}
				_iter_next_1aa98da7a:;
				++it;
				_6418_i++;
				goto _iter_begin_1aa98da7a;
			}
			_iter_end_1aa98da7a:;
		};
		return true;;
	});;
}



inline jule::Bool _1d05048b8_readyFi(jule::Ptr<_1d0504225_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1d053e3e7_fnEnvironment(_self_.get()._field_s, _self_.get()._field_fi,_1d0504654_readyFn(_self_)));;
}



inline jule::Bool _1d0504b2c_readySi(jule::Ptr<_1d0504225_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1d0504654_readyFn(_self_)(_self_.get()._field_s,_self_.get()._field_genericsA));;
}



inline jule::Bool _1d0504d91_ready(jule::Ptr<_1d0504225_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1d05048b8_readyFi(_self_);;
	};
	return _1d0504b2c_readySi(_self_);;
}



inline jule::Bool _1d0505105_check(jule::Ptr<_1d0504225_constraintChecker> _self_) {
	if ((!(_1d0504d91_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto &expr = _self_.get()._field_generics;
		auto it = expr.begin();
		_iter_begin_1aa999c84:;
		if (it != expr.end()) {
			jule::I64 _11914_i = it - expr.begin();
			jule::Ptr<_1d05c2cc7_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1aa999c84;
				};
				{
					auto &expr = _11921_g.get()._field_Constraint;
					auto it = expr.begin();
					_iter_begin_1aa99ac85:;
					if (it != expr.end()) {
						jule::Ptr<_1d05c4504_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1d05c9251_Prim> _12425_prim = _1d05c688b_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1d05c9d45_IsConstraint(_12425_prim.ptr()))) {
								if (_1d0505501_matchConstraint(_12425_prim.get()._field_Kind,_11921_g.get()._field_Kind)) {
									goto _iter_next_1aa999c84;
								};
								goto _iter_next_1aa99ac85;
							};
							if (_1d05c4c0d_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1aa999c84;
							};
						}
						_iter_next_1aa99ac85:;
						++it;
						goto _iter_begin_1aa99ac85;
					}
					_iter_end_1aa99ac85:;
				};
				_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et,jule::Str("type @ is not matched with @'s constraint", 41),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type7)}));
				return false;;
			}
			_iter_next_1aa999c84:;
			++it;
			_11914_i++;
			goto _iter_begin_1aa999c84;
		}
		_iter_end_1aa999c84:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0504225_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0506557_IsTraitImpl(_1d050615b_Impl* _self_) {
	return ((*_self_)._field_Base != nullptr);;
}



inline jule::Bool _1d05067bb_IsStructImpl(_1d050615b_Impl* _self_) {
	return ((*_self_)._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050615b_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050b1b6_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050b5b2_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050b89d_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050bc22_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050c00d_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d050c827_IsWhileNext(_1d050c481_WhileIter* _self_) {
	return ((*_self_)._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050c481_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050cd66_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050d262_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050d619_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050d905_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050dbe1_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050e098_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050e51b_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050e8c3_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d051041d_IsGenericTypeMatch(_1d050ee12_Match* _self_) {
	return (((*_self_)._field_TypeMatch && ((*_self_)._field_Expr != nullptr)) && (*_self_)._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d050ee12_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0510c26_isDefault(_1d051095c_Case* _self_) {
	return ((*_self_)._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d051095c_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0511012_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0511386_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0511991_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0511e14_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d05131ac_FindPackage(_1d0512c28_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1d0533034_FindPackage((*_self_)._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d05134ba_SelectPackage(_1d0512c28_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _46432_selector) {
	return _1d0533342_SelectPackage((*_self_)._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1d0550a13_Var> _1d0513872_FindVar(_1d0512c28_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1d0550a13_Var> _47817_v = _1d0595edc_findVar((*_self_)._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1d0512c28_scopeChecker> _48317_parent = (*_self_)._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1d0595edc_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident,_47538_cpp_linked,true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1aa9c4dad:;
	}
	_iter_end_1aa9c4dad:;;
	return _1d05336e9_FindVar((*_self_)._field_s.ptr(), _47526_ident,_47538_cpp_linked);;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d0513c29_FindTypeAlias(_1d0512c28_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1d05c3811_TypeAlias> _50517_ta = _1d059643d_findTypeAlias((*_self_)._field_table.ptr(), _50232_ident,_50244_cppLinked,true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1d0512c28_scopeChecker> _51017_parent = (*_self_)._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1d059643d_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident,_50244_cppLinked,true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1aa9c7aa3:;
	}
	_iter_end_1aa9c7aa3:;;
	return _1d0533aa1_FindTypeAlias((*_self_)._field_s.ptr(), _50232_ident,_50244_cppLinked);;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d05140d1_FindStruct(_1d0512c28_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1d0533e58_FindStruct((*_self_)._field_s.ptr(), _52729_ident,_52741_cppLinked);;
}



inline jule::Ptr<_1eb023b80_Fn> _1d0514488_FindFn(_1d0512c28_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1d0534310_FindFn((*_self_)._field_s.ptr(), _53625_ident,_53637_cppLinked);;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d0514796_FindTrait(_1d0512c28_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1d053461d_FindTrait((*_self_)._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1d05005ea_Enum> _1d0514aa4_FindEnum(_1d0512c28_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1d053492b_FindEnum((*_self_)._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d0514db2_FindTypeEnum(_1d0512c28_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1d0534c39_FindTypeEnum((*_self_)._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1d05151e2_isUnsafe(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	jule::Ptr<_1d0512c28_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1d0515456_isRoot(_1d0512c28_scopeChecker* _self_) {
	return (((*_self_)._field_parent == nullptr) || ((*_self_)._field_owner != nullptr));;
}



inline void _1d0515632_stop(_1d0512c28_scopeChecker* _self_) {
	(*_self_)._field_i=-1LL;
}



inline jule::Bool _1d0515896_stopped(_1d0512c28_scopeChecker* _self_) {
	return ((*_self_)._field_i == -1LL);;
}



inline jule::Bool _1d0515b0a_isDeferred(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	jule::Ptr<_1d0512c28_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1d0512c28_scopeChecker> _1d0515d6e_getRoot(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	jule::Ptr<_1d0512c28_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1aa9d220b:;
	}
	_iter_end_1aa9d220b:;;
	return _62217_root;;
}



inline jule::Ptr<_1d0512c28_scopeChecker> _1d05160d3_getHardRoot(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	jule::Ptr<_1d0512c28_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1aa9d3460:;
	}
	_iter_end_1aa9d3460:;;
	return _63217_root;;
}



inline jule::Ptr<_1d050d905_Label> _1d05163e1_findLabel(_1d0512c28_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1aa9d3ebb:;
		if (it != expr.end()) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1aa9d4a05:;
						{
							jule::Ptr<_1d050d905_Label> _64625_label = _64321_st.cast_ptr<_1d050d905_Label>(&__jule_any_type22);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1aa9d4906:;
				};
			}
			_iter_next_1aa9d3ebb:;
			++it;
			goto _iter_begin_1aa9d3ebb;
		}
		_iter_end_1aa9d3ebb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0511991_scopeLabel> _1d05166ee_findLabelScope(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1d0511991_scopeLabel> _65917_label = _1d0516a0c_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0511991_scopeLabel> _1d0516a0c_findLabelAll(_1d0512c28_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aa9d6c6b:;
		if (it != expr.end()) {
			jule::Ptr<_1d0511991_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1aa9d6c6b:;
			++it;
			goto _iter_begin_1aa9d6c6b;
		}
		_iter_end_1aa9d6c6b:;
	};
	return nullptr;;
}



inline jule::Bool _1d0516db4_isDuplicatedIdent(_1d0512c28_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1d0550a13_Var> _68313_v = _1d0513872_FindVar(&(*_self_), _68253_ident,false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*_self_)._field_scope) || (!(_1d053508b_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1d05c3811_TypeAlias> _69113_ta = _1d0513c29_FindTypeAlias(&(*_self_), _68253_ident,false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*_self_)._field_tree) || (!(_1d053508b_isFlag((*_self_)._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1d0517139_checkVarDecl(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31610a_VarDecl> _70236_decl) {
	jule::Ptr<_1d0550a13_Var> _70317_v = _1d04e6e3d_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type10));;
	});;
	if (_1d0516db4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)),_70317_v.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1d0515632_stop(_self_.ptr());
		return;;
	};
	_1d0544d6a_checkVarDecl(_self_.get()._field_s, _70317_v,jule::Trait<_1d05e0476_Lookup>(_self_, 0));
	if (((!(_1d0551140_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1d05484ab_checkTypeVar(_self_.get()._field_s, _70317_v,jule::Trait<_1d05e0476_Lookup>(_self_, 0));
}



inline void _1d05173ae_checkTypeAliasDecl(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31996b_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1d05c3811_TypeAlias> _72717_ta = _1d04e3e18_buildTypeAlias(_72642_decl);;
	if (_1d0516db4_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)),_72717_ta.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		_1d0515632_stop(_self_.ptr());
		return;;
	};
	_1d0540bac_checkTypeAliasDecl(_self_.get()._field_s, _72717_ta,jule::Trait<_1d05e0476_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1d0515632_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1d050b1b6_Scope> _1d0517623_getChild(_1d0512c28_scopeChecker* _self_) {
	return jule::new_ptr<_1d050b1b6_Scope>(_1d050b1b6_Scope{._field_Parent=(*_self_)._field_scope, });;
}



inline void _1d05179db_checkChildSsc(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea313635_ScopeTree>& _75038_tree, jule::Ptr<_1d050b1b6_Scope>& _75061_s, jule::Ptr<_1d0512c28_scopeChecker>& _75077_ssc) {
	_75077_ssc.get()._field_parent=_self_;
	_1d0522a29_check(_75077_ssc, _75038_tree,_75061_s);
}



inline jule::Ptr<_1d050b1b6_Scope> _1d0517d93_checkChildSc(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea313635_ScopeTree>& _75537_tree, jule::Ptr<_1d0512c28_scopeChecker>& _75560_ssc) {
	jule::Ptr<_1d050b1b6_Scope> _75617_s = _1d0517623_getChild(_self_.ptr());;
	_1d05179db_checkChildSsc(_self_, _75537_tree,_75617_s,_75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1d050b1b6_Scope> _1d05181a1_checkChild(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea313635_ScopeTree>& _76135_tree) {
	jule::Ptr<_1d0512c28_scopeChecker> _76217_ssc = _1d0522c8d_newChildChecker(_self_);;
	return _1d0517d93_checkChildSc(_self_, _76135_tree,_76217_ssc);;
}



inline void _1d0518426_checkAnonScope(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea313635_ScopeTree> _76638_tree) {
	jule::Ptr<_1d050b1b6_Scope> _76717_s = _1d05181a1_checkChild(_self_, _76638_tree);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type23));;
}



inline void _1d0518745_processErrorCall(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel>& _77141_m, jule::Ptr<_212a0c2ab_Token> _77172_err) {
	if (_1d0515b0a_isDeferred(_self_)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("deferred scopes are not supports error calls", 44),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0512c28_scopeChecker> _77617_root = _1d0515d6e_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _77172_err,jule::Str("error call can only useable for exceptional functions", 53),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57),jule::Slice<jule::Any>());
	};
	_77141_m.get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1d05189ba_checkExpr(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea307bbd_Expr> _78433_expr) {
	jule::Ptr<_1d059a0e0_Eval> _78517_eval = _1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1d0598572_Data> _78717_d = _1d05b5a12_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1aa9ecde7:;
			{
				jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1eb01ec47_BuiltinErrorCallExprModel>(&__jule_any_type24);;
				_1d0518745_processErrorCall(_self_, _79421_m,_78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type25));;
			}
		}
		else if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type36) {
			_case_begin_1aa9ed128:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type25));;
			}
		}
		else {
			_case_begin_1aa9ed0b2:;
			{
				_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa9ed05c:;
	};
}



inline jule::Ptr<_1d050b5b2_If> _1d0518cc8_checkIf(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31896a_If> _81431_i) {
	jule::Ptr<_1d050b1b6_Scope> _81517_s = _1d05181a1_checkChild(_self_, _81431_i.get()._field_Scope);;
	jule::Ptr<_1d0598572_Data> _81717_d = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d05c9251_Prim> _82217_prim = _1d05c688b_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1d05cc221_IsBool(_82217_prim.ptr()))))) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d050b5b2_If>(_1d050b5b2_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1d050b89d_Else> _1d05190d6_checkElse(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea318d22_Else> _83433_e) {
	return jule::new_ptr<_1d050b89d_Else>(_1d050b89d_Else{._field_Scope=_1d05181a1_checkChild(_self_, _83433_e.get()._field_Scope)});;
}



inline void _1d051935b_checkConditional(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea319295_Conditional> _84040_conditional) {
	jule::Ptr<_1d050bc22_Conditional> _84117_c = jule::new_ptr<_1d050bc22_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type37));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1d050b5b2_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1d0518cc8_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto &expr = _84040_conditional.get()._field_Tail;
		auto it = expr.begin();
		_iter_begin_1aaa06263:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31896a_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1d0518cc8_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1aaa06263:;
			++it;
			goto _iter_begin_1aaa06263;
		}
		_iter_end_1aaa06263:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1d05190d6_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1d05197bd_checkIterScopeSsc(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_1ea313635_ScopeTree> _85654_tree, jule::Ptr<_1d050b1b6_Scope>& _85677_s, jule::Ptr<_1d0512c28_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1d05179db_checkChildSsc(_self_, _85654_tree,_85677_s,_85692_ssc);
}



inline jule::Ptr<_1d050b1b6_Scope> _1d0519c1e_checkIterScopeSc(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_1ea313635_ScopeTree> _86153_tree, jule::Ptr<_1d0512c28_scopeChecker> _86175_ssc) {
	jule::Ptr<_1d050b1b6_Scope> _86217_scope = _1d0517623_getChild(_self_.ptr());;
	_1d05197bd_checkIterScopeSsc(_self_, _86136_it,_86153_tree,_86217_scope,_86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1d050b1b6_Scope> _1d051a0c6_checkIterScope(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_1ea313635_ScopeTree>& _86752_tree) {
	jule::Ptr<_1d0512c28_scopeChecker> _86817_ssc = _1d0522c8d_newChildChecker(_self_);;
	return _1d0519c1e_checkIterScopeSc(_self_, _86734_it,_86752_tree,_86817_ssc);;
}



inline void _1d051a34b_checkInfIter(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea316b22_Iter>& _87237_it) {
	jule::Ptr<_1d050c00d_InfIter> _87317_kind = jule::new_ptr<_1d050c00d_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type38));;
	_87317_kind.get()._field_Scope=_1d051a0c6_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)),_87237_it.get()._field_Scope);
}



inline void _1d051a5c1_checkWhileIter(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea316b22_Iter>& _87839_it) {
	jule::Ptr<_1ea3173e7_WhileKind> _87917_wh = _87839_it.get()._field_Kind.cast_ptr<_1ea3173e7_WhileKind>(&__jule_any_type39);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1d051a34b_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1d050c481_WhileIter> _88517_kind = jule::new_ptr<_1d050c481_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type40));;
	_88517_kind.get()._field_Scope=_1d051a0c6_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)),_87839_it.get()._field_Scope);
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1d0598572_Data> _89021_d = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1d05c9251_Prim> _89517_prim = _1d05c688b_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1d05cc221_IsBool(_89517_prim.ptr())))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _87839_it.get()._field_Token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_1ea317749_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1d050a6e3_isValidAstStForNextSt(_87917_wh.get()._field_Next)))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1d05217c5_checkNode(_self_, _87917_wh.get()._field_Next);
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL,_91517_n);
			if ((!(_1d050a98a_isValidStForNextSt(_91825_st)))) {
				_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1d051a846_checkRangeIter(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea316b22_Iter>& _92839_it) {
	jule::Ptr<_1ea317c88_RangeKind> _92917_rang = _92839_it.get()._field_Kind.cast_ptr<_1ea317c88_RangeKind>(&__jule_any_type41);;
	jule::Ptr<_1d0598572_Data> _93117_d = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1d050cd66_RangeIter> _93617_kind = jule::new_ptr<_1d050cd66_RangeIter>(_1d050cd66_RangeIter{._field_Expr=_93117_d, });;
	_1d058e7ee_rangeChecker _94017_rc = _1d058e7ee_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1d05911b3_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type42));;
	jule::Ptr<_1d0512c28_scopeChecker> _95317_ssc = _1d0522c8d_newChildChecker(_self_);;
	jule::Ptr<_1d050b1b6_Scope> _95417_scope = _1d0517623_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1d053508b_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d0516db4_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type7)}));
			_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1d053508b_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d0516db4_isDuplicatedIdent(_self_.ptr(), 0LLU,_93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type7)}));
			_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1d05197bd_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)),_92839_it.get()._field_Scope,_95417_scope,_95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1d051aabb_checkIter(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea316b22_Iter> _97833_it) {
	if (_1ea316e74_IsInf(_97833_it.ptr())) {
		_1d051a34b_checkInfIter(_self_, _97833_it);
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1aaa23b87:;
			{
				_1d051a5c1_checkWhileIter(_self_, _97833_it);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1aaa230d7:;
			{
				_1d051a846_checkRangeIter(_self_, _97833_it);
			}
		}
		else {
			_case_begin_1aaa22e72:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1aaa22e0b:;
	};
}



inline jule::Bool _1d051adc9_checkValidContLabel(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1d0512c28_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1d051b1d7_checkValidBreakLabel(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1d0512c28_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1d051095c_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1d050d262_ContSt> _1d051b4e5_checkContValidScope(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea3184e7_ContSt> _103339_c) {
	if (_1d0515b0a_isDeferred(_self_)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1d050d262_ContSt>();;
	};
	jule::Ptr<_1d0512c28_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1aaa2aebe:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1aaa2b046:;
			{
				return jule::new_ptr<_1d050d262_ContSt>(_1d050d262_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1aaa2ae14:;
	};
	_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1d051b76a_checkCont(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea3184e7_ContSt> _105729_c) {
	jule::Ptr<_1d050d262_ContSt> _105817_cont = _1d051b4e5_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1d0511991_scopeLabel> _106421_label = _1d05088bc_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1aaa32dd8:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38)));
					}
				}
				else if (_match_expr.type == &__jule_any_type42) {
					_case_begin_1aaa34868:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1d050cd66_RangeIter>(&__jule_any_type42)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1aaa348ce:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1d050c481_WhileIter>(&__jule_any_type40)));
					}
				}
				else {
					_case_begin_1aaa346e2:;
					{
						_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
					}
				}
				_match_end_1aaa3467b:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1d051adc9_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type43));;
}



inline void _1d051b9e0_checkLabel(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea310d4c_LabelSt> _110434_l) {
	if ((_1d05163e1_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type7)}));
		return;;
	};
	jule::Ptr<_1d050d905_Label> _111017_label = jule::new_ptr<_1d050d905_Label>(_1d050d905_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type22));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1d0511991_scopeLabel>>::make({jule::new_ptr<_1d0511991_scopeLabel>(_1d0511991_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1d051bc65_pushGoto(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea311204_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d050dbe1_GotoSt>(_1d050dbe1_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type44));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1d0511e14_scopeGoto>>::make({jule::new_ptr<_1d0511e14_scopeGoto>(_1d0511e14_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1d051beda_checkPostfix(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea312139_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ea307bbd_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1d0598572_Data> _114217_d = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1d050a44b_checkAssign(_self_.get()._field_s,_114217_d,nullptr,_113536_a.get()._field_Setter);
	if ((_1d05c6d64_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05d1049_Ptr> _115021_ptr = _1d05c6d64_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1d05d1a1c_IsUnsafe(_115021_ptr.ptr())) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return;;
		};
	} else {
		if (((_1d05c688b_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1eb0090a5_IsNum(_1d05c688b_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d050e098_Postfix>(_1d050e098_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type45));;
}



inline jule::Bool _1d051c2e8_isNewAssignIdent(_1d0512c28_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_212a0ea50_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1d05967e5_defByIdent((*_self_)._field_table.ptr(), _116835_ident,false) == nullptr);;
}



inline jule::Bool _1d051c749_checkStructureAssignOp(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea320268_StructIns>& _117547_s, jule::Ptr<_1ea312139_AssignSt>& _117567_a, jule::Ptr<_1d0598572_Data>& _117586_r) {
	jule::Ptr<_1eb026831_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ _117567_a.get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1aaa46bcc:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1aaa480c9:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1aaa48140:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1aaa481a6:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1aaa47183:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1aaa471e9:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1aaa47260:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1aaa472c6:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1aaa48393:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1aaa48409:;
			{
				_117817_overload=_117547_s.get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1aaa4711c:;
			{
				_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1ea2e5abd_Str(_117547_s.ptr()), &__jule_any_type7)}));
				return false;;
			}
		}
		_match_end_1aaa46a12:;
	};
	if ((_117817_overload == nullptr)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _117567_a.get()._field_Setter,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any(_117567_a.get()._field_Setter.get()._field_Kind, &__jule_any_type7),jule::Any(_1ea2e5abd_Str(_117547_s.ptr()), &__jule_any_type7)}));
		return false;;
	};
	jule::Ptr<_1eb025962_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1d053c5b0_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference,_121017_p.get()._field_Kind,_117586_r,_117567_a.get()._field_Setter);;
}



inline void _1d051c9be_checkSingleAssign(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea312139_AssignSt>& _121442_a) {
	jule::Ptr<_1d0598572_Data> _121517_l = nullptr;;
	if ((!(_212a0ea50_IsIgnoreIdent(_121442_a.get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1ea307bbd_Expr> _121821_expr = _121442_a.get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d059a0e0_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1d053bca7_evalp(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0),_121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1d05151e2_isUnsafe(_self_);
	jule::Ptr<_1d0598572_Data> _123217_r = _1d05b5a12_evalExpr(_122517_eval, _121442_a.get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1d05c569d_Void(_123217_r.get()._field_Kind.ptr())) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type25));;
		return;;
	};
	if ((!(_1d050a44b_checkAssign(_self_.get()._field_s,_121517_l,_123217_r,_121442_a.get()._field_Setter)))) {
		return;;
	};
	if ((_1d05c852a_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _121442_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1eb0153d0_OperandExprModel> _125417_lm = jule::new_ptr<_1eb0153d0_OperandExprModel>(_1eb0153d0_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1eb0153d0_OperandExprModel> _125817_rm = jule::new_ptr<_1eb0153d0_OperandExprModel>(_1eb0153d0_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d050e51b_Assign>(_1d050e51b_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=_121442_a.get()._field_Setter}), &__jule_any_type46));;
	if ((_121442_a.get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1ea320268_StructIns> _126521_strct = _1d05c7cdd_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1d051c749_checkStructureAssignOp(_self_, _126521_strct,_121442_a,_123217_r);
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind=_121442_a.get()._field_Setter.get()._field_Kind.slice(0LL,(_121442_a.get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1d05b7c23_binaryEval _127221_solver = static__1d05b863b_new(_122517_eval,_121442_a.get()._field_Setter);;
		_123217_r=_1d05bd498_solveExplicit(&_127221_solver, _121517_l,_123217_r);
		if ((_123217_r == nullptr)) {
			return;;
		};
		_121442_a.get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1d0583e64_assignTypeChecker _128117_checker = _1d0583e64_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=_121442_a.get()._field_Setter};;
	if (_1d05850db_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1d051ceec_processEndPartOfMultiAssign(_1d0512c28_scopeChecker* _self_, jule::Ptr<_1d050e8c3_MultiAssign>& _129351_st, jule::Ptr<_1ea312139_AssignSt>& _129414_a, jule::Ptr<_1ea311aea_AssignLeft>& _129433_lexpr, jule::Ptr<_1d0598572_Data>& _129458_l, jule::Ptr<_1d0598572_Data>& _129473_r) {
	if (_212a0ea50_IsIgnoreIdent(_129433_lexpr.get()._field_Ident)) {
		if (_1d05c569d_Void(_129473_r.get()._field_Kind.ptr())) {
			_1d05356c9_pushErr((*_self_)._field_s.ptr(), _129414_a.get()._field_Right.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		};
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(nullptr);;
		return;;
	};
	if ((_129414_a.get()._field_Declarative && _1d051c2e8_isNewAssignIdent(&(*_self_), _129433_lexpr.get()._field_Ident))) {
		if (_1d0516db4_isDuplicatedIdent(&(*_self_), 0LLU,_129433_lexpr.get()._field_Ident)) {
			_1d05356c9_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type7)}));
			_1d05359e8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
			_1d0515632_stop(&(*_self_));
			return;;
		};
		jule::Ptr<_1d0550a13_Var> _131221_v = jule::new_ptr<_1d0550a13_Var>(_1d0550a13_Var{._field_Scope=(*_self_)._field_scope, ._field_Token=_129433_lexpr.get()._field_Token, ._field_Ident=_129433_lexpr.get()._field_Ident, ._field_Mutable=_129433_lexpr.get()._field_Mutable, ._field_Reference=_129433_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Expr=_129414_a.get()._field_Right, ._field_Data=_129473_r}), });;
		_1d054818c_checkVar((*_self_)._field_s, _131221_v);
		_131221_v.get()._field_Value=nullptr;
		_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_131221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131221_v.get()._field_Mutable, ._field_Reference=_131221_v.get()._field_Reference, ._field_Lvalue=(!(_131221_v.get()._field_Constant)), ._field_Model=jule::Any(_131221_v, &__jule_any_type10), }));;
		(*_self_)._field_table.get()._field_Vars = jule::alloc_for_append((*_self_)._field_table.get()._field_Vars,1);(*_self_)._field_table.get()._field_Vars.__push(_131221_v);;
		(*_self_)._field_scope.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_scope.get()._field_Stmts,1);(*_self_)._field_scope.get()._field_Stmts.__push(jule::Any(_131221_v, &__jule_any_type10));;
		return;;
	};
	if ((_129433_lexpr.get()._field_Mutable || _129433_lexpr.get()._field_Reference)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _129433_lexpr.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_129433_lexpr.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((!(_1d050a44b_checkAssign((*_self_)._field_s,_129458_l,_129473_r,_129414_a.get()._field_Setter)))) {
		return;;
	};
	;
	_1d05404c5_checkValidityForInitExpr((*_self_)._field_s, _129458_l.get()._field_Mutable,false,_129458_l.get()._field_Kind,_129473_r,_129414_a.get()._field_Setter);
	_1d0583e64_assignTypeChecker _135517_checker = _1d0583e64_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_129458_l.get()._field_Kind, ._field_d=_129473_r, ._field_errorToken=_129414_a.get()._field_Setter};;
	_1d05850db_check(&_135517_checker);
	_129351_st.get()._field_L = jule::alloc_for_append(_129351_st.get()._field_L,1);_129351_st.get()._field_L.__push(_129458_l);;
}



inline void _1d051d283_checkMultiAssign(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea312139_AssignSt>& _136541_a) {
	jule::Ptr<_1d0598572_Data> _136617_rd = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _136541_a.get()._field_Right);;
	if ((_136617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d0598572_Data>> _137017_right = _1d050967b_getDatasFromTupleData(_136617_rd);;
	if ((_137017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type47) {
				_case_begin_1aaa68a56:;
				{
					jule::Ptr<_1eb01803c_IndexingExprModel> _137425_iem = _137017_right[0LL].get()._field_Model.cast_ptr<_1eb01803c_IndexingExprModel>(&__jule_any_type47);;
					if ((_1d05c82b6_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137017_right=jule::Slice<jule::Ptr<_1d0598572_Data>>::make({jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_1d05c82b6_Map(_137425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1aaa68a01:;
		};
	};
	{
		
		if ((_136541_a.get()._field_Left.len() > _137017_right.len())) {
			_case_begin_1aaa68d86:;
			{
				_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((_136541_a.get()._field_Left.len() < _137017_right.len())) {
			_case_begin_1aaa68dec:;
			{
				_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _136541_a.get()._field_Setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1aaa6824d:;
	};
	jule::Ptr<_1d050e8c3_MultiAssign> _139317_st = jule::new_ptr<_1d050e8c3_MultiAssign>(_1d050e8c3_MultiAssign{._field_R=_136617_rd.get()._field_Model});;
	{
		auto &expr = _136541_a.get()._field_Left;
		auto it = expr.begin();
		_iter_begin_1aaa6d1a9:;
		if (it != expr.end()) {
			jule::I64 _139613_i = it - expr.begin();
			{
				jule::Ptr<_1ea311aea_AssignLeft> _139721_lexpr = _136541_a.get()._field_Left[_139613_i];;
				jule::Ptr<_1d0598572_Data> _139821_l = nullptr;;
				if (((!(_212a0ea50_IsIgnoreIdent(_139721_lexpr.get()._field_Ident))) && ((!(_136541_a.get()._field_Declarative)) || (!(_1d051c2e8_isNewAssignIdent(_self_.ptr(), _139721_lexpr.get()._field_Ident)))))) {
					_139821_l=_1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _139721_lexpr.get()._field_Expr);
					if ((_139821_l == nullptr)) {
						goto _iter_next_1aaa6d1a9;
					};
				};
				jule::Ptr<_1d0598572_Data> _140621_r = _137017_right[_139613_i];;
				_1d051ceec_processEndPartOfMultiAssign(_self_.ptr(), _139317_st,_136541_a,_139721_lexpr,_139821_l,_140621_r);
			}
			_iter_next_1aaa6d1a9:;
			++it;
			_139613_i++;
			goto _iter_begin_1aaa6d1a9;
		}
		_iter_end_1aaa6d1a9:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139317_st, &__jule_any_type48));;
}



inline void _1d051d508_checkAssignSt(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea312139_AssignSt> _141237_a) {
	{
		
		if (_212a11aeb_IsPostfixOp(_141237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1aaa72334:;
			{
				_1d051beda_checkPostfix(_self_, _141237_a);
			}
		}
		else if (((_141237_a.get()._field_Left.len() == 1LL) && (!(_141237_a.get()._field_Declarative)))) {
			_case_begin_1aaa72774:;
			{
				_1d051c9be_checkSingleAssign(_self_, _141237_a);
			}
		}
		else {
			_case_begin_1aaa719d7:;
			{
				_1d051d283_checkMultiAssign(_self_, _141237_a);
			}
		}
		_match_end_1aaa7191b:;
	};
}



inline jule::Ptr<_1d050b1b6_Scope> _1d051d8b0_checkCaseScope(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1d051095c_Case>& _142335_c, jule::Ptr<_1ea313635_ScopeTree>& _142350_tree) {
	jule::Ptr<_1d0512c28_scopeChecker> _142417_ssc = _1d0522c8d_newChildChecker(_self_);;
	_142417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_142335_c));
	return _1d0517d93_checkChildSc(_self_, _142350_tree,_142417_ssc);;
}



inline jule::Ptr<_1d051095c_Case> _1d051ddaa_checkCase(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1d050ee12_Match> _142933_m, jule::I64 _142944_i, jule::Ptr<_1ea319dde_Case> _142956_c, jule::Ptr<_1d0598572_Data> _142975_expr) {
	jule::Ptr<_1d051095c_Case> _143017_case = _142933_m.get()._field_Cases[_142944_i];;
	_143017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1d0598572_Data>>::alloc(0LL, _142956_c.get()._field_Exprs.len());
	jule::Bool _143217_genericMatched = false;;
	jule::Ptr<_1d059a0e0_Eval> _143317_eval = _1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0));;
	{
		auto &expr = _142956_c.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1aaa771e6:;
		if (it != expr.end()) {
			jule::Ptr<_1ea307bbd_Expr> _143421_e = *it;
			{
				jule::Ptr<_1d0598572_Data> _143521_d = _1d05b53e6_evalExprKind(_143317_eval, _143421_e.get()._field_Kind);;
				if ((_143521_d == nullptr)) {
					goto _iter_next_1aaa771e6;
				};
				if (_142933_m.get()._field_TypeMatch) {
					_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
					if ((_1d05093d4_countMatchType(_142933_m,_143521_d.get()._field_Kind) > 1LL)) {
						_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("duplicated pattern: type @ is already matched", 45),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_143521_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
					};
					if (_142975_expr.get()._field_Kind.get()._field_Generic) {
						_143217_genericMatched=(_143217_genericMatched || _1d05c4c0d_Equal(_142975_expr.get()._field_Kind, _143521_d.get()._field_Kind));
					} else {
						if ((_1d05c733c_TypeEnum(_142975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1d053ca11_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
						} else {
							jule::Ptr<_1d04ed4a5_Trait> _145029_trt = _1d05c8052_Trait(_142975_expr.get()._field_Kind.ptr());;
							if ((_145029_trt != nullptr)) {
								_1d053ca11_checkTypeCompatibility(_self_.get()._field_s, _142975_expr.get()._field_Kind,_143521_d.get()._field_Kind,_143421_e.get()._field_Token);
							};
						};
					};
					goto _iter_next_1aaa771e6;
				};
				if (_143521_d.get()._field_Decl) {
					_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _143421_e.get()._field_Token,jule::Str("expecting expression, found type declaration", 44),jule::Slice<jule::Any>());
					_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49),jule::Slice<jule::Any>());
					goto _iter_next_1aaa771e6;
				};
				_143017_case.get()._field_Exprs = jule::alloc_for_append(_143017_case.get()._field_Exprs,1);_143017_case.get()._field_Exprs.__push(_143521_d);;
				_1d0583e64_assignTypeChecker _146821_checker = _1d0583e64_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_142975_expr.get()._field_Kind, ._field_d=_143521_d, ._field_errorToken=_143421_e.get()._field_Token};;
				_1d05850db_check(&_146821_checker);
			}
			_iter_next_1aaa771e6:;
			++it;
			goto _iter_begin_1aaa771e6;
		}
		_iter_end_1aaa771e6:;
	};
	if ((((!(_142933_m.get()._field_TypeMatch)) || (!(_142975_expr.get()._field_Kind.get()._field_Generic))) || _143217_genericMatched)) {
		_143017_case.get()._field_Scope=_1d051d8b0_checkCaseScope(_self_, _143017_case,_142956_c.get()._field_Scope);
	};
	return _143017_case;;
}



inline void _1d051e273_checkCases(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31a5b5_MatchCase>& _148235_m, jule::Ptr<_1d050ee12_Match> _148254_rm, jule::Ptr<_1d0598572_Data> _148270_expr) {
	_148254_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1d051095c_Case>>::alloc(0LL, _148235_m.get()._field_Cases.len());
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1aaa810bd:;
		if (it != expr.end()) {
			jule::I64 _148413_i = it - expr.begin();
			{
				jule::Ptr<_1d051095c_Case> _148521_case = jule::new_ptr<_1d051095c_Case>(_1d051095c_Case{._field_Owner=_148254_rm, });;
				if ((_148413_i > 0LL)) {
					_148254_rm.get()._field_Cases[(_148413_i - 1LL)].get()._field_Next=_148521_case;
				};
				_148254_rm.get()._field_Cases = jule::alloc_for_append(_148254_rm.get()._field_Cases,1);_148254_rm.get()._field_Cases.__push(_148521_case);;
			}
			_iter_next_1aaa810bd:;
			++it;
			_148413_i++;
			goto _iter_begin_1aaa810bd;
		}
		_iter_end_1aaa810bd:;
	};
	if (((_148254_rm.get()._field_Default != nullptr) && (_148235_m.get()._field_Cases.len() > 0LL))) {
		_148254_rm.get()._field_Cases[(_148254_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148254_rm.get()._field_Default;
	};
	{
		auto &expr = _148235_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1aaa83c4c:;
		if (it != expr.end()) {
			jule::I64 _149814_i = it - expr.begin();
			jule::Ptr<_1ea319dde_Case> _149821_c = *it;
			{
				_1d051ddaa_checkCase(_self_, _148254_rm,_149814_i,_149821_c,_148270_expr);
			}
			_iter_next_1aaa83c4c:;
			++it;
			_149814_i++;
			goto _iter_begin_1aaa83c4c;
		}
		_iter_end_1aaa83c4c:;
	};
}



inline jule::Ptr<_1d051095c_Case> _1d051e62a_checkDefault(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1d050ee12_Match> _150336_m, jule::Ptr<_1ea318d22_Else> _150351_d) {
	jule::Ptr<_1d051095c_Case> _150417_def = jule::new_ptr<_1d051095c_Case>(_1d051095c_Case{._field_Owner=_150336_m, });;
	_150417_def.get()._field_Scope=_1d051d8b0_checkCaseScope(_self_, _150417_def,_150351_d.get()._field_Scope);
	return _150417_def;;
}



inline void _1d051e8a0_checkComptimePanic(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1d050b1b6_Scope>& _151139_s) {
	if ((_151139_s.get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151613_stmt = _151139_s.get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151613_stmt };
		
		if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aaa86e92:;
			{
				jule::Ptr<_1d0598572_Data> _151917_d = _151613_stmt.cast_ptr<_1d0598572_Data>(&__jule_any_type25);;
				{
					auto &_match_expr{ _151917_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1aaa87c84:;
						{
							jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel> _152221_m = _151917_d.get()._field_Model.cast_ptr<_1eb01c8b0_BuiltinPanicCallExprModel>(&__jule_any_type31);;
							{
								auto &_match_expr{ _152221_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type49) {
									_case_begin_1aaa88c30:;
									{
										jule::Ptr<_1eb0095b1_Const> _152525_c = _152221_m.get()._field_Expr.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
										if (_1eb00d98e_IsStr(_152525_c.ptr())) {
											jule::Ptr<_1d0512c28_scopeChecker> _152733_root = _1d05160d3_getHardRoot(_self_);;
											_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _152733_root.get()._field_calledFrom,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>::make({jule::Any(_1eb00b5e6_ReadStr(_152525_c.ptr()), &__jule_any_type7)}));
										};
									}
								}
								_match_end_1aaa88a21:;
							};
						}
					}
					_match_end_1aaa87877:;
				};
			}
		}
		_match_end_1aaa86e3c:;
	};
}



inline void _1d051ebbe_pushTypeMatch(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1d050ee12_Match> _153537_tm, jule::Ptr<_1ea31a5b5_MatchCase>& _153554_m) {
	if (_153537_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto &expr = _153537_tm.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1aaa881b3:;
			if (it != expr.end()) {
				jule::Ptr<_1d051095c_Case> _153925_c = *it;
				{
					if ((_153925_c.get()._field_Scope != nullptr)) {
						_1d051e8a0_checkComptimePanic(_self_, _153925_c.get()._field_Scope);
						_153537_tm.get()._field_Default=_153925_c;
						_153537_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1aaa881b3:;
				++it;
				goto _iter_begin_1aaa881b3;
			}
			_iter_end_1aaa881b3:;
		};
		if ((_153554_m.get()._field_Default != nullptr)) {
			_153537_tm.get()._field_Cases=nullptr;
			_153537_tm.get()._field_Default=_1d051e62a_checkDefault(_self_, _153537_tm,_153554_m.get()._field_Default);
			if ((_153537_tm.get()._field_Default != nullptr)) {
				_1d051e8a0_checkComptimePanic(_self_, _153537_tm.get()._field_Default.get()._field_Scope);
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153537_tm, &__jule_any_type50));;
}



inline void _1d051ee44_checkTypeMatch(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31a5b5_MatchCase>& _155939_m) {
	jule::Ptr<_1d0598572_Data> _156017_d = _1d05b5704_eval(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _155939_m.get()._field_Expr);;
	if ((_156017_d == nullptr)) {
		return;;
	};
	if (((!(_156017_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1d05c688b_Prim(_156017_d.get()._field_Kind.ptr()) != nullptr) && _1d05cc6e9_IsAny(_1d05c688b_Prim(_156017_d.get()._field_Kind.ptr()).ptr())) || (_1d05c8052_Trait(_156017_d.get()._field_Kind.ptr()) != nullptr)) || (_1d05c733c_TypeEnum(_156017_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _155939_m.get()._field_Expr.get()._field_Token,jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d050ee12_Match> _157117_tm = jule::new_ptr<_1d050ee12_Match>(_1d050ee12_Match{._field_Expr=_156017_d, ._field_TypeMatch=true, });;
	if (((!(_157117_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && (_155939_m.get()._field_Default != nullptr))) {
		_157117_tm.get()._field_Default=_1d051e62a_checkDefault(_self_, _157117_tm,_155939_m.get()._field_Default);
	};
	_1d051e273_checkCases(_self_, _155939_m,_157117_tm,_156017_d);
	_1d051ebbe_pushTypeMatch(_self_, _157117_tm,_155939_m);
}



inline void _1d05201b9_checkCommonMatch(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31a5b5_MatchCase>& _158441_m) {
	jule::Ptr<_1d0598572_Data> _158517_d = nullptr;;
	if ((_158441_m.get()._field_Expr == nullptr)) {
		_158517_d=jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1eb00a073_NewBool(true)});
		_158517_d.get()._field_Model=jule::Any(_158517_d.get()._field_Constant, &__jule_any_type49);
	} else {
		_158517_d=_1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _158441_m.get()._field_Expr);
		if ((_158517_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d050ee12_Match> _159917_mc = jule::new_ptr<_1d050ee12_Match>(_1d050ee12_Match{._field_Expr=_158517_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_159917_mc, &__jule_any_type50));;
	if ((_158441_m.get()._field_Default != nullptr)) {
		_159917_mc.get()._field_Default=_1d051e62a_checkDefault(_self_, _159917_mc,_158441_m.get()._field_Default);
	};
	_1d051e273_checkCases(_self_, _158441_m,_159917_mc,_158517_d);
}



inline void _1d052043e_checkMatch(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea31a5b5_MatchCase> _161134_m) {
	if (_161134_m.get()._field_TypeMatch) {
		_1d051ee44_checkTypeMatch(_self_, _161134_m);
		return;;
	};
	_1d05201b9_checkCommonMatch(_self_, _161134_m);
}



inline void _1d05206b4_checkFall(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea3114e0_FallSt> _161929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1d0515b0a_isDeferred(_self_))) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall keyword can only useable at end of the case scopes", 55),jule::Slice<jule::Any>());
		return;;
	};
	_1d051095c_Case* _162717_case = ((_1d051095c_Case*)(_self_.get()._field_cse));;
	if ((_162717_case->_field_Next == nullptr)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _161929_f.get()._field_Token,jule::Str("fall cannot useable at final case", 33),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d0511012_FallSt>(_1d0511012_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_162717_case->_field_Next))}), &__jule_any_type51));;
}



inline jule::Ptr<_1d050d619_BreakSt> _1d05209c2_checkBreakWithLabel(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea318140_BreakSt> _163939_b) {
	jule::Ptr<_1d050d619_BreakSt> _164017_brk = _1d0520cd0_checkPlainBreak(_self_, _163939_b);;
	if ((_164017_brk == nullptr)) {
		return nullptr;;
	};
	_164017_brk.get()._field_It=0LLU;
	_164017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1d0511991_scopeLabel> _165017_label = _1d05088bc_findLabelParent(_163939_b.get()._field_Label.get()._field_Kind,_self_.get()._field_parent);;
	if ((_165017_label == nullptr)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	_165017_label.get()._field_used=true;
	if (((_165017_label.get()._field_pos + 1LL) >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::I64 _166313_i = (_165017_label.get()._field_pos + 1LL);;
	if ((_166313_i >= _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
	} else {
		jule::Any _166721_st = _165017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166313_i];;
		{
			auto &_match_expr{ _166721_st };
			
			if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1aaaa391a:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1aaaa5642:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1d050cd66_RangeIter>(&__jule_any_type42)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1aaaa56a8:;
				{
					_164017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1d050c481_WhileIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type50) {
				_case_begin_1aaaa571e:;
				{
					_164017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_166721_st.cast_ptr<_1d050ee12_Match>(&__jule_any_type50)));
				}
			}
			else {
				_case_begin_1aaaa54bb:;
				{
					_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
				}
			}
			_match_end_1aaaa5455:;
		};
	};
	if ((_164017_brk.get()._field_It != 0LLU)) {
		if ((!(_1d051b1d7_checkValidBreakLabel(_self_, _164017_brk.get()._field_It)))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		};
	};
	if ((_164017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1d051b1d7_checkValidBreakLabel(_self_, _164017_brk.get()._field_Mtch)))) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _163939_b.get()._field_Label,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_163939_b.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
		};
	};
	return _164017_brk;;
}



inline jule::Ptr<_1d050d619_BreakSt> _1d0520cd0_checkPlainBreak(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea318140_BreakSt> _169735_b) {
	if (_1d0515b0a_isDeferred(_self_)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0512c28_scopeChecker> _170317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170317_scope.get()._field_it == 0LLU) && (_170317_scope.get()._field_cse == 0LLU)) && (_170317_scope.get()._field_parent != nullptr)) && (_170317_scope.get()._field_owner == nullptr))) {
			_case_begin_1aaaab923:;
			{
				_170317_scope=_170317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170317_scope.get()._field_it != 0LLU)) {
			_case_begin_1aaaab99a:;
			{
				return jule::new_ptr<_1d050d619_BreakSt>(_1d050d619_BreakSt{._field_It=_170317_scope.get()._field_it, });;
			}
		}
		else if ((_170317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1aaaaba22:;
			{
				return jule::new_ptr<_1d050d619_BreakSt>(_1d050d619_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1d051095c_Case*)(_170317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1aaaab857:;
	};
	_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _169735_b.get()._field_Token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1d0521055_checkBreak(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea318140_BreakSt> _171930_b) {
	if ((_171930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1d050d619_BreakSt> _172121_brk = _1d05209c2_checkBreakWithLabel(_self_, _171930_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172121_brk, &__jule_any_type52));;
		return;;
	};
	jule::Ptr<_1d050d619_BreakSt> _172617_brk = _1d0520cd0_checkPlainBreak(_self_, _171930_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172617_brk, &__jule_any_type52));;
}



inline void _1d05212ca_checkRet(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea3164b2_RetSt> _173032_r) {
	if (_1d0515b0a_isDeferred(_self_)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _173032_r.get()._field_Token,jule::Str("deferred scopes are not supports return statements", 50),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0511386_RetSt> _173517_rt = jule::new_ptr<_1d0511386_RetSt>(_1d0511386_RetSt{._field_Func=_1d0515d6e_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173517_rt, &__jule_any_type53));;
	jule::Ptr<_1d0591889_retTypeChecker> _174017_rtc = jule::new_ptr<_1d0591889_retTypeChecker>(_1d0591889_retTypeChecker{._field_sc=_self_, ._field_f=_173517_rt.get()._field_Func, ._field_errorToken=_173032_r.get()._field_Token, });;
	jule::Bool _174513_ok = _1d059258d_check(_174017_rtc.ptr(), _173032_r.get()._field_Expr);;
	if ((!(_174513_ok))) {
		return;;
	};
	if ((_173032_r.get()._field_Expr != nullptr)) {
		_173517_rt.get()._field_Expr=_174017_rtc.get()._field_model;
	};
}



inline void _1d0521550_checkUseExpr(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea30855e_UseExpr> _175532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable out of exceptional handler scopes", 64),jule::Slice<jule::Any>());
		return;;
	};
	if (_1d0515b0a_isDeferred(_self_)) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions cannot useable in deferred scopes", 49),jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _175532_ue.get()._field_Token,jule::Str("use expressions must be last statement of scope", 47),jule::Slice<jule::Any>());
	};
}



inline void _1d05217c5_checkNode(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Any& _177134_node) {
	{
		auto &_match_expr{ _177134_node };
		
		if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1aaabd8e1:;
			{
				_1d0518426_checkAnonScope(_self_, _177134_node.cast_ptr<_1ea313635_ScopeTree>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1aaabdcdc:;
			{
				_1d0517139_checkVarDecl(_self_, _177134_node.cast_ptr<_1ea31610a_VarDecl>(&__jule_any_type18));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1aaabe10b:;
			{
				_1d05173ae_checkTypeAliasDecl(_self_, _177134_node.cast_ptr<_1ea31996b_TypeAliasDecl>(&__jule_any_type14));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1aaabe172:;
			{
				_1d05189ba_checkExpr(_self_, _177134_node.cast_ptr<_1ea307bbd_Expr>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1aaabe32b:;
			{
				_1d051935b_checkConditional(_self_, _177134_node.cast_ptr<_1ea319295_Conditional>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1aaabe392:;
			{
				_1d051aabb_checkIter(_self_, _177134_node.cast_ptr<_1ea316b22_Iter>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1aaabe408:;
			{
				_1d051b76a_checkCont(_self_, _177134_node.cast_ptr<_1ea3184e7_ContSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1aaabe46e:;
			{
				_1d051b9e0_checkLabel(_self_, _177134_node.cast_ptr<_1ea310d4c_LabelSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1aaabe4d5:;
			{
				_1d051bc65_pushGoto(_self_, _177134_node.cast_ptr<_1ea311204_GotoSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1aaabe54b:;
			{
				_1d051d508_checkAssignSt(_self_, _177134_node.cast_ptr<_1ea312139_AssignSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1aaabe5b2:;
			{
				_1d052043e_checkMatch(_self_, _177134_node.cast_ptr<_1ea31a5b5_MatchCase>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1aaabe628:;
			{
				_1d05206b4_checkFall(_self_, _177134_node.cast_ptr<_1ea3114e0_FallSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1aaabe68e:;
			{
				_1d0521055_checkBreak(_self_, _177134_node.cast_ptr<_1ea318140_BreakSt>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1aaabe705:;
			{
				_1d05212ca_checkRet(_self_, _177134_node.cast_ptr<_1ea3164b2_RetSt>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1aaabe76b:;
			{
				_1d0521550_checkUseExpr(_self_, _177134_node.cast_ptr<_1ea30855e_UseExpr>(&__jule_any_type66));
			}
		}
		else {
			_case_begin_1aaabda67:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1aaabd98a:;
	};
}



inline void _1d05219a1_checkResult(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	_1ea31302a_Stmt _180917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _180917_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1aaac7c80:;
			{
				jule::Ptr<_1ea30855e_UseExpr> _181221_ue = _180917_stmt._field_Data.cast_ptr<_1ea30855e_UseExpr>(&__jule_any_type66);;
				jule::Ptr<_1d0598572_Data> _181321_d = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _181221_ue.get()._field_Expr);;
				if ((_181321_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181321_d, &__jule_any_type25));;
				jule::Ptr<_1d0591889_retTypeChecker> _181821_rtc = jule::new_ptr<_1d0591889_retTypeChecker>(_1d0591889_retTypeChecker{._field_sc=_self_, ._field_types=_1eb027953_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181221_ue.get()._field_Expr.get()._field_Token, });;
				_1d059258d_check(_181821_rtc.ptr(), _181221_ue.get()._field_Expr);
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1aaac7466:;
			{
				jule::Ptr<_1ea307bbd_Expr> _182521_expr = _180917_stmt._field_Data.cast_ptr<_1ea307bbd_Expr>(&__jule_any_type55);;
				jule::Ptr<_1d0598572_Data> _182621_d = _1d05b5a12_evalExpr(_1d053c0b5_eval(_self_.get()._field_s, jule::Trait<_1d05e0476_Lookup>(_self_, 0)), _182521_expr);;
				if ((_182621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1aaacbd0b:;
						{
							jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel> _183225_m = _182621_d.get()._field_Model.cast_ptr<_1eb01ec47_BuiltinErrorCallExprModel>(&__jule_any_type24);;
							_1d0518745_processErrorCall(_self_, _183225_m,_182521_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182621_d, &__jule_any_type25));;
						}
					}
					else {
						_case_begin_1aaacc1a2:;
						{
							return;;
						}
					}
					_match_end_1aaacc14c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type64 || _match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type65) {
			_case_begin_1aaac74cc:;
			{
				_1d05217c5_checkNode(_self_, _180917_stmt._field_Data);
			}
		}
		else {
			_case_begin_1aaac7400:;
			{
				_1d05217c5_checkNode(_self_, _180917_stmt._field_Data);
				return;;
			}
		}
		_match_end_1aaac7268:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1d0521b7c_checkTree(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185417_n)--;
	};
	for (; (_self_.get()._field_i < _185417_n); (_self_.get()._field_i)++) {
		{
			_1ea31302a_Stmt _186221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1d05217c5_checkNode(_self_, _186221_stmt._field_Data);
			if (_1d0515896_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1aaace803:;
	}
	_iter_end_1aaace803:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1d05219a1_checkResult(_self_);
	};
}



inline void _1d0521e9b_checkGoto(_1d0512c28_scopeChecker* _self_, jule::Ptr<_1d0511e14_scopeGoto>& _187333_gt, jule::Ptr<_1d0511991_scopeLabel>& _187354_label) {
	jule::Ptr<_1d0512c28_scopeChecker> _187417_gtsc = _187333_gt.get()._field_scope;;
	while (((_187417_gtsc.get()._field_childIndex - 1LL) > _187354_label.get()._field_scope.get()._field_childIndex)) {
		{
			_187417_gtsc=_187417_gtsc.get()._field_parent;
		}
	_iter_next_1aaad3681:;
	}
	_iter_end_1aaad3681:;;
	jule::I64 _187917_n = 0LL;;
	if ((_187417_gtsc.get()._field_scope == _187354_label.get()._field_scope.get()._field_scope)) {
		if ((_187333_gt.get()._field_pos > _187354_label.get()._field_pos)) {
			return;;
		};
		_187917_n=_187333_gt.get()._field_pos;
	};
	jule::I64 _189217_i = (_187354_label.get()._field_pos - 1LL);;
	if ((_187917_n == 0LL)) {
		{
			auto &expr = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts;
			auto it = expr.begin();
			_iter_begin_1aaad5c8d:;
			if (it != expr.end()) {
				jule::I64 _189517_j = it - expr.begin();
				jule::Any _189520_stmt = *it;
				{
					if (_1d0509093_stmtIsGotoScope(_189520_stmt,_187417_gtsc.get()._field_scope)) {
						_187917_n=_189517_j;
						goto _iter_end_1aaad5c8d;
					};
				}
				_iter_next_1aaad5c8d:;
				++it;
				_189517_j++;
				goto _iter_begin_1aaad5c8d;
			}
			_iter_end_1aaad5c8d:;
		};
	};
	for (; (_189217_i >= _187917_n); (_189217_i)--) {
		{
			jule::Any _190521_stmt = _187354_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_189217_i];;
			if (_1d050ac32_stmtIsDef(_190521_stmt)) {
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _187333_gt.get()._field_gt.get()._field_Token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>::make({jule::Any(_187333_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
				return;;
			};
		}
	_iter_next_1aaad6b7e:;
	}
	_iter_end_1aaad6b7e:;;
}



inline void _1d0522177_checkGotos(_1d0512c28_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_gotos));
		auto it = expr.begin();
		_iter_begin_1aaad70d0:;
		if (it != expr.end()) {
			jule::Ptr<_1d0511e14_scopeGoto> _191421_gt = *it;
			{
				jule::Ptr<_1d0511991_scopeLabel> _191521_label = _1d0516a0c_findLabelAll(&(*_self_), _191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191521_label == nullptr)) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _191421_gt.get()._field_gt.get()._field_Token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>::make({jule::Any(_191421_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type7)}));
					goto _iter_next_1aaad70d0;
				};
				_191521_label.get()._field_used=true;
				_1d0521e9b_checkGoto(&(*_self_), _191421_gt,_191521_label);
			}
			_iter_next_1aaad70d0:;
			++it;
			goto _iter_begin_1aaad70d0;
		}
		_iter_end_1aaad70d0:;
	};
}



inline void _1d0522353_checkLabels(_1d0512c28_scopeChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_labels));
		auto it = expr.begin();
		_iter_begin_1aaad8c6e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0511991_scopeLabel> _192716_l = *it;
			{
				if ((!(_192716_l.get()._field_used))) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _192716_l.get()._field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_192716_l.get()._field_label.get()._field_Ident, &__jule_any_type7)}));
				};
			}
			_iter_next_1aaad8c6e:;
			++it;
			goto _iter_begin_1aaad8c6e;
		}
		_iter_end_1aaad8c6e:;
	};
}



inline void _1d052252e_checkVars(_1d0512c28_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1aaadc569:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _193516_v = *it;
			{
				if (((((!(_193516_v.get()._field_Used)) && (!(_212a0ea50_IsIgnoreIdent(_193516_v.get()._field_Ident)))) && (!(_212a0ece7_IsAnonIdent(_193516_v.get()._field_Ident)))) && (_193516_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _193516_v.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_193516_v.get()._field_Ident, &__jule_any_type7)}));
				};
			}
			_iter_next_1aaadc569:;
			++it;
			goto _iter_begin_1aaadc569;
		}
		_iter_end_1aaadc569:;
	};
}



inline void _1d052270a_checkAliases(_1d0512c28_scopeChecker* _self_) {
	{
		auto &expr = (*_self_)._field_table.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1aaade4e4:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c3811_TypeAlias> _194316_a = *it;
			{
				if ((((!(_194316_a.get()._field_Used)) && (!(_212a0ea50_IsIgnoreIdent(_194316_a.get()._field_Ident)))) && (!(_212a0ece7_IsAnonIdent(_194316_a.get()._field_Ident))))) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _194316_a.get()._field_Token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>::make({jule::Any(_194316_a.get()._field_Ident, &__jule_any_type7)}));
				};
			}
			_iter_next_1aaade4e4:;
			++it;
			goto _iter_begin_1aaade4e4;
		}
		_iter_end_1aaade4e4:;
	};
}



inline void _1d0522a29_check(jule::Ptr<_1d0512c28_scopeChecker> _self_, jule::Ptr<_1ea313635_ScopeTree>& _195130_tree, jule::Ptr<_1d050b1b6_Scope>& _195153_s) {
	_195153_s.get()._field_Deferred=_195130_tree.get()._field_Deferred;
	_195153_s.get()._field_Unsafety=_195130_tree.get()._field_Unsafety;
	jule::I64 _195513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=_195130_tree;
	_self_.get()._field_scope=_195153_s;
	_1d0521b7c_checkTree(_self_);
	if ((_195513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1d052252e_checkVars(_self_.ptr());
		_1d052270a_checkAliases(_self_.ptr());
		if (_1d0515456_isRoot(_self_.ptr())) {
			_1d0522177_checkGotos(_self_.ptr());
			_1d0522353_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1d0512c28_scopeChecker> _1d0522c8d_newChildChecker(jule::Ptr<_1d0512c28_scopeChecker> _self_) {
	jule::Ptr<_1d0512c28_scopeChecker> _197517_base = _1d05081e6_newScopeCheckerBase(_self_.get()._field_s,nullptr);;
	_197517_base.get()._field_parent=_self_;
	_197517_base.get()._field_labels=_self_.get()._field_labels;
	_197517_base.get()._field_gotos=_self_.get()._field_gotos;
	_197517_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0512c28_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d0523c7d_checkCdef(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _1629_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aaae58a2:;
			{
				if ((*_self_)._field_o.cast_ptr<_1eb023b80_Fn>(&__jule_any_type67).get()._field_CppLinked) {
					goto _match_end_1aaae5ae4;
				};
				goto _case_begin_1aaae5b49;
			}
		}
		else {
			_case_begin_1aaae5b49:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_1629_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aaae5ae4:;
	};
	if ((_1629_d.get()._field_Args.len() > 0LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _1629_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d0524003_checkTypedef(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _3232_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aaae8157:;
			{
				if ((*_self_)._field_o.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68).get()._field_CppLinked) {
					goto _match_end_1aaae8388;
				};
				goto _case_begin_1aaae83dd;
			}
		}
		else {
			_case_begin_1aaae83dd:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_3232_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aaae8388:;
	};
	if ((_3232_d.get()._field_Args.len() > 0LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _3232_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d0524278_checkDerive(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _4831_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aaaea92e:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68).get()._field_CppLinked))) {
					goto _match_end_1aaaeab60;
				};
				goto _case_begin_1aaaeabb5;
			}
		}
		else {
			_case_begin_1aaaeabb5:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aaaeab60:;
	};
	if ((_4831_d.get()._field_Args.len() == 0LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	} else if ((_4831_d.get()._field_Args.len() > 1LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ _4831_d.get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1aaaee5e2:;
		}
		else {
			_case_begin_1aaaeb8a8:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _4831_d.get()._field_Args[0LL],jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_4831_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aaaee229:;
	};
}



inline void _1d05244ed_checkNamespace(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _7438_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aaaee526:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68).get()._field_CppLinked))) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aab00b65:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1eb023b80_Fn>(&__jule_any_type67).get()._field_CppLinked))) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aab00bcb:;
			{
				if ((!((*_self_)._field_o.cast_ptr<_1d0550a13_Var>(&__jule_any_type10).get()._field_CppLinked))) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else {
			_case_begin_1aab00aaa:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_7438_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aab00a55:;
	};
	if ((_7438_d.get()._field_Args.len() == 0LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return;;
	} else if ((_7438_d.get()._field_Args.len() > 1LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _7438_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_212a0c2ab_Token> _9913_arg = _7438_d.get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _9913_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_7438_d.get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL,(_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aab092bc:;
			{
				if ((_1d05bdba2_findDirective((*((*_self_)._field_d)),jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1ea2c0405_Directive> _11625_typedef = jule::new_ptr<_1ea2c0405_Directive>(_1ea2c0405_Directive{._field_Tag=_7438_d.get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*_self_)._field_d))=jule::append((*((*_self_)._field_d)),jule::Slice<jule::Ptr<_1ea2c0405_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1aab07991:;
	};
}



inline void _1d0524773_checkDeprecated(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _12539_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1aab09ab4:;
			{
				if ((*_self_)._field_o.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68).get()._field_CppLinked) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aab0b577:;
			{
				if ((*_self_)._field_o.cast_ptr<_1eb023b80_Fn>(&__jule_any_type67).get()._field_CppLinked) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aab0b5dd:;
			{
				if ((*_self_)._field_o.cast_ptr<_1d0550a13_Var>(&__jule_any_type10).get()._field_CppLinked) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
				};
			}
		}
		else {
			_case_begin_1aab0ae6c:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_12539_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aab0acb3:;
	};
	if ((_12539_d.get()._field_Args.len() == 0LL)) {
		return;;
	};
	if ((_12539_d.get()._field_Args.len() > 1LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _12539_d.get()._field_Args[1LL],jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_212a0c2ab_Token> _15013_arg = _12539_d.get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _15013_arg,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_12539_d.get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL,(_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1d05249e8_checkTest(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _16429_d) {
	{
		auto &_match_expr{ (*_self_)._field_o };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1aab13dcb:;
			{
				jule::Ptr<_1eb023b80_Fn> _16717_f = (*_self_)._field_o.cast_ptr<_1eb023b80_Fn>(&__jule_any_type67);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1eb02482e_IsInit(_16717_f.ptr())))) && (!(_1eb0245ba_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1aab146e5;
				};
				if (_1eb024356_IsMethod(_16717_f.ptr())) {
					_1d05356c9_pushErr((*_self_)._field_s.ptr(), _16717_f.get()._field_Token,jule::Str("you cannot declare test methods", 31),jule::Slice<jule::Any>());
					goto _match_end_1aab146e5;
				};
				goto _case_begin_1aab14849;
			}
		}
		else {
			_case_begin_1aab14849:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_16429_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aab146e5:;
	};
	if ((_16429_d.get()._field_Args.len() > 0LL)) {
		_1d05356c9_pushErr((*_self_)._field_s.ptr(), _16429_d.get()._field_Args[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1d0524c6d_checkDirective(_1d052383d_directiveChecker* _self_, jule::Ptr<_1ea2c0405_Directive>& _18538_d) {
	{
		auto &_match_expr{ _18538_d.get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1aab18771:;
			{
				_1d0523c7d_checkCdef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1aab187d7:;
			{
				_1d0524003_checkTypedef(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1aab1884d:;
			{
				_1d0524278_checkDerive(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1aab188b4:;
			{
				_1d05244ed_checkNamespace(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1aab19541:;
			{
				_1d0524773_checkDeprecated(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1aab195a7:;
			{
				_1d05249e8_checkTest(&(*_self_), _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1aab1961d:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("directive @ is not supported by define", 38),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		else {
			_case_begin_1aab1870a:;
			{
				_1d05356c9_pushErr((*_self_)._field_s.ptr(), _18538_d.get()._field_Tag,jule::Str("invalid label: @", 16),jule::Slice<jule::Any>::make({jule::Any(_18538_d.get()._field_Tag.get()._field_Kind, &__jule_any_type7)}));
			}
		}
		_match_end_1aab186a5:;
	};
}



inline void _1d0524e49_check(_1d052383d_directiveChecker* _self_) {
	{
		auto &expr = (*((*_self_)._field_d));
		auto it = expr.begin();
		_iter_begin_1aab1bb70:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _20821_d = *it;
			{
				_1d0524c6d_checkDirective(&(*_self_), _20821_d);
			}
			_iter_next_1aab1bb70:;
			++it;
			goto _iter_begin_1aab1bb70;
		}
		_iter_end_1aab1bb70:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d052383d_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d0529dd8_FindPackage(_1d05298bb_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d052a1e6_SelectPackage(_1d05298bb_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1d0550a13_Var> _1d052a59d_FindVar(_1d05298bb_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _19226_ident)))) {
		return nullptr;;
	};
	return _1d05270d3_findVarInPackage((*_self_)._field_Package.get()._field_Files,_19226_ident,false);;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d052a955_FindTypeAlias(_1d05298bb_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _20432_ident)))) {
		return nullptr;;
	};
	return _1d0527512_findTypeAliasInPackage((*_self_)._field_Package.get()._field_Files,_20432_ident,false);;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d052ad0c_FindStruct(_1d05298bb_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _21629_ident)))) {
		return nullptr;;
	};
	return _1d05278ec_findStructInPackage((*_self_)._field_Package.get()._field_Files,_21629_ident,false);;
}



inline jule::Ptr<_1eb023b80_Fn> _1d052b1b4_FindFn(_1d05298bb_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _22825_ident)))) {
		return nullptr;;
	};
	return _1d0527d5e_findFnInPackage((*_self_)._field_Package.get()._field_Files,_22825_ident,false);;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d052b4c2_FindTrait(_1d05298bb_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _23928_ident)))) {
		return nullptr;;
	};
	return _1d052816c_findTraitInPackage((*_self_)._field_Package.get()._field_Files,_23928_ident);;
}



inline jule::Ptr<_1d05005ea_Enum> _1d052b7d0_FindEnum(_1d05298bb_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _25027_ident)))) {
		return nullptr;;
	};
	return _1d05284ad_findEnumInPackage((*_self_)._field_Package.get()._field_Files,_25027_ident);;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d052badd_FindTypeEnum(_1d05298bb_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1d052be84_isLookupable(&(*_self_), _26131_ident)))) {
		return nullptr;;
	};
	return _1d05287ee_findTypeEnumInPackage((*_self_)._field_Package.get()._field_Files,_26131_ident);;
}



inline jule::Bool _1d052be84_isLookupable(_1d05298bb_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*_self_)._field_CppLinked) {
		return false;;
	};
	if ((!((*_self_)._field_ImportAll))) {
		if ((((*_self_)._field_Alias.len() != 0LL) || _1d052c292_existIdent(&(*_self_), jule::Str("self", 4)))) {
			return true;;
		};
		if (((*_self_)._field_Selected.len() > 0LL)) {
			if ((!(_1d052c292_existIdent(&(*_self_), _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1d052c292_existIdent(_1d05298bb_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto &expr = (*_self_)._field_Selected;
		auto it = expr.begin();
		_iter_begin_1aab3227e:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_29116_sident = *it;
			{
				if ((_29116_sident.get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1aab3227e:;
			++it;
			goto _iter_begin_1aab3227e;
		}
		_iter_end_1aab3227e:;
	};
	return false;;
}



inline jule::Bool _1d052c528_isAccessibleViaSelection(_1d05298bb_ImportInfo* _self_) {
	return (((*_self_)._field_ImportAll || ((*_self_)._field_Selected.len() == 0LL)) || _1d052c292_existIdent(&(*_self_), jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05298bb_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d052cced_FindPackage(_1d052c825_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d052d10b_SelectPackage(_1d052c825_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1d0550a13_Var> _1d052d4b3_FindVar(_1d052c825_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1d05270d3_findVarInPackage((*_self_)._field_Files,_32026_ident,_32038_cpp_linked);;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d052d86a_FindTypeAlias(_1d052c825_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1d0527512_findTypeAliasInPackage((*_self_)._field_Files,_32632_ident,_32644_cpp_linked);;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d052dc22_FindStruct(_1d052c825_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1d05278ec_findStructInPackage((*_self_)._field_Files,_33229_ident,_33241_cpp_linked);;
}



inline jule::Ptr<_1eb023b80_Fn> _1d052e0c9_FindFn(_1d052c825_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1d0527d5e_findFnInPackage((*_self_)._field_Files,_33825_ident,_33837_cpp_linked);;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d052e3d7_FindTrait(_1d052c825_Package* _self_, jule::Str _34428_ident) {
	return _1d052816c_findTraitInPackage((*_self_)._field_Files,_34428_ident);;
}



inline jule::Ptr<_1d05005ea_Enum> _1d052e6e5_FindEnum(_1d052c825_Package* _self_, jule::Str _35027_ident) {
	return _1d05284ad_findEnumInPackage((*_self_)._field_Files,_35027_ident);;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d052ea03_FindTypeEnum(_1d052c825_Package* _self_, jule::Str _35631_ident) {
	return _1d05287ee_findTypeEnumInPackage((*_self_)._field_Files,_35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d052c825_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d0533034_FindPackage(_1d0532a17_Sema* _self_, jule::Str _22330_ident) {
	return _1d0593c65_FindPackage((*_self_)._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d0533342_SelectPackage(_1d0532a17_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _23332_selector) {
	return _1d0594073_SelectPackage((*_self_)._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1d0550a13_Var> _1d05336e9_FindVar(_1d0532a17_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1d0550a13_Var> _24517_v = _1d05270d3_findVarInPackage((*_self_)._field_files,_24326_ident,_24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab5588a:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_25121_imp,_24326_ident)))) {
					goto _iter_next_1aab5588a;
				};
				_24517_v=_1d052a59d_FindVar(_25121_imp.ptr(), _24326_ident,_24338_cpp_linked);
				if (((_24517_v != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _24517_v.get()._field_Public,_24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1aab5588a:;
			++it;
			goto _iter_begin_1aab5588a;
		}
		_iter_end_1aab5588a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d0533aa1_FindTypeAlias(_1d0532a17_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1d05c3811_TypeAlias> _27217_ta = _1d0527512_findTypeAliasInPackage((*_self_)._field_files,_27032_ident,_27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab58195:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_27821_imp,_27032_ident)))) {
					goto _iter_next_1aab58195;
				};
				_27217_ta=_1d052a955_FindTypeAlias(_27821_imp.ptr(), _27032_ident,_27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _27217_ta.get()._field_Public,_27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1aab58195:;
			++it;
			goto _iter_begin_1aab58195;
		}
		_iter_end_1aab58195:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d0533e58_FindStruct(_1d0532a17_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_1ea31ed8e_Struct> _29917_s = _1d05278ec_findStructInPackage((*_self_)._field_files,_29729_ident,_29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab5a9a0:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_30421_imp,_29729_ident)))) {
					goto _iter_next_1aab5a9a0;
				};
				_29917_s=_1d052ad0c_FindStruct(_30421_imp.ptr(), _29729_ident,_29741_cppLinked);
				if (((_29917_s != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _29917_s.get()._field_Public,_29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1aab5a9a0:;
			++it;
			goto _iter_begin_1aab5a9a0;
		}
		_iter_end_1aab5a9a0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1eb023b80_Fn> _1d0534310_FindFn(_1d0532a17_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1eb023b80_Fn> _32417_f = _1d0527d5e_findFnInPackage((*_self_)._field_files,_32225_ident,_32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab5d2aa:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_33021_imp,_32225_ident)))) {
					goto _iter_next_1aab5d2aa;
				};
				_32417_f=_1d052b1b4_FindFn(_33021_imp.ptr(), _32225_ident,_32237_cpp_linked);
				if (((_32417_f != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _32417_f.get()._field_Public,_32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1aab5d2aa:;
			++it;
			goto _iter_begin_1aab5d2aa;
		}
		_iter_end_1aab5d2aa:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d053461d_FindTrait(_1d0532a17_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1d04ed4a5_Trait> _35117_t = _1d052816c_findTraitInPackage((*_self_)._field_files,_34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab60c08:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_35721_imp,_34928_ident)))) {
					goto _iter_next_1aab60c08;
				};
				_35117_t=_1d052b4c2_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _35117_t.get()._field_Public,_35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1aab60c08:;
			++it;
			goto _iter_begin_1aab60c08;
		}
		_iter_end_1aab60c08:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05005ea_Enum> _1d053492b_FindEnum(_1d0532a17_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1d05005ea_Enum> _37817_e = _1d05284ad_findEnumInPackage((*_self_)._field_files,_37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab632b0:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_38421_imp,_37627_ident)))) {
					goto _iter_next_1aab632b0;
				};
				_37817_e=_1d052b7d0_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _37817_e.get()._field_Public,_37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1aab632b0:;
			++it;
			goto _iter_begin_1aab632b0;
		}
		_iter_end_1aab632b0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d0534c39_FindTypeEnum(_1d0532a17_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1d0501be5_TypeEnum> _40517_e = _1d05287ee_findTypeEnumInPackage((*_self_)._field_files,_40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab65867:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1d053143e_impIsLookupable(_41121_imp,_40331_ident)))) {
					goto _iter_next_1aab65867;
				};
				_40517_e=_1d052badd_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1d0535da0_isAccessibleDefine(&(*_self_), _40517_e.get()._field_Public,_40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1aab65867:;
			++it;
			goto _iter_begin_1aab65867;
		}
		_iter_end_1aab65867:;
	};
	return nullptr;;
}



inline jule::Bool _1d053508b_isFlag(_1d0532a17_Sema* _self_, jule::I64 _42721_flags) {
	return (((*_self_)._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1d0535311_setCurrentFile(_1d0532a17_Sema* _self_, jule::Ptr<_1d0593748_SymbolTable> _42937_f) {
	(*_self_)._field_file=_42937_f;
}



inline void _1d05356c9_pushErr(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1d05310ed_compilerErr(_43126_token,true,_43141_fmt,_43154_args));;
}



inline void _1d05359e8_pushSugggestion(_1d0532a17_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1d0532583_pushSugggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_43634_fmt,_43647_args);
	};
}



inline jule::Bool _1d0535da0_isAccessibleDefine(_1d0532a17_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_212a0c2ab_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_212a1303c_Dir((*_self_)._field_file.get()._field_File.ptr()) == _212a1303c_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1d0536301_isDuplicatedIdent(_1d0532a17_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1aab6bd02:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> &_44916_f = *it;
			{
				if (_1d0596c46_isDuplicatedIdent(_44916_f.ptr(), _44832_itself,_44849_ident,_44861_cpp_linked)) {
					return true;;
				};
				{
					auto &expr = _44916_f.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1aab6cb7c:;
					if (it != expr.end()) {
						jule::Ptr<_1d05298bb_ImportInfo> &_45420_imp = *it;
						{
							{
								auto &expr = _45420_imp.get()._field_Selected;
								auto it = expr.begin();
								_iter_begin_1aab6d441:;
								if (it != expr.end()) {
									jule::Ptr<_212a0c2ab_Token> &_45524_selected = *it;
									{
										if ((_45524_selected.get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1aab6d441:;
									++it;
									goto _iter_begin_1aab6d441;
								}
								_iter_end_1aab6d441:;
							};
						}
						_iter_next_1aab6cb7c:;
						++it;
						goto _iter_begin_1aab6cb7c;
					}
					_iter_end_1aab6cb7c:;
				};
			}
			_iter_next_1aab6bd02:;
			++it;
			goto _iter_begin_1aab6bd02;
		}
		_iter_end_1aab6bd02:;
	};
	return false;;
}



inline void _1d0536620_checkDirectives(jule::Ptr<_1d0532a17_Sema> _self_, jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _46540_d, jule::Any _46566_o) {
	_1d052383d_directiveChecker _46617_dc = _1d052383d_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1ea2c0405_Directive>>>)((&(_46540_d)))), ._field_o=_46566_o};;
	_1d0524e49_check(&_46617_dc);
}



inline jule::Bool _1d0536a71_checkGenericQuantity(_1d0532a17_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_212a0c2ab_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1aab71169:;
			{
				_1d05356c9_pushErr(&(*_self_), _47466_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1aab70982:;
			{
				_1d05356c9_pushErr(&(*_self_), _47466_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1aab709e8:;
			{
				_1d05356c9_pushErr(&(*_self_), _47466_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1aab70a70:;
			{
				_1d05356c9_pushErr(&(*_self_), _47466_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aab7091b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aab70850:;
	};
}



inline jule::Bool _1d0536e4a_isDuplicatedImportSelection(_1d0532a17_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aab72467:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> &_49416_imp = *it;
			{
				if ((static_cast<jule::Uintptr>(_49416_imp) == _49342_itself)) {
					goto _iter_end_1aab72467;
				};
				if (_1d052c292_existIdent(_49416_imp.ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1aab72467:;
			++it;
			goto _iter_begin_1aab72467;
		}
		_iter_end_1aab72467:;
	};
	return false;;
}



inline jule::Any _1d0537313_getImportDef(_1d0532a17_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1d05298bb_ImportInfo>& _50644_imp) {
	if ((_1d05ea3e8_findPackageBuiltinDef(_50644_imp.get()._field_LinkPath,_50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type6);;
	};
	{
		auto &expr = _50644_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1aab75536:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1d05967e5_defByIdent(_51021_f.ptr(), _50627_ident,false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1aab75536:;
			++it;
			goto _iter_begin_1aab75536;
		}
		_iter_end_1aab75536:;
	};
	return nullptr;;
}



inline jule::Bool _1aab7c0ba_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1d0550a13_Var>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aab8108b_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1d05c3811_TypeAlias>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aab85029_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1ea31ed8e_Struct>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aab8914e_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1d04ed4a5_Trait>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aab8d0dc_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1d05005ea_Enum>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aab9207a_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1d0501be5_TypeEnum>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1aab96018_checkImportSelection(_1d0532a17_Sema* _self_, jule::Ptr<_212a0c2ab_Token>& _52143_ident, jule::Ptr<_1eb023b80_Fn>& _52159_s) {
	if ((!(_1d0535da0_isAccessibleDefine(&(*_self_), _52159_s.get()._field_Public,_52159_s.get()._field_Token)))) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52143_ident.get()._field_Kind, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d0528ce9_defByIdentPackage((*_self_)._field_files,_52159_s.get()._field_Ident,false) != nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _52143_ident,jule::Str("selected identifier \"@\" is already exist in this package", 56),jule::Slice<jule::Any>::make({jule::Any(_52159_s.get()._field_Ident, &__jule_any_type7)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1d05379ea_checkImportSelectedSelections(_1d0532a17_Sema* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _53553_imp.get()._field_Selected;
		auto it = expr.begin();
		_iter_begin_1aab778ac:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1aab778ac;
				};
				if (_1d0536e4a_isDuplicatedImportSelection(&(*_self_), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53553_imp)),_53716_ident.get()._field_Kind)) {
					_1d05356c9_pushErr(&(*_self_), _53716_ident,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type7)}));
					_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1aab778ac;
				};
				jule::Any _54921_def = _1d0537313_getImportDef(&(*_self_), _53716_ident.get()._field_Kind,_53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type6) {
						_case_begin_1aab7ab79:;
						{
							goto _iter_next_1aab778ac;
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1aab780b6:;
						{
							jule::Ptr<_1d0550a13_Var> _55525_v = _54921_def.cast_ptr<_1d0550a13_Var>(&__jule_any_type10);;
							__jule_func_result=(_1aab7c0ba_checkImportSelection(&(*_self_), _53716_ident,_55525_v) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1aab7a1ea:;
						{
							jule::Ptr<_1d05c3811_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1d05c3811_TypeAlias>(&__jule_any_type69);;
							__jule_func_result=(_1aab8108b_checkImportSelection(&(*_self_), _53716_ident,_55825_ta) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1aab7a272:;
						{
							jule::Ptr<_1ea31ed8e_Struct> _56125_s = _54921_def.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68);;
							__jule_func_result=(_1aab85029_checkImportSelection(&(*_self_), _53716_ident,_56125_s) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type12) {
						_case_begin_1aab7a2e9:;
						{
							jule::Ptr<_1d04ed4a5_Trait> _56425_t = _54921_def.cast_ptr<_1d04ed4a5_Trait>(&__jule_any_type12);;
							__jule_func_result=(_1aab8914e_checkImportSelection(&(*_self_), _53716_ident,_56425_t) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type70) {
						_case_begin_1aab7a371:;
						{
							jule::Ptr<_1d05005ea_Enum> _56725_e = _54921_def.cast_ptr<_1d05005ea_Enum>(&__jule_any_type70);;
							__jule_func_result=(_1aab8d0dc_checkImportSelection(&(*_self_), _53716_ident,_56725_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1aab7ad99:;
						{
							jule::Ptr<_1d0501be5_TypeEnum> _57025_e = _54921_def.cast_ptr<_1d0501be5_TypeEnum>(&__jule_any_type71);;
							__jule_func_result=(_1aab9207a_checkImportSelection(&(*_self_), _53716_ident,_57025_e) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1aab7ae21:;
						{
							jule::Ptr<_1eb023b80_Fn> _57325_f = _54921_def.cast_ptr<_1eb023b80_Fn>(&__jule_any_type67);;
							__jule_func_result=(_1aab96018_checkImportSelection(&(*_self_), _53716_ident,_57325_f) && __jule_func_result);
						}
					}
					else {
						_case_begin_1aab7a085:;
						{
							_1d05356c9_pushErr(&(*_self_), _53716_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type7)}));
							__jule_func_result=false;
							goto _iter_next_1aab778ac;
						}
					}
					_match_end_1aab7a030:;
				};
			}
			_iter_next_1aab778ac:;
			++it;
			goto _iter_begin_1aab778ac;
		}
		_iter_end_1aab778ac:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab9a4a1_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d0550a13_Var>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aab9c184:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab7c0ba_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aab9c184:;
			++it;
			goto _iter_begin_1aab9c184;
		}
		_iter_end_1aab9c184:;
	};
	return _58517_ok;;
}

inline jule::Bool _1aab9da37_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aab9ee01:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c3811_TypeAlias> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab8108b_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aab9ee01:;
			++it;
			goto _iter_begin_1aab9ee01;
		}
		_iter_end_1aab9ee01:;
	};
	return _58517_ok;;
}

inline jule::Bool _1aab9e142_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aaba2b5c:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab85029_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aaba2b5c:;
			++it;
			goto _iter_begin_1aaba2b5c;
		}
		_iter_end_1aaba2b5c:;
	};
	return _58517_ok;;
}

inline jule::Bool _1aaba4510_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1eb023b80_Fn>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aaba58da:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab96018_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aaba58da:;
			++it;
			goto _iter_begin_1aaba58da;
		}
		_iter_end_1aaba58da:;
	};
	return _58517_ok;;
}

inline jule::Bool _1aaba4b2b_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d04ed4a5_Trait>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aaba8602:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab8914e_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aaba8602:;
			++it;
			goto _iter_begin_1aaba8602;
		}
		_iter_end_1aaba8602:;
	};
	return _58517_ok;;
}

inline jule::Bool _1aaba7843_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d05005ea_Enum>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aabab319:;
		if (it != expr.end()) {
			jule::Ptr<_1d05005ea_Enum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab8d0dc_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aabab319:;
			++it;
			goto _iter_begin_1aabab319;
		}
		_iter_end_1aabab319:;
	};
	return _58517_ok;;
}

inline jule::Bool _1aabaa55a_checkImportsAllSelectionsFromCollection(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d0501be5_TypeEnum>>& _58462_s, jule::Ptr<_212a0c2ab_Token>& _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto &expr = _58462_s;
		auto it = expr.begin();
		_iter_begin_1aabae0b9:;
		if (it != expr.end()) {
			jule::Ptr<_1d0501be5_TypeEnum> &_58616_d = *it;
			{
				if (_58616_d.get()._field_Public) {
					_58517_ok=(_1aab9207a_checkImportSelection(&(*_self_), _58471_et,_58616_d) && _58517_ok);
				};
			}
			_iter_next_1aabae0b9:;
			++it;
			goto _iter_begin_1aabae0b9;
		}
		_iter_end_1aabae0b9:;
	};
	return _58517_ok;;
}



inline jule::Bool _1d0538226_checkImportAllSelections(_1d0532a17_Sema* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _59444_imp.get()._field_Package.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1aab7b53c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> &_59616_file = *it;
			{
				__jule_func_result=(_1aab9a4a1_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Vars,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1aab9da37_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeAliases,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1aab9e142_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Structs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1aaba4510_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Funcs,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1aaba4b2b_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Traits,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1aaba7843_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_Enums,_59444_imp.get()._field_Token) && __jule_func_result);
				__jule_func_result=(_1aabaa55a_checkImportsAllSelectionsFromCollection(&(*_self_), _59616_file.get()._field_TypeEnums,_59444_imp.get()._field_Token) && __jule_func_result);
			}
			_iter_next_1aab7b53c:;
			++it;
			goto _iter_begin_1aab7b53c;
		}
		_iter_end_1aab7b53c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d0538545_checkImportSelections(_1d0532a17_Sema* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _60845_imp) {
	jule::Bool __jule_func_result = false;
	if ((_60845_imp.get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1d05379ea_checkImportSelectedSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	} else if (_60845_imp.get()._field_ImportAll) {
		__jule_func_result = _1d0538226_checkImportAllSelections(&(*_self_), _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d0538853_isUseAliasDuplication(_1d0532a17_Sema* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _61741_imp) {
	if ((_61741_imp.get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aabb18d5:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == _61741_imp)) {
					goto _iter_end_1aabb18d5;
				};
				if ((_62221_imp2.get()._field_Alias == _61741_imp.get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == _61741_imp.get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1aabb18d5:;
			++it;
			goto _iter_begin_1aabb18d5;
		}
		_iter_end_1aabb18d5:;
	};
	return false;;
}



inline jule::Bool _1d0538b61_checkImport(_1d0532a17_Sema* _self_, jule::Ptr<_1d05298bb_ImportInfo>& _63735_imp) {
	if ((_63735_imp.get()._field_CppLinked || (_63735_imp.get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1d0538853_isUseAliasDuplication(&(*_self_), _63735_imp)) {
		_1d05356c9_pushErr(&(*_self_), _63735_imp.get()._field_Token,jule::Str("identifier duplication: @ is already used for another use declaration above", 75),jule::Slice<jule::Any>::make({jule::Any(_63735_imp.get()._field_Alias, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>());
	};
	if ((!(_63735_imp.get()._field_Duplicate))) {
		jule::Ptr<_1d0532a17_Sema> _64821_sema = jule::new_ptr<_1d0532a17_Sema>(_1d0532a17_Sema{._field_flags=(*_self_)._field_flags});;
		_1d054c966_check(_64821_sema, _63735_imp.get()._field_Package.get()._field_Files);
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*_self_)._field_errors=jule::append((*_self_)._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1d0538545_checkImportSelections(&(*_self_), _63735_imp);;
}



inline void _1d0538d3c_checkImports(_1d0532a17_Sema* _self_) {
	{
		auto &expr = (*_self_)._field_files;
		auto it = expr.begin();
		_iter_begin_1aabb74e0:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _66221_file = *it;
			{
				_1d0535311_setCurrentFile(&(*_self_), _66221_file);
				{
					auto &expr = _66221_file.get()._field_Imports;
					auto it = expr.begin();
					_iter_begin_1aabb814a:;
					if (it != expr.end()) {
						jule::Ptr<_1d05298bb_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1d0538b61_checkImport(&(*_self_), _66425_imp);;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1aabb814a:;
						++it;
						goto _iter_begin_1aabb814a;
					}
					_iter_end_1aabb814a:;
				};
			}
			_iter_next_1aabb74e0:;
			++it;
			goto _iter_begin_1aabb74e0;
		}
		_iter_end_1aabb74e0:;
	};
}



inline void _1d0539018_implFileImpls(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Impls;
		auto it = expr.begin();
		_iter_begin_1aabb7c1b:;
		if (it != expr.end()) {
			jule::Ptr<_1d050615b_Impl> _67521_imp = *it;
			{
				_1d0544a4b_implImpl(_self_, _67521_imp);
			}
			_iter_next_1aabb7c1b:;
			++it;
			goto _iter_begin_1aabb7c1b;
		}
		_iter_end_1aabb7c1b:;
	};
}



inline void _1d05391e4_implImpls(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aabb9c2e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _68121_file = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _68121_file);
				_1d0539018_implFileImpls(_self_);
			}
			_iter_next_1aabb9c2e:;
			++it;
			goto _iter_begin_1aabb9c2e;
		}
		_iter_end_1aabb9c2e:;
	};
}



inline void _1d05393c0_checkEnums(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aabbaca7:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _68821_file = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _68821_file);
				_1d0542175_checkEnumDecls(_self_);
			}
			_iter_next_1aabbaca7:;
			++it;
			goto _iter_begin_1aabbaca7;
		}
		_iter_end_1aabbaca7:;
	};
}



inline _1d05d2d70_typeChecker _1d0539821_typeChecker(jule::Ptr<_1d0532a17_Sema> _self_, jule::Trait<_1d05e0476_Lookup> _69435_l, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _69450_generics, jule::Ptr<_1d05d1e90_referencer> _69513_referencer) {
	_1d05d2d70_typeChecker _69617_tc = _1d05d2d70_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1aabbc748:;
			{
				jule::Ptr<_1d0512c28_scopeChecker> _70521_hard = _1d05160d3_getHardRoot(_69435_l.operator jule::Ptr<_1d0512c28_scopeChecker>());;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1aabbc65a:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type69) {
				_case_begin_1aabbdb9a:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_1d05c3811_TypeAlias>(&__jule_any_type69);
				}
			}
			_match_end_1aabbdb45:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d0539d1b_buildTypeWithRefers(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea30369c_TypeDecl>& _72144_t, jule::Trait<_1d05e0476_Lookup> _72167_l, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _72213_generics, jule::Ptr<_1d05d1e90_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _1d0539821_typeChecker(_self_, _72167_l,_72213_generics,_72241_referencer); _1d05da0db_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _1d053a316_checkTypeWithRefers(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05c88d2_TypeSymbol>& _72844_t, jule::Trait<_1d05e0476_Lookup> _72864_l, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _72913_generics, jule::Ptr<_1d05d1e90_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1d05c8c89_checked(_72844_t.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_72844_t.get()._field_Kind=_1d0539d1b_buildTypeWithRefers(_self_, _72844_t.get()._field_Decl,_72864_l,_72913_generics,_72941_referencer);
	__jule_func_result = _1d05c8c89_checked(_72844_t.ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1d0504225_constraintChecker> _1d053a57a_constraintChecker(jule::Ptr<_1d0532a17_Sema> _self_) {
	return jule::new_ptr<_1d0504225_constraintChecker>(_1d0504225_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1d053a932_checkType(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05c88d2_TypeSymbol>& _74334_t, jule::Trait<_1d05e0476_Lookup> _74354_l) {
	return _1d053a316_checkTypeWithRefers(_self_, _74334_t,_74354_l,nullptr,nullptr);;
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d053ad83_buildTypeWithGenerics(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea30369c_TypeDecl>& _74946_t, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _75013_generics, jule::Ptr<_1d04e218b_ReferenceStack> _75041_refers) {
	jule::Ptr<_1d05d2d70_typeChecker> _75117_tc = jule::new_ptr<_1d05d2d70_typeChecker>(_1d05d2d70_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _1d05da0db_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d053b191_buildType(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea30369c_TypeDecl>& _76234_t) {
	return _1d053ad83_buildTypeWithGenerics(_self_, _76234_t,nullptr,nullptr);;
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d053b49e_selectType(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea30369c_TypeDecl>& _76735_t) {
	jule::Ptr<_1d05d2d70_typeChecker> _76817_tc = jule::new_ptr<_1d05d2d70_typeChecker>(_1d05d2d70_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1d05da0db_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_1d059a0e0_Eval> _1d053b900_evalpd(jule::Ptr<_1d0532a17_Sema> _self_, jule::Trait<_1d05e0476_Lookup> _77930_l, jule::Ptr<_1d05c4504_TypeKind> _77945_p, jule::Ptr<_1d0550a13_Var> _77963_owner) {
	jule::Ptr<_1d059a0e0_Eval> _78017_e = jule::new_ptr<_1d059a0e0_Eval>(_1d059a0e0_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1aabc6dd4:;
			{
				_78017_e.get()._field_unsafety=_1d05151e2_isUnsafe(_77930_l.operator jule::Ptr<_1d0512c28_scopeChecker>());
			}
		}
		_match_end_1aabc6d6d:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_1d059a0e0_Eval> _1d053bca7_evalp(jule::Ptr<_1d0532a17_Sema> _self_, jule::Trait<_1d05e0476_Lookup> _79429_l, jule::Ptr<_1d05c4504_TypeKind> _79444_p) {
	return _1d053b900_evalpd(_self_, _79429_l,_79444_p,nullptr);;
}



inline jule::Ptr<_1d059a0e0_Eval> _1d053c0b5_eval(jule::Ptr<_1d0532a17_Sema> _self_, jule::Trait<_1d05e0476_Lookup> _79928_l) {
	return _1d053bca7_evalp(_self_, _79928_l,nullptr);;
}



inline jule::Bool _1d053c5b0_checkAssignType(jule::Ptr<_1d0532a17_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_1d05c4504_TypeKind>& _80357_dest, jule::Ptr<_1d0598572_Data>& _80414_d, jule::Ptr<_212a0c2ab_Token> _80428_errorToken) {
	if (_80414_d.get()._field_Decl) {
		_1d05356c9_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_1d05c4c0d_Equal(_80357_dest, _80414_d.get()._field_Kind)))) {
			_1d05356c9_pushErr(_self_.ptr(), _80428_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_80357_dest.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_80414_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return false;;
		};
	} else {
		jule::Ptr<_1d0583e64_assignTypeChecker> _81521_atc = jule::new_ptr<_1d0583e64_assignTypeChecker>(_1d0583e64_assignTypeChecker{._field_s=_self_, ._field_dest=_80357_dest, ._field_d=_80414_d, ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _1d05850db_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_1d0598e35_IsConst(_80414_d.ptr()))) || (_1d05c688b_Prim(_80357_dest.ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _1d05c688b_Prim(_80357_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1eb00845b_IsSigInt(_83117_kind)) {
			_case_begin_1aabcd54a:;
			{
				_1eb00c31c_SetI64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1eb008747_IsUnsigInt(_83117_kind)) {
			_case_begin_1aabcd5c2:;
			{
				_1eb00c592_SetU64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1eb008d0d_IsFloat(_83117_kind)) {
			_case_begin_1aabcd649:;
			{
				_1eb00cd12_SetF64(_80414_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1eb00c097_AsF64(_80414_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1aabcd47e:;
	};
	return true;;
}



inline jule::Bool _1d053ca11_checkTypeCompatibility(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05c4504_TypeKind>& _84547_dest, jule::Ptr<_1d05c4504_TypeKind>& _84614_src, jule::Ptr<_212a0c2ab_Token>& _84635_errorToken) {
	if ((_84614_src == nullptr)) {
		_1d05356c9_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_84547_dest.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_84614_src.ptr()), &__jule_any_type7)}));
		return false;;
	};
	if ((_1d05c852a_Tup(_84614_src.ptr()) != nullptr)) {
		_1d05356c9_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_84547_dest.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_84614_src.ptr()), &__jule_any_type7)}));
		return false;;
	};
	_1d058233b_typeCompatibilityChecker _86017_tcc = _1d058233b_typeCompatibilityChecker{._field_s=_self_, ._field_dest=_84547_dest, ._field_src=_84614_src, ._field_errorToken=_84635_errorToken};;
	if (_1d0583925_check(&_86017_tcc)) {
		return true;;
	};
	_1d05356c9_pushErr(_self_.ptr(), _84635_errorToken,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_84547_dest.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_84614_src.ptr()), &__jule_any_type7)}));
	return false;;
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d053ce84_buildNonGenericTypeKind(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea30369c_TypeDecl>& _88148_ast, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>& _88214_generics, jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>& _88250_ignored) {
	jule::Ptr<_1d05d2d70_typeChecker> _88317_tc = jule::new_ptr<_1d05d2d70_typeChecker>(_1d05d2d70_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_ignoreGenerics=_88214_generics, ._field_ignoredGenerics=(&(_88250_ignored)), });;
	return _1d05da0db_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _1d053d36e_buildFnNonGenericTypeKinds(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb026831_FnIns>& _89351_f, jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>& _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _89517_generics = nullptr;;
	if (_1eb024356_IsMethod(_89351_f.get()._field_Decl.ptr())) {
		_89517_generics=jule::append(_89351_f.get()._field_Decl.get()._field_Generics,_89351_f.get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=_89351_f.get()._field_Decl.get()._field_Generics;
	};
	{
		auto &expr = _89351_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aabd6bb3:;
		if (it != expr.end()) {
			jule::Ptr<_1eb025962_ParamIns> _90221_p = *it;
			{
				if ((!(_1eb022970_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_1d053ce84_buildNonGenericTypeKind(_self_, _90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1aabd6bb3:;
			++it;
			goto _iter_begin_1aabd6bb3;
		}
		_iter_end_1aabd6bb3:;
	};
	if ((!(_1eb0240e2_IsVoid(_89351_f.get()._field_Decl.ptr())))) {
		_89351_f.get()._field_Result=_1d053ce84_buildNonGenericTypeKind(_self_, _89351_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_89517_generics,_89367_ignored);
		__jule_func_result=(__jule_func_result && (_89351_f.get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1eb026831_FnIns> _1d053d68d_getTraitCheckFnKind(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb023b80_Fn>& _91544_f) {
	if ((_91544_f.get()._field_Instances.len() == 1LL)) {
		return _91544_f.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1eb026831_FnIns> _91917_ins = _1eb02506b_instanceForce(_91544_f);;
	jule::Ptr<_1d05d2d70_typeChecker> _92117_tc = jule::new_ptr<_1d05d2d70_typeChecker>(_1d05d2d70_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d05e0476_Lookup>(_self_, 3), });;
	{
		auto &expr = _91917_ins.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aabda4e1:;
		if (it != expr.end()) {
			jule::Ptr<_1eb025962_ParamIns> _92621_p = *it;
			{
				if ((!(_1eb022970_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_1d05da0db_checkDecl(_92117_tc.ptr(), _92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl);
				};
			}
			_iter_next_1aabda4e1:;
			++it;
			goto _iter_begin_1aabda4e1;
		}
		_iter_end_1aabda4e1:;
	};
	if ((!(_1eb0240e2_IsVoid(_91544_f.ptr())))) {
		_91917_ins.get()._field_Result=_1d05da0db_checkDecl(_92117_tc.ptr(), _91544_f.get()._field_Result.get()._field_Kind.get()._field_Decl);
	};
	return _91917_ins;;
}



inline jule::Bool _1d053dade_checkConstraintsFn(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb026831_FnIns>& _93843_f, jule::Ptr<_212a0c2ab_Token>& _93859_et, jule::Ptr<_1eb026831_FnIns> _93875_exist) {
	jule::Ptr<_1d0504225_constraintChecker> _93917_cc = _1d053a57a_constraintChecker(_self_);;
	_93917_cc.get()._field_et=_93859_et;
	_93917_cc.get()._field_fi=_93843_f;
	if ((_93875_exist != nullptr)) {
		{
			auto &expr = _93875_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1aabe0172:;
			if (it != expr.end()) {
				jule::I64 _94318_i = it - expr.begin();
				jule::Ptr<_1d05c2cc7_InsGeneric> _94325_g = *it;
				{
					_93843_f.get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1aabe0172:;
				++it;
				_94318_i++;
				goto _iter_begin_1aabe0172;
			}
			_iter_end_1aabe0172:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _1d0505105_check(_93917_cc);;
}



inline jule::Bool _1d053e040_checkConstraintsStruct(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _95247_s, jule::Ptr<_212a0c2ab_Token>& _95267_et, jule::Ptr<_1ea320268_StructIns> _95283_exist) {
	jule::Ptr<_1d0504225_constraintChecker> _95317_cc = _1d053a57a_constraintChecker(_self_);;
	_95317_cc.get()._field_et=_95267_et;
	_95317_cc.get()._field_si=_95247_s;
	if ((_95283_exist != nullptr)) {
		{
			auto &expr = _95283_exist.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1aabe2b7a:;
			if (it != expr.end()) {
				jule::I64 _95718_i = it - expr.begin();
				jule::Ptr<_1d05c2cc7_InsGeneric> _95725_g = *it;
				{
					_95247_s.get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1aabe2b7a:;
				++it;
				_95718_i++;
				goto _iter_begin_1aabe2b7a;
			}
			_iter_end_1aabe2b7a:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _1d0505105_check(_95317_cc);;
}



inline jule::Bool _1d053e3e7_fnEnvironment(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb026831_FnIns>& _96938_f, jule::Fn<jule::Bool(jule::Ptr<_1d0532a17_Sema>&,jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&)> _96949_algo) {
	jule::Ptr<_1d0532a17_Sema> _97017_sema = _96938_f.get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1d0593748_SymbolTable> _97117_old = _96938_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1d0535311_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_1d0593748_SymbolTable> _97317_file = _1d0532121_findFile(_96938_f.get()._field_Decl.get()._field_sema.get()._field_files,_96938_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_97317_file != nullptr)) {
		_1d0535311_setCurrentFile(_96938_f.get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = _96938_f.get()._field_Generics.len();;
	if (((_96938_f.get()._field_Decl != nullptr) && (_96938_f.get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=_96938_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>::alloc(0LL, _97817_size);;
	_1d0531cbe_appendGenericTypeAliases(_98317_generics,_96938_f);
	jule::Bool _98613_ok = _96949_algo(_97017_sema,_98317_generics);;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _1d053e66c_checkFnParamKind(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb025962_ParamIns>& _99641_p) {
	_99641_p.get()._field_Kind.get()._field_Variadic=_99641_p.get()._field_Decl.get()._field_Variadic;
	if ((_99641_p.get()._field_Decl.get()._field_Reference && (!(_1d05dbe01_isValidForRef(_99641_p.get()._field_Kind))))) {
		_1d05356c9_pushErr(_self_.ptr(), _99641_p.get()._field_Decl.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_99641_p.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
}



inline jule::Bool _1d053e97a_reloadFnInsTypes(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb026831_FnIns> _100340_f) {
	if ((_1eb027bb7_IsBuiltin(_100340_f.ptr()) || _1eb027e2b_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _1d053e3e7_fnEnvironment(_self_, _100340_f,jule::Fn<jule::Bool(jule::Ptr<_1d0532a17_Sema>&,jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>&)>([=](jule::Ptr<_1d0532a17_Sema>& _100743_sema, jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>& _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto &expr = _100340_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1aabedd84:;
			if (it != expr.end()) {
				jule::Ptr<_1eb025962_ParamIns> _100925_p = *it;
				{
					if (_1eb022970_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_1eb022bd4_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cc9d5_Sptr>(_1d05cc9d5_Sptr{._field_Elem=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_1d053ad83_buildTypeWithGenerics(_100743_sema, _100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_1d053e66c_checkFnParamKind(_self_, _100925_p);
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1aabedd84:;
				++it;
				goto _iter_begin_1aabedd84;
			}
			_iter_end_1aabedd84:;
		};
		if ((!(_1eb0240e2_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_1d053ad83_buildTypeWithGenerics(_100743_sema, _100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl,_100761_generics,_100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _1d053eded_checkRefValidityForInitExpr(jule::Ptr<_1d0532a17_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_1d0598572_Data>& _103967_d, jule::Ptr<_212a0c2ab_Token>& _103982_errorToken) {
	{
		auto &_match_expr{ _103967_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aac0451b:;
			{
				goto _match_end_1aabed27e;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1aac04582:;
			{
				jule::Ptr<_1eb01979c_TraitSubIdentExprModel> _104421_model = _103967_d.get()._field_Model.cast_ptr<_1eb01979c_TraitSubIdentExprModel>(&__jule_any_type72);;
				if ((!(_1d0530bd0_isValidModelForRef(_104421_model.get()._field_Expr)))) {
					_1d05356c9_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type7)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aac04373:;
			{
				jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _105021_model = _103967_d.get()._field_Model.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73);;
				if ((!(_1d0530bd0_isValidModelForRef(_105021_model.get()._field_Expr.get()._field_Model)))) {
					_1d05356c9_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74 || _match_expr.type == &__jule_any_type75) {
			_case_begin_1aac043d9:;
			{
				_1d05356c9_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aac03a7b:;
			{
				jule::Ptr<_1eb015c4e_UnaryExprModel> _106021_unary = _103967_d.get()._field_Model.cast_ptr<_1eb015c4e_UnaryExprModel>(&__jule_any_type76);;
				if ((_106021_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1d0530bd0_isValidModelForRef(_103967_d.get()._field_Model)))) {
						_1d05356c9_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("you cannot use reference variable @ because reference is dangling", 65),jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type7)}));
						return false;;
					};
					goto _match_end_1aabed27e;
				};
				goto _case_begin_1aac039e3;
			}
		}
		else {
			_case_begin_1aac039e3:;
			{
				_1d05356c9_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1aabed27e:;
	};
	if ((_103947_leftMut && (!(_103967_d.get()._field_Mutable)))) {
		_1d05356c9_pushErr(_self_.ptr(), _103982_errorToken,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1d05404c5_checkValidityForInitExpr(jule::Ptr<_1d0532a17_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_1d05c4504_TypeKind>& _108110_leftKind, jule::Ptr<_1d0598572_Data>& _108136_d, jule::Ptr<_212a0c2ab_Token>& _108151_errorToken) {
	if (((_108044_leftMut && (!(_108136_d.get()._field_Mutable))) && _1d05c5b76_Mutable(_108136_d.get()._field_Kind.ptr()))) {
		_1d05356c9_pushErr(_self_.ptr(), _108151_errorToken,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_108136_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_1d053eded_checkRefValidityForInitExpr(_self_, _108044_leftMut,_108136_d,_108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1d0583e64_assignTypeChecker> _109117_atc = jule::new_ptr<_1d0583e64_assignTypeChecker>(_1d0583e64_assignTypeChecker{._field_s=_self_, ._field_d=_108136_d, ._field_errorToken=_108151_errorToken});;
	return _1d058463a_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _1d054088d_checkTypeAliasDeclKind(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05c3811_TypeAlias>& _109947_ta, jule::Trait<_1d05e0476_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d0593748_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1d0535311_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if ((_109947_ta.get()._field_Token != nullptr)) {
		jule::Ptr<_1d0593748_SymbolTable> _110521_file = _1d0532121_findFile(_self_.get()._field_files,_109947_ta.get()._field_Token.get()._field_File);;
		if ((_110521_file != nullptr)) {
			_1d0535311_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_1d053a316_checkTypeWithRefers(_self_, _109947_ta.get()._field_Kind,_109967_l,nullptr,jule::new_ptr<_1d05d1e90_referencer>(_1d05d1e90_referencer{._field_ident=_109947_ta.get()._field_Ident, ._field_owner=jule::Any(_109947_ta, &__jule_any_type69), ._field_refs=(&(_109947_ta.get()._field_Refers))}));
	if (((__jule_func_result && (_1d05c75a1_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1d05c75a1_Arr(_109947_ta.get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1d05356c9_pushErr(_self_.ptr(), _109947_ta.get()._field_Kind.get()._field_Decl.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1d0540bac_checkTypeAliasDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05c3811_TypeAlias>& _112243_ta, jule::Trait<_1d05e0476_Lookup> _112263_l) {
	if (_212a0ea50_IsIgnoreIdent(_112243_ta.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _112243_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1d054088d_checkTypeAliasDeclKind(_self_, _112243_ta,_112263_l);
}



inline void _1d0540e32_checkTypeAliasDeclDup(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05c3811_TypeAlias>& _113046_ta) {
	if (_212a0ea50_IsIgnoreIdent(_113046_ta.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_113046_ta)),_113046_ta.get()._field_Ident,_113046_ta.get()._field_CppLinked)) {
		_1d05356c9_pushErr(_self_.ptr(), _113046_ta.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_113046_ta.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1d054088d_checkTypeAliasDeclKind(_self_, _113046_ta,jule::Trait<_1d05e0476_Lookup>(_self_, 3));
}



inline jule::Bool _1d0541196_checkTypeAliasDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1aac16242:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c3811_TypeAlias> _114321_ta = *it;
			{
				_1d0540e32_checkTypeAliasDeclDup(_self_, _114321_ta);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac16242:;
			++it;
			goto _iter_begin_1aac16242;
		}
		_iter_end_1aac16242:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aac2bea0_checkEnumItemsDup(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_1aac2d1d2:;
		if (it != expr.end()) {
			jule::Ptr<_1d04eeb05_EnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_1aac2d1d2;
				} else if (_212a0ea50_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_1d05356c9_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_1aac2de6e:;
						if (it != expr.end()) {
							jule::Ptr<_1d04eeb05_EnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_1aac2de6e;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_1d05356c9_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type7)}));
									_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1aac2de6e;
								};
							}
							_iter_next_1aac2de6e:;
							++it;
							goto _iter_begin_1aac2de6e;
						}
						_iter_end_1aac2de6e:;
					};
				};
			}
			_iter_next_1aac2d1d2:;
			++it;
			goto _iter_begin_1aac2d1d2;
		}
		_iter_end_1aac2d1d2:;
	};
}

inline void _1aac3741c_checkEnumItemsDup(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>> _115439_items) {
	{
		auto &expr = _115439_items;
		auto it = expr.begin();
		_iter_begin_1aac3860a:;
		if (it != expr.end()) {
			jule::Ptr<_1d050162e_TypeEnumItem> &_115516_item = *it;
			{
				if (_115516_item.get()._field_Ident.empty()) {
					goto _iter_next_1aac3860a;
				} else if (_212a0ea50_IsIgnoreIdent(_115516_item.get()._field_Ident)) {
					_1d05356c9_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
				} else {
					{
						auto &expr = _115439_items;
						auto it = expr.begin();
						_iter_begin_1aac39397:;
						if (it != expr.end()) {
							jule::Ptr<_1d050162e_TypeEnumItem> &_116124_citem = *it;
							{
								if ((_115516_item == _116124_citem)) {
									goto _iter_end_1aac39397;
								} else if ((_115516_item.get()._field_Ident == _116124_citem.get()._field_Ident)) {
									_1d05356c9_pushErr(&(*_self_), _115516_item.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_115516_item.get()._field_Ident, &__jule_any_type7)}));
									_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
									goto _iter_end_1aac39397;
								};
							}
							_iter_next_1aac39397:;
							++it;
							goto _iter_begin_1aac39397;
						}
						_iter_end_1aac39397:;
					};
				};
			}
			_iter_next_1aac3860a:;
			++it;
			goto _iter_begin_1aac3860a;
		}
		_iter_end_1aac3860a:;
	};
}



inline void _1d0541691_checkEnumItemsStr(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05005ea_Enum>& _117442_e) {
	jule::Ptr<_1d059a0e0_Eval> _117517_eval = _1d053c0b5_eval(_self_, jule::Trait<_1d05e0476_Lookup>(_self_, 3));;
	{
		auto &expr = _117442_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1aac17cd2:;
		if (it != expr.end()) {
			jule::Ptr<_1d04eeb05_EnumItem> _117621_item = *it;
			{
				if (_1d04eeee0_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Data=jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Constant=static__1eb00a31a_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type49);
				} else {
					jule::Ptr<_1d0598572_Data> _118525_d = _1d05b5a12_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1aac17cd2;
					};
					if ((!(_1d0598e35_IsConst(_118525_d.ptr())))) {
						_1d05356c9_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1d053c5b0_checkAssignType(_self_, false,_117442_e.get()._field_Kind.get()._field_Kind,_118525_d,_117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1aac17cd2:;
			++it;
			goto _iter_begin_1aac17cd2;
		}
		_iter_end_1aac17cd2:;
	};
}



inline void _1d0541916_checkEnumItemsInt(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05005ea_Enum>& _120042_e) {
	jule::Ptr<_1d05c9251_Prim> _120113_prim = _1d05c688b_Prim(_120042_e.get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _120217_max = static_cast<jule::U64>(_1eb003610_Max(_1d05c95b4_Str(_120113_prim.ptr())));;
	jule::Ptr<_1d059a0e0_Eval> _120317_eval = _1d053c0b5_eval(_self_, jule::Trait<_1d05e0476_Lookup>(_self_, 3));;
	{
		auto &expr = _120042_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1aac22072:;
		if (it != expr.end()) {
			jule::I64 _120414_i = it - expr.begin();
			jule::Ptr<_1d04eeb05_EnumItem> _120421_item = *it;
			{
				if ((_120217_max == 0LLU)) {
					_1d05356c9_pushErr(_self_.ptr(), _120421_item.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					(_120217_max)--;
				};
				if (_1d04eeee0_AutoExpr(_120421_item.ptr())) {
					_120421_item.get()._field_Value=jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Data=jule::new_ptr<_1d0598572_Data>()});
					{
						
						if (_1eb00845b_IsSigInt(_1d05c95b4_Str(_120113_prim.ptr()))) {
							_case_begin_1aac253a5:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i))))));
							}
						}
						else {
							_case_begin_1aac25042:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1eb009ccb_NewU64(static_cast<jule::U64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i)))));
							}
						}
						_match_end_1aac24edc:;
					};
					_120421_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type49);
				} else {
					jule::Ptr<_1d0598572_Data> _122225_d = _1d05b5a12_evalExpr(_120317_eval, _120421_item.get()._field_Value.get()._field_Expr);;
					if ((_122225_d == nullptr)) {
						goto _iter_next_1aac22072;
					};
					if ((!(_1d0598e35_IsConst(_122225_d.ptr())))) {
						_1d05356c9_pushErr(_self_.ptr(), _120421_item.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
					};
					_1d053c5b0_checkAssignType(_self_, false,_120042_e.get()._field_Kind.get()._field_Kind,_122225_d,_120421_item.get()._field_Token);
					_120421_item.get()._field_Value.get()._field_Data=_122225_d;
				};
			}
			_iter_next_1aac22072:;
			++it;
			_120414_i++;
			goto _iter_begin_1aac22072;
		}
		_iter_end_1aac22072:;
	};
}



inline void _1d0541b8b_checkEnumDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d05005ea_Enum>& _123538_e) {
	if (_212a0ea50_IsIgnoreIdent(_123538_e.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_123538_e)),_123538_e.get()._field_Ident,false)) {
		_1d05356c9_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_123538_e.get()._field_Items.len() == 0LL)) {
		_1d05356c9_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_123538_e.get()._field_Ident, &__jule_any_type7)}));
	};
	_1aac2bea0_checkEnumItemsDup(_self_.ptr(), _123538_e.get()._field_Items);
	if ((_123538_e.get()._field_Kind != nullptr)) {
		if ((!(_1d053a932_checkType(_self_, _123538_e.get()._field_Kind,jule::Trait<_1d05e0476_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		_123538_e.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1d05c9251_Prim> _126217_t = _1d05c688b_Prim(_123538_e.get()._field_Kind.get()._field_Kind.ptr());;
	if ((_126217_t == nullptr)) {
		_1d05356c9_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1d05cc485_IsStr(_126217_t.ptr())) {
			_case_begin_1aac3321a:;
			{
				_1d0541691_checkEnumItemsStr(_self_, _123538_e);
			}
		}
		else if (_1eb0089de_IsInt(_1d05c95b4_Str(_126217_t.ptr()))) {
			_case_begin_1aac32e1d:;
			{
				_1d0541916_checkEnumItemsInt(_self_, _123538_e);
			}
		}
		else {
			_case_begin_1aac323a1:;
			{
				_1d05356c9_pushErr(_self_.ptr(), _123538_e.get()._field_Token,jule::Str("invalid type source", 19),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aac3234b:;
	};
}



inline void _1d0541e11_checkTypeEnumDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d0501be5_TypeEnum>& _127942_e) {
	if (_212a0ea50_IsIgnoreIdent(_127942_e.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_127942_e)),_127942_e.get()._field_Ident,false)) {
		_1d05356c9_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_127942_e.get()._field_Items.len() == 0LL)) {
		_1d05356c9_pushErr(_self_.ptr(), _127942_e.get()._field_Token,jule::Str("enum @ have no field", 20),jule::Slice<jule::Any>::make({jule::Any(_127942_e.get()._field_Ident, &__jule_any_type7)}));
		return;;
	};
	_1aac3741c_checkEnumItemsDup(_self_.ptr(), _127942_e.get()._field_Items);
	{
		auto &expr = _127942_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1aac3a871:;
		if (it != expr.end()) {
			jule::Ptr<_1d050162e_TypeEnumItem> _129321_item = *it;
			{
				if ((_129321_item.get()._field_Kind == nullptr)) {
					_1d05356c9_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					goto _iter_next_1aac3a871;
				};
				jule::Bool _129817_ok = _1d053a932_checkType(_self_, _129321_item.get()._field_Kind,jule::Trait<_1d05e0476_Lookup>(_self_, 3));;
				if ((!(_129817_ok))) {
					goto _iter_next_1aac3a871;
				};
				jule::Ptr<_1d05c9251_Prim> _130217_p = _1d05c688b_Prim(_129321_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_130217_p != nullptr) && _1d05cc6e9_IsAny(_130217_p.ptr()))) {
					_1d05356c9_pushErr(_self_.ptr(), _129321_item.get()._field_Token,jule::Str("the <any> type is not allowed for type-enum declarations", 56),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1aac3a871:;
			++it;
			goto _iter_begin_1aac3a871;
		}
		_iter_end_1aac3a871:;
	};
	if ((_127942_e.get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1d050162e_TypeEnumItem> _130821_item = _127942_e.get()._field_Items[0LL];;
		_1d05c4504_TypeKind _130917_tk = _1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_127942_e, 4)};;
		if (((_130821_item.get()._field_Kind.get()._field_Kind != nullptr) && _1d05c4c0d_Equal(_130821_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1d05c4504_TypeKind>)((&(_130917_tk))))))) {
			_1d05356c9_pushErr(_self_.ptr(), _130821_item.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_1d0502025_Str(_127942_e.ptr()), &__jule_any_type7)}));
		};
	};
}



inline jule::Bool _1d0542175_checkEnumDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Enums;
		auto it = expr.begin();
		_iter_begin_1aac41723:;
		if (it != expr.end()) {
			jule::Ptr<_1d05005ea_Enum> _132021_e = *it;
			{
				_1d0541b8b_checkEnumDecl(_self_, _132021_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac41723:;
			++it;
			goto _iter_begin_1aac41723;
		}
		_iter_end_1aac41723:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d05423d9_checkTypeEnumDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1aac41d72:;
		if (it != expr.end()) {
			jule::Ptr<_1d0501be5_TypeEnum> _133221_e = *it;
			{
				_1d0541e11_checkTypeEnumDecl(_self_, _133221_e);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac41d72:;
			++it;
			goto _iter_begin_1aac41d72;
		}
		_iter_end_1aac41d72:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d05426e7_checkDeclGenerics(_1d0532a17_Sema* _self_, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>& _134237_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _134237_generics;
		auto it = expr.begin();
		_iter_begin_1aac442b4:;
		if (it != expr.end()) {
			jule::I64 _134413_i = it - expr.begin();
			jule::Ptr<_1ea310995_GenericDecl> &_134416_g = *it;
			{
				if (_212a0ea50_IsIgnoreIdent(_134416_g.get()._field_Ident)) {
					_1d05356c9_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1aac442b4;
				};
				_julec_label_duplicationLookup:;
				{
					auto &expr = _134237_generics;
					auto it = expr.begin();
					_iter_begin_1aac452d7:;
					if (it != expr.end()) {
						jule::I64 _135317_j = it - expr.begin();
						jule::Ptr<_1ea310995_GenericDecl> &_135320_ct = *it;
						{
							{
								
								if ((_135317_j >= _134413_i)) {
									_case_begin_1aac46948:;
									{
										goto _iter_end_1aac452d7;
									}
								}
								else if ((_134416_g.get()._field_Ident == _135320_ct.get()._field_Ident)) {
									_case_begin_1aac469c0:;
									{
										_1d05356c9_pushErr(&(*_self_), _134416_g.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_134416_g.get()._field_Ident, &__jule_any_type7)}));
										_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1aac452d7;
									}
								}
								_match_end_1aac46838:;
							};
						}
						_iter_next_1aac452d7:;
						++it;
						_135317_j++;
						goto _iter_begin_1aac452d7;
					}
					_iter_end_1aac452d7:;
				};
			}
			_iter_next_1aac442b4:;
			++it;
			_134413_i++;
			goto _iter_begin_1aac442b4;
		}
		_iter_end_1aac442b4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d0542a05_checkFnDeclParamsDup(_1d0532a17_Sema* _self_, jule::Ptr<_1eb023b80_Fn>& _136940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto &expr = _136940_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aac48cbe:;
		if (it != expr.end()) {
			jule::I64 _137213_i = it - expr.begin();
			jule::Ptr<_1eb022343_Param> &_137216_p = *it;
			{
				{
					auto &expr = _136940_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1aac4995c:;
					if (it != expr.end()) {
						jule::Ptr<_1ea310995_GenericDecl> &_137420_g = *it;
						{
							if ((_137216_p.get()._field_Ident == _137420_g.get()._field_Ident)) {
								__jule_func_result=false;
								_1d05356c9_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type7)}));
								_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								goto _iter_next_1aac48cbe;
							};
						}
						_iter_next_1aac4995c:;
						++it;
						goto _iter_begin_1aac4995c;
					}
					_iter_end_1aac4995c:;
				};
				_julec_label_paramsLookup:;
				{
					auto &expr = _136940_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1aac49dbe:;
					if (it != expr.end()) {
						jule::I64 _138417_j = it - expr.begin();
						jule::Ptr<_1eb022343_Param> &_138420_jp = *it;
						{
							{
								
								if ((_138417_j >= _137213_i)) {
									_case_begin_1aac4c113:;
									{
										goto _iter_end_1aac49dbe;
									}
								}
								else if ((_212a0ece7_IsAnonIdent(_137216_p.get()._field_Ident) || _212a0ece7_IsAnonIdent(_138420_jp.get()._field_Ident))) {
									_case_begin_1aac4c18a:;
									{
										goto _iter_end_1aac49dbe;
									}
								}
								else if ((_137216_p.get()._field_Ident == _138420_jp.get()._field_Ident)) {
									_case_begin_1aac4c212:;
									{
										__jule_func_result=false;
										_1d05356c9_pushErr(&(*_self_), _137216_p.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_137216_p.get()._field_Ident, &__jule_any_type7)}));
										_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_next_1aac48cbe;
									}
								}
								_match_end_1aac4bee2:;
							};
						}
						_iter_next_1aac49dbe:;
						++it;
						_138417_j++;
						goto _iter_begin_1aac49dbe;
					}
					_iter_end_1aac49dbe:;
				};
			}
			_iter_next_1aac48cbe:;
			++it;
			_137213_i++;
			goto _iter_begin_1aac48cbe;
		}
		_iter_end_1aac48cbe:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d0542d13_checkFnDeclResultDup(_1d0532a17_Sema* _self_, jule::Ptr<_1eb023b80_Fn>& _140340_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1eb0240e2_IsVoid(_140340_f.ptr())) {
		return __jule_func_result;;
	};
	{
		auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1aac4eec3:;
		if (it != expr.end()) {
			jule::I64 _141013_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> &_141016_v = *it;
			{
				if ((_212a0ea50_IsIgnoreIdent(_141016_v.get()._field_Kind) || _212a0ece7_IsAnonIdent(_141016_v.get()._field_Kind))) {
					goto _iter_next_1aac4eec3;
				};
				{
					auto &expr = _140340_f.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1aac51359:;
					if (it != expr.end()) {
						jule::Ptr<_1ea310995_GenericDecl> &_141520_g = *it;
						{
							if ((_141016_v.get()._field_Kind == _141520_g.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1aac51359:;
						++it;
						goto _iter_begin_1aac51359;
					}
					_iter_end_1aac51359:;
				};
				{
					auto &expr = _140340_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1aac5258b:;
					if (it != expr.end()) {
						jule::Ptr<_1eb022343_Param> &_142120_p = *it;
						{
							if ((_141016_v.get()._field_Kind == _142120_p.get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1aac5258b:;
						++it;
						goto _iter_begin_1aac5258b;
					}
					_iter_end_1aac5258b:;
				};
				_julec_label_itself_lookup:;
				{
					auto &expr = _140340_f.get()._field_Result.get()._field_Idents;
					auto it = expr.begin();
					_iter_begin_1aac5378a:;
					if (it != expr.end()) {
						jule::I64 _142917_j = it - expr.begin();
						jule::Ptr<_212a0c2ab_Token> &_142920_jv = *it;
						{
							{
								
								if ((_142917_j >= _141013_i)) {
									_case_begin_1aac54505:;
									{
										goto _iter_end_1aac5378a;
									}
								}
								else if ((_142920_jv.get()._field_Kind == _141016_v.get()._field_Kind)) {
									_case_begin_1aac5457c:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1aac543e5:;
							};
						}
						_iter_next_1aac5378a:;
						++it;
						_142917_j++;
						goto _iter_begin_1aac5378a;
					}
					_iter_end_1aac5378a:;
				};
				goto _iter_next_1aac4eec3;
				_julec_label_exist:;
				_1d05356c9_pushErr(&(*_self_), _141016_v,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_141016_v.get()._field_Kind, &__jule_any_type7)}));
				_1d05359e8_pushSugggestion(&(*_self_), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1aac4eec3:;
			++it;
			_141013_i++;
			goto _iter_begin_1aac4eec3;
		}
		_iter_end_1aac4eec3:;
	};
	return __jule_func_result;;
}



inline void _1d0543088_checkFnDeclPrototype(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb023b80_Fn>& _145045_f) {
	if ((_145045_f.get()._field_Exceptional && _145045_f.get()._field_CppLinked)) {
		_1d05356c9_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("cpp-linked defines cannot be exceptional", 40),jule::Slice<jule::Any>());
		return;;
	};
	if (_145045_f.get()._field_Exceptional) {
		if (_1eb0245ba_IsEntryPoint(_145045_f.ptr())) {
			_1d05356c9_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("entry point cannot be exceptional", 33),jule::Slice<jule::Any>());
		} else if (_1eb02482e_IsInit(_145045_f.ptr())) {
			_1d05356c9_pushErr(_self_.ptr(), _145045_f.get()._field_Token,jule::Str("initializer function cannot be exceptional", 42),jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1d05426e7_checkDeclGenerics(_self_.ptr(), _145045_f.get()._field_Generics)))) {
			_case_begin_1aac57717:;
		}
		else if ((!(_1d0542a05_checkFnDeclParamsDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1aac5778e:;
		}
		else if ((!(_1d0542d13_checkFnDeclResultDup(_self_.ptr(), _145045_f)))) {
			_case_begin_1aac58ac0:;
		}
		_match_end_1aac575d5:;
	};
}



inline void _1d054330d_checkTraitDeclMethod(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb023b80_Fn>& _147145_f) {
	if (_212a0ea50_IsIgnoreIdent(_147145_f.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _147145_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_147145_f.get()._field_sema=_self_;
	_1d0543088_checkFnDeclPrototype(_self_, _147145_f);
	jule::Ptr<_1eb026831_FnIns> _147817_ins = _1eb0252d0_instance(_147145_f);;
	_1d053e97a_reloadFnInsTypes(_self_, _147817_ins);
	_147817_ins.get()._field_reloaded=true;
	_1eb0255aa_appendInstance(_147145_f.ptr(), _147817_ins);
}



inline void _1d0543583_checkTraitDeclMethods(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d04ed4a5_Trait>& _148446_t) {
	{
		auto &expr = _148446_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aac5c0ac:;
		if (it != expr.end()) {
			jule::I64 _148514_i = it - expr.begin();
			jule::Ptr<_1eb023b80_Fn> _148521_f = *it;
			{
				_1d054330d_checkTraitDeclMethod(_self_, _148521_f);
				_148446_t.get()._field_Mutable=(_148446_t.get()._field_Mutable || _148521_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto &expr = _148446_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1aac5e0e2:;
					if (it != expr.end()) {
						jule::I64 _149617_j = it - expr.begin();
						jule::Ptr<_1eb023b80_Fn> _149620_jf = *it;
						{
							{
								
								if ((_149617_j >= _148514_i)) {
									_case_begin_1aac5ed7e:;
									{
										goto _iter_end_1aac5e0e2;
									}
								}
								else if ((_148521_f.get()._field_Ident == _149620_jf.get()._field_Ident)) {
									_case_begin_1aac5ee06:;
									{
										_1d05356c9_pushErr(_self_.ptr(), _148521_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_148521_f.get()._field_Ident, &__jule_any_type7)}));
										_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
										goto _iter_end_1aac5e0e2;
									}
								}
								_match_end_1aac5ec6e:;
							};
						}
						_iter_next_1aac5e0e2:;
						++it;
						_149617_j++;
						goto _iter_begin_1aac5e0e2;
					}
					_iter_end_1aac5e0e2:;
				};
			}
			_iter_next_1aac5c0ac:;
			++it;
			_148514_i++;
			goto _iter_begin_1aac5c0ac;
		}
		_iter_end_1aac5c0ac:;
	};
}



inline void _1d0543808_checkTraitDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d04ed4a5_Trait>& _151539_t) {
	if (_212a0ea50_IsIgnoreIdent(_151539_t.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151539_t)),_151539_t.get()._field_Ident,false)) {
		_1d05356c9_pushErr(_self_.ptr(), _151539_t.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_151539_t.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1d0543583_checkTraitDeclMethods(_self_, _151539_t);
}



inline jule::Bool _1d0543a6c_checkTraitDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1aac63d2d:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> _152821_t = *it;
			{
				_1d0543808_checkTraitDecl(_self_, _152821_t);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac63d2d:;
			++it;
			goto _iter_begin_1aac63d2d;
		}
		_iter_end_1aac63d2d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d0543e24_checkTraitImplMethods(_1d0532a17_Sema* _self_, jule::Ptr<_1d04ed4a5_Trait>& _153845_base, jule::Ptr<_1d050615b_Impl>& _153860_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _153860_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aac65824:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> &_154016_f = *it;
			{
				if ((_1d04ee330_FindMethod(_153845_base.ptr(), _154016_f.get()._field_Ident) == nullptr)) {
					_1d05356c9_pushErr(&(*_self_), _154016_f.get()._field_Token,jule::Str("undefined identifier: trait @ has no define @", 45),jule::Slice<jule::Any>::make({jule::Any(_153845_base.get()._field_Ident, &__jule_any_type7),jule::Any(_154016_f.get()._field_Ident, &__jule_any_type7)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aac65824:;
			++it;
			goto _iter_begin_1aac65824;
		}
		_iter_end_1aac65824:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d05442cb_implToStruct(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _154937_dest, jule::Ptr<_1d050615b_Impl>& _154957_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _154957_ipl.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aac67ae0:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _155321_f = *it;
			{
				if (((_1ea2d42c6_FindMethod(_154937_dest.ptr(), _155321_f.get()._field_Ident,_155321_f.get()._field_Statically) != nullptr) || (_1ea2d5b02_FindField(_154937_dest.ptr(), _155321_f.get()._field_Ident) != nullptr))) {
					_1d05356c9_pushErr(_self_.ptr(), _155321_f.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type7),jule::Any(_155321_f.get()._field_Ident, &__jule_any_type7)}));
					__jule_func_result=false;
					goto _iter_next_1aac67ae0;
				};
				if (((_154937_dest.get()._field_Generics.len() > 0LL) && (_155321_f.get()._field_Generics.len() > 0LL))) {
					{
						auto &expr = _155321_f.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1aac6a1a8:;
						if (it != expr.end()) {
							jule::Ptr<_1ea310995_GenericDecl> _156124_fg = *it;
							{
								{
									auto &expr = _154937_dest.get()._field_Generics;
									auto it = expr.begin();
									_iter_begin_1aac6a9a0:;
									if (it != expr.end()) {
										jule::Ptr<_1ea310995_GenericDecl> _156228_dg = *it;
										{
											if ((_156124_fg.get()._field_Ident == _156228_dg.get()._field_Ident)) {
												_1d05356c9_pushErr(_self_.ptr(), _156124_fg.get()._field_Token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1aac6a9a0:;
										++it;
										goto _iter_begin_1aac6a9a0;
									}
									_iter_end_1aac6a9a0:;
								};
							}
							_iter_next_1aac6a1a8:;
							++it;
							goto _iter_begin_1aac6a1a8;
						}
						_iter_end_1aac6a1a8:;
					};
				};
				_1d0536620_checkDirectives(_self_, _155321_f.get()._field_Directives,jule::Any(_155321_f, &__jule_any_type67));
				_155321_f.get()._field_sema=_self_;
				_155321_f.get()._field_Owner=_154937_dest;
				_154937_dest.get()._field_Methods = jule::alloc_for_append(_154937_dest.get()._field_Methods,1);_154937_dest.get()._field_Methods.__push(_155321_f);;
			}
			_iter_next_1aac67ae0:;
			++it;
			goto _iter_begin_1aac67ae0;
		}
		_iter_end_1aac67ae0:;
	};
	{
		auto &expr = _154957_ipl.get()._field_Statics;
		auto it = expr.begin();
		_iter_begin_1aac6d1cd:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _157821_v = *it;
			{
				;
				if (((_1ea2d42c6_FindMethod(_154937_dest.ptr(), _157821_v.get()._field_Ident,true) != nullptr) || (_1ea2d3726_FindStatic(_154937_dest.ptr(), _157821_v.get()._field_Ident) != nullptr))) {
					_1d05356c9_pushErr(_self_.ptr(), _157821_v.get()._field_Token,jule::Str("identifier duplication: struct @ already have define @", 54),jule::Slice<jule::Any>::make({jule::Any(_154937_dest.get()._field_Ident, &__jule_any_type7),jule::Any(_157821_v.get()._field_Ident, &__jule_any_type7)}));
					__jule_func_result=false;
					goto _iter_next_1aac6d1cd;
				};
				_154937_dest.get()._field_Statics = jule::alloc_for_append(_154937_dest.get()._field_Statics,1);_154937_dest.get()._field_Statics.__push(_157821_v);;
			}
			_iter_next_1aac6d1cd:;
			++it;
			goto _iter_begin_1aac6d1cd;
		}
		_iter_end_1aac6d1cd:;
	};
	return __jule_func_result;;
}



inline void _1d0544551_implTrait(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d050615b_Impl>& _159134_decl) {
	jule::Ptr<_1d05c4504_TypeKind> _159217_base_t = _1d053b49e_selectType(_self_, _159134_decl.get()._field_Base);;
	if ((_159217_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d04ed4a5_Trait> _159617_base = _1d05c8052_Trait(_159217_base_t.ptr());;
	if ((_159617_base == nullptr)) {
		_1d05356c9_pushErr(_self_.ptr(), _159134_decl.get()._field_Base.get()._field_Token,jule::Str("invalid base type for impl: @", 29),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_159217_base_t.ptr()), &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _160317_destT = _1d053b49e_selectType(_self_, _159134_decl.get()._field_Dest);;
	if ((_160317_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ea320268_StructIns> _160717_destS = _1d05c7cdd_Struct(_160317_destT.ptr());;
	if ((_160717_destS == nullptr)) {
		_1d05356c9_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_160317_destT.ptr()), &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ea31ed8e_Struct> _161417_dest = _160717_destS.get()._field_Decl;;
	if ((_212a1303c_Dir(_161417_dest.get()._field_Token.get()._field_File.ptr()) != _212a1303c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1d05356c9_pushErr(_self_.ptr(), _159134_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	_159617_base.get()._field_Implemented = jule::alloc_for_append(_159617_base.get()._field_Implemented,1);_159617_base.get()._field_Implemented.__push(_161417_dest);;
	_161417_dest.get()._field_Implements = jule::alloc_for_append(_161417_dest.get()._field_Implements,1);_161417_dest.get()._field_Implements.__push(_159617_base);;
	if ((_159134_decl.get()._field_Statics.len() > 0LL)) {
		_1d05356c9_pushErr(_self_.ptr(), _159134_decl.get()._field_Statics[0LL].get()._field_Token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1d0543e24_checkTraitImplMethods(_self_.ptr(), _159617_base,_159134_decl)))) {
			_case_begin_1aac77715:;
			{
				return;;
			}
		}
		else if ((!(_1d05442cb_implToStruct(_self_, _161417_dest,_159134_decl)))) {
			_case_begin_1aac7778c:;
			{
				return;;
			}
		}
		_match_end_1aac76b76:;
	};
}



inline void _1d05447c6_implStruct(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d050615b_Impl>& _163635_decl) {
	jule::Ptr<_1d05c4504_TypeKind> _163717_destT = _1d053b49e_selectType(_self_, _163635_decl.get()._field_Dest);;
	if ((_163717_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ea320268_StructIns> _164117_destS = _1d05c7cdd_Struct(_163717_destT.ptr());;
	if ((_164117_destS == nullptr)) {
		_1d05356c9_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("invalid destination type for impl: @", 36),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_163717_destT.ptr()), &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ea31ed8e_Struct> _164817_dest = _164117_destS.get()._field_Decl;;
	if ((_212a1303c_Dir(_164817_dest.get()._field_Token.get()._field_File.ptr()) != _212a1303c_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1d05356c9_pushErr(_self_.ptr(), _163635_decl.get()._field_Dest.get()._field_Token,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1d05442cb_implToStruct(_self_, _164817_dest,_163635_decl)))) {
			_case_begin_1aac7c066:;
			{
				return;;
			}
		}
		_match_end_1aac797b1:;
	};
}



inline void _1d0544a4b_implImpl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d050615b_Impl>& _166133_decl) {
	{
		
		if (_1d0506557_IsTraitImpl(_166133_decl.ptr())) {
			_case_begin_1aac7cb6b:;
			{
				_1d0544551_implTrait(_self_, _166133_decl);
			}
		}
		else if (_1d05067bb_IsStructImpl(_166133_decl.ptr())) {
			_case_begin_1aac7cbe3:;
			{
				_1d05447c6_implStruct(_self_, _166133_decl);
			}
		}
		_match_end_1aac7ca5b:;
	};
}



inline void _1d0544d6a_checkVarDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d0550a13_Var>& _167237_decl, jule::Trait<_1d05e0476_Lookup> _167253_l) {
	if (_212a0ea50_IsIgnoreIdent(_167237_decl.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	if (_1d0551140_IsTypeInferred(_167237_decl.ptr())) {
		if ((!(_1d0550dcb_IsInitialized(_167237_decl.ptr())))) {
			_1d05356c9_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("type inferred declarations should have a initializer expression", 63),jule::Slice<jule::Any>());
		};
	} else {
		_1d053a932_checkType(_self_, _167237_decl.get()._field_Kind,_167253_l);
	};
	if ((_167237_decl.get()._field_Constant && _167237_decl.get()._field_Reference)) {
		_1d05356c9_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>());
	};
	if ((!(_1d0550dcb_IsInitialized(_167237_decl.ptr())))) {
		if (_167237_decl.get()._field_Constant) {
			_1d05356c9_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("missing expression for constant variable initialization", 55),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Statically) {
			_1d05356c9_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>());
		};
		if (_167237_decl.get()._field_Reference) {
			_1d05356c9_pushErr(_self_.ptr(), _167237_decl.get()._field_Token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>());
		};
	};
}



inline void _1d05450e0_checkGlobalVarDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d0550a13_Var>& _170443_decl) {
	if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_170443_decl)),_170443_decl.get()._field_Ident,_170443_decl.get()._field_CppLinked)) {
		_1d05356c9_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_170443_decl.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	if ((_170443_decl.get()._field_CppLinked && _170443_decl.get()._field_Constant)) {
		_1d05356c9_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("cpp linked variables cannot be constant", 39),jule::Slice<jule::Any>());
	};
	if ((((!(_170443_decl.get()._field_CppLinked)) && (!(_170443_decl.get()._field_Constant))) && (!(_170443_decl.get()._field_Statically)))) {
		_1d05356c9_pushErr(_self_.ptr(), _170443_decl.get()._field_Token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>());
	};
	_1d0536620_checkDirectives(_self_, _170443_decl.get()._field_Directives,jule::Any(_170443_decl, &__jule_any_type10));
	_1d0544d6a_checkVarDecl(_self_, _170443_decl,jule::Trait<_1d05e0476_Lookup>(_self_, 3));
}



inline jule::Bool _1d0545354_checkGlobalDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1aac87527:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _172221_decl = *it;
			{
				_1d05450e0_checkGlobalVarDecl(_self_, _172221_decl);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac87527:;
			++it;
			goto _iter_begin_1aac87527;
		}
		_iter_end_1aac87527:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d054570b_checkStructTraitImpl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _173245_strct, jule::Ptr<_1d04ed4a5_Trait>& _173266_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _173266_trt.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aac88cba:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _173321_tf = *it;
			{
				jule::Bool _173421_exist = false;;
				jule::Ptr<_1eb023b80_Fn> _173521_sf = _1ea2d42c6_FindMethod(_173245_strct.ptr(), _173321_tf.get()._field_Ident,_173321_tf.get()._field_Statically);;
				jule::Ptr<_1eb026831_FnIns> _173617_tfK = _1d053d68d_getTraitCheckFnKind(_self_, _173321_tf);;
				if ((_173521_sf != nullptr)) {
					jule::Ptr<_1eb026831_FnIns> _173825_sfK = _1d053d68d_getTraitCheckFnKind(_self_, _173521_sf);;
					_173421_exist=(((_173617_tfK.get()._field_Decl.get()._field_Public == _173825_sfK.get()._field_Decl.get()._field_Public) && (_173617_tfK.get()._field_Decl.get()._field_Ident == _173825_sfK.get()._field_Decl.get()._field_Ident)) && _1eb0276de_equalTrait(_173617_tfK, _173825_sfK));
				};
				if (_173421_exist) {
					jule::Ptr<_1ea2c0405_Directive> _174421_d = _1d05bdba2_findDirective(_173521_sf.get()._field_Directives,jule::Str("deprecated", 10));;
					if ((_174421_d != nullptr)) {
						_1d05356c9_pushErr(_self_.ptr(), _174421_d.get()._field_Tag,jule::Str("trait implementations cannot have deprecated code", 49),jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _175125_s = _1eb028547_GetKindStr(_173617_tfK.ptr(), true);;
					if (_173321_tf.get()._field_Public) {
						(_175125_s).buffer.insert(0, (jule::Str()));;
					};
					_1d05356c9_pushErr(_self_.ptr(), _173245_strct.get()._field_Token,jule::Str("trait @ derived but not implemented define @", 44),jule::Slice<jule::Any>::make({jule::Any(_173266_trt.get()._field_Ident, &__jule_any_type7),jule::Any(_175125_s, &__jule_any_type7)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1aac88cba:;
			++it;
			goto _iter_begin_1aac88cba;
		}
		_iter_end_1aac88cba:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d0545a19_checkStructImpls(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _176241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _176241_s.get()._field_Implements;
		auto it = expr.begin();
		_iter_begin_1aac906b7:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> _176421_trt = *it;
			{
				__jule_func_result=(_1d054570b_checkStructTraitImpl(_self_, _176241_s,_176421_trt) && __jule_func_result);
			}
			_iter_next_1aac906b7:;
			++it;
			goto _iter_begin_1aac906b7;
		}
		_iter_end_1aac906b7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d0545d27_checkStructFields(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _177042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto &expr = _177042_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1aac91a4d:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2e3deb_Field> _177221_f = *it;
			{
				_177221_f.get()._field_Owner=_177042_st;
				{
					auto &expr = _177042_st.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1aac925cb:;
					if (it != expr.end()) {
						jule::Ptr<_1ea2e3deb_Field> _177420_cf = *it;
						{
							if ((_177221_f == _177420_cf)) {
								goto _iter_end_1aac925cb;
							} else if ((_177221_f.get()._field_Ident == _177420_cf.get()._field_Ident)) {
								_1d05356c9_pushErr(_self_.ptr(), _177221_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_177221_f.get()._field_Ident, &__jule_any_type7)}));
								_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1aac925cb:;
						++it;
						goto _iter_begin_1aac925cb;
					}
					_iter_end_1aac925cb:;
				};
			}
			_iter_next_1aac91a4d:;
			++it;
			goto _iter_begin_1aac91a4d;
		}
		_iter_end_1aac91a4d:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1d054609c_checkStructDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _178740_s) {
	if (_212a0ea50_IsIgnoreIdent(_178740_s.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	} else if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_178740_s)),_178740_s.get()._field_Ident,_178740_s.get()._field_CppLinked)) {
		_1d05356c9_pushErr(_self_.ptr(), _178740_s.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_178740_s.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
	_1d0536620_checkDirectives(_self_, _178740_s.get()._field_Directives,jule::Any(_178740_s, &__jule_any_type68));
	{
		
		if ((!(_1d05426e7_checkDeclGenerics(_self_.ptr(), _178740_s.get()._field_Generics)))) {
			_case_begin_1aac9449b:;
		}
		else if ((!(_1d0545d27_checkStructFields(_self_, _178740_s)))) {
			_case_begin_1aac963d2:;
		}
		else if ((!(_1d0545a19_checkStructImpls(_self_, _178740_s)))) {
			_case_begin_1aac96448:;
		}
		_match_end_1aac962c2:;
	};
}



inline jule::Bool _1d0546311_checkStructDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aac976be:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _180621_s = *it;
			{
				_1d054609c_checkStructDecl(_self_, _180621_s);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac976be:;
			++it;
			goto _iter_begin_1aac976be;
		}
		_iter_end_1aac976be:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d0546586_checkFnDecl(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb023b80_Fn>& _181636_f) {
	if (_212a0ea50_IsIgnoreIdent(_181636_f.get()._field_Ident)) {
		_1d05356c9_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>());
	};
	_1d0536620_checkDirectives(_self_, _181636_f.get()._field_Directives,jule::Any(_181636_f, &__jule_any_type67));
	_181636_f.get()._field_sema=_self_;
	_1d0543088_checkFnDeclPrototype(_self_, _181636_f);
	if (_1d0536301_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181636_f)),_181636_f.get()._field_Ident,_181636_f.get()._field_CppLinked)) {
		if ((_181636_f.get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1eb023b80_Fn> _182821_init = _1d0534310_FindFn(_self_.ptr(), jule::Str("init", 4),false);;
			if ((_182821_init != nullptr)) {
				return;;
			};
		};
		_1d05356c9_pushErr(_self_.ptr(), _181636_f.get()._field_Token,jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67),jule::Slice<jule::Any>::make({jule::Any(_181636_f.get()._field_Ident, &__jule_any_type7)}));
		_1d05359e8_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d05467ea_checkFnDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aac9c619:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _184021_f = *it;
			{
				_1d0546586_checkFnDecl(_self_, _184021_f);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aac9c619:;
			++it;
			goto _iter_begin_1aac9c619;
		}
		_iter_end_1aac9c619:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d0546bb3_pushCycleError(_1d0532a17_Sema* _self_, jule::Ptr<_1ea31ed8e_Struct>& _185030_st1, jule::Ptr<_1ea31ed8e_Struct>& _185045_st2, jule::Str& _185064_message) {
	;
	jule::Str _185213_refers_to = _22ca32409_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_185030_st1.get()._field_Ident, &__jule_any_type7),jule::Any(_185045_st2.get()._field_Ident, &__jule_any_type7)}));;
	(_185064_message).buffer.insert(0, (((_22dc94ca8_Repeat(jule::Str(" ", 1),4LL) + _185213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d0547114_checkCrossCycle(_1d0532a17_Sema* _self_, jule::Ptr<_1ea31ed8e_Struct>& _185631_st1, jule::Ptr<_1ea31ed8e_Struct>& _185646_st2, jule::Str& _185665_message) {
	{
		auto &expr = _185646_st2.get()._field_Uses;
		auto it = expr.begin();
		_iter_begin_1aaca08b4:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> &_185716_u = *it;
			{
				if ((_185716_u == _185631_st1)) {
					_1d0546bb3_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
				if ((!(_1d0547114_checkCrossCycle(&(*_self_), _185631_st1,_185716_u,_185665_message)))) {
					_1d0546bb3_pushCycleError(&(*_self_), _185646_st2,_185716_u,_185665_message);
					return false;;
				};
			}
			_iter_next_1aaca08b4:;
			++it;
			goto _iter_begin_1aaca08b4;
		}
		_iter_end_1aaca08b4:;
	};
	return true;;
}



inline jule::Bool _1d0547587_checkStructDeriveIllegalCycles(_1d0532a17_Sema* _self_, jule::Str _187149_derive, jule::Ptr<_1ea31ed8e_Struct>& _187163_st1, jule::Ptr<_1d05c4504_TypeKind>& _187182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ea31ed8e_Struct> _187217_st2 = _1d05dca8e_getStructFromKind(_187182_k);;
	if ((_187217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_187163_st1 == _187217_st2)) {
		_1d05356c9_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cycle for derive @, struct @ refers to itself", 53),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type7),jule::Any(_187163_st1.get()._field_Ident, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _188417_message = jule::Str();;
	if ((!(_1d0547114_checkCrossCycle(&(*_self_), _187163_st1,_187217_st2,_188417_message)))) {
		jule::Str _188621_errMsg = _188417_message;;
		_188417_message=jule::Str();
		_1d0546bb3_pushCycleError(&(*_self_), _187163_st1,_187217_st2,_188417_message);
		_188621_errMsg+=_188417_message;
		_1d05356c9_pushErr(&(*_self_), _187163_st1.get()._field_Token,jule::Str("illegal cross cycle for derive @;\n@", 35),jule::Slice<jule::Any>::make({jule::Any(_187149_derive, &__jule_any_type7),jule::Any(_188621_errMsg, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d05478c8_checkStructInsDeriveClone(_1d0532a17_Sema* _self_, jule::Ptr<_1ea320268_StructIns> _189648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1ea2d8dbe_IsDerives(_189648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &expr = _189648_st.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1aaca6238:;
		if (it != expr.end()) {
			jule::Ptr<_1ea32007b_FieldIns> _190021_f = *it;
			{
				if ((_190021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1aaca6238;
				};
				if ((!(_1d05c63b3_SupportsCloning(_190021_f.get()._field_Kind.ptr())))) {
					_1d05356c9_pushErr(&(*_self_), _189648_st.get()._field_Decl.get()._field_Token,jule::Str("type @ is not compatible to derive @", 36),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_190021_f.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(jule::Str("Clone", 5), &__jule_any_type77)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1d0547587_checkStructDeriveIllegalCycles(&(*_self_), jule::Str("Clone", 5),_189648_st.get()._field_Decl,_190021_f.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aaca6238:;
			++it;
			goto _iter_begin_1aaca6238;
		}
		_iter_end_1aaca6238:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d0547ab5_checkPackageDecls(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aaca607e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _191821_f = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _191821_f);
				if ((!(_1d05423d9_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1d0541196_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aaca607e:;
			++it;
			goto _iter_begin_1aaca607e;
		}
		_iter_end_1aaca607e:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aaca4753:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _192821_f = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _192821_f);
				if ((!(_1d0543a6c_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aaca4753:;
			++it;
			goto _iter_begin_1aaca4753;
		}
		_iter_end_1aaca4753:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aacaa182:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _193521_f = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _193521_f);
				if ((!(_1d0545354_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1aacaa182:;
			++it;
			goto _iter_begin_1aacaa182;
		}
		_iter_end_1aacaa182:;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aacaa67c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _194221_f = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _194221_f);
				{
					
					if ((!(_1d05467ea_checkFnDecls(_self_)))) {
						_case_begin_1aacac728:;
					}
					else if ((!(_1d0546311_checkStructDecls(_self_)))) {
						_case_begin_1aacac78e:;
					}
					else {
						_case_begin_1aacac6b2:;
						{
							goto _iter_next_1aacaa67c;
						}
					}
					_match_end_1aacac64b:;
				};
				return;;
			}
			_iter_next_1aacaa67c:;
			++it;
			goto _iter_begin_1aacaa67c;
		}
		_iter_end_1aacaa67c:;
	};
}



inline void _1d0547e06_checkDataForTypeInference(_1d0532a17_Sema* _self_, jule::Ptr<_1d0598572_Data>& _195445_d, jule::Ptr<_212a0c2ab_Token>& _195456_err_token) {
	{
		
		if (_1d059895c_IsNil(_195445_d.ptr())) {
			_case_begin_1aacad6d5:;
			{
				_1d05356c9_pushErr(&(*_self_), _195456_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>());
			}
		}
		else if (_1d0598bc1_IsVoid(_195445_d.ptr())) {
			_case_begin_1aacad75c:;
			{
				_1d05356c9_pushErr(&(*_self_), _195456_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>());
			}
		}
		else if (_195445_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1aacad7d4:;
			{
				_1d05356c9_pushErr(&(*_self_), _195456_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aacad5b4:;
	};
}



inline void _1d054818c_checkVar(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d0550a13_Var>& _196533_v) {
	if (_196533_v.get()._field_CppLinked) {
		return;;
	};
	if (_1d0551140_IsTypeInferred(_196533_v.ptr())) {
		_196533_v.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind});
		_1d0547e06_checkDataForTypeInference(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		_1d05404c5_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
	} else {
		jule::Ptr<_1d05d05dc_Arr> _198221_arr = _1d05c75a1_Arr(_196533_v.get()._field_Kind.get()._field_Kind.ptr());;
		if ((_198221_arr != nullptr)) {
			if (_198221_arr.get()._field_Auto) {
				jule::Ptr<_1d05d05dc_Arr> _198525_dataArr = _1d05c75a1_Arr(_196533_v.get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198525_dataArr != nullptr)) {
					_198221_arr.get()._field_N=_198525_dataArr.get()._field_N;
				};
			};
		};
		if (_1d053c5b0_checkAssignType(_self_, _196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1d05404c5_checkValidityForInitExpr(_self_, _196533_v.get()._field_Mutable,_196533_v.get()._field_Reference,_196533_v.get()._field_Kind.get()._field_Kind,_196533_v.get()._field_Value.get()._field_Data,_196533_v.get()._field_Value.get()._field_Expr.get()._field_Token);
		};
	};
	if ((_196533_v.get()._field_Reference && (!(_1d05dbe01_isValidForRef(_196533_v.get()._field_Kind.get()._field_Kind))))) {
		_1d05356c9_pushErr(_self_.ptr(), _196533_v.get()._field_Token,jule::Str("references cannot points to type @", 34),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_196533_v.get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
	if (_196533_v.get()._field_Constant) {
		if ((!(_1d0598e35_IsConst(_196533_v.get()._field_Value.get()._field_Data.ptr())))) {
			_1d05356c9_pushErr(_self_.ptr(), _196533_v.get()._field_Value.get()._field_Expr.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		};
	} else {
		_196533_v.get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1d05c852a_Tup(_196533_v.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		_196533_v.get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1d05484ab_checkTypeVar(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1d0550a13_Var>& _202037_decl, jule::Trait<_1d05e0476_Lookup> _202053_l) {
	if ((_202037_decl.get()._field_CppLinked || (!(_1d0550dcb_IsInitialized(_202037_decl.ptr()))))) {
		return;;
	};
	jule::Ptr<_1d059a0e0_Eval> _202517_eval = nullptr;;
	if ((_202037_decl.get()._field_Kind != nullptr)) {
		_202517_eval=_1d053b900_evalpd(_self_, _202053_l,_202037_decl.get()._field_Kind.get()._field_Kind,_202037_decl);
	} else {
		_202517_eval=_1d053b900_evalpd(_self_, _202053_l,nullptr,_202037_decl);
	};
	_202517_eval.get()._field_immutable=(!(_202037_decl.get()._field_Mutable));
	_202037_decl.get()._field_Value.get()._field_Data=_1d05b5a12_evalExpr(_202517_eval, _202037_decl.get()._field_Value.get()._field_Expr);
	if ((_202037_decl.get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1d054818c_checkVar(_self_, _202037_decl);
}



inline void _1d0548687_checkGlobalTypes(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Vars;
		auto it = expr.begin();
		_iter_begin_1aacbc837:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _204121_decl = *it;
			{
				if (((_1d0550dcb_IsInitialized(_204121_decl.ptr()) && (_204121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1d0551140_IsTypeInferred(_204121_decl.ptr()) && (_204121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1d05484ab_checkTypeVar(_self_, _204121_decl,jule::Trait<_1d05e0476_Lookup>(_self_, 3));
				};
			}
			_iter_next_1aacbc837:;
			++it;
			goto _iter_begin_1aacbc837;
		}
		_iter_end_1aacbc837:;
	};
}



inline jule::Ptr<_1eb026831_FnIns> _1d0548a3e_readyToCheckFn(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _205239_s, jule::Ptr<_1eb023b80_Fn>& _205259_f) {
	jule::Ptr<_1eb026831_FnIns> _205317_ins = _1eb0252d0_instance(_205259_f);;
	if ((_205259_f.get()._field_Instances.len() != 0LL)) {
		return _205317_ins;;
	};
	_205317_ins.get()._field_Owner=_205239_s;
	_1eb0255aa_appendInstance(_205259_f.ptr(), _205317_ins);
	_205317_ins.get()._field_reloaded=true;
	if (_1d053e97a_reloadFnInsTypes(_self_, _205317_ins)) {
		return _205317_ins;;
	};
	return nullptr;;
}



inline void _1d0548d5d_checkTypeMethod(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _206640_s, jule::Ptr<_1eb023b80_Fn>& _206660_f) {
	if ((_206660_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1eb026831_FnIns> _207117_ins = _206660_f.get()._field_Instances[0LL];;
	if ((_207117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1d054b536_checkFnIns(_self_, _207117_ins);
}



inline jule::Ptr<_1eb026831_FnIns> _1d05492ae_checkStructInsOp(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _207941_s, jule::Ptr<_1eb023b80_Fn>& _207961_f, jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)> _207969_p) {
	if ((((_207961_f == nullptr) || (_207961_f.get()._field_Generics.len() > 0LL)) || (!(_207969_p(_207961_f))))) {
		return nullptr;;
	};
	return _207961_f.get()._field_Instances[0LL];;
}



inline jule::Bool _1d0549666_checkStructEnv(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _208939_s, jule::Ptr<_212a0c2ab_Token> _208958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1d05d2d70_typeChecker _209017_tc = _1d05d2d70_typeChecker{._field_s=_208939_s.get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1d05e0476_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1d05e0476_Lookup>(_208939_s.get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1d05d1e90_referencer>(_1d05d1e90_referencer{._field_ident=_208939_s.get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any(_208939_s.get()._field_Decl, &__jule_any_type68), }), ._field_refers=_208939_s.get()._field_Refers, };;
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		_209017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>::alloc(0LL, _208939_s.get()._field_Generics.len());
		{
			auto &expr = _208939_s.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1aacc6e07:;
			if (it != expr.end()) {
				jule::I64 _210318_i = it - expr.begin();
				jule::Ptr<_1d05c2cc7_InsGeneric> _210325_g = *it;
				{
					jule::Ptr<_1ea310995_GenericDecl> _210425_decl = _208939_s.get()._field_Decl.get()._field_Generics[_210318_i];;
					_209017_tc._field_useGenerics = jule::alloc_for_append(_209017_tc._field_useGenerics,1);_209017_tc._field_useGenerics.__push(jule::new_ptr<_1d05c3811_TypeAlias>(_1d05c3811_TypeAlias{._field_Token=_210425_decl.get()._field_Token, ._field_Ident=_210425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_210325_g.get()._field_Kind}), }));;
				}
				_iter_next_1aacc6e07:;
				++it;
				_210318_i++;
				goto _iter_begin_1aacc6e07;
			}
			_iter_end_1aacc6e07:;
		};
	};
	jule::Ptr<_1d0593748_SymbolTable> _211317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1d0535311_setCurrentFile(_self_.ptr(), _211317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != _208939_s.get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1d0593748_SymbolTable> _211721_file = _1d0532121_findFile(_self_.get()._field_files,_208939_s.get()._field_Decl.get()._field_Token.get()._field_File);;
		if ((_211721_file != nullptr)) {
			_1d0535311_setCurrentFile(_self_.ptr(), _211721_file);
		};
	};
	if ((_208939_s.get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1d0504225_constraintChecker> _212421_cc = _1d053a57a_constraintChecker(_self_);;
		_212421_cc.get()._field_et=_208958_errorToken;
		_212421_cc.get()._field_si=_208939_s;
		_212421_cc.get()._field_genericsA=_209017_tc._field_useGenerics;
		_212421_cc.get()._field_uniq=true;
		if ((!(_1d0505105_check(_212421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if ((_208939_s.get()._field_Statics.len() > 0LL)) {
		jule::I64 _213721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_209017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto &expr = _208939_s.get()._field_Statics;
			auto it = expr.begin();
			_iter_begin_1aaccdccc:;
			if (it != expr.end()) {
				jule::Ptr<_1d0550a13_Var> _213925_v = *it;
				{
					_1d0544d6a_checkVarDecl(_self_, _213925_v,jule::Trait<_1d05e0476_Lookup>(_self_, 3));
					_1d05484ab_checkTypeVar(_self_, _213925_v,jule::Trait<_1d05e0476_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _213721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1aaccdccc:;
				++it;
				goto _iter_begin_1aaccdccc;
			}
			_iter_end_1aaccdccc:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_209017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1d059a0e0_Eval> _215017_eval = _1d053c0b5_eval(_self_, jule::Trait<_1d05e0476_Lookup>(_self_, 3));;
	_208939_s.get()._field_Comparable=true;
	{
		auto &expr = _208939_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1aacd1ae3:;
		if (it != expr.end()) {
			jule::Ptr<_1ea32007b_FieldIns> _215221_f = *it;
			{
				jule::Ptr<_1d05c4504_TypeKind> _215321_kind = _1d05da0db_checkDecl(&_209017_tc, _215221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl);;
				__jule_func_result=((_215321_kind != nullptr) && __jule_func_result);
				if ((_215321_kind == nullptr)) {
					if (((_self_ != _208939_s.get()._field_Decl.get()._field_sema) && (_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors);
						_208939_s.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1aacd1ae3;
				};
				_215221_f.get()._field_Kind=_215321_kind;
				_208939_s.get()._field_Mutable=(_208939_s.get()._field_Mutable || ((!(_215221_f.get()._field_Decl.get()._field_Mutable)) && _1d05c5b76_Mutable(_215221_f.get()._field_Kind.ptr())));
				_208939_s.get()._field_Comparable=(_208939_s.get()._field_Comparable && _1d05c5912_Comparable(_215221_f.get()._field_Kind.ptr()));
				_1d05478c8_checkStructInsDeriveClone(_self_.ptr(), _208939_s);
				if ((_215221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1aacd1ae3;
				};
				_215017_eval.get()._field_prefix=_215221_f.get()._field_Kind;
				_215017_eval.get()._field_field=_215221_f;
				_215221_f.get()._field_Default=_1d05b5a12_evalExpr(_215017_eval, _215221_f.get()._field_Decl.get()._field_Default);
				if ((_215221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1aacd1ae3;
				};
				;
				_1d053c5b0_checkAssignType(_self_, false,_215221_f.get()._field_Kind,_215221_f.get()._field_Default,_215221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1aacd1ae3:;
			++it;
			goto _iter_begin_1aacd1ae3;
		}
		_iter_end_1aacd1ae3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d0549a1d_precheckStructIns(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _218742_s, jule::Ptr<_212a0c2ab_Token> _218761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1d0549666_checkStructEnv(_self_, _218742_s,_218761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _218742_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aacd8d2b:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _219221_f = *it;
			{
				if ((_219221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1d0548a3e_readyToCheckFn(_self_, _218742_s,_219221_f) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1aacd8d2b:;
			++it;
			goto _iter_begin_1aacd8d2b;
		}
		_iter_end_1aacd8d2b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d0549c93_checkStructIns(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns>& _220239_s) {
	{
		auto &expr = _220239_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aacda6bd:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _220321_f = *it;
			{
				_1d0548d5d_checkTypeMethod(_self_, _220239_s,_220321_f);
			}
			_iter_next_1aacda6bd:;
			++it;
			goto _iter_begin_1aacda6bd;
		}
		_iter_end_1aacda6bd:;
	};
}



inline void _1d054a018_checkTypeStruct(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _220840_s) {
	if (_220840_s.get()._field_CppLinked) {
		return;;
	};
	if ((_220840_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _220840_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1aacdbe1c:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _222121_ins = *it;
			{
				_1d0549c93_checkStructIns(_self_, _222121_ins);
			}
			_iter_next_1aacdbe1c:;
			++it;
			goto _iter_begin_1aacdbe1c;
		}
		_iter_end_1aacdbe1c:;
	};
}



inline void _1d054a1e4_checkStructTypes(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aacdc637:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _222721_s = *it;
			{
				_1d054a018_checkTypeStruct(_self_, _222721_s);
			}
			_iter_next_1aacdc637:;
			++it;
			goto _iter_begin_1aacdc637;
		}
		_iter_end_1aacdc637:;
	};
}



inline void _1d054a48b_checkStructInsOperators(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea320268_StructIns> _223247_s) {
	{
		auto &expr = _223247_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aacdd9bd:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _223321_m = *it;
			{
				{
					auto &_match_expr{ _223321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1aacde738:;
						{
							_223247_s.get()._field_Operators._field_Eq=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _223665_f) mutable -> jule::Bool {
								return static__1d05527b2_Eq(_223665_f);;
							}));
							_223247_s.get()._field_Comparable=(_223247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1aacde79e:;
						{
							_223247_s.get()._field_Operators._field_Gt=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _223965_f) mutable -> jule::Bool {
								return static__1d0552a59_Gt(_223965_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1aacde826:;
						{
							_223247_s.get()._field_Operators._field_GtEq=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _224167_f) mutable -> jule::Bool {
								return static__1d0552d01_GtEq(_224167_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1aacde89d:;
						{
							_223247_s.get()._field_Operators._field_Lt=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _224365_f) mutable -> jule::Bool {
								return static__1d0553098_Lt(_224365_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1aacde925:;
						{
							_223247_s.get()._field_Operators._field_LtEq=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _224567_f) mutable -> jule::Bool {
								return static__1d0553340_LtEq(_224567_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1aacde99c:;
						{
							_223247_s.get()._field_Operators._field_Shl=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _224766_f) mutable -> jule::Bool {
								return static__1d0553928_Shl(_224766_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1aacdea24:;
						{
							_223247_s.get()._field_Operators._field_Shr=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _224966_f) mutable -> jule::Bool {
								return static__1d0553bc0_Shr(_224966_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1aacdea9b:;
						{
							_223247_s.get()._field_Operators._field_Add=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _225166_f) mutable -> jule::Bool {
								return static__1d0553e67_Add(_225166_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1aacdeb23:;
						{
							_223247_s.get()._field_Operators._field_Sub=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _225366_f) mutable -> jule::Bool {
								return static__1d055420e_Sub(_225366_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1aacdeb9a:;
						{
							_223247_s.get()._field_Operators._field_Div=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _225566_f) mutable -> jule::Bool {
								return static__1d05544a6_Div(_225566_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1aacdec22:;
						{
							_223247_s.get()._field_Operators._field_Mul=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _225766_f) mutable -> jule::Bool {
								return static__1d055474d_Mul(_225766_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1aacdec99:;
						{
							_223247_s.get()._field_Operators._field_Mod=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _225966_f) mutable -> jule::Bool {
								return static__1d05549e5_Mod(_225966_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1aacded21:;
						{
							_223247_s.get()._field_Operators._field_BitAnd=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _226169_f) mutable -> jule::Bool {
								return static__1d0554c8c_BitAnd(_226169_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1aacded98:;
						{
							_223247_s.get()._field_Operators._field_BitOr=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _226368_f) mutable -> jule::Bool {
								return static__1d0555034_BitOr(_226368_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1aacdee20:;
						{
							_223247_s.get()._field_Operators._field_BitXor=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _226569_f) mutable -> jule::Bool {
								return static__1d05552cb_BitXor(_226569_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1aacdee97:;
						{
							_223247_s.get()._field_Operators._field_Neg=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _226766_f) mutable -> jule::Bool {
								return static__1d05558b4_Neg(_226766_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1aace001e:;
						{
							_223247_s.get()._field_Operators._field_Pos=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _226966_f) mutable -> jule::Bool {
								return static__1d0555b5b_Pos(_226966_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1aace0096:;
						{
							_223247_s.get()._field_Operators._field_BitNot=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _227169_f) mutable -> jule::Bool {
								return static__1d0555e03_BitNot(_227169_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1aace011d:;
						{
							_223247_s.get()._field_Operators._field_AddAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _227372_f) mutable -> jule::Bool {
								return static__1d05564db_AddAssign(_227372_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1aace0195:;
						{
							_223247_s.get()._field_Operators._field_SubAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _227572_f) mutable -> jule::Bool {
								return static__1d0556783_SubAssign(_227572_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1aace021c:;
						{
							_223247_s.get()._field_Operators._field_DivAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _227772_f) mutable -> jule::Bool {
								return static__1d0556a2a_DivAssign(_227772_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1aace0294:;
						{
							_223247_s.get()._field_Operators._field_MulAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _227972_f) mutable -> jule::Bool {
								return static__1d0556cc2_MulAssign(_227972_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1aace031b:;
						{
							_223247_s.get()._field_Operators._field_ModAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _228172_f) mutable -> jule::Bool {
								return static__1d0557069_ModAssign(_228172_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1aace0393:;
						{
							_223247_s.get()._field_Operators._field_ShlAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _228372_f) mutable -> jule::Bool {
								return static__1d0557311_ShlAssign(_228372_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1aace041a:;
						{
							_223247_s.get()._field_Operators._field_ShrAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _228572_f) mutable -> jule::Bool {
								return static__1d05575a8_ShrAssign(_228572_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1aace0492:;
						{
							_223247_s.get()._field_Operators._field_BitOrAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _228774_f) mutable -> jule::Bool {
								return static__1d0557850_BitOrAssign(_228774_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1aace0519:;
						{
							_223247_s.get()._field_Operators._field_BitAndAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _228975_f) mutable -> jule::Bool {
								return static__1d0557ae7_BitAndAssign(_228975_f);;
							}));
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1aace0591:;
						{
							_223247_s.get()._field_Operators._field_BitXorAssign=_1d05492ae_checkStructInsOp(_self_, _223247_s,_223321_m,jule::Fn<jule::Bool(jule::Ptr<_1eb023b80_Fn>)>([=](jule::Ptr<_1eb023b80_Fn> _229175_f) mutable -> jule::Bool {
								return static__1d0557d8e_BitXorAssign(_229175_f);;
							}));
						}
					}
					_match_end_1aacde31a:;
				};
			}
			_iter_next_1aacdd9bd:;
			++it;
			goto _iter_begin_1aacdd9bd;
		}
		_iter_end_1aacdd9bd:;
	};
}



inline void _1d054a722_precheckStructType(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1ea31ed8e_Struct>& _229643_s) {
	if (_229643_s.get()._field_CppLinked) {
		return;;
	};
	if ((_229643_s.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_229643_s.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ea320268_StructIns> _230721_ins = _1ea2d0415_instance(_229643_s);;
		_230721_ins.get()._field_Checked=true;
		_1ea2d116e_appendInstance(_229643_s.ptr(), _230721_ins);
		_1d0549a1d_precheckStructIns(_self_, _230721_ins,nullptr);
	};
	_1d054a48b_checkStructInsOperators(_self_, _229643_s.get()._field_Instances[0LL]);
}



inline void _1d054a8ed_precheckStructTypes(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aad194dd:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _231721_s = *it;
			{
				_1d054a722_precheckStructType(_self_, _231721_s);
			}
			_iter_next_1aad194dd:;
			++it;
			goto _iter_begin_1aad194dd;
		}
		_iter_end_1aad194dd:;
	};
}



inline void _1d054ab73_checkRets(_1d0532a17_Sema* _self_, jule::Ptr<_1eb026831_FnIns>& _232233_f) {
	if (_1eb0240e2_IsVoid(_232233_f.get()._field_Decl.ptr())) {
		return;;
	};
	_1d054cd1d_missingRetChecker _232613_mrc = static__1d054d1d6_new();;
	jule::Bool _232713_ok = _1d054e1e8_check(&_232613_mrc, _232233_f.get()._field_Scope);;
	if ((!(_232713_ok))) {
		_1d05356c9_pushErr(&(*_self_), _232233_f.get()._field_Decl.get()._field_Token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>());
	};
}



inline void _1d054ae92_checkFnInsSc(_1d0532a17_Sema* _self_, jule::Ptr<_1eb026831_FnIns>& _233336_f, jule::Ptr<_1d0512c28_scopeChecker>& _233352_sc) {
	_1d053173b_appendRetVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_1d05319e4_appendParamVars(_233352_sc.get()._field_table.get()._field_Vars,_233336_f);
	_1d0531cbe_appendGenericTypeAliases(_233352_sc.get()._field_table.get()._field_TypeAliases,_233336_f);
	_1d0522a29_check(_233352_sc, _233336_f.get()._field_Decl.get()._field_Scope,_233336_f.get()._field_Scope);
	if ((!(_1d0515896_stopped(_233352_sc.ptr())))) {
		_1d054ab73_checkRets(&(*_self_), _233336_f);
	};
}



inline void _1d054b2b1_checkFnInsCaller(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb026831_FnIns>& _234641_f, jule::Ptr<_212a0c2ab_Token> _234656_caller) {
	if (_234641_f.get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1d0593748_SymbolTable> _235117_old = _234641_f.get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1d0535311_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235117_old);
	});;
	jule::Ptr<_1d0593748_SymbolTable> _235317_file = _1d0532121_findFile(_234641_f.get()._field_Decl.get()._field_sema.get()._field_files,_234641_f.get()._field_Decl.get()._field_Token.get()._field_File);;
	if ((_235317_file != nullptr)) {
		_1d0535311_setCurrentFile(_234641_f.get()._field_Decl.get()._field_sema.ptr(), _235317_file);
	};
	jule::Ptr<_1d0512c28_scopeChecker> _235817_sc = _1d050857b_newScopeChecker(_234641_f.get()._field_Decl.get()._field_sema,_234641_f);;
	_235817_sc.get()._field_calledFrom=_234656_caller;
	_1d054ae92_checkFnInsSc(_self_.ptr(), _234641_f,_235817_sc);
	if ((_234641_f.get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors);
		_234641_f.get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1d054b536_checkFnIns(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb026831_FnIns>& _236835_f) {
	_1d054b2b1_checkFnInsCaller(_self_, _236835_f,nullptr);
}



inline void _1d054b7ab_checkTypeFn(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb023b80_Fn>& _237236_f) {
	if (_237236_f.get()._field_CppLinked) {
		return;;
	};
	if ((_237236_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _237236_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1aad24c68:;
		if (it != expr.end()) {
			jule::Ptr<_1eb026831_FnIns> _238221_ins = *it;
			{
				_1d054b536_checkFnIns(_self_, _238221_ins);
			}
			_iter_next_1aad24c68:;
			++it;
			goto _iter_begin_1aad24c68;
		}
		_iter_end_1aad24c68:;
	};
}



inline void _1d054ba31_checkTestFn(_1d0532a17_Sema* _self_, jule::Ptr<_1eb026831_FnIns>& _238735_f) {
	if (_238735_f.get()._field_Decl.get()._field_Public) {
		_1d05356c9_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("test function cannot be public", 30),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("remove \"pub\" modifier", 21),jule::Slice<jule::Any>());
		return;;
	};
	if (((_238735_f.get()._field_Params.len() != 1LL) || (_238735_f.get()._field_Result != nullptr))) {
		_1d05356c9_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d05cc9d5_Sptr> _240017_sptr = _1d05c6b00_Sptr(_238735_f.get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_240017_sptr == nullptr)) {
		_1d05356c9_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ea320268_StructIns> _240713_s = _1d05c7cdd_Struct(_240017_sptr.get()._field_Elem.ptr());;
	if (((_240713_s == nullptr) || (!(_1d052edee_isStdPackage(_240713_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("testing", 7)))))) {
		_1d05356c9_pushErr(&(*_self_), _238735_f.get()._field_Decl.get()._field_Token,jule::Str("wrong test function declaration", 31),jule::Slice<jule::Any>());
		_1d05359e8_pushSugggestion(&(*_self_), jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63),jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1d054bca6_precheckTypeFn(jule::Ptr<_1d0532a17_Sema> _self_, jule::Ptr<_1eb023b80_Fn>& _241539_f) {
	if (_241539_f.get()._field_CppLinked) {
		return;;
	};
	if ((_241539_f.get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if ((_241539_f.get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1eb026831_FnIns> _242621_ins = _1eb02506b_instanceForce(_241539_f);;
		_241539_f.get()._field_Instances = jule::alloc_for_append(_241539_f.get()._field_Instances,1);_241539_f.get()._field_Instances.__push(_242621_ins);;
		_1d053e97a_reloadFnInsTypes(_self_, _242621_ins);
		_242621_ins.get()._field_reloaded=true;
		if (_1d05db593_hasDirective(_241539_f.get()._field_Directives,jule::Str("test", 4))) {
			_1d054ba31_checkTestFn(_self_.ptr(), _242621_ins);
		};
	};
}



inline void _1d054be82_precheckFnTypes(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Traits;
		auto it = expr.begin();
		_iter_begin_1aad2e305:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> _243921_decl = *it;
			{
				{
					auto &expr = _243921_decl.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1aad2eb85:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _244025_m = *it;
						{
							_1d054bca6_precheckTypeFn(_self_, _244025_m);
						}
						_iter_next_1aad2eb85:;
						++it;
						goto _iter_begin_1aad2eb85;
					}
					_iter_end_1aad2eb85:;
				};
			}
			_iter_next_1aad2e305:;
			++it;
			goto _iter_begin_1aad2e305;
		}
		_iter_end_1aad2e305:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aad2e855:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _244421_decl = *it;
			{
				_1d054bca6_precheckTypeFn(_self_, _244421_decl);
			}
			_iter_next_1aad2e855:;
			++it;
			goto _iter_begin_1aad2e855;
		}
		_iter_end_1aad2e855:;
	};
}



inline void _1d054c15d_checkFnTypes(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aad311b4:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _245121_decl = *it;
			{
				_1d054b7ab_checkTypeFn(_self_, _245121_decl);
			}
			_iter_next_1aad311b4:;
			++it;
			goto _iter_begin_1aad311b4;
		}
		_iter_end_1aad311b4:;
	};
}



inline void _1d054c339_checkPackageTypes(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aad31c42:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _245921_f = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _245921_f);
				_1d0548687_checkGlobalTypes(_self_);
				_1d054be82_precheckFnTypes(_self_);
				_1d054a8ed_precheckStructTypes(_self_);
			}
			_iter_next_1aad31c42:;
			++it;
			goto _iter_begin_1aad31c42;
		}
		_iter_end_1aad31c42:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aad3354b:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _247021_f = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _247021_f);
				_1d054c15d_checkFnTypes(_self_);
				_1d054a1e4_checkStructTypes(_self_);
			}
			_iter_next_1aad3354b:;
			++it;
			goto _iter_begin_1aad3354b;
		}
		_iter_end_1aad3354b:;
	};
}



inline void _1d054c515_setFileSemaFields(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_file.get()._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aad3488d:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _247821_f = *it;
			{
				_247821_f.get()._field_sema=_self_;
			}
			_iter_next_1aad3488d:;
			++it;
			goto _iter_begin_1aad3488d;
		}
		_iter_end_1aad3488d:;
	};
	{
		auto &expr = _self_.get()._field_file.get()._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aad34b8a:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _248121_st = *it;
			{
				_248121_st.get()._field_sema=_self_;
			}
			_iter_next_1aad34b8a:;
			++it;
			goto _iter_begin_1aad34b8a;
		}
		_iter_end_1aad34b8a:;
	};
}



inline void _1d054c6e1_setSemaFields(jule::Ptr<_1d0532a17_Sema> _self_) {
	{
		auto &expr = _self_.get()._field_files;
		auto it = expr.begin();
		_iter_begin_1aad356d5:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _248721_file = *it;
			{
				_1d0535311_setCurrentFile(_self_.ptr(), _248721_file);
				_1d054c515_setFileSemaFields(_self_);
			}
			_iter_next_1aad356d5:;
			++it;
			goto _iter_begin_1aad356d5;
		}
		_iter_end_1aad356d5:;
	};
}



inline void _1d054c966_check(jule::Ptr<_1d0532a17_Sema> _self_, jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _249330_files) {
	_self_.get()._field_files=_249330_files;
	_1d0538d3c_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d054c6e1_setSemaFields(_self_);
	_1d05393c0_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d05391e4_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d0547ab5_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d054c339_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d0532a17_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1d054cd1d_missingRetChecker static__1d054d1d6_new(void) {
	return _1d054cd1d_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1d054d4b1_checkConditional(_1d054cd1d_missingRetChecker* _self_, jule::Ptr<_1d050bc22_Conditional> _253635_c) {
	{
		auto &expr = _253635_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1aad3a179:;
		if (it != expr.end()) {
			jule::Ptr<_1d050b5b2_If> _253721_elif = *it;
			{
				if ((_253721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1d054ddda_checkScope(&(*_self_), _253721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1aad3a179:;
			++it;
			goto _iter_begin_1aad3a179;
		}
		_iter_end_1aad3a179:;
	};
	return ((_253635_c.get()._field_Default != nullptr) && _1d054ddda_checkScope(&(*_self_), _253635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1d054d7be_checkMatch(_1d054cd1d_missingRetChecker* _self_, jule::Ptr<_1d050ee12_Match> _254829_m) {
	{
		auto &expr = _254829_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1aad3bd5c:;
		if (it != expr.end()) {
			jule::Ptr<_1d051095c_Case> _254921_c = *it;
			{
				if ((_254921_c == nullptr)) {
					return false;;
				};
				jule::I64 _255317_n = (*_self_)._field_breaked.len();;
				jule::Bool _255417_ok = _1d054ddda_checkScope(&(*_self_), _254921_c.get()._field_Scope);;
				{
					
					if ((_255317_n != (*_self_)._field_breaked.len())) {
						_case_begin_1aad3d9da:;
						{
							return false;;
						}
					}
					else if ((!(_255417_ok))) {
						_case_begin_1aad3da62:;
						{
							if ((!((*_self_)._field_falled))) {
								return false;;
							};
							goto _case_begin_1aad3dad9;
						}
					}
					else if ((*_self_)._field_falled) {
						_case_begin_1aad3dad9:;
						{
							(*_self_)._field_falled=false;
							if ((_254921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1aad3bd5c;
						}
					}
					_match_end_1aad3d963:;
				};
			}
			_iter_next_1aad3bd5c:;
			++it;
			goto _iter_begin_1aad3bd5c;
		}
		_iter_end_1aad3bd5c:;
	};
	return ((_254829_m.get()._field_Default != nullptr) && _1d054ddda_checkScope(&(*_self_), _254829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1d054dacc_checkInfIter(_1d054cd1d_missingRetChecker* _self_, jule::Ptr<_1d050c00d_InfIter> _257431_it) {
	jule::I64 _257513_n = (*_self_)._field_breaked.len();;
	if (_1d054ddda_checkScope(&(*_self_), _257431_it.get()._field_Scope)) {
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
		return true;;
	};
	if ((_257513_n != (*_self_)._field_breaked.len())) {
		jule::Uintptr _258117_itaddr = static_cast<jule::Uintptr>(_257431_it);;
		{
			auto expr = (*_self_)._field_breaked.slice(_257513_n);
			auto it = expr.begin();
			_iter_begin_1aad42923:;
			if (it != expr.end()) {
				jule::Uintptr _258220_addr = *it;
				{
					if ((_258117_itaddr == _258220_addr)) {
						(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
						return false;;
					};
				}
				_iter_next_1aad42923:;
				++it;
				goto _iter_begin_1aad42923;
			}
			_iter_end_1aad42923:;
		};
		(*_self_)._field_breaked=(*_self_)._field_breaked.slice(0LL,_257513_n);
	};
	return true;;
}



inline jule::Bool _1d054ddda_checkScope(_1d054cd1d_missingRetChecker* _self_, jule::Ptr<_1d050b1b6_Scope> _259329_s) {
	if ((_259329_s == nullptr)) {
		return false;;
	};
	{
		auto &expr = _259329_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1aad44392:;
		if (it != expr.end()) {
			jule::Any _259721_st = *it;
			{
				{
					auto &_match_expr{ _259721_st };
					
					if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1aad44c77:;
						{
							(*_self_)._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type52) {
						_case_begin_1aad44d21:;
						{
							jule::Uintptr _260321_addr = _259721_st.cast_ptr<_1d050d619_BreakSt>(&__jule_any_type52).get()._field_It;;
							if ((_260321_addr != 0LLU)) {
								(*_self_)._field_breaked = jule::alloc_for_append((*_self_)._field_breaked,1);(*_self_)._field_breaked.__push(_260321_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type43) {
						_case_begin_1aad44d87:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type38) {
						_case_begin_1aad44ded:;
						{
							if (_1d054dacc_checkInfIter(&(*_self_), _259721_st.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type53) {
						_case_begin_1aad44e64:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1aad44eca:;
						{
							if (_1d054ddda_checkScope(&(*_self_), _259721_st.cast_ptr<_1d050b1b6_Scope>(&__jule_any_type23))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type25) {
						_case_begin_1aad45052:;
						{
							{
								auto &_match_expr{ _259721_st.cast_ptr<_1d0598572_Data>(&__jule_any_type25).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type24) {
									_case_begin_1aad489e5:;
									{
										return true;;
									}
								}
								_match_end_1aad4873c:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1aad450c9:;
						{
							if (_1d054d4b1_checkConditional(&(*_self_), _259721_st.cast_ptr<_1d050bc22_Conditional>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1aad45151:;
						{
							if (_1d054d7be_checkMatch(&(*_self_), _259721_st.cast_ptr<_1d050ee12_Match>(&__jule_any_type50))) {
								return true;;
							};
						}
					}
					_match_end_1aad44ace:;
				};
			}
			_iter_next_1aad44392:;
			++it;
			goto _iter_begin_1aad44392;
		}
		_iter_end_1aad44392:;
	};
	return false;;
}



inline jule::Bool _1d054e1e8_check(_1d054cd1d_missingRetChecker* _self_, jule::Ptr<_1d050b1b6_Scope> _263924_s) {
	return _1d054ddda_checkScope(&(*_self_), _263924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d054cd1d_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d054e9ce_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0550dcb_IsInitialized(_1d0550a13_Var* _self_) {
	return ((*_self_)._field_Value != nullptr);;
}



inline jule::Bool _1d0551140_IsTypeInferred(_1d0550a13_Var* _self_) {
	return (((*_self_)._field_Kind == nullptr) || ((*_self_)._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1d05513a4_untypedConstant(_1d0550a13_Var* _self_) {
	return (_1d0551140_IsTypeInferred(&(*_self_)) && (*_self_)._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0550a13_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d0551e32_Dispose(jule::Ptr<_1eb023b80_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1eb0240e2_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1eb022bd4_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1d05521c9_Str(jule::Ptr<_1eb023b80_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1eb0240e2_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1eb022bd4_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1eb026831_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1d05c9251_Prim> _3913_prim = _1d05c688b_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1d05cc485_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1d055251a_logical(jule::Ptr<_1eb023b80_Fn>& _4624_f, jule::Str _4632_ident) {
	if ((((((((((((((_4624_f == nullptr) || (_4624_f.get()._field_Ident != _4632_ident)) || (_4624_f.get()._field_Owner == nullptr)) || (_4624_f.get()._field_Instances.len() == 0LL)) || _4624_f.get()._field_Statically) || _4624_f.get()._field_Unsafety) || _1eb0240e2_IsVoid(_4624_f.ptr())) || (_4624_f.get()._field_Generics.len() != 0LL)) || (_4624_f.get()._field_Params.len() != 2LL)) || _4624_f.get()._field_Params[0LL].get()._field_Mutable) || _1eb022bd4_IsRef(_4624_f.get()._field_Params[0LL].ptr())) || _4624_f.get()._field_Params[1LL].get()._field_Mutable) || _4624_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1eb026831_FnIns> _6317_ins = _4624_f.get()._field_Instances[0LL];;
	jule::Ptr<_1d05c9251_Prim> _6413_prim = _1d05c688b_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1d05cc221_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1d05c7cdd_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1d05527b2_Eq(jule::Ptr<_1eb023b80_Fn> _7218_f) {
	return static__1d055251a_logical(_7218_f,jule::Str("Eq", 2));;
}



inline jule::Bool static__1d0552a59_Gt(jule::Ptr<_1eb023b80_Fn> _7718_f) {
	return static__1d055251a_logical(_7718_f,jule::Str("Gt", 2));;
}



inline jule::Bool static__1d0552d01_GtEq(jule::Ptr<_1eb023b80_Fn> _8220_f) {
	return static__1d055251a_logical(_8220_f,jule::Str("GtEq", 4));;
}



inline jule::Bool static__1d0553098_Lt(jule::Ptr<_1eb023b80_Fn> _8718_f) {
	return static__1d055251a_logical(_8718_f,jule::Str("Lt", 2));;
}



inline jule::Bool static__1d0553340_LtEq(jule::Ptr<_1eb023b80_Fn> _9220_f) {
	return static__1d055251a_logical(_9220_f,jule::Str("LtEq", 4));;
}



inline jule::Bool static__1d0553681_result(jule::Ptr<_1eb023b80_Fn>& _9623_f, jule::Str _9631_ident) {
	if ((((((((((((((_9623_f == nullptr) || (_9623_f.get()._field_Ident != _9631_ident)) || (_9623_f.get()._field_Owner == nullptr)) || (_9623_f.get()._field_Instances.len() == 0LL)) || _9623_f.get()._field_Statically) || _9623_f.get()._field_Unsafety) || _1eb0240e2_IsVoid(_9623_f.ptr())) || (_9623_f.get()._field_Generics.len() != 0LL)) || (_9623_f.get()._field_Params.len() != 2LL)) || _9623_f.get()._field_Params[0LL].get()._field_Mutable) || _1eb022bd4_IsRef(_9623_f.get()._field_Params[0LL].ptr())) || _9623_f.get()._field_Params[1LL].get()._field_Mutable) || _9623_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1eb026831_FnIns> _11317_ins = _9623_f.get()._field_Instances[0LL];;
	return (_1d05c7cdd_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1d0553928_Shl(jule::Ptr<_1eb023b80_Fn> _11819_f) {
	return static__1d0553681_result(_11819_f,jule::Str("Shl", 3));;
}



inline jule::Bool static__1d0553bc0_Shr(jule::Ptr<_1eb023b80_Fn> _12319_f) {
	return static__1d0553681_result(_12319_f,jule::Str("Shr", 3));;
}



inline jule::Bool static__1d0553e67_Add(jule::Ptr<_1eb023b80_Fn> _12819_f) {
	return static__1d0553681_result(_12819_f,jule::Str("Add", 3));;
}



inline jule::Bool static__1d055420e_Sub(jule::Ptr<_1eb023b80_Fn> _13319_f) {
	return static__1d0553681_result(_13319_f,jule::Str("Sub", 3));;
}



inline jule::Bool static__1d05544a6_Div(jule::Ptr<_1eb023b80_Fn> _13819_f) {
	return static__1d0553681_result(_13819_f,jule::Str("Div", 3));;
}



inline jule::Bool static__1d055474d_Mul(jule::Ptr<_1eb023b80_Fn> _14319_f) {
	return static__1d0553681_result(_14319_f,jule::Str("Mul", 3));;
}



inline jule::Bool static__1d05549e5_Mod(jule::Ptr<_1eb023b80_Fn> _14819_f) {
	return static__1d0553681_result(_14819_f,jule::Str("Mod", 3));;
}



inline jule::Bool static__1d0554c8c_BitAnd(jule::Ptr<_1eb023b80_Fn> _15322_f) {
	return static__1d0553681_result(_15322_f,jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1d0555034_BitOr(jule::Ptr<_1eb023b80_Fn> _15821_f) {
	return static__1d0553681_result(_15821_f,jule::Str("BitOr", 5));;
}



inline jule::Bool static__1d05552cb_BitXor(jule::Ptr<_1eb023b80_Fn> _16322_f) {
	return static__1d0553681_result(_16322_f,jule::Str("BitXor", 6));;
}



inline jule::Bool static__1d055561c_unary(jule::Ptr<_1eb023b80_Fn>& _16722_f, jule::Str _16730_ident) {
	if ((((((((((((_16722_f == nullptr) || (_16722_f.get()._field_Ident != _16730_ident)) || (_16722_f.get()._field_Owner == nullptr)) || (_16722_f.get()._field_Instances.len() == 0LL)) || _16722_f.get()._field_Statically) || _16722_f.get()._field_Unsafety) || _1eb0240e2_IsVoid(_16722_f.ptr())) || (_16722_f.get()._field_Generics.len() != 0LL)) || (_16722_f.get()._field_Params.len() != 1LL)) || _16722_f.get()._field_Params[0LL].get()._field_Mutable) || _1eb022bd4_IsRef(_16722_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1eb026831_FnIns> _18217_ins = _16722_f.get()._field_Instances[0LL];;
	return (_1d05c7cdd_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1d05558b4_Neg(jule::Ptr<_1eb023b80_Fn> _18719_f) {
	return static__1d055561c_unary(_18719_f,jule::Str("Neg", 3));;
}



inline jule::Bool static__1d0555b5b_Pos(jule::Ptr<_1eb023b80_Fn> _19219_f) {
	return static__1d055561c_unary(_19219_f,jule::Str("Pos", 3));;
}



inline jule::Bool static__1d0555e03_BitNot(jule::Ptr<_1eb023b80_Fn> _19722_f) {
	return static__1d055561c_unary(_19722_f,jule::Str("BitNot", 6));;
}



inline jule::Bool static__1d0556244_assign(jule::Ptr<_1eb023b80_Fn>& _20123_f, jule::Str _20131_ident) {
	if ((((((((((((((_20123_f == nullptr) || (_20123_f.get()._field_Ident != _20131_ident)) || (_20123_f.get()._field_Owner == nullptr)) || (_20123_f.get()._field_Instances.len() == 0LL)) || _20123_f.get()._field_Statically) || _20123_f.get()._field_Unsafety) || (!(_1eb0240e2_IsVoid(_20123_f.ptr())))) || (_20123_f.get()._field_Generics.len() != 0LL)) || (_20123_f.get()._field_Params.len() != 2LL)) || (!(_20123_f.get()._field_Params[0LL].get()._field_Mutable))) || _1eb022bd4_IsRef(_20123_f.get()._field_Params[0LL].ptr())) || _20123_f.get()._field_Params[1LL].get()._field_Mutable) || _20123_f.get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1d05564db_AddAssign(jule::Ptr<_1eb023b80_Fn> _22125_f) {
	return static__1d0556244_assign(_22125_f,jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1d0556783_SubAssign(jule::Ptr<_1eb023b80_Fn> _22625_f) {
	return static__1d0556244_assign(_22625_f,jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1d0556a2a_DivAssign(jule::Ptr<_1eb023b80_Fn> _23125_f) {
	return static__1d0556244_assign(_23125_f,jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1d0556cc2_MulAssign(jule::Ptr<_1eb023b80_Fn> _23625_f) {
	return static__1d0556244_assign(_23625_f,jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1d0557069_ModAssign(jule::Ptr<_1eb023b80_Fn> _24125_f) {
	return static__1d0556244_assign(_24125_f,jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1d0557311_ShlAssign(jule::Ptr<_1eb023b80_Fn> _24625_f) {
	return static__1d0556244_assign(_24625_f,jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1d05575a8_ShrAssign(jule::Ptr<_1eb023b80_Fn> _25125_f) {
	return static__1d0556244_assign(_25125_f,jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1d0557850_BitOrAssign(jule::Ptr<_1eb023b80_Fn> _25627_f) {
	return static__1d0556244_assign(_25627_f,jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1d0557ae7_BitAndAssign(jule::Ptr<_1eb023b80_Fn> _26128_f) {
	return static__1d0556244_assign(_26128_f,jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1d0557d8e_BitXorAssign(jule::Ptr<_1eb023b80_Fn> _26628_f) {
	return static__1d0556244_assign(_26628_f,jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05517b1_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1d0582858_pushErr(_1d058233b_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1d05356c9_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_11726_fmt,_11739_args);
}



inline jule::Bool _1d0582abc_checkTrait(_1d058233b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d05c5439_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d04ed4a5_Trait> _12513_trt = _1d05c8052_Trait((*_self_)._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1d05c6b00_Sptr((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1aad873a2:;
			{
				_12617_ref=true;
				(*_self_)._field_src=_1d05c6b00_Sptr((*_self_)._field_src.ptr()).get()._field_Elem;
				if ((_1d05c7cdd_Struct((*_self_)._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1aad86c20;
			}
		}
		else if ((_1d05c7cdd_Struct((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1aad86c20:;
			{
				jule::Ptr<_1ea320268_StructIns> _13617_s = _1d05c7cdd_Struct((*_self_)._field_src.ptr());;
				if ((!(_1ea2d4ded_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1d0569477_traitHasReferenceReceiver(_12513_trt))) {
					_1d0582858_pushErr(&(*_self_), jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d05c8052_Trait((*_self_)._field_src.ptr()) != nullptr)) {
			_case_begin_1aad86c86:;
			{
				__jule_func_result = (_12513_trt == _1d05c8052_Trait((*_self_)._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aad86ba9:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aad86b43:;
	};
}



inline jule::Bool _1d0582d31_checkPtr(_1d058233b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d05c5439_IsNil((*_self_)._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05d1049_Ptr> _15617_dest = _1d05c6d64_Ptr((*_self_)._field_dest.ptr());;
	if (_1d05d1a1c_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1d05c4c0d_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d0583095_checkPrim(_1d058233b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*_self_)._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1d05c9251_Prim> _16517_prim = _1d05c688b_Prim((*_self_)._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1d05cc6e9_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1d05c4c0d_Equal((*_self_)._field_dest, (*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d058344c_typeEnum(_1d058233b_typeCompatibilityChecker* _self_, jule::Ptr<_1d0501be5_TypeEnum>& _17328_e, jule::Ptr<_1d05c4504_TypeKind>& _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _17328_e.get()._field_Items;
		auto it = expr.begin();
		_iter_begin_1aad8e464:;
		if (it != expr.end()) {
			jule::Ptr<_1d050162e_TypeEnumItem> _17421_item = *it;
			{
				if (_1d05c4c0d_Equal(_17421_item.get()._field_Kind.get()._field_Kind, _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1d0501be5_TypeEnum> _17821_ke = _1d05c733c_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1aad8e464;
				};
				if (_1d058344c_typeEnum(&(*_self_), _17821_ke,_17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1aad8e464:;
			++it;
			goto _iter_begin_1aad8e464;
		}
		_iter_end_1aad8e464:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d05836b1_checkTypeEnum(_1d058233b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d05c4c0d_Equal((*_self_)._field_dest, (*_self_)._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d0501be5_TypeEnum> _19317_e = _1d05c733c_TypeEnum((*_self_)._field_dest.ptr());;
	__jule_func_result = _1d058344c_typeEnum(&(*_self_), _19317_e,(*_self_)._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d0583925_check(_1d058233b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1d05c6d64_Ptr((*_self_)._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1d0582d31_checkPtr(&(*_self_));
		return __jule_func_result;;
	};
	if (_1d05c5dda_NilCompatible((*_self_)._field_dest.ptr())) {
		if (_1d05c5439_IsNil((*_self_)._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1d05c688b_Prim((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1aad9459b:;
			{
				__jule_func_result = _1d0583095_checkPrim(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_1d05c733c_TypeEnum((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1aad943e2:;
			{
				__jule_func_result = _1d05836b1_checkTypeEnum(&(*_self_));
				return __jule_func_result;;
			}
		}
		else if ((_1d05c8052_Trait((*_self_)._field_dest.ptr()) != nullptr)) {
			_case_begin_1aad93ac8:;
			{
				__jule_func_result = _1d0582abc_checkTrait(&(*_self_));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aad93600:;
			{
				__jule_func_result = _1d05c4c0d_Equal((*_self_)._field_dest, (*_self_)._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1aad934e0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d058233b_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1d05843c6_pushErr(_1d0583e64_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1d05356c9_pushErr((*_self_)._field_s.ptr(), (*_self_)._field_errorToken,_22926_fmt,_22939_args);
}



inline jule::Bool _1d058463a_checkValidity(_1d0583e64_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1d05c7a79_Fn((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aad972c4:;
			{
				jule::Ptr<_1eb026831_FnIns> _23717_f = _1d05c7a79_Fn((*_self_)._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1eb027bb7_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1aad988ad:;
						{
							_1d05843c6_pushErr(&(*_self_), jule::Str("builtin define cannot use as anonymous function", 47),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1aad98935:;
						{
							_1d05843c6_pushErr(&(*_self_), jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1eb024356_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1aad989ac:;
						{
							_1d05843c6_pushErr(&(*_self_), jule::Str("non-static methods cannot use as anonymous function", 51),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1aad98a34:;
						{
							_1d05843c6_pushErr(&(*_self_), jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
							_1d05359e8_pushSugggestion((*_self_)._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57),jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1aad987d1:;
				};
			}
		}
		else if ((_1d05c852a_Tup((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aad9734b:;
			{
				_1d05843c6_pushErr(&(*_self_), jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1aad97219:;
	};
	return _23417_valid;;
}



inline jule::Bool _1d058489e_checkConst(_1d0583e64_assignTypeChecker* _self_) {
	if (((((!(_1d0598e35_IsConst((*_self_)._field_d.ptr()))) || (_1d05c688b_Prim((*_self_)._field_dest.ptr()) == nullptr)) || (_1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1eb0090a5_IsNum(_1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type49_compare((*_self_)._field_d.get()._field_Model, (*_self_)._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _1d05c688b_Prim((*_self_)._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1eb008d0d_IsFloat(_27413_kind)) {
			_case_begin_1aada1245:;
			{
				if ((!(_1d05695a9_floatAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1d05843c6_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_1eb0089de_IsInt(_27413_kind)) {
			_case_begin_1aada0ac4:;
			{
				if ((!(_1d0582160_intAssignable(_27413_kind,(*_self_)._field_d)))) {
					_1d05843c6_pushErr(&(*_self_), jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
					return false;;
				};
				(*_self_)._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1aada0a5d:;
			{
				return false;;
			}
		}
		_match_end_1aada09e7:;
	};
	return true;;
}



inline jule::Bool _1d0584b13_isPrim(_1d0583e64_assignTypeChecker* _self_) {
	if (((*_self_)._field_dest.get()._field_Variadic || (*_self_)._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1d05c51c5_CppLinked((*_self_)._field_dest.ptr()) || _1d05c51c5_CppLinked((*_self_)._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1d05c688b_Prim((*_self_)._field_dest.ptr()) != nullptr) && (_1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1d0584d77_checkCompatibility(_1d0583e64_assignTypeChecker* _self_) {
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1aada5458:;
			{
				return false;;
			}
		}
		else if ((!(_1d058463a_checkValidity(&(*_self_))))) {
			_case_begin_1aada54d0:;
			{
				return false;;
			}
		}
		else if (_1d058489e_checkConst(&(*_self_))) {
			_case_begin_1aada5557:;
			{
				return true;;
			}
		}
		else if ((_1d05c70c8_Enum((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aada55ce:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _31821_dkind = (*_self_)._field_dest;;
				if ((_1d05c70c8_Enum((*_self_)._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_1d05c70c8_Enum((*_self_)._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1d05c688b_Prim((*_self_)._field_dest.ptr()) == nullptr)) {
					goto _match_end_1aada5315;
				};
				if (_1eb005821_TypesAreCompatible(_1d05c688b_Prim(_1d05c70c8_Enum((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind,_1d05c688b_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1d0584b13_isPrim(&(*_self_))) {
			_case_begin_1aada5656:;
			{
				jule::Ptr<_1d05c9251_Prim> _32817_dest = _1d05c688b_Prim((*_self_)._field_dest.ptr());;
				if (_1d05cc6e9_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1d05c9251_Prim> _33221_src = _1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1eb005821_TypesAreCompatible(_32817_dest.get()._field_Kind,_33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1aada5315:;
	};
	return _1d053ca11_checkTypeCompatibility((*_self_)._field_s, (*_self_)._field_dest,(*_self_)._field_d.get()._field_Kind,(*_self_)._field_errorToken);;
}



inline jule::Bool _1d05850db_check(_1d0583e64_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _1d0584d77_checkCompatibility(&(*_self_));;
	if ((_34113_ok && (!((*_self_)._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1d05dd0de_applyImplicitCast((*_self_)._field_dest,(*_self_)._field_d);
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0583e64_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aadbd62a_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1aadbec25:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1aadc0a5b:;
						{
							_36421_elem=_1d05c75a1_Arr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1aadc05c7:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea305baa_ArrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1d0587099_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1aadbeb8c:;
	};
	return false;;
}

inline jule::Bool _1aadbcd22_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1aadc3289:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1aadc4158:;
						{
							_36421_elem=_1d05c7815_Slc(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1aadc3b3b:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea304e51_SlcTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1d0587099_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1aadc3201:;
	};
	return false;;
}

inline jule::Bool _1aadc282c_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1aadc67ed:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1aadc7733:;
						{
							_36421_elem=_1d05c6d64_Ptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1aadc71a0:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea305528_PtrTypeDecl>(&__jule_any_type80).get()._field_Elem;
				return _1d0587099_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1aadc6765:;
	};
	return false;;
}

inline jule::Bool _1aadbd1a7_annotateConstraintElem(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _36149_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1aadc9a43:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1aadcaa00:;
						{
							_36421_elem=_1d05c6b00_Sptr(_36149_k.ptr()).get()._field_Elem;
						}
					}
					_match_end_1aadca3e5:;
				};
				(*_self_)._field_c=(*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea304a55_SptrTypeDecl>(&__jule_any_type81).get()._field_Elem;
				return _1d0587099_annotateConstraint(&(*_self_), _36421_elem);;
			}
		}
		_match_end_1aadc99aa:;
	};
	return false;;
}



inline jule::Bool _1d058632e_annotateConstraintMap(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1aadad1b9:;
			{
				jule::Ptr<_1d05ce9e8_Map> _38421_m = _1d05c82b6_Map(_38145_k.ptr());;
				jule::Ptr<_1ea306408_MapTypeDecl> _38521_m2 = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea306408_MapTypeDecl>(&__jule_any_type82);;
				(*_self_)._field_c=_38521_m2.get()._field_Key;
				if ((!(_1d0587099_annotateConstraint(&(*_self_), _38421_m.get()._field_Key)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*_self_)._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _1d0587099_annotateConstraint(&(*_self_), _38421_m.get()._field_Val);
				return __jule_func_result;;
			}
		}
		_match_end_1aadad164:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d058663c_annotateConstraintTup(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1aadb08a3:;
			{
				jule::Ptr<_1ea30523c_TupleTypeDecl> _39921_tup = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea30523c_TupleTypeDecl>(&__jule_any_type83);;
				jule::Ptr<_1d05cdec0_Tuple> _40021_tup2 = _1d05c852a_Tup(_39645_k.ptr());;
				{
					auto &expr = _40021_tup2.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1aadb1dc1:;
					if (it != expr.end()) {
						jule::Ptr<_1d05c4504_TypeKind> _40125_t2 = *it;
						{
							{
								auto &expr = _39921_tup.get()._field_Types;
								auto it = expr.begin();
								_iter_begin_1aadb261e:;
								if (it != expr.end()) {
									jule::Ptr<_1ea30369c_TypeDecl> _40229_t = *it;
									{
										(*_self_)._field_c=_40229_t;
										if (_1d0587099_annotateConstraint(&(*_self_), _40125_t2)) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1aadb261e:;
									++it;
									goto _iter_begin_1aadb261e;
								}
								_iter_end_1aadb261e:;
							};
						}
						_iter_next_1aadb1dc1:;
						++it;
						goto _iter_begin_1aadb1dc1;
					}
					_iter_end_1aadb1dc1:;
				};
			}
		}
		_match_end_1aadb082b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d058694a_annotateConstraintFn(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1aadb23ee:;
			{
				jule::Ptr<_1ea31512b_FnDecl> _41621_pf = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea31512b_FnDecl>(&__jule_any_type16);;
				jule::Ptr<_1eb026831_FnIns> _41721_f = _1d05c7a79_Fn(_41344_k.ptr());;
				{
					auto &expr = _41721_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1aadb4852:;
					if (it != expr.end()) {
						jule::I64 _41818_i = it - expr.begin();
						jule::Ptr<_1eb025962_ParamIns> _41825_fp = *it;
						{
							(*_self_)._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_1d0587099_annotateConstraint(&(*_self_), _41825_fp.get()._field_Kind)) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1aadb4852:;
						++it;
						_41818_i++;
						goto _iter_begin_1aadb4852;
					}
					_iter_end_1aadb4852:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*_self_)._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_1d0587099_annotateConstraint(&(*_self_), _41721_f.get()._field_Result)) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1aadb2399:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d0586c7a_annotateConstraintIdent(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _43447_k) {
	jule::Ptr<_1ea303c63_IdentTypeDecl> _43517_ident = (*_self_)._field_c.get()._field_Kind.cast_ptr<_1ea303c63_IdentTypeDecl>(&__jule_any_type21);;
	jule::Ptr<_1ea320268_StructIns> _43617_s = _1d05c7cdd_Struct(_43447_k.ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aadb7745:;
		if (it != expr.end()) {
			jule::I64 _43713_i = it - expr.begin();
			jule::Ptr<_1ea310995_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_1d05c2cc7_InsGeneric> _43925_fg = (*_self_)._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_1d05873b8_pushGeneric(&(*_self_), _43447_k,_43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_1aadb7745;
				};
				jule::Ptr<_1ea30369c_TypeDecl> _44921_c = (*_self_)._field_c;;
				{
					auto &expr = _43517_ident.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1aadb9a00:;
					if (it != expr.end()) {
						jule::Ptr<_1ea30369c_TypeDecl> _45025_ig = *it;
						{
							(*_self_)._field_c=_45025_ig;
							{
								auto &expr = _43617_s.get()._field_Generics;
								auto it = expr.begin();
								_iter_begin_1aadbac98:;
								if (it != expr.end()) {
									jule::Ptr<_1d05c2cc7_InsGeneric> _45229_sg = *it;
									{
										if (_1d0587099_annotateConstraint(&(*_self_), _45229_sg.get()._field_Kind)) {
											return true;;
										};
									}
									_iter_next_1aadbac98:;
									++it;
									goto _iter_begin_1aadbac98;
								}
								_iter_end_1aadbac98:;
							};
						}
						_iter_next_1aadb9a00:;
						++it;
						goto _iter_begin_1aadb9a00;
					}
					_iter_end_1aadb9a00:;
				};
				(*_self_)._field_c=_44921_c;
			}
			_iter_next_1aadb7745:;
			++it;
			_43713_i++;
			goto _iter_begin_1aadb7745;
		}
		_iter_end_1aadb7745:;
	};
	return false;;
}



inline jule::Bool _1d0587099_annotateConstraint(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _46342_k) {
	{
		auto &_match_expr{ (*_self_)._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1aadbb183:;
			{
				return _1d0586c7a_annotateConstraintIdent(&(*_self_), _46342_k);;
			}
		}
		_match_end_1aadbb12d:;
	};
	{
		
		if ((_1d05c75a1_Arr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbc1ea:;
			{
				return _1aadbd62a_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1d05c7815_Slc(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbc6c3:;
			{
				return _1aadbcd22_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1d05c6d64_Ptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbc739:;
			{
				return _1aadc282c_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1d05c6b00_Sptr(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbc816:;
			{
				return _1aadbd1a7_annotateConstraintElem(&(*_self_), _46342_k);;
			}
		}
		else if ((_1d05c82b6_Map(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbc87c:;
			{
				return _1d058632e_annotateConstraintMap(&(*_self_), _46342_k);;
			}
		}
		else if ((_1d05c7a79_Fn(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbbcbb:;
			{
				return _1d058694a_annotateConstraintFn(&(*_self_), _46342_k);;
			}
		}
		else if ((_1d05c852a_Tup(_46342_k.ptr()) != nullptr)) {
			_case_begin_1aadbbd32:;
			{
				return _1d058663c_annotateConstraintTup(&(*_self_), _46342_k);;
			}
		}
		else {
			_case_begin_1aadbc5d5:;
			{
				return false;;
			}
		}
		_match_end_1aadbc580:;
	};
}



inline void _1d05873b8_pushGeneric(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _48835_k, jule::I64 _48849_i) {
	(*_self_)._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_1d05c2cc7_InsGeneric>(_1d05c2cc7_InsGeneric{._field_Kind=_48835_k, });
	jule::Ptr<_1ea310995_GenericDecl> _49017_gd = (*_self_)._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto &expr = (*_self_)._field_ignored;
		auto it = expr.begin();
		_iter_begin_1aadcd4e7:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c4504_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _1d05c4900_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=_48835_k.get()._field_Kind;
				};
			}
			_iter_next_1aadcd4e7:;
			++it;
			goto _iter_begin_1aadcd4e7;
		}
		_iter_end_1aadcd4e7:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*_self_)._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1d0587099_annotateConstraint(&(*_self_), _48835_k);
}



inline jule::Bool _1d05876c6_annotatePrim(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1d05894ec_annotateAny(&(*_self_), _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _1d05879d4_annotateArr(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05d05dc_Arr> _50817_parr = _1d05c75a1_Arr((*((*_self_)._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05d05dc_Arr> _51217_arr = _1d05c75a1_Arr(_50742_k.ptr());;
	(*_self_)._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _1d058980a_annotateKind(&(*_self_), _51217_arr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1d0587ce2_annotateSlc(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05cd442_Slc> _51817_pslc = _1d05c7815_Slc((*((*_self_)._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05cd442_Slc> _52217_slc = _1d05c7815_Slc(_51742_k.ptr());;
	(*_self_)._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _1d058980a_annotateKind(&(*_self_), _52217_slc.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1d0588199_checkMapKey(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>* _52741_k, jule::Ptr<_1d05c4504_TypeKind>& _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05c4504_TypeKind>* _52817_old = (*_self_)._field_k;;
	(*_self_)._field_k=_52741_k;
	__jule_func_result=_1d058980a_annotateKind(&(*_self_), _52761_ck);
	(*_self_)._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d05884a7_annotateMap(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05ce9e8_Map> _53617_pmap = _1d05c82b6_Map((*((*_self_)._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05ce9e8_Map> _54017_m = _1d05c82b6_Map(_53542_k.ptr());;
	__jule_func_result = (_1d0588199_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Key)),_54017_m.get()._field_Key) && _1d0588199_checkMapKey(&(*_self_), (&(_53617_pmap.get()._field_Val)),_54017_m.get()._field_Val));
	return __jule_func_result;;
}



inline jule::Bool _1d05887b5_annotateFn(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1eb026831_FnIns> _54617_pf = _1d05c7a79_Fn((*((*_self_)._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1eb026831_FnIns> _55017_f = _1d05c7a79_Fn(_54541_k.ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_1aadd98ee:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1eb0240e2_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _1eb0240e2_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_1aadd9976:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aadd9866:;
	};
	__jule_func_result=true;
	jule::Ptr<_1d05c4504_TypeKind>* _55917_old = (*_self_)._field_k;;
	{
		auto &expr = _55017_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aaddb26e:;
		if (it != expr.end()) {
			jule::I64 _56014_i = it - expr.begin();
			jule::Ptr<_1eb025962_ParamIns> _56021_fp = *it;
			{
				(*_self_)._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_1d058980a_annotateKind(&(*_self_), _56021_fp.get()._field_Kind) && __jule_func_result);
			}
			_iter_next_1aaddb26e:;
			++it;
			_56014_i++;
			goto _iter_begin_1aaddb26e;
		}
		_iter_end_1aaddb26e:;
	};
	if ((!(_1eb0240e2_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*_self_)._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_1d058980a_annotateKind(&(*_self_), _55017_f.get()._field_Result) && __jule_func_result);
	};
	(*_self_)._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d0588ac3_annotatePtr(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05d1049_Ptr> _57517_pptr = _1d05c6d64_Ptr((*((*_self_)._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05d1049_Ptr> _57917_ptr = _1d05c6d64_Ptr(_57442_k.ptr());;
	(*_self_)._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _1d058980a_annotateKind(&(*_self_), _57917_ptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1d0588dd1_annotateSptr(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05cc9d5_Sptr> _58517_ssptr = _1d05c6b00_Sptr((*((*_self_)._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05cc9d5_Sptr> _58917_sptr = _1d05c6b00_Sptr(_58443_k.ptr());;
	(*_self_)._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _1d058980a_annotateKind(&(*_self_), _58917_sptr.get()._field_Elem);
	return __jule_func_result;;
}



inline jule::Bool _1d05891de_annotateStruct(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ea320268_StructIns> _59517_s = _1d05c7cdd_Struct((*((*_self_)._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ea320268_StructIns> _59917_s2 = _1d05c7cdd_Struct(_59445_k.ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _59517_s.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aade43a9:;
		if (it != expr.end()) {
			jule::I64 _60314_i = it - expr.begin();
			jule::Ptr<_1d05c2cc7_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_1d05c2cc7_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_1d05c4c0d_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_1aade43a9;
				};
				(*_self_)._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_1d058980a_annotateKind(&(*_self_), _60421_g2.get()._field_Kind)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aade43a9:;
			++it;
			_60314_i++;
			goto _iter_begin_1aade43a9;
		}
		_iter_end_1aade43a9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d05894ec_annotateAny(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _1d05c4900_Str((*((*_self_)._field_k)).ptr());;
	{
		auto &expr = (*_self_)._field_f.get()._field_Decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aade6d18:;
		if (it != expr.end()) {
			jule::I64 _61813_i = it - expr.begin();
			jule::Ptr<_1ea310995_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_1aade6d18;
				};
				jule::Ptr<_1d05c2cc7_InsGeneric> _62217_t = (*_self_)._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_1aade89a7:;
						{
							_1d05873b8_pushGeneric(&(*_self_), _61642_k,_61813_i);
						}
					}
					else if ((!(_1d05c4c0d_Equal(_62217_t.get()._field_Kind, _61642_k)))) {
						_case_begin_1aade8a2e:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1aade8853:;
				};
				(*((*_self_)._field_k)).get()._field_Kind=_61642_k.get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1aade6d18:;
			++it;
			_61813_i++;
			goto _iter_begin_1aade6d18;
		}
		_iter_end_1aade6d18:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d058980a_annotateKind(_1d0585949_dynamicTypeAnnotation* _self_, jule::Ptr<_1d05c4504_TypeKind>& _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*_self_)._field_k == nullptr) || ((*((*_self_)._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1d05894ec_annotateAny(&(*_self_), _63743_k)) {
			_case_begin_1aadeb070:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d05c688b_Prim(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb0d6:;
			{
				__jule_func_result = _1d05876c6_annotatePrim(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c75a1_Arr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb14c:;
			{
				__jule_func_result = _1d05879d4_annotateArr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c7815_Slc(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb1b3:;
			{
				__jule_func_result = _1d0587ce2_annotateSlc(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c82b6_Map(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb438:;
			{
				__jule_func_result = _1d05884a7_annotateMap(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c7a79_Fn(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb49e:;
			{
				__jule_func_result = _1d05887b5_annotateFn(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c6d64_Ptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb515:;
			{
				__jule_func_result = _1d0588ac3_annotatePtr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c6b00_Sptr(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb57b:;
			{
				__jule_func_result = _1d0588dd1_annotateSptr(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d05c7cdd_Struct(_63743_k.ptr()) != nullptr)) {
			_case_begin_1aadeb7ce:;
			{
				__jule_func_result = _1d05891de_annotateStruct(&(*_self_), _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aadeb009:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aadeaea4:;
	};
}



inline jule::Bool _1d0589a6e_annotate(_1d0585949_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*_self_)._field_k=(&((*_self_)._field_p.get()._field_Kind));
	__jule_func_result = _1d058980a_annotateKind(&(*_self_), (*_self_)._field_a.get()._field_Kind);
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0585949_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1d058a861_pushErrToken(_1d058a311_fnCallArgChecker* _self_, jule::Ptr<_212a0c2ab_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_1d05356c9_pushErr((*_self_)._field_e.get()._field_s.ptr(), _68231_token,_68246_fmt,_68259_args);
}



inline void _1d058ab80_pushErr(_1d058a311_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_1d058a861_pushErrToken(&(*_self_), (*_self_)._field_errorToken,_68626_fmt,_68639_args);
}



inline jule::Slice<jule::Ptr<_1eb025962_ParamIns>> _1d058ade4_getParams(_1d058a311_fnCallArgChecker* _self_) {
	if (((((*_self_)._field_f.get()._field_Params.len() > 0LL) && ((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1eb022970_IsSelf((*_self_)._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*_self_)._field_f.get()._field_Params.slice(1LL);;
	};
	return (*_self_)._field_f.get()._field_Params;;
}



inline jule::Bool _1d058b202_checkCounts(_1d058a311_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>& _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = _69931_params.len();;
	if (((_70017_n > 0LL) && _1eb022970_IsSelf(_69931_params[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*_self_)._field_args.len());;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_1aae0728a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && _69931_params[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1aae07312:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > _69931_params.len()))) {
			_case_begin_1aae07389:;
			{
				_1d058ab80_pushErr(&(*_self_), jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1aae07213:;
	};
	jule::Str _71617_idents = jule::Str();;
	for (; (_70517_diff > 0LL); (_70517_diff)--) {
		{
			_71617_idents+=(jule::Str(", ", 2) + _69931_params[(_70017_n - _70517_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1aae08d3b:;
	}
	_iter_end_1aae08d3b:;;
	(_71617_idents).mut_slice(2LL);;
	_1d058ab80_pushErr(&(*_self_), jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_71617_idents, &__jule_any_type7)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d058b653_checkArg(_1d058a311_fnCallArgChecker* _self_, jule::Ptr<_1eb025962_ParamIns>& _72632_p, jule::Ptr<_1d0598572_Data>& _72651_arg, jule::Ptr<_212a0c2ab_Token>& _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_dynamicAnnotation && _1eb028943_parameterUsesGenerics(_72632_p,(*_self_)._field_f.get()._field_Decl.get()._field_Generics))) {
		__jule_func_result=(!(_72632_p.get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1d0585949_dynamicTypeAnnotation _73025_dta = _1d0585949_dynamicTypeAnnotation{._field_e=(*_self_)._field_e, ._field_f=(*_self_)._field_f, ._field_p=_72632_p, ._field_a=_72651_arg, ._field_errorToken=_72668_errorToken, ._field_ignored=(*_self_)._field_ignored};;
			__jule_func_result=_1d0589a6e_annotate(&_73025_dta);
		};
		if ((!(__jule_func_result))) {
			_1d058a861_pushErrToken(&(*_self_), _72668_errorToken,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1d05404c5_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Mutable,_72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken)) {
		_1d053c5b0_checkAssignType((*_self_)._field_e.get()._field_s, _72632_p.get()._field_Decl.get()._field_Reference,_72632_p.get()._field_Kind,_72651_arg,_72668_errorToken);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d058ba0a_push(_1d058a311_fnCallArgChecker* _self_, jule::Ptr<_1eb025962_ParamIns>& _75428_p, jule::Ptr<_1ea307bbd_Expr> _75446_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d05c4504_TypeKind> _75517_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _75613_old_immut = (*_self_)._field_e.get()._field_immutable;;
	jule::Ptr<_1d0598572_Data> _75717_d = nullptr;;
	(*_self_)._field_e.get()._field_immutable=(!(_75428_p.get()._field_Decl.get()._field_Mutable));
	if (((!((*_self_)._field_dynamicAnnotation)) && (!(_75428_p.get()._field_Decl.get()._field_Variadic)))) {
		(*_self_)._field_e.get()._field_prefix=_75428_p.get()._field_Kind;
	} else {
		(*_self_)._field_e.get()._field_prefix=nullptr;
	};
	_75717_d=_1d05b53e6_evalExprKind((*_self_)._field_e, _75446_arg.get()._field_Kind);
	(*_self_)._field_e.get()._field_prefix=_75517_old;
	(*_self_)._field_e.get()._field_immutable=_75613_old_immut;
	if ((_75717_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1d058b653_checkArg(&(*_self_), _75428_p,_75717_d,_75446_arg.get()._field_Token);
	(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_75717_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1d058bdb2_pushVariadic(_1d058a311_fnCallArgChecker* _self_, jule::Ptr<_1eb025962_ParamIns>& _77936_p, jule::I64 _77954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78117_variadiced = false;;
	jule::Bool _78213_more = ((_77954_i + 1LL) < (*_self_)._field_args.len());;
	jule::Ptr<_1eb017ab9_SliceExprModel> _78317_model = jule::new_ptr<_1eb017ab9_SliceExprModel>(_1eb017ab9_SliceExprModel{._field_ElemKind=_77936_p.get()._field_Kind, });;
	jule::Ptr<_1d05c4504_TypeKind> _78717_old = (*_self_)._field_e.get()._field_prefix;;
	jule::Bool _79213_variadic = _77936_p.get()._field_Kind.get()._field_Variadic;;
	_77936_p.get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		_77936_p.get()._field_Kind.get()._field_Variadic=_79213_variadic;
	});;
	for (; (_77954_i < (*_self_)._field_args.len()); (_77954_i)++) {
		{
			jule::Ptr<_1ea307bbd_Expr> _79921_arg = (*_self_)._field_args[_77954_i];;
			{
				auto &_match_expr{ _79921_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type84) {
					_case_begin_1aae176b8:;
					{
						(*_self_)._field_e.get()._field_prefix=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cd442_Slc>(_1d05cd442_Slc{._field_Elem=_77936_p.get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1aae18015:;
					{
						(*_self_)._field_e.get()._field_prefix=_77936_p.get()._field_Kind;
					}
				}
				_match_end_1aae17d7d:;
			};
			jule::Ptr<_1d0598572_Data> _81221_d = _1d05b5704_eval((*_self_)._field_e, _79921_arg);;
			if ((_81221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1aae16b3a;
			};
			if (_81221_d.get()._field_Kind.get()._field_Variadic) {
				_78117_variadiced=true;
				_77936_p.get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1d058b653_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
				{
					auto &_match_expr{ _81221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1aae1a1c1:;
						{
							_78317_model=_81221_d.get()._field_Model.cast_ptr<_1eb017ab9_SliceExprModel>(&__jule_any_type85);
							_78317_model.get()._field_ElemKind=_77936_p.get()._field_Kind;
						}
					}
					else {
						_case_begin_1aae1aea2:;
						{
							_78317_model=nullptr;
							(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(_81221_d.get()._field_Model);;
						}
					}
					_match_end_1aae1b0a1:;
				};
				(_77954_i)++;
				goto _iter_end_1aae16b3a;
			};
			__jule_func_result=(__jule_func_result && _1d058b653_checkArg(&(*_self_), _77936_p,_81221_d,_79921_arg.get()._field_Token));
			_78317_model.get()._field_Elems = jule::alloc_for_append(_78317_model.get()._field_Elems,1);_78317_model.get()._field_Elems.__push(_81221_d.get()._field_Model);;
		}
	_iter_next_1aae16b3a:;
	}
	_iter_end_1aae16b3a:;;
	(*_self_)._field_e.get()._field_prefix=_78717_old;
	if ((_78117_variadiced && _78213_more)) {
		_1d058a861_pushErrToken(&(*_self_), (*_self_)._field_args[_77954_i].get()._field_Token,jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>());
	};
	if ((_78317_model != nullptr)) {
		(*_self_)._field_argModels = jule::alloc_for_append((*_self_)._field_argModels,1);(*_self_)._field_argModels.__push(jule::Any(_78317_model, &__jule_any_type85));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d058c1c0_checkArgs(_1d058a311_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>& _85533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85613_arg = (*_self_)._field_e.get()._field_arg;;
	(*_self_)._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86017_i = 0LL;;
	if (((_85533_params.len() > 0LL) && _1eb022970_IsSelf(_85533_params[0LL].get()._field_Decl.ptr()))) {
		(_86017_i)++;
	};
	_julec_label_iter:;
	while ((_86017_i < _85533_params.len())) {
		{
			jule::Ptr<_1eb025962_ParamIns> _86721_p = _85533_params[_86017_i];;
			{
				
				if (_86721_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1aae22c78:;
					{
						__jule_func_result=(_1d058bdb2_pushVariadic(&(*_self_), _86721_p,_86017_i) && __jule_func_result);
						goto _iter_end_1aae20aab;
					}
				}
				else if (((*_self_)._field_args.len() <= _86017_i)) {
					_case_begin_1aae2252a:;
					{
						__jule_func_result=false;
						goto _iter_end_1aae20aab;
					}
				}
				else {
					_case_begin_1aae22184:;
					{
						__jule_func_result=(_1d058ba0a_push(&(*_self_), _86721_p,(*_self_)._field_args[_86017_i]) && __jule_func_result);
					}
				}
				_match_end_1aae2211d:;
			};
			(_86017_i)++;
		}
	_iter_next_1aae20aab:;
	}
	_iter_end_1aae20aab:;;
	(*_self_)._field_e.get()._field_arg=_85613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d058c456_checkDynamicTypeAnnotation(_1d058a311_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = (*_self_)._field_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aae2453d:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c2cc7_InsGeneric> _88716_g = *it;
			{
				if ((_88716_g == nullptr)) {
					_1d058ab80_pushErr(&(*_self_), jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aae2453d:;
			++it;
			goto _iter_begin_1aae2453d;
		}
		_iter_end_1aae2453d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d058c6cb_check(_1d058a311_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1eb025962_ParamIns>> _89717_params = _1d058ade4_getParams(&(*_self_));;
	__jule_func_result=_1d058b202_checkCounts(&(*_self_), _89717_params);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1d058c1c0_checkArgs(&(*_self_), _89717_params);
	if ((__jule_func_result && (*_self_)._field_dynamicAnnotation)) {
		__jule_func_result=_1d058c456_checkDynamicTypeAnnotation(&(*_self_));
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d058a311_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1d058d226_pushErr(_1d058cc1a_structLitChecker* _self_, jule::Ptr<_212a0c2ab_Token> _91826_token, jule::Str _91841_fmt, jule::Slice<jule::Any> _91854_args) {
	_1d059a5eb_pushErr((*_self_)._field_e.ptr(), _91826_token,_91841_fmt,_91854_args);
}



inline void _1d058d545_pushSugggestion(_1d058cc1a_structLitChecker* _self_, jule::Str _92334_fmt, jule::Slice<jule::Any> _92347_args) {
	_1d059a91a_pushSugggestion((*_self_)._field_e.ptr(), _92334_fmt,_92347_args);
}



inline void _1d058d90d_pushMatch(_1d058cc1a_structLitChecker* _self_, jule::Ptr<_1ea32007b_FieldIns>& _92733_f, jule::Ptr<_1d0598572_Data>& _92752_d, jule::Ptr<_212a0c2ab_Token>& _92767_errorToken) {
	;
	if (_1d05404c5_checkValidityForInitExpr((*_self_)._field_e.get()._field_s, (!((*_self_)._field_e.get()._field_immutable)),false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken)) {
		_1d053c5b0_checkAssignType((*_self_)._field_e.get()._field_s, false,_92733_f.get()._field_Kind,_92752_d,_92767_errorToken);
	};
	(*_self_)._field_args = jule::alloc_for_append((*_self_)._field_args,1);(*_self_)._field_args.__push(jule::new_ptr<_1eb01614a_StructArgExprModel>(_1eb01614a_StructArgExprModel{._field_Field=_92733_f, ._field_Expr=_92752_d.get()._field_Model}));;
}



inline void _1d058dc2c_checkPair(_1d058cc1a_structLitChecker* _self_, jule::Ptr<_1ea30c62e_FieldExprPair>& _94033_pair, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>& _94060_exprs) {
	jule::Ptr<_1ea32007b_FieldIns> _94217_f = _1ea2cc313_FindField((*_self_)._field_s.ptr(), _94033_pair.get()._field_Field.get()._field_Kind);;
	if ((_94217_f == nullptr)) {
		_1d058d226_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type7)}));
		return;;
	};
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _94217_f.get()._field_Decl.get()._field_Public,_94217_f.get()._field_Decl.get()._field_Token)))) {
		_1d058d226_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type7)}));
		_1d058d545_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto &expr = _94060_exprs;
		auto it = expr.begin();
		_iter_begin_1aae2e04d:;
		if (it != expr.end()) {
			jule::Ptr<_1ea307bbd_Expr> _95421_expr = *it;
			{
				{
					auto &_match_expr{ _95421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_1aae2e922:;
						{
							jule::Ptr<_1ea30c62e_FieldExprPair> _95725_dpair = _95421_expr.get()._field_Kind.cast_ptr<_1ea30c62e_FieldExprPair>(&__jule_any_type86);;
							{
								
								if ((_94033_pair == _95725_dpair)) {
									_case_begin_1aae30857:;
									{
										goto _iter_end_1aae2e04d;
									}
								}
								else if ((_94033_pair.get()._field_Field.get()._field_Kind == _95725_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1aae308ce:;
									{
										_1d058d226_pushErr(&(*_self_), _94033_pair.get()._field_Field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>::make({jule::Any(_94033_pair.get()._field_Field.get()._field_Kind, &__jule_any_type7)}));
										goto _iter_end_1aae2e04d;
									}
								}
								_match_end_1aae3079c:;
							};
						}
					}
					_match_end_1aae2e702:;
				};
			}
			_iter_next_1aae2e04d:;
			++it;
			goto _iter_begin_1aae2e04d;
		}
		_iter_end_1aae2e04d:;
	};
	jule::Ptr<_1d05c4504_TypeKind> _96817_prefix = (*_self_)._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_96817_prefix;
	});;
	(*_self_)._field_e.get()._field_prefix=_94217_f.get()._field_Kind;
	jule::Ptr<_1d0598572_Data> _97217_d = _1d05b53e6_evalExprKind((*_self_)._field_e, _94033_pair.get()._field_Expr.get()._field_Kind);;
	if ((_97217_d == nullptr)) {
		return;;
	};
	_1d058d90d_pushMatch(&(*_self_), _94217_f,_97217_d,_94033_pair.get()._field_Field);
}



inline jule::Bool _1d058e03a_readyExprs(_1d058cc1a_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>& _97934_exprs) {
	jule::Bool _98017_ok = true;;
	{
		auto &expr = _97934_exprs;
		auto it = expr.begin();
		_iter_begin_1aae34262:;
		if (it != expr.end()) {
			jule::I64 _98114_i = it - expr.begin();
			jule::Ptr<_1ea307bbd_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type87) {
						_case_begin_1aae35021:;
						{
							jule::Ptr<_1ea30dac5_KeyValPair> _98425_pair = _98121_expr.get()._field_Kind.cast_ptr<_1ea30dac5_KeyValPair>(&__jule_any_type87);;
							{
								auto &_match_expr{ _98425_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type88) {
									_case_begin_1aae35818:;
									{
										goto _match_end_1aae35c9c;
									}
								}
								else {
									_case_begin_1aae36022:;
									{
										_1d058d226_pushErr(&(*_self_), _98425_pair.get()._field_Colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
										_98017_ok=false;
										goto _iter_next_1aae34262;
									}
								}
								_match_end_1aae35c9c:;
							};
							_97934_exprs[_98114_i].get()._field_Kind=jule::Any(jule::new_ptr<_1ea30c62e_FieldExprPair>(_1ea30c62e_FieldExprPair{._field_Field=_98425_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98425_pair.get()._field_Val}), &__jule_any_type86);
						}
					}
					_match_end_1aae34d01:;
				};
			}
			_iter_next_1aae34262:;
			++it;
			_98114_i++;
			goto _iter_begin_1aae34262;
		}
		_iter_end_1aae34262:;
	};
	return _98017_ok;;
}



inline void _1d058e2b0_check(_1d058cc1a_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>& _100329_exprs) {
	if ((_100329_exprs.len() == 0LL)) {
		return;;
	};
	if ((!(_1d058e03a_readyExprs(&(*_self_), _100329_exprs)))) {
		return;;
	};
	jule::Bool _101017_paired = false;;
	{
		auto &expr = _100329_exprs;
		auto it = expr.begin();
		_iter_begin_1aae34c46:;
		if (it != expr.end()) {
			jule::I64 _101114_i = it - expr.begin();
			jule::Ptr<_1ea307bbd_Expr> _101121_expr = *it;
			{
				{
					auto &_match_expr{ _101121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type86) {
						_case_begin_1aae3d722:;
						{
							jule::Ptr<_1ea30c62e_FieldExprPair> _101425_pair = _101121_expr.get()._field_Kind.cast_ptr<_1ea30c62e_FieldExprPair>(&__jule_any_type86);;
							if (((_101114_i > 0LL) && (!(_101017_paired)))) {
								_1d058d226_pushErr(&(*_self_), _101425_pair.get()._field_Field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							};
							_101017_paired=true;
							_1d058dc2c_checkPair(&(*_self_), _101425_pair,_100329_exprs);
						}
					}
					else {
						_case_begin_1aae39102:;
						{
							if (_101017_paired) {
								_1d058d226_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>());
							};
							if ((_101114_i >= (*_self_)._field_s.get()._field_Fields.len())) {
								_1d058d226_pushErr(&(*_self_), _101121_expr.get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
								goto _iter_next_1aae34c46;
							};
							jule::Ptr<_1ea32007b_FieldIns> _102925_field = (*_self_)._field_s.get()._field_Fields[_101114_i];;
							if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_e.get()._field_s.ptr(), _102925_field.get()._field_Decl.get()._field_Public,_102925_field.get()._field_Decl.get()._field_Token)))) {
								_1d058d226_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("structure cannot instantiating because it has non-public fields", 63),jule::Slice<jule::Any>());
								_1d058d545_pushSugggestion(&(*_self_), jule::Str("use field:expression pairs to instantiate", 41),jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1d05c4504_TypeKind> _103725_prefix = (*_self_)._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*_self_)._field_e.get()._field_prefix=_103725_prefix;
							});;
							(*_self_)._field_e.get()._field_prefix=_102925_field.get()._field_Kind;
							jule::Ptr<_1d0598572_Data> _104125_d = _1d05b53e6_evalExprKind((*_self_)._field_e, _101121_expr.get()._field_Kind);;
							if ((_104125_d == nullptr)) {
								goto _iter_next_1aae34c46;
							};
							_1d058d90d_pushMatch(&(*_self_), _102925_field,_104125_d,_101121_expr.get()._field_Token);
						}
					}
					_match_end_1aae38e6a:;
				};
			}
			_iter_next_1aae34c46:;
			++it;
			_101114_i++;
			goto _iter_begin_1aae34c46;
		}
		_iter_end_1aae34c46:;
	};
	if ((!(_101017_paired))) {
		jule::I64 _105217_n = (*_self_)._field_s.get()._field_Fields.len();;
		jule::I64 _105321_diff = (_105217_n - _100329_exprs.len());;
		{
			
			if ((_105321_diff <= 0LL)) {
				_case_begin_1aae418ce:;
				{
					return;;
				}
			}
			_match_end_1aae417ad:;
		};
		jule::Str _105921_idents = jule::Str();;
		for (; (_105321_diff > 0LL); (_105321_diff)--) {
			{
				_105921_idents+=(jule::Str(", ", 2) + (*_self_)._field_s.get()._field_Fields[(_105217_n - _105321_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1aae422c5:;
		}
		_iter_end_1aae422c5:;;
		(_105921_idents).mut_slice(2LL);;
		_1d058d226_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(_105921_idents, &__jule_any_type7)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d058cc1a_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d0550a13_Var> _1d058ec94_buildVar(_1d058e7ee_rangeChecker* _self_, jule::Ptr<_1ea31610a_VarDecl>& _107828_decl) {
	jule::Ptr<_1d0550a13_Var> _107917_v = _1d04e6e3d_buildVar(_107828_decl);;
	return _107917_v;;
}



inline void _1d058ee70_setSizeKey(_1d058e7ee_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _212a0ea50_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyA=_1d058ec94_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aae45e44:;
			{
				(*_self_)._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1d054e9ce_IterRelation>(_1d054e9ce_IterRelation{._field_Range=(*_self_)._field_d.get()._field_Model.cast_ptr<_1d0550a13_Var>(&__jule_any_type10)});
			}
		}
		_match_end_1aae45dde:;
	};
}



inline void _1d0590338_checkRangeExprValidity(_1d058e7ee_rangeChecker* _self_, jule::Ptr<_1d0598572_Data>& _110946_d, jule::Ptr<_1d0550a13_Var>& _110957_key, jule::Ptr<_1d05c4504_TypeKind>& _110973_k) {
	jule::Bool _111017__mut = _110957_key.get()._field_Mutable;;
	if ((_111017__mut && (!(_1d05c5b76_Mutable(_110973_k.ptr()))))) {
		_111017__mut=false;
	};
	_1d05404c5_checkValidityForInitExpr((*_self_)._field_sc.get()._field_s, _111017__mut,_110957_key.get()._field_Reference,_110957_key.get()._field_Kind.get()._field_Kind,_110946_d,(*_self_)._field_rang.get()._field_InToken);
}



inline void _1d0590514_checkSlice(_1d058e7ee_rangeChecker* _self_) {
	_1d058ee70_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _212a0ea50_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d05cd442_Slc> _112817_slc = _1d05c7815_Slc((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1d058ec94_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_112817_slc.get()._field_Elem});
	_1d0590338_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_112817_slc.get()._field_Elem);
}



inline void _1d05906e0_checkArray(_1d058e7ee_rangeChecker* _self_) {
	_1d058ee70_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _212a0ea50_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d05d05dc_Arr> _114117_arr = _1d05c75a1_Arr((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1d058ec94_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_114117_arr.get()._field_Elem});
	_1d0590338_checkRangeExprValidity(&(*_self_), (*_self_)._field_d,(*_self_)._field_Kind.get()._field_KeyB,_114117_arr.get()._field_Elem);
}



inline void _1d05908bb_checkMapKeyA(_1d058e7ee_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyA == nullptr) || _212a0ea50_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d05ce9e8_Map> _115317_m = _1d05c82b6_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyA=_1d058ec94_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyA);
	(*_self_)._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_115317_m.get()._field_Key});
	jule::Ptr<_1d0598572_Data> _115717_d = jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d)));;
	_115717_d.get()._field_Kind=_115317_m.get()._field_Key;
	_1d0590338_checkRangeExprValidity(&(*_self_), _115717_d,(*_self_)._field_Kind.get()._field_KeyA,_115317_m.get()._field_Key);
}



inline void _1d0590a97_checkMapKeyB(_1d058e7ee_rangeChecker* _self_) {
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _212a0ea50_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d05ce9e8_Map> _116817_m = _1d05c82b6_Map((*_self_)._field_d.get()._field_Kind.ptr());;
	(*_self_)._field_Kind.get()._field_KeyB=_1d058ec94_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_116817_m.get()._field_Val});
	jule::Ptr<_1d0598572_Data> _117217_d = jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d)));;
	_117217_d.get()._field_Kind=_116817_m.get()._field_Val;
	_1d0590338_checkRangeExprValidity(&(*_self_), _117217_d,(*_self_)._field_Kind.get()._field_KeyB,_116817_m.get()._field_Val);
}



inline void _1d0590c73_checkMap(_1d058e7ee_rangeChecker* _self_) {
	_1d05908bb_checkMapKeyA(&(*_self_));
	_1d0590a97_checkMapKeyB(&(*_self_));
}



inline void _1d0590e4e_checkStr(_1d058e7ee_rangeChecker* _self_) {
	_1d058ee70_setSizeKey(&(*_self_));
	if ((((*_self_)._field_rang.get()._field_KeyB == nullptr) || _212a0ea50_IsIgnoreIdent((*_self_)._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*_self_)._field_Kind.get()._field_KeyB=_1d058ec94_buildVar(&(*_self_), (*_self_)._field_rang.get()._field_KeyB);
	(*_self_)._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1d05911b3_check(_1d058e7ee_rangeChecker* _self_) {
	{
		
		if ((*_self_)._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1aae5950c:;
		}
		else if ((_1d05c7815_Slc((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae58e02:;
			{
				_1d0590514_checkSlice(&(*_self_));
				return true;;
			}
		}
		else if ((_1d05c75a1_Arr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae58e68:;
			{
				_1d05906e0_checkArray(&(*_self_));
				return true;;
			}
		}
		else if ((_1d05c82b6_Map((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aae58ece:;
			{
				_1d0590c73_checkMap(&(*_self_));
				return true;;
			}
		}
		else {
			_case_begin_1aae58d8b:;
			{
				jule::Ptr<_1d05c9251_Prim> _121017_prim = _1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
				if (((_121017_prim != nullptr) && _1d05cc485_IsStr(_121017_prim.ptr()))) {
					_1d0590e4e_checkStr(&(*_self_));
					return true;;
				};
			}
		}
		_match_end_1aae58cc0:;
	};
	_1d05356c9_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_rang.get()._field_InToken,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d058e7ee_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1d0591d2e_prepareTypes(_1d0591889_retTypeChecker* _self_) {
	if (((*_self_)._field_f != nullptr)) {
		(*_self_)._field_types=_1eb027953_Types((*_self_)._field_f.ptr());
	};
}



inline void _1d05920a4_prepareExprs(_1d0591889_retTypeChecker* _self_, jule::Ptr<_1ea307bbd_Expr>& _123836_e) {
	if ((_123836_e == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _123836_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1aae5e743:;
			{
				(*_self_)._field_exprs=_123836_e.get()._field_Kind.cast_ptr<_1ea30884a_TupleExpr>(&__jule_any_type89).get()._field_Expr;
			}
		}
		else {
			_case_begin_1aae5e941:;
			{
				(*_self_)._field_exprs = jule::alloc_for_append((*_self_)._field_exprs,1);(*_self_)._field_exprs.__push(_123836_e);;
			}
		}
		_match_end_1aae5e589:;
	};
}



inline void _1d0592280_checkExprs(_1d0591889_retTypeChecker* _self_) {
	if (((*_self_)._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d0598572_Data>> _125417_datas = jule::Slice<jule::Ptr<_1d0598572_Data>>::alloc(0LL, (*_self_)._field_exprs.len());;
	{
		auto &expr = (*_self_)._field_exprs;
		auto it = expr.begin();
		_iter_begin_1aae61888:;
		if (it != expr.end()) {
			jule::I64 _125514_i = it - expr.begin();
			jule::Ptr<_1ea307bbd_Expr> _125521_expr = *it;
			{
				if ((_125514_i >= (*_self_)._field_types.len())) {
					goto _iter_end_1aae61888;
				};
				jule::Ptr<_1d05c4504_TypeKind> _126021_t = (*_self_)._field_types[_125514_i];;
				jule::Ptr<_1d0598572_Data> _126221_d = _1d05b5a12_evalExpr(_1d053bca7_evalp((*_self_)._field_sc.get()._field_s, jule::Trait<_1d05e0476_Lookup>((*_self_)._field_sc, 0),_126021_t), _125521_expr);;
				if ((_126221_d == nullptr)) {
					goto _iter_next_1aae61888;
				};
				_125417_datas = jule::alloc_for_append(_125417_datas,1);_125417_datas.__push(_126221_d);;
				if (((!(_126221_d.get()._field_Mutable)) && _1d05c5b76_Mutable(_126221_d.get()._field_Kind.ptr()))) {
					_1d05356c9_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>());
					return;;
				};
				_1d0583e64_assignTypeChecker _127421_ac = _1d0583e64_assignTypeChecker{._field_s=(*_self_)._field_sc.get()._field_s, ._field_dest=_126021_t, ._field_d=_126221_d, ._field_errorToken=(*_self_)._field_errorToken};;
				_1d05850db_check(&_127421_ac);
			}
			_iter_next_1aae61888:;
			++it;
			_125514_i++;
			goto _iter_begin_1aae61888;
		}
		_iter_end_1aae61888:;
	};
	if ((_125417_datas.len() > 1LL)) {
		(*_self_)._field_model=jule::Any(jule::new_ptr<_1eb01b507_TupleExprModel>(_1eb01b507_TupleExprModel{._field_Datas=_125417_datas}), &__jule_any_type90);
	} else if ((_125417_datas.len() == 1LL)) {
		(*_self_)._field_model=_125417_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1d059258d_check(_1d0591889_retTypeChecker* _self_, jule::Ptr<_1ea307bbd_Expr>& _129329_e) {
	_1d0591d2e_prepareTypes(&(*_self_));
	_1d05920a4_prepareExprs(&(*_self_), _129329_e);
	jule::I64 _129713_n = (*_self_)._field_exprs.len();;
	if (((_129713_n == 0LL) && ((*_self_)._field_types.len() > 0LL))) {
		if ((!(_1eb024d07_AnyVar((*_self_)._field_f.get()._field_Decl.ptr())))) {
			_1d05356c9_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129713_n > 0LL) && ((*_self_)._field_f != nullptr)) && _1eb0240e2_IsVoid((*_self_)._field_f.get()._field_Decl.ptr()))) {
		_1d05356c9_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129713_n > (*_self_)._field_types.len())) {
		_1d05356c9_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>());
	} else if ((_129713_n < (*_self_)._field_types.len())) {
		_1d05356c9_pushErr((*_self_)._field_sc.get()._field_s.ptr(), (*_self_)._field_errorToken,jule::Str("missing return expressions for multi-return", 43),jule::Slice<jule::Any>());
	};
	_1d0592280_checkExprs(&(*_self_));
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0591889_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d0593c65_FindPackage(_1d0593748_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aae6ca1a:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1aae6ca1a:;
			++it;
			goto _iter_begin_1aae6ca1a;
		}
		_iter_end_1aae6ca1a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1d0594073_SelectPackage(_1d0593748_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aae6dbb4:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1aae6dbb4:;
			++it;
			goto _iter_begin_1aae6dbb4;
		}
		_iter_end_1aae6dbb4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0550a13_Var> _1d059442a_FindVar(_1d0593748_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1d0595edc_findVar(&(*_self_), _5226_ident,_5238_cppLinked,false);;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d05947d2_FindTypeAlias(_1d0593748_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1d059643d_findTypeAlias(&(*_self_), _5832_ident,_5844_cppLinked,false);;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d0594b89_FindStruct(_1d0593748_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aae71326:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1aae71326:;
			++it;
			goto _iter_begin_1aae71326;
		}
		_iter_end_1aae71326:;
	};
	return nullptr;;
}



inline jule::Ptr<_1eb023b80_Fn> _1d0595041_FindFn(_1d0593748_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aae72756:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1aae72756:;
			++it;
			goto _iter_begin_1aae72756;
		}
		_iter_end_1aae72756:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d059534e_FindTrait(_1d0593748_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1aae73988:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1aae73988:;
			++it;
			goto _iter_begin_1aae73988;
		}
		_iter_end_1aae73988:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05005ea_Enum> _1d059565c_FindEnum(_1d0593748_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1aae73e0b:;
		if (it != expr.end()) {
			jule::Ptr<_1d05005ea_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1aae73e0b:;
			++it;
			goto _iter_begin_1aae73e0b;
		}
		_iter_end_1aae73e0b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d059596a_FindTypeEnum(_1d0593748_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1aae74d30:;
		if (it != expr.end()) {
			jule::Ptr<_1d0501be5_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1aae74d30:;
			++it;
			goto _iter_begin_1aae74d30;
		}
		_iter_end_1aae74d30:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0550a13_Var> _1d0595edc_findVar(_1d0593748_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*_self_)._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1d0550a13_Var> _12325_v = (*_self_)._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1aae7775b:;
		}
		_iter_end_1aae7775b:;;
	} else {
		{
			auto &expr = (*_self_)._field_Vars;
			auto it = expr.begin();
			_iter_begin_1aae76d10:;
			if (it != expr.end()) {
				jule::Ptr<_1d0550a13_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1aae76d10:;
				++it;
				goto _iter_begin_1aae76d10;
			}
			_iter_end_1aae76d10:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d059643d_findTypeAlias(_1d0593748_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*_self_)._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1d05c3811_TypeAlias> _14225_ta = (*_self_)._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1aae7a907:;
		}
		_iter_end_1aae7a907:;;
	} else {
		{
			auto &expr = (*_self_)._field_TypeAliases;
			auto it = expr.begin();
			_iter_begin_1aae79eab:;
			if (it != expr.end()) {
				jule::Ptr<_1d05c3811_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1aae79eab:;
				++it;
				goto _iter_begin_1aae79eab;
			}
			_iter_end_1aae79eab:;
		};
	};
	return nullptr;;
}



inline jule::Any _1d05967e5_defByIdent(_1d0593748_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1aae7cc06:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type10);;
				};
			}
			_iter_next_1aae7cc06:;
			++it;
			goto _iter_begin_1aae7cc06;
		}
		_iter_end_1aae7cc06:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1aae7d6a7:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c3811_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type69);;
				};
			}
			_iter_next_1aae7d6a7:;
			++it;
			goto _iter_begin_1aae7d6a7;
		}
		_iter_end_1aae7d6a7:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aae7de49:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type68);;
				};
			}
			_iter_next_1aae7de49:;
			++it;
			goto _iter_begin_1aae7de49;
		}
		_iter_end_1aae7de49:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aae80225:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type67);;
				};
			}
			_iter_next_1aae80225:;
			++it;
			goto _iter_begin_1aae80225;
		}
		_iter_end_1aae80225:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1aae81402:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type12);;
				};
			}
			_iter_next_1aae81402:;
			++it;
			goto _iter_begin_1aae81402;
		}
		_iter_end_1aae81402:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1aae821e4:;
		if (it != expr.end()) {
			jule::Ptr<_1d05005ea_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type70);;
				};
			}
			_iter_next_1aae821e4:;
			++it;
			goto _iter_begin_1aae821e4;
		}
		_iter_end_1aae821e4:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1aae82e5e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0501be5_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type71);;
				};
			}
			_iter_next_1aae82e5e:;
			++it;
			goto _iter_begin_1aae82e5e;
		}
		_iter_end_1aae82e5e:;
	};
	return nullptr;;
}



inline jule::Bool _1d0596c46_isDuplicatedIdent(_1d0593748_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto &expr = (*_self_)._field_Vars;
		auto it = expr.begin();
		_iter_begin_1aae83c1d:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> &_21316_v = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21316_v) != _21232_itself) && (_21316_v.get()._field_Ident == _21249_ident)) && (_21316_v.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1aae83c1d:;
			++it;
			goto _iter_begin_1aae83c1d;
		}
		_iter_end_1aae83c1d:;
	};
	{
		auto &expr = (*_self_)._field_TypeAliases;
		auto it = expr.begin();
		_iter_begin_1aae850c6:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c3811_TypeAlias> &_21916_ta = *it;
			{
				if ((((static_cast<jule::Uintptr>(_21916_ta) != _21232_itself) && (_21916_ta.get()._field_Ident == _21249_ident)) && (_21916_ta.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1aae850c6:;
			++it;
			goto _iter_begin_1aae850c6;
		}
		_iter_end_1aae850c6:;
	};
	{
		auto &expr = (*_self_)._field_Structs;
		auto it = expr.begin();
		_iter_begin_1aae84c1e:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> &_22516_s = *it;
			{
				if ((((static_cast<jule::Uintptr>(_22516_s) != _21232_itself) && (_22516_s.get()._field_Ident == _21249_ident)) && (_22516_s.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1aae84c1e:;
			++it;
			goto _iter_begin_1aae84c1e;
		}
		_iter_end_1aae84c1e:;
	};
	{
		auto &expr = (*_self_)._field_Funcs;
		auto it = expr.begin();
		_iter_begin_1aae8731a:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> &_23116_f = *it;
			{
				if ((((static_cast<jule::Uintptr>(_23116_f) != _21232_itself) && (_23116_f.get()._field_Ident == _21249_ident)) && (_23116_f.get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1aae8731a:;
			++it;
			goto _iter_begin_1aae8731a;
		}
		_iter_end_1aae8731a:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Traits;
		auto it = expr.begin();
		_iter_begin_1aae8887c:;
		if (it != expr.end()) {
			jule::Ptr<_1d04ed4a5_Trait> &_24116_t = *it;
			{
				if (((static_cast<jule::Uintptr>(_24116_t) != _21232_itself) && (_24116_t.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1aae8887c:;
			++it;
			goto _iter_begin_1aae8887c;
		}
		_iter_end_1aae8887c:;
	};
	{
		auto &expr = (*_self_)._field_Enums;
		auto it = expr.begin();
		_iter_begin_1aae88d00:;
		if (it != expr.end()) {
			jule::Ptr<_1d05005ea_Enum> &_24716_e = *it;
			{
				if (((static_cast<jule::Uintptr>(_24716_e) != _21232_itself) && (_24716_e.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1aae88d00:;
			++it;
			goto _iter_begin_1aae88d00;
		}
		_iter_end_1aae88d00:;
	};
	{
		auto &expr = (*_self_)._field_TypeEnums;
		auto it = expr.begin();
		_iter_begin_1aae8a186:;
		if (it != expr.end()) {
			jule::Ptr<_1d0501be5_TypeEnum> &_25316_te = *it;
			{
				if (((static_cast<jule::Uintptr>(_25316_te) != _21232_itself) && (_25316_te.get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1aae8a186:;
			++it;
			goto _iter_begin_1aae8a186;
		}
		_iter_end_1aae8a186:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0593748_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d059895c_IsNil(_1d0598572_Data* _self_) {
	return _1d05c5439_IsNil((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _1d0598bc1_IsVoid(_1d0598572_Data* _self_) {
	return _1d05c569d_Void((*_self_)._field_Kind.ptr());;
}



inline jule::Bool _1d0598e35_IsConst(_1d0598572_Data* _self_) {
	return ((*_self_)._field_Constant != nullptr);;
}



inline jule::Bool _1d0599243_GoodOperand(_1d0598572_Data* _self_, jule::Ptr<_1d0598572_Data>& _10031_other) {
	if ((_1d05c733c_TypeEnum(_10031_other.get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1d05c688b_Prim(_10031_other.get()._field_Kind.ptr()) == nullptr) || (!(_1d05cc6e9_IsAny(_1d05c688b_Prim(_10031_other.get()._field_Kind.ptr()).ptr())))) && (_1d05c8052_Trait(_10031_other.get()._field_Kind.ptr()) == nullptr)) && (!(_1d05c5439_IsNil((*_self_)._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0598572_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05995ea_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1d059a5eb_pushErr(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1d05356c9_pushErr((*_self_)._field_s.ptr(), _13126_token,_13141_fmt,_13154_args);
}



inline void _1d059a91a_pushSugggestion(_1d059a0e0_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1d05359e8_pushSugggestion((*_self_)._field_s.ptr(), _13634_fmt,_13647_args);
}



inline void _1d059aae6_allowBuiltin(_1d059a0e0_Eval* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1d059acc2_disallowBuiltin(_1d059a0e0_Eval* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Bool _1d059b036_isUnsafe(_1d059a0e0_Eval* _self_) {
	return (*_self_)._field_unsafety;;
}



inline jule::Bool _1d059b29a_isGlobal(_1d059a0e0_Eval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d0532a17_Sema>>()) {
			_case_begin_1aaeb98d0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aaeb9e0d:;
			{
				return false;;
			}
		}
		_match_end_1aaeb9da8:;
	};
}



inline jule::Bool _1d059b575_applyNumericPrefix(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _16342_d) {
	if (((((_16342_d == nullptr) || (!(_1d0598e35_IsConst(_16342_d.ptr())))) || (_1d05c688b_Prim(_16342_d.get()._field_Kind.ptr()) == nullptr)) || ((*_self_)._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1d05c9251_Prim> _17013_prim = _1d05c688b_Prim((*_self_)._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1eb008d0d_IsFloat(_1d05c95b4_Str(_17013_prim.ptr()))) {
			_case_begin_1aaebc7b2:;
			{
				_16342_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>((*((*_self_)._field_prefix)));
				_1eb00cd12_SetF64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1eb00c097_AsF64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1eb00845b_IsSigInt(_1d05c95b4_Str(_17013_prim.ptr()))) {
			_case_begin_1aaebc828:;
			{
				if ((!(_1d0580e83_sigAssignable(_1d05c95b4_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>((*((*_self_)._field_prefix)));
				_1eb00c31c_SetI64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1eb008747_IsUnsigInt(_1d05c95b4_Str(_17013_prim.ptr()))) {
			_case_begin_1aaebc88e:;
			{
				if ((!(_1d05810b5_unsigAssignable(_1d05c95b4_Str(_17013_prim.ptr()),_16342_d)))) {
					return false;;
				};
				_16342_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>((*((*_self_)._field_prefix)));
				_1eb00c592_SetU64(_16342_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_16342_d.get()._field_Constant.ptr())));
			}
		}
		_match_end_1aaebc5b4:;
	};
	return true;;
}



inline jule::Ptr<_1d0598572_Data> _1d059b7d9_litNil(_1d059a0e0_Eval* _self_) {
	jule::Ptr<_1eb0095b1_Const> _19917_constant = static__1eb00a7b0_NewNil();;
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_19917_constant, &__jule_any_type49), ._field_Constant=_19917_constant});;
}



inline jule::Ptr<_1d0598572_Data> _1d059bae7_litStr(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr>& _20822_l) {
	jule::Str _20917_s = _20822_l.get()._field_Value.slice(1LL,(_20822_l.get()._field_Value.len() - 1LL));;
	if (_212a0d60e_IsRawStr(_20822_l.get()._field_Value)) {
		_20917_s=_1d0581219_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	} else {
		_20917_s=_1d0581516_ToStr(static_cast<jule::Slice<jule::U8>>(_20917_s));
	};
	jule::Ptr<_1eb0095b1_Const> _21517_constant = static__1eb00a31a_NewStr(_20917_s);;
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21517_constant, &__jule_any_type49), ._field_Constant=_21517_constant});;
}



inline jule::Ptr<_1d0598572_Data> _1d059be05_litBool(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr>& _22723_l) {
	jule::Ptr<_1eb0095b1_Const> _22817_constant = static__1eb00a073_NewBool((_22723_l.get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_22817_constant, &__jule_any_type49), ._field_Constant=_22817_constant});;
}



inline jule::Ptr<_1d0598572_Data> _1d059c213_litRune(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr>& _23923_l) {
	;
	;
	jule::Str _24413_lt = _23923_l.get()._field_Value.slice(1LL,(_23923_l.get()._field_Value.len() - 1LL));;
	jule::I32 _24513_r = _1d05691d0_ToRune(static_cast<jule::Slice<jule::U8>>(_24413_lt));;
	jule::Ptr<_1d0598572_Data> _24617_data = jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Constant=static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24513_r)))});;
	jule::Bool _25013_isAscii = _1d0569059_IsAscii(_24513_r);;
	if (_25013_isAscii) {
		_24617_data.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24617_data.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24617_data.get()._field_Mutable=true;
	_24617_data.get()._field_Model=jule::Any(jule::new_ptr<_1eb02061b_RuneExprModel>(_1eb02061b_RuneExprModel{._field_Code=_24513_r}), &__jule_any_type91);
	_24617_data.get()._field_IsRune=true;
	_24617_data.get()._field_untyped=true;
	return _24617_data;;
}



inline jule::Ptr<_1d0598572_Data> _1d059c521_litFloat(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr>& _26824_l) {
	;
	jule::F64 _27013_f = ({
		auto except = _1eaee0b4c_ParseFloat(_26824_l.get()._field_Value,64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1eb0095b1_Const> _27117_constant = static__1eb00a5b2_NewF64(_27013_f);;
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27117_constant, &__jule_any_type49), ._field_Constant=_27117_constant});;
}



inline jule::Ptr<_1d0598572_Data> _1d059c82e_litInt(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr>& _28326_l) {
	;
	jule::Str _28617_lit = _28326_l.get()._field_Value;;
	jule::I64 _28717_base = 0LL;;
	{
		
		if (_22dc943e5_HasPrefix(_28617_lit,jule::Str("0x", 2))) {
			_case_begin_1aaecd74b:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=16LLU;
			}
		}
		else if (_22dc943e5_HasPrefix(_28617_lit,jule::Str("0b", 2))) {
			_case_begin_1aaecd7b2:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=2LLU;
			}
		}
		else if (_22dc943e5_HasPrefix(_28617_lit,jule::Str("0o", 2))) {
			_case_begin_1aaecd460:;
			{
				(_28617_lit).mut_slice(2LL);;
				_28717_base=8LLU;
			}
		}
		else if (((_28617_lit[0LL] == '0') && (_28617_lit.len() > 1LL))) {
			_case_begin_1aaecd4c6:;
			{
				(_28617_lit).mut_slice(1LL);;
				_28717_base=8LLU;
			}
		}
		else {
			_case_begin_1aaecd3e9:;
			{
				_28717_base=10LLU;
			}
		}
		_match_end_1aaecd383:;
	};
	jule::Ptr<_1d0598572_Data> _30717_d = jule::new_ptr<_1d0598572_Data>();;
	jule::Bool _30917_ok = true;;
	jule::I64 _31013_sig = ({
		auto except = _1eaeda5a3_ParseInt(_28617_lit,_28717_base,64LL);
		(except.ok()) ? (except.result) : ({
			_30917_ok=false;

			0LL;
		});
	});;
	if (_30917_ok) {
		_30717_d.get()._field_Constant=static__1eb009a34_NewI64(_31013_sig);
		_30717_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32017_unsig = ({
			auto except = _1eaeda471_ParseUint(_28617_lit,_28717_base,64LL);
			(except.ok()) ? (except.result) : ({
				_1d059a5eb_pushErr(&(*_self_), _28326_l.get()._field_Token,jule::Str("arithmetic value overflow: this value too big", 45),jule::Slice<jule::Any>());
				_1d059a91a_pushSugggestion(&(*_self_), jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_30717_d.get()._field_Constant=static__1eb009ccb_NewU64(_32017_unsig);
		_30717_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_30717_d.get()._field_Model=jule::Any(_30717_d.get()._field_Constant, &__jule_any_type49);
	if ((!(_1d059b575_applyNumericPrefix(&(*_self_), _30717_d)))) {
		_1d05be246_fitBitsize(_30717_d);
	};
	_30717_d.get()._field_Mutable=true;
	_30717_d.get()._field_untyped=true;
	return _30717_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d059cb3c_litNum(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr>& _34326_l) {
	{
		
		if (_212a0e269_IsFloat(_34326_l.get()._field_Value)) {
			_case_begin_1aaedb69e:;
			{
				return _1d059c521_litFloat(&(*_self_), _34326_l);;
			}
		}
		else {
			_case_begin_1aaedaea6:;
			{
				return _1d059c82e_litInt(&(*_self_), _34326_l);;
			}
		}
		_match_end_1aaedadda:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d059ce4a_evalLit(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea308c02_LitExpr> _35226_lit) {
	{
		
		if (_1ea309054_IsNil(_35226_lit.ptr())) {
			_case_begin_1aaedc7e3:;
			{
				return _1d059b7d9_litNil(&(*_self_));;
			}
		}
		else if (_212a0d367_IsStr(_35226_lit.get()._field_Value)) {
			_case_begin_1aaedc1e9:;
			{
				return _1d059bae7_litStr(&(*_self_), _35226_lit);;
			}
		}
		else if (_212a0dec2_IsBool(_35226_lit.get()._field_Value)) {
			_case_begin_1aaedc271:;
			{
				return _1d059be05_litBool(&(*_self_), _35226_lit);;
			}
		}
		else if (_212a0d8a6_IsRune(_35226_lit.get()._field_Value)) {
			_case_begin_1aaedc2e8:;
			{
				return _1d059c213_litRune(&(*_self_), _35226_lit);;
			}
		}
		else if (_212a0e511_IsNum(_35226_lit.get()._field_Value)) {
			_case_begin_1aaedc529:;
			{
				return _1d059cb3c_litNum(&(*_self_), _35226_lit);;
			}
		}
		else {
			_case_begin_1aaedbc32:;
			{
				return nullptr;;
			}
		}
		_match_end_1aaedbb66:;
	};
}



inline jule::Any _1d059d258_findBuiltins(_1d059a0e0_Eval* _self_, jule::Str _36931_ident) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d05298bb_ImportInfo>>()) {
			_case_begin_1aaede6d5:;
			{
				jule::Any _37221_def = _1d05be037_findBuiltinsImport(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_1d05298bb_ImportInfo>());;
				if ((_37221_def != nullptr)) {
					return _37221_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0532a17_Sema>>()) {
			_case_begin_1aaedeb36:;
			{
				jule::Any _37721_def = _1d05bebc5_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_1d0532a17_Sema>());;
				if ((_37721_def != nullptr)) {
					return _37721_def;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1aaedeb9c:;
			{
				jule::Any _38221_def = _1d05bebc5_findBuiltinsSema(_36931_ident,(*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>().get()._field_s);;
				if ((_38221_def != nullptr)) {
					return _38221_def;;
				};
			}
		}
		_match_end_1aaede680:;
	};
	if ((*_self_)._field_disBuiltin) {
		return nullptr;;
	};
	return _1d060404a_findBuiltinDef(_36931_ident);;
}



inline jule::Any _1d059d610_getDef(_1d059a0e0_Eval* _self_, jule::Str _39325_ident, jule::Bool _39337_cppLinked) {
	jule::Ptr<_1d0550a13_Var> _39817_v = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05ddce3_FindVar((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_39817_v != nullptr)) {
		return jule::Any(_39817_v, &__jule_any_type10);;
	};
	jule::Ptr<_1d05c3811_TypeAlias> _40317_ta = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05de19a_FindTypeAlias((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_40317_ta != nullptr)) {
		return jule::Any(_40317_ta, &__jule_any_type69);;
	};
	if ((!(_39337_cppLinked))) {
		jule::Ptr<_1d05005ea_Enum> _40921_enm = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05e0025_FindEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_40921_enm != nullptr)) {
			return jule::Any(_40921_enm, &__jule_any_type70);;
		};
		jule::Ptr<_1d0501be5_TypeEnum> _41421_tenm = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05e0333_FindTypeEnum((*_self_)._field_lookup, _39325_ident);;
		if ((_41421_tenm != nullptr)) {
			return jule::Any(_41421_tenm, &__jule_any_type71);;
		};
	};
	jule::Ptr<_1eb023b80_Fn> _42017_f = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05de909_FindFn((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42017_f != nullptr)) {
		return jule::Any(_42017_f, &__jule_any_type67);;
	};
	jule::Ptr<_1ea31ed8e_Struct> _42517_s = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05de552_FindStruct((*_self_)._field_lookup, _39325_ident,_39337_cppLinked);;
	if ((_42517_s != nullptr)) {
		return jule::Any(_42517_s, &__jule_any_type68);;
	};
	return _1d059d258_findBuiltins(&(*_self_), _39325_ident);;
}



inline void _1ab00509c_pushReference(_1d059a0e0_Eval* _self_, jule::Ptr<_1eb026831_FnIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1ab0098dc:;
			{
				jule::Ptr<_1d0512c28_scopeChecker> _43621_sc = _1d05160d3_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>());;
				if ((!(_1ab0077db_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_1d04e2d6d_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1ab0064bb:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ab0077db_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_1d04e2d6d_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type9));
				};
			}
		}
		_match_end_1ab006466:;
	};
}

inline void _1ab0190a0_pushReference(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0550a13_Var>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1ab01d703:;
			{
				jule::Ptr<_1d0512c28_scopeChecker> _43621_sc = _1d05160d3_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>());;
				if ((!(_1ab01b79a_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_1d04e2d6d_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type10));
				};
			}
		}
		else {
			_case_begin_1ab01a47a:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1ab01b79a_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_1d04e2d6d_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type10));
				};
			}
		}
		_match_end_1ab01a425:;
	};
}

inline void _1aa1896b6_pushReference(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea320268_StructIns>& _43340_ref) {
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1aa18a8b5:;
			{
				jule::Ptr<_1d0512c28_scopeChecker> _43621_sc = _1d05160d3_getHardRoot((*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>());;
				if ((!(_1aa18be6b_Exist(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), _43340_ref)))) {
					_1d04e2d6d_Push(_43621_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type11));
				};
			}
		}
		else {
			_case_begin_1aa18ab4b:;
			{
				if ((((*_self_)._field_owner != nullptr) && (!(_1aa18be6b_Exist((*_self_)._field_owner.get()._field_Refers.ptr(), _43340_ref))))) {
					_1d04e2d6d_Push((*_self_)._field_owner.get()._field_Refers.ptr(), jule::Any(_43340_ref, &__jule_any_type11));
				};
			}
		}
		_match_end_1aa18aae6:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d059db93__evalEnum(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05005ea_Enum> _44728_enm) {
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_44728_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1d0598572_Data> _1d059e04a_evalEnum(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05005ea_Enum> _45631_enm, jule::Ptr<_212a0c2ab_Token> _45643_errorToken) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _45631_enm.get()._field_Public,_45631_enm.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _45643_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_45631_enm.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d059db93__evalEnum(&(*_self_), _45631_enm);;
}



inline jule::Ptr<_1d0598572_Data> _1d059e358__evalTypeEnum(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0501be5_TypeEnum> _46532_enm) {
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_46532_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1d0598572_Data> _1d059e710_evalTypeEnum(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0501be5_TypeEnum> _47435_enm, jule::Ptr<_212a0c2ab_Token> _47451_errorToken) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _47435_enm.get()._field_Public,_47435_enm.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _47451_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_47435_enm.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d059e358__evalTypeEnum(&(*_self_), _47435_enm);;
}



inline jule::Ptr<_1d0598572_Data> _1d059ea1d__evalStruct(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea320268_StructIns> _48330_s) {
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_48330_s, 0)}), ._field_Model=jule::Any(_48330_s, &__jule_any_type11), ._field_Decl=true, });;
}



inline jule::Ptr<_1d0598572_Data> _1d059edc5_evalStruct(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea320268_StructIns> _49333_s, jule::Ptr<_212a0c2ab_Token> _49348_errorToken) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _49333_s.get()._field_Decl.get()._field_Public,_49333_s.get()._field_Decl.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _49348_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_49333_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d05a0502_checkDeprecated(&(*_self_), _49333_s.get()._field_Decl.get()._field_Directives,_49348_errorToken);
	return _1d059ea1d__evalStruct(&(*_self_), _49333_s);;
}



inline jule::Ptr<_1d0598572_Data> _1d05a01d3_evalFnIns(_1d059a0e0_Eval* _self_, jule::Ptr<_1eb026831_FnIns> _50328_f) {
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_50328_f, 1)}), ._field_Model=jule::Any(_50328_f, &__jule_any_type9), });;
}



inline void _1d05a0502_checkDeprecated(_1d059a0e0_Eval* _self_, jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _51239_directives, jule::Ptr<_212a0c2ab_Token> _51270_tok) {
	if (_1d059b036_isUnsafe(&(*_self_))) {
		return;;
	};
	jule::Ptr<_1ea2c0405_Directive> _51713_d = _1d05bdba2_findDirective(_51239_directives,jule::Str("deprecated", 10));;
	if ((_51713_d != nullptr)) {
		if ((_51713_d.get()._field_Args.len() == 0LL)) {
			_1d059a5eb_pushErr(&(*_self_), _51270_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type7)}));
		} else {
			_1d059a5eb_pushErr(&(*_self_), _51270_tok,jule::Str("deprecated usage: @", 19),jule::Slice<jule::Any>::make({jule::Any(_51713_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type7)}));
		};
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05a08a9_evalFn(_1d059a0e0_Eval* _self_, jule::Ptr<_1eb023b80_Fn> _52829_f, jule::Ptr<_212a0c2ab_Token> _52837_errorToken) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _52829_f.get()._field_Public,_52829_f.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _52837_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_52829_f.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d05a0502_checkDeprecated(&(*_self_), _52829_f.get()._field_Directives,_52837_errorToken);
	jule::Ptr<_1eb026831_FnIns> _53717_ins = _1eb0252d0_instance(_52829_f);;
	_1ab00509c_pushReference(&(*_self_), _53717_ins);
	return _1d05a01d3_evalFnIns(&(*_self_), _53717_ins);;
}



inline void _1d05a0c72_pushIllegalCycleError(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0550a13_Var>& _54241_v1, jule::Ptr<_1d0550a13_Var>& _54252_v2, jule::Str& _54267_message) {
	;
	jule::Str _54413_refers_to = _22ca32409_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_54241_v1.get()._field_Ident, &__jule_any_type7),jule::Any(_54252_v2.get()._field_Ident, &__jule_any_type7)}));;
	(_54267_message).buffer.insert(0, (((_22dc94ca8_Repeat(jule::Str(" ", 1),4LL) + _54413_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d05a1129_checkCrossCycle(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0550a13_Var>& _54835_v, jule::Str& _54849_message) {
	{
		auto &expr = _54835_v.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1ab00c89b:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> &_54916_d = *it;
			{
				if ((_54916_d == (*_self_)._field_owner)) {
					_1d05a0c72_pushIllegalCycleError(&(*_self_), _54835_v,_54916_d,_54849_message);
					return false;;
				};
				if ((!(_1d05a1129_checkCrossCycle(&(*_self_), _54916_d,_54849_message)))) {
					_1d05a0c72_pushIllegalCycleError(&(*_self_), _54835_v,_54916_d,_54849_message);
					return false;;
				};
			}
			_iter_next_1ab00c89b:;
			++it;
			goto _iter_begin_1ab00c89b;
		}
		_iter_end_1ab00c89b:;
	};
	return true;;
}



inline jule::Bool _1d05a14d1_checkIllegalCycles(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0550a13_Var>& _56742_v, jule::Ptr<_212a0c2ab_Token> _56751_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*_self_)._field_owner == _56742_v)) {
		_1d059a5eb_pushErr(&(*_self_), (*_self_)._field_owner.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_owner.get()._field_Ident, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57917_message = jule::Str();;
	if ((!(_1d05a1129_checkCrossCycle(&(*_self_), _56742_v,_57917_message)))) {
		jule::Str _58221_errMsg = _57917_message;;
		_57917_message=jule::Str();
		_1d05a0c72_pushIllegalCycleError(&(*_self_), (*_self_)._field_owner,_56742_v,_57917_message);
		_58221_errMsg+=_57917_message;
		_1d059a5eb_pushErr(&(*_self_), _56751_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_58221_errMsg, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*_self_)._field_owner.get()._field_Depends = jule::alloc_for_append((*_self_)._field_owner.get()._field_Depends,1);(*_self_)._field_owner.get()._field_Depends.__push(_56742_v);;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d0598572_Data> _1d05a1888_evalVar(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0550a13_Var> _59430_v, jule::Ptr<_212a0c2ab_Token> _59439_errorToken) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _59430_v.get()._field_Public,_59430_v.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _59439_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_59430_v.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d05a0502_checkDeprecated(&(*_self_), _59430_v.get()._field_Directives,_59439_errorToken);
	_59430_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*_self_)._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d0532a17_Sema>>()) {
			_case_begin_1ab014e14:;
			{
				jule::Bool _60817_ok = _1d05a14d1_checkIllegalCycles(&(*_self_), _59430_v,_59439_errorToken);;
				if ((!(_60817_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1ab014ead:;
			{
				if (((!(_59430_v.get()._field_Reference)) || _1d059b036_isUnsafe(&(*_self_)))) {
					goto _match_end_1ab014dae;
				};
				jule::Ptr<_1d0512c28_scopeChecker> _61621_s = (*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>();;
				while (((_61621_s.get()._field_owner == nullptr) && (_61621_s.get()._field_parent != nullptr))) {
					{
						_61621_s=_61621_s.get()._field_parent;
					}
				_iter_next_1ab016c5c:;
				}
				_iter_end_1ab016c5c:;;
				if ((((_61621_s.get()._field_owner != nullptr) && _61621_s.get()._field_owner.get()._field_Anon) && (_59430_v.get()._field_Scope != _61621_s.get()._field_owner.get()._field_Scope))) {
					_1d059a5eb_pushErr(&(*_self_), _59439_errorToken,jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75),jule::Slice<jule::Any>::make({jule::Any(_59430_v.get()._field_Ident, &__jule_any_type7)}));
				};
			}
		}
		_match_end_1ab014dae:;
	};
	if ((_59430_v.get()._field_Scope == nullptr)) {
		_1ab0190a0_pushReference(&(*_self_), _59430_v);
	};
	if (((!(_59430_v.get()._field_CppLinked)) && ((_59430_v.get()._field_Value == nullptr) || (_59430_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_59430_v.get()._field_Constant) {
			_1d05484ab_checkTypeVar((*_self_)._field_s, _59430_v,jule::Trait<_1d05e0476_Lookup>((*_self_)._field_s, 3));
			if ((_59430_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_59430_v.get()._field_Kind == nullptr) || (_59430_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_59430_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1d05484ab_checkTypeVar((*_self_)._field_s, _59430_v,(*_self_)._field_lookup);
		if (((_59430_v.get()._field_Kind == nullptr) || (_59430_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1d0598572_Data> _65917_d = jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_59430_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_59430_v.get()._field_Mutable, ._field_Reference=_59430_v.get()._field_Reference, ._field_Lvalue=(!(_59430_v.get()._field_Constant)), ._field_Model=jule::Any(_59430_v, &__jule_any_type10), });;
	if ((((!(_59430_v.get()._field_CppLinked)) && _1d0550dcb_IsInitialized(_59430_v.ptr())) && (_59430_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65917_d.get()._field_IsRune=_59430_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_59430_v.get()._field_Constant && (_59430_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65917_d.get()._field_Constant=jule::new_ptr<_1eb0095b1_Const>((*(_59430_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65917_d.get()._field_Model=jule::Any(_65917_d.get()._field_Constant, &__jule_any_type49);
		if (_1d05513a4_untypedConstant(_59430_v.ptr())) {
			_1d059b575_applyNumericPrefix(&(*_self_), _65917_d);
			_65917_d.get()._field_untyped=true;
		};
	};
	return _65917_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05a1c40_evalTypeAlias(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c3811_TypeAlias> _68336_ta, jule::Ptr<_212a0c2ab_Token> _68352_errorToken) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _68336_ta.get()._field_Public,_68336_ta.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _68352_errorToken,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_68336_ta.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_68336_ta.get()._field_Used=true;
	jule::Trait<_1d05c40c5_Kind> _69217_kind = _68336_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1d0598572_Data> _69317_d = nullptr;;
	{
		auto &_match_expr{ _69217_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ea320268_StructIns>>()) {
			_case_begin_1ab02a0c2:;
			{
				_69317_d=_1d059ea1d__evalStruct(&(*_self_), _69217_kind.operator jule::Ptr<_1ea320268_StructIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05005ea_Enum>>()) {
			_case_begin_1ab02a80e:;
			{
				_69317_d=_1d059db93__evalEnum(&(*_self_), _69217_kind.operator jule::Ptr<_1d05005ea_Enum>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0501be5_TypeEnum>>()) {
			_case_begin_1ab02939b:;
			{
				_69317_d=_1d059e358__evalTypeEnum(&(*_self_), _69217_kind.operator jule::Ptr<_1d0501be5_TypeEnum>());
			}
		}
		else {
			_case_begin_1ab02927a:;
			{
				_69317_d=jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=_68336_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_68336_ta.get()._field_CppLinked) {
					_69317_d.get()._field_Kind.get()._field_CppIdent=_68336_ta.get()._field_Ident;
				} else {
					_69317_d.get()._field_Kind.get()._field_CppIdent=_68336_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_69317_d.get()._field_Model=jule::Any(_69317_d.get()._field_Kind, &__jule_any_type92);
			}
		}
		_match_end_1ab029225:;
	};
	_69317_d.get()._field_Kind.get()._field_Generic=_68336_ta.get()._field_Generic;
	return _69317_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05a20e7_evalDef(_1d059a0e0_Eval* _self_, jule::Any _71930_def, jule::Ptr<_212a0c2ab_Token> _71940_ident) {
	{
		auto &_match_expr{ _71930_def };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab02d1a2:;
			{
				return _1d05a1888_evalVar(&(*_self_), _71930_def.cast_ptr<_1d0550a13_Var>(&__jule_any_type10),_71940_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ab02d218:;
			{
				return _1d059e04a_evalEnum(&(*_self_), _71930_def.cast_ptr<_1d05005ea_Enum>(&__jule_any_type70),_71940_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab02d27e:;
			{
				return _1d059e710_evalTypeEnum(&(*_self_), _71930_def.cast_ptr<_1d0501be5_TypeEnum>(&__jule_any_type71),_71940_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab02d306:;
			{
				return _1d059edc5_evalStruct(&(*_self_), _1ea2d0415_instance(_71930_def.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68)),_71940_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1ab02d36c:;
			{
				jule::Ptr<_1eb023b80_Fn> _73021_f = _71930_def.cast_ptr<_1eb023b80_Fn>(&__jule_any_type67);;
				if ((_73021_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1d05a08a9_evalFn(&(*_self_), _73021_f,_71940_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ab02d3e4:;
			{
				return _1d05a01d3_evalFnIns(&(*_self_), _71930_def.cast_ptr<_1eb026831_FnIns>(&__jule_any_type9));;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab02d46b:;
			{
				return _1d05a1c40_evalTypeAlias(&(*_self_), _71930_def.cast_ptr<_1d05c3811_TypeAlias>(&__jule_any_type69),_71940_ident);;
			}
		}
		_match_end_1ab02d0b4:;
	};
	_1d059a5eb_pushErr(&(*_self_), _71940_ident,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_71940_ident.get()._field_Kind, &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Ptr<_1d0598572_Data> _1d05a2405_evalIdent(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea30987e_IdentExpr> _74328_ident) {
	jule::Any _74417_def = _1d059d610_getDef(&(*_self_), _74328_ident.get()._field_Ident,_74328_ident.get()._field_CppLinked);;
	return _1d05a20e7_evalDef(&(*_self_), _74417_def,_74328_ident.get()._field_Token);;
}



inline jule::Ptr<_1d0598572_Data> _1d05a2713_evalUnary(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30a088_UnaryExpr> _74833_u) {
	_1d05b5e85_unaryEval _74917_unary = static__1d05b643b_new(_self_);;
	return _1d05b76d4_eval(&_74917_unary, _74833_u);;
}



inline jule::Ptr<_1d0598572_Data> _1d05a2a21_evalVariadic(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30a440_VariadicExpr> _75336_v) {
	if ((_75336_v.get()._field_Expr == nullptr)) {
		_1d059a5eb_pushErr(_self_.ptr(), _75336_v.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _75917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75917_prefix;
	});;
	jule::Ptr<_1d0598572_Data> _76317_d = _1d05b53e6_evalExprKind(_self_, _75336_v.get()._field_Expr.get()._field_Kind);;
	if ((_76317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d05c6627_Variadicable(_76317_d.get()._field_Kind.ptr())))) {
		_1d059a5eb_pushErr(_self_.ptr(), _75336_v.get()._field_Token,jule::Str("type @ is not variadicable", 26),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_76317_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1d05cd442_Slc> _77313_slc = _1d05c7815_Slc(_76317_d.get()._field_Kind.ptr());;
	_76317_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_CppIdent=_77313_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_77313_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_77313_slc.get()._field_Elem.get()._field_Kind});
	return _76317_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05a2d2e_evalUnsafe(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30940b_UnsafeExpr> _78334_u) {
	jule::Bool _78413_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1d0598572_Data> _78617_d = _1d05b53e6_evalExprKind(_self_, _78334_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_78413_unsafety;
	return _78617_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05a313c_evalArr(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30e2ac_SliceExpr> _79131_s) {
	jule::Ptr<_1d05d05dc_Arr> _79317_pt = _1d05c75a1_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1d05d05dc_Arr> _79517_arr = jule::new_ptr<_1d05d05dc_Arr>(_1d05d05dc_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_79317_pt.get()._field_Elem});;
	jule::Bool _80117_filled = false;;
	if ((_79131_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79131_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1ab03c359:;
				{
					if ((_79131_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1ea30a440_VariadicExpr>(&__jule_any_type84).get()._field_Expr != nullptr)) {
						goto _match_end_1ab03c304;
					};
					if (_79317_pt.get()._field_Auto) {
						_1d059a5eb_pushErr(_self_.ptr(), _79131_s.get()._field_Token,jule::Str("auto-sized arrays cannot filled", 31),jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80117_filled=true;
					_79131_s.get()._field_Exprs=_79131_s.get()._field_Exprs.slice(0LL,1LL);
				}
			}
			_match_end_1ab03c304:;
		};
	};
	_79517_arr.get()._field_N=static_cast<jule::I64>(_79131_s.get()._field_Exprs.len());
	if ((!(_79317_pt.get()._field_Auto))) {
		if ((_79517_arr.get()._field_N > _79317_pt.get()._field_N)) {
			_1d059a5eb_pushErr(_self_.ptr(), _79131_s.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else if ((_79517_arr.get()._field_N < _79317_pt.get()._field_N)) {
			_79517_arr.get()._field_N=_79317_pt.get()._field_N;
		};
	};
	jule::Ptr<_1eb01a8ad_ArrayExprModel> _83017_model = jule::new_ptr<_1eb01a8ad_ArrayExprModel>(_1eb01a8ad_ArrayExprModel{._field_Kind=_79517_arr, });;
	if (_80117_filled) {
		_83017_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83017_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79131_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1d05c4504_TypeKind> _83917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_79517_arr.get()._field_Elem;
	{
		auto &expr = _79131_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ab0421b6:;
		if (it != expr.end()) {
			jule::Ptr<_1ea307bbd_Expr> _84121_elem = *it;
			{
				jule::Ptr<_1d0598572_Data> _84221_d = _1d05b53e6_evalExprKind(_self_, _84121_elem.get()._field_Kind);;
				if ((_84221_d == nullptr)) {
					goto _iter_next_1ab0421b6;
				};
				_1d053c5b0_checkAssignType(_self_.get()._field_s, false,_79517_arr.get()._field_Elem,_84221_d,_79131_s.get()._field_Token);
				_83017_model.get()._field_Elems = jule::alloc_for_append(_83017_model.get()._field_Elems,1);_83017_model.get()._field_Elems.__push(_84221_d.get()._field_Model);;
			}
			_iter_next_1ab0421b6:;
			++it;
			goto _iter_begin_1ab0421b6;
		}
		_iter_end_1ab0421b6:;
	};
	_self_.get()._field_prefix=_83917_prefix;
	if (_80117_filled) {
		_83017_model.get()._field_Elems = jule::alloc_for_append(_83017_model.get()._field_Elems,1);_83017_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_79517_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83017_model, &__jule_any_type93), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05a358d_evalExpSlc(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30e2ac_SliceExpr> _86634_s, jule::Ptr<_1d05c4504_TypeKind> _86653_t, jule::Any _86671_first) {
	jule::Ptr<_1d05cd442_Slc> _86717_slc = jule::new_ptr<_1d05cd442_Slc>(_1d05cd442_Slc{._field_Elem=_86653_t});;
	jule::Ptr<_1eb017ab9_SliceExprModel> _87117_model = jule::new_ptr<_1eb017ab9_SliceExprModel>(_1eb017ab9_SliceExprModel{._field_ElemKind=_86653_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _86634_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_86671_first != nullptr)) {
		_87117_model.get()._field_Elems = jule::alloc_for_append(_87117_model.get()._field_Elems,1);_87117_model.get()._field_Elems.__push(_86671_first);;
		_86634_s.get()._field_Exprs=_86634_s.get()._field_Exprs.slice(1LL);
	};
	jule::Ptr<_1d05c4504_TypeKind> _88017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_86717_slc.get()._field_Elem;
	{
		auto &expr = _86634_s.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1aa125795:;
		if (it != expr.end()) {
			jule::Ptr<_1ea307bbd_Expr> _88221_elem = *it;
			{
				jule::Ptr<_1d0598572_Data> _88321_d = _1d05b53e6_evalExprKind(_self_, _88221_elem.get()._field_Kind);;
				if ((_88321_d == nullptr)) {
					goto _iter_next_1aa125795;
				};
				_1d053c5b0_checkAssignType(_self_.get()._field_s, false,_86717_slc.get()._field_Elem,_88321_d,_86634_s.get()._field_Token);
				_87117_model.get()._field_Elems = jule::alloc_for_append(_87117_model.get()._field_Elems,1);_87117_model.get()._field_Elems.__push(_88321_d.get()._field_Model);;
			}
			_iter_next_1aa125795:;
			++it;
			goto _iter_begin_1aa125795;
		}
		_iter_end_1aa125795:;
	};
	_self_.get()._field_prefix=_88017_prefix;
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_86717_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87117_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05a389b_evalSliceExpr(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30e2ac_SliceExpr> _90137_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1d05c75a1_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1aa128567:;
				{
					return _1d05a313c_evalArr(_self_, _90137_s);;
				}
			}
			else if ((_1d05c7815_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1aa1285de:;
				{
					jule::Ptr<_1d05cd442_Slc> _90725_pt = _1d05c7815_Slc(_self_.get()._field_prefix.ptr());;
					return _1d05a358d_evalExpSlc(_self_, _90137_s,_90725_pt.get()._field_Elem,nullptr);;
				}
			}
			_match_end_1aa128457:;
		};
	};
	jule::Ptr<_1d05c4504_TypeKind> _91217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90137_s.get()._field_Exprs.len() == 0LL)) {
		_1d059a5eb_pushErr(_self_.ptr(), _90137_s.get()._field_Token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _92017_first_elem = _1d05b53e6_evalExprKind(_self_, _90137_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92017_first_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _92517_d = _1d05a358d_evalExpSlc(_self_, _90137_s,_92017_first_elem.get()._field_Kind,_92017_first_elem.get()._field_Model);;
	_self_.get()._field_prefix=_91217_prefix;
	return _92517_d;;
}



inline void _1d05a3bdc_checkIntegerIndexingByData(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _93150_d, jule::Ptr<_212a0c2ab_Token> _93160_token) {
	jule::Str _93213_err_key = _1d05c1149_checkDataForIntegerIndexing(_93150_d);;
	{
		auto &_match_expr{ _93213_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1aa12d66b:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1aa12db55:;
			{
				_1d059a5eb_pushErr(&(*_self_), _93160_token,_93213_err_key,jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_93150_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
			}
		}
		else {
			_case_begin_1aa12d9e0:;
			{
				_1d059a5eb_pushErr(&(*_self_), _93160_token,_93213_err_key,jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa12d913:;
	};
}



inline void _1d05a40b6_indexingPtr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _94335_d, jule::Ptr<_1d0598572_Data>& _94350_index, jule::Ptr<_1ea30eb2b_IndexingExpr>& _94365_i) {
	_1d05a3bdc_checkIntegerIndexingByData(&(*_self_), _94350_index,_94365_i.get()._field_Token);
	jule::Ptr<_1d05d1049_Ptr> _94617_ptr = _1d05c6d64_Ptr(_94335_d.get()._field_Kind.ptr());;
	{
		
		if (_1d05d1a1c_IsUnsafe(_94617_ptr.ptr())) {
			_case_begin_1aa131372:;
			{
				_1d059a5eb_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("unsafe pointers are not supports indexing", 41),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1d059b036_isUnsafe(&(*_self_))))) {
			_case_begin_1aa1313d8:;
			{
				_1d059a5eb_pushErr(&(*_self_), _94365_i.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
			}
		}
		_match_end_1aa131251:;
	};
	_94335_d.get()._field_Kind=_94617_ptr.get()._field_Elem;
}



inline void _1d05a447e_indexingArr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _95835_d, jule::Ptr<_1d0598572_Data>& _95850_index, jule::Ptr<_1ea30eb2b_IndexingExpr>& _95865_i) {
	jule::Ptr<_1d05d05dc_Arr> _95917_arr = _1d05c75a1_Arr(_95835_d.get()._field_Kind.ptr());;
	_95835_d.get()._field_Kind=_95917_arr.get()._field_Elem;
	_1d05a3bdc_checkIntegerIndexingByData(&(*_self_), _95850_index,_95865_i.get()._field_Token);
	if ((_1d0598e35_IsConst(_95850_index.ptr()) && (_1eb00c097_AsF64(_95850_index.get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95917_arr.get()._field_N)))) {
		_1d059a5eb_pushErr(&(*_self_), _95865_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
	};
}



inline void _1d05a4847_indexingSlc(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _96735_d, jule::Ptr<_1d0598572_Data>& _96750_index, jule::Ptr<_1ea30eb2b_IndexingExpr>& _96765_i) {
	jule::Ptr<_1d05cd442_Slc> _96817_slc = _1d05c7815_Slc(_96735_d.get()._field_Kind.ptr());;
	_96735_d.get()._field_Kind=_96817_slc.get()._field_Elem;
	_1d05a3bdc_checkIntegerIndexingByData(&(*_self_), _96750_index,_96765_i.get()._field_Token);
	if ((!(_1d0598e35_IsConst(_96750_index.ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ _96735_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1aa136ca1:;
			{
				jule::Ptr<_1eb017ab9_SliceExprModel> _97821_m = _96735_d.get()._field_Model.cast_ptr<_1eb017ab9_SliceExprModel>(&__jule_any_type85);;
				jule::F64 _97917_indx = _1eb00c097_AsF64(_96750_index.get()._field_Constant.ptr());;
				if ((_97917_indx >= static_cast<jule::F64>(_97821_m.get()._field_Elems.len()))) {
					_1d059a5eb_pushErr(&(*_self_), _96765_i.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
				} else {
					_96735_d.get()._field_Model=_97821_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97917_indx))];
					_96735_d.get()._field_Decl=true;
				};
			}
		}
		_match_end_1aa136c07:;
	};
}



inline void _1d05a4c10_indexingMap(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _98935_d, jule::Ptr<_1d0598572_Data>& _98950_index, jule::Ptr<_1ea30eb2b_IndexingExpr>& _98969_i) {
	if ((_98950_index == nullptr)) {
		return;;
	};
	jule::Ptr<_1d05ce9e8_Map> _99317_m = _1d05c82b6_Map(_98935_d.get()._field_Kind.ptr());;
	_1d0583e64_assignTypeChecker _99417_atc = _1d0583e64_assignTypeChecker{._field_s=(*_self_)._field_s, ._field_dest=_99317_m.get()._field_Key, ._field_d=_98950_index, ._field_errorToken=_98969_i.get()._field_Token};;
	_1d05850db_check(&_99417_atc);
	_98935_d.get()._field_Kind=_99317_m.get()._field_Val;
}



inline void _1d05a50c8_indexingStr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _100435_d, jule::Ptr<_1d0598572_Data>& _100450_index, jule::Ptr<_1ea30eb2b_IndexingExpr>& _100465_i) {
	;
	_100435_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u8", 2)), 6)});
	if ((_100450_index == nullptr)) {
		return;;
	};
	_1d05a3bdc_checkIntegerIndexingByData(&(*_self_), _100450_index,_100465_i.get()._field_Token);
	if ((!(_1d0598e35_IsConst(_100450_index.ptr())))) {
		_100435_d.get()._field_Constant=nullptr;
		return;;
	};
	if (_1d0598e35_IsConst(_100435_d.ptr())) {
		jule::Ptr<_212a0c2ab_Token> _102017_errorToken = _100465_i.get()._field_Token;;
		jule::I64 _102117_j = _1eb00babe_AsI64(_100450_index.get()._field_Constant.ptr());;
		jule::Str _102217_s = _1eb00b5e6_ReadStr(_100435_d.get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102117_j) >= _102217_s.len())) {
			_1d059a5eb_pushErr(&(*_self_), _102017_errorToken,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
		} else {
			_1eb00c592_SetU64(_100435_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_102217_s[_102117_j])));
		};
	};
}



inline void _1d05a5491_toIndexing(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _103134_d, jule::Ptr<_1d0598572_Data>& _103149_index, jule::Ptr<_1ea30eb2b_IndexingExpr>& _103168_i) {
	{
		
		if ((_1d05c6d64_Ptr(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa14196a:;
			{
				_1d05a40b6_indexingPtr(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_1d05c75a1_Arr(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa1419e2:;
			{
				_1d05a447e_indexingArr(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_1d05c7815_Slc(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa141a69:;
			{
				_1d05a4847_indexingSlc(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_1d05c82b6_Map(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa141ae1:;
			{
				_1d05a4c10_indexingMap(&(*_self_), _103134_d,_103149_index,_103168_i);
				return;;
			}
		}
		else if ((_1d05c688b_Prim(_103134_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa141b68:;
			{
				jule::Ptr<_1d05c9251_Prim> _104617_prim = _1d05c688b_Prim(_103134_d.get()._field_Kind.ptr());;
				{
					
					if (_1d05cc485_IsStr(_104617_prim.ptr())) {
						_case_begin_1aa145bc2:;
						{
							_1d05a50c8_indexingStr(&(*_self_), _103134_d,_103149_index,_103168_i);
							return;;
						}
					}
					_match_end_1aa145b28:;
				};
			}
		}
		_match_end_1aa141827:;
	};
	_1d059a5eb_pushErr(&(*_self_), _103168_i.get()._field_Token,jule::Str("type @ is not support indexing", 30),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_103134_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
}



inline jule::Bool _1d05a5914_pushGenericsFromExprSubIdent(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30b122_SubIdentExpr>& _105653_sexpr, jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>& _105714_generics, jule::Ptr<_1ea307bbd_Expr>& _105742_expr) {
	jule::Ptr<_1ea3043b2_SubIdentTypeDecl> _105817_t = jule::new_ptr<_1ea3043b2_SubIdentTypeDecl>();;
	if ((!(_1d05c1e19_pushSubIdentFromExpr(jule::Any(_105653_sexpr, &__jule_any_type94),_105817_t)))) {
		_1d059a5eb_pushErr(_self_.ptr(), _105742_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	_105714_generics = jule::alloc_for_append(_105714_generics,1);_105714_generics.__push(jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Kind=jule::Any(_105817_t, &__jule_any_type95)}));;
	return true;;
}



inline jule::Bool _1d05a5ccc_pushGenericsFromData(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>& _106745_generics, jule::Ptr<_1ea307bbd_Expr>& _106773_expr) {
	{
		auto &_match_expr{ _106773_expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1aa149ac7:;
			{
				jule::Ptr<_1ea30a088_UnaryExpr> _107021_u = _106773_expr.get()._field_Kind.cast_ptr<_1ea30a088_UnaryExpr>(&__jule_any_type96);;
				{
					auto &_match_expr{ _107021_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1aa14b601:;
						{
							jule::Ptr<_1ea305528_PtrTypeDecl> _107325_kind = jule::new_ptr<_1ea305528_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _107425__generics = jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, 1LL);;
							_1d05a5ccc_pushGenericsFromData(_self_, _107425__generics,_107021_u.get()._field_Expr);
							_107325_kind.get()._field_Elem=_107425__generics[0LL];
							_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_106773_expr.get()._field_Token, ._field_Kind=jule::Any(_107325_kind, &__jule_any_type80)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1aa14b667:;
						{
							jule::Ptr<_1ea304a55_SptrTypeDecl> _108225_kind = jule::new_ptr<_1ea304a55_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _108325__generics = jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, 1LL);;
							_1d05a5ccc_pushGenericsFromData(_self_, _108325__generics,_107021_u.get()._field_Expr);
							_108225_kind.get()._field_Elem=_108325__generics[0LL];
							_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_106773_expr.get()._field_Token, ._field_Kind=jule::Any(_108225_kind, &__jule_any_type81)}));;
						}
					}
					else {
						_case_begin_1aa14a9da:;
						{
							_1d059a5eb_pushErr(_self_.ptr(), _107021_u.get()._field_Op,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1aa14a765:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1aa149b3d:;
			{
				_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(_106773_expr.get()._field_Kind.cast_ptr<_1ea30369c_TypeDecl>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aa14992e:;
			{
				jule::Ptr<_1ea30b122_SubIdentExpr> _109721_sexpr = _106773_expr.get()._field_Kind.cast_ptr<_1ea30b122_SubIdentExpr>(&__jule_any_type94);;
				return _1d05a5914_pushGenericsFromExprSubIdent(_self_, _109721_sexpr,_106745_generics,_106773_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1aa149995:;
			{
				jule::Ptr<_1ea30987e_IdentExpr> _110021_ident = _106773_expr.get()._field_Kind.cast_ptr<_1ea30987e_IdentExpr>(&__jule_any_type88);;
				_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_110021_ident.get()._field_Token, ._field_Ident=_110021_ident.get()._field_Ident, ._field_CppLinked=_110021_ident.get()._field_CppLinked, }), &__jule_any_type21)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1aa14906b:;
			{
				{
					auto &expr = _106773_expr.get()._field_Kind.cast_ptr<_1ea30884a_TupleExpr>(&__jule_any_type89).get()._field_Expr;
					auto it = expr.begin();
					_iter_begin_1aa15175a:;
					if (it != expr.end()) {
						jule::Ptr<_1ea307bbd_Expr> _110925_texpr = *it;
						{
							if ((!(_1d05a5ccc_pushGenericsFromData(_self_, _106745_generics,_110925_texpr)))) {
								return false;;
							};
						}
						_iter_next_1aa15175a:;
						++it;
						goto _iter_begin_1aa15175a;
					}
					_iter_end_1aa15175a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa1490d2:;
			{
				jule::Ptr<_1ea30ab9e_NsSelectionExpr> _111521_ns = _106773_expr.get()._field_Kind.cast_ptr<_1ea30ab9e_NsSelectionExpr>(&__jule_any_type98);;
				jule::Ptr<_1ea303c63_IdentTypeDecl> _111621_decl = jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_111521_ns.get()._field_Ident, ._field_Ident=_111521_ns.get()._field_Ident.get()._field_Kind, });;
				_106745_generics = jule::alloc_for_append(_106745_generics,1);_106745_generics.__push(jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_111621_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ea304769_NamespaceTypeDecl>(_1ea304769_NamespaceTypeDecl{._field_Idents=_111521_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_111621_decl.get()._field_Token, ._field_Kind=jule::Any(_111621_decl, &__jule_any_type21)})}), &__jule_any_type99)}));;
			}
		}
		else {
			_case_begin_1aa149005:;
			{
				_1d059a5eb_pushErr(_self_.ptr(), _106773_expr.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1aa148ea0:;
	};
	return true;;
}



inline void _1d05a611d_evalIdentDeclFromIndexing(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1d0598572_Data>& _113750_d, jule::Ptr<_1ea30eb2b_IndexingExpr>& _113765_i) {
	jule::Ptr<_1ea320268_StructIns> _113817_s = _1d05c7cdd_Struct(_113750_d.get()._field_Kind.ptr());;
	if ((_113817_s == nullptr)) {
		_1d059a5eb_pushErr(_self_.ptr(), _113765_i.get()._field_Expr.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_113750_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		_113750_d=nullptr;
		return;;
	};
	jule::Ptr<_1ea303c63_IdentTypeDecl> _114517_decl = nullptr;;
	{
		auto &_match_expr{ _113765_i.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1aa156d04:;
			{
				jule::Ptr<_1ea30987e_IdentExpr> _114821_expr = _113765_i.get()._field_Expr.get()._field_Kind.cast_ptr<_1ea30987e_IdentExpr>(&__jule_any_type88);;
				_114517_decl=jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_114821_expr.get()._field_Token, ._field_Ident=_114821_expr.get()._field_Ident, ._field_CppLinked=_114821_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa157dc1:;
			{
				jule::Ptr<_1ea30ab9e_NsSelectionExpr> _115521_expr = _113765_i.get()._field_Expr.get()._field_Kind.cast_ptr<_1ea30ab9e_NsSelectionExpr>(&__jule_any_type98);;
				_114517_decl=jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_115521_expr.get()._field_Ident, ._field_Ident=_115521_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1aa157211:;
			{
				_1d059a5eb_pushErr(_self_.ptr(), _113765_i.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_113750_d=nullptr;
				return;;
			}
		}
		_match_end_1aa1571ab:;
	};
	if ((!(_1d05a5ccc_pushGenericsFromData(_self_, _114517_decl.get()._field_Generics,_113765_i.get()._field_Index)))) {
		_113750_d=nullptr;
		return;;
	};
	_113817_s=({ auto _wrap_copy = _1d05ac377_typeChecker(_self_.ptr()); _1d05d6bed_fromStruct(&_wrap_copy, _114517_decl,_113817_s.get()._field_Decl); });
	if ((_113817_s == nullptr)) {
		_113750_d=nullptr;
		return;;
	};
	_113750_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1d05c40c5_Kind>(_113817_s, 0);
}



inline jule::Bool _1d05a6580_checkGenericFn(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1eb026831_FnIns>& _118039_f, jule::Ptr<_212a0c2ab_Token>& _118055_et, jule::Any& _118072_model) {
	jule::Bool _118113_ok = _1d053e97a_reloadFnInsTypes(_self_.get()._field_s, _118039_f);;
	_118039_f.get()._field_reloaded=true;
	if ((!(_118113_ok))) {
		return false;;
	};
	jule::Ptr<_1eb026831_FnIns> _118617_existInstance = _1eb0255aa_appendInstance(_118039_f.get()._field_Decl.ptr(), _118039_f);;
	if ((!(_1d053dade_checkConstraintsFn(_self_.get()._field_s, _118039_f,_118055_et,_118617_existInstance)))) {
		return false;;
	};
	if ((_118617_existInstance != nullptr)) {
		_118039_f=_118617_existInstance;
		_1d05c1bc7_updateModelToGenericIns(_118072_model,_118617_existInstance);
	} else {
		_1d054b2b1_checkFnInsCaller(_self_.get()._field_s, _118039_f,_118055_et);
	};
	return true;;
}



inline void _1d05a68c1_evalFnGenericFromIndexing(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1d0598572_Data>& _120550_d, jule::Ptr<_1ea30eb2b_IndexingExpr>& _120565_i) {
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _120617_generics = jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1d05a5ccc_pushGenericsFromData(_self_, _120617_generics,_120565_i.get()._field_Index)))) {
		_120550_d=nullptr;
		return;;
	};
	jule::Ptr<_1eb026831_FnIns> _121217_f = _1d05c7a79_Fn(_120550_d.get()._field_Kind.ptr());;
	jule::I64 _121317_genericsLen = 0LL;;
	if ((_121217_f.get()._field_Decl != nullptr)) {
		_121317_genericsLen=static_cast<jule::I64>(_121217_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1d0536a71_checkGenericQuantity(_self_.get()._field_s.ptr(), _121317_genericsLen,static_cast<jule::I64>(_120617_generics.len()),_120565_i.get()._field_Expr.get()._field_Token)))) {
		_120550_d=nullptr;
		return;;
	};
	_121217_f.get()._field_Generics=jule::Slice<jule::Ptr<_1d05c2cc7_InsGeneric>>::alloc(0LL, _121217_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto &expr = _120617_generics;
		auto it = expr.begin();
		_iter_begin_1aa1622e8:;
		if (it != expr.end()) {
			jule::Ptr<_1ea30369c_TypeDecl> _122421_g = *it;
			{
				jule::Ptr<_1d0598572_Data> _122521_k = _1d05ac685_evalType(_self_.ptr(), _122421_g);;
				if ((_122521_k == nullptr)) {
					_120550_d=nullptr;
					return;;
				};
				_121217_f.get()._field_Generics = jule::alloc_for_append(_121217_f.get()._field_Generics,1);_121217_f.get()._field_Generics.__push(jule::new_ptr<_1d05c2cc7_InsGeneric>(_1d05c2cc7_InsGeneric{._field_Kind=_122521_k.get()._field_Kind, }));;
			}
			_iter_next_1aa1622e8:;
			++it;
			goto _iter_begin_1aa1622e8;
		}
		_iter_end_1aa1622e8:;
	};
	if (_1eb027bb7_IsBuiltin(_121217_f.ptr())) {
		return;;
	};
	if (_1d05a6580_checkGenericFn(_self_, _121217_f,_120565_i.get()._field_Expr.get()._field_Token,_120550_d.get()._field_Model)) {
		_120550_d.get()._field_Kind.get()._field_Kind=jule::Trait<_1d05c40c5_Kind>(_121217_f, 1);
	} else {
		_120550_d=nullptr;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05a6be0_evalIndexing(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30eb2b_IndexingExpr> _124436_i) {
	jule::Ptr<_1d05c4504_TypeKind> _124517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_124517_prefix;
	});;
	jule::Ptr<_1d0598572_Data> _124917_d = _1d05b53e6_evalExprKind(_self_, _124436_i.get()._field_Expr.get()._field_Kind);;
	if ((_124917_d == nullptr)) {
		return nullptr;;
	};
	if (_124917_d.get()._field_Decl) {
		_1d05a611d_evalIdentDeclFromIndexing(_self_, _124917_d,_124436_i);
		return _124917_d;;
	};
	if ((_1d05c7a79_Fn(_124917_d.get()._field_Kind.ptr()) != nullptr)) {
		_1d05a68c1_evalFnGenericFromIndexing(_self_, _124917_d,_124436_i);
		return _124917_d;;
	};
	_1d0598572_Data _126517_old_d = (*(_124917_d));;
	jule::Ptr<_1d0598572_Data> _126717_index = _1d05b53e6_evalExprKind(_self_, _124436_i.get()._field_Index.get()._field_Kind);;
	if ((_126717_index == nullptr)) {
		return nullptr;;
	};
	_124917_d.get()._field_Decl=false;
	_1d05a5491_toIndexing(_self_.ptr(), _124917_d,_126717_index,_124436_i);
	if (_1d0598e35_IsConst(_124917_d.ptr())) {
		_124917_d.get()._field_Decl=false;
		_124917_d.get()._field_Model=jule::Any(_124917_d.get()._field_Constant, &__jule_any_type49);
	} else if (_124917_d.get()._field_Decl) {
		_124917_d.get()._field_Decl=false;
	} else {
		_124917_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01803c_IndexingExprModel>(_1eb01803c_IndexingExprModel{._field_Token=_124436_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1d0598572_Data>(_126517_old_d), ._field_Index=_126717_index}), &__jule_any_type47);
	};
	return _124917_d;;
}



inline __jule_tuple_x_1d0598572_Data__jule_tuple_x_1d0598572_Data _1d05a6eed_evalSlicingExprs(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea310236_SlicingExpr>& _129841_s) {
	__jule_tuple_x_1d0598572_Data__jule_tuple_x_1d0598572_Data __jule_func_result;
	jule::Ptr<_1d05c4504_TypeKind> _129917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129917_prefix;
	});;
	jule::Ptr<_1d0598572_Data> _130317_l = nullptr;;
	jule::Ptr<_1d0598572_Data> _130417_r = nullptr;;
	if ((_129841_s.get()._field_Start != nullptr)) {
		_130317_l=_1d05b53e6_evalExprKind(_self_, _129841_s.get()._field_Start.get()._field_Kind);
		if ((_130317_l != nullptr)) {
			_1d05a3bdc_checkIntegerIndexingByData(_self_.ptr(), _130317_l,_129841_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130317_l=jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1eb009a34_NewI64(0LL)});
		_130317_l.get()._field_Model=jule::Any(_130317_l.get()._field_Constant, &__jule_any_type49);
	};
	if ((_129841_s.get()._field_To != nullptr)) {
		_130417_r=_1d05b53e6_evalExprKind(_self_, _129841_s.get()._field_To.get()._field_Kind);
		if ((_130417_r != nullptr)) {
			_1d05a3bdc_checkIntegerIndexingByData(_self_.ptr(), _130417_r,_129841_s.get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130317_l;
	__jule_func_result.__jule_result_arg1 = _130417_r;
	return __jule_func_result;;
}



inline void _1d05a7273_slicingArr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _133330_d) {
	jule::Ptr<_1d05c4504_TypeKind> _133417_elemType = _1d05c75a1_Arr(_133330_d.get()._field_Kind.ptr()).get()._field_Elem;;
	_133330_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cd442_Slc>(_1d05cd442_Slc{._field_Elem=_133417_elemType}), 8)});
	_133330_d.get()._field_Lvalue=false;
	_133330_d.get()._field_Mutable=(_133330_d.get()._field_Mutable || (!(_1d05c5b76_Mutable(_133417_elemType.ptr()))));
}



inline void _1d05a763b_slicingStr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _134830_d, jule::Ptr<_1d0598572_Data>& _134841_l, jule::Ptr<_1d0598572_Data>& _134852_r) {
	_134830_d.get()._field_Lvalue=false;
	_134830_d.get()._field_Mutable=true;
	if ((!(_1d0598e35_IsConst(_134830_d.ptr())))) {
		return;;
	};
	if (((_134841_l == nullptr) || (_134852_r == nullptr))) {
		_134830_d.get()._field_Constant=nullptr;
		return;;
	};
	if ((_1d0598e35_IsConst(_134841_l.ptr()) && _1d0598e35_IsConst(_134852_r.ptr()))) {
		jule::I64 _136117_left = _1eb00babe_AsI64(_134841_l.get()._field_Constant.ptr());;
		if ((_136117_left < 0LL)) {
			return;;
		};
		jule::Str _136617_s = _1eb00b5e6_ReadStr(_134830_d.get()._field_Constant.ptr());;
		jule::I64 _136721_right = 0LL;;
		if ((_134852_r == nullptr)) {
			_136721_right=static_cast<jule::I64>(static_cast<jule::I64>(_136617_s.len()));
		} else {
			_136721_right=static_cast<jule::I64>(_1eb00babe_AsI64(_134852_r.get()._field_Constant.ptr()));
		};
		if ((_136117_left > _136721_right)) {
			return;;
		};
		_1eb00ca8c_SetStr(_134830_d.get()._field_Constant.ptr(), _136617_s.slice(_136117_left,_136721_right));
		_134830_d.get()._field_Decl=true;
	} else {
		_134830_d.get()._field_Constant=nullptr;
	};
}



inline void _1d05a7a9d_checkSlicing(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data>& _138436_d, jule::Ptr<_1d0598572_Data>& _138447_l, jule::Ptr<_1d0598572_Data>& _138458_r, jule::Ptr<_1ea310236_SlicingExpr>& _138469_s) {
	{
		
		if ((_1d05c75a1_Arr(_138436_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa179453:;
			{
				_1d05a7273_slicingArr(&(*_self_), _138436_d);
				return;;
			}
		}
		else if ((_1d05c7815_Slc(_138436_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa1794ca:;
			{
				return;;
			}
		}
		else if ((_1d05c688b_Prim(_138436_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa179552:;
			{
				jule::Ptr<_1d05c9251_Prim> _139217_prim = _1d05c688b_Prim(_138436_d.get()._field_Kind.ptr());;
				{
					
					if (_1d05cc485_IsStr(_139217_prim.ptr())) {
						_case_begin_1aa17b9d8:;
						{
							_1d05a763b_slicingStr(&(*_self_), _138436_d,_138447_l,_138458_r);
							return;;
						}
					}
					_match_end_1aa17b93e:;
				};
			}
		}
		_match_end_1aa179332:;
	};
	_1d059a5eb_pushErr(&(*_self_), _138469_s.get()._field_Token,jule::Str("type @ is not support slicing", 29),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_138436_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
}



inline jule::Ptr<_1d0598572_Data> _1d05a7dab_evalSlicing(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea310236_SlicingExpr> _140335_s) {
	jule::Ptr<_1d0598572_Data> _140417_d = _1d05b53e6_evalExprKind(_self_, _140335_s.get()._field_Expr.get()._field_Kind);;
	if ((_140417_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _140918_l;;
	jule::Ptr<_1d0598572_Data> _140925_r;;
	({
		__jule_tuple_x_1d0598572_Data__jule_tuple_x_1d0598572_Data __jule_assign_result = _1d05a6eed_evalSlicingExprs(_self_, _140335_s);
		_140918_l = __jule_assign_result.__jule_result_arg0;
		_140925_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140918_l == nullptr)) {
		return _140417_d;;
	};
	_140417_d.get()._field_Decl=false;
	_1d05a7a9d_checkSlicing(_self_.ptr(), _140417_d,_140918_l,_140925_r,_140335_s);
	if (_1d0598e35_IsConst(_140417_d.ptr())) {
		_140417_d.get()._field_Decl=false;
		_140417_d.get()._field_Model=jule::Any(_140417_d.get()._field_Constant, &__jule_any_type49);
	} else if (_140417_d.get()._field_Decl) {
		_140417_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1eb01925d_SlicingExprModel> _142721_model = jule::new_ptr<_1eb01925d_SlicingExprModel>(_1eb01925d_SlicingExprModel{._field_Token=_140335_s.get()._field_Token, ._field_Expr=_140417_d.get()._field_Model, ._field_Left=_140918_l.get()._field_Model, });;
		if ((_140925_r != nullptr)) {
			_142721_model.get()._field_Right=_140925_r.get()._field_Model;
		};
		_140417_d.get()._field_Model=jule::Any(_142721_model, &__jule_any_type100);
	};
	return _140417_d;;
}



inline void _1d05a8274_castPtr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _144030_t, jule::Ptr<_1d0598572_Data> _144048_d, jule::Ptr<_212a0c2ab_Token> _144058_errorToken) {
	_144048_d.get()._field_Constant=nullptr;
	jule::Ptr<_1d05cc9d5_Sptr> _144213_sptr = _1d05c6b00_Sptr(_144048_d.get()._field_Kind.ptr());;
	if ((_144213_sptr != nullptr)) {
		if ((!(_1d05c4c0d_Equal(_1d05c6d64_Ptr(_144030_t.ptr()).get()._field_Elem, _144213_sptr.get()._field_Elem)))) {
			_1d059a5eb_pushErr(&(*_self_), _144058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_144048_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_144030_t.ptr()), &__jule_any_type7)}));
		};
		return;;
	};
	if ((!(_1d059b036_isUnsafe(&(*_self_))))) {
		_1d059a5eb_pushErr(&(*_self_), _144058_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d05c9251_Prim> _145513_prim = _1d05c688b_Prim(_144048_d.get()._field_Kind.ptr());;
	if (((_1d05c6d64_Ptr(_144048_d.get()._field_Kind.ptr()) == nullptr) && ((_145513_prim == nullptr) || (!(_1eb0089de_IsInt(_1d05c95b4_Str(_145513_prim.ptr()))))))) {
		_1d059a5eb_pushErr(&(*_self_), _144058_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_144048_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_144030_t.ptr()), &__jule_any_type7)}));
	};
}



inline void _1d05a863c_castStruct(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _146133_t, jule::Ptr<_1d0598572_Data> _146151_d, jule::Ptr<_212a0c2ab_Token> _146161_errorToken) {
	_146151_d.get()._field_Constant=nullptr;
	jule::Ptr<_1d04ed4a5_Trait> _146317_tr = _1d05c8052_Trait(_146151_d.get()._field_Kind.ptr());;
	if ((_146317_tr == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _146161_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_146151_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_146133_t.ptr()), &__jule_any_type7)}));
		return;;
	};
	jule::Ptr<_1ea320268_StructIns> _146917_s = _1d05c7cdd_Struct(_146133_t.ptr());;
	_1aa1896b6_pushReference(&(*_self_), _146917_s);
	if ((!(_1ea2d4ded_IsImplements(_146917_s.get()._field_Decl.ptr(), _146317_tr)))) {
		_1d059a5eb_pushErr(&(*_self_), _146161_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_146151_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_146133_t.ptr()), &__jule_any_type7)}));
	};
}



inline void _1d05a8a05_castRef(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _147730_t, jule::Ptr<_1d0598572_Data> _147748_d, jule::Ptr<_212a0c2ab_Token> _147758_errorToken) {
	_147748_d.get()._field_Constant=nullptr;
	jule::Ptr<_1d05cc9d5_Sptr> _147917_sptr = _1d05c6b00_Sptr(_147730_t.ptr());;
	jule::Ptr<_1d05d1049_Ptr> _148117_ptr = _1d05c6d64_Ptr(_147748_d.get()._field_Kind.ptr());;
	if (((_148117_ptr != nullptr) && _1d05c4c0d_Equal(_147917_sptr.get()._field_Elem, _148117_ptr.get()._field_Elem))) {
		if ((!(_1d059b036_isUnsafe(&(*_self_))))) {
			_1d059a5eb_pushErr(&(*_self_), _147758_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1d05c7cdd_Struct(_147917_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1d05a863c_castStruct(&(*_self_), _147917_sptr.get()._field_Elem,_147748_d,_147758_errorToken);
		return;;
	};
	_1d059a5eb_pushErr(&(*_self_), _147758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_147748_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_147730_t.ptr()), &__jule_any_type7)}));
}



inline void _1d05a8dbd_castSlc(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _149930_t, jule::Ptr<_1d0598572_Data> _149948_d, jule::Ptr<_212a0c2ab_Token> _149958_errorToken) {
	_149948_d.get()._field_Constant=nullptr;
	if ((_1d05c70c8_Enum(_149948_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1d05c688b_Prim(_1d05c70c8_Enum(_149948_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1d05cc485_IsStr(_1d05c688b_Prim(_1d05c70c8_Enum(_149948_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1d059a5eb_pushErr(&(*_self_), _149958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_149948_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_149930_t.ptr()), &__jule_any_type7)}));
			return;;
		};
	} else if (((_1d05c688b_Prim(_149948_d.get()._field_Kind.ptr()) == nullptr) || (!(_1d05cc485_IsStr(_1d05c688b_Prim(_149948_d.get()._field_Kind.ptr()).ptr()))))) {
		_1d059a5eb_pushErr(&(*_self_), _149958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_149948_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_149930_t.ptr()), &__jule_any_type7)}));
		return;;
	};
	_149930_t=_1d05c7815_Slc(_149930_t.ptr()).get()._field_Elem;
	jule::Ptr<_1d05c9251_Prim> _151213_prim = _1d05c688b_Prim(_149930_t.ptr());;
	if (((_151213_prim == nullptr) || ((!(_1d05caa5a_IsU8(_151213_prim.ptr()))) && (!(_1d05ca582_IsI32(_151213_prim.ptr())))))) {
		_1d059a5eb_pushErr(&(*_self_), _149958_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_149948_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_149930_t.ptr()), &__jule_any_type7)}));
	};
}



inline void _1d05a91dc_castStr(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _151830_d, jule::Ptr<_212a0c2ab_Token> _151840_errorToken) {
	_151830_d.get()._field_Constant=nullptr;
	if ((_1d05c70c8_Enum(_151830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05005ea_Enum> _152121_e = _1d05c70c8_Enum(_151830_d.get()._field_Kind.ptr());;
		if (((_1d05c688b_Prim(_152121_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1d05cc485_IsStr(_1d05c688b_Prim(_152121_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1d05c688b_Prim(_151830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05c9251_Prim> _152817_prim = _1d05c688b_Prim(_151830_d.get()._field_Kind.ptr());;
		if (((!(_1d05caa5a_IsU8(_152817_prim.ptr()))) && (!(_1d05ca582_IsI32(_152817_prim.ptr()))))) {
			_1d059a5eb_pushErr(&(*_self_), _151840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1d05c4900_Str(_151830_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		};
		return;;
	};
	if ((_1d05c7815_Slc(_151830_d.get()._field_Kind.ptr()) == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _151840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1d05c4900_Str(_151830_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _154017_t = _1d05c7815_Slc(_151830_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1d05c9251_Prim> _154113_prim = _1d05c688b_Prim(_154017_t.ptr());;
	if (((_154113_prim == nullptr) || ((!(_1d05caa5a_IsU8(_154113_prim.ptr()))) && (!(_1d05ca582_IsI32(_154113_prim.ptr())))))) {
		_1d059a5eb_pushErr(&(*_self_), _151840_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1d05c4900_Str(_151830_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
}



inline void _1d05a95a5_castInt(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _154730_t, jule::Ptr<_1d0598572_Data> _154748_d, jule::Ptr<_212a0c2ab_Token> _154758_errorToken) {
	if (_1d0598e35_IsConst(_154748_d.ptr())) {
		jule::Ptr<_1d05c9251_Prim> _154917_prim = _1d05c688b_Prim(_154730_t.ptr());;
		{
			
			if (_1eb00845b_IsSigInt(_154917_prim.get()._field_Kind)) {
				_case_begin_1aa1a4846:;
				{
					_1eb00c31c_SetI64(_154748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_154748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1eb008747_IsUnsigInt(_154917_prim.get()._field_Kind)) {
				_case_begin_1aa1a48bd:;
				{
					_1eb00c592_SetU64(_154748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_154748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1aa1a478b:;
		};
	} else {
		_154748_d.get()._field_Constant=nullptr;
	};
	if ((_1d05c70c8_Enum(_154748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05005ea_Enum> _156117_e = _1d05c70c8_Enum(_154748_d.get()._field_Kind.ptr());;
		if (_1eb0090a5_IsNum(_1d05c4900_Str(_156117_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1d05c6b00_Sptr(_154748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05c9251_Prim> _156817_prim = _1d05c688b_Prim(_154730_t.ptr());;
		if ((!(_1d05cbeac_IsUintptr(_156817_prim.ptr())))) {
			_1d059a5eb_pushErr(&(*_self_), _154758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_154748_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_154730_t.ptr()), &__jule_any_type7)}));
		};
		return;;
	};
	if ((_1d05c6d64_Ptr(_154748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05c9251_Prim> _157517_prim = _1d05c688b_Prim(_154730_t.ptr());;
		if (_1d05cbeac_IsUintptr(_157517_prim.ptr())) {
		} else if ((!(_1d059b036_isUnsafe(&(*_self_))))) {
			_1d059a5eb_pushErr(&(*_self_), _154758_errorToken,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1d05c9251_Prim> _158413_prim = _1d05c688b_Prim(_154748_d.get()._field_Kind.ptr());;
	if (((_158413_prim != nullptr) && _1eb0090a5_IsNum(_1d05c95b4_Str(_158413_prim.ptr())))) {
		return;;
	};
	_1d059a5eb_pushErr(&(*_self_), _154758_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_154748_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_154730_t.ptr()), &__jule_any_type7)}));
}



inline void _1d05a996d_castNum(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _159230_t, jule::Ptr<_1d0598572_Data> _159248_d, jule::Ptr<_212a0c2ab_Token> _159258_errorToken) {
	if (_1d0598e35_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1d05c9251_Prim> _159417_prim = _1d05c688b_Prim(_159230_t.ptr());;
		{
			
			if (_1eb008d0d_IsFloat(_159417_prim.get()._field_Kind)) {
				_case_begin_1aa1ad6a7:;
				{
					_1eb00cd12_SetF64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1eb00c097_AsF64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1eb00845b_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1aa1ad72e:;
				{
					_1eb00c31c_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1eb008747_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1aa1ad7a6:;
				{
					_1eb00c592_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1aa1ad5db:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_1d05c70c8_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d05005ea_Enum> _160817_e = _1d05c70c8_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_1eb0090a5_IsNum(_1d05c4900_Str(_160817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d05c9251_Prim> _161413_prim = _1d05c688b_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_161413_prim != nullptr) && _1eb0090a5_IsNum(_1d05c95b4_Str(_161413_prim.ptr())))) {
		return;;
	};
	_1d059a5eb_pushErr(&(*_self_), _159258_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_159230_t.ptr()), &__jule_any_type7)}));
}



inline void _1d05a9d36_castPrim(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _162231_t, jule::Ptr<_1d0598572_Data> _162249_d, jule::Ptr<_212a0c2ab_Token> _162259_errorToken) {
	jule::Ptr<_1d05c9251_Prim> _162313_prim = _1d05c688b_Prim(_162231_t.ptr());;
	{
		
		if (_1d05cc6e9_IsAny(_162313_prim.ptr())) {
			_case_begin_1aa1b4438:;
			{
				_162249_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1d05cc485_IsStr(_162313_prim.ptr())) {
			_case_begin_1aa1b49aa:;
			{
				_1d05a91dc_castStr(&(*_self_), _162249_d,_162259_errorToken);
			}
		}
		else if (_1eb0089de_IsInt(_1d05c95b4_Str(_162313_prim.ptr()))) {
			_case_begin_1aa1b4a21:;
			{
				_1d05a95a5_castInt(&(*_self_), _162231_t,_162249_d,_162259_errorToken);
			}
		}
		else if (_1eb0090a5_IsNum(_1d05c95b4_Str(_162313_prim.ptr()))) {
			_case_begin_1aa1b4a87:;
			{
				_1d05a996d_castNum(&(*_self_), _162231_t,_162249_d,_162259_errorToken);
			}
		}
		else {
			_case_begin_1aa1b4944:;
			{
				_1d059a5eb_pushErr(&(*_self_), _162259_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_162231_t.ptr()), &__jule_any_type7)}));
			}
		}
		_match_end_1aa1b48cd:;
	};
}



inline void _1d05aa155_castConstant(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind>& _163936_t, jule::Ptr<_1d0598572_Data>& _163955_d) {
	if (((_163955_d == nullptr) || (!(_1d0598e35_IsConst(_163955_d.ptr()))))) {
		return;;
	};
	jule::Ptr<_1d05c9251_Prim> _164313_prim = _1d05c688b_Prim(_163936_t.ptr());;
	_1d05c16bb_castConstByType(_164313_prim.get()._field_Kind,_163955_d);
	_163955_d.get()._field_Model=jule::Any(_163955_d.get()._field_Constant, &__jule_any_type49);
}



inline void _1d05aa51d_castTypeEnum(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind>& _164836_t, jule::Ptr<_1d0598572_Data>& _164855_d, jule::Ptr<_212a0c2ab_Token>& _164870_errorToken) {
	jule::I64 _164913_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1d053ca11_checkTypeCompatibility((*_self_)._field_s, _164855_d.get()._field_Kind,_164836_t,_164870_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_164913_n);
		_1d059a5eb_pushErr(&(*_self_), _164870_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_164855_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_164836_t.ptr()), &__jule_any_type7)}));
	};
	_164855_d.get()._field_Constant=nullptr;
}



inline void _1d05aa8d6_castTypeEnumT(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind>& _165737_t, jule::Ptr<_1d0598572_Data>& _165756_d, jule::Ptr<_212a0c2ab_Token>& _165771_errorToken) {
	jule::I64 _165813_n = (*_self_)._field_s.get()._field_errors.len();;
	if ((!(_1d053ca11_checkTypeCompatibility((*_self_)._field_s, _165737_t,_165756_d.get()._field_Kind,_165771_errorToken)))) {
		(*_self_)._field_s.get()._field_errors=(*_self_)._field_s.get()._field_errors.slice(0LL,_165813_n);
		_1d059a5eb_pushErr(&(*_self_), _165771_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_165756_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_165737_t.ptr()), &__jule_any_type7)}));
	};
	_165756_d.get()._field_Constant=nullptr;
}



inline jule::Ptr<_1d0598572_Data> _1d05aad37_evalCastByTypeNData(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05c4504_TypeKind> _166642_t, jule::Ptr<_1d0598572_Data> _166660_d, jule::Ptr<_212a0c2ab_Token> _166674_errorToken) {
	if (((_166660_d != nullptr) && _166660_d.get()._field_Decl)) {
		_1d059a5eb_pushErr(&(*_self_), _166674_errorToken,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1d059895c_IsNil(_166660_d.ptr())) {
			_case_begin_1aa1c0741:;
			{
				if ((!(_1d05c5dda_NilCompatible(_166642_t.ptr())))) {
					_1d059a5eb_pushErr(&(*_self_), _166674_errorToken,jule::Str("type @ not supports casting to type @", 37),jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type7),jule::Any(_1d05c4900_Str(_166642_t.ptr()), &__jule_any_type7)}));
				};
				_166660_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1d05c688b_Prim(_166660_d.get()._field_Kind.ptr()) != nullptr) && _1d05cc6e9_IsAny(_1d05c688b_Prim(_166660_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1aa1c04bb:;
			{
				if ((_1d05c70c8_Enum(_166642_t.ptr()) != nullptr)) {
					_1d059a5eb_pushErr(&(*_self_), _166674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
					_1d059a91a_pushSugggestion(&(*_self_), jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>());
				} else if ((_1d05c733c_TypeEnum(_166642_t.ptr()) != nullptr)) {
					_1d059a5eb_pushErr(&(*_self_), _166674_errorToken,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>());
				};
				_166660_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1d05c733c_TypeEnum(_166660_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa1c0532:;
			{
				_1d05aa51d_castTypeEnum(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_1d05c733c_TypeEnum(_166642_t.ptr()) != nullptr)) {
			_case_begin_1aa1c0598:;
			{
				_1d05aa8d6_castTypeEnumT(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_1d05c6d64_Ptr(_166642_t.ptr()) != nullptr)) {
			_case_begin_1aa1c1247:;
			{
				_1d05a8274_castPtr(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_1d05c6b00_Sptr(_166642_t.ptr()) != nullptr)) {
			_case_begin_1aa1c12ad:;
			{
				_1d05a8a05_castRef(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_1d05c7815_Slc(_166642_t.ptr()) != nullptr)) {
			_case_begin_1aa1c1324:;
			{
				_1d05a8dbd_castSlc(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_1d05c7cdd_Struct(_166642_t.ptr()) != nullptr)) {
			_case_begin_1aa1c138a:;
			{
				_1d05a863c_castStruct(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
			}
		}
		else if ((_1d05c688b_Prim(_166642_t.ptr()) != nullptr)) {
			_case_begin_1aa1c1401:;
			{
				_1d05a9d36_castPrim(&(*_self_), _166642_t,_166660_d,_166674_errorToken);
				_1d05aa155_castConstant(&(*_self_), _166642_t,_166660_d);
			}
		}
		else {
			_case_begin_1aa1c039a:;
			{
				_1d059a5eb_pushErr(&(*_self_), _166674_errorToken,jule::Str("type @ not supports casting", 27),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_166642_t.ptr()), &__jule_any_type7)}));
				_166660_d=nullptr;
			}
		}
		_match_end_1aa1c0334:;
	};
	if ((_166660_d == nullptr)) {
		return nullptr;;
	};
	_166660_d.get()._field_Mutable=(_166660_d.get()._field_Mutable || ((!(_1d05c5b76_Mutable(_166660_d.get()._field_Kind.ptr()))) && _1d05c5b76_Mutable(_166642_t.ptr())));
	_166660_d.get()._field_Lvalue=false;
	_166660_d.get()._field_Decl=false;
	if (((_1d05c70c8_Enum(_166660_d.get()._field_Kind.ptr()) == nullptr) || (!(_1d05c4c0d_Equal(_1d05c70c8_Enum(_166660_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _166642_t))))) {
		_1d05c0b82_applyCastKind(_166660_d,_166642_t);
		_166660_d.get()._field_Model.cast_ptr<_1eb016d60_CastingExprModel>(&__jule_any_type102).get()._field_Token=_166674_errorToken;
	} else {
		_166660_d.get()._field_Kind=_166642_t;
	};
	_166660_d.get()._field_untyped=false;
	if (_1d0598e35_IsConst(_166660_d.ptr())) {
		_166660_d.get()._field_Constant.get()._field_Kind=_1d05c688b_Prim(_166642_t.ptr()).get()._field_Kind;
	};
	return _166660_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05ab288_evalCastT(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1d05c4504_TypeKind>& _173134_t, jule::Ptr<_1ea307bbd_Expr>& _173153_e, jule::Ptr<_212a0c2ab_Token>& _173168_et) {
	jule::Ptr<_1d05c4504_TypeKind> _173217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_173217_prefix;
	});;
	if ((_1d05c7815_Slc(_173134_t.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _173153_e.get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type103) {
				_case_begin_1aa1ce244:;
				{
					_self_.get()._field_prefix=_173134_t;
				}
			}
			_match_end_1aa1ce08a:;
		};
	};
	jule::Ptr<_1d0598572_Data> _174117_d = _1d05b53e6_evalExprKind(_self_, _173153_e.get()._field_Kind);;
	if (((_174117_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174117_d;;
	};
	return _1d05aad37_evalCastByTypeNData(_self_.ptr(), _173134_t,_174117_d,_173168_et);;
}



inline jule::Ptr<_1d0598572_Data> _1d05ab596_evalCast(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30a7e7_CastExpr> _174832_c) {
	jule::Ptr<_1d05c88d2_TypeSymbol> _174917_t = _1d04e3885_buildType(_174832_c.get()._field_Kind);;
	jule::Bool _175013_ok = _1d053a932_checkType(_self_.get()._field_s, _174917_t,_self_.get()._field_lookup);;
	if ((!(_175013_ok))) {
		return nullptr;;
	};
	return _1d05ab288_evalCastT(_self_, _174917_t.get()._field_Kind,_174832_c.get()._field_Expr,_174832_c.get()._field_Kind.get()._field_Token);;
}



inline jule::Ptr<_1d0598572_Data> _1d05ab8a4_evalNsSelection(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea30ab9e_NsSelectionExpr> _175734_s) {
	jule::Str _175813_path = _1d05dc440_buildLinkPathByTokens(_175734_s.get()._field_Ns);;
	jule::Ptr<_1d05298bb_ImportInfo> _175917_imp = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05dd93b_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>([=](jule::Ptr<_1d05298bb_ImportInfo> _175952_imp) mutable -> jule::Bool {
		if (((_175734_s.get()._field_Ns.len() == 1LL) && (_175952_imp.get()._field_Alias == _175813_path))) {
			return true;;
		};
		return ((_175952_imp.get()._field_LinkPath == _175813_path) && _1d052c528_isAccessibleViaSelection(_175952_imp.ptr()));;
	}));;
	if ((_175917_imp == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _175734_s.get()._field_Ns[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_175813_path, &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Trait<_1d05e0476_Lookup> _177117_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1d05e0476_Lookup>(_175917_imp, 1);
	;
	_1d059acc2_disallowBuiltin(&(*_self_));
	jule::Any _177617_def = _1d059d610_getDef(&(*_self_), _175734_s.get()._field_Ident.get()._field_Kind,false);;
	_1d059aae6_allowBuiltin(&(*_self_));
	(*_self_)._field_lookup=_177117_lookup;
	jule::Ptr<_1d0598572_Data> _177917_d = _1d05a20e7_evalDef(&(*_self_), _177617_def,_175734_s.get()._field_Ident);;
	return _177917_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05abd05_evalStructLitExplicit(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea320268_StructIns> _178345_s, jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _178413_exprs, jule::Ptr<_212a0c2ab_Token> _178433_errorToken) {
	jule::Bool _178513_ok = _1d0536a71_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_178345_s.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_178345_s.get()._field_Generics.len()),_178433_errorToken);;
	if ((!(_178513_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _178345_s.get()._field_Decl))) {
		_1d059a5eb_pushErr(_self_.ptr(), _178433_errorToken,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any(_178345_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
	};
	_1aa1896b6_pushReference(_self_.ptr(), _178345_s);
	_1d05a0502_checkDeprecated(_self_.ptr(), _178345_s.get()._field_Decl.get()._field_Directives,_178433_errorToken);
	_1d058cc1a_structLitChecker _179817_slc = _1d058cc1a_structLitChecker{._field_e=_self_, ._field_errorToken=_178433_errorToken, ._field_s=_178345_s, };;
	_1d058e2b0_check(&_179817_slc, _178413_exprs);
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_178345_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1eb016502_StructLitExprModel>(_1eb016502_StructLitExprModel{._field_Strct=_178345_s, ._field_Args=_179817_slc._field_args}), &__jule_any_type104), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05ac113_evalStructLit(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30cd7c_StructLit> _181737_lit) {
	jule::Ptr<_1d05c88d2_TypeSymbol> _181817_t = _1d04e3885_buildType(_181737_lit.get()._field_Kind);;
	jule::Bool _181913_ok = _1d053a932_checkType(_self_.get()._field_s, _181817_t,_self_.get()._field_lookup);;
	if ((!(_181913_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ea320268_StructIns> _182417_s = _1d05c7cdd_Struct(_181817_t.get()._field_Kind.ptr());;
	if ((_182417_s == nullptr)) {
		if ((_1d05c6b00_Sptr(_181817_t.get()._field_Kind.ptr()) != nullptr)) {
			_182417_s=_1d05c7cdd_Struct(_1d05c6b00_Sptr(_181817_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_182417_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1d059a5eb_pushErr(_self_.ptr(), _181737_lit.get()._field_Kind.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1d0598572_Data> _183717_d = _1d05abd05_evalStructLitExplicit(_self_, _182417_s,_181737_lit.get()._field_Exprs,_181737_lit.get()._field_Kind.get()._field_Token);;
	if ((_1d05c6b00_Sptr(_181817_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1eb016502_StructLitExprModel> _183921_model = _183717_d.get()._field_Model.cast_ptr<_1eb016502_StructLitExprModel>(&__jule_any_type104);;
		_1d05be543_makeStructLitAlloc(_183717_d,_183921_model);
	};
	return _183717_d;;
}



inline _1d05d2d70_typeChecker _1d05ac377_typeChecker(_1d059a0e0_Eval* _self_) {
	return _1d0539821_typeChecker((*_self_)._field_s, (*_self_)._field_lookup,nullptr,nullptr);;
}



inline jule::Ptr<_1d0598572_Data> _1d05ac685_evalType(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea30369c_TypeDecl> _184931_t) {
	jule::Ptr<_1d05c88d2_TypeSymbol> _185017_tk = _1d04e3885_buildType(_184931_t);;
	jule::Bool _185113_ok = _1d053a932_checkType((*_self_)._field_s, _185017_tk,(*_self_)._field_lookup);;
	if ((!(_185113_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_185017_tk.get()._field_Kind, ._field_Model=jule::Any(_185017_tk.get()._field_Kind, &__jule_any_type92), ._field_Decl=true, });;
}



inline void _1d05ac9a4_callTypeFn(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30bba0_FnCallExpr>& _186235_fc, jule::Ptr<_1d0598572_Data>& _186257_d) {
	if ((_186235_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_self_.ptr(), _186235_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type7)}));
	} else if ((_186235_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_self_.ptr(), _186235_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	} else if (_186235_fc.get()._field_IsCo) {
		_1d059a5eb_pushErr(_self_.ptr(), _186235_fc.get()._field_Token,jule::Str("concurrent calls are not allowed for type-cast calls", 52),jule::Slice<jule::Any>());
		_186257_d=nullptr;
		return;;
	} else if ((_186235_fc.get()._field_Exception != nullptr)) {
		_1d059a5eb_pushErr(_self_.ptr(), _186235_fc.get()._field_Token,jule::Str("exceptionals are not supported for type-cast call", 49),jule::Slice<jule::Any>());
		_186257_d=nullptr;
		return;;
	};
	if ((_186235_fc.get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1ea307bbd_Expr> _187821_arg = _186235_fc.get()._field_Args[0LL];;
		_186257_d=_1d05ab288_evalCastT(_self_, _186257_d.get()._field_Kind,_187821_arg,_187821_arg.get()._field_Token);
		return;;
	};
	if ((_186257_d != nullptr)) {
		_186257_d.get()._field_Decl=false;
	};
}



inline void _1d05accc3_callBuiltinFn(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30bba0_FnCallExpr>& _188838_fc, jule::Ptr<_1d0598572_Data>& _188860_d) {
	_188860_d=_1d05c7a79_Fn(_188860_d.get()._field_Kind.ptr()).get()._field_caller(_self_,_188838_fc,_188860_d);
	if ((_188860_d == nullptr)) {
		return;;
	};
	_188860_d.get()._field_Mutable=true;
}



inline void _1d05ad114_checkFnOfConcurrentCall(_1d059a0e0_Eval* _self_, jule::Ptr<_1eb026831_FnIns>& _189643_f, jule::Ptr<_212a0c2ab_Token> _189654_errorToken) {
	if (_1d059b036_isUnsafe(&(*_self_))) {
		return;;
	};
	{
		auto &expr = _189643_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aa1ed54e:;
		if (it != expr.end()) {
			jule::Ptr<_1eb025962_ParamIns> &_190016_p = *it;
			{
				if (_1eb022970_IsSelf(_190016_p.get()._field_Decl.ptr())) {
					if ((!(_1eb022bd4_IsRef(_190016_p.get()._field_Decl.ptr())))) {
						_1d059a5eb_pushErr(&(*_self_), _189654_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97),jule::Slice<jule::Any>());
						_1d059a91a_pushSugggestion(&(*_self_), jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99),jule::Slice<jule::Any>());
					};
				};
				if (_190016_p.get()._field_Decl.get()._field_Reference) {
					_1d059a5eb_pushErr(&(*_self_), _189654_errorToken,jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96),jule::Slice<jule::Any>());
					_1d059a91a_pushSugggestion(&(*_self_), jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60),jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1aa1ed54e:;
			++it;
			goto _iter_begin_1aa1ed54e;
		}
		_iter_end_1aa1ed54e:;
	};
}



inline void _1d05ad510_processExceptionalHandler(_1d059a0e0_Eval* _self_, jule::Ptr<_1eb026831_FnIns>& _191549_f, jule::Ptr<_1ea30bba0_FnCallExpr>& _191565_fc, jule::Ptr<_1d0598572_Data>& _191587_d) {
	jule::Bool _191613_resultNeeded = ((!(_1eb0240e2_IsVoid(_191549_f.get()._field_Decl.ptr()))) && ((*_self_)._field_arg || (!((*_self_)._field_ignored))));;
	jule::Ptr<_1d0512c28_scopeChecker> _191717_csc = nullptr;;
	jule::Ptr<_1d050b1b6_Scope> _191817_ch = nullptr;;
	jule::Ptr<_1eb017712_FnCallExprModel> _192017_model = _191587_d.get()._field_Model.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36);;
	jule::Ptr<_1d0512c28_scopeChecker> _192417_sc = (*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>();;
	_191717_csc=_1d0522c8d_newChildChecker(_192417_sc);
	if (_191613_resultNeeded) {
		_191717_csc.get()._field_result=_191549_f;
	};
	_191817_ch=_1d0517623_getChild(_192417_sc.ptr());
	_191565_fc.get()._field_Exception.get()._field_Parent=_192417_sc.get()._field_tree;
	_191717_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_191717_csc.get()._field_table.get()._field_Vars,1);_191717_csc.get()._field_table.get()._field_Vars.__push(_1d05be884_buildErrorVar(_191817_ch,_191565_fc));;
	_1d05179db_checkChildSsc(_192417_sc, _191565_fc.get()._field_Exception,_191817_ch,_191717_csc);
	_192017_model.get()._field_Assigned=_191613_resultNeeded;
	_192017_model.get()._field_Except=_191817_ch;
	if ((_191613_resultNeeded && (_191717_csc.get()._field_result != nullptr))) {
		_1d059a5eb_pushErr(&(*_self_), _191565_fc.get()._field_Token,jule::Str("assignments requires expression", 31),jule::Slice<jule::Any>());
	};
}



inline void _1d05ad840_callFn(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30bba0_FnCallExpr>& _194231_fc, jule::Ptr<_1d0598572_Data>& _194253_d) {
	jule::Ptr<_1eb026831_FnIns> _194317_f = _1d05c7a79_Fn(_194253_d.get()._field_Kind.ptr());;
	if (_1eb027bb7_IsBuiltin(_194317_f.ptr())) {
		_1d05accc3_callBuiltinFn(_self_, _194231_fc,_194253_d);
		return;;
	};
	if ((_1d059b29a_isGlobal(_self_.ptr()) && _194317_f.get()._field_Decl.get()._field_Exceptional)) {
		_1d059a5eb_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("exceptionals are not allowed in global scope", 44),jule::Slice<jule::Any>());
		_1d059a91a_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48),jule::Slice<jule::Any>());
		_194253_d=nullptr;
		return;;
	};
	if (((!(_1eb024356_IsMethod(_194317_f.get()._field_Decl.ptr()))) && _1d05db593_hasDirective(_194317_f.get()._field_Decl.get()._field_Directives,jule::Str("test", 4)))) {
		_1d059a5eb_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("you cannot call test functions", 30),jule::Slice<jule::Any>());
		_194253_d=nullptr;
		return;;
	};
	if (((((!(_194253_d.get()._field_Mutable)) && _1eb024356_IsMethod(_194317_f.get()._field_Decl.ptr())) && (!(_194317_f.get()._field_Decl.get()._field_Statically))) && _194317_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1d059a5eb_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	} else if (((!(_1d059b036_isUnsafe(_self_.ptr()))) && _194317_f.get()._field_Decl.get()._field_Unsafety)) {
		_1d059a5eb_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	jule::Bool _196717_dynamicAnnotation = (((_194317_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_194317_f.get()._field_Generics.len() == 0LL)) && (_194317_f.get()._field_Params.len() > 0LL));;
	if (_196717_dynamicAnnotation) {
		_194317_f.get()._field_Generics=jule::Slice<jule::Ptr<_1d05c2cc7_InsGeneric>>::alloc(_194317_f.get()._field_Decl.get()._field_Generics.len(), _194317_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_194317_f.get()._field_Generics.len() != _194317_f.get()._field_Decl.get()._field_Generics.len())) {
		_1d0536a71_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_194317_f.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_194317_f.get()._field_Generics.len()),_194231_fc.get()._field_Token);
		_194253_d=nullptr;
		return;;
	};
	jule::Ptr<_1d0532a17_Sema> _197617_old = _self_.get()._field_s;;
	if ((_194317_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_194317_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_197617_old != _self_.get()._field_s)) {
			_197617_old.get()._field_errors=jule::append(_197617_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_197617_old;
	});;
	_1d058a311_fnCallArgChecker _198917_fcac = _1d058a311_fnCallArgChecker{._field_e=_self_, ._field_args=_194231_fc.get()._field_Args, ._field_errorToken=_194231_fc.get()._field_Token, ._field_dynamicAnnotation=_196717_dynamicAnnotation, };;
	if ((!(_196717_dynamicAnnotation))) {
		if ((!(_194317_f.get()._field_reloaded))) {
			jule::Bool _199821_ok = _1d053e97a_reloadFnInsTypes(_self_.get()._field_s, _194317_f);;
			_194317_f.get()._field_reloaded=true;
			if ((!(_199821_ok))) {
				_194253_d=nullptr;
				return;;
			};
		};
		jule::Ptr<_1eb026831_FnIns> _200521_existInstance = _1eb0255aa_appendInstance(_194317_f.get()._field_Decl.ptr(), _194317_f);;
		if ((_200521_existInstance != nullptr)) {
			_194317_f=_200521_existInstance;
		};
	} else if ((!(_1d053d36e_buildFnNonGenericTypeKinds(_self_.get()._field_s, _194317_f,_198917_fcac._field_ignored)))) {
		_194253_d=nullptr;
		return;;
	};
	_198917_fcac._field_f=_194317_f;
	jule::Bool _201617_ok = false;;
	if ((_194317_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1d0532a17_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1d0532a17_Sema> _1___jule_assign_arg = _197617_old;
			_197617_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_201617_ok=_1d058c6cb_check(&_198917_fcac);
		({
			jule::Ptr<_1d0532a17_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1d0532a17_Sema> _1___jule_assign_arg = _197617_old;
			_197617_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_201617_ok=_1d058c6cb_check(&_198917_fcac);
	};
	if (_196717_dynamicAnnotation) {
		if ((!(_201617_ok))) {
			_194253_d=nullptr;
			return;;
		};
		if ((!(_1d05a6580_checkGenericFn(_self_, _194317_f,_194231_fc.get()._field_Token,_194253_d.get()._field_Model)))) {
			_194253_d=nullptr;
			return;;
		};
	};
	jule::Any _203617_callModel = _194253_d.get()._field_Model;;
	if (_1eb0240e2_IsVoid(_194317_f.get()._field_Decl.ptr())) {
		_194253_d=_1d05c0d80_buildVoidData();
	} else {
		_194253_d.get()._field_Kind=_194317_f.get()._field_Result;
		_194253_d.get()._field_Lvalue=false;
	};
	jule::Ptr<_1eb017712_FnCallExprModel> _204517_model = jule::new_ptr<_1eb017712_FnCallExprModel>(_1eb017712_FnCallExprModel{._field_Token=_194231_fc.get()._field_Token, ._field_Func=_194317_f, ._field_IsCo=_194231_fc.get()._field_IsCo, ._field_Expr=_203617_callModel, ._field_Args=_198917_fcac._field_argModels, });;
	_194253_d.get()._field_Model=jule::Any(_204517_model, &__jule_any_type36);
	_194253_d.get()._field_Mutable=true;
	if (_194317_f.get()._field_Decl.get()._field_Exceptional) {
		if (_194231_fc.get()._field_IsCo) {
			_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _194231_fc.get()._field_Token,jule::Str("concurrent calls not supports exceptionals", 42),jule::Slice<jule::Any>());
			_1d05359e8_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63),jule::Slice<jule::Any>());
		};
		{
			
			if (_1ea30c013_Unhandled(_194231_fc.ptr())) {
				_case_begin_1aa21b5e4:;
				{
					_1d059a5eb_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("exceptionals must be handled", 28),jule::Slice<jule::Any>());
					_1d059a91a_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47),jule::Slice<jule::Any>());
				}
			}
			else if (_1ea30c277_Ignored(_194231_fc.ptr())) {
				_case_begin_1aa21b539:;
				{
					goto _match_end_1aa21a5c1;
				}
			}
			else {
				_case_begin_1aa21a637:;
				{
					_1d05ad510_processExceptionalHandler(_self_.ptr(), _194317_f,_194231_fc,_194253_d);
				}
			}
			_match_end_1aa21a5c1:;
		};
	} else if ((!(_1ea30c013_Unhandled(_194231_fc.ptr())))) {
		_1d059a5eb_pushErr(_self_.ptr(), _194231_fc.get()._field_Token,jule::Str("non-exceptionals cannot handled like exceptionals", 49),jule::Slice<jule::Any>());
	};
	if (_194231_fc.get()._field_IsCo) {
		_1d05ad114_checkFnOfConcurrentCall(_self_.ptr(), _204517_model.get()._field_Func,_194231_fc.get()._field_Token);
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05adb4d_evalFnCall(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30bba0_FnCallExpr> _208034_fc) {
	jule::Ptr<_1d05c4504_TypeKind> _208117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_208117_prefix;
	});;
	{
		auto &_match_expr{ _208034_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1aa21e65d:;
			{
				if ((_208034_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1d0685de0_builtinCallerError(_self_,_208034_fc);;
				};
			}
		}
		_match_end_1aa21e608:;
	};
	jule::Ptr<_1d0598572_Data> _209417_d = _1d05b53e6_evalExprKind(_self_, _208034_fc.get()._field_Expr.get()._field_Kind);;
	if ((_209417_d == nullptr)) {
		return nullptr;;
	};
	if (_209417_d.get()._field_Decl) {
		_1d05ac9a4_callTypeFn(_self_, _208034_fc,_209417_d);
		return _209417_d;;
	};
	if ((_1d05c7a79_Fn(_209417_d.get()._field_Kind.ptr()) == nullptr)) {
		_1d059a5eb_pushErr(_self_.ptr(), _208034_fc.get()._field_Token,jule::Str("attempting to call a non-function", 33),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d05ad840_callFn(_self_, _208034_fc,_209417_d);
	return _209417_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05ae005_evalEnumStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_1d05005ea_Enum> _211337_enm, jule::Ptr<_212a0c2ab_Token> _211349_ident) {
	jule::Ptr<_1d0598572_Data> _211417_d = jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_211337_enm, 3)}), });;
	jule::Ptr<_1d04eeb05_EnumItem> _212017_item = _1d05011ab_FindItem(_211337_enm.ptr(), _211349_ident.get()._field_Kind);;
	if ((_212017_item == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _211349_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_211337_enm.get()._field_Ident, &__jule_any_type7),jule::Any(_211349_ident.get()._field_Kind, &__jule_any_type7)}));
	} else {
		_211417_d.get()._field_Constant=jule::new_ptr<_1eb0095b1_Const>((*(_212017_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_211417_d.get()._field_Model=jule::Any(_211417_d.get()._field_Constant, &__jule_any_type49);
		_1d05c1413_applyCastModelByEnum(_211417_d,_211337_enm);
	};
	return _211417_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05ae3ac_evalTypeEnumStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0501be5_TypeEnum> _213241_enm, jule::Ptr<_212a0c2ab_Token> _213257_ident) {
	jule::Ptr<_1d050162e_TypeEnumItem> _213317_item = _1d050272e_FindItem(_213241_enm.ptr(), _213257_ident.get()._field_Kind);;
	if ((_213317_item == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _213257_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_213241_enm.get()._field_Ident, &__jule_any_type7),jule::Any(_213257_ident.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		
		if ((_1d05c70c8_Enum(_213317_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa2276bb:;
			{
				return _1d059db93__evalEnum(&(*_self_), _1d05c70c8_Enum(_213317_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1d05c733c_TypeEnum(_213317_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa227d81:;
			{
				return _1d059e358__evalTypeEnum(&(*_self_), _1d05c733c_TypeEnum(_213317_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1d05c7cdd_Struct(_213317_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aa2271e3:;
			{
				return _1d059ea1d__evalStruct(&(*_self_), _1d05c7cdd_Struct(_213317_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1aa225d5c:;
			{
				jule::Ptr<_1d0598572_Data> _214621_d = jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_213317_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_214621_d.get()._field_Model=jule::Any(_214621_d.get()._field_Kind, &__jule_any_type92);
				return _214621_d;;
			}
		}
		_match_end_1aa22705b:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05ae764_evalStructStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_1ea320268_StructIns> _215539_s, jule::Ptr<_212a0c2ab_Token> _215554_ident) {
	jule::Ptr<_1d0598572_Data> _215617_d = jule::new_ptr<_1d0598572_Data>();;
	;
	jule::Ptr<_1eb023b80_Fn> _216017_method = _1ea2ea397_FindMethod(_215539_s.ptr(), _215554_ident.get()._field_Kind,true);;
	if ((_216017_method != nullptr)) {
		if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _216017_method.get()._field_Public,_216017_method.get()._field_Token)))) {
			_1d059a5eb_pushErr(&(*_self_), _215554_ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_215554_ident.get()._field_Kind, &__jule_any_type7)}));
			_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1eb026831_FnIns> _216721_ins = _1eb0252d0_instance(_216017_method);;
		_216721_ins.get()._field_Owner=_215539_s;
		_1ab00509c_pushReference(&(*_self_), _216721_ins);
		_215617_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01a4e5_StructStaticIdentExprModel>(_1eb01a4e5_StructStaticIdentExprModel{._field_Structure=_215539_s, ._field_Expr=_215617_d.get()._field_Model, ._field_Method=_216721_ins}), &__jule_any_type105);
		_215617_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_216721_ins, 1)});
		return _215617_d;;
	};
	jule::Ptr<_1d0550a13_Var> _218117_sttc = _1ea2d8330_FindStatic(_215539_s.ptr(), _215554_ident.get()._field_Kind);;
	if ((_218117_sttc != nullptr)) {
		return _1d05a1888_evalVar(&(*_self_), _218117_sttc,_215554_ident);;
	};
	_1d059a5eb_pushErr(&(*_self_), _215554_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_215539_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7),jule::Any(_215554_ident.get()._field_Kind, &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Ptr<_1d0598572_Data> _1d05aebb5_evalTraitSubIdent(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _219040_d, jule::Ptr<_1d04ed4a5_Trait> _219054_trt, jule::Ptr<_212a0c2ab_Token> _219071_ident) {
	jule::Ptr<_1eb023b80_Fn> _219117_f = _1d04ee330_FindMethod(_219054_trt.ptr(), _219071_ident.get()._field_Kind);;
	if ((_219117_f == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _219071_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_219054_trt.get()._field_Ident, &__jule_any_type7),jule::Any(_219071_ident.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1eb0252d0_instance(_219117_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1eb01979c_TraitSubIdentExprModel>(_1eb01979c_TraitSubIdentExprModel{._field_Token=_219071_ident, ._field_Expr=_219040_d.get()._field_Model, ._field_Method=_219117_f, ._field_Trt=_219054_trt}), &__jule_any_type72), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05b01b0_evalStructSubIdent(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _220941_d, jule::Ptr<_1ea320268_StructIns> _220955_s, jule::Ptr<_1ea30b122_SubIdentExpr> _220974_si, jule::Bool _220993_ref) {
	jule::Ptr<_1ea32007b_FieldIns> _221017_f = _1ea2cc313_FindField(_220955_s.ptr(), _220974_si.get()._field_Ident.get()._field_Kind);;
	if ((_221017_f != nullptr)) {
		if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _221017_f.get()._field_Decl.get()._field_Public,_221017_f.get()._field_Decl.get()._field_Token)))) {
			_1d059a5eb_pushErr(&(*_self_), _220974_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_221017_f.get()._field_Decl.get()._field_Ident, &__jule_any_type7)}));
			_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
		};
		jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _221721_model = jule::new_ptr<_1eb01a14e_StructSubIdentExprModel>(_1eb01a14e_StructSubIdentExprModel{._field_Token=_220974_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1d0598572_Data>((*(_220941_d))), ._field_ExprKind=_220941_d.get()._field_Kind, ._field_Field=_221017_f, ._field_Owner=_220955_s});;
		_220941_d.get()._field_Model=jule::Any(_221721_model, &__jule_any_type73);
		_220941_d.get()._field_Kind=_221017_f.get()._field_Kind;
		_220941_d.get()._field_Lvalue=true;
		if ((_221017_f.get()._field_Decl.get()._field_Mutable && (!(_220941_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*_self_)._field_lookup };
				
				if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
					_case_begin_1aa238b2d:;
					{
						jule::Ptr<_1d0512c28_scopeChecker> _223225_scope = _1d0515d6e_getRoot((*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>());;
						_220941_d.get()._field_Mutable=((_223225_scope.get()._field_owner != nullptr) && (_223225_scope.get()._field_owner.get()._field_Owner == _220955_s));
					}
				}
				_match_end_1aa238ac8:;
			};
		};
		return _220941_d;;
	};
	;
	jule::Ptr<_1eb023b80_Fn> _224117_m = _1ea2ea397_FindMethod(_220955_s.ptr(), _220974_si.get()._field_Ident.get()._field_Kind,false);;
	if ((_224117_m == nullptr)) {
		_1d059a5eb_pushErr(&(*_self_), _220974_si.get()._field_Ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_220955_s.get()._field_Decl.get()._field_Ident, &__jule_any_type7),jule::Any(_220974_si.get()._field_Ident.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _224117_m.get()._field_Public,_224117_m.get()._field_Token)))) {
		_1d059a5eb_pushErr(&(*_self_), _220974_si.get()._field_Ident,jule::Str("inaccessible identifier: @ is private", 37),jule::Slice<jule::Any>::make({jule::Any(_224117_m.get()._field_Ident, &__jule_any_type7)}));
		_1d059a91a_pushSugggestion(&(*_self_), jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>());
	};
	if ((_1eb022bd4_IsRef(_224117_m.get()._field_Params[0LL].ptr()) && (!(_220993_ref)))) {
		_1d059a5eb_pushErr(&(*_self_), _220974_si.get()._field_Ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>());
	};
	_1d05a0502_checkDeprecated(&(*_self_), _224117_m.get()._field_Directives,_220974_si.get()._field_Ident);
	jule::Ptr<_1eb026831_FnIns> _225717_ins = _1eb0252d0_instance(_224117_m);;
	_225717_ins.get()._field_Owner=_220955_s;
	_1ab00509c_pushReference(&(*_self_), _225717_ins);
	jule::Ptr<_1d0598572_Data> _226017_model = jule::new_ptr<_1d0598572_Data>((*(_220941_d)));;
	_220941_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01a14e_StructSubIdentExprModel>(_1eb01a14e_StructSubIdentExprModel{._field_Token=_220974_si.get()._field_Ident, ._field_Expr=_226017_model, ._field_ExprKind=_220941_d.get()._field_Kind, ._field_Method=_225717_ins, ._field_Owner=_220955_s}), &__jule_any_type73);
	_220941_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_225717_ins, 1)});
	return _220941_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05b0567_evalSliceSubIdent(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _227240_d, jule::Ptr<_212a0c2ab_Token> _227254_ident) {
	{
		auto &_match_expr{ _227254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1aa242252:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1eb025962_ParamIns>>::make({jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0685a9e_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_227240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1eb01b20a_CommonSubIdentExprModel>(_1eb01b20a_CommonSubIdentExprModel{._field_ExprKind=_227240_d.get()._field_Kind, ._field_Expr=_227240_d.get()._field_Model, ._field_Token=_227254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type75), });;
			}
		}
		else {
			_case_begin_1aa24252c:;
			{
				_1d059a5eb_pushErr(&(*_self_), _227254_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_227240_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_227254_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa2422da:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b091e_evalArraySubIdent(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _230940_d, jule::Ptr<_212a0c2ab_Token> _230954_ident) {
	{
		auto &_match_expr{ _230954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1aa2437e7:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1eb025962_ParamIns>>::make({jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0685a9e_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_230940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1eb01b20a_CommonSubIdentExprModel>(_1eb01b20a_CommonSubIdentExprModel{._field_ExprKind=_230940_d.get()._field_Kind, ._field_Expr=_230940_d.get()._field_Model, ._field_Token=_230954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type75), });;
			}
		}
		else {
			_case_begin_1aa2459e7:;
			{
				_1d059a5eb_pushErr(&(*_self_), _230954_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_230940_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_230954_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa24595e:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b0c2c_evalIntTypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _234636_ident) {
	;
	{
		auto &_match_expr{ _234636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa249e80:;
			{
				jule::Ptr<_1eb0095b1_Const> _235021_c = static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1eb003610_Max(jule::Str("int", 3)))));;
				_235021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_235021_c, &__jule_any_type49), ._field_Constant=_235021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1aa249ee6:;
			{
				jule::Ptr<_1eb0095b1_Const> _235821_c = static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1eb003324_Min(jule::Str("int", 3)))));;
				_235821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_235821_c, &__jule_any_type49), ._field_Constant=_235821_c});;
			}
		}
		else {
			_case_begin_1aa249215:;
			{
				_1d059a5eb_pushErr(&(*_self_), _234636_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type7),jule::Any(_234636_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa24905b:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b103a_evalUintTypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _237137_ident) {
	;
	{
		auto &_match_expr{ _237137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa24cc0d:;
			{
				jule::Ptr<_1eb0095b1_Const> _237521_c = static__1eb009ccb_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1eb003610_Max(jule::Str("uint", 4)))));;
				_237521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_237521_c, &__jule_any_type49), ._field_Constant=_237521_c});;
			}
		}
		else {
			_case_begin_1aa24ce0b:;
			{
				_1d059a5eb_pushErr(&(*_self_), _237137_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type7),jule::Any(_237137_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa24cda6:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b1348_evalI8TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _238835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _238835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa251be0:;
			{
				jule::Ptr<_1eb0095b1_Const> _239421_c = static__1eb009a34_NewI64(127LL);;
				_239421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_239421_c, &__jule_any_type49), ._field_Constant=_239421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1aa251c56:;
			{
				jule::Ptr<_1eb0095b1_Const> _240221_c = static__1eb009a34_NewI64(-128LL);;
				_240221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240221_c, &__jule_any_type49), ._field_Constant=_240221_c});;
			}
		}
		else {
			_case_begin_1aa250eec:;
			{
				_1d059a5eb_pushErr(&(*_self_), _238835_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type7),jule::Any(_238835_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa250e0e:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b1656_evalI16TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _241536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _241536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa255b8e:;
			{
				jule::Ptr<_1eb0095b1_Const> _242121_c = static__1eb009a34_NewI64(32767LL);;
				_242121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_242121_c, &__jule_any_type49), ._field_Constant=_242121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1aa255c05:;
			{
				jule::Ptr<_1eb0095b1_Const> _242921_c = static__1eb009a34_NewI64(-32768LL);;
				_242921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_242921_c, &__jule_any_type49), ._field_Constant=_242921_c});;
			}
		}
		else {
			_case_begin_1aa254e9b:;
			{
				_1d059a5eb_pushErr(&(*_self_), _241536_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type7),jule::Any(_241536_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa254dad:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b1964_evalI32TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _244236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _244236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa259b3d:;
			{
				jule::Ptr<_1eb0095b1_Const> _244821_c = static__1eb009a34_NewI64(2147483647LL);;
				_244821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_244821_c, &__jule_any_type49), ._field_Constant=_244821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1aa259ba4:;
			{
				jule::Ptr<_1eb0095b1_Const> _245621_c = static__1eb009a34_NewI64(-2147483648LL);;
				_245621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245621_c, &__jule_any_type49), ._field_Constant=_245621_c});;
			}
		}
		else {
			_case_begin_1aa258e4a:;
			{
				_1d059a5eb_pushErr(&(*_self_), _244236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type7),jule::Any(_244236_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa258d5c:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b1c72_evalI64TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _246936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa25dadc:;
			{
				jule::Ptr<_1eb0095b1_Const> _247521_c = static__1eb009a34_NewI64(jule::MAX_I64);;
				_247521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_247521_c, &__jule_any_type49), ._field_Constant=_247521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1aa25db53:;
			{
				jule::Ptr<_1eb0095b1_Const> _248321_c = static__1eb009a34_NewI64(jule::MIN_I64);;
				_248321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248321_c, &__jule_any_type49), ._field_Constant=_248321_c});;
			}
		}
		else {
			_case_begin_1aa25cde9:;
			{
				_1d059a5eb_pushErr(&(*_self_), _246936_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type7),jule::Any(_246936_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa25cd0b:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b2080_evalU8TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _249635_ident) {
	;
	;
	{
		auto &_match_expr{ _249635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa261c66:;
			{
				jule::Ptr<_1eb0095b1_Const> _250121_c = static__1eb009ccb_NewU64(255LLU);;
				_250121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_250121_c, &__jule_any_type49), ._field_Constant=_250121_c});;
			}
		}
		else {
			_case_begin_1aa2615d4:;
			{
				_1d059a5eb_pushErr(&(*_self_), _249635_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type7),jule::Any(_249635_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa261837:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b238d_evalU16TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _251436_ident) {
	;
	;
	{
		auto &_match_expr{ _251436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa2647b3:;
			{
				jule::Ptr<_1eb0095b1_Const> _251921_c = static__1eb009ccb_NewU64(65535LLU);;
				_251921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_251921_c, &__jule_any_type49), ._field_Constant=_251921_c});;
			}
		}
		else {
			_case_begin_1aa264098:;
			{
				_1d059a5eb_pushErr(&(*_self_), _251436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type7),jule::Any(_251436_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa26430c:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b269b_evalU32TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _253236_ident) {
	;
	;
	{
		auto &_match_expr{ _253236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1aa267288:;
			{
				jule::Ptr<_1eb0095b1_Const> _253721_c = static__1eb009ccb_NewU64(4294967295LLU);;
				_253721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_253721_c, &__jule_any_type49), ._field_Constant=_253721_c});;
			}
		}
		else {
			_case_begin_1aa266a6d:;
			{
				_1d059a5eb_pushErr(&(*_self_), _253236_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type7),jule::Any(_253236_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1aa266cd2:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b29a9_evalU64TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _255036_ident) {
	;
	;
	{
		auto &_match_expr{ _255036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ab141903:;
			{
				jule::Ptr<_1eb0095b1_Const> _255521_c = static__1eb009ccb_NewU64(jule::MAX_U64);;
				_255521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_255521_c, &__jule_any_type49), ._field_Constant=_255521_c});;
			}
		}
		else {
			_case_begin_1ab141518:;
			{
				_1d059a5eb_pushErr(&(*_self_), _255036_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type7),jule::Any(_255036_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab141381:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b2cb7_evalF32TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _256836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _256836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ab1454a6:;
			{
				jule::Ptr<_1eb0095b1_Const> _257521_c = static__1eb00a5b2_NewF64(340282346638528860000000000000000000000.0);;
				_257521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_257521_c, &__jule_any_type49), ._field_Constant=_257521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ab14551c:;
			{
				jule::Ptr<_1eb0095b1_Const> _258321_c = static__1eb00a5b2_NewF64(-340282346638528860000000000000000000000.0);;
				_258321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258321_c, &__jule_any_type49), ._field_Constant=_258321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ab145352:;
			{
				jule::Ptr<_1eb0095b1_Const> _259121_c = static__1eb00a5b2_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_259121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259121_c, &__jule_any_type49), ._field_Constant=_259121_c});;
			}
		}
		else {
			_case_begin_1ab144719:;
			{
				_1d059a5eb_pushErr(&(*_self_), _256836_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type101),jule::Any(_256836_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1446b4:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b30c5_evalF64TypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_212a0c2ab_Token> _260436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _260436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1ab14a885:;
			{
				jule::Ptr<_1eb0095b1_Const> _261121_c = static__1eb00a5b2_NewF64(jule::MAX_F64);;
				_261121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_261121_c, &__jule_any_type49), ._field_Constant=_261121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1ab14a8eb:;
			{
				jule::Ptr<_1eb0095b1_Const> _261921_c = static__1eb00a5b2_NewF64(jule::MIN_F64);;
				_261921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_261921_c, &__jule_any_type49), ._field_Constant=_261921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1ab14a731:;
			{
				jule::Ptr<_1eb0095b1_Const> _262721_c = static__1eb00a5b2_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_262721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262721_c, &__jule_any_type49), ._field_Constant=_262721_c});;
			}
		}
		else {
			_case_begin_1ab149ae8:;
			{
				_1d059a5eb_pushErr(&(*_self_), _260436_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type101),jule::Any(_260436_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab149a93:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b347c_evalPrimStatic(_1d059a0e0_Eval* _self_, jule::Str _264033_kind, jule::Ptr<_212a0c2ab_Token> _264044_ident) {
	{
		auto &_match_expr{ _264033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1ab14d800:;
			{
				return _1d05b0c2c_evalIntTypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1ab14ec74:;
			{
				return _1d05b103a_evalUintTypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1ab14ecda:;
			{
				return _1d05b1348_evalI8TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1ab14e1e6:;
			{
				return _1d05b1656_evalI16TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1ab14e25c:;
			{
				return _1d05b1964_evalI32TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1ab14e2c3:;
			{
				return _1d05b1c72_evalI64TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1ab14e339:;
			{
				return _1d05b2080_evalU8TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1ab14ed51:;
			{
				return _1d05b238d_evalU16TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1ab14edb7:;
			{
				return _1d05b269b_evalU32TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1ab14ee2d:;
			{
				return _1d05b29a9_evalU64TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1ab14ee94:;
			{
				return _1d05b2cb7_evalF32TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1ab15000a:;
			{
				return _1d05b30c5_evalF64TypeStatic(&(*_self_), _264044_ident);;
			}
		}
		else {
			_case_begin_1ab149ca2:;
			{
				_1d059a5eb_pushErr(&(*_self_), _264044_ident,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_264033_kind, &__jule_any_type7),jule::Any(_264044_ident.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab14aa61:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b3834_evalTypeStatic(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _267237_d, jule::Ptr<_1ea30b122_SubIdentExpr> _267251_si) {
	{
		
		if ((_1d05c688b_Prim(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab155197:;
			{
				return _1d05b347c_evalPrimStatic(&(*_self_), _1d05c95b4_Str(_1d05c688b_Prim(_267237_d.get()._field_Kind.ptr()).ptr()),_267251_si.get()._field_Ident);;
			}
		}
		else if ((_1d05c70c8_Enum(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab15520d:;
			{
				return _1d05ae005_evalEnumStatic(&(*_self_), _1d05c70c8_Enum(_267237_d.get()._field_Kind.ptr()),_267251_si.get()._field_Ident);;
			}
		}
		else if ((_1d05c733c_TypeEnum(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab154eee:;
			{
				return _1d05ae3ac_evalTypeEnumStatic(&(*_self_), _1d05c733c_TypeEnum(_267237_d.get()._field_Kind.ptr()),_267251_si.get()._field_Ident);;
			}
		}
		else if ((_1d05c7cdd_Struct(_267237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab155065:;
			{
				return _1d05ae764_evalStructStatic(&(*_self_), _1d05c7cdd_Struct(_267237_d.get()._field_Kind.ptr()),_267251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1ab1541b8:;
			{
				_1d059a5eb_pushErr(&(*_self_), _267251_si.get()._field_Ident,jule::Str("type @ is not supports sub-defines", 34),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_267237_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab15411e:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b3bdb_evalObjSubIdent(_1d059a0e0_Eval* _self_, jule::Ptr<_1d0598572_Data> _268838_d, jule::Ptr<_1ea30b122_SubIdentExpr> _268852_si) {
	if (_212a0ea50_IsIgnoreIdent(_268852_si.get()._field_Ident.get()._field_Kind)) {
		_1d059a5eb_pushErr(&(*_self_), _268852_si.get()._field_Ident,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _269417_kind = _268838_d.get()._field_Kind;;
	{
		
		if ((_1d05c6d64_Ptr(_268838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab159dd3:;
			{
				jule::Ptr<_1d05d1049_Ptr> _269717_ptr = _1d05c6d64_Ptr(_268838_d.get()._field_Kind.ptr());;
				if (_1d05d1a1c_IsUnsafe(_269717_ptr.ptr())) {
					goto _match_end_1ab159cb2;
				};
				if (((!(_268852_si.get()._field_IsSelf)) && (!(_1d059b036_isUnsafe(&(*_self_)))))) {
					_1d059a5eb_pushErr(&(*_self_), _268852_si.get()._field_Ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				_269417_kind=_1d05c6d64_Ptr(_268838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1d05c6b00_Sptr(_268838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab159e49:;
			{
				_269417_kind=_1d05c6b00_Sptr(_268838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1ab159cb2:;
	};
	{
		
		if ((_1d05c8052_Trait(_268838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab15c897:;
			{
				return _1d05aebb5_evalTraitSubIdent(&(*_self_), _268838_d,_1d05c8052_Trait(_268838_d.get()._field_Kind.ptr()),_268852_si.get()._field_Ident);;
			}
		}
		else if ((_1d05c7cdd_Struct(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1ab15c91e:;
			{
				jule::Ptr<_1ea320268_StructIns> _271317_s = _1d05c7cdd_Struct(_269417_kind.ptr());;
				if (_1d05c0324_isInstancedStruct(_271317_s)) {
					jule::Bool _271525_usedReferenceElem = (_1d05c6b00_Sptr(_268838_d.get()._field_Kind.ptr()) != nullptr);;
					return _1d05b01b0_evalStructSubIdent(&(*_self_), _268838_d,_1d05c7cdd_Struct(_269417_kind.ptr()),_268852_si,_271525_usedReferenceElem);;
				};
			}
		}
		else if ((_1d05c7815_Slc(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1ab15c996:;
			{
				return _1d05b0567_evalSliceSubIdent(&(*_self_), _268838_d,_268852_si.get()._field_Ident);;
			}
		}
		else if ((_1d05c75a1_Arr(_269417_kind.ptr()) != nullptr)) {
			_case_begin_1ab15ca1d:;
			{
				return _1d05b091e_evalArraySubIdent(&(*_self_), _268838_d,_268852_si.get()._field_Ident);;
			}
		}
		_match_end_1ab15c7ba:;
	};
	_1d059a5eb_pushErr(&(*_self_), _268852_si.get()._field_Ident,jule::Str("object @ is not supports sub-defines", 36),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_268838_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Ptr<_1d0598572_Data> _1d05b3ee9_evalSubIdent(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30b122_SubIdentExpr> _272736_si) {
	jule::Ptr<_1d05c4504_TypeKind> _272817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_272817_prefix;
	});;
	jule::Ptr<_1d0598572_Data> _273217_d = _1d05b53e6_evalExprKind(_self_, _272736_si.get()._field_Expr.get()._field_Kind);;
	if ((_273217_d == nullptr)) {
		return nullptr;;
	};
	if (_273217_d.get()._field_Decl) {
		return _1d05b3834_evalTypeStatic(_self_.ptr(), _273217_d,_272736_si);;
	};
	return _1d05b3bdb_evalObjSubIdent(_self_.ptr(), _273217_d,_272736_si);;
}



inline jule::Ptr<_1d0598572_Data> _1d05b4307_evalTuple(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30884a_TupleExpr> _274433_tup) {
	jule::Ptr<_1d05cdec0_Tuple> _274517_tupT = jule::new_ptr<_1d05cdec0_Tuple>();;
	_274517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>::alloc(0LL, _274433_tup.get()._field_Expr.len());
	jule::Ptr<_1eb01b507_TupleExprModel> _274817_model = jule::new_ptr<_1eb01b507_TupleExprModel>(_1eb01b507_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1d0598572_Data>>::alloc(0LL, _274433_tup.get()._field_Expr.len())});;
	jule::Bool _275217_ok = true;;
	{
		auto &expr = _274433_tup.get()._field_Expr;
		auto it = expr.begin();
		_iter_begin_1ab166a49:;
		if (it != expr.end()) {
			jule::Ptr<_1ea307bbd_Expr> _275321_expr = *it;
			{
				jule::Ptr<_1d0598572_Data> _275421_d = _1d05b53e6_evalExprKind(_self_, _275321_expr.get()._field_Kind);;
				if ((_275421_d == nullptr)) {
					_275217_ok=false;
					goto _iter_next_1ab166a49;
				};
				_274517_tupT.get()._field_Types = jule::alloc_for_append(_274517_tupT.get()._field_Types,1);_274517_tupT.get()._field_Types.__push(_275421_d.get()._field_Kind);;
				_274817_model.get()._field_Datas = jule::alloc_for_append(_274817_model.get()._field_Datas,1);_274817_model.get()._field_Datas.__push(_275421_d);;
			}
			_iter_next_1ab166a49:;
			++it;
			goto _iter_begin_1ab166a49;
		}
		_iter_end_1ab166a49:;
	};
	if ((!(_275217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_274517_tupT, 9)}), ._field_Model=jule::Any(_274817_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05b46ae_evalMap(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1d05ce9e8_Map> _277331_m, jule::Ptr<_1ea30d300_BraceLit> _277344_lit) {
	jule::Ptr<_1eb018c1e_MapExprModel> _277417_model = jule::new_ptr<_1eb018c1e_MapExprModel>(_1eb018c1e_MapExprModel{._field_KeyKind=_277331_m.get()._field_Key, ._field_ValKind=_277331_m.get()._field_Val, });;
	{
		auto &expr = _277344_lit.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ab169ba1:;
		if (it != expr.end()) {
			jule::Ptr<_1ea307bbd_Expr> _277921_expr = *it;
			{
				{
					auto &_match_expr{ _277921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type87) {
						_case_begin_1ab16a3bb:;
						{
							goto _match_end_1ab16a476;
						}
					}
					else {
						_case_begin_1ab16a60d:;
						{
							_1d059a5eb_pushErr(_self_.ptr(), _277344_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1ab16a476:;
				};
				jule::Ptr<_1ea30dac5_KeyValPair> _278921_pair = _277921_expr.get()._field_Kind.cast_ptr<_1ea30dac5_KeyValPair>(&__jule_any_type87);;
				jule::Ptr<_1d0598572_Data> _279121_key = _1d05b53e6_evalExprKind(_self_, _278921_pair.get()._field_Key.get()._field_Kind);;
				if ((_279121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1d0598572_Data> _279621_val = _1d05b53e6_evalExprKind(_self_, _278921_pair.get()._field_Val.get()._field_Kind);;
				if ((_279621_val == nullptr)) {
					return nullptr;;
				};
				_1d053c5b0_checkAssignType(_self_.get()._field_s, false,_277331_m.get()._field_Key,_279121_key,_278921_pair.get()._field_Colon);
				_1d053c5b0_checkAssignType(_self_.get()._field_s, false,_277331_m.get()._field_Val,_279621_val,_278921_pair.get()._field_Colon);
				_277417_model.get()._field_Entries = jule::alloc_for_append(_277417_model.get()._field_Entries,1);_277417_model.get()._field_Entries.__push(jule::new_ptr<_1eb01879b_KeyValPairExprModel>(_1eb01879b_KeyValPairExprModel{._field_Key=_279121_key.get()._field_Model, ._field_Val=_279621_val.get()._field_Model}));;
			}
			_iter_next_1ab169ba1:;
			++it;
			goto _iter_begin_1ab169ba1;
		}
		_iter_end_1ab169ba1:;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_277331_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_277417_model, &__jule_any_type106), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05b49bc_evalBraceLit(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30d300_BraceLit> _281736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1ab170910:;
			{
				_1d059a5eb_pushErr(_self_.ptr(), _281736_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d05c82b6_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab170976:;
			{
				return _1d05b46ae_evalMap(_self_, _1d05c82b6_Map(_self_.get()._field_prefix.ptr()),_281736_lit);;
			}
		}
		else if ((_1d05c7cdd_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1ab170789:;
			{
				return _1d05abd05_evalStructLitExplicit(_self_, _1d05c7cdd_Struct(_self_.get()._field_prefix.ptr()),_281736_lit.get()._field_Exprs,_281736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1ab16ec61:;
			{
				_1d059a5eb_pushErr(_self_.ptr(), _281736_lit.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab16eb95:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b4cca_evalAnonFn(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea31512b_FnDecl> _283234_decl) {
	_1d05d2d70_typeChecker _283317_tc = _1d05d2d70_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1eb026831_FnIns> _283817_ins = _1d05d96b2_buildFn(&_283317_tc, _283234_decl);;
	if ((_283817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
			_case_begin_1ab174ded:;
			{
				jule::Ptr<_1d0512c28_scopeChecker> _284421_sc = _self_.get()._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>();;
				jule::Ptr<_1d0512c28_scopeChecker> _284521_scc = _1d0522c8d_newChildChecker(_284421_sc);;
				_284521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d0511991_scopeLabel>>>(nullptr);
				_284521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d0511e14_scopeGoto>>>(nullptr);
				_284521_scc.get()._field_owner=nullptr;
				_284521_scc.get()._field_childIndex=0LL;
				_284521_scc.get()._field_it=0LLU;
				_284521_scc.get()._field_cse=0LLU;
				_284521_scc.get()._field_owner=_283817_ins;
				_1d054ae92_checkFnInsSc(_self_.get()._field_s.ptr(), _283817_ins,_284521_scc);
			}
		}
		else {
			_case_begin_1ab1744e6:;
			{
				_1d054b536_checkFnIns(_self_.get()._field_s, _283817_ins);
			}
		}
		_match_end_1ab174491:;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_283817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1eb0183e4_AnonFnExprModel>(_1eb0183e4_AnonFnExprModel{._field_Func=_283817_ins, ._field_Global=_1d059b29a_isGlobal(_self_.ptr())}), &__jule_any_type107), });;
}



inline jule::Ptr<_1d0598572_Data> _1d05b50d8_evalBinop(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea30b595_BinopExpr> _286733_op) {
	_1d05b7c23_binaryEval _286817_bs = static__1d05b82ea_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1d05c9251_Prim> _287117_prim = _1d05c688b_Prim(_self_.get()._field_prefix.ptr());;
		if (((_287117_prim == nullptr) || (!(_1eb0090a5_IsNum(_1d05c95b4_Str(_287117_prim.ptr())))))) {
			jule::Ptr<_1d05c4504_TypeKind> _287325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_287325_prefix;
			});;
			return _1d05bd7a6_eval(&_286817_bs, _286733_op);;
		};
	};
	return _1d05bd7a6_eval(&_286817_bs, _286733_op);;
}



inline jule::Ptr<_1d0598572_Data> _1d05b53e6_evalExprKind(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Any _288236_kind) {
	{
		auto &_match_expr{ _288236_kind };
		
		if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1ab178b5a:;
			{
				jule::Ptr<_1ea307ea9_RangeExpr> _288521_e = _288236_kind.cast_ptr<_1ea307ea9_RangeExpr>(&__jule_any_type108);;
				return _1d05b53e6_evalExprKind(_self_, _288521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1ab17ba09:;
			{
				return _1d059ce4a_evalLit(_self_.ptr(), _288236_kind.cast_ptr<_1ea308c02_LitExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1ab17ba70:;
			{
				return _1d05a2405_evalIdent(_self_.ptr(), _288236_kind.cast_ptr<_1ea30987e_IdentExpr>(&__jule_any_type88));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1ab17b575:;
			{
				return _1d05a2713_evalUnary(_self_, _288236_kind.cast_ptr<_1ea30a088_UnaryExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1ab17b5db:;
			{
				return _1d05a2a21_evalVariadic(_self_, _288236_kind.cast_ptr<_1ea30a440_VariadicExpr>(&__jule_any_type84));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1ab17b663:;
			{
				return _1d05a2d2e_evalUnsafe(_self_, _288236_kind.cast_ptr<_1ea30940b_UnsafeExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1ab17b6da:;
			{
				return _1d05a389b_evalSliceExpr(_self_, _288236_kind.cast_ptr<_1ea30e2ac_SliceExpr>(&__jule_any_type103));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1ab17bae7:;
			{
				return _1d05a6be0_evalIndexing(_self_, _288236_kind.cast_ptr<_1ea30eb2b_IndexingExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1ab17bb6e:;
			{
				return _1d05a7dab_evalSlicing(_self_, _288236_kind.cast_ptr<_1ea310236_SlicingExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1ab17bbe6:;
			{
				return _1d05ab596_evalCast(_self_, _288236_kind.cast_ptr<_1ea30a7e7_CastExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1ab17bc6d:;
			{
				return _1d05ab8a4_evalNsSelection(_self_.ptr(), _288236_kind.cast_ptr<_1ea30ab9e_NsSelectionExpr>(&__jule_any_type98));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1ab17bce5:;
			{
				return _1d05ac113_evalStructLit(_self_, _288236_kind.cast_ptr<_1ea30cd7c_StructLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1ab17bd6c:;
			{
				return _1d05ac685_evalType(_self_.ptr(), _288236_kind.cast_ptr<_1ea30369c_TypeDecl>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ab17bde4:;
			{
				return _1d05adb4d_evalFnCall(_self_, _288236_kind.cast_ptr<_1ea30bba0_FnCallExpr>(&__jule_any_type115));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1ab17be6b:;
			{
				return _1d05b3ee9_evalSubIdent(_self_, _288236_kind.cast_ptr<_1ea30b122_SubIdentExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1ab17bee3:;
			{
				return _1d05b4307_evalTuple(_self_, _288236_kind.cast_ptr<_1ea30884a_TupleExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1ab17c06a:;
			{
				return _1d05b49bc_evalBraceLit(_self_, _288236_kind.cast_ptr<_1ea30d300_BraceLit>(&__jule_any_type116));;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab17c0e2:;
			{
				return _1d05b4cca_evalAnonFn(_self_, _288236_kind.cast_ptr<_1ea31512b_FnDecl>(&__jule_any_type16));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1ab17c169:;
			{
				return _1d05b50d8_evalBinop(_self_, _288236_kind.cast_ptr<_1ea30b595_BinopExpr>(&__jule_any_type117));;
			}
		}
		else {
			_case_begin_1ab17b476:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab17b421:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b5704_eval(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea307bbd_Expr> _293028_expr) {
	jule::Ptr<_1d0598572_Data> _293117_d = _1d05b53e6_evalExprKind(_self_, _293028_expr.get()._field_Kind);;
	if (((_293117_d == nullptr) || (_293117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1d05c7a79_Fn(_293117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1869ae:;
			{
				jule::Ptr<_1eb026831_FnIns> _293821_f = _1d05c7a79_Fn(_293117_d.get()._field_Kind.ptr());;
				if (_1eb027bb7_IsBuiltin(_293821_f.ptr())) {
					goto _match_end_1ab18687c;
				};
				if ((_293821_f.get()._field_Generics.len() != _293821_f.get()._field_Decl.get()._field_Generics.len())) {
					_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _293028_expr.get()._field_Token,jule::Str("define has generics", 19),jule::Slice<jule::Any>());
				};
				if (((!(_293821_f.get()._field_Decl.get()._field_Statically)) && _1eb024356_IsMethod(_293821_f.get()._field_Decl.ptr()))) {
					_1d05356c9_pushErr(_self_.get()._field_s.ptr(), _293028_expr.get()._field_Token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1ab18687c:;
	};
	return _293117_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05b5a12_evalExpr(jule::Ptr<_1d059a0e0_Eval> _self_, jule::Ptr<_1ea307bbd_Expr> _295632_expr) {
	jule::Ptr<_1d0598572_Data> _295717_d = _1d05b5704_eval(_self_, _295632_expr);;
	{
		
		if ((_295717_d == nullptr)) {
			_case_begin_1ab18a5d9:;
			{
				return nullptr;;
			}
		}
		else if (_295717_d.get()._field_Decl) {
			_case_begin_1ab18a661:;
			{
				_1d059a5eb_pushErr(_self_.ptr(), _295632_expr.get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab18a52e:;
			{
				return _295717_d;;
			}
		}
		_match_end_1ab18a4c9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d059a0e0_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1d05b5e85_unaryEval static__1d05b643b_new(jule::Ptr<_1d059a0e0_Eval> _297723_e) {
	return _1d05b5e85_unaryEval{._field_e=_297723_e, };;
}



inline void _1d05b6617_minus(_1d05b5e85_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ab18c168:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab18bd38:;
			{
				if ((!(_1eb0090a5_IsNum(_1d05c4900_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d05c7cdd_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab18bd9e:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab18bcc2:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab18bae6:;
	};
	if (_1d0598e35_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1eb00dc03_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab190842:;
				{
					_1eb00cd12_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1eb00b85a_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1eb00d252_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab1908b9:;
				{
					_1eb00c31c_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1eb00ada9_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1eb00d4b6_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab190941:;
				{
					_1eb00c31c_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1eb00babe_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ab190754:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1d05b67e3_plus(_1d05b5e85_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ab19510a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab194cca:;
			{
				if ((!(_1eb0090a5_IsNum(_1d05c4900_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d05c7cdd_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab194d41:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab194c64:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab194b98:;
	};
	if (_1d0598e35_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1eb00dc03_IsF64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab1987d4:;
				{
					_1eb00cd12_SetF64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1eb00b85a_ReadF64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1eb00d252_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab19885b:;
				{
					_1eb00c31c_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1eb00ada9_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1eb00d4b6_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab1988d3:;
				{
					_1eb00c31c_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1eb00babe_AsI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ab1986e6:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1d05b69be_caret(_1d05b5e85_unaryEval* _self_) {
	{
		
		if (((*_self_)._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1ab19d07a:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab19cc4a:;
			{
				if ((!(_1eb0089de_IsInt(_1d05c4900_Str((*_self_)._field_d.get()._field_Kind.ptr()))))) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d05c7cdd_Struct((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab19ccb1:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*_self_)._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1ab19cbd4:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab19cb18:;
	};
	if (_1d0598e35_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1eb00d252_IsI64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab1a1743:;
				{
					_1eb00c31c_SetI64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1eb00ada9_ReadI64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1eb00d4b6_IsU64((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab1a17ba:;
				{
					_1eb00c592_SetU64((*_self_)._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1eb00b11d_ReadU64((*_self_)._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1ab1a1666:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1d05b6b9a_excl(_1d05b5e85_unaryEval* _self_) {
	jule::Ptr<_1d05c9251_Prim> _309613_t = _1d05c688b_Prim((*_self_)._field_d.get()._field_Kind.ptr());;
	if (((_309613_t == nullptr) || (!(_1d05cc221_IsBool(_309613_t.ptr()))))) {
		(*_self_)._field_d=nullptr;
		return;;
	};
	if (_1d0598e35_IsConst((*_self_)._field_d.ptr())) {
		{
			
			if (_1eb00d72a_IsBool((*_self_)._field_d.get()._field_Constant.ptr())) {
				_case_begin_1ab1a62d6:;
				{
					_1eb00c817_SetBool((*_self_)._field_d.get()._field_Constant.ptr(), (!(_1eb00b382_ReadBool((*_self_)._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1ab1a61d7:;
		};
	};
	(*_self_)._field_d.get()._field_Lvalue=false;
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
}



inline void _1d05b6d76_star(_1d05b5e85_unaryEval* _self_) {
	(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
	{
		
		if ((_1d05c6d64_Ptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1a932d:;
			{
				if ((!(_1d059b036_isUnsafe((*_self_)._field_e.ptr())))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d05d1049_Ptr> _312821_t = _1d05c6d64_Ptr((*_self_)._field_d.get()._field_Kind.ptr());;
				if (_1d05d1a1c_IsUnsafe(_312821_t.ptr())) {
					(*_self_)._field_d=nullptr;
					return;;
				};
				(*_self_)._field_d.get()._field_Kind=_312821_t.get()._field_Elem;
			}
		}
		else if ((_1d05c6b00_Sptr((*_self_)._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab1a8eed:;
			{
				(*_self_)._field_d.get()._field_Kind=_1d05c6b00_Sptr((*_self_)._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1ab1a8e87:;
			{
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab1a8e21:;
	};
	(*_self_)._field_d.get()._field_Constant=nullptr;
	(*_self_)._field_d.get()._field_Lvalue=true;
}



inline void _1d05b7052_amper(_1d05b5e85_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab1addb0:;
			{
				jule::Ptr<_1eb016502_StructLitExprModel> _314821_lit = (*_self_)._field_d.get()._field_Model.cast_ptr<_1eb016502_StructLitExprModel>(&__jule_any_type104);;
				_1d05be543_makeStructLitAlloc((*_self_)._field_d,_314821_lit);
			}
		}
		else {
			_case_begin_1ab1ad783:;
			{
				{
					
					if (_1d05db83a_canGetPtr((*_self_)._field_d)) {
						_case_begin_1ab1ae410:;
						{
							(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05d1049_Ptr>(_1d05d1049_Ptr{._field_Elem=(*_self_)._field_d.get()._field_Kind}), 12)});
							(*_self_)._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>((*((*_self_)._field_d))), ._field_Op=(*_self_)._field_u.get()._field_Op}), &__jule_any_type76);
						}
					}
					else {
						_case_begin_1ab1add49:;
						{
							(*_self_)._field_d=nullptr;
						}
					}
					_match_end_1ab1adc7d:;
				};
			}
		}
		_match_end_1ab1ad72d:;
	};
	if (((*_self_)._field_d != nullptr)) {
		(*_self_)._field_d.get()._field_Constant=nullptr;
		(*_self_)._field_d.get()._field_Lvalue=false;
	};
}



inline void _1d05b722d_typeDecl(_1d05b5e85_unaryEval* _self_) {
	_1d05d2d70_typeChecker _317217_tc = _1d05d2d70_typeChecker{._field_s=(*_self_)._field_e.get()._field_s, ._field_rootLookup=(*_self_)._field_e.get()._field_lookup, ._field_lookup=(*_self_)._field_e.get()._field_lookup, ._field_errorToken=(*_self_)._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab1b25cd:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05d8051_buildPtrFromType(&_317217_tc, (*_self_)._field_d.get()._field_Kind), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab1b4d3e:;
			{
				(*_self_)._field_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05d7935_buildSptrFromType(&_317217_tc, (*_self_)._field_d.get()._field_Kind), 7)});
			}
		}
		else {
			_case_begin_1ab1b3623:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
				(*_self_)._field_d=nullptr;
				return;;
			}
		}
		_match_end_1ab1b35bd:;
	};
	(*_self_)._field_d.get()._field_Decl=true;
}



inline void _1d05b7409_evalData(_1d05b5e85_unaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1ab1b72a3:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _319521_prefix = (*_self_)._field_e.get()._field_prefix;;
				(*_self_)._field_e.get()._field_prefix=nullptr;
				(*_self_)._field_d=_1d05b53e6_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
				(*_self_)._field_e.get()._field_prefix=_319521_prefix;
			}
		}
		else {
			_case_begin_1ab1b6d63:;
			{
				(*_self_)._field_d=_1d05b53e6_evalExprKind((*_self_)._field_e, (*_self_)._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1ab1b6cdb:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b76d4_eval(_1d05b5e85_unaryEval* _self_, jule::Ptr<_1ea30a088_UnaryExpr> _320427_u) {
	(*_self_)._field_u=_320427_u;
	_1d05b7409_evalData(&(*_self_));
	if (((*_self_)._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*_self_)._field_d.get()._field_Decl) {
		_1d05b722d_typeDecl(&(*_self_));
		return (*_self_)._field_d;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _321513_kind = (*_self_)._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ab1bb670:;
			{
				_1d05b6617_minus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab1bb153:;
			{
				_1d05b67e3_plus(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab1bb1b9:;
			{
				_1d05b69be_caret(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ab1bb230:;
			{
				_1d05b6b9a_excl(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab1bb296:;
			{
				_1d05b6d76_star(&(*_self_));
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab1bb818:;
			{
				_1d05b7052_amper(&(*_self_));
			}
		}
		else {
			_case_begin_1ab1bb0dc:;
			{
				(*_self_)._field_d=nullptr;
			}
		}
		_match_end_1ab1bb087:;
	};
	{
		
		if (((*_self_)._field_d == nullptr)) {
			_case_begin_1ab1bd694:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_u.get()._field_Op,jule::Str("unary operator @ is not defined for type @", 42),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str(_321513_kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		else if (_1d0598e35_IsConst((*_self_)._field_d.ptr())) {
			_case_begin_1ab1bb890:;
			{
				(*_self_)._field_d.get()._field_Model=jule::Any((*_self_)._field_d.get()._field_Constant, &__jule_any_type49);
			}
		}
		_match_end_1ab1bd63e:;
	};
	(*_self_)._field_d.get()._field_Mutable=true;
	return (*_self_)._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05b5e85_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1d05b7c23_binaryEval static__1d05b82ea_newPlain(jule::Ptr<_1d059a0e0_Eval> _325328_e) {
	return _1d05b7c23_binaryEval{._field_e=_325328_e, };;
}



inline _1d05b7c23_binaryEval static__1d05b863b_new(jule::Ptr<_1d059a0e0_Eval> _325923_e, jule::Ptr<_212a0c2ab_Token> _325937_op) {
	return _1d05b7c23_binaryEval{._field_e=_325923_e, ._field_op=_325937_op};;
}



inline jule::Bool _1d05b88a0_checkTypeCompatibility(_1d05b7c23_binaryEval* _self_) {
	return _1d053ca11_checkTypeCompatibility((*_self_)._field_e.get()._field_s, (*_self_)._field_l.get()._field_Kind,(*_self_)._field_r.get()._field_Kind,(*_self_)._field_op);;
}



inline jule::Bool _1d05b8b47_checkStructCommonOperatorCompatibility(_1d05b7c23_binaryEval* _self_) {
	jule::Ptr<_1eb026831_FnIns> _327317_overload = nullptr;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ab1c2b82:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab1c42b0:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab1c3116:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ab1c317c:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ab1c31e3:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab1c3259:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab1c44e1:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab1c4557:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ab1c45bd:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab1c4634:;
			{
				_327317_overload=_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1ab1c30a0:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return false;;
			}
		}
		_match_end_1ab1c304a:;
	};
	if ((_327317_overload == nullptr)) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return false;;
	};
	jule::Ptr<_1eb025962_ParamIns> _330517_p = _327317_overload.get()._field_Params[1LL];;
	return _1d053c5b0_checkAssignType((*_self_)._field_e.get()._field_s, _330517_p.get()._field_Decl.get()._field_Reference,_330517_p.get()._field_Kind,(*_self_)._field_r,(*_self_)._field_op);;
}



inline jule::Ptr<_1d0598572_Data> _1d05b8dde_evalNil(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05c5dda_NilCompatible((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type118),jule::Any(_1d05c4900_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1cc54e:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab1cd7b4:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("nil", 3), &__jule_any_type118)}));
				return nullptr;;
			}
		}
		_match_end_1ab1cd75e:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b9153_evalEnum(_1d05b7c23_binaryEval* _self_) {
	jule::Ptr<_1d05005ea_Enum> _333017_enm = _1d05c70c8_Enum((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1d093c:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _333421_rkind = (*_self_)._field_r.get()._field_Kind;;
				if ((_1d05c70c8_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_333421_rkind=_1d05c70c8_Enum((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1d053ca11_checkTypeCompatibility((*_self_)._field_e.get()._field_s, _333017_enm.get()._field_Kind.get()._field_Kind,_333421_rkind,(*_self_)._field_op)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1ab1d08d7:;
	};
	if (((_1d05c70c8_Enum((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr) || (_333017_enm != _1d05c70c8_Enum((*_self_)._field_r.get()._field_Kind.ptr())))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_333017_enm.get()._field_Ident, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab1d0288:;
			{
				if ((!(_1eb0090a5_IsNum(_1d05c4900_Str(_333017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_333017_enm.get()._field_Ident, &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ab1d5e4d:;
			{
				if (((_1d05c688b_Prim(_333017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1eb0089de_IsInt(_1d05c95b4_Str(_1d05c688b_Prim(_333017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_333017_enm.get()._field_Ident, &__jule_any_type7)}));
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1ab1d4d92:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_333017_enm.get()._field_Ident, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1d4cc6:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b93b7_evalTypeEnum(_1d05b7c23_binaryEval* _self_) {
	jule::Ptr<_1d0501be5_TypeEnum> _338117_enm = _1d05c733c_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr());;
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1db12e:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab1dab89:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d0502025_Str(_338117_enm.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1dac66:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b962b_evalSptr(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1dcc24:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab1dcd45:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1dc372:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b9890_evalPtr(_1d05b7c23_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab1deae4:;
			{
				if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1ab1e0d26:;
			{
				if ((_1d05c6d64_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
						jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
						(*_self_)._field_l = ___jule_assign_arg;
						(*_self_)._field_r = _1___jule_assign_arg;
					});
				};
				if (_1d05d1a1c_IsUnsafe(_1d05c6d64_Ptr((*_self_)._field_l.get()._field_Kind.ptr()).ptr())) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				};
				if ((!(_1d05c0687_isPtrArithmeticCompatible((*_self_)._field_l,(*_self_)._field_r)))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is incompatible to use for pointer arithmetic", 52),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1ab1de572:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1dd054:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b9b04_evalArr(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1e5e3b:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab1e60b2:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1e605c:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05b9d68_evalSlc(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1e813b:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab1e825c:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1e7789:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05ba0cc_evalFn(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1ea33b:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab1ea45c:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab1e9989:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05ba341_evalStruct(_1d05b7c23_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ab1ebc00:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab1ebc66:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ab1ec360:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab1ec3c6:;
			{
				if ((_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab1ec43c:;
			{
				if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1ab1ea66b:;
	};
	if ((!(_1d05b8b47_checkStructCommonOperatorCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	return (*_self_)._field_l;;
}



inline jule::Ptr<_1d0598572_Data> _1d05ba5a5_evalTrait(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab206666:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab206787:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab2061b0:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05ba819_evalAny(_1d05b7c23_binaryEval* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab208536:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab207eb4:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("any", 3), &__jule_any_type101)}));
				return nullptr;;
			}
		}
		_match_end_1ab206996:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05baa7d_evalBool(_1d05b7c23_binaryEval* _self_) {
	if ((!(_1d05b88a0_checkTypeCompatibility(&(*_self_))))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1ab20879a:;
			{
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1ab20a47d:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab2099aa:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05bace2_evalStr(_1d05b7c23_binaryEval* _self_) {
	jule::Str _362317_rk = _1d05c4900_Str((*_self_)._field_r.get()._field_Kind.ptr());;
	if ((_362317_rk != jule::Str("str", 3))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_362317_rk, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab20d926:;
			{
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab20e5e7:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1ab20bea7:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("str", 3), &__jule_any_type101)}));
				return nullptr;;
			}
		}
		_match_end_1ab20d55d:;
	};
}



inline void _1d05baebd_setTypeToGreater(_1d05b7c23_binaryEval* _self_) {
	jule::Ptr<_1d05c9251_Prim> _365013_lp = _1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1d05c9251_Prim> _365113_rp = _1d05c688b_Prim((*_self_)._field_r.get()._field_Kind.ptr());;
	if (_1d0598e35_IsConst((*_self_)._field_l.ptr())) {
		if ((!(_1d0598e35_IsConst((*_self_)._field_r.ptr())))) {
			(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1d0598e35_IsConst((*_self_)._field_r.ptr())) {
		(*_self_)._field_r.get()._field_Constant.get()._field_Kind=_365013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*_self_)._field_l.get()._field_untyped && (!((*_self_)._field_r.get()._field_untyped)))) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_1d0598e35_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365113_rp.get()._field_Kind;
		};
		(*_self_)._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*_self_)._field_l.get()._field_untyped)) && (*_self_)._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1eb007427_IsGreater(_365113_rp.get()._field_Kind,_365013_lp.get()._field_Kind)) {
		(*_self_)._field_l.get()._field_Kind=(*_self_)._field_r.get()._field_Kind;
		if (_1d0598e35_IsConst((*_self_)._field_l.ptr())) {
			(*_self_)._field_l.get()._field_Constant.get()._field_Kind=_365113_rp.get()._field_Kind;
		};
	};
}



inline void _1d05bb210_checkModData(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1d0598572_Data>& _368336_d) {
	if ((!(_1d0598e35_IsConst(_368336_d.ptr())))) {
		if (((_1d05c688b_Prim(_368336_d.get()._field_Kind.ptr()) == nullptr) || (!(_1eb0089de_IsInt(_1d05c688b_Prim(_368336_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1d0580e83_sigAssignable(jule::Str("i64", 3),_368336_d)) {
			_case_begin_1ab219228:;
			{
				_1eb00c31c_SetI64(_368336_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_368336_d.get()._field_Constant.ptr())));
			}
		}
		else if (_1d05810b5_unsigAssignable(jule::Str("u64", 3),_368336_d)) {
			_case_begin_1ab218de8:;
			{
				_1eb00c592_SetU64(_368336_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_368336_d.get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1ab218d82:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab217765:;
	};
}



inline void _1d05bb3db_mod(_1d05b7c23_binaryEval* _self_) {
	_1d05bb210_checkModData(&(*_self_), (*_self_)._field_l);
	_1d05bb210_checkModData(&(*_self_), (*_self_)._field_r);
}



inline jule::Bool _1d05bb793_numbersAreCompatibile(_1d05b7c23_binaryEval* _self_, jule::Str& _370537_lk, jule::Str& _370547_rk) {
	if ((!(_1eb0090a5_IsNum(_370547_rk)))) {
		return false;;
	};
	if ((_1d0598e35_IsConst((*_self_)._field_l.ptr()) && (*_self_)._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((_370537_lk == jule::Str("f32", 3))) {
		if ((_1d0598e35_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_370547_rk == jule::Str("f32", 3));;
	};
	if ((_370537_lk == jule::Str("f64", 3))) {
		if ((_1d0598e35_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
			return true;;
		};
		return (_370547_rk == jule::Str("f64", 3));;
	};
	if ((_1d0598e35_IsConst((*_self_)._field_r.ptr()) && (*_self_)._field_r.get()._field_untyped)) {
		return true;;
	};
	return (_370537_lk == _370547_rk);;
}



inline jule::Ptr<_1d0598572_Data> _1d05bba07_evalFloat(_1d05b7c23_binaryEval* _self_) {
	jule::Str _373113_lk = _1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _373213_rk = _1d05c688b_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1d05bb793_numbersAreCompatibile(&(*_self_), _373113_lk,_373213_rk)))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373113_lk, &__jule_any_type7),jule::Any(_373213_rk, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab2224d9:;
			{
				if (((!(_1d0598e35_IsConst((*_self_)._field_l.ptr()))) || (!(_1d0582160_intAssignable(jule::Str("i64", 3),(*_self_)._field_l))))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373113_lk, &__jule_any_type7),jule::Any(_373213_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				if (((!(_1d0598e35_IsConst((*_self_)._field_r.ptr()))) || (!(_1d0582160_intAssignable(jule::Str("u64", 3),(*_self_)._field_r))))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373113_lk, &__jule_any_type7),jule::Any(_373213_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				_1eb00c31c_SetI64((*_self_)._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64((*_self_)._field_l.get()._field_Constant.ptr())));
				_1eb00c592_SetU64((*_self_)._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64((*_self_)._field_r.get()._field_Constant.ptr())));
				if ((!(_1d05bee6c_isOkForShifting((*_self_)._field_r)))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_1ab22184b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab2271d1:;
			{
				_1d05baebd_setTypeToGreater(&(*_self_));
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1ab227456:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1ab2216d6:;
			{
				_1d05baebd_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab22937b:;
			{
				if ((!(_1eb0089de_IsInt(_373213_rk)))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_373113_lk, &__jule_any_type7),jule::Any(_373213_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				_1d05bb3db_mod(&(*_self_));
				_1d05baebd_setTypeToGreater(&(*_self_));
				return (*_self_)._field_r;;
			}
		}
		else {
			_case_begin_1ab227c4d:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab228226:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05bbc6b_evalInt(_1d05b7c23_binaryEval* _self_) {
	jule::Str _379713_lk = _1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _379813_rk = _1d05c688b_Prim((*_self_)._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab229865:;
			{
				if (((!(_1eb0089de_IsInt(_379713_lk))) || (!(_1eb0089de_IsInt(_379813_rk))))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_379713_lk, &__jule_any_type7),jule::Any(_379813_rk, &__jule_any_type7)}));
					return nullptr;;
				};
				if ((!(_1d05bee6c_isOkForShifting((*_self_)._field_r)))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*_self_)._field_l;;
			}
		}
		_match_end_1ab22c5c1:;
	};
	if ((!(_1d05bb793_numbersAreCompatibile(&(*_self_), _379713_lk,_379813_rk)))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_379713_lk, &__jule_any_type7),jule::Any(_379813_rk, &__jule_any_type7)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab23056e:;
			{
				return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1ab22cca8:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1ab22c6d1:;
			{
				_1d05baebd_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab232582:;
			{
				_1d05bb3db_mod(&(*_self_));
				_1d05baebd_setTypeToGreater(&(*_self_));
				return (*_self_)._field_l;;
			}
		}
		else {
			_case_begin_1ab231361:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for integer type(s)", 45),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7)}));
				return nullptr;;
			}
		}
		_match_end_1ab23066d:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05bbed0_evalPrim(_1d05b7c23_binaryEval* _self_) {
	jule::Ptr<_1d05c9251_Prim> _385613_prim = _1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1d05cc221_IsBool(_385613_prim.ptr())) {
			_case_begin_1ab23460b:;
			{
				return _1d05baa7d_evalBool(&(*_self_));;
			}
		}
		else if (_1d05cc485_IsStr(_385613_prim.ptr())) {
			_case_begin_1ab234683:;
			{
				return _1d05bace2_evalStr(&(*_self_));;
			}
		}
		_match_end_1ab234551:;
	};
	if ((_1d05c688b_Prim((*_self_)._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c95b4_Str(_385613_prim.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	{
		
		if (_1eb008d0d_IsFloat(_385613_prim.get()._field_Kind)) {
			_case_begin_1ab236e6b:;
			{
				return _1d05bba07_evalFloat(&(*_self_));;
			}
		}
		else if (_1eb0089de_IsInt(_385613_prim.get()._field_Kind)) {
			_case_begin_1ab23683e:;
			{
				return _1d05bbc6b_evalInt(&(*_self_));;
			}
		}
		else {
			_case_begin_1ab2367c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab230e32:;
	};
}



inline void _1d05bc1ab_checkSpecialCases(_1d05b7c23_binaryEval* _self_) {
	if (((!(_1d05c5912_Comparable((*_self_)._field_l.get()._field_Kind.ptr()))) && (!(_1d05c5439_IsNil((*_self_)._field_r.get()._field_Kind.ptr()))))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str((*_self_)._field_l.get()._field_Kind.ptr()), &__jule_any_type7)}));
	} else if (((!(_1d05c5912_Comparable((*_self_)._field_r.get()._field_Kind.ptr()))) && (!(_1d05c5439_IsNil((*_self_)._field_l.get()._field_Kind.ptr()))))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("type @ is not comparable", 24),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str((*_self_)._field_r.get()._field_Kind.ptr()), &__jule_any_type7)}));
	};
}



inline jule::Ptr<_1d0598572_Data> _1d05bc420_evalOp(_1d05b7c23_binaryEval* _self_) {
	_1d05bc1ab_checkSpecialCases(&(*_self_));
	{
		
		if (_1d05c569d_Void((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ab23a920:;
			{
				_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("operator @ is not defined for type @", 36),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_op.get()._field_Kind, &__jule_any_type7),jule::Any(jule::Str("void", 4), &__jule_any_type7)}));
				return nullptr;;
			}
		}
		else if (((_1d05c688b_Prim((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr) && _1d05cc6e9_IsAny(_1d05c688b_Prim((*_self_)._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab23b5ad:;
			{
				({
					jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ab23b624;
			}
		}
		else if (((_1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr) && _1d05cc6e9_IsAny(_1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab23b624:;
			{
				return _1d05ba819_evalAny(&(*_self_));;
			}
		}
		else if ((_1d05c733c_TypeEnum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b019:;
			{
				({
					jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ab23b091;
			}
		}
		else if ((_1d05c733c_TypeEnum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b091:;
			{
				return _1d05b93b7_evalTypeEnum(&(*_self_));;
			}
		}
		else if (_1d05c5439_IsNil((*_self_)._field_l.get()._field_Kind.ptr())) {
			_case_begin_1ab23b118:;
			{
				return _1d05b8dde_evalNil(&(*_self_));;
			}
		}
		else if ((_1d05c70c8_Enum((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b190:;
			{
				({
					jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ab23b69b;
			}
		}
		else if ((_1d05c70c8_Enum((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b69b:;
			{
				return _1d05b9153_evalEnum(&(*_self_));;
			}
		}
		else if ((_1d05c6b00_Sptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b723:;
			{
				({
					jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ab23b79a;
			}
		}
		else if ((_1d05c6b00_Sptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b79a:;
			{
				return _1d05b962b_evalSptr(&(*_self_));;
			}
		}
		else if ((_1d05c6d64_Ptr((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b822:;
			{
				({
					jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ab23b899;
			}
		}
		else if ((_1d05c6d64_Ptr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b899:;
			{
				return _1d05b9890_evalPtr(&(*_self_));;
			}
		}
		else if ((_1d05c75a1_Arr((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b921:;
			{
				return _1d05b9b04_evalArr(&(*_self_));;
			}
		}
		else if ((_1d05c7815_Slc((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23b998:;
			{
				return _1d05b9d68_evalSlc(&(*_self_));;
			}
		}
		else if ((_1d05c7a79_Fn((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23ba20:;
			{
				return _1d05ba0cc_evalFn(&(*_self_));;
			}
		}
		else if ((_1d05c8052_Trait((*_self_)._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23ba97:;
			{
				({
					jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_r;
					jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_l;
					(*_self_)._field_l = ___jule_assign_arg;
					(*_self_)._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1ab23bb1e;
			}
		}
		else if ((_1d05c8052_Trait((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23bb1e:;
			{
				return _1d05ba5a5_evalTrait(&(*_self_));;
			}
		}
		else if ((_1d05c7cdd_Struct((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23bb96:;
			{
				return _1d05ba341_evalStruct(&(*_self_));;
			}
		}
		else if ((_1d05c688b_Prim((*_self_)._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab23bc1d:;
			{
				return _1d05bbed0_evalPrim(&(*_self_));;
			}
		}
		else {
			_case_begin_1ab23ae92:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab23ae2b:;
	};
}



inline void _1d05bc695_evalConst(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1d0598572_Data>& _394033_d) {
	{
		
		if ((_394033_d == nullptr)) {
			_case_begin_1ab24b6bc:;
			{
				return;;
			}
		}
		else if ((!(_1d0598e35_IsConst((*_self_)._field_l.ptr()))) || (!(_1d0598e35_IsConst((*_self_)._field_r.ptr())))) {
			_case_begin_1ab24b733:;
			{
				_394033_d.get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1ab24b04b:;
	};
	{
		auto &_match_expr{ (*_self_)._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ab24c613:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb00eb9e_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab24c68a:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool((!(_1eb00eb9e_Eq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1ab24cd61:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb00e891_Or((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ab24cdc7:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb00e583_And((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1ab24ce3d:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb0105c8_Gt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1ab24cea4:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb00eeac_Lt((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1ab24d01a:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb0108d6_GtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1ab24d092:;
			{
				_394033_d.get()._field_Constant=static__1eb00a073_NewBool(_1eb0102ba_LtEq((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1ab24d119:;
			{
				_1eb010be4_Add((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1ab24d191:;
			{
				_1eb011002_Sub((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab24d218:;
			{
				_1eb011310_Mul((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ab24d290:;
			{
				jule::Bool _397717_ok = _1eb01161d_Div((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_397717_ok)) && (_1eb00c097_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
				jule::Ptr<_1d05c9251_Prim> _398221_prim = _1d05c688b_Prim(_394033_d.get()._field_Kind.ptr());;
				{
					
					if (_1eb00845b_IsSigInt(_398221_prim.get()._field_Kind)) {
						_case_begin_1ab25a049:;
						{
							_1eb00c31c_SetI64(_394033_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_394033_d.get()._field_Constant.ptr())));
						}
					}
					else if (_1eb008747_IsUnsigInt(_398221_prim.get()._field_Kind)) {
						_case_begin_1ab25a0c1:;
						{
							_1eb00c592_SetU64(_394033_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_394033_d.get()._field_Constant.ptr())));
						}
					}
					_match_end_1ab259e8e:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab24d317:;
			{
				jule::Bool _399017_ok = _1eb01192b_Mod((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));;
				if (((!(_399017_ok)) && (_1eb00c097_AsF64((*_self_)._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>());
				};
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1ab24d38e:;
			{
				_1eb012047_BitwiseOr((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab24d416:;
			{
				_1eb011c39_BitwiseAnd((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1ab24d48d:;
			{
				_1eb012355_Xor((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1ab24d515:;
			{
				_1eb012663_Lshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1ab24d58c:;
			{
				_1eb012971_Rshift((*_self_)._field_l.get()._field_Constant.ptr(), (*((*_self_)._field_r.get()._field_Constant)));
				_394033_d.get()._field_Constant=(*_self_)._field_l.get()._field_Constant;
			}
		}
		_match_end_1ab24c7bc:;
	};
	_394033_d.get()._field_Model=jule::Any(_394033_d.get()._field_Constant, &__jule_any_type49);
	_1d05c1413_applyCastModelByEnum(_394033_d,_1d05c70c8_Enum(_394033_d.get()._field_Kind.ptr()));
}



inline void _1d05bc91a_checkData(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1d0598572_Data>& _401533_d) {
	jule::Ptr<_1eb026831_FnIns> _401613_f = _1d05c7a79_Fn(_401533_d.get()._field_Kind.ptr());;
	if ((((_401613_f != nullptr) && (_401613_f.get()._field_Decl != nullptr)) && _1eb024356_IsMethod(_401613_f.get()._field_Decl.ptr()))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), (*_self_)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>());
	};
}



inline void _1d05bcae6_checkDatas(_1d05b7c23_binaryEval* _self_) {
	_1d05bc91a_checkData(&(*_self_), (*_self_)._field_l);
	_1d05bc91a_checkData(&(*_self_), (*_self_)._field_r);
}



inline void _1d05bcd6b_setModel(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1d0598572_Data>& _402732_d) {
	if (_1d0598e35_IsConst(_402732_d.ptr())) {
		if ((_1d0598e35_IsConst((*_self_)._field_l.ptr()) && _1d0598e35_IsConst((*_self_)._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d0598572_Data> _403518_l;;
	jule::Ptr<_1d0598572_Data> _403525_r;;
	({
		jule::Ptr<_1d0598572_Data> ___jule_assign_arg = (*_self_)._field_l;
		jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = (*_self_)._field_r;
		_403518_l = ___jule_assign_arg;
		_403525_r = _1___jule_assign_arg;
	});
	if ((!(_1d0599243_GoodOperand(_403518_l.ptr(), _403525_r)))) {
		({
			jule::Ptr<_1d0598572_Data> ___jule_assign_arg = _403525_r;
			jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = _403518_l;
			_403518_l = ___jule_assign_arg;
			_403525_r = _1___jule_assign_arg;
		});
	};
	_402732_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb015897_BinopExprModel>(_1eb015897_BinopExprModel{._field_Left=jule::new_ptr<_1eb0153d0_OperandExprModel>(_1eb0153d0_OperandExprModel{._field_Kind=_403518_l.get()._field_Kind, ._field_Model=_403518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1eb0153d0_OperandExprModel>(_1eb0153d0_OperandExprModel{._field_Kind=_403525_r.get()._field_Kind, ._field_Model=_403525_r.get()._field_Model}), ._field_Op=(*_self_)._field_op}), &__jule_any_type119);
}



inline void _1d05bd0e1_postEval(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1d0598572_Data>& _405332_d) {
	_405332_d.get()._field_Lvalue=false;
	_1d05bcd6b_setModel(&(*_self_), _405332_d);
}



inline jule::Ptr<_1d0598572_Data> _1d05bd498_solveExplicit(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1d0598572_Data>& _405837_l, jule::Ptr<_1d0598572_Data>& _405852_r) {
	({
		jule::Ptr<_1d0598572_Data> ___jule_assign_arg = _405837_l;
		jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = _405852_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_1d05bcae6_checkDatas(&(*_self_));
	jule::Ptr<_1d0598572_Data> _406317_d = _1d05bc420_evalOp(&(*_self_));;
	({
		jule::Ptr<_1d0598572_Data> ___jule_assign_arg = _405837_l;
		jule::Ptr<_1d0598572_Data> _1___jule_assign_arg = _405852_r;
		(*_self_)._field_l = ___jule_assign_arg;
		(*_self_)._field_r = _1___jule_assign_arg;
	});
	_1d05bc695_evalConst(&(*_self_), _406317_d);
	if ((_406317_d != nullptr)) {
		_406317_d.get()._field_Mutable=true;
		_1d05bd0e1_postEval(&(*_self_), _406317_d);
	};
	return _406317_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d05bd7a6_eval(_1d05b7c23_binaryEval* _self_, jule::Ptr<_1ea30b595_BinopExpr>& _407828_op) {
	if ((_407828_op.get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1d059a5eb_pushErr((*_self_)._field_e.ptr(), _407828_op.get()._field_Op,jule::Str("assignments not available for expressions", 41),jule::Slice<jule::Any>());
		_1d059a91a_pushSugggestion((*_self_)._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _408517_l = _1d05b53e6_evalExprKind((*_self_)._field_e, _407828_op.get()._field_Left.get()._field_Kind);;
	if (((_408517_l == nullptr) || (_408517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _409017_prefix = (*_self_)._field_e.get()._field_prefix;;
	(*_self_)._field_e.get()._field_prefix=_408517_l.get()._field_Kind;
	__JULE_DEFER({
		(*_self_)._field_e.get()._field_prefix=_409017_prefix;
	});;
	jule::Ptr<_1d0598572_Data> _409317_r = _1d05b53e6_evalExprKind((*_self_)._field_e, _407828_op.get()._field_Right.get()._field_Kind);;
	if (((_409317_r == nullptr) || (_409317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*_self_)._field_op=_407828_op.get()._field_Op;
	jule::Ptr<_1d0598572_Data> _410017_d = _1d05bd498_solveExplicit(&(*_self_), _408517_l,_409317_r);;
	if ((((_410017_d != nullptr) && _408517_l.get()._field_IsRune) && _409317_r.get()._field_IsRune)) {
		_410017_d.get()._field_IsRune=true;
	};
	return _410017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05b7c23_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05c2cc7_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05c3811_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d05c4900_Str(_1d05c4504_TypeKind* _self_) {
	if (_1d05c5439_IsNil(&(*_self_))) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*_self_)._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1d05c51c5_CppLinked(&(*_self_))) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*_self_)._field_CppIdent;
	} else {
		_7417_kind+=_1d05c40c5_Kind_mptr_data[((*_self_)._field_Kind).type_offset]._1d05c3b74_Str((*_self_)._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1d05c4c0d_Equal(jule::Ptr<_1d05c4504_TypeKind> _self_, jule::Ptr<_1d05c4504_TypeKind> _9021_other) {
	if (_1d05c5439_IsNil(_self_.ptr())) {
		return _1d05c5439_IsNil(_9021_other.ptr());;
	};
	if (_1d05c51c5_CppLinked(_self_.ptr())) {
		return (_1d05c51c5_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1d05c40c5_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1d05c3e82_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1d05c51c5_CppLinked(_1d05c4504_TypeKind* _self_) {
	return ((*_self_)._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1d05c5439_IsNil(_1d05c4504_TypeKind* _self_) {
	return ((*_self_)._field_Kind == nullptr);;
}



inline jule::Bool _1d05c569d_Void(_1d05c4504_TypeKind* _self_) {
	jule::Ptr<_1d05c9251_Prim> _11113_prim = _1d05c688b_Prim(&(*_self_));;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _1d05c5912_Comparable(_1d05c4504_TypeKind* _self_) {
	{
		_1d05c4504_TypeKind* _11821__self = (&((*_self_)));;
		if ((_1d05c7cdd_Struct(_11821__self) != nullptr)) {
			return _1d05c7cdd_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_1d05c82b6_Map(_11821__self) == nullptr) && (_1d05c7815_Slc(_11821__self) == nullptr)) && (_1d05c7a79_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _1d05c5b76_Mutable(_1d05c4504_TypeKind* _self_) {
	{
		_1d05c4504_TypeKind* _12921__self = (&((*_self_)));;
		if ((_1d05c7cdd_Struct(_12921__self) != nullptr)) {
			return _1d05c7cdd_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_1d05c8052_Trait(_12921__self) != nullptr)) {
			return _1d05c8052_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_1d05c688b_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_1d05c9251_Prim> _13721_p = _1d05c688b_Prim(_12921__self);;
			return _1d05cc6e9_IsAny(_13721_p.ptr());;
		};
		if ((_1d05c75a1_Arr(_12921__self) != nullptr)) {
			return _1d05c5b76_Mutable(_1d05c75a1_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_1d05c7815_Slc(_12921__self) != nullptr) || (_1d05c6d64_Ptr(_12921__self) != nullptr)) || (_1d05c6b00_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _1d05c5dda_NilCompatible(_1d05c4504_TypeKind* _self_) {
	{
		_1d05c4504_TypeKind* _15221__self = (&((*_self_)));;
		jule::Ptr<_1d05c9251_Prim> _15417_prim = _1d05c688b_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _1d05cc6e9_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_1d05c5439_IsNil(_15221__self) || (_1d05c7a79_Fn(_15221__self) != nullptr)) || (_1d05c6b00_Sptr(_15221__self) != nullptr)) || (_1d05c6d64_Ptr(_15221__self) != nullptr)) || (_1d05c8052_Trait(_15221__self) != nullptr)) || (_1d05c7815_Slc(_15221__self) != nullptr)) || (_1d05c82b6_Map(_15221__self) != nullptr)) || (_1d05c733c_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _1d05c614e_PerformsRC(_1d05c4504_TypeKind* _self_) {
	{
		_1d05c4504_TypeKind* _17321__self = (&((*_self_)));;
		jule::Ptr<_1d05c9251_Prim> _17417_prim = _1d05c688b_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _1d05cc6e9_IsAny(_17417_prim.ptr());;
		};
		return (((_1d05c6b00_Sptr(_17321__self) != nullptr) || (_1d05c7815_Slc(_17321__self) != nullptr)) || (_1d05c8052_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _1d05c63b3_SupportsCloning(_1d05c4504_TypeKind* _self_) {
	{
		_1d05c4504_TypeKind* _18521__self = (&((*_self_)));;
		{
			
			if ((_1d05c688b_Prim(_18521__self) != nullptr)) {
				_case_begin_1ab29d3cd:;
				{
					return (!(_1d05cc6e9_IsAny(_1d05c688b_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_1d05c70c8_Enum(_18521__self) != nullptr)) {
				_case_begin_1ab2a0237:;
				{
					return true;;
				}
			}
			else if ((_1d05c7a79_Fn(_18521__self) != nullptr)) {
				_case_begin_1ab2a029d:;
				{
					return true;;
				}
			}
			else if ((_1d05c6d64_Ptr(_18521__self) != nullptr)) {
				_case_begin_1ab2a0314:;
				{
					return true;;
				}
			}
			else if ((_1d05c7815_Slc(_18521__self) != nullptr)) {
				_case_begin_1ab29ed5d:;
				{
					return _1d05c63b3_SupportsCloning(_1d05c7815_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1d05c82b6_Map(_18521__self) != nullptr)) {
				_case_begin_1ab29edc4:;
				{
					jule::Ptr<_1d05ce9e8_Map> _19821_m = _1d05c82b6_Map(_18521__self);;
					return (_1d05c63b3_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _1d05c63b3_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1d05c75a1_Arr(_18521__self) != nullptr)) {
				_case_begin_1ab29ee3a:;
				{
					return _1d05c63b3_SupportsCloning(_1d05c75a1_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1d05c6b00_Sptr(_18521__self) != nullptr)) {
				_case_begin_1ab29eea1:;
				{
					return _1d05c63b3_SupportsCloning(_1d05c6b00_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1d05c7cdd_Struct(_18521__self) != nullptr)) {
				_case_begin_1ab2a0545:;
				{
					jule::Ptr<_1ea320268_StructIns> _20525_s = _1d05c7cdd_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _1ea2d8dbe_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1ab29ece7:;
				{
					return false;;
				}
			}
			_match_end_1ab29ec81:;
		};
	};
}



inline jule::Bool _1d05c6627_Variadicable(_1d05c4504_TypeKind* _self_) {
	{
		_1d05c4504_TypeKind* _21821__self = (&((*_self_)));;
		return (_1d05c7815_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_1d05c9251_Prim> _1d05c688b_Prim(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05c9251_Prim>>()) {
			_case_begin_1ab29d1e1:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05c9251_Prim>();;
			}
		}
		else {
			_case_begin_1ab29e621:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab29e5bb:;
	};
}



inline jule::Ptr<_1d05cc9d5_Sptr> _1d05c6b00_Sptr(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05cc9d5_Sptr>>()) {
			_case_begin_1ab29e698:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05cc9d5_Sptr>();;
			}
		}
		else {
			_case_begin_1ab2a81a7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2a8152:;
	};
}



inline jule::Ptr<_1d05d1049_Ptr> _1d05c6d64_Ptr(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05d1049_Ptr>>()) {
			_case_begin_1ab2a8691:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05d1049_Ptr>();;
			}
		}
		else {
			_case_begin_1ab2a8d45:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2a873a:;
	};
}



inline jule::Ptr<_1d05005ea_Enum> _1d05c70c8_Enum(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05005ea_Enum>>()) {
			_case_begin_1ab2a8dde:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05005ea_Enum>();;
			}
		}
		else {
			_case_begin_1ab2a9ab0:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2a9a5a:;
	};
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d05c733c_TypeEnum(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d0501be5_TypeEnum>>()) {
			_case_begin_1ab2aa099:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d0501be5_TypeEnum>();;
			}
		}
		else {
			_case_begin_1ab2aa74d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2aa143:;
	};
}



inline jule::Ptr<_1d05d05dc_Arr> _1d05c75a1_Arr(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05d05dc_Arr>>()) {
			_case_begin_1ab2aa808:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05d05dc_Arr>();;
			}
		}
		else {
			_case_begin_1ab2ab4b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ab463:;
	};
}



inline jule::Ptr<_1d05cd442_Slc> _1d05c7815_Slc(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05cd442_Slc>>()) {
			_case_begin_1ab2ab551:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05cd442_Slc>();;
			}
		}
		else {
			_case_begin_1ab2ac1cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ac178:;
	};
}



inline jule::Ptr<_1eb026831_FnIns> _1d05c7a79_Fn(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1eb026831_FnIns>>()) {
			_case_begin_1ab2ac255:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1eb026831_FnIns>();;
			}
		}
		else {
			_case_begin_1ab2acde3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2acd8d:;
	};
}



inline jule::Ptr<_1ea320268_StructIns> _1d05c7cdd_Struct(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1ea320268_StructIns>>()) {
			_case_begin_1ab2ad454:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1ea320268_StructIns>();;
			}
		}
		else {
			_case_begin_1ab2adac5:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ada70:;
	};
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d05c8052_Trait(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d04ed4a5_Trait>>()) {
			_case_begin_1ab2ae147:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d04ed4a5_Trait>();;
			}
		}
		else {
			_case_begin_1ab2ae7b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2ae763:;
	};
}



inline jule::Ptr<_1d05ce9e8_Map> _1d05c82b6_Map(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05ce9e8_Map>>()) {
			_case_begin_1ab2aecb3:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05ce9e8_Map>();;
			}
		}
		else {
			_case_begin_1ab2b0467:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2aed5c:;
	};
}



inline jule::Ptr<_1d05cdec0_Tuple> _1d05c852a_Tup(_1d05c4504_TypeKind* _self_) {
	{
		auto &_match_expr{ (*_self_)._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05cdec0_Tuple>>()) {
			_case_begin_1ab2b0522:;
			{
				return (*_self_)._field_Kind.operator jule::Ptr<_1d05cdec0_Tuple>();;
			}
		}
		else {
			_case_begin_1ab2b11d2:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab2b117c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d05c4504_TypeKind _Src) {
	_Stream << _1d05c4900_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1d05c8c89_checked(_1d05c88d2_TypeSymbol* _self_) {
	return ((*_self_)._field_Kind != nullptr);;
}



inline void _1d05c8e65_removeKind(_1d05c88d2_TypeSymbol* _self_) {
	(*_self_)._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05c88d2_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d05c95b4_Str(_1d05c9251_Prim* _self_) {
	return (*_self_)._field_Kind;;
}



inline jule::Bool _1d05c98c2_Equal(jule::Ptr<_1d05c9251_Prim> _self_, jule::Ptr<_1d05c4504_TypeKind> _37121_other) {
	jule::Ptr<_1d05c9251_Prim> _37213_prim = _1d05c688b_Prim(_37121_other.ptr());;
	if ((_37213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37213_prim.get()._field_Kind);;
}



inline jule::Bool _1d05c9d45_IsConstraint(_1d05c9251_Prim* _self_) {
	return ((((!(_1d05cc485_IsStr(&(*_self_)))) && (!(_1d05cc6e9_IsAny(&(*_self_))))) && (!(_1d05cc221_IsBool(&(*_self_))))) && (!(_1eb0090a5_IsNum((*_self_)._field_Kind))));;
}



inline jule::Bool _1d05ca0a9_IsI8(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _1d05ca31d_IsI16(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _1d05ca582_IsI32(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _1d05ca7e6_IsI64(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _1d05caa5a_IsU8(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _1d05cacbe_IsU16(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _1d05cb033_IsU32(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _1d05cb297_IsU64(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _1d05cb50b_IsF32(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _1d05cb770_IsF64(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _1d05cb9d4_IsInt(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _1d05cbc48_IsUint(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _1d05cbeac_IsUintptr(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _1d05cc221_IsBool(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _1d05cc485_IsStr(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _1d05cc6e9_IsAny(_1d05c9251_Prim* _self_) {
	return ((*_self_)._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05c9251_Prim _Src) {
	_Stream << _1d05c95b4_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d05ccd48_Str(_1d05cc9d5_Sptr* _self_) {
	return (jule::Str("&", 1) + _1d05c4900_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1d05cd156_Equal(jule::Ptr<_1d05cc9d5_Sptr> _self_, jule::Ptr<_1d05c4504_TypeKind> _44821_other) {
	jule::Ptr<_1d05cc9d5_Sptr> _44913_sptr = _1d05c6b00_Sptr(_44821_other.ptr());;
	if ((_44913_sptr == nullptr)) {
		return false;;
	};
	return _1d05c4c0d_Equal(_self_.get()._field_Elem, _44913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05cc9d5_Sptr _Src) {
	_Stream << _1d05ccd48_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d05cd94d_Str(_1d05cd442_Slc* _self_) {
	return (jule::Str("[]", 2) + _1d05c4900_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1d05cdc5b_Equal(jule::Ptr<_1d05cd442_Slc> _self_, jule::Ptr<_1d05c4504_TypeKind> _46721_other) {
	jule::Ptr<_1d05cd442_Slc> _46813_slc = _1d05c7815_Slc(_46721_other.ptr());;
	if ((_46813_slc == nullptr)) {
		return false;;
	};
	return _1d05c4c0d_Equal(_self_.get()._field_Elem, _46813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05cd442_Slc _Src) {
	_Stream << _1d05cd94d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d05ce333_Str(_1d05cdec0_Tuple* _self_) {
	jule::Str _48417_s = jule::Str("(", 1);;
	_48417_s+=_1d05c4900_Str((*_self_)._field_Types[0LL].ptr());
	{
		auto expr = (*_self_)._field_Types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ab2c0961:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c4504_TypeKind> &_48616_t = *it;
			{
				_48417_s+=jule::Str(",", 1);
				_48417_s+=_1d05c4900_Str(_48616_t.ptr());
			}
			_iter_next_1ab2c0961:;
			++it;
			goto _iter_begin_1ab2c0961;
		}
		_iter_end_1ab2c0961:;
	};
	_48417_s+=jule::Str(")", 1);
	return _48417_s;;
}



inline jule::Bool _1d05ce641_Equal(jule::Ptr<_1d05cdec0_Tuple> _self_, jule::Ptr<_1d05c4504_TypeKind> _49521_other) {
	jule::Ptr<_1d05cdec0_Tuple> _49613_tup = _1d05c852a_Tup(_49521_other.ptr());;
	if ((_49613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50317_i = 0LL;;
	for (; (_50317_i < _self_.get()._field_Types.len()); (_50317_i)++) {
		{
			if ((!(_1d05c4c0d_Equal(_self_.get()._field_Types[_50317_i], _49613_tup.get()._field_Types[_50317_i])))) {
				return false;;
			};
		}
	_iter_next_1ab2c3403:;
	}
	_iter_end_1ab2c3403:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05cdec0_Tuple _Src) {
	_Stream << _1d05ce333_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d05ced5b_Str(_1d05ce9e8_Map* _self_) {
	jule::Str _52317_s = jule::Str("[", 1);;
	_52317_s+=_1d05c4900_Str((*_self_)._field_Key.ptr());
	_52317_s+=jule::Str(":", 1);
	_52317_s+=_1d05c4900_Str((*_self_)._field_Val.ptr());
	_52317_s+=jule::Str("]", 1);
	return _52317_s;;
}



inline jule::Bool _1d05d0169_Equal(jule::Ptr<_1d05ce9e8_Map> _self_, jule::Ptr<_1d05c4504_TypeKind> _53221_other) {
	jule::Ptr<_1d05ce9e8_Map> _53313_m = _1d05c82b6_Map(_53221_other.ptr());;
	if ((_53313_m == nullptr)) {
		return false;;
	};
	return (_1d05c4c0d_Equal(_self_.get()._field_Key, _53313_m.get()._field_Key) && _1d05c4c0d_Equal(_self_.get()._field_Val, _53313_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ce9e8_Map _Src) {
	_Stream << _1d05ced5b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d05d0950_Str(_1d05d05dc_Arr* _self_) {
	jule::Str _55117_s = jule::Str("[", 1);;
	_55117_s+=_1eaeea272_Itoa((*_self_)._field_N);
	_55117_s+=jule::Str("]", 1);
	_55117_s+=_1d05c4900_Str((*_self_)._field_Elem.ptr());
	return _55117_s;;
}



inline jule::Bool _1d05d0c5d_Equal(jule::Ptr<_1d05d05dc_Arr> _self_, jule::Ptr<_1d05c4504_TypeKind> _55921_other) {
	jule::Ptr<_1d05d05dc_Arr> _56013_arr = _1d05c75a1_Arr(_55921_other.ptr());;
	if ((_56013_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56013_arr.get()._field_N) && _1d05c4c0d_Equal(_self_.get()._field_Elem, _56013_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05d05dc_Arr _Src) {
	_Stream << _1d05d0950_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d05d13ac_Str(_1d05d1049_Ptr* _self_) {
	if (_1d05d1a1c_IsUnsafe(&(*_self_))) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1d05c4900_Str((*_self_)._field_Elem.ptr()));;
}



inline jule::Bool _1d05d16ba_Equal(jule::Ptr<_1d05d1049_Ptr> _self_, jule::Ptr<_1d05c4504_TypeKind> _58321_other) {
	jule::Ptr<_1d05d1049_Ptr> _58413_ptr = _1d05c6d64_Ptr(_58321_other.ptr());;
	if ((_58413_ptr == nullptr)) {
		return false;;
	};
	return _1d05c4c0d_Equal(_self_.get()._field_Elem, _58413_ptr.get()._field_Elem);;
}



inline jule::Bool _1d05d1a1c_IsUnsafe(_1d05d1049_Ptr* _self_) {
	return ((*_self_)._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05d1049_Ptr _Src) {
	_Stream << _1d05d13ac_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05d1e90_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1d05d3579_pushErr(_1d05d2d70_typeChecker* _self_, jule::Ptr<_212a0c2ab_Token> _66926_token, jule::Str _66941_fmt, jule::Slice<jule::Any> _66954_args) {
	_1d05356c9_pushErr((*_self_)._field_s.ptr(), _66926_token,_66941_fmt,_66954_args);
}



inline void _1d05d3755_allowBuiltin(_1d05d2d70_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=false;
}



inline void _1d05d3931_disallowBuiltin(_1d05d2d70_typeChecker* _self_) {
	(*_self_)._field_disBuiltin=true;
}



inline jule::Ptr<_1d05c9251_Prim> _1d05d3c3e_buildPrim(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _68129_decl) {
	if ((!(_1d05dcd36_isPrim(_68129_decl.get()._field_Ident)))) {
		_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_68129_decl.get()._field_Generics.len() > 0LL)) {
		_1d05d3579_pushErr(&(*_self_), _68129_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_68129_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	return _1d05dc7e7_buildPrimType(_68129_decl.get()._field_Ident);;
}



inline void _1ab2d2830_pushReference(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea320268_StructIns>& _69540_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1aa18be6b_Exist((*_self_)._field_refers.ptr(), _69540_t)) {
		return;;
	};
	_1d04e2d6d_Push((*_self_)._field_refers.ptr(), jule::Any(_69540_t, &__jule_any_type11));
}

inline void _1ab2d5723_pushReference(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1d04ed4a5_Trait>& _69540_t) {
	if (((*_self_)._field_refers == nullptr)) {
		return;;
	};
	if (_1ab2d73d4_Exist((*_self_)._field_refers.ptr(), _69540_t)) {
		return;;
	};
	_1d04e2d6d_Push((*_self_)._field_refers.ptr(), jule::Any(_69540_t, &__jule_any_type12));
}



inline void _1d05d4239_pushReferenceByKind(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1d05c4504_TypeKind>& _70543_k) {
	{
		
		if ((_1d05c7cdd_Struct(_70543_k.ptr()) != nullptr)) {
			_case_begin_1ab2d14cc:;
			{
				jule::Ptr<_1ea320268_StructIns> _70821_t = _1d05c7cdd_Struct(_70543_k.ptr());;
				_1ab2d2830_pushReference(&(*_self_), _70821_t);
			}
		}
		else if ((_1d05c8052_Trait(_70543_k.ptr()) != nullptr)) {
			_case_begin_1ab2d1554:;
			{
				jule::Ptr<_1d04ed4a5_Trait> _71121_t = _1d05c8052_Trait(_70543_k.ptr());;
				_1ab2d5723_pushReference(&(*_self_), _71121_t);
			}
		}
		_match_end_1ab2d13bc:;
	};
}



inline void _1d05d4602_pushCycleError(_1d05d2d70_typeChecker* _self_, jule::Any _71629_def1, jule::Any _71640_def2, jule::Str& _71656_message) {
	;
	jule::Fn<jule::Str(jule::Any&)> _71813_getIdent = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _71828_def) mutable -> jule::Str {
		{
			auto &_match_expr{ _71828_def };
			
			if (_match_expr.type == &__jule_any_type69) {
				_case_begin_1ab2da959:;
				{
					return _71828_def.cast_ptr<_1d05c3811_TypeAlias>(&__jule_any_type69).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type68) {
				_case_begin_1ab2da9c0:;
				{
					return _71828_def.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1ab2da31b:;
				{
					return jule::Str();;
				}
			}
			_match_end_1ab2da23e:;
		};
	});;
	jule::Str _72813_def1Ident = _71813_getIdent(_71629_def1);;
	jule::Str _72913_def2Ident = _71813_getIdent(_71640_def2);;
	jule::Str _73013_refersTo = _22ca32409_Logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>::make({jule::Any(_72813_def1Ident, &__jule_any_type7),jule::Any(_72913_def2Ident, &__jule_any_type7)}));;
	(_71656_message).buffer.insert(0, (((_22dc94ca8_Repeat(jule::Str(" ", 1),4LL) + _73013_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d05d49a9_checkCrossCycle(_1d05d2d70_typeChecker* _self_, jule::Any _73430_decl, jule::Str& _73446_message) {
	{
		auto &_match_expr{ _73430_decl };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab2dcb37:;
			{
				jule::Ptr<_1d05c3811_TypeAlias> _73717_ta = _73430_decl.cast_ptr<_1d05c3811_TypeAlias>(&__jule_any_type69);;
				{
					auto &expr = _73717_ta.get()._field_Refers;
					auto it = expr.begin();
					_iter_begin_1ab2dd5e9:;
					if (it != expr.end()) {
						jule::Any &_73820_d = *it;
						{
							{
								
								if ((_73820_d == (*_self_)._field_referencer.get()._field_owner)) {
									_case_begin_1ab2de2ed:;
									{
										_1d05d4602_pushCycleError(&(*_self_), jule::Any(_73717_ta, &__jule_any_type69),_73820_d,_73446_message);
										return false;;
									}
								}
								else if ((!(_1d05d49a9_checkCrossCycle(&(*_self_), _73820_d,_73446_message)))) {
									_case_begin_1ab2de375:;
									{
										_1d05d4602_pushCycleError(&(*_self_), jule::Any(_73717_ta, &__jule_any_type69),_73820_d,_73446_message);
										return false;;
									}
								}
								_match_end_1ab2de1dd:;
							};
						}
						_iter_next_1ab2dd5e9:;
						++it;
						goto _iter_begin_1ab2dd5e9;
					}
					_iter_end_1ab2dd5e9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab2dcb9d:;
			{
				jule::Ptr<_1ea31ed8e_Struct> _74917_s = _73430_decl.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68);;
				{
					auto &expr = _74917_s.get()._field_Depends;
					auto it = expr.begin();
					_iter_begin_1ab2dec8d:;
					if (it != expr.end()) {
						jule::Ptr<_1ea31ed8e_Struct> &_75020_d = *it;
						{
							{
								
								if ((__jule_any_type68_compare((*_self_)._field_referencer.get()._field_owner, _75020_d))) {
									_case_begin_1ab2e1641:;
									{
										_1d05d4602_pushCycleError(&(*_self_), jule::Any(_74917_s, &__jule_any_type68),jule::Any(_75020_d, &__jule_any_type68),_73446_message);
										return false;;
									}
								}
								else if ((!(_1d05d49a9_checkCrossCycle(&(*_self_), jule::Any(_75020_d, &__jule_any_type68),_73446_message)))) {
									_case_begin_1ab2e16b8:;
									{
										_1d05d4602_pushCycleError(&(*_self_), jule::Any(_74917_s, &__jule_any_type68),jule::Any(_75020_d, &__jule_any_type68),_73446_message);
										return false;;
									}
								}
								_match_end_1ab2e1531:;
							};
						}
						_iter_next_1ab2dec8d:;
						++it;
						goto _iter_begin_1ab2dec8d;
					}
					_iter_end_1ab2dec8d:;
				};
			}
		}
		_match_end_1ab2dca49:;
	};
	return true;;
}



inline jule::Bool _1d05d4d61_checkIllegalCycles(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _76838_ident, jule::Any _76865_decl) {
	jule::Bool __jule_func_result = false;
	if (((*_self_)._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _76865_decl };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab2e35bb:;
			{
				if (((*_self_)._field_notPlain || _76865_decl.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab2e3632:;
			{
				if (_76865_decl.cast_ptr<_1d05c3811_TypeAlias>(&__jule_any_type69).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1ab2e11e0:;
	};
	if ((_76865_decl == (*_self_)._field_referencer.get()._field_owner)) {
		_1d05d3579_pushErr(&(*_self_), _76838_ident.get()._field_Token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>::make({jule::Any((*_self_)._field_referencer.get()._field_ident, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79117_message = jule::Str();;
	if ((!(_1d05d49a9_checkCrossCycle(&(*_self_), _76865_decl,_79117_message)))) {
		jule::Str _79421_errMsg = _79117_message;;
		_79117_message=jule::Str();
		_1d05d4602_pushCycleError(&(*_self_), (*_self_)._field_referencer.get()._field_owner,_76865_decl,_79117_message);
		_79421_errMsg+=_79117_message;
		_1d05d3579_pushErr(&(*_self_), _76838_ident.get()._field_Token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>::make({jule::Any(_79421_errMsg, &__jule_any_type7)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1ab2e5c50:;
			{
				{
					(*((*_self_)._field_referencer.get()._field_refs))=jule::append((*((*_self_)._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_76865_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab2e75d1:;
			{
				{
					auto &_match_expr{ _76865_decl };
					
					if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1ab2e7cc9:;
						{
							jule::Ptr<_1ea31ed8e_Struct> _81025_s = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68);;
							_81025_s.get()._field_Depends = jule::alloc_for_append(_81025_s.get()._field_Depends,1);_81025_s.get()._field_Depends.__push(_76865_decl.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68));;
						}
					}
					_match_end_1ab2e7bdb:;
				};
			}
		}
		_match_end_1ab2e5bb7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1d05c40c5_Kind> _1d05d5218_fromTypeAlias(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _81833_decl, jule::Ptr<_1d05c3811_TypeAlias>& _81860_ta) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _81860_ta.get()._field_Public,_81860_ta.get()._field_Token)))) {
		_1d05d3579_pushErr(&(*_self_), _81833_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_81833_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	_81860_ta.get()._field_Used=true;
	if ((_81833_decl.get()._field_Generics.len() > 0LL)) {
		_1d05d3579_pushErr(&(*_self_), _81833_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_81833_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if (((!((*_self_)._field_inscatch)) && ((*_self_)._field_bannedGenerics != nullptr))) {
		(*_self_)._field_inscatch=true;
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1ab2ec394:;
			if (it != expr.end()) {
				jule::Ptr<_1d05c3811_TypeAlias> _83520_bg = *it;
				{
					if (((_83520_bg == _81860_ta) || ((_81860_ta.get()._field_Kind.get()._field_Kind != nullptr) && _1d05c4c0d_Equal(_81860_ta.get()._field_Kind.get()._field_Kind, _83520_bg.get()._field_Kind.get()._field_Kind)))) {
						(*_self_)._field_inscatch=false;
						goto _iter_end_1ab2ec394;
					};
				}
				_iter_next_1ab2ec394:;
				++it;
				goto _iter_begin_1ab2ec394;
			}
			_iter_end_1ab2ec394:;
		};
	};
	if ((*_self_)._field_inscatch) {
		{
			auto &expr = (*_self_)._field_bannedGenerics;
			auto it = expr.begin();
			_iter_begin_1ab2ee253:;
			if (it != expr.end()) {
				jule::Ptr<_1d05c3811_TypeAlias> _84620_bg = *it;
				{
					if ((_84620_bg == _81860_ta)) {
						_1d05d3579_pushErr(&(*_self_), _81833_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_81833_decl.get()._field_Ident, &__jule_any_type7)}));
						return nullptr;;
					};
					{
						auto &expr = _81860_ta.get()._field_Generics;
						auto it = expr.begin();
						_iter_begin_1ab2eed9c:;
						if (it != expr.end()) {
							jule::Ptr<_1d05c3811_TypeAlias> _85124_dg = *it;
							{
								if ((_84620_bg == _85124_dg)) {
									_1d05d3579_pushErr(&(*_self_), _81833_decl.get()._field_Token,jule::Str("type declaration causes initiation cycle", 40),jule::Slice<jule::Any>::make({jule::Any(_81833_decl.get()._field_Ident, &__jule_any_type7)}));
									return nullptr;;
								};
							}
							_iter_next_1ab2eed9c:;
							++it;
							goto _iter_begin_1ab2eed9c;
						}
						_iter_end_1ab2eed9c:;
					};
				}
				_iter_next_1ab2ee253:;
				++it;
				goto _iter_begin_1ab2ee253;
			}
			_iter_end_1ab2ee253:;
		};
	};
	jule::Bool _86017_ok = _1d05d4d61_checkIllegalCycles(&(*_self_), _81833_decl,jule::Any(_81860_ta, &__jule_any_type69));;
	if ((!(_86017_ok))) {
		return nullptr;;
	};
	_86017_ok=_1d054088d_checkTypeAliasDeclKind((*_self_)._field_s, _81860_ta,(*_self_)._field_lookup);
	if ((!(_86017_ok))) {
		return nullptr;;
	};
	if ((_81860_ta.get()._field_Generic && ((*_self_)._field_ownerAlias != nullptr))) {
		(*_self_)._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*_self_)._field_ownerAlias.get()._field_Generics,1);(*_self_)._field_ownerAlias.get()._field_Generics.__push(_81860_ta);;
	};
	jule::Ptr<_1d05c4504_TypeKind> _87717_tk = jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Generic=_81860_ta.get()._field_Generic, ._field_Kind=_81860_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1d05d4239_pushReferenceByKind(&(*_self_), _87717_tk);
	if (_81860_ta.get()._field_CppLinked) {
		_87717_tk.get()._field_CppIdent=_81860_ta.get()._field_Ident;
	} else {
		_87717_tk.get()._field_CppIdent=_81860_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1d05c40c5_Kind>(_87717_tk, 5);;
}



inline jule::Ptr<_1d05005ea_Enum> _1d05d55c0_fromEnum(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _89028_decl, jule::Ptr<_1d05005ea_Enum>& _89055_e) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _89055_e.get()._field_Public,_89055_e.get()._field_Token)))) {
		_1d05d3579_pushErr(&(*_self_), _89028_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_89028_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_89028_decl.get()._field_Generics.len() > 0LL)) {
		_1d05d3579_pushErr(&(*_self_), _89028_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_89028_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	return _89055_e;;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d05d5977_fromTypeEnum(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _90232_decl, jule::Ptr<_1d0501be5_TypeEnum>& _90259_e) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _90259_e.get()._field_Public,_90259_e.get()._field_Token)))) {
		_1d05d3579_pushErr(&(*_self_), _90232_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_90232_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_90232_decl.get()._field_Generics.len() > 0LL)) {
		_1d05d3579_pushErr(&(*_self_), _90232_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_90232_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	return _90259_e;;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d05d5d2e_fromTrait(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _91429_decl, jule::Ptr<_1d04ed4a5_Trait>& _91456_t) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _91456_t.get()._field_Public,_91456_t.get()._field_Token)))) {
		_1d05d3579_pushErr(&(*_self_), _91429_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_91429_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_91429_decl.get()._field_Generics.len() > 0LL)) {
		_1d05d3579_pushErr(&(*_self_), _91429_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_91429_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	_1ab2d5723_pushReference(&(*_self_), _91456_t);
	return _91456_t;;
}



inline jule::Bool _1d05d61d6_checkStructIns(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea320268_StructIns>& _92738_ins, jule::Ptr<_212a0c2ab_Token>& _92760_errorToken) {
	jule::Bool __jule_func_result = false;
	if (_92738_ins.get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_92738_ins.get()._field_Checked=true;
	if ((((*_self_)._field_referencer != nullptr) && (__jule_any_type68_compare((*_self_)._field_referencer.get()._field_owner, _92738_ins.get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1d0549a1d_precheckStructIns((*_self_)._field_s, _92738_ins,_92760_errorToken)))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((_92738_ins.get()._field_Generics.len() > 0LL)) {
		_1d054a48b_checkStructInsOperators((*_self_)._field_s, _92738_ins);
		_1d0549c93_checkStructIns((*_self_)._field_s, _92738_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d05d647d_appendUsedStructReference(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea31ed8e_Struct>& _94849_s) {
	if (((*_self_)._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*_self_)._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1ab3108e6:;
			{
				jule::Ptr<_1ea31ed8e_Struct> _95421_refS = (*_self_)._field_referencer.get()._field_owner.cast_ptr<_1ea31ed8e_Struct>(&__jule_any_type68);;
				if ((!(_1ea2d9584_IsUses(_95421_refS.ptr(), _94849_s)))) {
					_95421_refS.get()._field_Uses = jule::alloc_for_append(_95421_refS.get()._field_Uses,1);_95421_refS.get()._field_Uses.__push(_94849_s);;
				};
			}
		}
		_match_end_1ab310891:;
	};
}



inline jule::Ptr<_1ea320268_StructIns> _1d05d6846_buildStructInstance(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _96143_decl, jule::Ptr<_1ea31ed8e_Struct>& _96170_s) {
	jule::Ptr<_1d05d1e90_referencer> _96317_referencer = (*_self_)._field_referencer;;
	(*_self_)._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>> _96517_bannedGenerics = (*_self_)._field_bannedGenerics;;
	if (((*_self_)._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*_self_)._field_lookup };
			
			if (_match_expr.type_is<jule::Ptr<_1d0512c28_scopeChecker>>()) {
				_case_begin_1ab313597:;
				{
					jule::Ptr<_1d0512c28_scopeChecker> _97225_sc = (*_self_)._field_lookup.operator jule::Ptr<_1d0512c28_scopeChecker>();;
					jule::Ptr<_1d0512c28_scopeChecker> _97325_hard = _1d05160d3_getHardRoot(_97225_sc);;
					if (((_97325_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97325_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != _96170_s))) {
						goto _match_end_1ab313542;
					};
					jule::I64 _97721_n = (_97325_hard.get()._field_owner.get()._field_Generics.len() + _97325_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*_self_)._field_bannedGenerics=_97325_hard.get()._field_table.get()._field_TypeAliases.slice(0LL,_97721_n);
				}
			}
			_match_end_1ab313542:;
		};
	} else {
		(*_self_)._field_inscatch=true;
	};
	jule::Trait<_1d05e0476_Lookup> _98717_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=(*_self_)._field_rootLookup;
	jule::Ptr<_1ea320268_StructIns> _99117_ins = _1ea2d0415_instance(_96170_s);;
	_99117_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1d05c2cc7_InsGeneric>>::alloc(0LL, _96143_decl.get()._field_Generics.len());
	{
		auto &expr = _96143_decl.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1ab317997:;
		if (it != expr.end()) {
			jule::Ptr<_1ea30369c_TypeDecl> _99321_g = *it;
			{
				jule::Ptr<_1d05c4504_TypeKind> _99421_kind = _1d05d9ccd_build(&(*_self_), _99321_g.get()._field_Kind);;
				if ((_99421_kind == nullptr)) {
					return nullptr;;
				};
				_99117_ins.get()._field_Generics = jule::alloc_for_append(_99117_ins.get()._field_Generics,1);_99117_ins.get()._field_Generics.__push(jule::new_ptr<_1d05c2cc7_InsGeneric>(_1d05c2cc7_InsGeneric{._field_Kind=_99421_kind, }));;
			}
			_iter_next_1ab317997:;
			++it;
			goto _iter_begin_1ab317997;
		}
		_iter_end_1ab317997:;
	};
	(*_self_)._field_lookup=_98717_lookup;
	(*_self_)._field_bannedGenerics=_96517_bannedGenerics;
	(*_self_)._field_referencer=_96317_referencer;
	return _99117_ins;;
}



inline jule::Ptr<_1ea320268_StructIns> _1d05d6bed_fromStruct(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _100934_decl, jule::Ptr<_1ea31ed8e_Struct>& _100961_s) {
	if ((!(_1d0535da0_isAccessibleDefine((*_self_)._field_s.ptr(), _100961_s.get()._field_Public,_100961_s.get()._field_Token)))) {
		_1d05d3579_pushErr(&(*_self_), _100934_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_100934_decl.get()._field_Ident, &__jule_any_type7)}));
		return nullptr;;
	};
	if ((*_self_)._field_selection) {
		if ((_100934_decl.get()._field_Generics.len() > 0LL)) {
			_1d05d3579_pushErr(&(*_self_), _100934_decl.get()._field_Token,jule::Str("generics are not allowed in this scope", 38),jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ea320268_StructIns>(_1ea320268_StructIns{._field_Decl=_100961_s, });;
	};
	jule::Bool _102717_ok = ((*_self_)._field_notPlain || _1d05d4d61_checkIllegalCycles(&(*_self_), _100934_decl,jule::Any(_100961_s, &__jule_any_type68)));;
	if ((!(_102717_ok))) {
		return nullptr;;
	};
	_1d05d647d_appendUsedStructReference(&(*_self_), _100961_s);
	jule::Ptr<_1ea320268_StructIns> _103317_ins = _1d05d6846_buildStructInstance(&(*_self_), _100934_decl,_100961_s);;
	if ((_103317_ins == nullptr)) {
		return nullptr;;
	};
	_102717_ok=_1d0536a71_checkGenericQuantity((*_self_)._field_s.ptr(), static_cast<jule::I64>(_103317_ins.get()._field_Decl.get()._field_Generics.len()),static_cast<jule::I64>(_103317_ins.get()._field_Generics.len()),_100934_decl.get()._field_Token);
	if ((!(_102717_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ea320268_StructIns> _104317_existInstance = _1ea2d116e_appendInstance(_100961_s.ptr(), _103317_ins);;
	if ((_104317_existInstance != nullptr)) {
		if ((!(_1d053e040_checkConstraintsStruct((*_self_)._field_s, _103317_ins,_100934_decl.get()._field_Token,_104317_existInstance)))) {
			return nullptr;;
		};
		_1ab2d2830_pushReference(&(*_self_), _104317_existInstance);
		return _104317_existInstance;;
	};
	if ((!(_1d05d61d6_checkStructIns(&(*_self_), _103317_ins,_100934_decl.get()._field_Token)))) {
		return nullptr;;
	};
	_1ab2d2830_pushReference(&(*_self_), _103317_ins);
	return _103317_ins;;
}



inline jule::Trait<_1d05c40c5_Kind> _1d05d700b_getDef(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl>& _106730_decl) {
	{
		auto &expr = (*_self_)._field_ignoreGenerics;
		auto it = expr.begin();
		_iter_begin_1ab322221:;
		if (it != expr.end()) {
			jule::Ptr<_1ea310995_GenericDecl> _106816_g = *it;
			{
				if ((_106816_g.get()._field_Ident == _106730_decl.get()._field_Ident)) {
					return jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(_106816_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1ab322221:;
			++it;
			goto _iter_begin_1ab322221;
		}
		_iter_end_1ab322221:;
	};
	{
		auto &expr = (*_self_)._field_useGenerics;
		auto it = expr.begin();
		_iter_begin_1ab3223a8:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c3811_TypeAlias> _107421_g = *it;
			{
				if ((_107421_g.get()._field_Ident == _106730_decl.get()._field_Ident)) {
					if ((_106730_decl.get()._field_Generics.len() > 0LL)) {
						_1d05d3579_pushErr(&(*_self_), _106730_decl.get()._field_Token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>::make({jule::Any(_106730_decl.get()._field_Ident, &__jule_any_type7)}));
						return nullptr;;
					};
					jule::Ptr<_1ea320268_StructIns> _108025_st = _1d05c7cdd_Struct(_107421_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108025_st != nullptr)) {
						jule::Bool _108225_ok = _1d05d4d61_checkIllegalCycles(&(*_self_), _106730_decl,jule::Any(_108025_st.get()._field_Decl, &__jule_any_type68));;
						if ((!(_108225_ok))) {
							return nullptr;;
						};
					};
					return _107421_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1ab3223a8:;
			++it;
			goto _iter_begin_1ab3223a8;
		}
		_iter_end_1ab3223a8:;
	};
	if ((!(_106730_decl.get()._field_CppLinked))) {
		jule::Ptr<_1d05005ea_Enum> _109221_e = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05e0025_FindEnum((*_self_)._field_lookup, _106730_decl.get()._field_Ident);;
		if ((_109221_e != nullptr)) {
			return jule::Trait<_1d05c40c5_Kind>(_1d05d55c0_fromEnum(&(*_self_), _106730_decl,_109221_e), 3);;
		};
		jule::Ptr<_1d0501be5_TypeEnum> _109721_te = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05e0333_FindTypeEnum((*_self_)._field_lookup, _106730_decl.get()._field_Ident);;
		if ((_109721_te != nullptr)) {
			return jule::Trait<_1d05c40c5_Kind>(_1d05d5977_fromTypeEnum(&(*_self_), _106730_decl,_109721_te), 4);;
		};
		jule::Ptr<_1d04ed4a5_Trait> _110221_t = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05dec17_FindTrait((*_self_)._field_lookup, _106730_decl.get()._field_Ident);;
		if ((_110221_t != nullptr)) {
			return jule::Trait<_1d05c40c5_Kind>(_1d05d5d2e_fromTrait(&(*_self_), _106730_decl,_110221_t), 2);;
		};
	} else if ((*_self_)._field_selection) {
		_1d05d3579_pushErr(&(*_self_), _106730_decl.get()._field_Token,jule::Str("cpp-linked definitions are not allowed in this scope", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea31ed8e_Struct> _111117_s = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05de552_FindStruct((*_self_)._field_lookup, _106730_decl.get()._field_Ident,_106730_decl.get()._field_CppLinked);;
	if ((_111117_s != nullptr)) {
		return jule::Trait<_1d05c40c5_Kind>(_1d05d6bed_fromStruct(&(*_self_), _106730_decl,_111117_s), 0);;
	};
	jule::Ptr<_1d05c3811_TypeAlias> _111617_ta = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05de19a_FindTypeAlias((*_self_)._field_lookup, _106730_decl.get()._field_Ident,_106730_decl.get()._field_CppLinked);;
	if (((_111617_ta == nullptr) && (!((*_self_)._field_disBuiltin)))) {
		_111617_ta=_1d05ee672_findBuiltinTypeAlias(_106730_decl.get()._field_Ident);
	};
	if ((_111617_ta != nullptr)) {
		return _1d05d5218_fromTypeAlias(&(*_self_), _106730_decl,_111617_ta);;
	};
	_1d05d3579_pushErr(&(*_self_), _106730_decl.get()._field_Token,jule::Str("undefined identifier: @", 23),jule::Slice<jule::Any>::make({jule::Any(_106730_decl.get()._field_Ident, &__jule_any_type7)}));
	return nullptr;;
}



inline jule::Trait<_1d05c40c5_Kind> _1d05d7319_buildIdent(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea303c63_IdentTypeDecl> _112833_decl) {
	{
		
		if (_1d05dcd36_isPrim(_112833_decl.get()._field_Ident)) {
			_case_begin_1ab32d370:;
			{
				return jule::Trait<_1d05c40c5_Kind>(_1d05d3c3e_buildPrim(&(*_self_), _112833_decl), 6);;
			}
		}
		else {
			_case_begin_1ab32cb77:;
			{
				return _1d05d700b_getDef(&(*_self_), _112833_decl);;
			}
		}
		_match_end_1ab32caab:;
	};
}



inline jule::Trait<_1d05c40c5_Kind> _1d05d7627_buildSubIdent(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea3043b2_SubIdentTypeDecl> _113736_decl) {
	jule::Trait<_1d05c40c5_Kind> _113817_ident = _1d05d7319_buildIdent(&(*_self_), _113736_decl.get()._field_Idents[0LL]);;
	if ((_113817_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _113817_ident };
		
		if (_match_expr.type_is<jule::Ptr<_1d0501be5_TypeEnum>>()) {
			_case_begin_1ab32eb9b:;
			{
				goto _match_end_1ab32eaad;
			}
		}
		else {
			_case_begin_1ab32e97b:;
			{
				_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab32eaad:;
	};
	jule::Ptr<_1d0501be5_TypeEnum> _114917_t = _113817_ident.operator jule::Ptr<_1d0501be5_TypeEnum>();;
	jule::Slice<jule::Ptr<_1ea303c63_IdentTypeDecl>> _115017_idents = _113736_decl.get()._field_Idents.slice(1LL);;
	{
		auto &expr = _115017_idents;
		auto it = expr.begin();
		_iter_begin_1ab331076:;
		if (it != expr.end()) {
			jule::I64 _115113_i = it - expr.begin();
			jule::Ptr<_1ea303c63_IdentTypeDecl> _115116_id = *it;
			{
				jule::Ptr<_1d050162e_TypeEnumItem> _115221_item = _1d050272e_FindItem(_114917_t.ptr(), _115116_id.get()._field_Ident);;
				if ((_115221_item == nullptr)) {
					_1d05d3579_pushErr(&(*_self_), _115116_id.get()._field_Token,jule::Str("undefined identifier: type @ has no field or method @", 53),jule::Slice<jule::Any>::make({jule::Any(_114917_t.get()._field_Ident, &__jule_any_type7),jule::Any(_115116_id.get()._field_Ident, &__jule_any_type7)}));
					return nullptr;;
				};
				if (((_115017_idents.len() - _115113_i) == 1LL)) {
					_1d05d4239_pushReferenceByKind(&(*_self_), _115221_item.get()._field_Kind.get()._field_Kind);
					return jule::Trait<_1d05c40c5_Kind>(_115221_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_114917_t=_1d05c733c_TypeEnum(_115221_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_114917_t == nullptr)) {
					_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1ab331076:;
			++it;
			_115113_i++;
			goto _iter_begin_1ab331076;
		}
		_iter_end_1ab331076:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05cc9d5_Sptr> _1d05d7935_buildSptrFromType(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1d05c4504_TypeKind>& _117141_elem) {
	{
		
		if ((_117141_elem == nullptr)) {
			_case_begin_1ab334e37:;
			{
				return nullptr;;
			}
		}
		else if ((_1d05c7cdd_Struct(_117141_elem.ptr()) != nullptr)) {
			_case_begin_1ab334eae:;
			{
				jule::Ptr<_1ea320268_StructIns> _117717_s = _1d05c7cdd_Struct(_117141_elem.ptr());;
				if (((_117717_s.get()._field_Decl != nullptr) && _117717_s.get()._field_Decl.get()._field_CppLinked)) {
					_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1d05c75a1_Arr(_117141_elem.ptr()) != nullptr) && _1d05c75a1_Arr(_117141_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ab335036:;
			{
				_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab334585:;
	};
	return jule::new_ptr<_1d05cc9d5_Sptr>(_1d05cc9d5_Sptr{._field_Elem=_117141_elem});;
}



inline jule::Ptr<_1d05cc9d5_Sptr> _1d05d7c43_buildSptr(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea304a55_SptrTypeDecl> _119132_decl) {
	jule::Bool _119213_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_119213_notPlain;
	});;
	jule::Ptr<_1d05c4504_TypeKind> _119617_elem = _1d05da0db_checkDecl(&(*_self_), _119132_decl.get()._field_Elem);;
	return _1d05d7935_buildSptrFromType(&(*_self_), _119617_elem);;
}



inline jule::Ptr<_1d05d1049_Ptr> _1d05d8051_buildPtrFromType(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1d05c4504_TypeKind>& _120040_elem) {
	{
		
		if ((_120040_elem == nullptr)) {
			_case_begin_1ab339d3d:;
			{
				return nullptr;;
			}
		}
		else if (((_1d05c75a1_Arr(_120040_elem.ptr()) != nullptr) && _1d05c75a1_Arr(_120040_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ab339db5:;
			{
				_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return jule::new_ptr<_1d05d1049_Ptr>();;
			}
		}
		_match_end_1ab339c2d:;
	};
	return jule::new_ptr<_1d05d1049_Ptr>(_1d05d1049_Ptr{._field_Elem=_120040_elem});;
}



inline jule::Ptr<_1d05d1049_Ptr> _1d05d835e_buildPtr(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea305528_PtrTypeDecl> _121531_decl) {
	jule::Bool _121613_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_121613_notPlain;
	});;
	jule::Ptr<_1d05c4504_TypeKind> _122017_elem = nullptr;;
	if ((!(_1ea30587a_IsUnsafe(_121531_decl.ptr())))) {
		_122017_elem=_1d05da0db_checkDecl(&(*_self_), _121531_decl.get()._field_Elem);
		return _1d05d8051_buildPtrFromType(&(*_self_), _122017_elem);;
	};
	return jule::new_ptr<_1d05d1049_Ptr>(_1d05d1049_Ptr{._field_Elem=_122017_elem});;
}



inline jule::Ptr<_1d05cd442_Slc> _1d05d866c_buildSlc(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea304e51_SlcTypeDecl> _123231_decl) {
	jule::Bool _123313_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_123313_notPlain;
	});;
	jule::Ptr<_1d05c4504_TypeKind> _123717_elem = _1d05da0db_checkDecl(&(*_self_), _123231_decl.get()._field_Elem);;
	{
		
		if ((_123717_elem == nullptr)) {
			_case_begin_1ab33ee0e:;
			{
				return nullptr;;
			}
		}
		else if (((_1d05c75a1_Arr(_123717_elem.ptr()) != nullptr) && _1d05c75a1_Arr(_123717_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ab33ee86:;
			{
				_1d05d3579_pushErr(&(*_self_), _123231_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab33ed54:;
	};
	return jule::new_ptr<_1d05cd442_Slc>(_1d05cd442_Slc{._field_Elem=_123717_elem});;
}



inline jule::Ptr<_1d05d05dc_Arr> _1d05d897a_buildArr(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea305baa_ArrTypeDecl> _125331_decl) {
	jule::Bool _125413_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_125413_notPlain;
	});;
	jule::I64 _125817_n = 0LL;;
	if ((!(_1ea306084_AutoSized(_125331_decl.ptr())))) {
		jule::Ptr<_1d0598572_Data> _126121_size = _1d05b5a12_evalExpr(_1d053c0b5_eval((*_self_)._field_s, (*_self_)._field_lookup), _125331_decl.get()._field_Size);;
		if ((_126121_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1d0598e35_IsConst(_126121_size.ptr())))) {
			_1d05d3579_pushErr(&(*_self_), _125331_decl.get()._field_Size.get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1d05c688b_Prim(_126121_size.get()._field_Kind.ptr()) == nullptr) || (!(_1eb0089de_IsInt(_1d05c688b_Prim(_126121_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1d05d3579_pushErr(&(*_self_), _125331_decl.get()._field_Size.get()._field_Token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_125817_n=static_cast<jule::I64>(static_cast<jule::I64>(_1eb00babe_AsI64(_126121_size.get()._field_Constant.ptr())));
		if ((_125817_n < 0LL)) {
			_1d05d3579_pushErr(&(*_self_), _125331_decl.get()._field_Elem.get()._field_Token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1eaeeb55e_BitSize != 64LL) && (static_cast<jule::F64>(_125817_n) > _1eb003610_Max(jule::Str("int", 3))))) {
			_1d05d3579_pushErr(&(*_self_), _125331_decl.get()._field_Size.get()._field_Token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1d05c4504_TypeKind> _128417_elem = _1d05da0db_checkDecl(&(*_self_), _125331_decl.get()._field_Elem);;
	{
		
		if ((_128417_elem == nullptr)) {
			_case_begin_1ab348753:;
			{
				return nullptr;;
			}
		}
		else if (((_1d05c75a1_Arr(_128417_elem.ptr()) != nullptr) && _1d05c75a1_Arr(_128417_elem.ptr()).get()._field_Auto)) {
			_case_begin_1ab3487b9:;
			{
				_1d05d3579_pushErr(&(*_self_), _125331_decl.get()._field_Elem.get()._field_Token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab348555:;
	};
	return jule::new_ptr<_1d05d05dc_Arr>(_1d05d05dc_Arr{._field_Auto=_1ea306084_AutoSized(_125331_decl.ptr()), ._field_N=_125817_n, ._field_Elem=_128417_elem});;
}



inline jule::Ptr<_1d05ce9e8_Map> _1d05d8c88_buildMap(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea306408_MapTypeDecl> _130231_decl) {
	jule::Bool _130313_notPlain = (*_self_)._field_notPlain;;
	(*_self_)._field_notPlain=true;
	__JULE_DEFER({
		(*_self_)._field_notPlain=_130313_notPlain;
	});;
	jule::Ptr<_1d05c4504_TypeKind> _130717_key = _1d05da0db_checkDecl(&(*_self_), _130231_decl.get()._field_Key);;
	if ((_130717_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _131217_val = _1d05da0db_checkDecl(&(*_self_), _130231_decl.get()._field_Val);;
	if ((_131217_val == nullptr)) {
		return nullptr;;
	};
	if ((_1d05c70c8_Enum(_131217_val.ptr()) != nullptr)) {
		_1d05d3579_pushErr(&(*_self_), _130231_decl.get()._field_Val.get()._field_Token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1d05ce9e8_Map>(_1d05ce9e8_Map{._field_Key=_130717_key, ._field_Val=_131217_val});;
}



inline jule::Ptr<_1d05cdec0_Tuple> _1d05d9096_buildTuple(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea30523c_TupleTypeDecl> _132633_decl) {
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _132717_types = jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>::alloc(0LL, _132633_decl.get()._field_Types.len());;
	{
		auto &expr = _132633_decl.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1ab34de2e:;
		if (it != expr.end()) {
			jule::Ptr<_1ea30369c_TypeDecl> _132821_t = *it;
			{
				jule::Ptr<_1d05c4504_TypeKind> _132921_kind = _1d05da0db_checkDecl(&(*_self_), _132821_t);;
				if ((_132921_kind == nullptr)) {
					return nullptr;;
				};
				_132717_types = jule::alloc_for_append(_132717_types,1);_132717_types.__push(_132921_kind);;
			}
			_iter_next_1ab34de2e:;
			++it;
			goto _iter_begin_1ab34de2e;
		}
		_iter_end_1ab34de2e:;
	};
	return jule::new_ptr<_1d05cdec0_Tuple>(_1d05cdec0_Tuple{._field_Types=_132717_types});;
}



inline jule::Bool _1d05d93a4_checkFnTypes(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1eb026831_FnIns>& _133936_f) {
	jule::Bool __jule_func_result = false;
	{
		auto &expr = _133936_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1ab350a24:;
		if (it != expr.end()) {
			jule::Ptr<_1eb025962_ParamIns> _134021_p = *it;
			{
				_134021_p.get()._field_Kind=_1d05d9ccd_build(&(*_self_), _134021_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind);
				__jule_func_result=(_134021_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1d053e66c_checkFnParamKind((*_self_)._field_s, _134021_p);
			}
			_iter_next_1ab350a24:;
			++it;
			goto _iter_begin_1ab350a24;
		}
		_iter_end_1ab350a24:;
	};
	if ((!(_1eb0240e2_IsVoid(_133936_f.get()._field_Decl.ptr())))) {
		_133936_f.get()._field_Result=_1d05d9ccd_build(&(*_self_), _133936_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind);
		__jule_func_result = (_133936_f.get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1eb026831_FnIns> _1d05d96b2_buildFn(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea31512b_FnDecl> _135730_decl) {
	if ((_135730_decl.get()._field_Generics.len() > 0LL)) {
		_1d05d3579_pushErr(&(*_self_), _135730_decl.get()._field_Token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1eb023b80_Fn> _136317_f = _1d04e53d1_buildFn(_135730_decl);;
	jule::I64 _136513_n = (*_self_)._field_s.get()._field_errors.len();;
	_1d0546586_checkFnDecl((*_self_)._field_s, _136317_f);
	if ((_136513_n != (*_self_)._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1eb026831_FnIns> _137117_ins = _1eb02506b_instanceForce(_136317_f);;
	_137117_ins.get()._field_Anon=true;
	jule::Bool _137413_ok = _1d05d93a4_checkFnTypes(&(*_self_), _137117_ins);;
	if ((!(_137413_ok))) {
		return nullptr;;
	};
	return _137117_ins;;
}



inline jule::Trait<_1d05c40c5_Kind> _1d05d99c0_buildByNamespace(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea304769_NamespaceTypeDecl> _138239_decl) {
	jule::Str _138313_path = _1d05dc440_buildLinkPathByTokens(_138239_decl.get()._field_Idents);;
	jule::Ptr<_1d05298bb_ImportInfo> _138417_imp = _1d05e0476_Lookup_mptr_data[((*_self_)._field_lookup).type_offset]._1d05dd93b_SelectPackage((*_self_)._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d05298bb_ImportInfo>)>([=](jule::Ptr<_1d05298bb_ImportInfo> _138452_imp) mutable -> jule::Bool {
		if (((_138239_decl.get()._field_Idents.len() == 1LL) && (_138452_imp.get()._field_Alias == _138313_path))) {
			return true;;
		};
		return ((_138452_imp.get()._field_LinkPath == _138313_path) && _1d052c528_isAccessibleViaSelection(_138452_imp.ptr()));;
	}));;
	if (((_138417_imp == nullptr) || (!(_1d052be84_isLookupable(_138417_imp.ptr(), jule::Str("self", 4)))))) {
		_1d05d3579_pushErr(&(*_self_), _138239_decl.get()._field_Idents[0LL],jule::Str("undefined namespace: @", 22),jule::Slice<jule::Any>::make({jule::Any(_138313_path, &__jule_any_type7)}));
		return nullptr;;
	};
	_1d05d3931_disallowBuiltin(&(*_self_));
	jule::Trait<_1d05e0476_Lookup> _139717_lookup = (*_self_)._field_lookup;;
	(*_self_)._field_lookup=jule::Trait<_1d05e0476_Lookup>(_138417_imp, 1);
	jule::Ptr<_1d05c4504_TypeKind> _139917_kind = _1d05da0db_checkDecl(&(*_self_), _138239_decl.get()._field_Kind);;
	(*_self_)._field_lookup=_139717_lookup;
	_1d05d3755_allowBuiltin(&(*_self_));
	return jule::Trait<_1d05c40c5_Kind>(_139917_kind, 5);;
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d05d9ccd_build(_1d05d2d70_typeChecker* _self_, jule::Any& _140529_declKind) {
	jule::Trait<_1d05c40c5_Kind> _140617_kind = nullptr;;
	{
		auto &_match_expr{ _140529_declKind };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab35ca64:;
			{
				jule::Trait<_1d05c40c5_Kind> _140921_t = _1d05d7319_buildIdent(&(*_self_), _140529_declKind.cast_ptr<_1ea303c63_IdentTypeDecl>(&__jule_any_type21));;
				if ((_140921_t != nullptr)) {
					_140617_kind=_140921_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab35d867:;
			{
				jule::Trait<_1d05c40c5_Kind> _141421_t = _1d05d7627_buildSubIdent(&(*_self_), _140529_declKind.cast_ptr<_1ea3043b2_SubIdentTypeDecl>(&__jule_any_type95));;
				if ((_141421_t != nullptr)) {
					_140617_kind=_141421_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1ab35d8cd:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d05cc9d5_Sptr> _142021_t = _1d05d7c43_buildSptr(&(*_self_), _140529_declKind.cast_ptr<_1ea304a55_SptrTypeDecl>(&__jule_any_type81));;
				if ((_142021_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_142021_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1ab35d03c:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d05d1049_Ptr> _142621_t = _1d05d835e_buildPtr(&(*_self_), _140529_declKind.cast_ptr<_1ea305528_PtrTypeDecl>(&__jule_any_type80));;
				if ((_142621_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_142621_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ab35d0a3:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d05cd442_Slc> _143221_t = _1d05d866c_buildSlc(&(*_self_), _140529_declKind.cast_ptr<_1ea304e51_SlcTypeDecl>(&__jule_any_type79));;
				if ((_143221_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_143221_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1ab35d119:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d05d05dc_Arr> _143821_t = _1d05d897a_buildArr(&(*_self_), _140529_declKind.cast_ptr<_1ea305baa_ArrTypeDecl>(&__jule_any_type78));;
				if ((_143821_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_143821_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1ab35d180:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d05ce9e8_Map> _144421_t = _1d05d8c88_buildMap(&(*_self_), _140529_declKind.cast_ptr<_1ea306408_MapTypeDecl>(&__jule_any_type82));;
				if ((_144421_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_144421_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1ab35da87:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1d05cdec0_Tuple> _145021_t = _1d05d9096_buildTuple(&(*_self_), _140529_declKind.cast_ptr<_1ea30523c_TupleTypeDecl>(&__jule_any_type83));;
				if ((_145021_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_145021_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab35daed:;
			{
				(*_self_)._field_inscatch=true;
				jule::Ptr<_1eb026831_FnIns> _145621_t = _1d05d96b2_buildFn(&(*_self_), _140529_declKind.cast_ptr<_1ea31512b_FnDecl>(&__jule_any_type16));;
				if ((_145621_t != nullptr)) {
					_140617_kind=jule::Trait<_1d05c40c5_Kind>(_145621_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1ab35db64:;
			{
				(*_self_)._field_inscatch=true;
				jule::Trait<_1d05c40c5_Kind> _146221_t = _1d05d99c0_buildByNamespace(&(*_self_), _140529_declKind.cast_ptr<_1ea304769_NamespaceTypeDecl>(&__jule_any_type99));;
				if ((_146221_t != nullptr)) {
					_140617_kind=_146221_t;
				};
			}
		}
		else {
			_case_begin_1ab35cdd8:;
			{
				_1d05d3579_pushErr(&(*_self_), (*_self_)._field_errorToken,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab35ccea:;
	};
	if ((_140617_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _140617_kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05c4504_TypeKind>>()) {
			_case_begin_1ab369d4b:;
			{
				return _140617_kind.operator jule::Ptr<_1d05c4504_TypeKind>();;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05c9251_Prim>>()) {
			_case_begin_1ab36a368:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _147721_tk = jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=_140617_kind});;
				if (((*_self_)._field_ignoredGenerics != nullptr)) {
					{
						(*((*_self_)._field_ignoredGenerics))=jule::append((*((*_self_)._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1d05c4504_TypeKind>>::make({_147721_tk}));
					};
				};
				return _147721_tk;;
			}
		}
		else {
			_case_begin_1ab369de5:;
			{
				return jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=_140617_kind});;
			}
		}
		_match_end_1ab369a1b:;
	};
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d05da0db_checkDecl(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1ea30369c_TypeDecl>& _148733_decl) {
	jule::Ptr<_212a0c2ab_Token> _148917_errorToken = (*_self_)._field_errorToken;;
	(*_self_)._field_errorToken=_148733_decl.get()._field_Token;
	jule::Ptr<_1d05c4504_TypeKind> _149217_kind = _1d05d9ccd_build(&(*_self_), _148733_decl.get()._field_Kind);;
	(*_self_)._field_errorToken=_148917_errorToken;
	return _149217_kind;;
}



inline void _1d05da361_check(_1d05d2d70_typeChecker* _self_, jule::Ptr<_1d05c88d2_TypeSymbol>& _149829_t) {
	if ((_149829_t.get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1d05c4504_TypeKind> _150217_kind = _1d05da0db_checkDecl(&(*_self_), _149829_t.get()._field_Decl);;
	if ((_150217_kind == nullptr)) {
		_1d05c8e65_removeKind(_149829_t.ptr());
		return;;
	};
	_149829_t.get()._field_Kind=_150217_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05d2d70_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d05da9c1_prim(jule::Str& _151421_ident, jule::Ptr<_1d05c9251_Prim> _151433_t) {
	return (_151433_t.get()._field_Kind == _151421_ident);;
}



inline jule::Bool static__1d05dad12_exist(jule::Str& _151822_ident, jule::Ptr<_1d05c4504_TypeKind>& _151839_k) {
	{
		
		if ((_1d05c688b_Prim(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab370439:;
			{
				return static__1d05da9c1_prim(_151822_ident,_1d05c688b_Prim(_151839_k.ptr()));;
			}
		}
		else if ((_1d05c6b00_Sptr(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab3704a0:;
			{
				jule::Ptr<_1d05cc9d5_Sptr> _152321_sptr = _1d05c6b00_Sptr(_151839_k.ptr());;
				return static__1d05dad12_exist(_151822_ident,_152321_sptr.get()._field_Elem);;
			}
		}
		else if ((_1d05c6d64_Ptr(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab370516:;
			{
				jule::Ptr<_1d05d1049_Ptr> _152621_ptr = _1d05c6d64_Ptr(_151839_k.ptr());;
				return static__1d05dad12_exist(_151822_ident,_152621_ptr.get()._field_Elem);;
			}
		}
		else if ((_1d05c7815_Slc(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab37057c:;
			{
				jule::Ptr<_1d05cd442_Slc> _152921_slc = _1d05c7815_Slc(_151839_k.ptr());;
				return static__1d05dad12_exist(_151822_ident,_152921_slc.get()._field_Elem);;
			}
		}
		else if ((_1d05c75a1_Arr(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab370813:;
			{
				jule::Ptr<_1d05d05dc_Arr> _153221_arr = _1d05c75a1_Arr(_151839_k.ptr());;
				return static__1d05dad12_exist(_151822_ident,_153221_arr.get()._field_Elem);;
			}
		}
		else if ((_1d05c82b6_Map(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab370879:;
			{
				jule::Ptr<_1d05ce9e8_Map> _153521_m = _1d05c82b6_Map(_151839_k.ptr());;
				return (static__1d05dad12_exist(_151822_ident,_153521_m.get()._field_Key) || static__1d05dad12_exist(_151822_ident,_153521_m.get()._field_Val));;
			}
		}
		else if ((_1d05c7cdd_Struct(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab3708e0:;
			{
				jule::Ptr<_1ea320268_StructIns> _153921_s = _1d05c7cdd_Struct(_151839_k.ptr());;
				{
					auto &expr = _153921_s.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1ab376a5b:;
					if (it != expr.end()) {
						jule::Ptr<_1d05c2cc7_InsGeneric> _154025_g = *it;
						{
							if (static__1d05dad12_exist(_151822_ident,_154025_g.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1ab376a5b:;
						++it;
						goto _iter_begin_1ab376a5b;
					}
					_iter_end_1ab376a5b:;
				};
				return false;;
			}
		}
		else if ((_1d05c7a79_Fn(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab370956:;
			{
				jule::Ptr<_1eb026831_FnIns> _154721_f = _1d05c7a79_Fn(_151839_k.ptr());;
				{
					auto &expr = _154721_f.get()._field_Params;
					auto it = expr.begin();
					_iter_begin_1ab3783cb:;
					if (it != expr.end()) {
						jule::Ptr<_1eb025962_ParamIns> _154825_p = *it;
						{
							if (_1eb022970_IsSelf(_154825_p.get()._field_Decl.ptr())) {
								goto _iter_next_1ab3783cb;
							};
							if (static__1d05dad12_exist(_151822_ident,_154825_p.get()._field_Kind)) {
								return true;;
							};
						}
						_iter_next_1ab3783cb:;
						++it;
						goto _iter_begin_1ab3783cb;
					}
					_iter_end_1ab3783cb:;
				};
				if ((_154721_f.get()._field_Result != nullptr)) {
					return static__1d05dad12_exist(_151822_ident,_154721_f.get()._field_Result);;
				};
				return false;;
			}
		}
		else if ((_1d05c852a_Tup(_151839_k.ptr()) != nullptr)) {
			_case_begin_1ab370ba9:;
			{
				jule::Ptr<_1d05cdec0_Tuple> _156121_tup = _1d05c852a_Tup(_151839_k.ptr());;
				{
					auto &expr = _156121_tup.get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1ab37a598:;
					if (it != expr.end()) {
						jule::Ptr<_1d05c4504_TypeKind> _156225_t = *it;
						{
							if (static__1d05dad12_exist(_151822_ident,_156225_t)) {
								return true;;
							};
						}
						_iter_next_1ab37a598:;
						++it;
						goto _iter_begin_1ab37a598;
					}
					_iter_end_1ab37a598:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ab3703c3:;
			{
				return false;;
			}
		}
		_match_end_1ab370307:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d05da581_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7bd9060_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c32b7a_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1b7c33b37_stop(_1b7c334a5_scopeParser* _self_) {
	(*_self_)._field_pos=-1LL;
}



inline jule::Bool _1b7c33d9b_stopped(_1b7c334a5_scopeParser* _self_) {
	return ((*_self_)._field_pos == -1LL);;
}



inline jule::Bool _1b7c34110_finished(_1b7c334a5_scopeParser* _self_) {
	return ((*_self_)._field_pos >= (*_self_)._field_stmts.len());;
}



inline jule::Bool _1b7c34374_isLastSt(_1b7c334a5_scopeParser* _self_) {
	return (((*_self_)._field_pos + 1LL) >= (*_self_)._field_stmts.len());;
}



inline void _1b7c34693_pushErr(_1b7c334a5_scopeParser* _self_, jule::Ptr<_212a0c2ab_Token> _19126_token, jule::Str _19141_fmt) {
	_1b7c5055a_pushErr((*_self_)._field_p.ptr(), _19126_token,_19141_fmt,jule::Slice<jule::Any>());
}



inline void _1b7c349b2_pushSuggestion(_1b7c334a5_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1b7c50879_pushSuggestion((*_self_)._field_p.ptr(), _19633_fmt,_19646_args);
}



inline void _1b7c34c37_insertAsNext(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _20036_tokens) {
	(*_self_)._field_stmts=jule::append((*_self_)._field_stmts.slice(0LL,((*_self_)._field_pos + 1LL)),(*_self_)._field_stmts.slice((*_self_)._field_pos));
	(*_self_)._field_stmts[((*_self_)._field_pos + 1LL)]=jule::new_ptr<_1b7c32b7a_stmt>(_1b7c32b7a_stmt{._field_tokens=_20036_tokens, });
}



inline jule::Ptr<_1b7c32b7a_stmt> _1b7c34e9b_next(_1b7c334a5_scopeParser* _self_) {
	((*_self_)._field_pos)++;
	return (*_self_)._field_stmts[(*_self_)._field_pos];;
}



inline jule::Ptr<_1ea313635_ScopeTree> _1b7c35353_buildScope(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _21034_tokens, jule::Ptr<_212a0c2ab_Token> _21056_end) {
	jule::Ptr<_1ea313635_ScopeTree> _21117_s = _1b7c31aad_newScope();;
	_21117_s.get()._field_Parent=(*_self_)._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1b7c334a5_scopeParser _21417_ssp = _1b7c334a5_scopeParser{._field_p=(*_self_)._field_p, };;
	_1b7c3e03d_build(&_21417_ssp, _21034_tokens,_21117_s);
	return _21117_s;;
}



inline jule::Ptr<_1ea31610a_VarDecl> _1b7c35661_buildVarSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _22134_tokens) {
	jule::Ptr<_1ea31610a_VarDecl> _22217_v = _1b7c53096_buildVar((*_self_)._field_p, _22134_tokens);;
	_22217_v.get()._field_Scope=(*_self_)._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1ea3164b2_RetSt> _1b7c3596e_buildRetSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _22733_tokens) {
	jule::Ptr<_1ea3164b2_RetSt> _22817_st = jule::new_ptr<_1ea3164b2_RetSt>(_1ea3164b2_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _22733_tokens);
	};
	return _22817_st;;
}



inline jule::Ptr<_1ea316b22_Iter> _1b7c35c7c_buildWhileNextIter(_1b7c334a5_scopeParser* _self_, jule::Ptr<_1b7c32b7a_stmt>& _23842_s) {
	jule::Ptr<_1ea316b22_Iter> _23917_it = jule::new_ptr<_1ea316b22_Iter>(_1ea316b22_Iter{._field_Token=_23842_s.get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _24217_tokens = _23842_s.get()._field_tokens.slice(1LL);;
	jule::Ptr<_1ea3173e7_WhileKind> _24317_kind = jule::new_ptr<_1ea3173e7_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _24217_tokens);
	};
	if (_1b7c34374_isLastSt(&(*_self_))) {
		_1b7c34693_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1b7c34e9b_next(&(*_self_)).get()._field_tokens;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _25517_stTokens = _1b7c49c91_getBlockExpr(_24217_tokens);;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1b7c32b7a_stmt> _25721_stmt = jule::new_ptr<_1b7c32b7a_stmt>(_1b7c32b7a_stmt{._field_tokens=_25517_stTokens, ._field_terminated=_23842_s.get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1b7c3dc1e_buildSt(&(*_self_), _25721_stmt);
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _26617_blockTokens = _1b7c4cd60_range(_26517_i,jule::Str("{", 1),jule::Str("}", 1),_24217_tokens);;
	if ((_26617_blockTokens == nullptr)) {
		_1b7c33b37_stop(&(*_self_));
		_1b7c34693_pushErr(&(*_self_), _23917_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1b7c34693_pushErr(&(*_self_), _24217_tokens[_26517_i],jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1b7c35353_buildScope(&(*_self_), _26617_blockTokens,_24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type39);
	return _23917_it;;
}



inline jule::Ptr<_1ea3173e7_WhileKind> _1b7c3608a_buildWhileIterKind(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _28342_tokens) {
	return jule::new_ptr<_1ea3173e7_WhileKind>(_1ea3173e7_WhileKind{._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c36398_getRangeKindKeysTokens(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _29018_vars;;
	jule::Slice<_22ca31eb9_Log> _29024_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_28946_toks,static_cast<jule::U64>(8LLU),true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1ea31610a_VarDecl> _1b7c366a6_buildRangeKindKey(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _29541_tokens) {
	if ((_29541_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ea31610a_VarDecl> _29917_key = jule::new_ptr<_1ea31610a_VarDecl>(_1ea31610a_VarDecl{._field_Token=_29541_tokens[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if ((_29541_tokens.len() == 1LL)) {
			_1b7c34693_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=_29541_tokens[1LL];
	} else if ((_29541_tokens.len() > 1LL)) {
		_1b7c34693_pushErr(&(*_self_), _29541_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c34693_pushErr(&(*_self_), _29917_key.get()._field_Token,jule::Str("invalid syntax", 14));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1ea31610a_VarDecl>> _1b7c369b4_buildRangeKindKeys(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>& _32042_parts) {
	jule::Slice<jule::Ptr<_1ea31610a_VarDecl>> _32117_keys = nullptr;;
	{
		auto &expr = _32042_parts;
		auto it = expr.begin();
		_iter_begin_1ab504403:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1b7c366a6_buildRangeKindKey(&(*_self_), _32221_tokens));;
			}
			_iter_next_1ab504403:;
			++it;
			goto _iter_begin_1ab504403;
		}
		_iter_end_1ab504403:;
	};
	return _32117_keys;;
}



inline void _1b7c36d05_setupRangeKindKeysPlain(_1b7c334a5_scopeParser* _self_, jule::Ptr<_1ea317c88_RangeKind>& _32847_rng, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _32917_keyTokens = _1b7c36398_getRangeKindKeysTokens(&(*_self_), _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1b7c34693_pushErr(&(*_self_), _32847_rng.get()._field_InToken,jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1ea31610a_VarDecl>> _33617_keys = _1b7c369b4_buildRangeKindKeys(&(*_self_), _32917_keyTokens);;
	_32847_rng.get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		_32847_rng.get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1b7c37157_setupRangeKindKeysExplicit(_1b7c334a5_scopeParser* _self_, jule::Ptr<_1ea317c88_RangeKind>& _34350_rng, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _34517_rang = _1b7c4cd60_range(_34417_i,jule::Str("(", 1),jule::Str(")", 1),_34372_tokens);;
	if ((_34417_i < _34372_tokens.len())) {
		_1b7c34693_pushErr(&(*_self_), _34350_rng.get()._field_InToken,jule::Str("invalid syntax", 14));
	};
	_1b7c36d05_setupRangeKindKeysPlain(&(*_self_), _34350_rng,_34517_rang);
}



inline void _1b7c37487_setupRangeKindKeys(_1b7c334a5_scopeParser* _self_, jule::Ptr<_1ea317c88_RangeKind>& _35242_rng, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _35264_tokens) {
	if ((_35264_tokens[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((_35264_tokens[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1b7c34693_pushErr(&(*_self_), _35264_tokens[0LL],jule::Str("invalid syntax", 14));
			return;;
		};
		_1b7c37157_setupRangeKindKeysExplicit(&(*_self_), _35242_rng,_35264_tokens);
		return;;
	};
	_1b7c36d05_setupRangeKindKeysPlain(&(*_self_), _35242_rng,_35264_tokens);
}



inline jule::Ptr<_1ea317c88_RangeKind> _1b7c378d8_buildRangeIterKind(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _36442_var_tokens, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _36514_exprTokens, jule::Ptr<_212a0c2ab_Token>& _36541_inToken) {
	jule::Ptr<_1ea317c88_RangeKind> _36617_rng = jule::new_ptr<_1ea317c88_RangeKind>(_1ea317c88_RangeKind{._field_InToken=_36541_inToken, });;
	if ((_36514_exprTokens.len() == 0LL)) {
		_1b7c34693_pushErr(&(*_self_), _36617_rng.get()._field_InToken,jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _36514_exprTokens);
	if ((_36442_var_tokens.len() > 0LL)) {
		_1b7c37487_setupRangeKindKeys(&(*_self_), _36617_rng,_36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1b7c37c90_buildCommonIterKind(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _38043_tokens, jule::Ptr<_212a0c2ab_Token>& _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto &expr = _38043_tokens;
		auto it = expr.begin();
		_iter_begin_1ab50ec16:;
		if (it != expr.end()) {
			jule::I64 _38214_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab511311:;
							{
								(_38117_braceN)++;
								goto _iter_next_1ab50ec16;
							}
						}
						else {
							_case_begin_1ab510e04:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1ab510be5:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1ab50ec16;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1ab5113aa:;
						{
							jule::Slice<jule::Ptr<_212a0c2ab_Token>> _39925_declTokens = _38043_tokens.slice(0LL,_38214_i);;
							jule::Slice<jule::Ptr<_212a0c2ab_Token>> _40025_exprTokens = _38043_tokens.slice((_38214_i + 1LL));;
							return jule::Any(_1b7c378d8_buildRangeIterKind(&(*_self_), _39925_declTokens,_40025_exprTokens,_38221_tok), &__jule_any_type41);;
						}
					}
					_match_end_1ab511b6e:;
				};
			}
			_iter_next_1ab50ec16:;
			++it;
			_38214_i++;
			goto _iter_begin_1ab50ec16;
		}
		_iter_end_1ab50ec16:;
	};
	return jule::Any(_1b7c3608a_buildWhileIterKind(&(*_self_), _38043_tokens), &__jule_any_type39);;
}



inline jule::Ptr<_1ea316b22_Iter> _1b7c3809d_buildCommonIter(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _40738_tokens) {
	jule::Ptr<_1ea316b22_Iter> _40817_it = jule::new_ptr<_1ea316b22_Iter>(_1ea316b22_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1b7c33b37_stop(&(*_self_));
		_1b7c34693_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _41817_exprTokens = _1b7c49c91_getBlockExpr(_40738_tokens);;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1b7c37c90_buildCommonIterKind(&(*_self_), _41817_exprTokens,_40817_it.get()._field_Token);
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _42317_scopeTokens = _1b7c4cd60_range(_42217_i,jule::Str("{", 1),jule::Str("}", 1),_40738_tokens);;
	if ((_42317_scopeTokens == nullptr)) {
		_1b7c33b37_stop(&(*_self_));
		_1b7c34693_pushErr(&(*_self_), _40817_it.get()._field_Token,jule::Str("body is not exist", 17));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1b7c34693_pushErr(&(*_self_), _40738_tokens[_42217_i],jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1b7c35353_buildScope(&(*_self_), _42317_scopeTokens,_40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1ea316b22_Iter> _1b7c383ab_buildIterSt(_1b7c334a5_scopeParser* _self_, jule::Ptr<_1b7c32b7a_stmt>& _43735_st) {
	if (_43735_st.get()._field_terminated) {
		return _1b7c35c7c_buildWhileNextIter(&(*_self_), _43735_st);;
	};
	return _1b7c3809d_buildCommonIter(&(*_self_), _43735_st.get()._field_tokens);;
}



inline jule::Ptr<_1ea318140_BreakSt> _1b7c386b9_buildBreakSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _44436_tokens) {
	jule::Ptr<_1ea318140_BreakSt> _44517_brk = jule::new_ptr<_1ea318140_BreakSt>(_1ea318140_BreakSt{._field_Token=_44436_tokens[0LL], });;
	if ((_44436_tokens.len() > 1LL)) {
		if ((_44436_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1b7c34693_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=_44436_tokens[1LL];
			if ((_44436_tokens.len() > 2LL)) {
				_1b7c34693_pushErr(&(*_self_), _44436_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1ea3184e7_ContSt> _1b7c389c7_buildContSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _46235_tokens) {
	jule::Ptr<_1ea3184e7_ContSt> _46317_cont = jule::new_ptr<_1ea3184e7_ContSt>(_1ea3184e7_ContSt{._field_Token=_46235_tokens[0LL], });;
	if ((_46235_tokens.len() > 1LL)) {
		if ((_46235_tokens[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1b7c34693_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=_46235_tokens[1LL];
			if ((_46235_tokens.len() > 2LL)) {
				_1b7c34693_pushErr(&(*_self_), _46235_tokens[1LL],jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1ea31896a_If> _1b7c38cd5_buildIf(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _48031_tokens) {
	jule::Ptr<_1ea31896a_If> _48117_model = jule::new_ptr<_1ea31896a_If>(_1ea31896a_If{._field_Token=_48031_tokens[0LL], });;
	_48031_tokens=_48031_tokens.slice(1LL);
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _48517_exprTokens = _1b7c49c91_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1b7c34693_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _49217_scopeTokens = _1b7c4cd60_range(_48617_i,jule::Str("{", 1),jule::Str("}", 1),_48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1b7c33b37_stop(&(*_self_));
		_1b7c34693_pushErr(&(*_self_), _48117_model.get()._field_Token,jule::Str("body is not exist", 17));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_212a0c2ab_Token> _49917_end = _48031_tokens[(_48617_i - 1LL)];;
	if ((_48617_i < _48031_tokens.len())) {
		if ((_48031_tokens[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			_48031_tokens=_48031_tokens.slice(_48617_i);
		} else {
			_1b7c34693_pushErr(&(*_self_), _48031_tokens[_48617_i],jule::Str("invalid syntax", 14));
			_48031_tokens=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _48517_exprTokens);
	_48117_model.get()._field_Scope=_1b7c35353_buildScope(&(*_self_), _49217_scopeTokens,_49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1ea318d22_Else> _1b7c390e3_buildElse(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _51333_tokens) {
	jule::Ptr<_1ea318d22_Else> _51417_els = jule::new_ptr<_1ea318d22_Else>(_1ea318d22_Else{._field_Token=_51333_tokens[0LL], });;
	_51333_tokens=_51333_tokens.slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _51917_scopeTokens = _1b7c4cd60_range(_51817_i,jule::Str("{", 1),jule::Str("}", 1),_51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < _51333_tokens.len())) {
			_1b7c34693_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("else's cannot have any expression", 33));
		} else {
			_1b7c33b37_stop(&(*_self_));
			_1b7c34693_pushErr(&(*_self_), _51417_els.get()._field_Token,jule::Str("body is not exist", 17));
			_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < _51333_tokens.len())) {
		_1b7c34693_pushErr(&(*_self_), _51333_tokens[_51817_i],jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1b7c35353_buildScope(&(*_self_), _51917_scopeTokens,_51333_tokens[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1ea319295_Conditional> _1b7c39401_buildIfElseChain(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _53739_tokens) {
	jule::Ptr<_1ea319295_Conditional> _53817_chain = jule::new_ptr<_1ea319295_Conditional>(_1ea319295_Conditional{._field_Head=_1b7c38cd5_buildIf(&(*_self_), _53739_tokens), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1ab52bb23;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1ea31896a_If> _55025_elif = _1b7c38cd5_buildIf(&(*_self_), _53739_tokens);;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1ab52bb23;
			};
			_53817_chain.get()._field_Default=_1b7c390e3_buildElse(&(*_self_), _53739_tokens);
			goto _iter_end_1ab52bb23;
		}
	_iter_next_1ab52bb23:;
	}
	_iter_end_1ab52bb23:;;
	return _53817_chain;;
}



inline jule::Ptr<_1ea307bbd_Expr> _1b7c3970e_buildCoCallSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _56036_tokens) {
	jule::Ptr<_212a0c2ab_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1ea307bbd_Expr> _56317_e = _1b7c50b87_buildExpr((*_self_)._field_p, _56036_tokens);;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1ab530dbe:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1ea30bba0_FnCallExpr>(&__jule_any_type115).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1ab531144:;
			{
				_1b7c34693_pushErr(&(*_self_), _56113_token,jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1ab5310de:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1ea311204_GotoSt> _1b7c39a1c_buildGotoSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _57635_tokens) {
	jule::Ptr<_1ea311204_GotoSt> _57717_gt = jule::new_ptr<_1ea311204_GotoSt>(_1ea311204_GotoSt{._field_Token=_57635_tokens[0LL], });;
	if ((_57635_tokens.len() == 1LL)) {
		_1b7c34693_pushErr(&(*_self_), _57717_gt.get()._field_Token,jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if ((_57635_tokens.len() > 2LL)) {
		_1b7c34693_pushErr(&(*_self_), _57635_tokens[2LL],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_212a0c2ab_Token> _58617_identToken = _57635_tokens[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c34693_pushErr(&(*_self_), _58617_identToken,jule::Str("invalid syntax", 14));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1ea3114e0_FallSt> _1b7c39d2a_buildFallSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _59635_tokens) {
	jule::Ptr<_1ea3114e0_FallSt> _59717_fll = jule::new_ptr<_1ea3114e0_FallSt>(_1ea3114e0_FallSt{._field_Token=_59635_tokens[0LL]});;
	if ((_59635_tokens.len() > 1LL)) {
		_1b7c34693_pushErr(&(*_self_), _59635_tokens[1LL],jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1ea31996b_TypeAliasDecl> _1b7c3a138_buildTypeAliasSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _60640_tokens) {
	jule::Ptr<_1ea31996b_TypeAliasDecl> _60717_tad = _1b7c52282_buildTypeAliasDecl((*_self_)._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*_self_)._field_s;
	return _60717_tad;;
}



inline void _1b7c3a59a_pushCaseExpr(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _61235_tokens, jule::Ptr<_212a0c2ab_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>& _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1ea30369c_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _61235_tokens,(&(_61921_i)),true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(jule::new_ptr<_1ea307bbd_Expr>(_1ea307bbd_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type97)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1b7c34693_pushErr(&(*_self_), _61235_tokens[_61921_i],jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	_61331_exprs = jule::alloc_for_append(_61331_exprs,1);_61331_exprs.__push(_1b7c50b87_buildExpr((*_self_)._field_p, _61235_tokens));;
}



inline jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _1b7c3a9eb_buildCaseExprs(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _63638_tokens, jule::Ptr<_212a0c2ab_Token>& _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1ea307bbd_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto &expr = _63638_tokens;
		auto it = expr.begin();
		_iter_begin_1ab53c2d7:;
		if (it != expr.end()) {
			jule::I64 _64114_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1ab53e718:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1ab53e30b:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1ab53e0ec:;
					};
					goto _iter_next_1ab53c2d7;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1ab53c2d7;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1ab540010:;
						{
							jule::Slice<jule::Ptr<_212a0c2ab_Token>> _65721_exprTokens = _63638_tokens.slice(_64017_j,_64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1b7c34693_pushErr(&(*_self_), _64121_tok,jule::Str("expression missing", 18));
							} else {
								_1b7c3a59a_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1ab540076:;
						{
							_63661_colon=_64121_tok;
							_1b7c3a59a_pushCaseExpr(&(*_self_), _63638_tokens.slice(_64017_j,_64114_i),_64121_tok,_63676_typeMatch,_63717_exprs);
							_63638_tokens=_63638_tokens.slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1ab53ea15:;
				};
			}
			_iter_next_1ab53c2d7:;
			++it;
			_64114_i++;
			goto _iter_begin_1ab53c2d7;
		}
		_iter_end_1ab53c2d7:;
	};
	_1b7c34693_pushErr(&(*_self_), _63638_tokens[0LL],jule::Str("invalid syntax", 14));
	_63638_tokens=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1ea313635_ScopeTree> _1b7c3ad09_buildCaseScope(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _68022_next;;
			({
				__jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool __jule_assign_result = _1b7c3287d_skipSt(_67921_i,_67638_tokens.slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1ab543981;
			};
			jule::Ptr<_212a0c2ab_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1ab543981;
			};
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _68921_scopeTokens = _67638_tokens.slice(0LL,_67717_n);;
			jule::Ptr<_1ea313635_ScopeTree> _69021_scope = _1b7c35353_buildScope(&(*_self_), _68921_scopeTokens,_67638_tokens[_67717_n]);;
			_67638_tokens=_67638_tokens.slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1ab543981:;
	}
	_iter_end_1ab543981:;;
	jule::Ptr<_212a0c2ab_Token> _69417_end;;
	if ((_67638_tokens.len() > 0LL)) {
		_69417_end=_67638_tokens[(_67638_tokens.len() - 1LL)];
	};
	jule::Ptr<_1ea313635_ScopeTree> _69817_scope = _1b7c35353_buildScope(&(*_self_), _67638_tokens,_69417_end);;
	_67638_tokens=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1ea319dde_Case__jule_tuple_bool _1b7c3b1b1_buildCase(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1ea319dde_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ea319dde_Case> _70417_c = jule::new_ptr<_1ea319dde_Case>(_1ea319dde_Case{._field_Token=_70333_tokens[0LL], });;
	_70333_tokens=_70333_tokens.slice(1LL);
	jule::Ptr<_212a0c2ab_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1b7c3a9eb_buildCaseExprs(&(*_self_), _70333_tokens,_70817_colon,_70351_typeMatch);
	_70417_c.get()._field_Scope=_1b7c3ad09_buildCaseScope(&(*_self_), _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ea319dde_Case__jule_tuple_x_1ea318d22_Else _1b7c3b568_buildCases(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1ea319dde_Case__jule_tuple_x_1ea318d22_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ea319dde_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1ea318d22_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_212a0c2ab_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1b7c34693_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_1ab04740d;
			};
			jule::Ptr<_1ea319dde_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1ea319dde_Case__jule_tuple_bool __jule_assign_result = _1b7c3b1b1_buildCase(&(*_self_), _71833_tokens,_71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1ea318d22_Else>(_1ea318d22_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1b7c34693_pushErr(&(*_self_), _72321_tok,jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1ab04740d:;
	}
	_iter_end_1ab04740d:;;
	if (_72117_defNotLast) {
		_1b7c34693_pushErr(&(*_self_), _72017_def.get()._field_Token,jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ea31a5b5_MatchCase> _1b7c3b876_buildMatchCase(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _75237_tokens) {
	jule::Ptr<_1ea31a5b5_MatchCase> _75317_m = jule::new_ptr<_1ea31a5b5_MatchCase>(_1ea31a5b5_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _76317_exprTokens = _1b7c49c91_getBlockExpr(_75237_tokens);;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _76317_exprTokens);
	} else if (_75317_m.get()._field_TypeMatch) {
		_1b7c34693_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _77117_blockToks = _1b7c4cd60_range(_77017_i,jule::Str("{", 1),jule::Str("}", 1),_75237_tokens);;
	if ((_77117_blockToks == nullptr)) {
		_1b7c33b37_stop(&(*_self_));
		_1b7c34693_pushErr(&(*_self_), _75317_m.get()._field_Token,jule::Str("body is not exist", 17));
		_1b7c349b2_pushSuggestion(&(*_self_), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1b7c34693_pushErr(&(*_self_), _75237_tokens[_77017_i],jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1ea319dde_Case__jule_tuple_x_1ea318d22_Else __jule_assign_result = _1b7c3b568_buildCases(&(*_self_), _77117_blockToks,_75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1ea313635_ScopeTree> _1b7c3bb84_buildScopeSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_212a0c2ab_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1b7c34693_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1b7c34693_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1b7c34693_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _81517_scopeTokens = _1b7c4cd60_range(_81417_i,jule::Str("{", 1),jule::Str("}", 1),_78535_tokens);;
	if ((_81517_scopeTokens == nullptr)) {
		_1b7c34693_pushErr(&(*_self_), _78817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1b7c34693_pushErr(&(*_self_), _78535_tokens[_81417_i],jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ea313635_ScopeTree> _82217_scope = _1b7c35353_buildScope(&(*_self_), _81517_scopeTokens,_78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1ea310d4c_LabelSt> _1b7c3be92_buildLabelSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _82836_tokens) {
	jule::Ptr<_1ea310d4c_LabelSt> _82917_lbl = jule::new_ptr<_1ea310d4c_LabelSt>(_1ea310d4c_LabelSt{._field_Token=_82836_tokens[0LL], ._field_Ident=_82836_tokens[0LL].get()._field_Kind});;
	if ((_82836_tokens.len() > 2LL)) {
		_82836_tokens=_82836_tokens.slice(2LL);
		_1b7c34c37_insertAsNext(&(*_self_), _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1ea312ce9_StmtData__jule_tuple_bool _1b7c3c2a0_buildIdSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _84333_tokens) {
	__jule_tuple__1ea312ce9_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((_84333_tokens.len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_212a0c2ab_Token> _84817_token = _84333_tokens[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ab05d2ae:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1b7c3be92_buildLabelSt(&(*_self_), _84333_tokens), &__jule_any_type59);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ab05d259:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b7c4b2c0_assignInfo> _1b7c3c5ad_buildAssignInfo(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _85739_tokens) {
	jule::Ptr<_1b7c4b2c0_assignInfo> _85817_info = jule::new_ptr<_1b7c4b2c0_assignInfo>(_1b7c4b2c0_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto &expr = _85739_tokens;
		auto it = expr.begin();
		_iter_begin_1ab05ea52:;
		if (it != expr.end()) {
			jule::I64 _86214_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab06116e:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1ab060c62:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1ab060a53:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1ab06149e:;
						{
							goto _iter_next_1ab05ea52;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1ab061515:;
						{
							goto _iter_next_1ab05ea52;
						}
					}
					else if ((!(_212a11d93_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1ab06157b:;
						{
							goto _iter_next_1ab05ea52;
						}
					}
					_match_end_1ab061218:;
				};
				_85817_info.get()._field_l=_85739_tokens.slice(0LL,_86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= _85739_tokens.len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_212a11aeb_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1ab05ea52;
				};
				_85817_info.get()._field_r=_85739_tokens.slice((_86214_i + 1LL));
				if (_212a11aeb_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1b7c34693_pushErr(&(*_self_), _85817_info.get()._field_r[0LL],jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1ab05ea52;
			}
			_iter_next_1ab05ea52:;
			++it;
			_86214_i++;
			goto _iter_begin_1ab05ea52;
		}
		_iter_end_1ab05ea52:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1ea311aea_AssignLeft> _1b7c3c8bb_buildAssignL(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _90536_tokens) {
	jule::Ptr<_1ea311aea_AssignLeft> _90617_l = jule::new_ptr<_1ea311aea_AssignLeft>(_1ea311aea_AssignLeft{._field_Token=_90536_tokens[0LL], });;
	if ((_90536_tokens[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1ea311aea_AssignLeft>> _1b7c3cbc9_buildAssignLs(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>& _91637_parts) {
	jule::Slice<jule::Ptr<_1ea311aea_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto &expr = _91637_parts;
		auto it = expr.begin();
		_iter_begin_1ab068242:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _91821_part = *it;
			{
				jule::Ptr<_1ea311aea_AssignLeft> _91921_l = _1b7c3c8bb_buildAssignL(&(*_self_), _91821_part);;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1ab068242:;
			++it;
			goto _iter_begin_1ab068242;
		}
		_iter_end_1ab068242:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool _1b7c3ced7_buildPlainAssign(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _92640_tokens) {
	__jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b7c4b2c0_assignInfo> _92717_info = _1b7c3c5ad_buildAssignInfo(&(*_self_), _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ea312139_AssignSt> _93217_assign = jule::new_ptr<_1ea312139_AssignSt>(_1ea312139_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _93618_parts;;
	jule::Slice<_22ca31eb9_Log> _93625_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_92717_info.get()._field_l,static_cast<jule::U64>(8LLU),true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1b7c3cbc9_buildAssignLs(&(*_self_), _93618_parts);
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1b7c50b87_buildExpr((*_self_)._field_p, _92717_info.get()._field_r);
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool _1b7c3d2e5_buildDeclAssign(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _95038_tokens) {
	__jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_212a0c2ab_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ea312139_AssignSt> _96117_assign = jule::new_ptr<_1ea312139_AssignSt>(_1ea312139_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _96617_rang = _1b7c4cd60_range(_96517_i,jule::Str("(", 1),jule::Str(")", 1),_95038_tokens);;
	if ((_96617_rang == nullptr)) {
		_1b7c34693_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_212a0c2ab_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1b7c50b87_buildExpr((*_self_)._field_p, _97321_exprTokens);
	};
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _97818_parts;;
	jule::Slice<_22ca31eb9_Log> _97825_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_96617_rang,static_cast<jule::U64>(8LLU),true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &expr = _97818_parts;
		auto it = expr.begin();
		_iter_begin_1ab073aee:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1b7c34693_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ab073aee;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1b7c34693_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
						goto _iter_next_1ab073aee;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1b7c34693_pushErr(&(*_self_), _95617_token,jule::Str("invalid syntax", 14));
					goto _iter_next_1ab073aee;
				};
				jule::Ptr<_1ea311aea_AssignLeft> _101421_l = _1b7c3c8bb_buildAssignL(&(*_self_), _98421_part);;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1ab073aee:;
			++it;
			goto _iter_begin_1ab073aee;
		}
		_iter_end_1ab073aee:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool _1b7c3d603_buildAssignSt(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _102337_tokens) {
	__jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1b7c4b666_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _102337_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ab07c850:;
			{
				({
					__jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool __jule_assign_result = _1b7c3d2e5_buildDeclAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1ab07c443:;
			{
				({
					__jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool __jule_assign_result = _1b7c3ced7_buildPlainAssign(&(*_self_), _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1ab07c3dd:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ea30855e_UseExpr> _1b7c3d911_buildUseExpr(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _103836_tokens) {
	if ((_103836_tokens.len() == 1LL)) {
		_1b7c34693_pushErr(&(*_self_), _103836_tokens[0LL],jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1ea30855e_UseExpr> _104317_ue = jule::new_ptr<_1ea30855e_UseExpr>(_1ea30855e_UseExpr{._field_Token=_103836_tokens[0LL], });;
	_103836_tokens=_103836_tokens.slice(1LL);
	_104317_ue.get()._field_Expr=_1b7c50b87_buildExpr((*_self_)._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1b7c3dc1e_buildSt(_1b7c334a5_scopeParser* _self_, jule::Ptr<_1b7c32b7a_stmt>& _105131_st) {
	jule::Ptr<_212a0c2ab_Token> _105217_token = _105131_st.get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1ea312ce9_StmtData__jule_tuple_bool __jule_assign_result = _1b7c3c2a0_buildIdSt(&(*_self_), _105131_st.get()._field_tokens);
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1ea312139_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1ea312139_AssignSt__jule_tuple_bool __jule_assign_result = _1b7c3d603_buildAssignSt(&(*_self_), _105131_st.get()._field_tokens);
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type61);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ab0828dd:;
			{
				return jule::Any(_1b7c3d911_buildUseExpr(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1ab082a53:;
			{
				return jule::Any(_1b7c35661_buildVarSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type18);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1ab082ab9:;
			{
				return jule::Any(_1b7c3596e_buildRetSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type65);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1ab082b74:;
			{
				return jule::Any(_1b7c383ab_buildIterSt(&(*_self_), _105131_st), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1ab082bda:;
			{
				return jule::Any(_1b7c386b9_buildBreakSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1ab082c51:;
			{
				return jule::Any(_1b7c389c7_buildContSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1ab082cb7:;
			{
				return jule::Any(_1b7c39401_buildIfElseChain(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1ab082d2d:;
			{
				return jule::Any(_1b7c3970e_buildCoCallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1ab082d94:;
			{
				return jule::Any(_1b7c39a1c_buildGotoSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1ab082e0a:;
			{
				return jule::Any(_1b7c39d2a_buildFallSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ab082e71:;
			{
				return jule::Any(_1b7c3a138_buildTypeAliasSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1ab082ed7:;
			{
				return jule::Any(_1b7c3b876_buildMatchCase(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1ab08305e:;
			{
				return jule::Any(_1b7c3bb84_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab0830d6:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return jule::Any(_1b7c3bb84_buildScopeSt(&(*_self_), _105131_st.get()._field_tokens), &__jule_any_type54);;
				};
			}
		}
		_match_end_1ab08279a:;
	};
	jule::Ptr<_1ea307bbd_Expr> _110117_expr = _1b7c50b87_buildExpr((*_self_)._field_p, _105131_st.get()._field_tokens);;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type55);;
	};
	_1b7c34693_pushErr(&(*_self_), _105217_token,jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1b7c3e03d_build(_1b7c334a5_scopeParser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _110929_tokens, jule::Ptr<_1ea313635_ScopeTree>& _110952_s) {
	if ((_110952_s == nullptr)) {
		return;;
	};
	(*_self_)._field_stmts=_1b7c33021_splitStmts(_110929_tokens);
	(*_self_)._field_pos=-1LL;
	(*_self_)._field_s=_110952_s;
	while (((!(_1b7c34374_isLastSt(&(*_self_)))) && (!(_1b7c34110_finished(&(*_self_)))))) {
		{
			jule::Ptr<_1b7c32b7a_stmt> _111721_st = _1b7c34e9b_next(&(*_self_));;
			jule::Any _111821_data = _1b7c3dc1e_buildSt(&(*_self_), _111721_st);;
			if ((_111821_data != nullptr)) {
				(*_self_)._field_s.get()._field_Stmts = jule::alloc_for_append((*_self_)._field_s.get()._field_Stmts,1);(*_self_)._field_s.get()._field_Stmts.__push(_1ea31302a_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1b7c33d9b_stopped(&(*_self_))) {
				goto _iter_end_1ab08b342;
			};
		}
	_iter_next_1ab08b342:;
	}
	_iter_end_1ab08b342:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c334a5_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1b7c4025e_pushErr(_1b7c3e9bc_exprBuilder* _self_, jule::Ptr<_212a0c2ab_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1b7c5055a_pushErr((*_self_)._field_p.ptr(), _4426_token,_4441_fmt,_4454_args);
}



inline void _1b7c4057d_pushSuggestion(_1b7c3e9bc_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1b7c50879_pushSuggestion((*_self_)._field_p.ptr(), _4933_fmt,_4946_args);
}



inline jule::Ptr<_1ea30884a_TupleExpr> _1b7c4088b_buildTuple(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>& _5334_parts) {
	jule::Ptr<_1ea30884a_TupleExpr> _5417_tuple = jule::new_ptr<_1ea30884a_TupleExpr>(_1ea30884a_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1ea307bbd_Expr>>::alloc(0LL, _5334_parts.len())});;
	{
		auto &expr = _5334_parts;
		auto it = expr.begin();
		_iter_begin_1ab0ab373:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1b7c493ab_buildFromTokens(&(*_self_), _5721_part));;
			}
			_iter_next_1ab0ab373:;
			++it;
			goto _iter_begin_1ab0ab373;
		}
		_iter_end_1ab0ab373:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1ea308c02_LitExpr> _1b7c40b99_buildLit(_1b7c3e9bc_exprBuilder* _self_, jule::Ptr<_212a0c2ab_Token> _6327_token) {
	return jule::new_ptr<_1ea308c02_LitExpr>(_1ea308c02_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c40ea7_buildPrimitiveType(_1b7c3e9bc_exprBuilder* _self_, jule::Ptr<_212a0c2ab_Token>& _7038_token) {
	return _1b7c6037d_buildPrimType(_7038_token);;
}



inline jule::Any _1b7c412b5_buildSingle(_1b7c3e9bc_exprBuilder* _self_, jule::Ptr<_212a0c2ab_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1ab0acd7a:;
			{
				return jule::Any(_1b7c40b99_buildLit(&(*_self_), _7434_token), &__jule_any_type109);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab0ace02:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1ea30a440_VariadicExpr>(_1ea30a440_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type84);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1ab0ace79:;
			{
				return jule::Any(_1b7c4a665_buildIdentExpr(_7434_token), &__jule_any_type88);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ab0ad001:;
			{
				return jule::Any(_1b7c40ea7_buildPrimitiveType(&(*_self_), _7434_token), &__jule_any_type97);;
			}
		}
		_match_end_1ab0abd79:;
	};
	_1b7c4025e_pushErr(&(*_self_), _7434_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ea30987e_IdentExpr> _1b7c415c3_buildCppLinkedIdent(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _9543_tokens) {
	if ((_9543_tokens[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if ((_9543_tokens[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1b7c4025e_pushErr(&(*_self_), _9543_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_212a0c2ab_Token> _10317_token = _9543_tokens[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c4025e_pushErr(&(*_self_), _9543_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea30987e_IdentExpr> _10917_expr = _1b7c4a665_buildIdentExpr(_10317_token);;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1ea30a088_UnaryExpr> _1b7c418d1_buildUnary(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _11433_tokens) {
	jule::Ptr<_212a0c2ab_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1b7c4025e_pushErr(&(*_self_), _11517_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_212a0c9b5_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1b7c4025e_pushErr(&(*_self_), _11517_op,jule::Str("invalid unary operator: @", 25),jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type7)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1ea30a088_UnaryExpr>(_1ea30a088_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _11433_tokens)});;
}



inline jule::Ptr<_1ea30b122_SubIdentExpr> _1b7c41bde_buildObjSubIdent(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_212a0c2ab_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL,_13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _13717_identToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ea30b122_SubIdentExpr>(_1ea30b122_SubIdentExpr{._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1ea30ab9e_NsSelectionExpr> _1b7c41eec_buildNsSubIdent(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _15039_tokens) {
	jule::Ptr<_1ea30ab9e_NsSelectionExpr> _15117_ns = jule::new_ptr<_1ea30ab9e_NsSelectionExpr>();;
	{
		auto &expr = _15039_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0b89ac:;
		if (it != expr.end()) {
			jule::I64 _15214_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1b7c4025e_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1b7c4025e_pushErr(&(*_self_), _15221_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab0b89ac:;
			++it;
			_15214_i++;
			goto _iter_begin_1ab0b89ac;
		}
		_iter_end_1ab0b89ac:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL,(_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c4230a_buildType(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1ea30369c_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _16933_tokens,(&(_17017_i)),false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1b7c4025e_pushErr(&(*_self_), _16933_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < _16933_tokens.len())) {
		_1b7c4025e_pushErr(&(*_self_), _16933_tokens[_17017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1b7c42618_buildSubIdent(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _18337_tokens) {
	jule::I64 _18413_i = (_18337_tokens.len() - 2LL);;
	jule::Ptr<_212a0c2ab_Token> _18513_token = _18337_tokens[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1ab0c1377:;
			{
				return jule::Any(_1b7c41bde_buildObjSubIdent(&(*_self_), _18337_tokens), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ab0c1872:;
			{
				return jule::Any(_1b7c41eec_buildNsSubIdent(&(*_self_), _18337_tokens), &__jule_any_type98);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab0c18d8:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return jule::Any(_1b7c4230a_buildType(&(*_self_), _18337_tokens), &__jule_any_type97);;
				};
			}
		}
		_match_end_1ab0c171d:;
	};
	_1b7c4025e_pushErr(&(*_self_), _18513_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ea30a440_VariadicExpr> _1b7c42926_buildVariadic(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _20136_tokens) {
	jule::Ptr<_212a0c2ab_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL,(_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1ea30a440_VariadicExpr>(_1ea30a440_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _20136_tokens)});;
}



inline jule::Any _1b7c42c34_buildOpRight(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _21036_tokens) {
	jule::Ptr<_212a0c2ab_Token> _21117_token = _21036_tokens[(_21036_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1ab0c5843:;
			{
				_21036_tokens=_21036_tokens.slice(0LL,(_21036_tokens.len() - 1LL));
				jule::Any _21521_d = _1b7c48c90_build(&(*_self_), _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type115) {
						_case_begin_1ab0c6e1b:;
						{
							_21521_d.cast_ptr<_1ea30bba0_FnCallExpr>(&__jule_any_type115).get()._field_Exception=jule::new_ptr<_1ea313635_ScopeTree>(_1ea313635_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1ab0c704d:;
				};
			}
		}
		_match_end_1ab0c5678:;
	};
	_1b7c4025e_pushErr(&(*_self_), _21117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ea307ea9_RangeExpr> _1b7c43064_buildBetweenParentheses(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1b7c4025e_pushErr(&(*_self_), _23146_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL,(_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1ea307ea9_RangeExpr>(_1ea307ea9_RangeExpr{._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _23146_tokens)});;
}



inline jule::Ptr<_1ea30a7e7_CastExpr> _1b7c43383_tryBuildCast(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto &expr = _24336_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0ca309:;
		if (it != expr.end()) {
			jule::I64 _24513_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab0cb8d2:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1ab0ca309;
							}
						}
						else {
							_case_begin_1ab0cb4c5:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1ab0cb2b6:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1ab0ca309;
				} else if (((_24513_i + 1LL) == _24336_tokens.len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _26421_typeTokens = _24336_tokens.slice(0LL,(_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _26521_exprTokens = _24336_tokens.slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_212a0c2ab_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1ea30a7e7_CastExpr> _27721_cast = jule::new_ptr<_1ea30a7e7_CastExpr>(_1ea30a7e7_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1b7c4025e_pushErr(&(*_self_), _26521_exprTokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
					_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1b7c4025e_pushErr(&(*_self_), _26421_typeTokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
					_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL,(_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1ea30369c_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _26421_typeTokens,(&(_29125_typeIndex)),true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1b7c4025e_pushErr(&(*_self_), _26421_typeTokens[_29125_typeIndex],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1b7c4cd60_range(_30229_j,jule::Str("(", 1),jule::Str(")", 1),_26521_exprTokens);
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL,_30229_j);
						_27721_cast.get()._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1ab0ca309:;
			++it;
			_24513_i++;
			goto _iter_begin_1ab0ca309;
		}
		_iter_end_1ab0ca309:;
	};
	return nullptr;;
}



inline void _1b7c4374b_pushArg(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ea307bbd_Expr>>& _31731_args, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _31750_tokens, jule::Ptr<_212a0c2ab_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _31768_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_31731_args = jule::alloc_for_append(_31731_args,1);_31731_args.__push(_1b7c493ab_buildFromTokens(&(*_self_), _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _1b7c43a59_buildArgs(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL,(_32632_tokens.len() - 1LL));
	{
		auto &expr = _32632_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0d8ee9:;
		if (it != expr.end()) {
			jule::I64 _33613_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab0da78c:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1ab0da380:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1ab0da171:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ab0d8ee9;
				};
				_1b7c4374b_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last,_33613_i),_33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1ab0d8ee9:;
			++it;
			_33613_i++;
			goto _iter_begin_1ab0d8ee9;
		}
		_iter_end_1ab0d8ee9:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1b7c4374b_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[_33317_last]);
			};
		} else {
			_1b7c4374b_pushArg(&(*_self_), _33217_args,_32632_tokens.slice(_33317_last),_32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _1b7c43d67_buildCallGenerics(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL,(_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _37418_parts;;
	jule::Slice<_22ca31eb9_Log> _37425_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_36840_tokens,static_cast<jule::U64>(8LLU),true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_37425_errs);
	{
		auto &expr = _37418_parts;
		auto it = expr.begin();
		_iter_begin_1ab0e0066:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1ab0e0066;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1ea30369c_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _37721_part,(&(_38121_j)),true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1b7c4025e_pushErr(&(*_self_), _37721_part[_38121_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1ab0e0066:;
			++it;
			goto _iter_begin_1ab0e0066;
		}
		_iter_end_1ab0e0066:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1ea30bba0_FnCallExpr> _1b7c442b8_buildFnCall(_1b7c3e9bc_exprBuilder* _self_, jule::Ptr<_212a0c2ab_Token>& _39235_token, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _39255_expr, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _39276_args) {
	return jule::new_ptr<_1ea30bba0_FnCallExpr>(_1ea30bba0_FnCallExpr{._field_Token=_39235_token, ._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _39255_expr), ._field_Args=_1b7c43a59_buildArgs(&(*_self_), _39276_args), });;
}



inline jule::Any _1b7c445c6_buildParenthesesRange(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _40045_tokens) {
	jule::Ptr<_212a0c2ab_Token> _40117_token = _40045_tokens[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab0e4642:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab0e4eb1:;
						{
							jule::Ptr<_1ea30a7e7_CastExpr> _40625_expr = _1b7c43383_tryBuildCast(&(*_self_), _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type113);;
							};
						}
					}
					_match_end_1ab0e4ce6:;
				};
			}
		}
		_match_end_1ab0e4477:;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_assign_result = _1b7c4d107_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1b7c43064_buildBetweenParentheses(&(*_self_), _41234_args_tokens), &__jule_any_type108);;
	};
	return jule::Any(_1b7c442b8_buildFnCall(&(*_self_), _40117_token,_41218_exprTokens,_41234_args_tokens), &__jule_any_type115);;
}



inline jule::Ptr<_1ea30940b_UnsafeExpr> _1b7c448d4_buildUnsafeExpr(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _42138_tokens) {
	jule::Ptr<_212a0c2ab_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _42517_rangeTokens = _1b7c4cd60_range(_42417_i,jule::Str("{", 1),jule::Str("}", 1),_42138_tokens);;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _42138_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ea30940b_UnsafeExpr>(_1ea30940b_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _42517_rangeTokens)});;
}



inline jule::Ptr<_1ea31512b_FnDecl> _1b7c44be2_buildAnonFn(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _43635_tokens) {
	jule::Ptr<_1ea31512b_FnDecl> _43717_f = _1b7c560bb_buildFn((*_self_)._field_p, _43635_tokens,false,false);;
	if ((!(_1ea31547d_IsAnon(_43717_f.ptr())))) {
		_1b7c4025e_pushErr(&(*_self_), _43717_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1b7c45000_buildUnsafe(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _44535_tokens) {
	{
		auto &_match_expr{ _44535_tokens[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ab0eb0e9:;
			{
				return jule::Any(_1b7c44be2_buildAnonFn(&(*_self_), _44535_tokens), &__jule_any_type16);;
			}
		}
		else {
			_case_begin_1ab0eb55b:;
			{
				return jule::Any(_1b7c448d4_buildUnsafeExpr(&(*_self_), _44535_tokens), &__jule_any_type110);;
			}
		}
		_match_end_1ab0eb4d4:;
	};
}



inline void _1b7c453b8_pushRangeLitPart(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _45539_part, jule::Ptr<_212a0c2ab_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>& _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _4569_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("an expression expected", 22),jule::Slice<jule::Any>());
		return;;
	};
	_45634_parts = jule::alloc_for_append(_45634_parts,1);_45634_parts.__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c456e8_getBraceRangeLitExprParts(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL,(_46648_tokens.len() - 1LL));
	{
		auto &expr = _46648_tokens;
		auto it = expr.begin();
		_iter_begin_1ab1006e7:;
		if (it != expr.end()) {
			jule::I64 _47713_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab101e8a:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1ab101a7d:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1ab10186e:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1ab1006e7;
				};
				_1b7c453b8_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last,_47713_i),_47716_token,_47217_parts);
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1ab1006e7:;
			++it;
			_47713_i++;
			goto _iter_begin_1ab1006e7;
		}
		_iter_end_1ab1006e7:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1b7c453b8_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[_47417_last],_47217_parts);
			};
		} else {
			_1b7c453b8_pushRangeLitPart(&(*_self_), _46648_tokens.slice(_47417_last),_46648_tokens[(_47417_last - 1LL)],_47217_parts);
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1ea30c62e_FieldExprPair> _1b7c45a17_buildFieldExprPair(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _50841_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea30c62e_FieldExprPair> _51317_pair = jule::new_ptr<_1ea30c62e_FieldExprPair>(_1ea30c62e_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1ea307bbd_Expr> _1b7c45d25_buildStructLitExpr(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _52142_tokens) {
	jule::Ptr<_212a0c2ab_Token> _52217_token = _52142_tokens[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (_52142_tokens.len() > 1LL))) {
		_52217_token=_52142_tokens[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1ea307bbd_Expr>(_1ea307bbd_Expr{._field_Token=_52217_token, ._field_End=_52142_tokens[(_52142_tokens.len() - 1LL)], ._field_Kind=jule::Any(_1b7c45a17_buildFieldExprPair(&(*_self_), _52142_tokens), &__jule_any_type86)});;
		};
	};
	return _1b7c493ab_buildFromTokens(&(*_self_), _52142_tokens);;
}



inline jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _1b7c46133_buildStructLitExprs(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _53717_parts = _1b7c456e8_getBraceRangeLitExprParts(&(*_self_), _53643_tokens);;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ea307bbd_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1ea307bbd_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto &expr = _53717_parts;
		auto it = expr.begin();
		_iter_begin_1ab109e2c:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1b7c45d25_buildStructLitExpr(&(*_self_), _54321_part));;
			}
			_iter_next_1ab109e2c:;
			++it;
			goto _iter_begin_1ab109e2c;
		}
		_iter_end_1ab109e2c:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1ea30cd7c_StructLit> _1b7c46463_buildTypedStructLiteral(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1ea30369c_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _54946_tokens,(&(_55017_i)),true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1b7c4025e_pushErr(&(*_self_), _54946_tokens[_55017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_212a0c2ab_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1b7c4025e_pushErr(&(*_self_), _56013_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ea30cd7c_StructLit>(_1ea30cd7c_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1b7c46133_buildStructLitExprs(&(*_self_), _54946_tokens)});;
}



inline jule::Ptr<_1ea307bbd_Expr> _1b7c46782_buildBraceLitPart(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _57341_tokens) {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _57425_r;;
	({
		__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_assign_result = _1b7c4a126_splitDelim(_57341_tokens,static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1ea307bbd_Expr>(_1ea307bbd_Expr{._field_Token=_57341_tokens[0LL], ._field_End=_57341_tokens[(_57341_tokens.len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ea30dac5_KeyValPair>(_1ea30dac5_KeyValPair{._field_Key=_1b7c493ab_buildFromTokens(&(*_self_), _57418_l), ._field_Val=_1b7c493ab_buildFromTokens(&(*_self_), _57425_r), ._field_Colon=_57341_tokens[_57418_l.len()]}), &__jule_any_type87)});;
	};
	return _1b7c493ab_buildFromTokens(&(*_self_), _57341_tokens);;
}



inline jule::Ptr<_1ea30d300_BraceLit> _1b7c46a90_buildBraceLit(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _59037_tokens) {
	jule::Ptr<_1ea30d300_BraceLit> _59117_lit = jule::new_ptr<_1ea30d300_BraceLit>(_1ea30d300_BraceLit{._field_Token=_59037_tokens[0LL], ._field_End=_59037_tokens[(_59037_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _59617_parts = _1b7c456e8_getBraceRangeLitExprParts(&(*_self_), _59037_tokens);;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1ea307bbd_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto &expr = _59617_parts;
		auto it = expr.begin();
		_iter_begin_1ab114552:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1b7c46782_buildBraceLitPart(&(*_self_), _60221_part));;
			}
			_iter_next_1ab114552:;
			++it;
			goto _iter_begin_1ab114552;
		}
		_iter_end_1ab114552:;
	};
	return _59117_lit;;
}



inline jule::Any _1b7c46d9d_buildBraceRange(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _60939_tokens) {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_212a0c2ab_Token__jule_tuple_int __jule_assign_result = _1b7c4a90c_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1ab116334:;
			{
				return jule::Any(_1b7c46a90_buildBraceLit(&(*_self_), _60939_tokens), &__jule_any_type116);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1ab11639a:;
			{
				_1b7c4025e_pushErr(&(*_self_), _60939_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab115476:;
	};
	jule::Ptr<_212a0c2ab_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL,(_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1b7c48c90_build(&(*_self_), _61018_exprTokens);;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type115) {
				_case_begin_1ab119645:;
				{
					_60939_tokens=_60939_tokens.slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_212a0c2ab_Token>> _63225_rangeTokens = _1b7c4cd60_range(_63125_i,jule::Str("{", 1),jule::Str("}", 1),_60939_tokens);;
					jule::Ptr<_1ea30bba0_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1ea30bba0_FnCallExpr>(&__jule_any_type115);;
					if (_1ea30c277_Ignored(_63325_model.ptr())) {
						_1b7c4025e_pushErr(&(*_self_), _62113_elseToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
						_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72),jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1b7c515c2_buildScope((*_self_)._field_p, _63225_rangeTokens,_60939_tokens[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1ab119227:;
				{
					_1b7c4025e_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1ab1190c3:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ab11e0c8:;
			{
				return _1b7c45000_buildUnsafe(&(*_self_), _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ab11e13e:;
			{
				return jule::Any(_1b7c44be2_buildAnonFn(&(*_self_), _60939_tokens), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ab11de30:;
			{
				return jule::Any(_1b7c46463_buildTypedStructLiteral(&(*_self_), _60939_tokens), &__jule_any_type114);;
			}
		}
		else {
			_case_begin_1ab11b900:;
			{
				_1b7c4025e_pushErr(&(*_self_), _61018_exprTokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab11d2b4:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c471ab_getEnumerableParts(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL,(_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _66318_parts;;
	jule::Slice<_22ca31eb9_Log> _66325_errors;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_66141_tokens,static_cast<jule::U64>(8LLU),true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1ea30e2ac_SliceExpr> _1b7c474b9_buildSlice(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _66833_tokens) {
	jule::Ptr<_1ea30e2ac_SliceExpr> _66917_slc = jule::new_ptr<_1ea30e2ac_SliceExpr>(_1ea30e2ac_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _67417_parts = _1b7c471ab_getEnumerableParts(&(*_self_), _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1ea307bbd_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto &expr = _67417_parts;
		auto it = expr.begin();
		_iter_begin_1ab123b9e:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1ab123b9e;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1b7c493ab_buildFromTokens(&(*_self_), _68021_p));;
			}
			_iter_next_1ab123b9e:;
			++it;
			goto _iter_begin_1ab123b9e;
		}
		_iter_end_1ab123b9e:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1ea30eb2b_IndexingExpr> _1b7c4791a_buildIndexing(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _69113_tokens, jule::Ptr<_212a0c2ab_Token> _69135_errorToken) {
	jule::Ptr<_212a0c2ab_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL,(_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _69135_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea307bbd_Expr> _69817_expr = _1b7c493ab_buildFromTokens(&(*_self_), _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ea307bbd_Expr> _70217_index = _1b7c493ab_buildFromTokens(&(*_self_), _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ea30eb2b_IndexingExpr>(_1ea30eb2b_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1ea310236_SlicingExpr> _1b7c47eae_buildSlicing(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _71436_exprTokens, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _71463_start, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _71514_to, jule::Ptr<_212a0c2ab_Token>& _71533_errorToken, jule::Ptr<_212a0c2ab_Token> _71557_end) {
	jule::Ptr<_1ea310236_SlicingExpr> _71617_slc = jule::new_ptr<_1ea310236_SlicingExpr>(_1ea310236_SlicingExpr{._field_Token=_71533_errorToken, ._field_End=_71557_end, ._field_Expr=_1b7c493ab_buildFromTokens(&(*_self_), _71436_exprTokens), });;
	if ((_71463_start.len() > 0LL)) {
		_71617_slc.get()._field_Start=_1b7c493ab_buildFromTokens(&(*_self_), _71463_start);
	};
	if ((_71514_to.len() > 0LL)) {
		_71617_slc.get()._field_To=_1b7c493ab_buildFromTokens(&(*_self_), _71514_to);
	};
	return _71617_slc;;
}



inline jule::Any _1b7c482bc_buildBracketRange(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _73040_tokens) {
	jule::Ptr<_212a0c2ab_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_212a0c2ab_Token__jule_tuple_int __jule_assign_result = _1b7c4a90c_getRangeExprTokens(_73040_tokens);
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1b7c474b9_buildSlice(&(*_self_), _73040_tokens), &__jule_any_type103);;
	} else if ((_73230_rangeN > 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _73117_errorToken,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _74717_splitTokens = _73040_tokens.slice(1LL,(_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _74829_to;;
	({
		__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_assign_result = _1b7c4a126_splitDelim(_74717_splitTokens,static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1b7c47eae_buildSlicing(&(*_self_), _73218_exprTokens,_74818_start,_74829_to,_73117_errorToken,_73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type112);;
	};
	return jule::Any(_1b7c4791a_buildIndexing(&(*_self_), _73218_exprTokens,_73040_tokens,_73117_errorToken), &__jule_any_type111);;
}



inline jule::Any _1b7c485ca_buildData(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _75533_tokens) {
	{
		auto _match_expr{ _75533_tokens.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1ab1305b2:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1ab13067d:;
			{
				return _1b7c412b5_buildSingle(&(*_self_), _75533_tokens[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ab1306e4:;
			{
				if ((_75533_tokens[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1b7c415c3_buildCppLinkedIdent(&(*_self_), _75533_tokens), &__jule_any_type88);;
				};
			}
		}
		_match_end_1ab12ed86:;
	};
	jule::Ptr<_212a0c2ab_Token> _76717_token = _75533_tokens[(_75533_tokens.len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return jule::Any(_1b7c42926_buildVariadic(&(*_self_), _75533_tokens), &__jule_any_type84);;
	};
	_76717_token=_75533_tokens[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab1337e6:;
			{
				if (((_75533_tokens.len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=_75533_tokens[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1b7c4230a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
					};
				};
				return jule::Any(_1b7c418d1_buildUnary(&(*_self_), _75533_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab13394a:;
			{
				if ((_75533_tokens.len() < 3LL)) {
					goto _match_end_1ab1338d4;
				};
				if ((_75533_tokens.len() > 3LL)) {
					jule::Ptr<_212a0c2ab_Token> _78921_t = _75533_tokens[(_75533_tokens.len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1ab1338d4;
					};
				};
				jule::Ptr<_212a0c2ab_Token> _79517_next = _75533_tokens[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1ab1338d4;
				};
				return jule::Any(_1b7c4230a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
			}
		}
		_match_end_1ab1338d4:;
	};
	_76717_token=_75533_tokens[(_75533_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ab133e89:;
			{
				return _1b7c42618_buildSubIdent(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ab1394ab:;
			{
				return jule::Any(_1b7c4230a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab139522:;
			{
				return _1b7c42c34_buildOpRight(&(*_self_), _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab139588:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ab562c8b:;
						{
							return _1b7c445c6_buildParenthesesRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ab562d02:;
						{
							return _1b7c46d9d_buildBraceRange(&(*_self_), _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ab562d68:;
						{
							return _1b7c482bc_buildBracketRange(&(*_self_), _75533_tokens);;
						}
					}
					_match_end_1ab56273b:;
				};
			}
		}
		_match_end_1ab133e34:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1b7c4230a_buildType(&(*_self_), _75533_tokens), &__jule_any_type97);;
	};
	_1b7c4025e_pushErr(&(*_self_), _76717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b7c48982_buildBinop(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_212a0c2ab_Token> _83217_op = _83134_tokens[_83152_i];;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _83317_leftTokens = _83134_tokens.slice(0LL,_83152_i);;
	if ((_1b7c4970d_isTypeOp(_83217_op.get()._field_Kind) && _1b7c499e9_isTypeRange(_83317_leftTokens))) {
		return jule::Any(_1b7c4230a_buildType(&(*_self_), _83134_tokens), &__jule_any_type97);;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _83817_rightTokens = _83134_tokens.slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1b7c4025e_pushErr(&(*_self_), _83134_tokens[_83152_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c4057d_pushSuggestion(&(*_self_), jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ea30b595_BinopExpr>(_1ea30b595_BinopExpr{._field_Left=_1b7c493ab_buildFromTokens(&(*_self_), _83317_leftTokens), ._field_Right=_1b7c493ab_buildFromTokens(&(*_self_), _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type117);;
}



inline jule::Any _1b7c48c90_build(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _85629_tokens) {
	jule::I64 _85713_i = _1b7c4a3bd_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1b7c485ca_buildData(&(*_self_), _85629_tokens);;
	};
	return _1b7c48982_buildBinop(&(*_self_), _85629_tokens,_85713_i);;
}



inline jule::Any _1b7c4909d_buildKind(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _86518_parts;;
	jule::Slice<_22ca31eb9_Log> _86525_errors;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_86433_tokens,static_cast<jule::U64>(8LLU),true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1b7c4088b_buildTuple(&(*_self_), _86518_parts), &__jule_any_type89);;
	};
	return _1b7c48c90_build(&(*_self_), _86433_tokens);;
}



inline jule::Ptr<_1ea307bbd_Expr> _1b7c493ab_buildFromTokens(_1b7c3e9bc_exprBuilder* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ea307bbd_Expr>(_1ea307bbd_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1b7c4909d_buildKind(&(*_self_), _87538_tokens)});;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c3e9bc_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c4b2c0_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1b7c4ee2d_stop(_1b7c4eaed_parser* _self_) {
	(*_self_)._field_ast=nullptr;
}



inline jule::Bool _1b7c50192_stopped(_1b7c4eaed_parser* _self_) {
	return ((*_self_)._field_ast == nullptr);;
}



inline void _1b7c5055a_pushErr(_1b7c4eaed_parser* _self_, jule::Ptr<_212a0c2ab_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*_self_)._field_errors = jule::alloc_for_append((*_self_)._field_errors,1);(*_self_)._field_errors.__push(_1b7c4e05e_compilerErr(_28126_token,_28141_fmt,_28154_args));;
}



inline void _1b7c50879_pushSuggestion(_1b7c4eaed_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1b7c4e48d_pushSuggestion((&((*_self_)._field_errors[((*_self_)._field_errors.len() - 1LL)])),_28633_fmt,_28646_args);
	};
}



inline jule::Ptr<_1ea307bbd_Expr> _1b7c50b87_buildExpr(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _29034_tokens) {
	jule::Ptr<_1b7c3e9bc_exprBuilder> _29117_ep = jule::new_ptr<_1b7c3e9bc_exprBuilder>(_1b7c3e9bc_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1ea307bbd_Expr> _29417_expr = _1b7c493ab_buildFromTokens(_29117_ep.ptr(), _29034_tokens);;
	return _29417_expr;;
}



inline jule::Ptr<_1ea2c0405_Directive> _1b7c50e95_buildDirective(_1b7c4eaed_parser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1b7c5055a_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1b7c5055a_pushErr(&(*_self_), _29837_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ea2c0405_Directive>(_1ea2c0405_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1b7c5121a_pushDirective(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea2c0405_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto &expr = (*_self_)._field_directives;
		auto it = expr.begin();
		_iter_begin_1ab5961ed:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1ab5961ed:;
			++it;
			goto _iter_begin_1ab5961ed;
		}
		_iter_end_1ab5961ed:;
	};
	(*_self_)._field_directives = jule::alloc_for_append((*_self_)._field_directives,1);(*_self_)._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1ea313635_ScopeTree> _1b7c515c2_buildScope(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _32635_tokens, jule::Ptr<_212a0c2ab_Token> _32657_end) {
	jule::Ptr<_1ea313635_ScopeTree> _32717_s = _1b7c31aad_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1b7c334a5_scopeParser _32917_sp = _1b7c334a5_scopeParser{._field_p=_self_, };;
	_1b7c3e03d_build(&_32917_sp, _32635_tokens,_32717_s);
	return _32717_s;;
}



inline __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool _1b7c51a23__buildType(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1b7c60812_typeBuilder _33817_tb = _1b7c60812_typeBuilder{._field_p=_self_, ._field_tokens=_33642_tokens, ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1ea30369c_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c63aac_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool _1b7c51e74_buildType(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_212a0c2ab_Token> _35113_token = _34941_tokens[(*(_35013_i))];;
	jule::Ptr<_1ea30369c_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51a23__buildType(_self_, _34941_tokens,_35013_i,_35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1b7c5055a_pushErr(_self_.ptr(), _35113_token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ea31996b_TypeAliasDecl> _1b7c52282_buildTypeAliasDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= _35943_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea31996b_TypeAliasDecl> _36517_tad = jule::new_ptr<_1ea31996b_TypeAliasDecl>(_1ea31996b_TypeAliasDecl{._field_Token=_35943_tokens[1LL], ._field_Ident=_35943_tokens[1LL].get()._field_Kind, });;
	jule::Ptr<_212a0c2ab_Token> _36917_token = _35943_tokens[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _36917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=_35943_tokens[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= _35943_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _35943_tokens[(_36017_i - 1LL)],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_1ea30369c_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _35943_tokens,(&(_36017_i)),true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < _35943_tokens.len()))) {
		_1b7c5055a_pushErr(_self_.ptr(), _35943_tokens[_36017_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1b7c5e79a_isPub(_36517_tad.get()._field_Ident);
	return _36517_tad;;
}



inline void _1b7c525a1_buildVarTypeAndExpr(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_1ea31610a_VarDecl>& _39944_v, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_212a0c2ab_Token> _40117_tok = _39962_tokens[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= _39962_tokens.len()) || ((_39962_tokens[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_39962_tokens[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1b7c5055a_pushErr(_self_.ptr(), _40117_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1ea30369c_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _39962_tokens,(&(_40017_i)),true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			_39944_v.get()._field_Kind=_40922_t;
			if ((_40017_i >= _39962_tokens.len())) {
				return;;
			};
			_40117_tok=_39962_tokens[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1b7c5055a_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_212a0c2ab_Token>> _42421_exprTokens = _39962_tokens.slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1b7c5055a_pushErr(_self_.ptr(), _40117_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return;;
		};
		_39944_v.get()._field_Expr=_1b7c50b87_buildExpr(_self_, _42421_exprTokens);
	} else {
		_1b7c5055a_pushErr(_self_.ptr(), _40117_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1b7c528c0_buildVarCommon(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_1ea31610a_VarDecl>& _43539_v, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _43556_tokens) {
	_43539_v.get()._field_Token=_43556_tokens[0LL];
	if ((_43539_v.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _43539_v.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	_43539_v.get()._field_Ident=_43539_v.get()._field_Token.get()._field_Kind;
	_43539_v.get()._field_Public=_1b7c5e79a_isPub(_43539_v.get()._field_Ident);
	_43539_v.get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1b7c525a1_buildVarTypeAndExpr(_self_, _43539_v,_43556_tokens);
	};
}



inline void _1b7c52c88_buildVarBegin(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31610a_VarDecl>& _45137_v, jule::I64& _45155_i, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _45164_tokens) {
	jule::Ptr<_212a0c2ab_Token> _45213_tok = _45164_tokens[_45155_i];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ab5b0c95:;
			{
				_45137_v.get()._field_Statically=true;
				goto _case_begin_1ab5b049d;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ab5b049d:;
			{
				(_45155_i)++;
				if ((_45155_i >= _45164_tokens.len())) {
					_1b7c5055a_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				if ((_45164_tokens[_45155_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_45137_v.get()._field_Mutable=true;
					(_45155_i)++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1ab5b0514:;
			{
				(_45155_i)++;
				_45137_v.get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1ab5b0404:;
			{
				_1b7c5055a_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ab5b026c:;
	};
	if ((_45155_i >= _45164_tokens.len())) {
		_1b7c5055a_pushErr(&(*_self_), _45213_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1ea31610a_VarDecl> _1b7c53096_buildVar(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_1ea31610a_VarDecl> _48317_v = jule::new_ptr<_1ea31610a_VarDecl>(_1ea31610a_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1b7c52c88_buildVarBegin(_self_.ptr(), _48317_v,_48217_i,_48132_tokens);
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1b7c528c0_buildVarCommon(_self_, _48317_v,_48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_1ea310995_GenericDecl> _1b7c533a4_buildGeneric(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _50337_tokens) {
	jule::Ptr<_1ea310995_GenericDecl> _50417_g = jule::new_ptr<_1ea310995_GenericDecl>(_1ea310995_GenericDecl{._field_Token=_50337_tokens[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _50417_g.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if ((_50337_tokens.len() > 1LL)) {
		if ((_50337_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1b7c5055a_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		if ((_50337_tokens.len() == 2LL)) {
			_1b7c5055a_pushErr(_self_.ptr(), _50337_tokens[1LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_212a0c2ab_Token>> _52121_constraintTokens = _50337_tokens.slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _52222_parts;;
		jule::Slice<_22ca31eb9_Log> _52229_errors;;
		({
			__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d4e2_partsKind(_52121_constraintTokens,jule::Str("|", 1),true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1ea310522_Constraint>(_1ea310522_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto &expr = _52222_parts;
			auto it = expr.begin();
			_iter_begin_1ab5bc7a7:;
			if (it != expr.end()) {
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_1ea30369c_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _52825_part,(&(_52925_i)),true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1b7c5055a_pushErr(_self_.ptr(), _52825_part[_52925_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				}
				_iter_next_1ab5bc7a7:;
				++it;
				goto _iter_begin_1ab5bc7a7;
			}
			_iter_end_1ab5bc7a7:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _1b7c5375b_buildGenerics(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _54038_tokens, jule::Ptr<_212a0c2ab_Token>& _54057_errorToken) {
	if ((_54038_tokens.len() == 0LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _54057_errorToken,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _54618_parts;;
	jule::Slice<_22ca31eb9_Log> _54625_errors;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_54038_tokens,static_cast<jule::U64>(8LLU),true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ea310995_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto &expr = _54618_parts;
		auto it = expr.begin();
		_iter_begin_1ab5c1e60:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1b7c533a4_buildGeneric(_self_, _55321_part));;
			}
			_iter_next_1ab5c1e60:;
			++it;
			goto _iter_begin_1ab5c1e60;
		}
		_iter_end_1ab5c1e60:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_1ea313d0b_ParamDecl> _1b7c53a69_buildSelfParam(_1b7c4eaed_parser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ea313d0b_ParamDecl> _56517_param = jule::new_ptr<_1ea313d0b_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1b7c5055a_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1b7c5055a_pushErr(&(*_self_), _56037_tokens[(_56817_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1b7c5055a_pushErr(&(*_self_), _56037_tokens[_56817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1b7c53e32_paramTypeBegin(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea313d0b_ParamDecl>& _59938_param, jule::I64& _59962_i, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _59971_tokens) {
	for (; (_59962_i < _59971_tokens.len()); (_59962_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _60117_token = _59971_tokens[_59962_i];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if (_59938_param.get()._field_Variadic) {
				_1b7c5055a_pushErr(&(*_self_), _60117_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>());
				goto _iter_next_1ab5c8d46;
			};
			_59938_param.get()._field_Variadic=true;
		}
	_iter_next_1ab5c8d46:;
	}
	_iter_end_1ab5c8d46:;;
}



inline void _1b7c54251_buildParamType(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_1ea313d0b_ParamDecl>& _61639_param, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1b7c53e32_paramTypeBegin(_self_.ptr(), _61639_param,_61717_i,_61663_tokens);
	if ((_61717_i >= _61663_tokens.len())) {
		return;;
	};
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _61663_tokens,(&(_61717_i)),true);
		_61639_param.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < _61663_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _61663_tokens[_61717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
}



inline void _1b7c54570_buildParamBody(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_1ea313d0b_ParamDecl>& _62939_param, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _62962_tokens) {
	jule::Ptr<_212a0c2ab_Token> _63017_tok = _62962_tokens[0LL];;
	_62939_param.get()._field_Ident=_63017_tok.get()._field_Kind;
	if ((_62962_tokens.len() == 1LL)) {
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _63017_tok,jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1b7c54251_buildParamType(_self_, _62939_param,_62962_tokens);
		return;;
	};
	_62962_tokens=_62962_tokens.slice(2LL);
	_1b7c54251_buildParamType(_self_, _62939_param,_62962_tokens);
}



inline jule::Ptr<_1ea313d0b_ParamDecl> _1b7c5487d_buildParam(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _64734_tokens) {
	jule::Ptr<_1ea313d0b_ParamDecl> _64817_param = jule::new_ptr<_1ea313d0b_ParamDecl>(_1ea313d0b_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1b7c5055a_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64817_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1b7c5055a_pushErr(_self_.ptr(), _64734_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1b7c54251_buildParamType(_self_, _64817_param,_64734_tokens);
	} else {
		_1b7c54570_buildParamBody(_self_, _64817_param,_64734_tokens);
	};
	return _64817_param;;
}



inline void _1b7c54b03_checkParams(_1b7c4eaed_parser* _self_, jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>>& _69035_params) {
	{
		auto &expr = _69035_params;
		auto it = expr.begin();
		_iter_begin_1ab5d81a7:;
		if (it != expr.end()) {
			jule::Ptr<_1ea313d0b_ParamDecl> _69121_param = *it;
			{
				if ((_1ea31416e_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1ab5d81a7;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1b7c5055a_pushErr(&(*_self_), _69121_param.get()._field_Token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type21)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1ab5d81a7:;
			++it;
			goto _iter_begin_1ab5d81a7;
		}
		_iter_end_1ab5d81a7:;
	};
}



inline jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>> _1b7c54eaa_buildParams(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _71118_parts;;
	jule::Slice<_22ca31eb9_Log> _71125_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_71036_tokens,static_cast<jule::U64>(8LLU),true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1ea313d0b_ParamDecl> _71921_param = _1b7c53a69_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1ea31416e_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto &expr = _71118_parts;
		auto it = expr.begin();
		_iter_begin_1ab5dc893:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _72621_part = *it;
			{
				jule::Ptr<_1ea313d0b_ParamDecl> _72721_param = _1b7c5487d_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1ab5dc893:;
			++it;
			goto _iter_begin_1ab5dc893;
		}
		_iter_end_1ab5dc893:;
	};
	_1b7c54b03_checkParams(_self_.ptr(), _71717_params);
	return _71717_params;;
}



inline __jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool _1b7c55362_buildMultiRetType(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _73742_tokens, jule::I64& _73765_i) {
	__jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ea3067b0_RetTypeDecl>();
	(_73765_i)++;
	if ((_73765_i >= _73742_tokens.len())) {
		(_73765_i)--;
		({
			__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _73742_tokens,(&(_73765_i)),false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	(_73765_i)--;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _74717_rangeTokens = _1b7c4cd60_range(_73765_i,jule::Str("(", 1),jule::Str(")", 1),_73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _74918_parts;;
	jule::Slice<_22ca31eb9_Log> _74925_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_74717_rangeTokens,static_cast<jule::U64>(8LLU),true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_212a0c2ab_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto &expr = _74918_parts;
		auto it = expr.begin();
		_iter_begin_1ab5e3bb8:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _75721_part = *it;
			{
				jule::Ptr<_212a0c2ab_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1b7c5055a_pushErr(_self_.ptr(), _75821_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
							goto _iter_next_1ab5e3bb8;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_212a0c2ab_Token> _77525_newToken = jule::new_ptr<_212a0c2ab_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_1ea30369c_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _75721_part,(&(_75921_offset)),true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1b7c5055a_pushErr(_self_.ptr(), _75721_part[_75921_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1ab5e3bb8:;
			++it;
			goto _iter_begin_1ab5e3bb8;
		}
		_iter_end_1ab5e3bb8:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_73742_tokens[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1ea30523c_TupleTypeDecl>(_1ea30523c_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type83)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool _1b7c55719_buildRetType(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _80537_tokens, jule::I64& _80560_i) {
	__jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1ea3067b0_RetTypeDecl>();
	if ((_80560_i >= _80537_tokens.len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_212a0c2ab_Token> _81117_token = _80537_tokens[_80560_i];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab5ec375:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab5ec3db:;
			{
				if ((_81117_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1ab5ec452:;
			{
				if (((_80560_i + 1LL) >= _80537_tokens.len())) {
					_1b7c5055a_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				(_80560_i)++;
				_81117_token=_80537_tokens[_80560_i];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1ab5eecc3:;
							{
								({
									__jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b7c55362_buildMultiRetType(_self_, _80537_tokens,_80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1ab5eed4a:;
							{
								_1b7c5055a_pushErr(_self_.ptr(), _81117_token,jule::Str("type missing", 12),jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1ab5eec29:;
					};
				};
				({
					__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _80537_tokens,(&(_80560_i)),true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1ab5ec287:;
	};
	(_80560_i)++;
	_1b7c5055a_pushErr(_self_.ptr(), _81117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ea31512b_FnDecl> _1b7c55b6a_buildFnPrototype(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _85041_tokens, jule::I64& _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1ea31512b_FnDecl> _85117_f = jule::new_ptr<_1ea31512b_FnDecl>(_1ea31512b_FnDecl{._field_Token=_85041_tokens[_85064_i], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85117_f.get()._field_Statically=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85117_f.get()._field_Unsafety=true;
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=_85041_tokens[_85064_i];
	};
	(_85064_i)++;
	if ((_85064_i >= _85041_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_212a0c2ab_Token> _88413_tok = _85041_tokens[_85064_i];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		(_85064_i)++;
		if ((_85064_i >= _85041_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _85117_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_212a0c2ab_Token> _89613_errorToken = _85041_tokens[_85064_i];;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _89717_genericsTokens = _1b7c4cd60_range(_85064_i,jule::Str("[", 1),jule::Str("]", 1),_85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1b7c5375b_buildGenerics(_self_, _89717_genericsTokens,_89613_errorToken);
	};
	if ((_85041_tokens[_85064_i].get()._field_Kind != jule::Str("(", 1))) {
		_1b7c5055a_pushErr(_self_.ptr(), _85041_tokens[_85064_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _90717_paramsToks = _1b7c4cd60_range(_85064_i,jule::Str("(", 1),jule::Str(")", 1),_85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1b7c54eaa_buildParams(_self_, _90717_paramsToks,_85072_method);
	};
	if ((_85064_i < _85041_tokens.len())) {
		jule::Ptr<_212a0c2ab_Token> _91317_token = _85041_tokens[_85064_i];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91317_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85117_f.get()._field_Exceptional=true;
			(_85064_i)++;
		};
	};
	_85117_f.get()._field_Public=_1b7c5e79a_isPub(_85117_f.get()._field_Ident);
	({
		__jule_tuple_x_1ea3067b0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b7c55719_buildRetType(_self_, _85041_tokens,_85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1ea31512b_FnDecl> _1b7c560bb_buildFn(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1ea31512b_FnDecl> _92917_f = _1b7c55b6a_buildFnPrototype(_self_, _92732_tokens,_92817_i,_92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < _92732_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _92732_tokens[(_92817_i + 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= _92732_tokens.len())) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _94517_blockTokens = _1b7c4cd60_range(_92817_i,jule::Str("{", 1),jule::Str("}", 1),_92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1b7c515c2_buildScope(_self_, _94517_blockTokens,_92732_tokens[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < _92732_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _92732_tokens[_92817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
	} else {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _92917_f.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_212a0c2ab_Token>> _1b7c563c9_getUseDeclSelectors(_1b7c4eaed_parser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1b7c4cd60_range(_96217_i,jule::Str("{", 1),jule::Str("}", 1),_96142_tokens);
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _96418_parts;;
	jule::Slice<_22ca31eb9_Log> _96425_errs;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_96142_tokens,static_cast<jule::U64>(8LLU),true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*_self_)._field_errors=jule::append((*_self_)._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _97017_selectors = jule::Slice<jule::Ptr<_212a0c2ab_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto &expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_1ab6160e7:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1b7c5055a_pushErr(&(*_self_), _97121_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				jule::Ptr<_212a0c2ab_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1b7c5055a_pushErr(&(*_self_), _97521_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					_1b7c50879_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
					goto _iter_next_1ab6160e7;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1ab6160e7:;
			++it;
			goto _iter_begin_1ab6160e7;
		}
		_iter_end_1ab6160e7:;
	};
	return _97017_selectors;;
}



inline void _1b7c566e8_buildCppUseDecl(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _98639_decl, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _98656_tokens) {
	if ((_98656_tokens.len() > 1LL)) {
		_1b7c5055a_pushErr(&(*_self_), _98656_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	jule::Ptr<_212a0c2ab_Token> _99013_token = _98656_tokens[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1b7c5055a_pushErr(&(*_self_), _99013_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return;;
	};
	_98639_decl.get()._field_CppLinked=true;
	_98639_decl.get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL,(_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1b7c56a17_buildStdUseDecl(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _99939_decl, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _99959_tokens) {
	_99939_decl.get()._field_Std=true;
	jule::Ptr<_212a0c2ab_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ab61e870:;
			{
				_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab61e8e7:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("}", 1))) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_assign_result = _1b7c4d107_rangeLast(_99959_tokens);
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_99939_decl.get()._field_Selected=_1b7c563c9_getUseDeclSelectors(&(*_self_), _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab61e96e:;
			{
				if ((_100217_token.get()._field_Kind != jule::Str("*", 1))) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL,(_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _100217_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_99939_decl.get()._field_Full=true;
			}
		}
		_match_end_1ab61e7e8:;
	};
	_99939_decl.get()._field_LinkPath=(jule::Str("std::", 5) + _1b7c4e735_tokstoa(_99959_tokens));
}



inline void _1b7c56d36_buildIdentUseDecl(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _106141_decl, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _106161_tokens) {
	_106141_decl.get()._field_Std=false;
	jule::Ptr<_212a0c2ab_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1ab6290a5:;
			{
				_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab62968d:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_assign_result = _1b7c4d107_rangeLast(_106161_tokens);
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				_106141_decl.get()._field_Selected=_1b7c563c9_getUseDeclSelectors(&(*_self_), _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab629825:;
			{
				if ((_106417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL,(_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1b7c5055a_pushErr(&(*_self_), _106417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					return;;
				};
				_106141_decl.get()._field_Full=true;
			}
		}
		_match_end_1ab629638:;
	};
	_106141_decl.get()._field_LinkPath=_1b7c4e735_tokstoa(_106161_tokens);
}



inline void _1b7c57155_parseUseDecl(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31ad57_UseDecl>& _112436_decl, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _112456_tokens) {
	if (_112436_decl.get()._field_CppLinked) {
		_1b7c566e8_buildCppUseDecl(&(*_self_), _112436_decl,_112456_tokens);
		return;;
	};
	jule::Ptr<_212a0c2ab_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		_112436_decl.get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1b7c5055a_pushErr(&(*_self_), _113017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			_1b7c50879_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if ((_113017_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1ab635b3e:;
			{
				_1b7c56a17_buildStdUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		else {
			_case_begin_1ab637c0c:;
			{
				_1b7c56d36_buildIdentUseDecl(&(*_self_), _112436_decl,_112456_tokens);
			}
		}
		_match_end_1ab637b96:;
	};
}



inline jule::Ptr<_1ea31ad57_UseDecl> _1b7c5750c_buildUseDecl(_1b7c4eaed_parser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _115835_tokens, jule::Bool _115853_cpp_linked) {
	jule::Ptr<_1ea31ad57_UseDecl> _115917_decl = jule::new_ptr<_1ea31ad57_UseDecl>(_1ea31ad57_UseDecl{._field_Token=_115835_tokens[0LL], ._field_CppLinked=_115853_cpp_linked, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1b7c5055a_pushErr(&(*_self_), _115917_decl.get()._field_Token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1b7c57155_parseUseDecl(&(*_self_), _115917_decl,_115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c578b4_buildTypeEnumItemKind(jule::Ptr<_1b7c4eaed_parser> _self_, jule::I64& _117246_i, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = _117246_i;;
	for (; (_117246_i < _117259_tokens.len()); (_117246_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _117617_t = _117259_tokens[_117246_i];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ab63cd66:;
						{
							(_117317_braceN)++;
							goto _iter_next_1ab63b8c0;
						}
					}
					else {
						_case_begin_1ab63c959:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1ab63c74a:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1ab63b8c0;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_117246_i + 1LL) >= _117259_tokens.len()))) {
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart,_117246_i);
				} else {
					_119225_kindTokens=_117259_tokens.slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1ea30369c_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _119225_kindTokens,(&(_119825_j)),true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1b7c5055a_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1ab63b8c0:;
	}
	_iter_end_1ab63b8c0:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>> _1b7c57bc2_buildTypeEnumItems(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _120943_tokens) {
	jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < _120943_tokens.len()); (_121117_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _121321_t = _120943_tokens[_121117_i];;
			jule::Ptr<_1ea31c809_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1ea31c809_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((_120943_tokens.len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=_120943_tokens[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= _120943_tokens.len()) || (_120943_tokens[_121117_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1b7c5055a_pushErr(_self_.ptr(), _121321_t,jule::Str("type missing", 12),jule::Slice<jule::Any>());
						goto _iter_next_1ab642695;
					};
				};
			};
			_121421_item.get()._field_Kind=_1b7c578b4_buildTypeEnumItemKind(_self_, _121117_i,_120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1ab642695:;
	}
	_iter_end_1ab642695:;;
	return _121017_items;;
}



inline jule::Ptr<_1ea31ce14_TypeEnumDecl> _1b7c57ed0_buildTypeEnumDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1ea31ce14_TypeEnumDecl> _123517_e = jule::new_ptr<_1ea31ce14_TypeEnumDecl>(_1ea31ce14_TypeEnumDecl{._field_Token=_123342_tokens[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _124517_itemTokens = _1b7c4cd60_range(_123417_i,jule::Str("{", 1),jule::Str("}", 1),_123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _123517_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < _123342_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _123342_tokens[_123417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1b7c5e79a_isPub(_123517_e.get()._field_Ident);
	_123517_e.get()._field_End=_123342_tokens[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1b7c57bc2_buildTypeEnumItems(_self_, _124517_itemTokens);
	return _123517_e;;
}



inline jule::Ptr<_1ea307bbd_Expr> _1b7c58387_buildEnumItemExpr(jule::Ptr<_1b7c4eaed_parser> _self_, jule::I64& _126042_i, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = _126042_i;;
	for (; (_126042_i < _126055_tokens.len()); (_126042_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _126417_t = _126055_tokens[_126042_i];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1ab64ddbb:;
						{
							(_126117_braceN)++;
							goto _iter_next_1ab64c925;
						}
					}
					else {
						_case_begin_1ab64d9ae:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1ab64d7a0:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1ab64c925;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || ((_126042_i + 1LL) >= _126055_tokens.len()))) {
				jule::Slice<jule::Ptr<_212a0c2ab_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart,_126042_i);
				} else {
					_128025_exprTokens=_126055_tokens.slice(_126213_exprStart);
				};
				return _1b7c50b87_buildExpr(_self_, _128025_exprTokens);;
			};
		}
	_iter_next_1ab64c925:;
	}
	_iter_end_1ab64c925:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>> _1b7c58695_buildEnumItems(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _129239_tokens) {
	jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < _129239_tokens.len()); (_129417_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _129621_t = _129239_tokens[_129417_i];;
			jule::Ptr<_1ea31b2ca_EnumItemDecl> _129721_item = jule::new_ptr<_1ea31b2ca_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1b7c5055a_pushErr(_self_.ptr(), _129721_item.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= _129239_tokens.len()) || (_129239_tokens[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129417_i + 1LL) < _129239_tokens.len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1ab652364;
			};
			(_129417_i)++;
			_129621_t=_129239_tokens[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1b7c5055a_pushErr(_self_.ptr(), _129621_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33),jule::Slice<jule::Any>());
				goto _iter_next_1ab652364;
			};
			if (((_129417_i >= _129239_tokens.len()) || (_129239_tokens[_129417_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1b7c5055a_pushErr(_self_.ptr(), _129621_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
				goto _iter_next_1ab652364;
			};
			_129721_item.get()._field_Expr=_1b7c58387_buildEnumItemExpr(_self_, _129417_i,_129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1ab652364:;
	}
	_iter_end_1ab652364:;;
	return _129317_items;;
}



inline jule::Ptr<_1ea31bd03_EnumDecl> _1b7c589a3_buildEnumDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _132938_tokens) {
	if ((_132938_tokens.len() < 3LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _132938_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea31bd03_EnumDecl> _133417_e = jule::new_ptr<_1ea31bd03_EnumDecl>(_1ea31bd03_EnumDecl{._field_Token=_132938_tokens[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if ((_132938_tokens[_134217_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134217_i)++;
		if ((_134217_i >= _132938_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _132938_tokens[(_134217_i - 1LL)],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _132938_tokens,(&(_134217_i)),true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= _132938_tokens.len())) {
			_1b7c4ee2d_stop(_self_.ptr());
			_1b7c5055a_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
			_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _135917_itemTokens = _1b7c4cd60_range(_134217_i,jule::Str("{", 1),jule::Str("}", 1),_132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _133417_e.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < _132938_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _132938_tokens[_134217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1b7c5e79a_isPub(_133417_e.get()._field_Ident);
	_133417_e.get()._field_End=_132938_tokens[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1b7c58695_buildEnumItems(_self_, _135917_itemTokens);
	return _133417_e;;
}



inline jule::Any _1b7c58cb1_buildNodeEnumDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _137442_tokens) {
	if (((_137442_tokens.len() > 3LL) && (_137442_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if ((_137442_tokens[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1b7c57ed0_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type20);;
		};
	};
	return jule::Any(_1b7c589a3_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type19);;
}



inline jule::Ptr<_1ea31d112_FieldDecl> _1b7c590be_buildField(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _138334_tokens) {
	jule::Ptr<_1ea31d112_FieldDecl> _138417_f = jule::new_ptr<_1ea31d112_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1b7c5055a_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _138417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _138334_tokens[0LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _138334_tokens[1LL],jule::Str("type missing", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _138334_tokens,(&(_141217_i)),true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_212a0c2ab_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141517_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1b7c5055a_pushErr(_self_.ptr(), _138334_tokens[_141217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _141517_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1b7c50b87_buildExpr(_self_, _138334_tokens);
	};
	_138417_f.get()._field_Public=_1b7c5e79a_isPub(_138417_f.get()._field_Ident);
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1ea31d112_FieldDecl>> _1b7c593cc_buildStructDeclFields(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1ea31d112_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _143417_stmts = _1b7c33021_splitStmts(_143245_tokens);;
	{
		auto &expr = _143417_stmts;
		auto it = expr.begin();
		_iter_begin_1ab66dd86:;
		if (it != expr.end()) {
			jule::Ptr<_1b7c32b7a_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1ea31d112_FieldDecl> _143721_f = _1b7c590be_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1ab66dd86:;
			++it;
			goto _iter_begin_1ab66dd86;
		}
		_iter_end_1ab66dd86:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1ea31d8b5_StructDecl> _1b7c596da_buildStructDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _144340_tokens) {
	if ((_144340_tokens.len() < 3LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _144340_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1ea31d8b5_StructDecl> _145017_s = jule::new_ptr<_1ea31d8b5_StructDecl>(_1ea31d8b5_StructDecl{._field_Token=_144340_tokens[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= _144340_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_212a0c2ab_Token> _146413_errorToken = _144340_tokens[_144917_i];;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _146517_genericsTokens = _1b7c4cd60_range(_144917_i,jule::Str("[", 1),jule::Str("]", 1),_144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1b7c5375b_buildGenerics(_self_, _146517_genericsTokens,_146413_errorToken);
	};
	if ((_144917_i >= _144340_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _144340_tokens[(_144917_i - 1LL)],jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _147517_bodyTokens = _1b7c4cd60_range(_144917_i,jule::Str("{", 1),jule::Str("}", 1),_144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _145017_s.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < _144340_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _144340_tokens[_144917_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1b7c5e79a_isPub(_145017_s.get()._field_Ident);
	_145017_s.get()._field_Fields=_1b7c593cc_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=_144340_tokens[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1b7c59960_checkMethodReceiver(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31512b_FnDecl>& _149139_f) {
	if (_149139_f.get()._field_Statically) {
		if (((_149139_f.get()._field_Params.len() > 0LL) && _1ea31416e_IsSelf(_149139_f.get()._field_Params[0LL].ptr()))) {
			_1b7c5055a_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_149139_f.get()._field_Params.len() == 0LL)) {
		_1b7c5055a_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ea313d0b_ParamDecl> _150313_param = _149139_f.get()._field_Params[0LL];;
	if ((!(_1ea31416e_IsSelf(_150313_param.ptr())))) {
		_1b7c5055a_pushErr(&(*_self_), _149139_f.get()._field_Token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1ea31512b_FnDecl>> _1b7c59c6d_buildTraitMethods(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _151041_tokens) {
	jule::Slice<jule::Ptr<_1ea31512b_FnDecl>> _151117_methods = nullptr;;
	jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _151217_stmts = _1b7c33021_splitStmts(_151041_tokens);;
	{
		auto &expr = _151217_stmts;
		auto it = expr.begin();
		_iter_begin_1ab67cec7:;
		if (it != expr.end()) {
			jule::Ptr<_1b7c32b7a_stmt> _151321_stmt = *it;
			{
				_151041_tokens=_151321_stmt.get()._field_tokens;
				if ((_151041_tokens.len() == 0LL)) {
					goto _iter_next_1ab67cec7;
				};
				jule::Ptr<_1ea31512b_FnDecl> _151821_f = _1b7c560bb_buildFn(_self_, _151041_tokens,true,true);;
				if ((_151821_f != nullptr)) {
					if (_1ea31547d_IsAnon(_151821_f.ptr())) {
						_1b7c5055a_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
					_1b7c59960_checkMethodReceiver(_self_.ptr(), _151821_f);
					if ((_151821_f.get()._field_Generics.len() > 0LL)) {
						_1b7c5055a_pushErr(_self_.ptr(), _151821_f.get()._field_Token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>());
					};
					_151117_methods = jule::alloc_for_append(_151117_methods,1);_151117_methods.__push(_151821_f);;
				};
			}
			_iter_next_1ab67cec7:;
			++it;
			goto _iter_begin_1ab67cec7;
		}
		_iter_end_1ab67cec7:;
	};
	return _151117_methods;;
}



inline jule::Ptr<_1ea31dec0_TraitDecl> _1b7c5a07b_buildTraitDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _153339_tokens) {
	if ((_153339_tokens.len() < 3LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _153339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea31dec0_TraitDecl> _153817_t = jule::new_ptr<_1ea31dec0_TraitDecl>(_1ea31dec0_TraitDecl{._field_Token=_153339_tokens[1LL], });;
	if ((_153817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Ident=_153817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154617_i = 2LL;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _154717_bodyTokens = _1b7c4cd60_range(_154617_i,jule::Str("{", 1),jule::Str("}", 1),_153339_tokens);;
	if ((_154717_bodyTokens == nullptr)) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _153817_t.get()._field_Token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154617_i < _153339_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _153339_tokens[_154617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_153817_t.get()._field_Public=_1b7c5e79a_isPub(_153817_t.get()._field_Ident);
	_153817_t.get()._field_Methods=_1b7c59c6d_buildTraitMethods(_self_, _154717_bodyTokens);
	_153817_t.get()._field_End=_153339_tokens[(_154617_i - 1LL)];
	return _153817_t;;
}



inline jule::Ptr<_1ea31512b_FnDecl> _1b7c5a389_buildCppLinkFn(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _156338_tokens) {
	_156338_tokens=_156338_tokens.slice(1LL);
	jule::Ptr<_1ea31512b_FnDecl> _156517_f = _1b7c560bb_buildFn(_self_, _156338_tokens,false,true);;
	if ((_156517_f != nullptr)) {
		if (_1ea31547d_IsAnon(_156517_f.ptr())) {
			_1b7c5055a_pushErr(_self_.ptr(), _156517_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		};
		_156517_f.get()._field_Public=false;
		_156517_f.get()._field_CppLinked=true;
	};
	return _156517_f;;
}



inline jule::Ptr<_1ea31610a_VarDecl> _1b7c5a697_buildCppLinkVar(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _157639_tokens) {
	_157639_tokens=_157639_tokens.slice(1LL);
	jule::Ptr<_1ea31610a_VarDecl> _157817_v = _1b7c53096_buildVar(_self_, _157639_tokens);;
	if ((_157817_v != nullptr)) {
		_157817_v.get()._field_Public=false;
		_157817_v.get()._field_CppLinked=true;
		if ((_157817_v.get()._field_Expr != nullptr)) {
			_1b7c5055a_pushErr(_self_.ptr(), _157817_v.get()._field_Token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>());
		};
	};
	return _157817_v;;
}



inline jule::Ptr<_1ea31d8b5_StructDecl> _1b7c5a9a5_buildCppLinkStruct(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _158942_tokens) {
	_158942_tokens=_158942_tokens.slice(1LL);
	jule::Ptr<_1ea31d8b5_StructDecl> _159117_s = _1b7c596da_buildStructDecl(_self_, _158942_tokens);;
	if ((_159117_s != nullptr)) {
		_159117_s.get()._field_Public=false;
		{
			auto &expr = _159117_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1ab68c7cd:;
			if (it != expr.end()) {
				jule::Ptr<_1ea31d112_FieldDecl> _159425_f = *it;
				{
					_159425_f.get()._field_Public=true;
				}
				_iter_next_1ab68c7cd:;
				++it;
				goto _iter_begin_1ab68c7cd;
			}
			_iter_end_1ab68c7cd:;
		};
		_159117_s.get()._field_CppLinked=true;
	};
	return _159117_s;;
}



inline jule::Ptr<_1ea31996b_TypeAliasDecl> _1b7c5acb3_buildCppLinkTypeAlias(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _160345_tokens) {
	_160345_tokens=_160345_tokens.slice(1LL);
	jule::Ptr<_1ea31996b_TypeAliasDecl> _160517_t = _1b7c52282_buildTypeAliasDecl(_self_, _160345_tokens);;
	if ((_160517_t != nullptr)) {
		_160517_t.get()._field_Public=false;
		_160517_t.get()._field_CppLinked=true;
	};
	return _160517_t;;
}



inline jule::Ptr<_1ea31ad57_UseDecl> _1b7c5b0c1_buildCppLinkUse(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _161339_tokens) {
	if ((_161339_tokens.len() == 1LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _161339_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161339_tokens=_161339_tokens.slice(1LL);
	;
	return _1b7c5750c_buildUseDecl(_self_.ptr(), _161339_tokens,true);;
}



inline jule::Any _1b7c5b3ce_buildCppLink(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _162437_tokens) {
	jule::Ptr<_212a0c2ab_Token> _162517_token = _162437_tokens[0LL];;
	if ((_162437_tokens.len() == 1LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162517_token=_162437_tokens[1LL];
	{
		auto &_match_expr{ _162517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ab69244d:;
			{
				return jule::Any(_1b7c5a389_buildCppLinkFn(_self_, _162437_tokens), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1ab69311e:;
			{
				return jule::Any(_1b7c5a697_buildCppLinkVar(_self_, _162437_tokens), &__jule_any_type18);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1ab693185:;
			{
				return jule::Any(_1b7c5a9a5_buildCppLinkStruct(_self_, _162437_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ab6931eb:;
			{
				return jule::Any(_1b7c5acb3_buildCppLinkTypeAlias(_self_, _162437_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1ab692ea9:;
			{
				_1b7c5055a_pushErr(_self_.ptr(), _162517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab6930a8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ea31512b_FnDecl> _1b7c5b6dc_getMethod(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _164834_tokens) {
	jule::I64 _164917_i = 0LL;;
	jule::Ptr<_212a0c2ab_Token> _165017_token = _164834_tokens[_164917_i];;
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_164917_i + 1LL) >= _164834_tokens.len())) {
			_1b7c5055a_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_164917_i)++;
		_165017_token=_164834_tokens[_164917_i];
	};
	if ((_165017_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1b7c5055a_pushErr(_self_.ptr(), _165017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea31512b_FnDecl> _167417_f = _1b7c560bb_buildFn(_self_, _164834_tokens,true,false);;
	if (((_167417_f != nullptr) && _1ea31547d_IsAnon(_167417_f.ptr()))) {
		_1b7c5055a_pushErr(_self_.ptr(), _167417_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	return _167417_f;;
}



inline void _1b7c5ba0b_parseImplBody(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_1ea31e5ca_Impl>& _168138_ipl, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _168155_tokens) {
	jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _168217_stmts = _1b7c33021_splitStmts(_168155_tokens);;
	{
		auto &expr = _168217_stmts;
		auto it = expr.begin();
		_iter_begin_1ab69b0e4:;
		if (it != expr.end()) {
			jule::Ptr<_1b7c32b7a_stmt> _168321_stmt = *it;
			{
				_168155_tokens=_168321_stmt.get()._field_tokens;
				jule::Ptr<_212a0c2ab_Token> _168521_token = _168155_tokens[0LL];;
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1ab69c249:;
						{
							_1b7c5121a_pushDirective(_self_.ptr(), _1b7c50e95_buildDirective(_self_.ptr(), _168155_tokens));
							goto _iter_next_1ab69b0e4;
						}
					}
					_match_end_1ab69c1e4:;
				};
				{
					auto &_match_expr{ _168521_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1ab69c38c:;
						{
							jule::Ptr<_1ea31610a_VarDecl> _169425_v = _1b7c53096_buildVar(_self_, _168155_tokens);;
							if ((_169425_v != nullptr)) {
								_168138_ipl.get()._field_Statics = jule::alloc_for_append(_168138_ipl.get()._field_Statics,1);_168138_ipl.get()._field_Statics.__push(_169425_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1ab69d008:;
						{
							jule::Ptr<_1ea31512b_FnDecl> _170125_f = _1b7c5b6dc_getMethod(_self_, _168155_tokens);;
							if ((_170125_f != nullptr)) {
								_1b7c59960_checkMethodReceiver(_self_.ptr(), _170125_f);
								_1b7c5c39c_applyFnMeta(_self_.ptr(), _170125_f);
								_168138_ipl.get()._field_Methods = jule::alloc_for_append(_168138_ipl.get()._field_Methods,1);_168138_ipl.get()._field_Methods.__push(_170125_f);;
							};
						}
					}
					else {
						_case_begin_1ab69c7bb:;
						{
							_1b7c5055a_pushErr(_self_.ptr(), _168521_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
							goto _iter_next_1ab69b0e4;
						}
					}
					_match_end_1ab69c766:;
				};
			}
			_iter_next_1ab69b0e4:;
			++it;
			goto _iter_begin_1ab69b0e4;
		}
		_iter_end_1ab69b0e4:;
	};
}



inline jule::Ptr<_1ea31e5ca_Impl> _1b7c5bd19_buildImpl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _171433_tokens) {
	jule::Ptr<_212a0c2ab_Token> _171517_token = _171433_tokens[0LL];;
	if ((_171433_tokens.len() < 2LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172117_i = 1LL;;
	jule::Ptr<_1ea30369c_TypeDecl> _172318_base;;
	jule::Bool _172328_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_172318_base = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _171517_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ea31e5ca_Impl> _173217_ipl = jule::new_ptr<_1ea31e5ca_Impl>(_1ea31e5ca_Impl{._field_Base=_172318_base, });;
	_171517_token=_171433_tokens[_172117_i];
	if ((_171517_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171517_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171517_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_1ea30369c_TypeDecl> ___jule_assign_arg = _173217_ipl.get()._field_Dest;
				jule::Ptr<_1ea30369c_TypeDecl> _1___jule_assign_arg = _173217_ipl.get()._field_Base;
				_173217_ipl.get()._field_Base = ___jule_assign_arg;
				_173217_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172117_i)++;
	if ((_172117_i >= _171433_tokens.len())) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType(_self_, _171433_tokens,(&(_172117_i)),true);
		_173217_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172328_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172328_ok))) {
		return nullptr;;
	};
	if ((_172117_i >= _171433_tokens.len())) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _177017_bodyTokens = _1b7c4cd60_range(_172117_i,jule::Str("{", 1),jule::Str("}", 1),_171433_tokens);;
	if ((_177017_bodyTokens == nullptr)) {
		_1b7c4ee2d_stop(_self_.ptr());
		_1b7c5055a_pushErr(_self_.ptr(), _171517_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172117_i < _171433_tokens.len())) {
		_1b7c5055a_pushErr(_self_.ptr(), _171433_tokens[_172117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
	};
	_173217_ipl.get()._field_End=_171433_tokens[(_172117_i - 1LL)];
	_1b7c5ba0b_parseImplBody(_self_, _173217_ipl,_177017_bodyTokens);
	return _173217_ipl;;
}



inline jule::Any _1b7c5c127_buildNodeData(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _178538_tokens) {
	jule::Ptr<_212a0c2ab_Token> _178617_token = _178538_tokens[0LL];;
	{
		auto &_match_expr{ _178617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1ab6aca51:;
			{
				jule::Ptr<_1ea31512b_FnDecl> _179021_f = _1b7c560bb_buildFn(_self_, _178538_tokens,false,false);;
				if ((_179021_f != nullptr)) {
					_179021_f.get()._field_Global=true;
					if (_1ea31547d_IsAnon(_179021_f.ptr())) {
						_1b7c5055a_pushErr(_self_.ptr(), _179021_f.get()._field_Token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179021_f, &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1ab6ad9b9:;
			{
				return jule::Any(_1b7c53096_buildVar(_self_, _178538_tokens), &__jule_any_type18);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1ab6ada30:;
			{
				return jule::Any(_1b7c52282_buildTypeAliasDecl(_self_, _178538_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1ab6ada96:;
			{
				return _1b7c58cb1_buildNodeEnumDecl(_self_, _178538_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1ab6ad1b1:;
			{
				return jule::Any(_1b7c596da_buildStructDecl(_self_, _178538_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1ab6ad227:;
			{
				return jule::Any(_1b7c5a07b_buildTraitDecl(_self_, _178538_tokens), &__jule_any_type17);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1ab6ad28d:;
			{
				return jule::Any(_1b7c5bd19_buildImpl(_self_, _178538_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ab6ad304:;
			{
				return _1b7c5b3ce_buildCppLink(_self_, _178538_tokens);;
			}
		}
		else {
			_case_begin_1ab6ad14a:;
			{
				_1b7c5055a_pushErr(_self_.ptr(), _178617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab6ace91:;
	};
}



inline void _1b7c5c39c_applyFnMeta(_1b7c4eaed_parser* _self_, jule::Ptr<_1ea31512b_FnDecl>& _182135_f) {
	_182135_f.get()._field_Directives=(*_self_)._field_directives;
	(*_self_)._field_directives=nullptr;
}



inline void _1b7c5c622_applyMeta(_1b7c4eaed_parser* _self_, _1ea2c0009_Node& _182633_node) {
	{
		auto &_match_expr{ _182633_node._field_Data };
		
		if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ab6b4618:;
			{
				jule::Ptr<_1ea31610a_VarDecl> _182921_v = _182633_node._field_Data.cast_ptr<_1ea31610a_VarDecl>(&__jule_any_type18);;
				if ((_182921_v == nullptr)) {
					return;;
				};
				_182921_v.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ab6b467e:;
			{
				jule::Ptr<_1ea31512b_FnDecl> _183621_f = _182633_node._field_Data.cast_ptr<_1ea31512b_FnDecl>(&__jule_any_type16);;
				if ((_183621_f == nullptr)) {
					return;;
				};
				_1b7c5c39c_applyFnMeta(&(*_self_), _183621_f);
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ab6b46e5:;
			{
				jule::Ptr<_1ea31d8b5_StructDecl> _184221_sd = _182633_node._field_Data.cast_ptr<_1ea31d8b5_StructDecl>(&__jule_any_type15);;
				if ((_184221_sd == nullptr)) {
					return;;
				};
				_184221_sd.get()._field_Directives=(*_self_)._field_directives;
				(*_self_)._field_directives=nullptr;
			}
		}
		_match_end_1ab6b4409:;
	};
}



inline void _1b7c5c897_pushUseDecl(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_1ea31ad57_UseDecl>& _185136_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push(_185136_decl);;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _185136_decl.get()._field_Token,jule::Str("use declarations must declared top of source code", 49),jule::Slice<jule::Any>());
		_1b7c50879_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b7c5cba5_pushMetaNodes(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _185938_tokens) {
	{
		auto &_match_expr{ _185938_tokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1ab6c0091:;
			{
				;
				jule::Ptr<_1ea31ad57_UseDecl> _186321_decl = _1b7c5750c_buildUseDecl(_self_.ptr(), _185938_tokens,false);;
				_1b7c5c897_pushUseDecl(_self_, _186321_decl);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ab6c0118:;
			{
				if (((_185938_tokens.len() > 1LL) && (_185938_tokens[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1ea31ad57_UseDecl> _186825_decl = _1b7c5b0c1_buildCppLinkUse(_self_, _185938_tokens);;
					_1b7c5c897_pushUseDecl(_self_, _186825_decl);
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1ab6c0190:;
			{
				_1b7c5121a_pushDirective(_self_.ptr(), _1b7c50e95_buildDirective(_self_.ptr(), _185938_tokens));
				return true;;
			}
		}
		_match_end_1ab6beeb4:;
	};
	return false;;
}



inline _1ea2c0009_Node _1b7c5ceb3_parseNode(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _187934_st) {
	_1ea2c0009_Node _188017_node = _1ea2c0009_Node{._field_Token=_187934_st[0LL], };;
	if (_1b7c5cba5_pushMetaNodes(_self_, _187934_st)) {
		return _188017_node;;
	};
	jule::Any _188817_data = _1b7c5c127_buildNodeData(_self_, _187934_st);;
	if ((_188817_data == nullptr)) {
		return _188017_node;;
	};
	_188017_node._field_Data=_188817_data;
	_1b7c5c622_applyMeta(_self_.ptr(), _188017_node);
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188017_node;;
}



inline void _1b7c5d238_appendNode(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _190335_st) {
	if ((_190335_st.len() == 0LL)) {
		return;;
	};
	_1ea2c0009_Node _190717_node = _1b7c5ceb3_parseNode(_self_, _190335_st);;
	if (((_190717_node._field_Data == nullptr) || _1b7c50192_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190717_node);;
}



inline void _1b7c5d69a_removeRange(_1b7c4eaed_parser* _self_, jule::I64 _191430_i, jule::Str _191438_kind, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _191450_tokens, jule::Slice<jule::I64>& _191473_ranges) {
	jule::Str _191513_close = _1b7c4db74_getCloseKindOfBrace(_191438_kind);;
	for (; (_191430_i >= 0LL); (_191430_i)--) {
		{
			jule::Ptr<_212a0c2ab_Token> _191717_tok = _191450_tokens[_191473_ranges[_191430_i]];;
			if ((_191717_tok.get()._field_Kind != _191513_close)) {
				goto _iter_next_1ab6c9760;
			};
			_191473_ranges=jule::append(_191473_ranges.slice(0LL,_191430_i),_191473_ranges.slice((_191430_i + 1LL)));
			goto _iter_end_1ab6c9760;
		}
	_iter_next_1ab6c9760:;
	}
	_iter_end_1ab6c9760:;;
}



inline void _1b7c5da63_pushWrongOrderCloseErr(_1b7c4eaed_parser* _self_, jule::Ptr<_212a0c2ab_Token>& _192642_t, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _192654_tokens, jule::Slice<jule::I64>& _192673_ranges) {
	{
		auto &_match_expr{ _192654_tokens[_192673_ranges[(_192673_ranges.len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1ab6cb81c:;
			{
				_1b7c5055a_pushErr(&(*_self_), _192642_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1ab6cb894:;
			{
				_1b7c5055a_pushErr(&(*_self_), _192642_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1ab6cb91b:;
			{
				_1b7c5055a_pushErr(&(*_self_), _192642_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab6cb6eb:;
	};
}



inline void _1b7c5dec5_pushRangeClose(_1b7c4eaed_parser* _self_, jule::Ptr<_212a0c2ab_Token> _193733_t, jule::Str _193744_left, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _193756_tokens, jule::Slice<jule::I64>& _193779_ranges) {
	jule::I64 _193813_n = _193779_ranges.len();;
	if ((_193813_n == 0LL)) {
		{
			auto &_match_expr{ _193733_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1ab6ce446:;
				{
					_1b7c5055a_pushErr(&(*_self_), _193733_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1ab6ce4bd:;
				{
					_1b7c5055a_pushErr(&(*_self_), _193733_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1ab6ce545:;
				{
					_1b7c5055a_pushErr(&(*_self_), _193733_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>());
				}
			}
			_match_end_1ab6ce204:;
		};
		return;;
	} else if ((_193756_tokens[_193779_ranges[(_193813_n - 1LL)]].get()._field_Kind != _193744_left)) {
		_1b7c5da63_pushWrongOrderCloseErr(&(*_self_), _193733_t,_193756_tokens,_193779_ranges);
	};
	_1b7c5d69a_removeRange(&(*_self_), static_cast<jule::I64>((_193813_n - 1LL)),_193733_t.get()._field_Kind,_193756_tokens,_193779_ranges);
}



inline void _1b7c5e24a_checkRanges(_1b7c4eaed_parser* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _195531_tokens) {
	jule::Slice<jule::I64> _195617_ranges = nullptr;;
	{
		auto &expr = _195531_tokens;
		auto it = expr.begin();
		_iter_begin_1ab6d25c0:;
		if (it != expr.end()) {
			jule::I64 _195813_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> &_195816_token = *it;
			{
				if ((_195816_token.get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1ab6d25c0;
				};
				{
					auto &_match_expr{ _195816_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1ab6d3879:;
						{
							_195617_ranges = jule::alloc_for_append(_195617_ranges,1);_195617_ranges.__push(_195813_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ab6d38e0:;
						{
							_1b7c5dec5_pushRangeClose(&(*_self_), _195816_token,jule::Str("(", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1ab6d3956:;
						{
							_1b7c5dec5_pushRangeClose(&(*_self_), _195816_token,jule::Str("{", 1),_195531_tokens,_195617_ranges);
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ab6d39cd:;
						{
							_1b7c5dec5_pushRangeClose(&(*_self_), _195816_token,jule::Str("[", 1),_195531_tokens,_195617_ranges);
						}
					}
					_match_end_1ab6d37be:;
				};
			}
			_iter_next_1ab6d25c0:;
			++it;
			_195813_i++;
			goto _iter_begin_1ab6d25c0;
		}
		_iter_end_1ab6d25c0:;
	};
	{
		auto &expr = _195617_ranges;
		auto it = expr.begin();
		_iter_begin_1ab6d4e41:;
		if (it != expr.end()) {
			jule::I64 _197616_i = *it;
			{
				jule::Ptr<_212a0c2ab_Token> _197717_token = _195531_tokens[_197616_i];;
				{
					auto &_match_expr{ _197717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab6d6096:;
						{
							_1b7c5055a_pushErr(&(*_self_), _197717_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1ab6d610c:;
						{
							_1b7c5055a_pushErr(&(*_self_), _197717_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ab6d6173:;
						{
							_1b7c5055a_pushErr(&(*_self_), _197717_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>());
						}
					}
					_match_end_1ab6d5d65:;
				};
			}
			_iter_next_1ab6d4e41:;
			++it;
			goto _iter_begin_1ab6d4e41;
		}
		_iter_end_1ab6d4e41:;
	};
}



inline void _1b7c5e4c0_parse(jule::Ptr<_1b7c4eaed_parser> _self_, jule::Ptr<_212a12646_File>& _198930_f) {
	_self_.get()._field_ast=jule::new_ptr<_1ea2be217_Ast>(_1ea2be217_Ast{._field_File=_198930_f, });
	_1b7c5e24a_checkRanges(_self_.ptr(), _198930_f.get()._field_Tokens);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _199917_stmts = _1b7c33021_splitStmts(_198930_f.get()._field_Tokens);;
	jule::I64 _200217_i = 0LL;;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1b7c32b7a_stmt> _200421_stmt = _199917_stmts[_200217_i];;
			if ((_200421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1ab6d9110;
			};
			if ((!(_22ca33d9a_IsTopDirective(_200421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1ab6d9110;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1b7c50e95_buildDirective(_self_.ptr(), _200421_stmt.get()._field_tokens));;
		}
	_iter_next_1ab6d9110:;
	}
	_iter_end_1ab6d9110:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200217_i < _199917_stmts.len()); (_200217_i)++) {
		{
			jule::Ptr<_1b7c32b7a_stmt> _202121_stmt = _199917_stmts[_200217_i];;
			_1b7c5d238_appendNode(_self_, _202121_stmt.get()._field_tokens);
			if (_1b7c50192_stopped(_self_.ptr())) {
				goto _iter_end_1ab6daaa1;
			};
		}
	_iter_next_1ab6daaa1:;
	}
	_iter_end_1ab6daaa1:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b7c5055a_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag,jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75),jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c4eaed_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1b7c60dd9_pushErr(_1b7c60812_typeBuilder* _self_, jule::Ptr<_212a0c2ab_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*_self_)._field_err) {
		_1b7c5055a_pushErr((*_self_)._field_p.ptr(), _4126_token,_4141_fmt,jule::Slice<jule::Any>());
	};
}



inline void _1b7c61208_pushSuggestion(_1b7c60812_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*_self_)._field_err) {
		_1b7c50879_pushSuggestion((*_self_)._field_p.ptr(), _4833_fmt,_4846_args);
	};
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6146c_buildPrim(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_1ea30369c_TypeDecl> _5517_t = _1b7c6037d_buildPrimType((*_self_)._field_tokens[(*((*_self_)._field_i))]);;
	((*((*_self_)._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c616d1_buildNamespace(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_1ea30369c_TypeDecl> _6117_t = jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=(*_self_)._field_tokens[(*((*_self_)._field_i))], });;
	jule::Ptr<_1ea304769_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1ea304769_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_212a0c2ab_Token> _6821_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1b7c60dd9_pushErr(&(*_self_), _6821_token,jule::Str("invalid syntax", 14));
					_1b7c61208_pushSuggestion(&(*_self_), jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1ab6e2c84;
			};
			(_6617_n)++;
		}
	_iter_next_1ab6e2c84:;
	}
	_iter_end_1ab6e2c84:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL,(_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*_self_)._field_i)))--;
	_6517_nst.get()._field_Kind=_1b7c61e1d_buildIdent(&(*_self_));
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type99);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _1b7c61945_buildGenerics(_1b7c60812_typeBuilder* _self_) {
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_212a0c2ab_Token> _9413_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _9917_parts = _1b7c61ba9_identGenerics(&(*_self_));;
	if ((_9917_parts.len() == 0LL)) {
		_1b7c60dd9_pushErr(&(*_self_), _9413_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1ea30369c_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto &expr = _9917_parts;
		auto it = expr.begin();
		_iter_begin_1ab6ea63d:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_1ea30369c_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _10621_part,(&(_10721_j)),true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1b7c60dd9_pushErr(&(*_self_), _10621_part[_10721_j],jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1ab6ea63d:;
			++it;
			goto _iter_begin_1ab6ea63d;
		}
		_iter_end_1ab6ea63d:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1b7c61ba9_identGenerics(_1b7c60812_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*_self_)._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*_self_)._field_i)) < (*_self_)._field_tokens.len()); ((*((*_self_)._field_i)))++) {
		{
			jule::Ptr<_212a0c2ab_Token> _12117_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1ab6ee169:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1ab6ee1e1:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1ab6ede38:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*_self_)._field_i)))++;
				goto _iter_end_1ab6ecd49;
			};
		}
	_iter_next_1ab6ecd49:;
	}
	_iter_end_1ab6ecd49:;;
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _13517_tokens = (*_self_)._field_tokens.slice((_11813_first + 1LL),((*((*_self_)._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _13618_parts;;
	jule::Slice<_22ca31eb9_Log> _13625_errors;;
	({
		__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c4d8cc_parts(_13517_tokens,static_cast<jule::U64>(8LLU),true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*_self_)._field_err) {
		(*_self_)._field_p.get()._field_errors=jule::append((*_self_)._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c61e1d_buildIdent(_1b7c60812_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*_self_)._field_i)) + 1LL) < (*_self_)._field_tokens.len());;
	if ((_14417_next && ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1b7c616d1_buildNamespace(&(*_self_));;
	};
	jule::Ptr<_212a0c2ab_Token> _14817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1ea303c63_IdentTypeDecl> _14917_it = jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ea30369c_TypeDecl> _15517_itd = jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type21)});;
	if (((!(_14417_next)) || ((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1b7c61945_buildGenerics(&(*_self_));
		return _15517_itd;;
	};
	if ((((*_self_)._field_tokens.len() - (*((*_self_)._field_i))) == 1LL)) {
		_1b7c60dd9_pushErr(&(*_self_), _14817_token,jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1b7c60dd9_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1ea3043b2_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1ea3043b2_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1ea30369c_TypeDecl> _17417_ident = _1b7c61e1d_buildIdent(&(*_self_));;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ab709174:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1ea303c63_IdentTypeDecl>(&__jule_any_type21));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1ab70921d:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1ea3043b2_SubIdentTypeDecl>(&__jule_any_type95).get()._field_Idents);
			}
		}
		_match_end_1ab70911e:;
	};
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type95)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c62182_buildCppLink(_1b7c60812_typeBuilder* _self_) {
	if (((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len()) || ((*_self_)._field_tokens[((*((*_self_)._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1b7c60dd9_pushErr(&(*_self_), (*_self_)._field_tokens[(*((*_self_)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*_self_)._field_i))+=2LL;
	jule::Ptr<_1ea30369c_TypeDecl> _19317_t = _1b7c61e1d_buildIdent(&(*_self_));;
	_19317_t.get()._field_Kind.cast_ptr<_1ea303c63_IdentTypeDecl>(&__jule_any_type21).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c623e6_buildFn(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _19917_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	jule::Ptr<_1ea31512b_FnDecl> _20017_f = _1b7c55b6a_buildFnPrototype((*_self_)._field_p, (*_self_)._field_tokens,(*((*_self_)._field_i)),false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ea31547d_IsAnon(_20017_f.ptr())))) {
		_1b7c60dd9_pushErr(&(*_self_), _20017_f.get()._field_Token,jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type16)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6265a_buildPtr(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _21417_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1b7c60dd9_pushErr(&(*_self_), _21417_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	if (((*_self_)._field_tokens[(*((*_self_)._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*_self_)._field_i)))++;
		return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1ea305528_PtrTypeDecl>(_1ea305528_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type80)});;
	};
	jule::Ptr<_1ea30369c_TypeDecl> _23117_elem = _1b7c63848_step(&(*_self_));;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1ea305528_PtrTypeDecl>(_1ea305528_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type80)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c628be_buildSptr(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _24517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((*((*_self_)._field_i)) + 1LL) >= (*_self_)._field_tokens.len())) {
		_1b7c60dd9_pushErr(&(*_self_), _24517_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ea30369c_TypeDecl> _25217_elem = _1b7c63848_step(&(*_self_));;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1ea304a55_SptrTypeDecl>(_1ea304a55_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type81)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c62b33_buildOp(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _26617_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab71634b:;
			{
				return _1b7c6265a_buildPtr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1ab717ccb:;
			{
				return _1b7c628be_buildSptr(&(*_self_));;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1ab717d42:;
			{
				return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1ea304a55_SptrTypeDecl>(_1ea304a55_SptrTypeDecl{._field_Elem=_1b7c628be_buildSptr(&(*_self_))}), &__jule_any_type81)});;
			}
		}
		else {
			_case_begin_1ab71736e:;
			{
				_1b7c60dd9_pushErr(&(*_self_), _26617_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ab7171d7:;
	};
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c62d97_buildSlc(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _28517_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	jule::Ptr<_1ea30369c_TypeDecl> _28717_elem = _1b7c63848_step(&(*_self_));;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1ea304e51_SlcTypeDecl>(_1ea304e51_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6310b_buildArr(_1b7c60812_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _30017_exprTokens = _1b7c4cd60_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1b7c60dd9_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ea30369c_TypeDecl> _30617_elem = _1b7c63848_step(&(*_self_));;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ea305baa_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1ea305baa_ArrTypeDecl>(_1ea305baa_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_212a0c2ab_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1b7c50b87_buildExpr((*_self_)._field_p, _30017_exprTokens);
	};
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type78)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c63370_buildMap(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _32917_mapToken = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	((*((*_self_)._field_i)))++;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1b7c60dd9_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _33717_keyTokens = _1b7c4cd60_range((*((*_self_)._field_i)),jule::Str("[", 1),jule::Str("]", 1),(*_self_)._field_tokens);;
	if (((*((*_self_)._field_i)) >= (*_self_)._field_tokens.len())) {
		_1b7c60dd9_pushErr(&(*_self_), (*_self_)._field_tokens[((*((*_self_)._field_i)) - 1LL)],jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1b7c60dd9_pushErr(&(*_self_), _32917_mapToken,jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1ea306408_MapTypeDecl> _34617_mapt = jule::new_ptr<_1ea306408_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_1ea30369c_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, _33717_keyTokens,(&(_34717_j)),(*_self_)._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1b7c60dd9_pushErr(&(*_self_), _33717_keyTokens[_34717_j],jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1ea30369c_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_assign_result = _1b7c51e74_buildType((*_self_)._field_p, (*_self_)._field_tokens,(*_self_)._field_i,(*_self_)._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type82)});;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c635d4_buildEnumerable(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _36817_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	if ((((((*((*_self_)._field_i)) + 2LL) >= (*_self_)._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1b7c60dd9_pushErr(&(*_self_), _36817_token,jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*_self_)._field_i)))++;
	_36817_token=(*_self_)._field_tokens[(*((*_self_)._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1b7c62d97_buildSlc(&(*_self_));;
	};
	((*((*_self_)._field_i)))--;
	return _1b7c6310b_buildArr(&(*_self_));;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c63848_step(_1b7c60812_typeBuilder* _self_) {
	jule::Ptr<_212a0c2ab_Token> _38513_token = (*_self_)._field_tokens[(*((*_self_)._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1ab72b6c4:;
			{
				return _1b7c6146c_buildPrim(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1ab72aea9:;
			{
				return _1b7c61e1d_buildIdent(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1ab72b020:;
			{
				return _1b7c62182_buildCppLink(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1ab72b086:;
			{
				return _1b7c623e6_buildFn(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1ab72b10d:;
			{
				return _1b7c62b33_buildOp(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1ab72ba26:;
			{
				return _1b7c635d4_buildEnumerable(&(*_self_));;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1ab72ba8c:;
			{
				return _1b7c63370_buildMap(&(*_self_));;
			}
		}
		else {
			_case_begin_1ab72ae43:;
			{
				((*((*_self_)._field_i)))++;
				_1b7c60dd9_pushErr(&(*_self_), _38513_token,jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1ab72acab:;
	};
}



inline __jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool _1b7c63aac_build(_1b7c60812_typeBuilder* _self_) {
	__jule_tuple_x_1ea30369c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ea30369c_TypeDecl> _41117_root = _1b7c63848_step(&(*_self_));;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1b7c6016e_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c60812_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0773395_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1d0774c48_pushErr(_1d07746e8_directiveEval* _self_, jule::Ptr<_212a0c2ab_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*_self_)._field_logs = jule::alloc_for_append((*_self_)._field_logs,1);(*_self_)._field_logs.__push(_22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_22ca32409_Logf(_2137_fmt,_2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _1d0775100_splitOperans(_1d07746e8_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < (_3351_tokens.len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _4017_b = _3351_tokens[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1ab751b28:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1ab74e939;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1ab751b8e:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1ab751919:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1ab74e939;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last,_3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1ab74e939:;
	}
	_iter_end_1ab74e939:;;
	if ((_3817_last < _3351_tokens.len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push(_3351_tokens.slice(_3817_last));;
	} else {
		_1d0774c48_pushErr(&(*_self_), _3351_tokens[(_3817_last - 1LL)],jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1d077540d_evalDirectiveIdent(_1d07746e8_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_vars;
		auto it = expr.begin();
		_iter_begin_1ab754bd6:;
		if (it != expr.end()) {
			jule::Str &_7716_var = *it;
			{
				if ((_7716_var == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1ab754bd6:;
			++it;
			goto _iter_begin_1ab754bd6;
		}
		_iter_end_1ab754bd6:;
	};
	return false;;
}



inline jule::Bool _1d077571b_evalDirectivePart(_1d07746e8_directiveEval* _self_, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1d0774c48_pushErr(&(*_self_), _8740_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1d077540d_evalDirectiveIdent(&(*_self_), _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1d0775980_eval(_1d07746e8_directiveEval* _self_) {
	if (((*_self_)._field_d.get()._field_Args.len() == 0LL)) {
		_1d0774c48_pushErr(&(*_self_), (*_self_)._field_d.get()._field_Tag,jule::Str("expression missing", 18),jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _11317_logicalOrParts = _1d0775100_splitOperans(&(*_self_), jule::Str("||", 2),(*_self_)._field_d.get()._field_Args);;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto &expr = _11317_logicalOrParts;
		auto it = expr.begin();
		_iter_begin_1ab75b050:;
		if (it != expr.end()) {
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _12021_logicalAndParts = _1d0775100_splitOperans(&(*_self_), jule::Str("&&", 2),_11821_part);;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto &expr = _12021_logicalAndParts;
					auto it = expr.begin();
					_iter_begin_1ab75c815:;
					if (it != expr.end()) {
						jule::Slice<jule::Ptr<_212a0c2ab_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_212a0c2ab_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_212a0c2ab_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1d0774c48_pushErr(&(*_self_), _12621_first,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL,(_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1d077571b_evalDirectivePart(&(*_self_), _12525_andPart));
						}
						_iter_next_1ab75c815:;
						++it;
						goto _iter_begin_1ab75c815;
					}
					_iter_end_1ab75c815:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1ab75b050:;
			++it;
			goto _iter_begin_1ab75b050;
		}
		_iter_end_1ab75b050:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d07746e8_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b7b56cbe_JuleImporter> static__1d09bd7bb_New(_1d0773395_CompileInfo _5819_info) {
	jule::Ptr<_1b7b56cbe_JuleImporter> _5917_imp = jule::new_ptr<_1b7b56cbe_JuleImporter>(_1b7b56cbe_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_21271b5e7_PathStdlib}), });;
	_1d0773bae_initVars(_5917_imp.get()._field_vars,_5819_info);
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>> _1d09dc90b_AllPackages(_1b7b56cbe_JuleImporter* _self_) {
	return (*_self_)._field_pkgs;;
}



inline void _1d09ee07c_SetModPath(_1b7b56cbe_JuleImporter* _self_, jule::Str _7529_path) {
	(*_self_)._field_mod=_7529_path;
}



inline jule::Str _1d0a2a6c4_GetModPath(_1b7b56cbe_JuleImporter* _self_) {
	return (*_self_)._field_mod;;
}



inline jule::Str _1d0a2ece4_ModById(_1b7b56cbe_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*_self_)._field_mods[_8322_id];;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1b6bdd96c_GetImport(_1b7b56cbe_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ab764531:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1ab764531:;
			++it;
			goto _iter_begin_1ab764531;
		}
		_iter_end_1ab764531:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log _1b6bec6e5_ImportPackage(_1b7b56cbe_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	jule::Slice<jule::Ptr<_22b24c131_DirEntry>> _9717_dirents = ({
		auto except = static__22dcc9e31_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_22ca31eb9_Log>::make({_1d097a206_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_22b24c131_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1d0784829_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*_self_)._field_mod)) {
			(*_self_)._field_mod=_10217_newMod;
			jule::Slice<_22ca31eb9_Log> _10525_errs = _1d0784ac1_CheckModuleFile((*_self_)._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1ea2be217_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1ea2be217_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto &expr = _9717_dirents;
		auto it = expr.begin();
		_iter_begin_1ab765a4e:;
		if (it != expr.end()) {
			jule::Ptr<_22b24c131_DirEntry> _11316_dirent = *it;
			{
				if ((_22b1c84ca_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_22dcb7946_HasSuffix(_11316_dirent.get()._field_Name,jule::Str(".jule", 5)))))) {
					goto _iter_next_1ab765a4e;
				};
				jule::Str _11917__path = _22dcc702c_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_212a12646_File> _12021_file = _212a13b75_NewFileSet(_11917__path);;
				_212a12cc8_Fill(_12021_file.ptr(), _1d0974a19_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_22ca31eb9_Log> _12221_errors = _212a1e521_Lex(_12021_file,static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1b7bd9060_FileInfo> _12721_finfo = _1b7c30abd_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1d0758a95_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1ab765a4e;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_22ca31eb9_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b6c47685_isPassBuildDirectives(&(*_self_), _12721_finfo.get()._field_Ast);
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1ab765a4e;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1ab765a4e:;
			++it;
			goto _iter_begin_1ab765a4e;
		}
		_iter_end_1ab765a4e:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b6c00011_Imported(_1b7b56cbe_JuleImporter* _self_, jule::Ptr<_1d05298bb_ImportInfo> _15331_imp) {
	{
		auto &expr = (*_self_)._field_pkgs;
		auto it = expr.begin();
		_iter_begin_1ab76db89:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1ab76db89:;
			++it;
			goto _iter_begin_1ab76db89;
		}
		_iter_end_1ab76db89:;
	};
	if (((*_self_)._field_mod.len() != 0LL)) {
		{
			auto &expr = (*_self_)._field_mods;
			auto it = expr.begin();
			_iter_begin_1ab770471:;
			if (it != expr.end()) {
				jule::I64 _16217_i = it - expr.begin();
				jule::Str _16220_mod = *it;
				{
					if (((*_self_)._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1ab770471:;
				++it;
				_16217_i++;
				goto _iter_begin_1ab770471;
			}
			_iter_end_1ab770471:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*_self_)._field_mods.len());
		(*_self_)._field_mods = jule::alloc_for_append((*_self_)._field_mods,1);(*_self_)._field_mods.__push((*_self_)._field_mod);;
		_julec_label_setted:;
	};
	(*_self_)._field_pkgs = jule::alloc_for_append((*_self_)._field_pkgs,1);(*_self_)._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_22ca31eb9_Log _1b6c47685_isPassBuildDirectives(_1b7b56cbe_JuleImporter* _self_, jule::Ptr<_1ea2be217_Ast>& _17945_file) {
	__jule_tuple_bool__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto &expr = _17945_file.get()._field_TopDirectives;
		auto it = expr.begin();
		_iter_begin_1ab7736c7:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1ab7736c7;
				};
				_1d07746e8_directiveEval _18421_de = _1d07746e8_directiveEval{._field_d=_18021_td, ._field_vars=(*_self_)._field_vars};;
				jule::Bool _18817_result = _1d0775980_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7736c7:;
			++it;
			goto _iter_begin_1ab7736c7;
		}
		_iter_end_1ab7736c7:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7b56cbe_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0973210_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab7967c7_isCommonOrdered(jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _1834_s, jule::Ptr<_1ea31ed8e_Struct> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1ab797872:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_1ab79819c:;
					if (it != expr.end()) {
						jule::Ptr<_1ea31ed8e_Struct> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_1ab79819c:;
						++it;
						goto _iter_begin_1ab79819c;
					}
					_iter_end_1ab79819c:;
				};
			}
			_iter_next_1ab797872:;
			++it;
			goto _iter_begin_1ab797872;
		}
		_iter_end_1ab797872:;
	};
	return true;;
}

inline jule::Bool _1ab79da65_isCommonOrdered(jule::Slice<jule::Ptr<_1d0550a13_Var>> _1834_s, jule::Ptr<_1d0550a13_Var> _1842_t) {
	{
		auto &expr = _1842_t.get()._field_Depends;
		auto it = expr.begin();
		_iter_begin_1ab79eabb:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> &_1916_d = *it;
			{
				{
					auto &expr = _1834_s;
					auto it = expr.begin();
					_iter_begin_1ab7a03e6:;
					if (it != expr.end()) {
						jule::Ptr<_1d0550a13_Var> &_2020_t2 = *it;
						{
							if ((_1916_d == _2020_t2)) {
								return false;;
							};
						}
						_iter_next_1ab7a03e6:;
						++it;
						goto _iter_begin_1ab7a03e6;
					}
					_iter_end_1ab7a03e6:;
				};
			}
			_iter_next_1ab79eabb:;
			++it;
			goto _iter_begin_1ab79eabb;
		}
		_iter_end_1ab79eabb:;
	};
	return true;;
}



inline void _1ab790d54_orderCommon(jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_1ab792185:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_1ea31ed8e_Struct> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1ab792185:;
			++it;
			_3314_j++;
			goto _iter_begin_1ab792185;
		}
		_iter_end_1ab792185:;
	};
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_1ab79450b:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1ab7967c7_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1ab795331:;
				}
				_iter_end_1ab795331:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1ab79450b;
				};
				(_4117_n)--;
			}
			_iter_next_1ab79450b:;
			++it;
			goto _iter_begin_1ab79450b;
		}
		_iter_end_1ab79450b:;
	};
}

inline void _1ab7916e5_orderCommon(jule::Slice<jule::Ptr<_1d0550a13_Var>>& _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto &expr = _3135_s;
		auto it = expr.begin();
		_iter_begin_1ab799423:;
		if (it != expr.end()) {
			jule::I64 _3314_j = it - expr.begin();
			jule::Ptr<_1d0550a13_Var> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					_3135_s.swap(_3217_i,_3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1ab799423:;
			++it;
			_3314_j++;
			goto _iter_begin_1ab799423;
		}
		_iter_end_1ab799423:;
	};
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _4017_sp = _3135_s.slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto &expr = _4017_sp;
		auto it = expr.begin();
		_iter_begin_1ab79b799:;
		if (it != expr.end()) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1ab79da65_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)),_4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k,static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1ab79c5be:;
				}
				_iter_end_1ab79c5be:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1ab79b799;
				};
				(_4117_n)--;
			}
			_iter_next_1ab79b799:;
			++it;
			goto _iter_begin_1ab79b799;
		}
		_iter_end_1ab79b799:;
	};
}



inline void static__1b7b384cb_orderStructures(jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>& _6036_structs) {
	_1ab790d54_orderCommon(_6036_structs);
}



inline void static__1b7b4c358_orderVars(jule::Slice<jule::Ptr<_1d0550a13_Var>>& _6630_vars) {
	_1ab7916e5_orderCommon(_6630_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1b6c9a3ca_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7d39303_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1b7d70427_optimizeChild(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050b1b6_Scope>& _3938_s) {
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _4017_sdc = jule::new_ptr<_1b7d6ee4e_scopeDeadCode>(_1b7d6ee4e_scopeDeadCode{._field_parent=_self_, ._field_s=_3938_s, ._field_stmts=(&(_3938_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1b7d72a67_optimizeStmts(_4017_sdc);
	};
}



inline void _1b7d706be_optimizeBodyChildExceptional(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050b1b6_Scope>& _5053_s) {
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _5117_sdc = jule::new_ptr<_1b7d6ee4e_scopeDeadCode>(_1b7d6ee4e_scopeDeadCode{._field_s=_5053_s, ._field_stmts=(&(_5053_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1b7d72a67_optimizeStmts(_5117_sdc);
	};
}



inline void _1b7d70955_optimizeBodyChild(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050b1b6_Scope>& _6142_s) {
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _6217_sdc = jule::new_ptr<_1b7d6ee4e_scopeDeadCode>(_1b7d6ee4e_scopeDeadCode{._field_s=_6142_s, ._field_stmts=(&(_6142_s.get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1b7d72a67_optimizeStmts(_6217_sdc);
	};
}



inline void _1b7d70bca_optimizeExprModel(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Any& _7142_model) {
	_1b7d73da9_exprDeadCode _7213_edc = static__1b7d744d6_new(_self_);;
	_1b7d7a201_optimize(&_7213_edc, _7142_model);
}



inline void _1b7d70da6_eliminateFollowed(_1b7d6ee4e_scopeDeadCode* _self_) {
	if (((*((*_self_)._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*_self_)._field_stmts))=(*((*_self_)._field_stmts)).slice(0LL,((*_self_)._field_i + 1LL));
	};
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _8317_parent = (*_self_)._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL,(_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1ab81aecd:;
	}
	_iter_end_1ab81aecd:;;
}



inline void _1b7d7112b_pushGoto(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050dbe1_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1ab81e201:;
	}
	_iter_end_1ab81e201:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1d050dbe1_GotoSt>>::make({_9232_gt}));
}



inline void _1b7d713a1_pushLabel(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050d905_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL,((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1ab8209c7;
			};
			(_10317_i)++;
		}
	_iter_next_1ab8209c7:;
	}
	_iter_end_1ab8209c7:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1d050d905_Label>>::make({_10233_l}));
}



inline void _1b7d71626_optimizeRangeIter(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050cd66_RangeIter> _11541_it) {
	_1b7d70bca_optimizeExprModel(_self_, _11541_it.get()._field_Expr.get()._field_Model);
	_1b7d70955_optimizeBodyChild(_self_, _11541_it.get()._field_Scope);
}



inline void _1b7d7189b_optimizeWhileIter(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050c481_WhileIter> _12041_it) {
	_1b7d70bca_optimizeExprModel(_self_, _12041_it.get()._field_Expr);
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1b7d7288b_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1b7d70955_optimizeBodyChild(_self_, _12041_it.get()._field_Scope);
}



inline void _1b7d71b21_optimizeInfIter(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050c00d_InfIter> _12839_it) {
	_1b7d70955_optimizeBodyChild(_self_, _12839_it.get()._field_Scope);
}



inline void _1b7d71d96_optimizeConditional(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050bc22_Conditional> _13243_c) {
	{
		auto &expr = _13243_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1ab82ba5a:;
		if (it != expr.end()) {
			jule::Ptr<_1d050b5b2_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1b7d70bca_optimizeExprModel(_self_, _13321_case.get()._field_Expr);
					_1b7d70955_optimizeBodyChild(_self_, _13321_case.get()._field_Scope);
				};
			}
			_iter_next_1ab82ba5a:;
			++it;
			goto _iter_begin_1ab82ba5a;
		}
		_iter_end_1ab82ba5a:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1b7d70427_optimizeChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		} else {
			_1b7d70955_optimizeBodyChild(_self_, _13243_c.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1b7d7211b_optimizeMatch(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050ee12_Match> _15037_m) {
	{
		auto &expr = _15037_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1ab82e6a6:;
		if (it != expr.end()) {
			jule::Ptr<_1d051095c_Case> _15121_case = *it;
			{
				{
					auto &expr = _15121_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1ab830003:;
					if (it != expr.end()) {
						jule::Ptr<_1d0598572_Data> _15225_expr = *it;
						{
							_1b7d70bca_optimizeExprModel(_self_, _15225_expr.get()._field_Model);
						}
						_iter_next_1ab830003:;
						++it;
						goto _iter_begin_1ab830003;
					}
					_iter_end_1ab830003:;
				};
				_1b7d70955_optimizeBodyChild(_self_, _15121_case.get()._field_Scope);
			}
			_iter_next_1ab82e6a6:;
			++it;
			goto _iter_begin_1ab82e6a6;
		}
		_iter_end_1ab82e6a6:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1b7d70427_optimizeChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		} else {
			_1b7d70955_optimizeBodyChild(_self_, _15037_m.get()._field_Default.get()._field_Scope);
		};
	};
}



inline void _1b7d72391_optimizeAssign(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050e51b_Assign> _16838_assign) {
	_1b7d70bca_optimizeExprModel(_self_, _16838_assign.get()._field_L.get()._field_Model);
	_1b7d70bca_optimizeExprModel(_self_, _16838_assign.get()._field_R.get()._field_Model);
}



inline void _1b7d72616_optimizeMultiAssign(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Ptr<_1d050e8c3_MultiAssign> _17343_assign) {
	{
		auto &expr = _17343_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1ab8334e0:;
		if (it != expr.end()) {
			jule::Ptr<_1d0598572_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1b7d70bca_optimizeExprModel(_self_, _17421_l.get()._field_Model);
				};
			}
			_iter_next_1ab8334e0:;
			++it;
			goto _iter_begin_1ab8334e0;
		}
		_iter_end_1ab8334e0:;
	};
	_1b7d70bca_optimizeExprModel(_self_, _17343_assign.get()._field_R);
}



inline void _1b7d7288b_optimizeStmt(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab834bb7:;
			{
				jule::Ptr<_1d050b1b6_Scope> _18521_scope = _18236_st.cast_ptr<_1d050b1b6_Scope>(&__jule_any_type23);;
				if (_18521_scope.get()._field_Deferred) {
					_1b7d72d53_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1b7d70427_optimizeChild(_self_, _18521_scope);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ab834d3d:;
			{
				_1b7d71626_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1d050cd66_RangeIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ab834da4:;
			{
				_1b7d7189b_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1d050c481_WhileIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab834e1a:;
			{
				_1b7d71b21_optimizeInfIter(_self_, _18236_st.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab834e92:;
			{
				_1b7d71d96_optimizeConditional(_self_, _18236_st.cast_ptr<_1d050bc22_Conditional>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ab835019:;
			{
				_1b7d7211b_optimizeMatch(_self_, _18236_st.cast_ptr<_1d050ee12_Match>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ab835091:;
			{
				_1b7d72391_optimizeAssign(_self_, _18236_st.cast_ptr<_1d050e51b_Assign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ab835118:;
			{
				_1b7d72616_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1d050e8c3_MultiAssign>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab835190:;
			{
				jule::Ptr<_1d0598572_Data> _20621_d = _18236_st.cast_ptr<_1d0598572_Data>(&__jule_any_type25);;
				if (_self_.get()._field_except) {
					goto _match_end_1ab834cc7;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type31) {
						_case_begin_1ab83a0da:;
						{
							_1b7d70da6_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1ab83a629:;
						{
							_1b7d70bca_optimizeExprModel(_self_, _20621_d.get()._field_Model);
						}
					}
					_match_end_1ab83a5c4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab835217:;
			{
				_1b7d70da6_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ab83528e:;
			{
				_1b7d7112b_pushGoto(_self_, _18236_st.cast_ptr<_1d050dbe1_GotoSt>(&__jule_any_type44));
				_1b7d70da6_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ab835316:;
			{
				_1b7d713a1_pushLabel(_self_, _18236_st.cast_ptr<_1d050d905_Label>(&__jule_any_type22));
			}
		}
		_match_end_1ab834cc7:;
	};
}



inline void _1b7d72a67_optimizeStmts(jule::Ptr<_1b7d6ee4e_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1b7d7288b_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1ab83cac1:;
	}
	_iter_end_1ab83cac1:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b7d6ee4e_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1b7d73da9_exprDeadCode static__1b7d744d6_new(jule::Ptr<_1b7d6ee4e_scopeDeadCode>& _5024_s) {
	return _1b7d73da9_exprDeadCode{._field_s=_5024_s};;
}



inline void _1b7d7475b_binary(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb015897_BinopExprModel> _5625_m) {
	_1b7d7a201_optimize(&(*_self_), _5625_m.get()._field_Left.get()._field_Model);
	_1b7d7a201_optimize(&(*_self_), _5625_m.get()._field_Right.get()._field_Model);
}



inline void _1b7d749d1_unary(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb015c4e_UnaryExprModel> _6124_m) {
	_1b7d7a201_optimize(&(*_self_), _6124_m.get()._field_Expr.get()._field_Model);
}



inline void _1b7d74c56_structureLit(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb016502_StructLitExprModel> _6531_m) {
	{
		auto &expr = _6531_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1ab840d05:;
		if (it != expr.end()) {
			jule::Ptr<_1eb01614a_StructArgExprModel> _6621_arg = *it;
			{
				_1b7d7a201_optimize(&(*_self_), _6621_arg.get()._field_Expr);
			}
			_iter_next_1ab840d05:;
			++it;
			goto _iter_begin_1ab840d05;
		}
		_iter_end_1ab840d05:;
	};
}



inline void _1b7d74ecb_allocStructure(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb016810_AllocStructLitExprModel> _7133_m) {
	_1b7d74c56_structureLit(&(*_self_), _7133_m.get()._field_Lit);
}



inline void _1b7d75251_casting(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb016d60_CastingExprModel> _7526_m) {
	_1b7d7a201_optimize(&(*_self_), _7526_m.get()._field_Expr);
}



inline void _1b7d754c6_args(_1b7d73da9_exprDeadCode* _self_, jule::Slice<jule::Any>& _7924_args) {
	{
		auto &expr = _7924_args;
		auto it = expr.begin();
		_iter_begin_1ab84305a:;
		if (it != expr.end()) {
			jule::Any _8021_arg = *it;
			{
				_1b7d7a201_optimize(&(*_self_), _8021_arg);
			}
			_iter_next_1ab84305a:;
			++it;
			goto _iter_begin_1ab84305a;
		}
		_iter_end_1ab84305a:;
	};
}



inline void _1b7d7574b_funcCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb017712_FnCallExprModel> _8527_m) {
	_1b7d7a201_optimize(&(*_self_), _8527_m.get()._field_Expr);
	_1b7d754c6_args(&(*_self_), _8527_m.get()._field_Args);
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1b7d706be_optimizeBodyChildExceptional((*_self_)._field_s, _8527_m.get()._field_Except);
	};
}



inline void _1b7d759c1_slice(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb017ab9_SliceExprModel> _9324_m) {
	_1b7d754c6_args(&(*_self_), _9324_m.get()._field_Elems);
}



inline void _1b7d75c46_array(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01a8ad_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1b7d7a201_optimize(&(*_self_), _9724_m.get()._field_Elems[0LL]);
	};
	_1b7d754c6_args(&(*_self_), _9724_m.get()._field_Elems);
}



inline void _1b7d75ebb_indexing(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01803c_IndexingExprModel> _10427_m) {
	_1b7d7a201_optimize(&(*_self_), _10427_m.get()._field_Expr.get()._field_Model);
	_1b7d7a201_optimize(&(*_self_), _10427_m.get()._field_Index.get()._field_Model);
}



inline void _1b7d76241_anonFunc(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb0183e4_AnonFnExprModel> _10927_m) {
	_1b7d72d53_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1b7d764b6_mapExpr(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb018c1e_MapExprModel> _11326_m) {
	{
		auto &expr = _11326_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1ab84902d:;
		if (it != expr.end()) {
			jule::Ptr<_1eb01879b_KeyValPairExprModel> _11421_pair = *it;
			{
				_1b7d7a201_optimize(&(*_self_), _11421_pair.get()._field_Key);
				_1b7d7a201_optimize(&(*_self_), _11421_pair.get()._field_Val);
			}
			_iter_next_1ab84902d:;
			++it;
			goto _iter_begin_1ab84902d;
		}
		_iter_end_1ab84902d:;
	};
}



inline void _1b7d7673b_slicing(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01925d_SlicingExprModel> _12026_m) {
	_1b7d7a201_optimize(&(*_self_), _12026_m.get()._field_Expr);
	_1b7d7a201_optimize(&(*_self_), _12026_m.get()._field_Left);
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1b7d7a201_optimize(&(*_self_), _12026_m.get()._field_Right);
	};
}



inline void _1b7d769b1_traitSub(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01979c_TraitSubIdentExprModel> _12827_m) {
	_1b7d7a201_optimize(&(*_self_), _12827_m.get()._field_Expr);
}



inline void _1b7d76c36_structureSub(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _13231_m) {
	_1b7d7a201_optimize(&(*_self_), _13231_m.get()._field_Expr.get()._field_Model);
}



inline void _1b7d76eab_commonSub(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01b20a_CommonSubIdentExprModel> _13628_m) {
	_1b7d7a201_optimize(&(*_self_), _13628_m.get()._field_Expr);
}



inline void _1b7d77231_tuple(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01b507_TupleExprModel> _14024_m) {
	{
		auto &expr = _14024_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1ab84d52c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0598572_Data> _14121_d = *it;
			{
				_1b7d7a201_optimize(&(*_self_), _14121_d.get()._field_Model);
			}
			_iter_next_1ab84d52c:;
			++it;
			goto _iter_begin_1ab84d52c;
		}
		_iter_end_1ab84d52c:;
	};
}



inline void _1b7d774a6_newCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1b7d7a201_optimize(&(*_self_), _14626_m.get()._field_Init);
	};
}



inline void _1b7d7772b_outCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel> _15226_m) {
	_1b7d7a201_optimize(&(*_self_), _15226_m.get()._field_Expr);
}



inline void _1b7d779a1_outlnCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel> _15628_m) {
	_1b7d7a201_optimize(&(*_self_), _15628_m.get()._field_Expr);
}



inline void _1b7d77c26_panicCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel> _16028_m) {
	_1b7d7a201_optimize(&(*_self_), _16028_m.get()._field_Expr);
}



inline void _1b7d77e9b_assertCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel> _16429_m) {
	_1b7d7a201_optimize(&(*_self_), _16429_m.get()._field_Expr);
}



inline void _1b7d78221_errorCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel> _16828_m) {
	_1b7d7a201_optimize(&(*_self_), _16828_m.get()._field_Err.get()._field_Model);
}



inline void _1b7d78496_makeCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1b7d7a201_optimize(&(*_self_), _17227_m.get()._field_Len);
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1b7d7a201_optimize(&(*_self_), _17227_m.get()._field_Cap);
	};
}



inline void _1b7d7871b_appendCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel> _18129_m) {
	_1b7d7a201_optimize(&(*_self_), _18129_m.get()._field_Dest);
	_1b7d7a201_optimize(&(*_self_), _18129_m.get()._field_Elements);
}



inline void _1b7d78991_lenCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01da26_BuiltinLenCallExprModel> _18626_m) {
	_1b7d7a201_optimize(&(*_self_), _18626_m.get()._field_Expr.get()._field_Model);
}



inline void _1b7d78c16_capCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel> _19026_m) {
	_1b7d7a201_optimize(&(*_self_), _19026_m.get()._field_Expr.get()._field_Model);
}



inline void _1b7d78e8b_cloneCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel> _19428_m) {
	_1b7d7a201_optimize(&(*_self_), _19428_m.get()._field_Expr);
}



inline void _1b7d79211_deleteCall(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel> _19829_m) {
	_1b7d7a201_optimize(&(*_self_), _19829_m.get()._field_Dest.get()._field_Model);
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1b7d7a201_optimize(&(*_self_), _19829_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1b7d79486_sizeof(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb020044_SizeofExprModel> _20525_m) {
	_1b7d7a201_optimize(&(*_self_), _20525_m.get()._field_Expr);
}



inline void _1b7d7970b_alignof(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb020330_AlignofExprModel> _20926_m) {
	_1b7d7a201_optimize(&(*_self_), _20926_m.get()._field_Expr);
}



inline void _1b7d79981_integratedToStr(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb020929_IntegratedToStrExprModel> _21334_m) {
	_1b7d7a201_optimize(&(*_self_), _21334_m.get()._field_Expr);
}



inline void _1b7d79c06_free(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb0210cd_FreeExprModel> _21723_m) {
	_1b7d7a201_optimize(&(*_self_), _21723_m.get()._field_Expr);
}



inline void _1b7d79e7b_backendEmit(_1b7d73da9_exprDeadCode* _self_, jule::Ptr<_1eb020ce2_BackendEmitExprModel> _22130_m) {
	_1b7d754c6_args(&(*_self_), _22130_m.get()._field_Exprs);
}



inline void _1b7d7a201_optimize(_1b7d73da9_exprDeadCode* _self_, jule::Any& _22528_model) {
	{
		auto &_match_expr{ _22528_model };
		
		if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ab85b11c:;
			{
				_1b7d7475b_binary(&(*_self_), _22528_model.cast_ptr<_1eb015897_BinopExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ab85b194:;
			{
				_1b7d749d1_unary(&(*_self_), _22528_model.cast_ptr<_1eb015c4e_UnaryExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab85b21b:;
			{
				_1b7d74c56_structureLit(&(*_self_), _22528_model.cast_ptr<_1eb016502_StructLitExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ab85b5e5:;
			{
				_1b7d74ecb_allocStructure(&(*_self_), _22528_model.cast_ptr<_1eb016810_AllocStructLitExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab85b65b:;
			{
				_1b7d75251_casting(&(*_self_), _22528_model.cast_ptr<_1eb016d60_CastingExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab85b6d3:;
			{
				_1b7d7574b_funcCall(&(*_self_), _22528_model.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ab85b75a:;
			{
				_1b7d759c1_slice(&(*_self_), _22528_model.cast_ptr<_1eb017ab9_SliceExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ab85b7d2:;
			{
				_1b7d75c46_array(&(*_self_), _22528_model.cast_ptr<_1eb01a8ad_ArrayExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ab85b859:;
			{
				_1b7d75ebb_indexing(&(*_self_), _22528_model.cast_ptr<_1eb01803c_IndexingExprModel>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab85b8d1:;
			{
				_1b7d76241_anonFunc(&(*_self_), _22528_model.cast_ptr<_1eb0183e4_AnonFnExprModel>(&__jule_any_type107));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab85b958:;
			{
				_1b7d764b6_mapExpr(&(*_self_), _22528_model.cast_ptr<_1eb018c1e_MapExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ab85b9d0:;
			{
				_1b7d7673b_slicing(&(*_self_), _22528_model.cast_ptr<_1eb01925d_SlicingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ab85ba57:;
			{
				_1b7d769b1_traitSub(&(*_self_), _22528_model.cast_ptr<_1eb01979c_TraitSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ab85bace:;
			{
				_1b7d76c36_structureSub(&(*_self_), _22528_model.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab85bb56:;
			{
				_1b7d76eab_commonSub(&(*_self_), _22528_model.cast_ptr<_1eb01b20a_CommonSubIdentExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab85bbcd:;
			{
				_1b7d77231_tuple(&(*_self_), _22528_model.cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ab85bc55:;
			{
				_1b7d7772b_outCall(&(*_self_), _22528_model.cast_ptr<_1eb01b8d1_BuiltinOutCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ab85bccc:;
			{
				_1b7d779a1_outlnCall(&(*_self_), _22528_model.cast_ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ab85bd54:;
			{
				_1b7d774a6_newCall(&(*_self_), _22528_model.cast_ptr<_1eb01c4c5_BuiltinNewCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab85bdcb:;
			{
				_1b7d77c26_panicCall(&(*_self_), _22528_model.cast_ptr<_1eb01c8b0_BuiltinPanicCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ab85be53:;
			{
				_1b7d77e9b_assertCall(&(*_self_), _22528_model.cast_ptr<_1eb01cd66_BuiltinAssertCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab85beca:;
			{
				_1b7d78221_errorCall(&(*_self_), _22528_model.cast_ptr<_1eb01ec47_BuiltinErrorCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ab85c052:;
			{
				_1b7d78496_makeCall(&(*_self_), _22528_model.cast_ptr<_1eb01d31c_BuiltinMakeCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab85c0c9:;
			{
				_1b7d7871b_appendCall(&(*_self_), _22528_model.cast_ptr<_1eb01d707_BuiltinAppendCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ab85c151:;
			{
				_1b7d78991_lenCall(&(*_self_), _22528_model.cast_ptr<_1eb01da26_BuiltinLenCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ab85c1c8:;
			{
				_1b7d78c16_capCall(&(*_self_), _22528_model.cast_ptr<_1eb01dd45_BuiltinCapCallExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ab85c250:;
			{
				_1b7d78e8b_cloneCall(&(*_self_), _22528_model.cast_ptr<_1eb01c0da_BuiltinCloneCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ab85c2c7:;
			{
				_1b7d79211_deleteCall(&(*_self_), _22528_model.cast_ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ab85c34e:;
			{
				_1b7d79486_sizeof(&(*_self_), _22528_model.cast_ptr<_1eb020044_SizeofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ab85c3c6:;
			{
				_1b7d7970b_alignof(&(*_self_), _22528_model.cast_ptr<_1eb020330_AlignofExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ab85c44d:;
			{
				_1b7d79981_integratedToStr(&(*_self_), _22528_model.cast_ptr<_1eb020929_IntegratedToStrExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab85c4c5:;
			{
				_1b7d79c06_free(&(*_self_), _22528_model.cast_ptr<_1eb0210cd_FreeExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab85c54c:;
			{
				_1b7d79e7b_backendEmit(&(*_self_), _22528_model.cast_ptr<_1eb020ce2_BackendEmitExprModel>(&__jule_any_type26));
			}
		}
		_match_end_1ab85b31a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b7d73da9_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d068d832_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d068db51_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d068e019_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d068e5d0_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d068e976_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d0690b31_scopeOptimizer> static__1d069114d_new(jule::Ptr<_1d050b1b6_Scope> _4523_scope) {
	return jule::new_ptr<_1d0690b31_scopeOptimizer>(_1d0690b31_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _1d06913c3_setCurrentStmt(_1d0690b31_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*_self_)._field_scope.get()._field_Stmts[(*_self_)._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1d0691648_optimizeData(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d0598572_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab897202:;
			{
				jule::Ptr<_1eb017712_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36);;
				if (_22b128bab_Production) {
					if (((!(_1eb027bb7_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1d06944a3_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path,jule::Str("debug", 5)))) {
						_1d06913c3_setCurrentStmt(&(*_self_), nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1ab896ee3:;
	};
	static__1d0696708_optimize(_5535_d.get()._field_Model);
}



inline void _1d06918bd_optimizeVar(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d0550a13_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1d0696708_optimize(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1d0691b43_optimizeConditional(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050bc22_Conditional> _7642_c) {
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1ab89a304:;
		if (it != expr.end()) {
			jule::Ptr<_1d050b5b2_If> _7721_elif = *it;
			{
				static__1d0696708_optimize(_7721_elif.get()._field_Expr);
				_1d0693dcb_optimizeChild(&(*_self_), _7721_elif.get()._field_Scope);
			}
			_iter_next_1ab89a304:;
			++it;
			goto _iter_begin_1ab89a304;
		}
		_iter_end_1ab89a304:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1d0693dcb_optimizeChild(&(*_self_), _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1d069eb62_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1ab89c180:;
		if (it != expr.end()) {
			jule::I64 _9214_i = it - expr.begin();
			jule::Ptr<_1d050b5b2_If> _9221_elif = *it;
			{
				if ((!(_1d06947b1_isConstantValidConditionalCase(_9221_elif)))) {
					goto _iter_next_1ab89c180;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL,_9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1d050b89d_Else>(_1d050b89d_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1ab89c180;
			}
			_iter_next_1ab89c180:;
			++it;
			_9214_i++;
			goto _iter_begin_1ab89c180;
		}
		_iter_end_1ab89c180:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d050b5b2_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1d050b5b2_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1d0695152_isUnreachableConditionalCase((*(_10917_i)))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1ab8a0392:;
	}
	_iter_end_1ab8a0392:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto &expr = _7642_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1ab8a1a03:;
		if (it != expr.end()) {
			jule::I64 _12913_j = it - expr.begin();
			jule::Ptr<_1d050b5b2_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1ab8a1a03:;
			++it;
			_12913_j++;
			goto _iter_begin_1ab8a1a03;
		}
		_iter_end_1ab8a1a03:;
	};
	if ((_12817_only != -1LL)) {
		_1d06913c3_setCurrentStmt(&(*_self_), jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope, &__jule_any_type23));
	};
}



inline void _1d069202d_buildDefaultConstatTrueCase(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d051095c_Case> _14550_case, jule::I64& _14568_i, jule::Ptr<_1d050ee12_Match>& _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = _14568_i;;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1ab8a44c8;
			};
			jule::Any &_15322_stmt = _14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _15322_stmt };
				
				if (_match_expr.type == &__jule_any_type51) {
					_case_begin_1ab8a4b38:;
					{
						(_14568_i)++;
						if ((_14568_i >= _14581_m.get()._field_Cases.len())) {
							_15322_stmt=jule::Any(_14581_m.get()._field_Default.get()._field_Scope, &__jule_any_type23);
							goto _iter_end_1ab8a44c8;
						};
						_14550_case=_14581_m.get()._field_Cases[_14568_i];
						_15322_stmt=jule::Any(_14550_case.get()._field_Scope, &__jule_any_type23);
					}
				}
				else {
					_case_begin_1ab8a6079:;
					{
						goto _iter_end_1ab8a44c8;
					}
				}
				_match_end_1ab8a5e8b:;
			};
		}
	_iter_next_1ab8a44c8:;
	}
	_iter_end_1ab8a44c8:;;
	_14581_m.get()._field_Default=_14581_m.get()._field_Cases[_14713_start];
	_14581_m.get()._field_Cases=_14581_m.get()._field_Cases.slice(0LL,_14713_start);
}



inline void _1d069223c_optimizeMatch(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050ee12_Match> _17136_m) {
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1ab8a8158:;
		if (it != expr.end()) {
			jule::Ptr<_1d051095c_Case> _17221_case = *it;
			{
				{
					auto &expr = _17221_case.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1ab8a89a5:;
					if (it != expr.end()) {
						jule::Ptr<_1d0598572_Data> _17325_expr = *it;
						{
							static__1d0696708_optimize(_17325_expr.get()._field_Model);
						}
						_iter_next_1ab8a89a5:;
						++it;
						goto _iter_begin_1ab8a89a5;
					}
					_iter_end_1ab8a89a5:;
				};
				_1d0693dcb_optimizeChild(&(*_self_), _17221_case.get()._field_Scope);
			}
			_iter_next_1ab8a8158:;
			++it;
			goto _iter_begin_1ab8a8158;
		}
		_iter_end_1ab8a8158:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1d0693dcb_optimizeChild(&(*_self_), _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1d069eb62_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1ab8aa644:;
		if (it != expr.end()) {
			jule::I64 _18918_i = it - expr.begin();
			jule::Ptr<_1d051095c_Case> _18925_case = *it;
			{
				if ((!(_1d0694daa_isConstantValidMatchCase(_18925_case)))) {
					goto _iter_next_1ab8aa644;
				};
				_18617_constCase=true;
				_1d069202d_buildDefaultConstatTrueCase(&(*_self_), _18925_case,_18918_i,_17136_m);
				goto _iter_end_1ab8aa644;
			}
			_iter_next_1ab8aa644:;
			++it;
			_18918_i++;
			goto _iter_begin_1ab8aa644;
		}
		_iter_end_1ab8aa644:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d051095c_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1d051095c_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1d069540a_isUnreachableMatchCase((*(_20317_i)))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1ab8ad35b:;
	}
	_iter_end_1ab8ad35b:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto &expr = _17136_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1ab8ae417:;
		if (it != expr.end()) {
			jule::I64 _21913_j = it - expr.begin();
			jule::Ptr<_1d051095c_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1ab8ae417:;
			++it;
			_21913_j++;
			goto _iter_begin_1ab8ae417;
		}
		_iter_end_1ab8ae417:;
	};
	if ((_21817_only != -1LL)) {
		_1d06913c3_setCurrentStmt(&(*_self_), jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope, &__jule_any_type23));
	};
}



inline void _1d06924b2_optimizeRangeIter(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050cd66_RangeIter> _23540_it) {
	static__1d0696708_optimize(_23540_it.get()._field_Expr.get()._field_Model);
	_1d0693dcb_optimizeChild(&(*_self_), _23540_it.get()._field_Scope);
}



inline void _1d0692737_optimizeWhileIter(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050c481_WhileIter> _24040_it) {
	static__1d0696708_optimize(_24040_it.get()._field_Expr);
	_1d0693b56_optimizeStmt(&(*_self_), _24040_it.get()._field_Next);
	_1d0693dcb_optimizeChild(&(*_self_), _24040_it.get()._field_Scope);
}



inline jule::Bool _1d0692a45_substr(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050e51b_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ab8b3581:;
			{
				jule::Ptr<_1eb01925d_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.cast_ptr<_1eb01925d_SlicingExprModel>(&__jule_any_type100);;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1d06913c3_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1d068e5d0_MutSlicingExprModel>(_1d068e5d0_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right}), &__jule_any_type128));
					return true;;
				};
			}
		}
		_match_end_1ab8b352b:;
	};
	return false;;
}



inline jule::Bool _1d0692d53_strInsert(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050e51b_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ab8b59a1:;
			{
				jule::Ptr<_1eb015897_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.cast_ptr<_1eb015897_BinopExprModel>(&__jule_any_type119);;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1d06913c3_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1d068e976_StrInsertBeginExprModel>(_1d068e976_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model}), &__jule_any_type129));
					return true;;
				};
			}
		}
		_match_end_1ab8b56e8:;
	};
	return false;;
}



inline jule::Bool _1d0693161_strAssign(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050e51b_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_1d05c9251_Prim> _28213_lp = _1d05c688b_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1d05cc485_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1d0692a45_substr(&(*_self_), _27832_a) || _1d0692d53_strInsert(&(*_self_), _27832_a)) {
			_case_begin_1ab8b9378:;
			{
				return true;;
			}
		}
		_match_end_1ab8b92e0:;
	};
	return false;;
}



inline void _1d06933d6_optimizeAssign(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050e51b_Assign> _29437_assign) {
	if ((_1d069d556_Copy && _1d0693161_strAssign(&(*_self_), _29437_assign))) {
		return;;
	};
	static__1d0696708_optimize(_29437_assign.get()._field_L.get()._field_Model);
	static__1d0696708_optimize(_29437_assign.get()._field_R.get()._field_Model);
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1ab8bb27b:;
			{
				if ((_1d069de3b_Math && (_1d05c7cdd_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL,(_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1eb015897_BinopExprModel>(_1eb015897_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}), &__jule_any_type119);;
					static__1d0696708_optimize(_30725_model);
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type == &__jule_any_type119) {
							_case_begin_1ab8bd701:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1eb0153d0_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1ab8bd49d:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1ab8bb127:;
	};
	if (_1d069db2d_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type27) {
				_case_begin_1ab8c037e:;
				{
					jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.cast_ptr<_1eb01d707_BuiltinAppendCallExprModel>(&__jule_any_type27);;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type85) {
							_case_begin_1ab8c1418:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type73) {
										_case_begin_1ab8c1bbb:;
										{
											_1d06913c3_setCurrentStmt(&(*_self_), jule::Any(jule::new_ptr<_1d068e019_PushToSliceExprModel>(_1d068e019_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.cast_ptr<_1eb017ab9_SliceExprModel>(&__jule_any_type85)}), &__jule_any_type130));
										}
									}
									_match_end_1ab8c1b66:;
								};
							}
						}
						_match_end_1ab8c1209:;
					};
				}
			}
			_match_end_1ab8bbd70:;
		};
	};
}



inline void _1d069365b_optimizeMultiAssign(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050e8c3_MultiAssign> _34442_assign) {
	{
		auto &expr = _34442_assign.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1ab8c078b:;
		if (it != expr.end()) {
			jule::Ptr<_1d0598572_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1d0696708_optimize(_34521_l.get()._field_Model);
				};
			}
			_iter_next_1ab8c078b:;
			++it;
			goto _iter_begin_1ab8c078b;
		}
		_iter_end_1ab8c078b:;
	};
	static__1d0696708_optimize(_34442_assign.get()._field_R);
}



inline void _1d06938d1_optimizeRet(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d0511386_RetSt> _35334_r) {
	static__1d0696708_optimize(_35334_r.get()._field_Expr);
}



inline void _1d0693b56_optimizeStmt(_1d0690b31_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ab8c4196:;
			{
				_1d0693dcb_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_1d050b1b6_Scope>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1ab8c421d:;
			{
				_1d0691648_optimizeData(&(*_self_), _35735_stmt.cast_ptr<_1d0598572_Data>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab8c4284:;
			{
				_1d06918bd_optimizeVar(&(*_self_), _35735_stmt.cast_ptr<_1d0550a13_Var>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ab8c42ea:;
			{
				_1d0691b43_optimizeConditional(&(*_self_), _35735_stmt.cast_ptr<_1d050bc22_Conditional>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1ab8c4361:;
			{
				_1d06924b2_optimizeRangeIter(&(*_self_), _35735_stmt.cast_ptr<_1d050cd66_RangeIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ab8c43d8:;
			{
				_1d0692737_optimizeWhileIter(&(*_self_), _35735_stmt.cast_ptr<_1d050c481_WhileIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ab8c4460:;
			{
				_1d0693dcb_optimizeChild(&(*_self_), _35735_stmt.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1ab8c44d7:;
			{
				_1d06933d6_optimizeAssign(&(*_self_), _35735_stmt.cast_ptr<_1d050e51b_Assign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ab8c455e:;
			{
				_1d069365b_optimizeMultiAssign(&(*_self_), _35735_stmt.cast_ptr<_1d050e8c3_MultiAssign>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1ab8c45d6:;
			{
				_1d069223c_optimizeMatch(&(*_self_), _35735_stmt.cast_ptr<_1d050ee12_Match>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ab8c465d:;
			{
				_1d06938d1_optimizeRet(&(*_self_), _35735_stmt.cast_ptr<_1d0511386_RetSt>(&__jule_any_type53));
			}
		}
		_match_end_1ab8c3ecb:;
	};
}



inline void _1d0693dcb_optimizeChild(_1d0690b31_scopeOptimizer* _self_, jule::Ptr<_1d050b1b6_Scope> _38436_child) {
	jule::Ptr<_1d0690b31_scopeOptimizer> _38517_so = static__1d069114d_new(_38436_child);;
	_1d06940a7_optimize(_38517_so.ptr());
}



inline void _1d06940a7_optimize(_1d0690b31_scopeOptimizer* _self_) {
	{
		auto &expr = (*_self_)._field_scope.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1ab8ca80c:;
		if (it != expr.end()) {
			jule::I64 _39114_i = it - expr.begin();
			jule::Any _39121_stmt = *it;
			{
				(*_self_)._field_i=_39114_i;
				_1d0693b56_optimizeStmt(&(*_self_), _39121_stmt);
			}
			_iter_next_1ab8ca80c:;
			++it;
			_39114_i++;
			goto _iter_begin_1ab8ca80c;
		}
		_iter_end_1ab8ca80c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d0690b31_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1d0696708_optimize(jule::Any& _5829_model) {
	if (_1b7c727d0_exprEnabled) {
		jule::Ptr<_1d06961ec_exprOptimizer> _6121_exop = jule::new_ptr<_1d06961ec_exprOptimizer>(_1d06961ec_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&(_5829_model))))});;
		_1d069c90c_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1d0696a16_strCond(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb015897_BinopExprModel> _6826_m) {
	jule::Ptr<_1d05c9251_Prim> _6913_lp = _1d05c688b_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1d05cc485_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ab8d4382:;
			{
				({
					jule::Ptr<_1eb0153d0_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1eb0153d0_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1ab8d432c:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ab8d3aac:;
			{
				goto _match_end_1ab8d511e;
			}
		}
		else {
			_case_begin_1ab8d54a4:;
			{
				return true;;
			}
		}
		_match_end_1ab8d511e:;
	};
	_julec_label_opt:;
	jule::Ptr<_1eb0095b1_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
	if ((!(_1eb00b5e6_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1ab8d6b8c:;
			{
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1eb01b20a_CommonSubIdentExprModel>(_1eb01b20a_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type75);
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1ab8d6c03:;
			{
				jule::Ptr<_212a0c2ab_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*_self_)._field_model))=jule::Any(jule::new_ptr<_1eb015c4e_UnaryExprModel>(_1eb015c4e_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Model=jule::Any(jule::new_ptr<_1eb01b20a_CommonSubIdentExprModel>(_1eb01b20a_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type75), }), ._field_Op=_10021_op}), &__jule_any_type76);
			}
		}
		_match_end_1ab8d642d:;
	};
	return true;;
}



inline void _1d0696c8b_binary(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb015897_BinopExprModel> _11625_m) {
	static__1d0696708_optimize(_11625_m.get()._field_Left.get()._field_Model);
	static__1d0696708_optimize(_11625_m.get()._field_Right.get()._field_Model);
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ab8d8265:;
			{
				goto _match_end_1ab8da6b8;
			}
		}
		else {
			_case_begin_1ab8da81c:;
			{
				return;;
			}
		}
		_match_end_1ab8da6b8:;
	};
	if ((_1d069eb62_Cond && _1d0696a16_strCond(&(*_self_), _11625_m))) {
		return;;
	};
	if ((!(_1d069de3b_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1ab8db862:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1d069cd08_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1eb0095b1_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
					_1eb00c592_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1ab8db8c8:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1d069cd08_checkForBitShiftOpt(_11625_m.get()._field_Left,_11625_m.get()._field_Right);
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1eb0095b1_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
					_1eb00c592_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1ab8db93e:;
			{
				jule::Ptr<_1eb0095b1_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
				jule::F64 _15317_d = _1eb00c097_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1eb00c31c_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1ab8db675:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_1d068d832_UnsafeBinopExprModel>(_1d068d832_UnsafeBinopExprModel{._field_Node=_11625_m}), &__jule_any_type131);;
	(*((*_self_)._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _1d0697011_unary(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb015c4e_UnaryExprModel> _16324_m) {
	static__1d0696708_optimize(_16324_m.get()._field_Expr.get()._field_Model);
	if ((_1d069e788_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type76) {
				_case_begin_1ab8e389c:;
				{
					jule::Ptr<_1eb015c4e_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.cast_ptr<_1eb015c4e_UnaryExprModel>(&__jule_any_type76);;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*_self_)._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1ab8e3847:;
		};
	};
}



inline void _1d0697286_structureLit(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb016502_StructLitExprModel> _17631_m) {
	{
		auto &expr = _17631_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1ab8e5470:;
		if (it != expr.end()) {
			jule::Ptr<_1eb01614a_StructArgExprModel> _17721_arg = *it;
			{
				static__1d0696708_optimize(_17721_arg.get()._field_Expr);
			}
			_iter_next_1ab8e5470:;
			++it;
			goto _iter_begin_1ab8e5470;
		}
		_iter_end_1ab8e5470:;
	};
}



inline void _1d069750b_allocStructure(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb016810_AllocStructLitExprModel> _18233_m) {
	_1d0697286_structureLit(&(*_self_), _18233_m.get()._field_Lit);
}



inline void _1d0697781_casting(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb016d60_CastingExprModel> _18626_m) {
	static__1d0696708_optimize(_18626_m.get()._field_Expr);
}



inline void _1d0697a06_args(_1d06961ec_exprOptimizer* _self_, jule::Slice<jule::Any>& _19024_args) {
	{
		auto &expr = _19024_args;
		auto it = expr.begin();
		_iter_begin_1ab8e6e66:;
		if (it != expr.end()) {
			jule::I64 _19114_i = it - expr.begin();
			jule::Any _19121_arg = *it;
			{
				static__1d0696708_optimize(_19121_arg);
				_19024_args[_19114_i]=_19121_arg;
			}
			_iter_next_1ab8e6e66:;
			++it;
			_19114_i++;
			goto _iter_begin_1ab8e6e66;
		}
		_iter_end_1ab8e6e66:;
	};
}



inline void _1d0697c7b_scope(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1d050b1b6_Scope>& _19725_s) {
	jule::Ptr<_1d0690b31_scopeOptimizer> _19817_scopt = static__1d069114d_new(_19725_s);;
	_1d06940a7_optimize(_19817_scopt.ptr());
}



inline void _1d0698001_funcCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb017712_FnCallExprModel> _20227_m) {
	static__1d0696708_optimize(_20227_m.get()._field_Expr);
	_1d0697a06_args(&(*_self_), _20227_m.get()._field_Args);
	if ((_20227_m.get()._field_Except != nullptr)) {
		_1d0697c7b_scope(&(*_self_), _20227_m.get()._field_Except);
	};
}



inline void _1d0698276_slice(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb017ab9_SliceExprModel> _21024_m) {
	_1d0697a06_args(&(*_self_), _21024_m.get()._field_Elems);
}



inline void _1d06984eb_array(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01a8ad_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__1d0696708_optimize(_21621_elem);
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_1d0697a06_args(&(*_self_), _21424_m.get()._field_Elems);
}



inline void _1d0698771_indexing(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01803c_IndexingExprModel> _22327_m) {
	static__1d0696708_optimize(_22327_m.get()._field_Expr.get()._field_Model);
	static__1d0696708_optimize(_22327_m.get()._field_Index.get()._field_Model);
	if ((!(_1d069e205_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_1d05c75a1_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _1d0598e35_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_1d068db51_UnsafeIndexingExprModel>(_1d068db51_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type132);;
		(*((*_self_)._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ab900887:;
			{
				jule::Ptr<_1d0550a13_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.cast_ptr<_1d0550a13_Var>(&__jule_any_type10);;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1ab900832;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ab90215d:;
						{
							jule::Ptr<_1d0550a13_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.cast_ptr<_1d0550a13_Var>(&__jule_any_type10);;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_1d068db51_UnsafeIndexingExprModel>(_1d068db51_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type132);;
								(*((*_self_)._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1ab902108:;
				};
			}
		}
		_match_end_1ab900832:;
	};
}



inline void _1d06989e6_anonFunc(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb0183e4_AnonFnExprModel> _25427_m) {
	_1d0697c7b_scope(&(*_self_), _25427_m.get()._field_Func.get()._field_Scope);
}



inline void _1d0698c6b_mapExpr(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb018c1e_MapExprModel> _25826_m) {
	{
		auto &expr = _25826_m.get()._field_Entries;
		auto it = expr.begin();
		_iter_begin_1ab90477b:;
		if (it != expr.end()) {
			jule::Ptr<_1eb01879b_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1d0696708_optimize(_25921_pair.get()._field_Key);
				static__1d0696708_optimize(_25921_pair.get()._field_Val);
			}
			_iter_next_1ab90477b:;
			++it;
			goto _iter_begin_1ab90477b;
		}
		_iter_end_1ab90477b:;
	};
}



inline void _1d0698ee1_slicing(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01925d_SlicingExprModel> _26526_m) {
	static__1d0696708_optimize(_26526_m.get()._field_Expr);
	static__1d0696708_optimize(_26526_m.get()._field_Left);
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__1d0696708_optimize(_26526_m.get()._field_Right);
	};
}



inline void _1d0699266_traitSub(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01979c_TraitSubIdentExprModel> _27327_m) {
	static__1d0696708_optimize(_27327_m.get()._field_Expr);
}



inline void _1d06994db_structureSub(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _27731_m) {
	static__1d0696708_optimize(_27731_m.get()._field_Expr.get()._field_Model);
}



inline void _1d0699761_commonSub(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01b20a_CommonSubIdentExprModel> _28128_m) {
	static__1d0696708_optimize(_28128_m.get()._field_Expr);
}



inline void _1d06999d6_tuple(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01b507_TupleExprModel> _28524_m) {
	{
		auto &expr = _28524_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1ab907b36:;
		if (it != expr.end()) {
			jule::Ptr<_1d0598572_Data> _28621_d = *it;
			{
				static__1d0696708_optimize(_28621_d.get()._field_Model);
			}
			_iter_next_1ab907b36:;
			++it;
			goto _iter_begin_1ab907b36;
		}
		_iter_end_1ab907b36:;
	};
}



inline void _1d0699c5b_newCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__1d0696708_optimize(_29126_m.get()._field_Init);
	};
}



inline void _1d0699ed1_outCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel> _29726_m) {
	static__1d0696708_optimize(_29726_m.get()._field_Expr);
}



inline void _1d069a256_outlnCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel> _30128_m) {
	static__1d0696708_optimize(_30128_m.get()._field_Expr);
}



inline void _1d069a4cb_panicCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel> _30528_m) {
	static__1d0696708_optimize(_30528_m.get()._field_Expr);
}



inline void _1d069a751_assertCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel> _30929_m) {
	static__1d0696708_optimize(_30929_m.get()._field_Expr);
}



inline void _1d069a9c6_errorCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel> _31328_m) {
	static__1d0696708_optimize(_31328_m.get()._field_Err.get()._field_Model);
}



inline void _1d069ac4b_makeCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__1d0696708_optimize(_31727_m.get()._field_Len);
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__1d0696708_optimize(_31727_m.get()._field_Cap);
	};
}



inline void _1d069aec1_appendCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel> _32629_m) {
	static__1d0696708_optimize(_32629_m.get()._field_Dest);
	static__1d0696708_optimize(_32629_m.get()._field_Elements);
}



inline void _1d069b246_lenCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01da26_BuiltinLenCallExprModel> _33126_m) {
	static__1d0696708_optimize(_33126_m.get()._field_Expr.get()._field_Model);
}



inline void _1d069b4bb_capCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel> _33526_m) {
	static__1d0696708_optimize(_33526_m.get()._field_Expr.get()._field_Model);
}



inline void _1d069b741_cloneCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel> _33928_m) {
	static__1d0696708_optimize(_33928_m.get()._field_Expr);
}



inline void _1d069b9b6_deleteCall(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel> _34329_m) {
	static__1d0696708_optimize(_34329_m.get()._field_Dest.get()._field_Model);
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__1d0696708_optimize(_34329_m.get()._field_Key.get()._field_Model);
	};
}



inline void _1d069bc3b_sizeof(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb020044_SizeofExprModel> _35025_m) {
	static__1d0696708_optimize(_35025_m.get()._field_Expr);
}



inline void _1d069beb1_alignof(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb020330_AlignofExprModel> _35426_m) {
	static__1d0696708_optimize(_35426_m.get()._field_Expr);
}



inline void _1d069c236_integratedToStr(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb020929_IntegratedToStrExprModel> _35834_m) {
	static__1d0696708_optimize(_35834_m.get()._field_Expr);
}



inline void _1d069c4ab_free(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb0210cd_FreeExprModel> _36223_m) {
	static__1d0696708_optimize(_36223_m.get()._field_Expr);
}



inline void _1d069c731_backendEmit(_1d06961ec_exprOptimizer* _self_, jule::Ptr<_1eb020ce2_BackendEmitExprModel> _36630_m) {
	_1d0697a06_args(&(*_self_), _36630_m.get()._field_Exprs);
}



inline void _1d069c90c_do(_1d06961ec_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*_self_)._field_model)) };
		
		if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ab9121c3:;
			{
				_1d0696c8b_binary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb015897_BinopExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1ab9124ae:;
			{
				_1d0697011_unary(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb015c4e_UnaryExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1ab912525:;
			{
				_1d0697286_structureLit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb016502_StructLitExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1ab91258b:;
			{
				_1d069750b_allocStructure(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb016810_AllocStructLitExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1ab912613:;
			{
				_1d0697781_casting(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb016d60_CastingExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ab91268a:;
			{
				_1d0698001_funcCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1ab912712:;
			{
				_1d0698276_slice(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb017ab9_SliceExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1ab912789:;
			{
				_1d06984eb_array(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01a8ad_ArrayExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1ab912811:;
			{
				_1d0698771_indexing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01803c_IndexingExprModel>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1ab912888:;
			{
				_1d06989e6_anonFunc(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb0183e4_AnonFnExprModel>(&__jule_any_type107));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1ab912910:;
			{
				_1d0698c6b_mapExpr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb018c1e_MapExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1ab912987:;
			{
				_1d0698ee1_slicing(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01925d_SlicingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1ab912a0e:;
			{
				_1d0699266_traitSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01979c_TraitSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1ab912a86:;
			{
				_1d06994db_structureSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1ab912b0d:;
			{
				_1d0699761_commonSub(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01b20a_CommonSubIdentExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1ab912b85:;
			{
				_1d06999d6_tuple(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1ab912c0c:;
			{
				_1d0699ed1_outCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01b8d1_BuiltinOutCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1ab912c84:;
			{
				_1d069a256_outlnCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1ab912d0b:;
			{
				_1d0699c5b_newCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01c4c5_BuiltinNewCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1ab912d83:;
			{
				_1d069a4cb_panicCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01c8b0_BuiltinPanicCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1ab912e0a:;
			{
				_1d069a751_assertCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01cd66_BuiltinAssertCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1ab912e82:;
			{
				_1d069a9c6_errorCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01ec47_BuiltinErrorCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1ab913009:;
			{
				_1d069ac4b_makeCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01d31c_BuiltinMakeCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1ab913081:;
			{
				_1d069aec1_appendCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01d707_BuiltinAppendCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1ab913108:;
			{
				_1d069b246_lenCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01da26_BuiltinLenCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1ab913180:;
			{
				_1d069b4bb_capCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01dd45_BuiltinCapCallExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1ab913207:;
			{
				_1d069b741_cloneCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01c0da_BuiltinCloneCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ab91327e:;
			{
				_1d069b9b6_deleteCall(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1ab913306:;
			{
				_1d069bc3b_sizeof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb020044_SizeofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1ab91337d:;
			{
				_1d069beb1_alignof(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb020330_AlignofExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1ab913405:;
			{
				_1d069c236_integratedToStr(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb020929_IntegratedToStrExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ab91347c:;
			{
				_1d069c4ab_free(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb0210cd_FreeExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1ab913504:;
			{
				_1d069c731_backendEmit(&(*_self_), (*((*_self_)._field_model)).cast_ptr<_1eb020ce2_BackendEmitExprModel>(&__jule_any_type26));
			}
		}
		_match_end_1ab91216d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d06961ec_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b7c70e1b_Optimizer> static__1b7c90622_New(jule::Ptr<_1b6c04994_IR>& _2524_ir) {
	return jule::new_ptr<_1b7c70e1b_Optimizer>(_1b7c70e1b_Optimizer{._field_ir=_2524_ir});;
}



inline void _1b7c9da92_optimizeGlobal(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1d0550a13_Var>& _3138_v) {
	if ((!(_3138_v.get()._field_CppLinked))) {
		static__1d0696708_optimize(_3138_v.get()._field_Value.get()._field_Data.get()._field_Model);
	};
}



inline void _1b7cccb59_optimizeFunction(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1eb023b80_Fn>& _3740_func) {
	if (_3740_func.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _3740_func.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1ab92a780:;
		if (it != expr.end()) {
			jule::Ptr<_1eb026831_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1d0690b31_scopeOptimizer> _4221_so = static__1d069114d_new(_4121_ins.get()._field_Scope);;
				_1d06940a7_optimize(_4221_so.ptr());
			}
			_iter_next_1ab92a780:;
			++it;
			goto _iter_begin_1ab92a780;
		}
		_iter_end_1ab92a780:;
	};
}



inline void _1b7cdc43d_optimizeStruct(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1ea31ed8e_Struct>& _4738_s) {
	if (_4738_s.get()._field_CppLinked) {
		return;;
	};
	{
		auto &expr = _4738_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1ab92bc37:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _5121_ins = *it;
			{
				{
					auto &expr = _5121_ins.get()._field_Fields;
					auto it = expr.begin();
					_iter_begin_1ab92c562:;
					if (it != expr.end()) {
						jule::Ptr<_1ea32007b_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1d0696708_optimize(_5225_f.get()._field_Default.get()._field_Model);
							};
						}
						_iter_next_1ab92c562:;
						++it;
						goto _iter_begin_1ab92c562;
					}
					_iter_end_1ab92c562:;
				};
				{
					auto &expr = _5121_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1ab92d7a5:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _5725_m = *it;
						{
							_1b7cccb59_optimizeFunction(&(*_self_), _5725_m);
						}
						_iter_next_1ab92d7a5:;
						++it;
						goto _iter_begin_1ab92d7a5;
					}
					_iter_end_1ab92d7a5:;
				};
			}
			_iter_next_1ab92bc37:;
			++it;
			goto _iter_begin_1ab92bc37;
		}
		_iter_end_1ab92bc37:;
	};
}



inline void _1b7ce5644_optimizeGlobals(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1d052c825_Package>& _6339_p) {
	{
		auto &expr = _6339_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab92d9a3:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _6421_f = *it;
			{
				{
					auto &expr = _6421_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1ab92e6da:;
					if (it != expr.end()) {
						jule::Ptr<_1d0550a13_Var> _6525_v = *it;
						{
							_1b7c9da92_optimizeGlobal(&(*_self_), _6525_v);
						}
						_iter_next_1ab92e6da:;
						++it;
						goto _iter_begin_1ab92e6da;
					}
					_iter_end_1ab92e6da:;
				};
			}
			_iter_next_1ab92d9a3:;
			++it;
			goto _iter_begin_1ab92d9a3;
		}
		_iter_end_1ab92d9a3:;
	};
}



inline void _1b7d0a1e7_optimizeFunctions(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1d052c825_Package>& _7141_p) {
	{
		auto &expr = _7141_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab92ec4b:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _7221_f = *it;
			{
				{
					auto &expr = _7221_f.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1ab9309d8:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _7325_func = *it;
						{
							_1b7cccb59_optimizeFunction(&(*_self_), _7325_func);
						}
						_iter_next_1ab9309d8:;
						++it;
						goto _iter_begin_1ab9309d8;
					}
					_iter_end_1ab9309d8:;
				};
			}
			_iter_next_1ab92ec4b:;
			++it;
			goto _iter_begin_1ab92ec4b;
		}
		_iter_end_1ab92ec4b:;
	};
}



inline void _1b7d0b935_optimizeStructs(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1d052c825_Package>& _7939_p) {
	{
		auto &expr = _7939_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab931049:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1ab931cd6:;
					if (it != expr.end()) {
						jule::Ptr<_1ea31ed8e_Struct> _8125_s = *it;
						{
							_1b7cdc43d_optimizeStruct(&(*_self_), _8125_s);
						}
						_iter_next_1ab931cd6:;
						++it;
						goto _iter_begin_1ab931cd6;
					}
					_iter_end_1ab931cd6:;
				};
			}
			_iter_next_1ab931049:;
			++it;
			goto _iter_begin_1ab931049;
		}
		_iter_end_1ab931049:;
	};
}



inline void _1b7ca2139_optimizePackage(_1b7c70e1b_Optimizer* _self_, jule::Ptr<_1d052c825_Package>& _8739_p) {
	_1b7ce5644_optimizeGlobals(&(*_self_), _8739_p);
	_1b7d0a1e7_optimizeFunctions(&(*_self_), _8739_p);
	_1b7d0b935_optimizeStructs(&(*_self_), _8739_p);
}



inline void _1b7cd0992_Optimize(_1b7c70e1b_Optimizer* _self_) {
	_1b7d05a0b_detectEnabled();
	if (_1d069d864_Deadcode) {
		_1b7d6da30_EliminateDefines((*_self_)._field_ir);
	};
	if ((_1b7c7344b_scopeEnabled || _1b7c727d0_exprEnabled)) {
		{
			auto &expr = (*_self_)._field_ir.get()._field_Used;
			auto it = expr.begin();
			_iter_begin_1ab933aeb:;
			if (it != expr.end()) {
				jule::Ptr<_1d05298bb_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1b7ca2139_optimizePackage(&(*_self_), _10325_u.get()._field_Package);
					};
				}
				_iter_next_1ab933aeb:;
				++it;
				goto _iter_begin_1ab933aeb;
			}
			_iter_end_1ab933aeb:;
		};
		_1b7ca2139_optimizePackage(&(*_self_), (*_self_)._field_ir.get()._field_Main);
	};
	if (_1d069d864_Deadcode) {
		_1b7d737d2_EliminateScopes((*_self_)._field_ir);
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b7c70e1b_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1b7e7d513_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1b7e7e7ab_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1b7e7d513_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1b7e7e5be_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1b7e810a4_LogFlat(_22ca31eb9_Log& _1424_l) {
	jule::outln(_1424_l._field_Text);
}



inline void static__1b7e812b3_LogError(_22ca31eb9_Log& _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_1925_l._field_Text);
	static__1b7e7d513_Reset();
	if ((_1925_l._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_1925_l._field_Path);
	};
	if (((_1925_l._field_Row != 0LL) && (_1925_l._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1eaeea272_Itoa(_1925_l._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1eaeea272_Itoa(_1925_l._field_Column));
	};
	if ((_1925_l._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _22dcc4568_TrimLeft(_1925_l._field_Line,jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = ((_1925_l._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_22dcc4568_TrimLeft(_3621_line,jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1eaeea272_Itoa(_1925_l._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_22dc94ca8_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_22dc94ca8_Repeat(jule::Str(" ", 1),static_cast<jule::I64>((_1925_l._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if ((_1925_l._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_22dc94ca8_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1b7e7e7ab_Print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_1925_l._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1b7e814c2_Log(_22ca31eb9_Log& _6520_l) {
	{
		auto &_match_expr{ _6520_l._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1ab943ce8:;
			{
				static__1b7e810a4_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1ab943d5e:;
			{
				static__1b7e812b3_LogError(_6520_l);
			}
		}
		_match_end_1ab943ba5:;
	};
}



inline void static__1b7e816d1_PrintLogs(jule::Slice<_22ca31eb9_Log>& _7526_logs) {
	{
		auto &expr = _7526_logs;
		auto it = expr.begin();
		_iter_begin_1ab944cc7:;
		if (it != expr.end()) {
			_22ca31eb9_Log &_7616_l = *it;
			{
				static__1b7e814c2_Log(_7616_l);
			}
			_iter_next_1ab944cc7:;
			++it;
			goto _iter_begin_1ab944cc7;
		}
		_iter_end_1ab944cc7:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1eaeea272_Itoa(static_cast<jule::I64>(_7526_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1b7e80d51_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a9513898_Unix(_1a95134e1_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*_self_)._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*_self_)._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a9515e2d_unixYearToSeconds(_5717_y,_5617_leap);;
	_6817_t+=_1a95162b3_unixMonthToSeconds(_5817_m,_5617_leap);
	_6817_t+=(86400LLU * ((*_self_)._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*_self_)._field_Hour);
	_6817_t+=(60LLU * (*_self_)._field_Minute);
	_6817_t+=(*_self_)._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a95134e1_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a9513b84_Time static__1a951402a_Unix(jule::U64 _9120_sec) {
	return _1a9513b84_Time{._field_sec=_9120_sec};;
}



inline _1a9513b84_Time static__1a9514228_Now(void) {
	return static__1a951402a_Unix(static_cast<jule::U64>(_1a9515b20_unix()));;
}



inline jule::U64 _1a9514679_Unix(_1a9513b84_Time* _self_) {
	return (*_self_)._field_sec;;
}



inline jule::U64 _1a95148dd_Day(_1a9513b84_Time* _self_) {
	return _1a9515867_Abs(&(*_self_))._field_Day;;
}



inline jule::U64 _1a9514b52_Month(_1a9513b84_Time* _self_) {
	return _1a9515867_Abs(&(*_self_))._field_Month;;
}



inline jule::U64 _1a9514db6_Year(_1a9513b84_Time* _self_) {
	return _1a9515867_Abs(&(*_self_))._field_Year;;
}



inline jule::U64 _1a951512a_Second(_1a9513b84_Time* _self_) {
	return _1a9515867_Abs(&(*_self_))._field_Second;;
}



inline jule::U64 _1a951538e_Minute(_1a9513b84_Time* _self_) {
	return _1a9515867_Abs(&(*_self_))._field_Minute;;
}



inline jule::U64 _1a9515603_Hour(_1a9513b84_Time* _self_) {
	return _1a9515867_Abs(&(*_self_))._field_Hour;;
}



inline _1a95134e1_AbsTime _1a9515867_Abs(_1a9513b84_Time* _self_) {
	jule::U64 _12713_secs = ((*_self_)._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a9512a73_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1a9512a73_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1ab97491c:;
	}
	_iter_end_1ab97491c:;;
	_1a95134e1_AbsTime _17417_t = _1a95134e1_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9513b84_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a945957a_scopeCoder> static__1a9459b96_new(jule::Ptr<_1a951a99e_ObjectCoder>& _6124_oc) {
	return jule::new_ptr<_1a945957a_scopeCoder>(_1a945957a_scopeCoder{._field_oc=_6124_oc});;
}



inline void _1a9459e1b_rangeIndexIter(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050cd66_RangeIter>& _6739_it) {
	jule::Str _6813_begin = static__1a94771ad_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	jule::Str _6913_next = static__1a94776ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it)));;
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1d069d556_Copy && _1a945ead0_isCopyOptimizable(_6739_it.get()._field_Expr))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a946d35d_model(_self_.get()._field_oc.get()._field_ec, _6739_it.get()._field_Expr.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, _6813_begin);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1a951ce79_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
		}));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a94dbcc2_indent(_self_.get()._field_oc);
	};
	if ((_6739_it.get()._field_KeyB != nullptr)) {
		if (_1d069d556_Copy) {
			_6739_it.get()._field_KeyB.get()._field_Reference=_1a945ee65_isIterCopyOptimizable(_6739_it.get()._field_Expr,_6739_it.get()._field_KeyB);
		};
		_1a951ce79_varInitExpr(_self_.get()._field_oc, _6739_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("*it", 3));
		}));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a94dbcc2_indent(_self_.get()._field_oc);
	};
	_1a945e508_scope(_self_, _6739_it.get()._field_Scope);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, _6913_next);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	if ((_6739_it.get()._field_KeyA != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9476e16_var(_6739_it.get()._field_KeyA));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a94dbcc2_indent(_self_.get()._field_oc);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a947c1e6_write(_self_.get()._field_oc, _6813_begin);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477455_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6739_it))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a945a191_rangeHashmapIter(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050cd66_RangeIter>& _13541_it) {
	jule::Str _13613_begin = static__1a94771ad_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	jule::Str _13713_next = static__1a94776ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it)));;
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto ", 5));
	if ((_1d069d556_Copy && _1a945ead0_isCopyOptimizable(_13541_it.get()._field_Expr))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&", 1));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("expr = ", 7));
	_1a946d35d_model(_self_.get()._field_oc.get()._field_ec, _13541_it.get()._field_Expr.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto it = expr.begin();\n", 24));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, _13613_begin);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (it != expr.end()) {\n", 24));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	if ((_13541_it.get()._field_KeyA != nullptr)) {
		if (_1d069d556_Copy) {
			_13541_it.get()._field_KeyA.get()._field_Reference=_1a945ee65_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyA);
		};
		_1a951ce79_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyA,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a94dbcc2_indent(_self_.get()._field_oc);
	};
	if ((_13541_it.get()._field_KeyB != nullptr)) {
		if (_1d069d556_Copy) {
			_13541_it.get()._field_KeyB.get()._field_Reference=_1a945ee65_isIterCopyOptimizable(_13541_it.get()._field_Expr,_13541_it.get()._field_KeyB);
		};
		_1a951ce79_varInitExpr(_self_.get()._field_oc, _13541_it.get()._field_KeyB,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a94dbcc2_indent(_self_.get()._field_oc);
	};
	_1a945e508_scope(_self_, _13541_it.get()._field_Scope);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, _13713_next);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a947c1e6_write(_self_.get()._field_oc, _13613_begin);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477455_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_13541_it))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a945a416_ifCase(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050b5b2_If> _20130_i) {
	if ((_20130_i.get()._field_Expr != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _20130_i.get()._field_Expr);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a945e508_scope(_self_, _20130_i.get()._field_Scope);
}



inline void _1a945a68b_conditional(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050bc22_Conditional> _21035_c) {
	jule::Bool _21117_writed = false;;
	{
		auto &expr = _21035_c.get()._field_Elifs;
		auto it = expr.begin();
		_iter_begin_1aba388d2:;
		if (it != expr.end()) {
			jule::Ptr<_1d050b5b2_If> _21221_elif = *it;
			{
				if ((_21221_elif == nullptr)) {
					goto _iter_next_1aba388d2;
				};
				if (_21117_writed) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_21117_writed=true;
				_1a945a416_ifCase(_self_, _21221_elif);
			}
			_iter_next_1aba388d2:;
			++it;
			goto _iter_begin_1aba388d2;
		}
		_iter_end_1aba388d2:;
	};
	if ((_21035_c.get()._field_Default != nullptr)) {
		if (_21117_writed) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a945e508_scope(_self_, _21035_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1a945a911_infIter(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050c00d_InfIter> _23031_it) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a945e508_scope(_self_, _23031_it.get()._field_Scope);
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a94776ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477455_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_23031_it))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a945ab86_whileIter(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050c481_WhileIter> _24733_it) {
	if (((_24733_it.get()._field_Expr != nullptr) && (_24733_it.get()._field_Next == nullptr))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_24733_it.get()._field_Expr != nullptr)) {
			_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _24733_it.get()._field_Expr);
		};
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_24733_it.get()._field_Next != nullptr)) {
			_1a945e00d_st(_self_, _24733_it.get()._field_Next);
		};
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a945e508_scope(_self_, _24733_it.get()._field_Scope);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a94776ec_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477455_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_24733_it))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a945ae0b_rangeIter(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050cd66_RangeIter> _28033_it) {
	{
		
		if ((_1d05c7815_Slc(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba4941a:;
			{
				_1a9459e1b_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_1d05c75a1_Arr(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba48ea8:;
			{
				_1a9459e1b_rangeIndexIter(_self_, _28033_it);
			}
		}
		else if ((_1d05c82b6_Map(_28033_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1aba48b78:;
			{
				_1a945a191_rangeHashmapIter(_self_, _28033_it);
			}
		}
		else {
			_case_begin_1aba48b12:;
			{
				_1a9459e1b_rangeIndexIter(_self_, _28033_it);
			}
		}
		_match_end_1aba48a46:;
	};
}



inline void _1a945b181_cont(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050d262_ContSt> _29324_c) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a94776ec_iterNext(_29324_c.get()._field_It));
}



inline void _1a945b406_label(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050d905_Label> _29825_l) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477994_label(_29825_l.get()._field_Ident));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a945b67b_gotoSt(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050dbe1_GotoSt> _30326_gt) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477994_label(_30326_gt.get()._field_Ident));
}



inline void _1a945b901_postfix(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050e098_Postfix> _30831_p) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _30831_p.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a947c1e6_write(_self_.get()._field_oc, _30831_p.get()._field_Op);
}



inline void _1a945bb76_assign(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050e51b_Assign> _31530_a) {
	_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_L.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, _31530_a.get()._field_Op.get()._field_Kind);
	_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _31530_a.get()._field_R.get()._field_Model);
}



inline void _1a945bdeb_mapLookupAssign(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050e8c3_MultiAssign>& _32140_a) {
	jule::Ptr<_1eb01803c_IndexingExprModel> _32217_iem = _32140_a.get()._field_R.cast_ptr<_1eb01803c_IndexingExprModel>(&__jule_any_type47);;
	_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Expr.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _32217_iem.get()._field_Index.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_32140_a.get()._field_L[0LL] != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[0LL].get()._field_Model);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if ((_32140_a.get()._field_L[1LL] != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _32140_a.get()._field_L[1LL].get()._field_Model);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a945c171_multiAssignTup(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050e8c3_MultiAssign>& _34439_a) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1eb01b507_TupleExprModel> _34817_tup = _34439_a.get()._field_R.cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90);;
	{
		auto &expr = _34817_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1aba59a57:;
		if (it != expr.end()) {
			jule::I64 _35014_i = it - expr.begin();
			jule::Ptr<_1d0598572_Data> _35021_r = *it;
			{
				_1a94dbcc2_indent(_self_.get()._field_oc);
				jule::Ptr<_1d0598572_Data> _35221_l = _34439_a.get()._field_L[_35014_i];;
				if ((_35221_l != nullptr)) {
					_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35221_l.get()._field_Kind));
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a947c1e6_write(_self_.get()._field_oc, static__1a9475420_toOut(_1a9459008_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_35014_i))));
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _35021_r.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1aba59a57:;
			++it;
			_35014_i++;
			goto _iter_begin_1aba59a57;
		}
		_iter_end_1aba59a57:;
	};
	{
		auto &expr = _34439_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1aba5e243:;
		if (it != expr.end()) {
			jule::I64 _36314_i = it - expr.begin();
			jule::Ptr<_1d0598572_Data> _36321_l = *it;
			{
				if ((_36321_l != nullptr)) {
					_1a94dbcc2_indent(_self_.get()._field_oc);
					_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _36321_l.get()._field_Model);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
					_1a947c1e6_write(_self_.get()._field_oc, static__1a9475420_toOut(_1a9459008_assignArgName,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_36314_i))));
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1aba5e243:;
			++it;
			_36314_i++;
			goto _iter_begin_1aba5e243;
		}
		_iter_end_1aba5e243:;
	};
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a945c3e6_multiAssignFn(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050e8c3_MultiAssign>& _37838_a) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	jule::Ptr<_1eb017712_FnCallExprModel> _38317_f = _37838_a.get()._field_R.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36);;
	static__1a9529ccc_codeMut1(_self_.get()._field_oc.get()._field_Obj,_38317_f.get()._field_Func.get()._field_Result);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _37838_a.get()._field_R);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto &expr = _37838_a.get()._field_L;
		auto it = expr.begin();
		_iter_begin_1aba65645:;
		if (it != expr.end()) {
			jule::I64 _38914_i = it - expr.begin();
			jule::Ptr<_1d0598572_Data> _38921_l = *it;
			{
				if ((_38921_l != nullptr)) {
					_1a94dbcc2_indent(_self_.get()._field_oc);
					_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _38921_l.get()._field_Model);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_38914_i));
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1aba65645:;
			++it;
			_38914_i++;
			goto _iter_begin_1aba65645;
		}
		_iter_end_1aba65645:;
	};
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a945c66b_multiAssign(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050e8c3_MultiAssign> _40435_a) {
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1aba6901c:;
			{
				_1a945bdeb_mapLookupAssign(_self_, _40435_a);
				return;;
			}
		}
		_match_end_1aba68d0d:;
	};
	{
		auto &_match_expr{ _40435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1aba68c42:;
			{
				_1a945c171_multiAssignTup(_self_, _40435_a);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aba69db9:;
			{
				_1a945c3e6_multiAssignFn(_self_, _40435_a);
			}
		}
		else {
			_case_begin_1aba69a34:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:418:13"));;
			}
		}
		_match_end_1aba699ce:;
	};
}



inline jule::Fn<void(void)> _1a945c979_matchExpr(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050ee12_Match> _42233_m) {
	if ((!(_1d0598e35_IsConst(_42233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1eb00d72a_IsBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1eb00b382_ReadBool(_42233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a946d35d_model(_self_.get()._field_oc.get()._field_ec, _42233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a945cc98_case(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050ee12_Match> _43228_m, jule::Ptr<_1d051095c_Case> _43243_c) {
	if (((_43243_c.get()._field_Exprs.len() != 0LL) && (!(_1d051041d_IsGenericTypeMatch(_43228_m.ptr()))))) {
		if (((_43228_m.get()._field_Cases.len() > 0LL) && (_43228_m.get()._field_Cases[0LL] == _43243_c))) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto &expr = _43243_c.get()._field_Exprs;
			auto it = expr.begin();
			_iter_begin_1aba704a7:;
			if (it != expr.end()) {
				jule::I64 _43918_i = it - expr.begin();
				jule::Ptr<_1d0598572_Data> _43925_expr = *it;
				{
					{
						
						if ((!(_43228_m.get()._field_TypeMatch))) {
							_case_begin_1aba75413:;
							{
								jule::Fn<void(void)> _44225_caseExpr = _1a945c979_matchExpr(_self_, _43228_m);;
								if (_1d0599243_GoodOperand(_43228_m.get()._field_Expr.ptr(), _43925_expr)) {
									if ((_44225_caseExpr != nullptr)) {
										_44225_caseExpr();
										_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
								} else {
									_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _43925_expr.get()._field_Model);
									if ((_44225_caseExpr != nullptr)) {
										_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_44225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1aba7171c:;
							{
								_1a947c1e6_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1d05c4504_TypeKind> _45829_tk = _43925_expr.get()._field_Model.cast_ptr<_1d05c4504_TypeKind>(&__jule_any_type92);;
								if ((_1d05c8052_Trait(_43228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".type_is<", 9));
									_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_45829_tk));
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">()", 3));
								} else {
									jule::I64 _46429_j = _1a94e6309_pushAnyType(_self_.get()._field_oc, _45829_tk);;
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_46429_j));
								};
							}
						}
						_match_end_1aba71651:;
					};
					if (((_43243_c.get()._field_Exprs.len() - _43918_i) > 1LL)) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1aba704a7:;
				++it;
				_43918_i++;
				goto _iter_begin_1aba704a7;
			}
			_iter_end_1aba704a7:;
		};
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_43228_m.get()._field_Default == _43243_c) && (_43228_m.get()._field_Cases.len() != 0LL))) {
		_1a94dbcc2_indent(_self_.get()._field_oc);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477ed3_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43243_c))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_43243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1a94dbcc2_indent(_self_.get()._field_oc);
		_1a945e508_scope(_self_, _43243_c.get()._field_Scope);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a945d01d_matchSt(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050ee12_Match> _49831_m) {
	if (((_49831_m.get()._field_Cases.len() == 0LL) && (_49831_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _50313_genericTypeMatch = _1d051041d_IsGenericTypeMatch(_49831_m.ptr());;
	if ((_50313_genericTypeMatch && ((_49831_m.get()._field_Default == nullptr) || (_49831_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	if (((!(_50313_genericTypeMatch)) && (!(_1d0598e35_IsConst(_49831_m.get()._field_Expr.ptr()))))) {
		if ((_1d069d556_Copy && _1a945ead0_isCopyOptimizable(_49831_m.get()._field_Expr))) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _49831_m.get()._field_Expr.get()._field_Model);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a94dbcc2_indent(_self_.get()._field_oc);
	};
	if ((_49831_m.get()._field_Cases.len() > 0LL)) {
		{
			auto &expr = _49831_m.get()._field_Cases;
			auto it = expr.begin();
			_iter_begin_1aba84697:;
			if (it != expr.end()) {
				jule::Ptr<_1d051095c_Case> _52725_c = *it;
				{
					if ((_52725_c == nullptr)) {
						goto _iter_next_1aba84697;
					};
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a94dbcc2_indent(_self_.get()._field_oc);
					_1a945cc98_case(_self_, _49831_m,_52725_c);
				}
				_iter_next_1aba84697:;
				++it;
				goto _iter_begin_1aba84697;
			}
			_iter_end_1aba84697:;
		};
	};
	if ((_49831_m.get()._field_Default != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a945cc98_case(_self_, _49831_m,_49831_m.get()._field_Default);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477c3b_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_49831_m))));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a945d293_fallSt(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d0511012_FallSt> _55426_f) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9477ed3_caseBegin(_55426_f.get()._field_DestCase));
}



inline void _1a945d518_breakSt(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050d619_BreakSt> _55927_b) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_55927_b.get()._field_It != 0LLU)) {
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9477455_iterEnd(_55927_b.get()._field_It));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9477c3b_matchEnd(_55927_b.get()._field_Mtch));
	};
}



inline void _1a945d78d_setResult(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d0511386_RetSt> _56833_r) {
	if ((_56833_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _56833_r.get()._field_Expr);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1a94dbcc2_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1d0598572_Data>> _57617_datas = _56833_r.get()._field_Expr.cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90).get()._field_Datas;;
	{
		auto &expr = _57617_datas;
		auto it = expr.begin();
		_iter_begin_1aba8bb77:;
		if (it != expr.end()) {
			jule::I64 _57713_i = it - expr.begin();
			jule::Ptr<_1d0598572_Data> _57716_data = *it;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_57713_i));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _57716_data.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a94dbcc2_indent(_self_.get()._field_oc);
			}
			_iter_next_1aba8bb77:;
			++it;
			_57713_i++;
			goto _iter_begin_1aba8bb77;
		}
		_iter_end_1aba8bb77:;
	};
}



inline void _1a945da13_retSt(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d0511386_RetSt> _58729_r) {
	if (_1eb0240e2_IsVoid(_58729_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_58729_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_58729_r.get()._field_Func.get()._field_Result));
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _58729_r.get()._field_Expr);
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _58729_r.get()._field_Expr);
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_58729_r.get()._field_Expr != nullptr)) {
		_1a945d78d_setResult(_self_, _58729_r);
	};
	if (_58729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		static__1a9529ccc_codeMut1(_self_.get()._field_oc.get()._field_Obj,_58729_r.get()._field_Func.get()._field_Result);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1a945dc88_var(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d0550a13_Var> _62327_v) {
	if ((!(_62327_v.get()._field_Constant))) {
		_1a951d0ab_var(_self_.get()._field_oc, _62327_v);
	};
}



inline void _1a945e00d_st(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Any _63026_st) {
	if ((_63026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _63026_st };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aba9b2d5:;
			{
				_1a945e508_scope(_self_, _63026_st.cast_ptr<_1d050b1b6_Scope>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aba9ae83:;
			{
				_1a945dc88_var(_self_, _63026_st.cast_ptr<_1d0550a13_Var>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aba9b8ce:;
			{
				_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1d0598572_Data>(&__jule_any_type25).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aba9b945:;
			{
				_1a945a68b_conditional(_self_, _63026_st.cast_ptr<_1d050bc22_Conditional>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1aba9b9ab:;
			{
				_1a945a911_infIter(_self_, _63026_st.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aba9ba22:;
			{
				_1a945ab86_whileIter(_self_, _63026_st.cast_ptr<_1d050c481_WhileIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aba9ba88:;
			{
				_1a945ae0b_rangeIter(_self_, _63026_st.cast_ptr<_1d050cd66_RangeIter>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1aba9baee:;
			{
				_1a945b181_cont(_self_, _63026_st.cast_ptr<_1d050d262_ContSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1aba9bb65:;
			{
				_1a945b406_label(_self_, _63026_st.cast_ptr<_1d050d905_Label>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1aba9bbcb:;
			{
				_1a945b67b_gotoSt(_self_, _63026_st.cast_ptr<_1d050dbe1_GotoSt>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1aba9bc53:;
			{
				_1a945b901_postfix(_self_, _63026_st.cast_ptr<_1d050e098_Postfix>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1aba9bcca:;
			{
				_1a945bb76_assign(_self_, _63026_st.cast_ptr<_1d050e51b_Assign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1aba9bd52:;
			{
				_1a945c66b_multiAssign(_self_, _63026_st.cast_ptr<_1d050e8c3_MultiAssign>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aba9bdc9:;
			{
				_1a945d01d_matchSt(_self_, _63026_st.cast_ptr<_1d050ee12_Match>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1aba9be51:;
			{
				_1a945d293_fallSt(_self_, _63026_st.cast_ptr<_1d0511012_FallSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1aba9bec8:;
			{
				_1a945d518_breakSt(_self_, _63026_st.cast_ptr<_1d050d619_BreakSt>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1aba9c050:;
			{
				_1a945da13_retSt(_self_, _63026_st.cast_ptr<_1d0511386_RetSt>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1aba9c0c7:;
			{
				_1a946b2e5_pushToSlice(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1d068e019_PushToSliceExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1aba9c14e:;
			{
				_1a946cd63_mutSlicing(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1d068e5d0_MutSlicingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1aba9c1c6:;
			{
				_1a946d0d8_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _63026_st.cast_ptr<_1d068e976_StrInsertBeginExprModel>(&__jule_any_type129));
			}
		}
		else {
			_case_begin_1aba9ac63:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1aba9ac0d:;
	};
}



inline void _1a945e283_scopeStmts(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050b1b6_Scope>& _68035_s) {
	{
		auto &expr = _68035_s.get()._field_Stmts;
		auto it = expr.begin();
		_iter_begin_1abaa6e5b:;
		if (it != expr.end()) {
			jule::Any _68121_st = *it;
			{
				_1a94dbcc2_indent(_self_.get()._field_oc);
				_1a945e00d_st(_self_, _68121_st);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1abaa6e5b:;
			++it;
			goto _iter_begin_1abaa6e5b;
		}
		_iter_end_1abaa6e5b:;
	};
}



inline void _1a945e508_scope(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1d050b1b6_Scope> _68929_s) {
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	if (_68929_s.get()._field_Deferred) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a945e283_scopeStmts(_self_, _68929_s);
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_68929_s.get()._field_Deferred) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a945e77d_funcScope(jule::Ptr<_1a945957a_scopeCoder> _self_, jule::Ptr<_1eb026831_FnIns> _70533_f) {
	if ((_70533_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	if ((!(_1eb0240e2_IsVoid(_70533_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1d05cdec0_Tuple> _71221_tup = _1d05c852a_Tup(_70533_f.get()._field_Result.ptr());;
		if ((_71221_tup != nullptr)) {
			_1a94dbcc2_indent(_self_.get()._field_oc);
			static__1a952976b_tup(_self_.get()._field_oc.get()._field_Obj,_71221_tup);
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto &expr = _71221_tup.get()._field_Types;
				auto it = expr.begin();
				_iter_begin_1abaade96:;
				if (it != expr.end()) {
					jule::I64 _71722_i = it - expr.begin();
					jule::Ptr<_1d05c4504_TypeKind> _71729_t = *it;
					{
						if (_1a952c087_shouldInitialized(_71729_t)) {
							_1a94dbcc2_indent(_self_.get()._field_oc);
							_1a947c1e6_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_71722_i));
							_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1a946dacd_initExpr(_self_.get()._field_oc.get()._field_ec, _71729_t);
							_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1abaade96:;
					++it;
					_71722_i++;
					goto _iter_begin_1abaade96;
				}
				_iter_end_1abaade96:;
			};
		} else if ((_70533_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1a94dbcc2_indent(_self_.get()._field_oc);
			_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_70533_f.get()._field_Result));
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1a952c087_shouldInitialized(_70533_f.get()._field_Result)) {
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a946dacd_initExpr(_self_.get()._field_oc.get()._field_ec, _70533_f.get()._field_Result);
			};
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1a945e283_scopeStmts(_self_, _70533_f.get()._field_Scope);
	if ((_70533_f.get()._field_Decl.get()._field_Exceptional && _1eb0240e2_IsVoid(_70533_f.get()._field_Decl.ptr()))) {
		_1a94dbcc2_indent(_self_.get()._field_oc);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a945957a_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9462220_exprCoder> static__1a946261b_new(jule::Ptr<_1a951a99e_ObjectCoder>& _10424_oc) {
	return jule::new_ptr<_1a9462220_exprCoder>(_1a9462220_exprCoder{._field_oc=_10424_oc});;
}



inline void _1a9462891_string(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0095b1_Const>& _11027_c) {
	jule::Str _11113_content = _1eb00b5e6_ReadStr(_11027_c.ptr());;
	if ((_11113_content.len() == 0LL)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11613_bytes = static_cast<jule::Slice<jule::U8>>(_11113_content);;
	jule::Str _11713_len = _1eaee9eca_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11613_bytes.len())),10LL);;
	jule::Str _11813_lit = _1a946e7d2_cstrLit(_11613_bytes);;
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a947c1e6_write(_self_.get()._field_oc, _11813_lit);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a947c1e6_write(_self_.get()._field_oc, _11713_len);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9462b16_boolean(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0095b1_Const>& _12728_c) {
	if (_1eb00b382_ReadBool(_12728_c.ptr())) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("true", 4));
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("false", 5));
}



inline void _1a9462ce2_nilLit(jule::Ptr<_1a9462220_exprCoder> _self_) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a9463100_ftoaSpecialCases(jule::Ptr<_1a9462220_exprCoder> _self_, jule::F64& _13937_x) {
	{
		
		if (_1eaeab8c6_IsNaN(_13937_x)) {
			_case_begin_1abad1e53:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1eaeabb3a_IsInf(_13937_x,1LL)) {
			_case_begin_1abad177c:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1eaeabb3a_IsInf(_13937_x,-1LL)) {
			_case_begin_1abad17e3:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1abad1716:;
			{
				return false;;
			}
		}
		_match_end_1abad164a:;
	};
	return true;;
}



inline void _1a9463375_float32(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0095b1_Const>& _15328_c) {
	jule::F64 _15413_x = _1eb00c097_AsF64(_15328_c.ptr());;
	if (_1a9463100_ftoaSpecialCases(_self_, _15413_x)) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1abad47d5:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1abad451b:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1abad43d9:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _1a946eae0_ftoa(_15413_x,32LL));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1abad4384:;
	};
}



inline void _1a94635ea_float64(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0095b1_Const>& _17228_c) {
	jule::F64 _17313_x = _1eb00c097_AsF64(_17228_c.ptr());;
	if (_1a9463100_ftoaSpecialCases(_self_, _17313_x)) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1abad7794:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1abad7e9d:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1abad7398:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _1a946eae0_ftoa(_17313_x,64LL));
			}
		}
		_match_end_1abad7343:;
	};
}



inline void _1a9463870_constant(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0095b1_Const> _19032_c) {
	{
		
		if (_1eb00d98e_IsStr(_19032_c.ptr())) {
			_case_begin_1abad9543:;
			{
				_1a9462891_string(_self_, _19032_c);
			}
		}
		else if (_1eb00d72a_IsBool(_19032_c.ptr())) {
			_case_begin_1abad95a9:;
			{
				_1a9462b16_boolean(_self_, _19032_c);
			}
		}
		else if (_1eb00dc03_IsF64(_19032_c.ptr())) {
			_case_begin_1abad9620:;
			{
				{
					
					if ((_19032_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1abae1abc:;
						{
							_1a9463375_float32(_self_, _19032_c);
						}
					}
					else {
						_case_begin_1abae12b4:;
						{
							_1a94635ea_float64(_self_, _19032_c);
						}
					}
					_match_end_1abae11e8:;
				};
			}
		}
		else if (_1eb00d252_IsI64(_19032_c.ptr())) {
			_case_begin_1abad9686:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _1a946ed87_itoa(static_cast<jule::I64>(_1eb00ada9_ReadI64(_19032_c.ptr()))));
			}
		}
		else if (_1eb00d4b6_IsU64(_19032_c.ptr())) {
			_case_begin_1abad9ed3:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _1a947012e_utoa(static_cast<jule::U64>(_1eb00b11d_ReadU64(_19032_c.ptr()))));
			}
		}
		else if (_1eb00de67_IsNil(_19032_c.ptr())) {
			_case_begin_1abada049:;
			{
				_1a9462ce2_nilLit(_self_);
			}
		}
		else {
			_case_begin_1abad94cc:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1abad9411:;
	};
}



inline void _1a9463c38_divByZeroBinary(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_212a0c2ab_Token>& _21436_op, jule::Ptr<_1eb0153d0_OperandExprModel>& _21453_l, jule::Ptr<_1eb0153d0_OperandExprModel>& _21480_r) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ _21436_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1abae49c1:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1abae4a37:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1abae4905:;
	};
	if ((!(_22b128bab_Production))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a94ddc6e_locInfo(_self_.get()._field_oc, _21436_op);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a946d5d3_expr(_self_, _21453_l.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a946d5d3_expr(_self_, _21480_r.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9463ead_unsafeBinary(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb015897_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("==", 2)) || (_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2)))) {
		if (_1a9470c78_isAny(_23636_m.get()._field_Left.get()._field_Kind)) {
			if (((!(_1d05c5439_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1a9470c78_isAny(_23636_m.get()._field_Right.get()._field_Kind))))) {
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2))) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _1a94e6309_pushAnyType(_self_.get()._field_oc, _23636_m.get()._field_Right.get()._field_Kind);;
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_24625_i));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1a946d35d_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a946d35d_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a946d35d_model(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a947c1e6_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a946d35d_model(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9464233_binary(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb015897_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1abb016c0:;
			{
				if ((_1d05c7cdd_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1a9463c38_divByZeroBinary(_self_, _26730_m.get()._field_Op,_26730_m.get()._field_Left,_26730_m.get()._field_Right);
					return;;
				};
			}
		}
		_match_end_1abb01637:;
	};
	_1a9463ead_unsafeBinary(_self_, _26730_m);
}



inline void _1a94644a8_var(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d0550a13_Var> _27927_m) {
	if (_27927_m.get()._field_CppLinked) {
		jule::Ptr<_1ea2c0405_Directive> _28117_d = _1a952b95a_findDirective(_27927_m.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1a947c1e6_write(_self_.get()._field_oc, _1a9520223_concatAllParts(_28117_d.get()._field_Args));
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9476e16_var(_27927_m));
}



inline void _1a946472d_structureIns(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1ea320268_StructIns> _29036_m) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a95246cd_structureIns(_29036_m));
}



inline void _1a94649a3_unary(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb015c4e_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1abb0621e:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a946d5d3_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1abb06296:;
			{
				if ((_22b128bab_Production || (_1d05c6b00_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1abb06175;
				};
				_1a946d5d3_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a94ddc6e_locInfo(_self_.get()._field_oc, _29429_m.get()._field_Op);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1abb06175:;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a947c1e6_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a946d5d3_expr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a9464c28_structureLit(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb016502_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a947c1e6_write(_self_.get()._field_oc, static__1a94768c7_structureIns(_31836_m.get()._field_Strct));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto &expr = _31836_m.get()._field_Strct.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1abb0d743:;
			if (it != expr.end()) {
				jule::I64 _33117_i = it - expr.begin();
				jule::Ptr<_1ea32007b_FieldIns> _33120_f = *it;
				{
					{
						auto &expr = _31836_m.get()._field_Args;
						auto it = expr.begin();
						_iter_begin_1abb0e469:;
						if (it != expr.end()) {
							jule::Ptr<_1eb01614a_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a947c1e6_write(_self_.get()._field_oc, static__1a9476b6e_field(_33229_arg.get()._field_Field.get()._field_Decl));
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a946d5d3_expr(_self_, _33229_arg.get()._field_Expr);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1abb0d743;
								};
							}
							_iter_next_1abb0e469:;
							++it;
							goto _iter_begin_1abb0e469;
						}
						_iter_end_1abb0e469:;
					};
				}
				_iter_next_1abb0d743:;
				++it;
				_33117_i++;
				goto _iter_begin_1abb0d743;
			}
			_iter_end_1abb0d743:;
		};
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a9464e9d_allocStructure(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb016810_AllocStructLitExprModel> _34938_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a94768c7_structureIns(_34938_m.get()._field_Lit.get()._field_Strct));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a9464c28_structureLit(_self_, _34938_m.get()._field_Lit);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9465223_casting(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb016d60_CastingExprModel> _35731_m) {
	{
		
		if (_1a9470c78_isAny(_35731_m.get()._field_Kind)) {
			_case_begin_1abb15063:;
			{
				if (_1d05c5439_IsNil(_35731_m.get()._field_ExprKind.ptr())) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1d05c733c_TypeEnum(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1a946d35d_model(_self_, _35731_m.get()._field_Expr);
					return;;
				};
				jule::I64 _36817_i = _1a94e6309_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_ExprKind);;
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				_1a946d35d_model(_self_, _35731_m.get()._field_Expr);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_36817_i));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1d05c6d64_Ptr(_35731_m.get()._field_ExprKind.ptr()) != nullptr) || (_1d05c6d64_Ptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb150c9:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35731_m.get()._field_Kind));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a946d5d3_expr(_self_, _35731_m.get()._field_Expr);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if (_1a9470c78_isAny(_35731_m.get()._field_ExprKind)) {
			_case_begin_1abb15140:;
			{
				_1a946d35d_model(_self_, _35731_m.get()._field_Expr);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1d05c6b00_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_1d05c6b00_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35731_m.get()._field_Kind));
				};
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_22b128bab_Production))) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a94ddc6e_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(static_cast<jule::I64>(_1a94e6309_pushAnyType(_self_.get()._field_oc, _35731_m.get()._field_Kind))));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1d05c8052_Trait(_35731_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1abb151a6:;
			{
				_1a946d35d_model(_self_, _35731_m.get()._field_Expr);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".", 1));
				if (_22b128bab_Production) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("operator ", 9));
					_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35731_m.get()._field_Kind));
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("()", 2));
				} else {
					if ((_1d05c6b00_Sptr(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
						_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_1d05c6b00_Sptr(_35731_m.get()._field_Kind.ptr()).get()._field_Elem));
					} else {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("cast<", 5));
						_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35731_m.get()._field_Kind));
					};
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(\"", 3));
					_1a94ddc6e_locInfo(_self_.get()._field_oc, _35731_m.get()._field_Token);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\")", 2));
				};
			}
		}
		else if ((_1d05c8052_Trait(_35731_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abb16e22:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35731_m.get()._field_Kind));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a946d5d3_expr(_self_, _35731_m.get()._field_Expr);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(static_cast<jule::I64>(_1a94a0e0c_findTypeOffset(_self_.get()._field_oc.ptr(), _1d05c8052_Trait(_35731_m.get()._field_Kind.ptr()),_35731_m.get()._field_ExprKind))));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1abb14eec:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_35731_m.get()._field_Kind));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1a946d5d3_expr(_self_, _35731_m.get()._field_Expr);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1abb14e31:;
	};
}



inline void _1a9465498_args(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Slice<jule::Any> _43528_args) {
	if ((_43528_args.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _43528_args;
		auto it = expr.begin();
		_iter_begin_1abb2b95e:;
		if (it != expr.end()) {
			jule::I64 _43914_i = it - expr.begin();
			jule::Any _43921_a = *it;
			{
				_1a946d5d3_expr(_self_, _43921_a);
				if (((_43528_args.len() - _43914_i) > 1LL)) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1abb2b95e:;
			++it;
			_43914_i++;
			goto _iter_begin_1abb2b95e;
		}
		_iter_end_1abb2b95e:;
	};
}



inline void _1a946571d_modelForCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Any _44736_expr) {
	{
		auto &_match_expr{ _44736_expr };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1abb2d7c9:;
			{
				_1a9468a95_funcIns(_self_, _44736_expr.cast_ptr<_1eb026831_FnIns>(&__jule_any_type9));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1abb2d851:;
			{
				jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _45321_ssie = _44736_expr.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73);;
				if ((_45321_ssie.get()._field_Method != nullptr)) {
					_1a9468a95_funcIns(_self_, _45321_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1abb2d730:;
	};
	_1a946d35d_model(_self_, _44736_expr);
}



inline void _1a9465993_pushCallInf(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb017712_FnCallExprModel>& _46232_m) {
	if ((_22b128bab_Production || ((!(_46232_m.get()._field_Func.get()._field_Anon)) && (!(_1a94707a0_isBuiltinCallHasDebuginf(_46232_m)))))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if (_46232_m.get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ _46232_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type73) {
				_case_begin_1abb31a96:;
				{
					if (_46232_m.get()._field_Expr.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1abb31c83;
				}
			}
			else {
				_case_begin_1abb31c83:;
				{
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1abb31b40:;
		};
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a94ddc6e_locInfo(_self_.get()._field_oc, _46232_m.get()._field_Token);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if ((_46232_m.get()._field_Args.len() != 0LL)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
	};
}



inline jule::Bool _1a9465ca1_isWrapped(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb017712_FnCallExprModel>& _48734_m) {
	if ((((!(_1eb027bb7_IsBuiltin(_48734_m.get()._field_Func.ptr()))) && (_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1eb022970_IsSelf(_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _48734_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type73) {
				_case_begin_1abb35858:;
				{
					jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _49125_ssie = _48734_m.get()._field_Expr.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73);;
					{
						
						if (_1eb022bd4_IsRef(_48734_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1d05c6b00_Sptr(_49125_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1abb36150:;
							{
								goto _match_end_1abb366e4;
							}
						}
						else {
							_case_begin_1abb3675a:;
							{
								if ((_1d05c7cdd_Struct(_49125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_49125_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1a947c1e6_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a946d35d_model(_self_, _49125_ssie.get()._field_Expr.get()._field_Model);
										_1a947c1e6_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1abb366e4:;
					};
				}
			}
			_match_end_1abb35649:;
		};
	};
	return false;;
}



inline void _1a9466026_pureFuncCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb017712_FnCallExprModel>& _51137_m) {
	jule::Bool _51213_wrapped = _1a9465ca1_isWrapped(_self_, _51137_m);;
	_1a946571d_modelForCall(_self_, _51137_m.get()._field_Expr);
	if ((!(_1eb027bb7_IsBuiltin(_51137_m.get()._field_Func.ptr())))) {
		if ((_51137_m.get()._field_Func.get()._field_Decl.get()._field_CppLinked && (_51137_m.get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1a952bce0_hasDirective(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Directives,jule::Str("cdef", 4))))) {
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto &expr = _51137_m.get()._field_Func.get()._field_Generics;
					auto it = expr.begin();
					_iter_begin_1abb3c2aa:;
					if (it != expr.end()) {
						jule::I64 _51826_i = it - expr.begin();
						jule::Ptr<_1d05c2cc7_InsGeneric> _51833_g = *it;
						{
							_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_51833_g.get()._field_Kind));
							if (((_51137_m.get()._field_Func.get()._field_Generics.len() - _51826_i) > 1LL)) {
								_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
							};
						}
						_iter_next_1abb3c2aa:;
						++it;
						_51826_i++;
						goto _iter_begin_1abb3c2aa;
					}
					_iter_end_1abb3c2aa:;
				};
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a9465993_pushCallInf(_self_, _51137_m);
	jule::Bool _52917_locinfo = false;;
	if ((((!(_1eb027bb7_IsBuiltin(_51137_m.get()._field_Func.ptr()))) && (_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1eb022970_IsSelf(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ _51137_m.get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type73) {
				_case_begin_1abb40b71:;
				{
					jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _53325_ssie = _51137_m.get()._field_Expr.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73);;
					{
						
						if (_1eb022bd4_IsRef(_51137_m.get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1abb42aeb:;
							{
								_1a946d35d_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1d05c6b00_Sptr(_53325_ssie.get()._field_ExprKind.ptr()) != nullptr)) {
							_case_begin_1abb43503:;
							{
								_1a946d35d_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
								_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_22b128bab_Production))) {
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a94ddc6e_locInfo(_self_.get()._field_oc, _51137_m.get()._field_Token);
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1abb41b0b:;
							{
								if ((_1d05c7cdd_Struct(_53325_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&", 1));
								};
								if (_51213_wrapped) {
									_1a947c1e6_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a946d35d_model(_self_, _53325_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1abb41a95:;
					};
					if ((_51137_m.get()._field_Args.len() > 0LL)) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type72) {
				_case_begin_1abb40bd7:;
				{
					_1a946d35d_model(_self_, _51137_m.get()._field_Expr.cast_ptr<_1eb01979c_TraitSubIdentExprModel>(&__jule_any_type72).get()._field_Expr);
					if ((!(_22b128bab_Production))) {
						_52917_locinfo=true;
					};
					if ((_51137_m.get()._field_Args.len() > 0LL)) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1abb40962:;
		};
	};
	_1a9465498_args(_self_, _51137_m.get()._field_Args);
	if (_52917_locinfo) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a94ddc6e_locInfo(_self_.get()._field_oc, _51137_m.get()._field_Token);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_51213_wrapped) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1a946629b_coFuncCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb017712_FnCallExprModel>& _58335_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	jule::Str _58617_head = jule::Str("std::thread([", 13);;
	if ((_58335_m.get()._field_Func.get()._field_Owner != nullptr)) {
		_58617_head+=jule::Str("_self_", 6);
		if ((_58335_m.get()._field_Args.len() > 0LL)) {
			_58617_head+=jule::Str(", ", 2);
		};
	};
	{
		auto &expr = _58335_m.get()._field_Args;
		auto it = expr.begin();
		_iter_begin_1abb4d3cb:;
		if (it != expr.end()) {
			jule::I64 _59313_i = it - expr.begin();
			jule::Any _59316_arg = *it;
			{
				if ((_59313_i > 0LL)) {
					_58617_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _59316_arg };
					
					if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1abb502e0:;
						{
							jule::Ptr<_1d0550a13_Var> _59925_v = _59316_arg.cast_ptr<_1d0550a13_Var>(&__jule_any_type10);;
							_58617_head+=static__1a9476e16_var(_59925_v);
							goto _iter_next_1abb4d3cb;
						}
					}
					_match_end_1abb4ea92:;
				};
				jule::Str _60317_name = (jule::Str("_co_arg_", 8) + _1eaeea272_Itoa(_59313_i));;
				_58617_head+=_60317_name;
				_1a94dbcc2_indent(_self_.get()._field_oc);
				_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_58335_m.get()._field_Func.get()._field_Params[_59313_i].get()._field_Kind));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if (_58335_m.get()._field_Func.get()._field_Params[_59313_i].get()._field_Decl.get()._field_Reference) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1a947c1e6_write(_self_.get()._field_oc, _60317_name);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a946d5d3_expr(_self_, _59316_arg);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _61517_argS = jule::Any(_60317_name, &__jule_any_type7);;
				_58335_m.get()._field_Args[_59313_i]=(*(((jule::Any*)((&(_61517_argS))))));
			}
			_iter_next_1abb4d3cb:;
			++it;
			_59313_i++;
			goto _iter_begin_1abb4d3cb;
		}
		_iter_end_1abb4d3cb:;
	};
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, _58617_head);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a9466026_pureFuncCall(_self_, _58335_m);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a94665ba_writeUseExpr(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb026831_FnIns>& _63337_f, jule::Ptr<_1d0598572_Data> _63352_d) {
	if ((_1d05c852a_Tup(_63352_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a946d5d3_expr(_self_, _63352_d.get()._field_Model);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1eb01b507_TupleExprModel> _63917_tup = _63352_d.get()._field_Model.cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90);;
	static__1a952976b_tup(_self_.get()._field_oc.get()._field_Obj,_1d05c852a_Tup(_63337_f.get()._field_Result.ptr()));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto &expr = _63917_tup.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1ab54d419:;
		if (it != expr.end()) {
			jule::I64 _64213_i = it - expr.begin();
			jule::Ptr<_1d0598572_Data> _64216_data = *it;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_64213_i));
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1a946d5d3_expr(_self_.get()._field_oc.get()._field_ec, _64216_data.get()._field_Model);
				if (((_63917_tup.get()._field_Datas.len() - _64213_i) > 1LL)) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1ab54d419:;
			++it;
			_64213_i++;
			goto _iter_begin_1ab54d419;
		}
		_iter_end_1ab54d419:;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1a9466840_funcCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb017712_FnCallExprModel> _65432_m) {
	if (_65432_m.get()._field_IsCo) {
		_1a946629b_coFuncCall(_self_, _65432_m);
		return;;
	};
	if (((_1eb027bb7_IsBuiltin(_65432_m.get()._field_Func.ptr()) || (!(_65432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_65432_m.get()._field_Except != nullptr) && (_65432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1a9466026_pureFuncCall(_self_, _65432_m);
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a9466026_pureFuncCall(_self_, _65432_m);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	if ((_65432_m.get()._field_Except != nullptr)) {
		if (((_65432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_65432_m.get()._field_Assigned)))) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a945e508_scope(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _68021_forwarded = _1a94704d6_isForwarded(_65432_m.get()._field_Except);;
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_68021_forwarded) {
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _68525_stmt = _65432_m.get()._field_Except.get()._field_Stmts[(_65432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _68525_stmt };
				
				if (_match_expr.type == &__jule_any_type25) {
					_case_begin_1ab5586bb:;
					{
						_65432_m.get()._field_Except.get()._field_Stmts=_65432_m.get()._field_Except.get()._field_Stmts.slice(0LL,(_65432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1a949c5ce_addIndent(_self_.get()._field_oc);
						_1a945e283_scopeStmts(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a94dbcc2_indent(_self_.get()._field_oc);
						_1a94665ba_writeUseExpr(_self_, _65432_m.get()._field_Func,_68525_stmt.cast_ptr<_1d0598572_Data>(&__jule_any_type25));
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a94db7a5_doneIndent(_self_.get()._field_oc);
						_1a94dbcc2_indent(_self_.get()._field_oc);
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1ab559090:;
					{
						_1a945e508_scope(_self_.get()._field_oc.get()._field_sc, _65432_m.get()._field_Except);
					}
				}
				_match_end_1ab55903a:;
			};
			if (_68021_forwarded) {
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a946dacd_initExpr(_self_, _65432_m.get()._field_Func.get()._field_Result);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a94db7a5_doneIndent(_self_.get()._field_oc);
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a94ddc6e_locInfo(_self_.get()._field_oc, _65432_m.get()._field_Token);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1eb0240e2_IsVoid(_65432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1a94dbcc2_indent(_self_.get()._field_oc);
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a94db7a5_doneIndent(_self_.get()._field_oc);
	};
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9466ab5_slice(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb017ab9_SliceExprModel> _72529_m) {
	if ((_72529_m.get()._field_Elems.len() == 0LL)) {
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9523611_asSlice(_72529_m.get()._field_ElemKind));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9523611_asSlice(_72529_m.get()._field_ElemKind));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a9465498_args(_self_, _72529_m.get()._field_Elems);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9466d3a_indexing(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01803c_IndexingExprModel> _73732_m) {
	_1a946d35d_model(_self_, _73732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_22b128bab_Production || (_1d05c6d64_Ptr(_73732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1d05c82b6_Map(_73732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1a94709d1_isExprComesFromBind(_73732_m.get()._field_Expr)) {
			_case_begin_1abc54081:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a946d5d3_expr(_self_, _73732_m.get()._field_Index.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1abc54834:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a94ddc6e_locInfo(_self_.get()._field_oc, _73732_m.get()._field_Token);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\",", 2));
				_1a946d5d3_expr(_self_, _73732_m.get()._field_Index.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1abc547bd:;
	};
}



inline void _1a94670b0_unsafeIndexing(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d068db51_UnsafeIndexingExprModel> _75738_m) {
	_1a946d35d_model(_self_, _75738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_22b128bab_Production || (_1d05c6d64_Ptr(_75738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1d05c82b6_Map(_75738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1abc58816:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a946d5d3_expr(_self_, _75738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1abc59163:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a946d5d3_expr(_self_, _75738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1abc590ec:;
	};
}



inline void _1a9467335_anonFunc(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0183e4_AnonFnExprModel> _77432_m) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525a53_func(_77432_m.get()._field_Func));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a951cd47_paramsIns(_self_.get()._field_oc, _77432_m.get()._field_Func.get()._field_Params);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	static__1a9525514_funcInsResult(_self_.get()._field_oc.get()._field_Obj,_77432_m.get()._field_Func);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a945e77d_funcScope(_self_.get()._field_oc.get()._field_sc, _77432_m.get()._field_Func);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a94675aa_mapExpr(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb018c1e_MapExprModel> _78531_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_78531_m.get()._field_KeyKind));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_78531_m.get()._field_ValKind));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_78531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto &expr = _78531_m.get()._field_Entries;
			auto it = expr.begin();
			_iter_begin_1abc62aea:;
			if (it != expr.end()) {
				jule::I64 _79218_i = it - expr.begin();
				jule::Ptr<_1eb01879b_KeyValPairExprModel> _79225_pair = *it;
				{
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a946d5d3_expr(_self_, _79225_pair.get()._field_Key);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a946d5d3_expr(_self_, _79225_pair.get()._field_Val);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_78531_m.get()._field_Entries.len() - _79218_i) > 1LL)) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1abc62aea:;
				++it;
				_79218_i++;
				goto _iter_begin_1abc62aea;
			}
			_iter_end_1abc62aea:;
		};
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a9467830_slicing(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01925d_SlicingExprModel> _80631_m) {
	_1a946d35d_model(_self_, _80631_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_22b128bab_Production))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a94ddc6e_locInfo(_self_.get()._field_oc, _80631_m.get()._field_Token);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a946d5d3_expr(_self_, _80631_m.get()._field_Left);
	if ((_80631_m.get()._field_Right != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a946d5d3_expr(_self_, _80631_m.get()._field_Right);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9467aa5_traitSub(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01979c_TraitSubIdentExprModel> _82232_m) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a94760e1_traitDecl(_82232_m.get()._field_Trt));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a946d35d_model(_self_, _82232_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475aa2_func(_82232_m.get()._field_Method));
}



inline void _1a9467d2a_structureSub(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _83136_m) {
	_1a946d35d_model(_self_, _83136_m.get()._field_Expr.get()._field_Model);
	if ((_83136_m.get()._field_Field != nullptr)) {
		if ((_1d05c6d64_Ptr(_83136_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("->", 2));
		} else if ((_1d05c6b00_Sptr(_83136_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".get(", 5));
			if ((!(_22b128bab_Production))) {
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
				_1a94ddc6e_locInfo(_self_.get()._field_oc, _83136_m.get()._field_Token);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
			};
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(").", 2));
		} else {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".", 1));
		};
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9476b6e_field(_83136_m.get()._field_Field.get()._field_Decl));
	};
}



inline void _1a94680a0_commonIdent(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01ab99_CommonIdentExprModel> _85131_m) {
	_1a947c1e6_write(_self_.get()._field_oc, _85131_m.get()._field_Ident);
}



inline void _1a9468325_commonSub(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01b20a_CommonSubIdentExprModel> _85533_m) {
	_1a946d35d_model(_self_, _85533_m.get()._field_Expr);
	{
		
		if ((_1d05c6d64_Ptr(_85533_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1abc72038:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1d05c6b00_Sptr(_85533_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1abc72764:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_22b128bab_Production))) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a94ddc6e_locInfo(_self_.get()._field_oc, _85533_m.get()._field_Token);
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1abc726ed:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1abc72687:;
	};
	_1a947c1e6_write(_self_.get()._field_oc, _85533_m.get()._field_Ident);
}



inline void _1a946859a_array(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01a8ad_ArrayExprModel> _87429_m) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9524975_array(_87429_m.get()._field_Kind));
	if ((_87429_m.get()._field_Elems.len() == 0LL)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_87429_m.get()._field_Elems.len() == 2LL) && (_87429_m.get()._field_Elems[1LL] == nullptr))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a946d5d3_expr(_self_, _87429_m.get()._field_Elems[0LL]);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a9465498_args(_self_, _87429_m.get()._field_Elems);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a9468820_funcInsCommon(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb026831_FnIns> _89737_m) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525a53_func(_89737_m));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a9468a95_funcIns(_self_, _89737_m);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9468a95_funcIns(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb026831_FnIns> _90431_m) {
	if (((_90431_m.get()._field_Decl != nullptr) && _90431_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1ea2c0405_Directive> _90617_d = _1a952b95a_findDirective(_90431_m.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_90617_d != nullptr)) {
			_1a947c1e6_write(_self_.get()._field_oc, _1a9520223_concatAllParts(_90617_d.get()._field_Args));
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475d49_funcIns(_90431_m));
}



inline void _1a9468d1a_tuple(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01b507_TupleExprModel> _91529_m) {
	{
		auto &expr = _91529_m.get()._field_Datas;
		auto it = expr.begin();
		_iter_begin_1abc7ea4b:;
		if (it != expr.end()) {
			jule::I64 _91614_i = it - expr.begin();
			jule::Ptr<_1d0598572_Data> _91621_d = *it;
			{
				_1a946d5d3_expr(_self_, _91621_d.get()._field_Model);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_91529_m.get()._field_Datas.len() - _91614_i) > 1LL)) {
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a94dbcc2_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1abc7ea4b:;
			++it;
			_91614_i++;
			goto _iter_begin_1abc7ea4b;
		}
		_iter_end_1abc7ea4b:;
	};
}



inline void _1a9469090_newCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01c4c5_BuiltinNewCallExprModel> _92631_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_92631_m.get()._field_Kind));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_92631_m.get()._field_Init != nullptr)) {
		_1a946d5d3_expr(_self_, _92631_m.get()._field_Init);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9469315_outCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01b8d1_BuiltinOutCallExprModel> _93631_m) {
	if ((_93631_m.get()._field_Debug && _22b128bab_Production)) {
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a946d5d3_expr(_self_, _93631_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946958a_outlnCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01bcbb_BuiltinOutlnCallExprModel> _94533_m) {
	if ((_94533_m.get()._field_Debug && _22b128bab_Production)) {
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a946d5d3_expr(_self_, _94533_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a9469810_panicCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01c8b0_BuiltinPanicCallExprModel> _95433_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a946d5d3_expr(_self_, _95433_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a94ddc6e_locInfo(_self_.get()._field_oc, _95433_m.get()._field_Token);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a9469a85_assertCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel> _96234_m) {
	if (_22b128bab_Production) {
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a946d5d3_expr(_self_, _96234_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a947c1e6_write(_self_.get()._field_oc, _1a946e7d2_cstrLit(static_cast<jule::Slice<jule::U8>>(_96234_m.get()._field_Log)));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a94ddc6e_locInfo(_self_.get()._field_oc, _96234_m.get()._field_Token);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a9469d0a_errorCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01ec47_BuiltinErrorCallExprModel> _97533_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1eb0240e2_IsVoid(_97533_m.get()._field_Func.get()._field_Decl.ptr())) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		static__1a9529ccc_codeMut1(_self_.get()._field_oc.get()._field_Obj,_97533_m.get()._field_Func.get()._field_Result);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1a946d5d3_expr(_self_, _97533_m.get()._field_Err.get()._field_Model);
	jule::I64 _98513_i = _1a94e6309_pushAnyType(_self_.get()._field_oc, _97533_m.get()._field_Err.get()._field_Kind);;
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_98513_i));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a946a080_copyCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01e85c_BuiltinCopyCallExprModel> _99132_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a946d35d_model(_self_, _99132_m.get()._field_Dest.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1d05c688b_Prim(_99132_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a946d35d_model(_self_, _99132_m.get()._field_Src.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1d05c688b_Prim(_99132_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946a305_lenCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01da26_BuiltinLenCallExprModel> _100731_m) {
	_1a946d35d_model(_self_, _100731_m.get()._field_Expr.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1a946a57a_capCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01dd45_BuiltinCapCallExprModel> _101231_m) {
	_1a946d35d_model(_self_, _101231_m.get()._field_Expr.get()._field_Model);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1a946a800_deleteCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel> _101734_m) {
	_1a946d35d_model(_self_, _101734_m.get()._field_Dest.get()._field_Model);
	if ((_101734_m.get()._field_Key != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1a946d35d_model(_self_, _101734_m.get()._field_Key.get()._field_Model);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1a946aa75_makeCallSlice(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>& _102838_m) {
	jule::Ptr<_1d05cd442_Slc> _102917_slice = _1d05c7815_Slc(_102838_m.get()._field_Kind.ptr());;
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_102838_m.get()._field_Kind));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a946d5d3_expr(_self_, _102838_m.get()._field_Len);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if ((_102838_m.get()._field_Cap != nullptr)) {
		_1a946d5d3_expr(_self_, _102838_m.get()._field_Cap);
	} else {
		_1a946d5d3_expr(_self_, _102838_m.get()._field_Len);
	};
	if (_1a952c087_shouldInitialized(_102917_slice.get()._field_Elem)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a946dacd_initExpr(_self_, _102917_slice.get()._field_Elem);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946acea_makeCallStr(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel>& _104636_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a946d5d3_expr(_self_, _104636_m.get()._field_Len);
	if ((_104636_m.get()._field_Cap != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a946d5d3_expr(_self_, _104636_m.get()._field_Cap);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946b070_makeCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel> _105732_m) {
	if ((_1d05c7815_Slc(_105732_m.get()._field_Kind.ptr()) != nullptr)) {
		_1a946aa75_makeCallSlice(_self_, _105732_m);
		return;;
	};
	_1a946acea_makeCallStr(_self_, _105732_m);
}



inline void _1a946b2e5_pushToSlice(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d068e019_PushToSliceExprModel> _106535_m) {
	jule::I64 _106613_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1a946d35d_model(_self_, _106535_m.get()._field_Dest);
	jule::Str _106813_dest = _self_.get()._field_oc.get()._field_Obj.slice(_106613_n);;
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1a947c1e6_write(_self_.get()._field_oc, _106813_dest);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(static_cast<jule::I64>(_106535_m.get()._field_Elems.get()._field_Elems.len())));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto &expr = _106535_m.get()._field_Elems.get()._field_Elems;
		auto it = expr.begin();
		_iter_begin_1abca4bb4:;
		if (it != expr.end()) {
			jule::Any _107521_e = *it;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _106813_dest);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1a946d35d_model(_self_, _107521_e);
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1abca4bb4:;
			++it;
			goto _iter_begin_1abca4bb4;
		}
		_iter_end_1abca4bb4:;
	};
}



inline void _1a946b56a_appendCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01d707_BuiltinAppendCallExprModel> _108434_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a946d35d_model(_self_, _108434_m.get()._field_Dest);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a946d35d_model(_self_, _108434_m.get()._field_Elements);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946b7e0_cloneCall(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01c0da_BuiltinCloneCallExprModel> _109233_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a946d35d_model(_self_, _109233_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946ba65_sizeof(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb020044_SizeofExprModel> _109830_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a946d35d_model(_self_, _109830_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946bcda_alignof(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb020330_AlignofExprModel> _110431_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a946d35d_model(_self_, _110431_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a946c0e8_runeLit(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb02061b_RuneExprModel> _111027_m) {
	if ((_111027_m.get()._field_Code <= 127LL)) {
		jule::Str _111221_b = _1a946e21b_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_111027_m.get()._field_Code)));;
		if ((_111221_b == jule::Str("'", 1))) {
			_111221_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _111221_b) + jule::Str("'", 1));;
	};
	return _1a946ed87_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_111027_m.get()._field_Code)));;
}



inline void _1a946c36d_structureStatic(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb01a4e5_StructStaticIdentExprModel> _112139_m) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475d49_funcIns(_112139_m.get()._field_Method));
}



inline void _1a946c5e3_integratedToStr(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb020929_IntegratedToStrExprModel> _112539_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a946d35d_model(_self_, _112539_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a946c868_backendEmit(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb020ce2_BackendEmitExprModel> _113135_m) {
	if ((_113135_m.get()._field_Exprs.len() == 0LL)) {
		_1a947c1e6_write(_self_.get()._field_oc, _113135_m.get()._field_Code);
		return;;
	};
	jule::I64 _113613_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _113717_args = jule::Slice<jule::Any>::alloc(_113135_m.get()._field_Exprs.len(), _113135_m.get()._field_Exprs.len());;
	{
		auto &expr = _113135_m.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1abcb0a16:;
		if (it != expr.end()) {
			jule::I64 _113814_i = it - expr.begin();
			jule::Any _113821_expr = *it;
			{
				_1a946d5d3_expr(_self_, _113821_expr);
				_113717_args[_113814_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_113613_n), &__jule_any_type7);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL,_113613_n);
			}
			_iter_next_1abcb0a16:;
			++it;
			_113814_i++;
			goto _iter_begin_1abcb0a16;
		}
		_iter_end_1abcb0a16:;
	};
	_1a947c1e6_write(_self_.get()._field_oc, _1d06852c9_Format(_113135_m.get()._field_Code,_113717_args));
}



inline void _1a946cadd_free(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1eb0210cd_FreeExprModel> _114628_m) {
	_1a946d5d3_expr(_self_, _114628_m.get()._field_Expr);
	if (_22b128518_RC) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a946cd63_mutSlicing(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d068e5d0_MutSlicingExprModel> _115534_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a946d35d_model(_self_, _115534_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_22b128bab_Production))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a94ddc6e_locInfo(_self_.get()._field_oc, _115534_m.get()._field_Token);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a946d5d3_expr(_self_, _115534_m.get()._field_Left);
	if ((_115534_m.get()._field_Right != nullptr)) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(",", 1));
		_1a946d5d3_expr(_self_, _115534_m.get()._field_Right);
	};
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a946d0d8_strInsertBegin(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d068e976_StrInsertBeginExprModel> _117238_m) {
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a946d35d_model(_self_, _117238_m.get()._field_Dest);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a946d35d_model(_self_, _117238_m.get()._field_Expr);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a946d35d_model(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Any _118029_m) {
	{
		auto &_match_expr{ _118029_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1abcbb505:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _118029_m.cast<jule::Str>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1abcbb7d0:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_118029_m.cast_ptr<_1d05c4504_TypeKind>(&__jule_any_type92)));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1abcbb846:;
			{
				_1a9463870_constant(_self_, _118029_m.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1abcbb8ac:;
			{
				_1a94644a8_var(_self_, _118029_m.cast_ptr<_1d0550a13_Var>(&__jule_any_type10));
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1abcbb923:;
			{
				_1a946472d_structureIns(_self_, _118029_m.cast_ptr<_1ea320268_StructIns>(&__jule_any_type11));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1abcbc44b:;
			{
				_1a9468820_funcInsCommon(_self_, _118029_m.cast_ptr<_1eb026831_FnIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1abcbc4b2:;
			{
				_1a9463ead_unsafeBinary(_self_, _118029_m.cast_ptr<_1d068d832_UnsafeBinopExprModel>(&__jule_any_type131).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1abcbc528:;
			{
				_1a9464233_binary(_self_, _118029_m.cast_ptr<_1eb015897_BinopExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1abcbc58e:;
			{
				_1a94649a3_unary(_self_, _118029_m.cast_ptr<_1eb015c4e_UnaryExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1abcbc605:;
			{
				_1a9464c28_structureLit(_self_, _118029_m.cast_ptr<_1eb016502_StructLitExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1abcbc66b:;
			{
				_1a9464e9d_allocStructure(_self_, _118029_m.cast_ptr<_1eb016810_AllocStructLitExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1abcbc6d2:;
			{
				_1a9465223_casting(_self_, _118029_m.cast_ptr<_1eb016d60_CastingExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1abcbc748:;
			{
				_1a9466840_funcCall(_self_, _118029_m.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1abcbc7ae:;
			{
				_1a9466ab5_slice(_self_, _118029_m.cast_ptr<_1eb017ab9_SliceExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1abcbc825:;
			{
				_1a946859a_array(_self_, _118029_m.cast_ptr<_1eb01a8ad_ArrayExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1abcbc88b:;
			{
				_1a94670b0_unsafeIndexing(_self_, _118029_m.cast_ptr<_1d068db51_UnsafeIndexingExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1abcbc902:;
			{
				_1a9466d3a_indexing(_self_, _118029_m.cast_ptr<_1eb01803c_IndexingExprModel>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1abcbc979:;
			{
				_1a9467335_anonFunc(_self_, _118029_m.cast_ptr<_1eb0183e4_AnonFnExprModel>(&__jule_any_type107));
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1abcbca01:;
			{
				_1a94675aa_mapExpr(_self_, _118029_m.cast_ptr<_1eb018c1e_MapExprModel>(&__jule_any_type106));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1abcbca78:;
			{
				_1a9467830_slicing(_self_, _118029_m.cast_ptr<_1eb01925d_SlicingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1abcbcb00:;
			{
				_1a9467aa5_traitSub(_self_, _118029_m.cast_ptr<_1eb01979c_TraitSubIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1abcbcb77:;
			{
				_1a9467d2a_structureSub(_self_, _118029_m.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1abcbcbee:;
			{
				_1a94680a0_commonIdent(_self_, _118029_m.cast_ptr<_1eb01ab99_CommonIdentExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1abcbcc76:;
			{
				_1a9468325_commonSub(_self_, _118029_m.cast_ptr<_1eb01b20a_CommonSubIdentExprModel>(&__jule_any_type75));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1abcbcced:;
			{
				_1a9468d1a_tuple(_self_, _118029_m.cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1abcbcd75:;
			{
				_1a9469315_outCall(_self_, _118029_m.cast_ptr<_1eb01b8d1_BuiltinOutCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1abcbcdec:;
			{
				_1a946958a_outlnCall(_self_, _118029_m.cast_ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1abcbce74:;
			{
				_1a9469090_newCall(_self_, _118029_m.cast_ptr<_1eb01c4c5_BuiltinNewCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1abcbceeb:;
			{
				_1a9469810_panicCall(_self_, _118029_m.cast_ptr<_1eb01c8b0_BuiltinPanicCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1abcbd073:;
			{
				_1a9469a85_assertCall(_self_, _118029_m.cast_ptr<_1eb01cd66_BuiltinAssertCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1abcbd0ea:;
			{
				_1a9469d0a_errorCall(_self_, _118029_m.cast_ptr<_1eb01ec47_BuiltinErrorCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1abcbd172:;
			{
				_1a946b070_makeCall(_self_, _118029_m.cast_ptr<_1eb01d31c_BuiltinMakeCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1abcbd1e9:;
			{
				_1a946b56a_appendCall(_self_, _118029_m.cast_ptr<_1eb01d707_BuiltinAppendCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1abcbd271:;
			{
				_1a946b7e0_cloneCall(_self_, _118029_m.cast_ptr<_1eb01c0da_BuiltinCloneCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1abcbd2e8:;
			{
				_1a946a080_copyCall(_self_, _118029_m.cast_ptr<_1eb01e85c_BuiltinCopyCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1abcbd370:;
			{
				_1a946a305_lenCall(_self_, _118029_m.cast_ptr<_1eb01da26_BuiltinLenCallExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1abcbd3e7:;
			{
				_1a946a57a_capCall(_self_, _118029_m.cast_ptr<_1eb01dd45_BuiltinCapCallExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1abcbd46e:;
			{
				_1a946a800_deleteCall(_self_, _118029_m.cast_ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1abcbd4e6:;
			{
				_1a946ba65_sizeof(_self_, _118029_m.cast_ptr<_1eb020044_SizeofExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1abcbd56d:;
			{
				_1a946bcda_alignof(_self_, _118029_m.cast_ptr<_1eb020330_AlignofExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1abcbd5e5:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, _1a946c0e8_runeLit(_self_, _118029_m.cast_ptr<_1eb02061b_RuneExprModel>(&__jule_any_type91)));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1abcbd66c:;
			{
				_1a946c36d_structureStatic(_self_, _118029_m.cast_ptr<_1eb01a4e5_StructStaticIdentExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1abcbd6e4:;
			{
				_1a946c5e3_integratedToStr(_self_, _118029_m.cast_ptr<_1eb020929_IntegratedToStrExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1abcbd76b:;
			{
				_1a946c868_backendEmit(_self_, _118029_m.cast_ptr<_1eb020ce2_BackendEmitExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1abcbd7e3:;
			{
				_1a946cadd_free(_self_, _118029_m.cast_ptr<_1eb0210cd_FreeExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1abcbd86a:;
			{
				_1a946cd63_mutSlicing(_self_, _118029_m.cast_ptr<_1d068e5d0_MutSlicingExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1abcbd8e2:;
			{
				_1a946d0d8_strInsertBegin(_self_, _118029_m.cast_ptr<_1d068e976_StrInsertBeginExprModel>(&__jule_any_type129));
			}
		}
		else {
			_case_begin_1abcbb67b:;
			{
				_1a947c1e6_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1abcbb59e:;
	};
}



inline void _1a946d5d3_expr(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Any _128128_e) {
	_1a946d35d_model(_self_, _128128_e);
}



inline void _1a946d858_val(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d05995ea_Value> _128527_v) {
	if (_1d0598e35_IsConst(_128527_v.get()._field_Data.ptr())) {
		_1a9463870_constant(_self_, _128527_v.get()._field_Data.get()._field_Constant);
		return;;
	};
	_1a946d5d3_expr(_self_, _128527_v.get()._field_Data.get()._field_Model);
}



inline void _1a946dacd_initExpr(jule::Ptr<_1a9462220_exprCoder> _self_, jule::Ptr<_1d05c4504_TypeKind> _129332_t) {
	if (_1d05c5dda_NilCompatible(_129332_t.ptr())) {
		if ((_1d05c6d64_Ptr(_129332_t.ptr()) != nullptr)) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_129332_t));
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1d05cdec0_Tuple> _130317_tup = _1d05c852a_Tup(_129332_t.ptr());;
	if ((_130317_tup != nullptr)) {
		static__1a952976b_tup(_self_.get()._field_oc.get()._field_Obj,_130317_tup);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto &expr = _130317_tup.get()._field_Types;
			auto it = expr.begin();
			_iter_begin_1abcdaa30:;
			if (it != expr.end()) {
				jule::I64 _130718_i = it - expr.begin();
				jule::Ptr<_1d05c4504_TypeKind> _130725_tt = *it;
				{
					if ((!(_1a952c087_shouldInitialized(_130725_tt)))) {
						goto _iter_next_1abcdaa30;
					};
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1a947c1e6_write(_self_.get()._field_oc, _1eaeea272_Itoa(_130718_i));
					_1a947c1e6_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1a946dacd_initExpr(_self_, _130725_tt);
					if (((_130317_tup.get()._field_Types.len() - _130718_i) > 1LL)) {
						_1a947c1e6_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1abcdaa30:;
				++it;
				_130718_i++;
				goto _iter_begin_1abcdaa30;
			}
			_iter_end_1abcdaa30:;
		};
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1d05005ea_Enum> _132217_enm = _1d05c70c8_Enum(_129332_t.ptr());;
	if ((_132217_enm != nullptr)) {
		_1a946d858_val(_self_, _132217_enm.get()._field_Items[0LL].get()._field_Value);
		return;;
	};
	jule::Ptr<_1d05c9251_Prim> _132713_prim = _1d05c688b_Prim(_129332_t.ptr());;
	if ((_132713_prim != nullptr)) {
		if (_1eb0090a5_IsNum(_132713_prim.get()._field_Kind)) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1d05cc221_IsBool(_132713_prim.ptr())) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1d05cc485_IsStr(_132713_prim.ptr())) {
			_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1d05c75a1_Arr(_129332_t.ptr()) != nullptr)) {
		jule::Ptr<_1d05d05dc_Arr> _133921_arr = _1d05c75a1_Arr(_129332_t.ptr());;
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_129332_t));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a946dacd_initExpr(_self_, _133921_arr.get()._field_Elem);
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1ea320268_StructIns> _134617_s = _1d05c7cdd_Struct(_129332_t.ptr());;
	if ((((_134617_s != nullptr) && _134617_s.get()._field_Decl.get()._field_CppLinked) && (_1a952b95a_findDirective(_134617_s.get()._field_Decl.get()._field_Directives,jule::Str("typedef", 7)) == nullptr))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_129332_t));
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9525cea_kind(_129332_t));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9462220_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a9471680_cloneFuncDecl(jule::Ptr<_1ea31ed8e_Struct>& _1030_s) {
	jule::Str _1117_obj = static__1a9524436_structure(_1030_s);;
	_1117_obj+=jule::Str(" clone(void) const ", 19);
	return _1117_obj;;
}



inline jule::Str static__1a9471927_cloneFuncDef(jule::Ptr<_1ea31ed8e_Struct>& _1629_s) {
	jule::Str _1717_obj = static__1a9524436_structure(_1629_s);;
	_1717_obj+=(jule::Str(" ", 1) + _1717_obj);
	_1717_obj+=jule::Str("::clone(void) const ", 20);
	return _1717_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9471383_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9472807_TestCoder> static__1a9472c7a_New(jule::Ptr<_1a951a99e_ObjectCoder>& _2824_oc) {
	return jule::new_ptr<_1a9472807_TestCoder>(_1a9472807_TestCoder{._field_oc=_2824_oc});;
}



inline jule::Ptr<_1d05298bb_ImportInfo> _1a9472ede_findTestingPackage(jule::Ptr<_1a9472807_TestCoder> _self_) {
	{
		auto &expr = _self_.get()._field_oc.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1abce870d:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_1abce870d:;
			++it;
			goto _iter_begin_1abce870d;
		}
		_iter_end_1abce870d:;
	};
	return nullptr;;
}



inline void _1a9473264_appendTest(jule::Ptr<_1a9472807_TestCoder> _self_, jule::Ptr<_1eb026831_FnIns> _4334_f) {
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a9473929_callTmReset(_self_);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a947c1e6_write(_self_.get()._field_oc, _1a946e7d2_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475d49_funcIns(_4334_f));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a94734d9_appendPackageTests(jule::Ptr<_1a9472807_TestCoder> _self_, jule::Ptr<_1d052c825_Package>& _6043_p) {
	{
		auto &expr = _6043_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1abcee02c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _6121_file = *it;
			{
				{
					auto &expr = _6121_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1abcee879:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _6225_f = *it;
						{
							if (_1a952bce0_hasDirective(_6225_f.get()._field_Directives,jule::Str("test", 4))) {
								_1a9473264_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1abcee879:;
						++it;
						goto _iter_begin_1abcee879;
					}
					_iter_end_1abcee879:;
				};
			}
			_iter_next_1abcee02c:;
			++it;
			goto _iter_begin_1abcee02c;
		}
		_iter_end_1abcee02c:;
	};
}



inline jule::Bool _1a947374d_readyTestingPackage(jule::Ptr<_1a9472807_TestCoder> _self_) {
	jule::Ptr<_1d05298bb_ImportInfo> _7117_p = _1a9472ede_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1d052ad0c_FindStruct(_7117_p.ptr(), jule::Str("T", 1),false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1ea2ea397_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5),false);
	_self_.get()._field_tmFailed=_1ea2ea397_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6),false);
	_self_.get()._field_tmSkipped=_1ea2ea397_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7),false);
	return true;;
}



inline void _1a9473929_callTmReset(jule::Ptr<_1a9472807_TestCoder> _self_) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475aa2_func(_self_.get()._field_tmReset));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9473b05_callTmFailed(jule::Ptr<_1a9472807_TestCoder> _self_) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475aa2_func(_self_.get()._field_tmFailed));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9473cd1_callTmSkipped(jule::Ptr<_1a9472807_TestCoder> _self_) {
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9475aa2_func(_self_.get()._field_tmSkipped));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a9473eac_Serialize(jule::Ptr<_1a9472807_TestCoder> _self_) {
	_1a951e6d9_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a951e50d_end(_self_.get()._field_oc);
	});;
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	if ((!(_1a947374d_readyTestingPackage(_self_)))) {
		_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a94db7a5_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1a947c1e6_write(_self_.get()._field_oc, static__1a9522544_asSptr(static__1a95246cd_structureIns(_self_.get()._field_t)));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a947c1e6_write(_self_.get()._field_oc, static__1a95246cd_structureIns(_self_.get()._field_t));
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a949c5ce_addIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a9473b05_callTmFailed(_self_);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a9473cd1_callTmSkipped(_self_);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a94734d9_appendPackageTests(_self_, _self_.get()._field_oc.get()._field_ir.get()._field_Main);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a94db7a5_doneIndent(_self_.get()._field_oc);
	_1a94dbcc2_indent(_self_.get()._field_oc);
	_1a947c1e6_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a9472807_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a9475420_toOut(jule::Str& _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)),15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_3322_ident;
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, (_3322_ident.len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=_3322_ident;
	return _4217_obj;;
}



inline jule::Str static__1a947580a_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str& _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1eaeea272_Itoa(_5423_row);
	_5517_obj+=_1eaeea272_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_5444_ident;
	return _5517_obj;;
}



inline jule::Str static__1a9475aa2_func(jule::Ptr<_1eb023b80_Fn>& _6521_f) {
	{
		
		if (_6521_f.get()._field_CppLinked) {
			_case_begin_1abd17287:;
			{
				return _6521_f.get()._field_Ident;;
			}
		}
		else if ((_6521_f.get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1abd172ed:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1eb024356_IsMethod(_6521_f.ptr())) {
			_case_begin_1abd16682:;
			{
				jule::Str _7221_obj = static__1a9475420_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
				if (_6521_f.get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1abd1661b:;
			{
				return static__1a9475420_toOut(_6521_f.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_6521_f)));;
			}
		}
		_match_end_1abd16572:;
	};
}



inline jule::Str static__1a9475d49_funcIns(jule::Ptr<_1eb026831_FnIns>& _8424_f) {
	if (_1eb027bb7_IsBuiltin(_8424_f.ptr())) {
		return (jule::Str("jule::", 6) + _8424_f.get()._field_Decl.get()._field_Ident);;
	};
	if ((_8424_f.get()._field_Decl.get()._field_CppLinked || (_8424_f.get()._field_Generics.len() == 0LL))) {
		return static__1a9475aa2_func(_8424_f.get()._field_Decl);;
	};
	return static__1a9475420_toOut(_8424_f.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_8424_f)));;
}



inline jule::Str static__1a94760e1_traitDecl(jule::Ptr<_1d04ed4a5_Trait> _9525_t) {
	if (_1d04ee022_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1a9475420_toOut(_9525_t.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1a9476388_param(jule::Ptr<_1eb022343_Param>& _10322_p) {
	if ((_212a0ece7_IsAnonIdent(_10322_p.get()._field_Ident) || _212a0ea50_IsIgnoreIdent(_10322_p.get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1eb022970_IsSelf(_10322_p.ptr())) {
		return jule::Str("_self_", 6);;
	};
	if ((_10322_p.get()._field_Token == nullptr)) {
		return static__1a947580a_toLocal(0LL,0LL,_10322_p.get()._field_Ident);;
	};
	return static__1a947580a_toLocal(_10322_p.get()._field_Token.get()._field_Row,_10322_p.get()._field_Token.get()._field_Column,_10322_p.get()._field_Ident);;
}



inline jule::Str static__1a9476630_structure(jule::Ptr<_1ea31ed8e_Struct>& _11726_s) {
	if (_11726_s.get()._field_CppLinked) {
		if (_1a952bce0_hasDirective(_11726_s.get()._field_Directives,jule::Str("typedef", 7))) {
			return _11726_s.get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + _11726_s.get()._field_Ident);;
	};
	return static__1a9475420_toOut(_11726_s.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_11726_s)));;
}



inline jule::Str static__1a94768c7_structureIns(jule::Ptr<_1ea320268_StructIns>& _12829_s) {
	if ((_12829_s.get()._field_Decl.get()._field_CppLinked || (_12829_s.get()._field_Generics.len() == 0LL))) {
		return static__1a9476630_structure(_12829_s.get()._field_Decl);;
	};
	return static__1a9475420_toOut(_12829_s.get()._field_Decl.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12829_s)));;
}



inline jule::Str static__1a9476b6e_field(jule::Ptr<_1ea2e3deb_Field>& _13622_f) {
	if (_13622_f.get()._field_Owner.get()._field_CppLinked) {
		return _13622_f.get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + _13622_f.get()._field_Ident);;
}



inline jule::Str static__1a9476e16_var(jule::Ptr<_1d0550a13_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1abd221a4:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1abd21527:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1abd2158d:;
			{
				if ((_1d05c6b00_Sptr(_14423_v.get()._field_Kind.get()._field_Kind.ptr()) == nullptr)) {
					return jule::Str("(*_self_)", 9);;
				};
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1abd21604:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1abd2166a:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1eaeea272_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1abd21901:;
			{
				return static__1a947580a_toLocal(_14423_v.get()._field_Token.get()._field_Row,_14423_v.get()._field_Token.get()._field_Column,_14423_v.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1abd214b1:;
			{
				return static__1a9475420_toOut(_14423_v.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1abd20c1e:;
	};
}



inline jule::Str static__1a94771ad_iterBegin(jule::Uintptr _16725_it) {
	jule::Str _16817_obj = jule::Str::alloc(0LL, 30LL);;
	_16817_obj+=jule::Str("_iter_begin_", 12);
	_16817_obj+=_1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16725_it)),15LL);
	return _16817_obj;;
}



inline jule::Str static__1a9477455_iterEnd(jule::Uintptr _17523_it) {
	jule::Str _17617_obj = jule::Str::alloc(0LL, 30LL);;
	_17617_obj+=jule::Str("_iter_end_", 10);
	_17617_obj+=_1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17523_it)),15LL);
	return _17617_obj;;
}



inline jule::Str static__1a94776ec_iterNext(jule::Uintptr _18324_it) {
	jule::Str _18417_obj = jule::Str::alloc(0LL, 30LL);;
	_18417_obj+=jule::Str("_iter_next_", 11);
	_18417_obj+=_1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18324_it)),15LL);
	return _18417_obj;;
}



inline jule::Str static__1a9477994_label(jule::Str& _19122_ident) {
	jule::Str _19217_obj = jule::Str::alloc(0LL, 30LL);;
	_19217_obj+=jule::Str("_julec_label_", 13);
	_19217_obj+=_19122_ident;
	return _19217_obj;;
}



inline jule::Str static__1a9477c3b_matchEnd(jule::Uintptr _19924_m) {
	jule::Str _20017_obj = jule::Str::alloc(0LL, 30LL);;
	_20017_obj+=jule::Str("_match_end_", 11);
	_20017_obj+=_1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19924_m)),15LL);
	return _20017_obj;;
}



inline jule::Str static__1a9477ed3_caseBegin(jule::Uintptr _20725_c) {
	jule::Str _20817_obj = jule::Str::alloc(0LL, 30LL);;
	_20817_obj+=jule::Str("_case_begin_", 12);
	_20817_obj+=_1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20725_c)),15LL);
	return _20817_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9474e58_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a94a76e9_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a947cc0d_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9521202_Str(_1a9520e27_customType* _self_) {
	return (*_self_)._field_kind;;
}



inline jule::Bool _1a9521510_Equal(jule::Ptr<_1a9520e27_customType> _self_, jule::Ptr<_1d05c4504_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9520e27_customType _Src) {
	_Stream << _1a9521202_Str(&_Src);
	return _Stream;
}



inline jule::Str static__1a9521c5d_toType(jule::Str _6026_id) {
	if ((_6026_id != jule::Str("uintptr", 7))) {
		_6026_id=_1eaeec274_RealKindOf(_6026_id);
	};
	if (((97LL <= _6026_id[0LL]) && (_6026_id[0LL] <= 122LLU))) {
		_6026_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6026_id);;
}



inline jule::Str static__1a9522005_prim(jule::Ptr<_1d05c9251_Prim> _7120_p) {
	return static__1a9521c5d_toType(_1d05c95b4_Str(_7120_p.ptr()));;
}



inline jule::Str static__1a952229c_tuple(jule::Ptr<_1d05cdec0_Tuple> _7625_t) {
	jule::Str _7717_obj = jule::Str("std::tuple<", 11);;
	{
		auto &expr = _7625_t.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1abe2255c:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c4504_TypeKind> _7821_tk = *it;
			{
				_7717_obj+=static__1a9525cea_kind(_7821_tk);
				_7717_obj+=jule::Str(",", 1);
			}
			_iter_next_1abe2255c:;
			++it;
			goto _iter_begin_1abe2255c;
		}
		_iter_end_1abe2255c:;
	};
	(_7717_obj).mut_slice(0LL,(_7717_obj.len() - 1LL));;
	_7717_obj+=jule::Str(">", 1);
	return _7717_obj;;
}



inline jule::Str static__1a9522544_asSptr(jule::Str _8822_elem) {
	jule::Str _8917_obj = jule::Str("jule::Ptr<", 10);;
	_8917_obj+=_8822_elem;
	_8917_obj+=jule::Str(">", 1);
	return _8917_obj;;
}



inline jule::Str static__1a95227db_asPtr(jule::Str _9621_elem) {
	return (_9621_elem + jule::Str("*", 1));;
}



inline jule::Str static__1a9522a83_sptr(jule::Ptr<_1d05cc9d5_Sptr> _10124_sptr) {
	return static__1a9522544_asSptr(static__1a9525cea_kind(_10124_sptr.get()._field_Elem));;
}



inline jule::Str static__1a9522d2a_ptr(jule::Ptr<_1d05d1049_Ptr> _10623_p) {
	;
	if (_1d05d1a1c_IsUnsafe(_10623_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _11117_elem = static__1a9525cea_kind(_10623_p.get()._field_Elem);;
	_11117_elem+=jule::Str("*", 1);
	return _11117_elem;;
}



inline jule::Str static__1a95230c2_enumDecl(jule::Ptr<_1d05005ea_Enum> _11728_e) {
	return static__1a9525cea_kind(_11728_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str static__1a9523369_typeEnumDecl(jule::Ptr<_1d0501be5_TypeEnum> _12232_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str static__1a9523611_asSlice(jule::Ptr<_1d05c4504_TypeKind> _12627_elem) {
	jule::Str _12717_obj = jule::Str("jule::Slice<", 12);;
	_12717_obj+=static__1a9525cea_kind(_12627_elem);
	_12717_obj+=jule::Str(">", 1);
	return _12717_obj;;
}



inline jule::Str static__1a95238a8_slice(jule::Ptr<_1d05cd442_Slc> _13425_s) {
	return static__1a9523611_asSlice(_13425_s.get()._field_Elem);;
}



inline jule::Str static__1a9523b50_mapType(jule::Ptr<_1d05ce9e8_Map> _13927_m) {
	jule::Str _14017_obj = jule::Str("jule::Map<", 10);;
	_14017_obj+=static__1a9525cea_kind(_13927_m.get()._field_Key);
	_14017_obj+=jule::Str(",", 1);
	_14017_obj+=static__1a9525cea_kind(_13927_m.get()._field_Val);
	_14017_obj+=jule::Str(">", 1);
	return _14017_obj;;
}



inline jule::Str static__1a9523de7_traitIdent(jule::Str _14826_ident) {
	jule::Str _14917_obj = jule::Str("jule::Trait<", 12);;
	_14917_obj+=_14826_ident;
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str static__1a952418e_traitDecl(jule::Ptr<_1d04ed4a5_Trait> _15625_t) {
	return static__1a9523de7_traitIdent(static__1a94760e1_traitDecl(_15625_t));;
}



inline jule::Str static__1a9524436_structure(jule::Ptr<_1ea31ed8e_Struct> _16125_s) {
	jule::Str _16217_rep = jule::Str();;
	if ((_16125_s.get()._field_CppLinked && (!(_1a952bce0_hasDirective(_16125_s.get()._field_Directives,jule::Str("typedef", 7)))))) {
		_16217_rep+=jule::Str("struct ", 7);
	};
	_16217_rep+=static__1a9476630_structure(_16125_s);
	return _16217_rep;;
}



inline jule::Str static__1a95246cd_structureIns(jule::Ptr<_1ea320268_StructIns> _17132_s) {
	if (_17132_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _17321_ident = static__1a94768c7_structureIns(_17132_s);;
		if ((_17132_s.get()._field_Generics.len() > 0LL)) {
			_17321_ident+=jule::Str("<", 1);
			{
				auto &expr = _17132_s.get()._field_Generics;
				auto it = expr.begin();
				_iter_begin_1abe2c237:;
				if (it != expr.end()) {
					jule::Ptr<_1d05c2cc7_InsGeneric> _17629_g = *it;
					{
						_17321_ident+=static__1a9525cea_kind(_17629_g.get()._field_Kind);
						_17321_ident+=jule::Str(",", 1);
					}
					_iter_next_1abe2c237:;
					++it;
					goto _iter_begin_1abe2c237;
				}
				_iter_end_1abe2c237:;
			};
			(_17321_ident).mut_slice(0LL,(_17321_ident.len() - 1LL));;
			_17321_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1ea2c0405_Directive> _18317_d = _1a952b95a_findDirective(_17132_s.get()._field_Decl.get()._field_Directives,jule::Str("namespace", 9));;
		if ((_18317_d != nullptr)) {
			(_17321_ident).buffer.insert(0, ((_1a9520223_concatAllParts(_18317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _17321_ident;;
	};
	return static__1a94768c7_structureIns(_17132_s);;
}



inline jule::Str static__1a9524975_array(jule::Ptr<_1d05d05dc_Arr> _19325_a) {
	jule::Str _19417_obj = jule::Str("jule::Array<", 12);;
	_19417_obj+=static__1a9525cea_kind(_19325_a.get()._field_Elem);
	_19417_obj+=jule::Str(",", 1);
	_19417_obj+=_1eaeea272_Itoa(_19325_a.get()._field_N);
	_19417_obj+=jule::Str(">", 1);
	return _19417_obj;;
}



inline jule::Str static__1a9524eb4_paramIns(jule::Ptr<_1eb025962_ParamIns>& _21929_p) {
	jule::Str _22017_obj = jule::Str();;
	if (_21929_p.get()._field_Decl.get()._field_Variadic) {
		_22017_obj+=jule::Str("jule::Slice<", 12);
		_22017_obj+=static__1a9525cea_kind(_21929_p.get()._field_Kind);
		_22017_obj+=jule::Str(">", 1);
	} else {
		_22017_obj+=static__1a9525cea_kind(_21929_p.get()._field_Kind);
	};
	if (_21929_p.get()._field_Decl.get()._field_Reference) {
		_22017_obj+=jule::Str("&", 1);
	};
	return _22017_obj;;
}



inline void static__1a9525514_funcInsResult(jule::Str& _24934_s, jule::Ptr<_1eb026831_FnIns>& _24947_f) {
	if (_1eb0240e2_IsVoid(_24947_f.get()._field_Decl.ptr())) {
		if (_24947_f.get()._field_Decl.get()._field_Exceptional) {
			_24934_s+=jule::Str("jule::VoidExceptional", 21);
		} else {
			_24934_s+=jule::Str("void", 4);
		};
		return;;
	};
	if (_24947_f.get()._field_Decl.get()._field_Exceptional) {
		_24934_s+=jule::Str("jule::Exceptional<", 18);
		static__1a9529ccc_codeMut1(_24934_s,_24947_f.get()._field_Result);
		_24934_s+=jule::Str(">", 1);
		return;;
	};
	static__1a9529ccc_codeMut1(_24934_s,_24947_f.get()._field_Result);
}



inline jule::Str static__1a95257ab_anonFunc(jule::Ptr<_1eb026831_FnIns> _26728_f) {
	jule::Str _26817_decl = jule::Str();;
	static__1a9525514_funcInsResult(_26817_decl,_26728_f);
	_26817_decl+=jule::Str("(", 1);
	if ((_26728_f.get()._field_Params.len() > 0LL)) {
		{
			auto &expr = _26728_f.get()._field_Params;
			auto it = expr.begin();
			_iter_begin_1abb53a30:;
			if (it != expr.end()) {
				jule::Ptr<_1eb025962_ParamIns> _27225_param = *it;
				{
					if (_1eb022970_IsSelf(_27225_param.get()._field_Decl.ptr())) {
						goto _iter_next_1abb53a30;
					};
					_26817_decl+=static__1a9524eb4_paramIns(_27225_param);
					_26817_decl+=jule::Str(",", 1);
				}
				_iter_next_1abb53a30:;
				++it;
				goto _iter_begin_1abb53a30;
			}
			_iter_end_1abb53a30:;
		};
		(_26817_decl).mut_slice(0LL,(_26817_decl.len() - 1LL));;
	} else {
		_26817_decl+=jule::Str("void", 4);
	};
	_26817_decl+=jule::Str(")", 1);
	return _26817_decl;;
}



inline jule::Str static__1a9525a53_func(jule::Ptr<_1eb026831_FnIns> _28824_f) {
	jule::Str _28917_obj = jule::Str("jule::Fn<", 9);;
	_28917_obj+=static__1a95257ab_anonFunc(_28824_f);
	_28917_obj+=jule::Str(">", 1);
	return _28917_obj;;
}



inline jule::Str static__1a9525cea_kind(jule::Ptr<_1d05c4504_TypeKind> _29624_k) {
	{
		
		if (_1d05c51c5_CppLinked(_29624_k.ptr())) {
			_case_begin_1abb565c1:;
			{
				return _29624_k.get()._field_CppIdent;;
			}
		}
		else if ((_1d05c688b_Prim(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56637:;
			{
				return static__1a9522005_prim(_1d05c688b_Prim(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c852a_Tup(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb5669d:;
			{
				return static__1a952229c_tuple(_1d05c852a_Tup(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c6b00_Sptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56714:;
			{
				return static__1a9522a83_sptr(_1d05c6b00_Sptr(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c6d64_Ptr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb5677a:;
			{
				return static__1a9522d2a_ptr(_1d05c6d64_Ptr(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c70c8_Enum(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56802:;
			{
				return static__1a95230c2_enumDecl(_1d05c70c8_Enum(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c733c_TypeEnum(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56879:;
			{
				return static__1a9523369_typeEnumDecl(_1d05c733c_TypeEnum(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c7815_Slc(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56901:;
			{
				return static__1a95238a8_slice(_1d05c7815_Slc(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c82b6_Map(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56978:;
			{
				return static__1a9523b50_mapType(_1d05c82b6_Map(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c8052_Trait(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56a00:;
			{
				return static__1a952418e_traitDecl(_1d05c8052_Trait(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c7cdd_Struct(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56a77:;
			{
				return static__1a95246cd_structureIns(_1d05c7cdd_Struct(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c75a1_Arr(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56aee:;
			{
				return static__1a9524975_array(_1d05c75a1_Arr(_29624_k.ptr()));;
			}
		}
		else if ((_1d05c7a79_Fn(_29624_k.ptr()) != nullptr)) {
			_case_begin_1abb56b76:;
			{
				return static__1a9525a53_func(_1d05c7a79_Fn(_29624_k.ptr()));;
			}
		}
		_match_end_1abb563a1:;
	};
	{
		auto &_match_expr{ _29624_k.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1a9520e27_customType>>()) {
			_case_begin_1abb56c53:;
			{
				return _29624_k.get()._field_Kind.operator jule::Ptr<_1a9520e27_customType>().get()._field_kind;;
			}
		}
		else {
			_case_begin_1abb5cb27:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1abb5cac2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a9521730_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a9528638_ptr(jule::Str& _34524_s, jule::Ptr<_1d05d1049_Ptr> _34536_p) {
	_34524_s+=jule::Str("p", 1);
	static__1a9529a24_codeMut(_34524_s,_34536_p.get()._field_Elem);
}



inline void static__1a95288e1_sptr(jule::Str& _35025_s, jule::Ptr<_1d05cc9d5_Sptr> _35037_p) {
	_35025_s+=jule::Str("x", 1);
	static__1a9529a24_codeMut(_35025_s,_35037_p.get()._field_Elem);
}



inline void static__1a9528b99_mapType(jule::Str& _35528_s, jule::Ptr<_1d05ce9e8_Map> _35540_p) {
	_35528_s+=jule::Str("m", 1);
	static__1a9529a24_codeMut(_35528_s,_35540_p.get()._field_Key);
	static__1a9529a24_codeMut(_35528_s,_35540_p.get()._field_Val);
}



inline void static__1a9528e52_slice(jule::Str& _36126_s, jule::Ptr<_1d05cd442_Slc> _36138_slc) {
	_36126_s+=jule::Str("s", 1);
	static__1a9529a24_codeMut(_36126_s,_36138_slc.get()._field_Elem);
}



inline void static__1a952920a_arr(jule::Str& _36624_s, jule::Ptr<_1d05d05dc_Arr> _36636_arr) {
	_36624_s+=jule::Str("a", 1);
	_36624_s+=_1eaee9eca_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_36636_arr.get()._field_N)),16LL);
	static__1a9529a24_codeMut(_36624_s,_36636_arr.get()._field_Elem);
}



inline void static__1a95294b3_func(jule::Str& _37225_s, jule::Ptr<_1eb026831_FnIns> _37237_f) {
	_37225_s+=jule::Str("f", 1);
	{
		auto &expr = _37237_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1abb63523:;
		if (it != expr.end()) {
			jule::Ptr<_1eb025962_ParamIns> _37421_p = *it;
			{
				if (_37421_p.get()._field_Decl.get()._field_Reference) {
					_37225_s+=jule::Str("r", 1);
				};
				static__1a9529a24_codeMut(_37225_s,_37421_p.get()._field_Kind);
			}
			_iter_next_1abb63523:;
			++it;
			goto _iter_begin_1abb63523;
		}
		_iter_end_1abb63523:;
	};
	if ((_37237_f.get()._field_Result != nullptr)) {
		static__1a9529a24_codeMut(_37225_s,_37237_f.get()._field_Result);
	};
}



inline void static__1a952976b_tup(jule::Str& _38524_s, jule::Ptr<_1d05cdec0_Tuple> _38536_tup) {
	{
		auto &expr = _38536_tup.get()._field_Types;
		auto it = expr.begin();
		_iter_begin_1abb64da4:;
		if (it != expr.end()) {
			jule::Ptr<_1d05c4504_TypeKind> _38621_t = *it;
			{
				_38524_s+=jule::Str("__jule_tuple_", 13);
				static__1a9529a24_codeMut(_38524_s,_38621_t);
			}
			_iter_next_1abb64da4:;
			++it;
			goto _iter_begin_1abb64da4;
		}
		_iter_end_1abb64da4:;
	};
}



inline void static__1a9529a24_codeMut(jule::Str& _39228_s, jule::Ptr<_1d05c4504_TypeKind>& _39241_t) {
	{
		auto &_match_expr{ _39241_t.get()._field_Kind };
		
		if (_match_expr.type_is<jule::Ptr<_1d05d1049_Ptr>>()) {
			_case_begin_1abb65503:;
			{
				static__1a9528638_ptr(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1d05d1049_Ptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05cc9d5_Sptr>>()) {
			_case_begin_1abb65e82:;
			{
				static__1a95288e1_sptr(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1d05cc9d5_Sptr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05ce9e8_Map>>()) {
			_case_begin_1abb65ee8:;
			{
				static__1a9528b99_mapType(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1d05ce9e8_Map>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05cd442_Slc>>()) {
			_case_begin_1abb6605e:;
			{
				static__1a9528e52_slice(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1d05cd442_Slc>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05d05dc_Arr>>()) {
			_case_begin_1abb660c5:;
			{
				static__1a952920a_arr(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1d05d05dc_Arr>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1eb026831_FnIns>>()) {
			_case_begin_1abb666ad:;
			{
				static__1a95294b3_func(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1eb026831_FnIns>());
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05005ea_Enum>>()) {
			_case_begin_1abb66724:;
			{
				jule::Ptr<_1d05005ea_Enum> _40717_te = _39241_t.get()._field_Kind.operator jule::Ptr<_1d05005ea_Enum>();;
				_39228_s+=static__1a9475420_toOut(_40717_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40717_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d0501be5_TypeEnum>>()) {
			_case_begin_1abb6678a:;
			{
				jule::Ptr<_1d0501be5_TypeEnum> _41017_te = _39241_t.get()._field_Kind.operator jule::Ptr<_1d0501be5_TypeEnum>();;
				_39228_s+=static__1a9475420_toOut(_41017_te.get()._field_Ident,static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_41017_te)));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1ea320268_StructIns>>()) {
			_case_begin_1abb66801:;
			{
				jule::Ptr<_1ea320268_StructIns> _41321_si = _39241_t.get()._field_Kind.operator jule::Ptr<_1ea320268_StructIns>();;
				_39228_s+=static__1a94768c7_structureIns(_41321_si);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d04ed4a5_Trait>>()) {
			_case_begin_1abb66867:;
			{
				jule::Ptr<_1d04ed4a5_Trait> _41621_trt = _39241_t.get()._field_Kind.operator jule::Ptr<_1d04ed4a5_Trait>();;
				_39228_s+=static__1a94760e1_traitDecl(_41621_trt);
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05c9251_Prim>>()) {
			_case_begin_1abb668cd:;
			{
				_39228_s+=_39241_t.get()._field_Kind.operator jule::Ptr<_1d05c9251_Prim>().get()._field_Kind;
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1d05cdec0_Tuple>>()) {
			_case_begin_1abb66944:;
			{
				static__1a952976b_tup(_39228_s,_39241_t.get()._field_Kind.operator jule::Ptr<_1d05cdec0_Tuple>());
			}
		}
		else {
			_case_begin_1abb6559c:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:423:13"));;
			}
		}
		_match_end_1abb65e2c:;
	};
}



inline void static__1a9529ccc_codeMut1(jule::Str& _42729_s, jule::Ptr<_1d05c4504_TypeKind>& _42742_t) {
	jule::Ptr<_1d05cdec0_Tuple> _42817_tup = _1d05c852a_Tup(_42742_t.ptr());;
	if ((_42817_tup != nullptr)) {
		static__1a952976b_tup(_42729_s,_42817_tup);
	} else {
		_42729_s+=static__1a9525cea_kind(_42742_t);
	};
}



inline jule::Str static__1a952a074_code(jule::Ptr<_1d05c4504_TypeKind>& _43625_t) {
	jule::Str _43717_s = jule::Str::alloc(0LL, 20LL);;
	static__1a9529a24_codeMut(_43717_s,_43625_t);
	return _43717_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9528160_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abb70bb2_Name(_1abb707e9_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1abb70d05_What(_1abb707e9_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1abb70e48_Reset(_1abb707e9_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1abb7108b_Short(_1abb707e9_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb707e9_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1abb72d3a_Name(_1abb7459a_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1abb74127_What(_1abb7459a_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1abb74886_Reset(_1abb7459a_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1abb749b8_Short(_1abb7459a_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb7459a_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1abb76657_Name(_1abb77db7_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1abb77944_What(_1abb77db7_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1abb781a3_Reset(_1abb77db7_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1abb782d5_Short(_1abb77db7_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb77db7_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1abb79eb8_Name(_1abb7b728_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1abb7b2a5_What(_1abb7b728_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1abb7ba14_Reset(_1abb7b728_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1abb7bb46_Short(_1abb7b728_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb7b728_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1abb7d7d5_Name(_1abb80045_Flag* _self_) {
	return (*_self_)._field_name;;
}



inline jule::Str _1abb7eac2_What(_1abb80045_Flag* _self_) {
	return (*_self_)._field_what;;
}



inline void _1abb80331_Reset(_1abb80045_Flag* _self_) {
	(*((*_self_)._field_data))=(*_self_)._field_default;
}



inline jule::I32 _1abb80463_Short(_1abb80045_Flag* _self_) {
	return (*_self_)._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1abb80045_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a9570ae2_FlagSet> static__1a9570dcd_New(void) {
	return jule::new_ptr<_1a9570ae2_FlagSet>(_1a9570ae2_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a956e173_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a956e173_CommonFlag> _1a9571362_FindFlag(_1a9570ae2_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1abb8a3a2:;
		if (it != expr.end()) {
			jule::Trait<_1a956e173_CommonFlag> _7221_flag = *it;
			{
				if ((_1a956e173_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a953e495_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1abb8a3a2:;
			++it;
			goto _iter_begin_1abb8a3a2;
		}
		_iter_end_1abb8a3a2:;
	};
	return nullptr;;
}



inline jule::Trait<_1a956e173_CommonFlag> _1a9571670_FindFlagShort(_1a9570ae2_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1abb8a9ce:;
		if (it != expr.end()) {
			jule::Trait<_1a956e173_CommonFlag> _8221_flag = *it;
			{
				if ((_1a956e173_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a953e5c7_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1abb8a9ce:;
			++it;
			goto _iter_begin_1abb8a9ce;
		}
		_iter_end_1abb8a9ce:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1a956e173_CommonFlag>> _1a95718d4_Flags(_1a9570ae2_FlagSet* _self_) {
	return (*_self_)._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a9571be2_Parse(_1a9570ae2_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a95732ba_argParser _11617_ap = _1a95732ba_argParser{._field_set=(*_self_), ._field_args=_11524_args, };;
	({
		auto except = _1a95746a6_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(except.error, &__jule_any_type1));
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1a9571dbd_Reset(_1a9570ae2_FlagSet* _self_) {
	{
		auto &expr = (*_self_)._field_flags;
		auto it = expr.begin();
		_iter_begin_1abb8c915:;
		if (it != expr.end()) {
			jule::Trait<_1a956e173_CommonFlag> _12616_f = *it;
			{
				_1a956e173_CommonFlag_mptr_data[(_12616_f).type_offset]._1a953e880_Reset(_12616_f);
			}
			_iter_next_1abb8c915:;
			++it;
			goto _iter_begin_1abb8c915;
		}
		_iter_end_1abb8c915:;
	};
}



inline jule::Ptr<_1abb80045_Flag> _1abc01e96_addFlagCommon(_1a9570ae2_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1abc035e6:;
			{
				goto _match_end_1abc03591;
			}
		}
		_match_end_1abc03591:;
	};
	if ((_1a9571362_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a9571670_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1abb80045_Flag> _14817_flag = jule::new_ptr<_1abb80045_Flag>(_1abb80045_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1a956e173_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1abb7b728_Flag> _1abc0a895_addFlagCommon(_1a9570ae2_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1abc0be90:;
			{
				goto _match_end_1abc0bde6;
			}
		}
		_match_end_1abc0bde6:;
	};
	if ((_1a9571362_FindFlag(&(*_self_), _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a9571670_FindFlagShort(&(*_self_), _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1abb7b728_Flag> _14817_flag = jule::new_ptr<_1abb7b728_Flag>(_1abb7b728_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*_self_)._field_flags = jule::alloc_for_append((*_self_)._field_flags,1);(*_self_)._field_flags.__push(jule::Trait<_1a956e173_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1abbeee1c_AddVar(_1a9570ae2_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1abb80045_Flag> _17617_flag = _1abc01e96_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1abc0884e_AddVar(_1a9570ae2_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1abb7b728_Flag> _17617_flag = _1abc0a895_addFlagCommon(&(*_self_), _17541_name,_17552_short,_17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9570ae2_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ea2e5abd_Str(_1ea320268_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*_self_)._field_Decl.get()._field_Ident;
	if (((*_self_)._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto &expr = (*_self_)._field_Generics;
			auto it = expr.begin();
			_iter_begin_1aa8d0bdc:;
			if (it != expr.end()) {
				jule::Ptr<_1d05c2cc7_InsGeneric> &_25420_g = *it;
				{
					_25017_kind+=_1d05c4900_Str(_25420_g.get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_1aa8d0bdc:;
				++it;
				goto _iter_begin_1aa8d0bdc;
			}
			_iter_end_1aa8d0bdc:;
		};
		(_25017_kind).mut_slice(0LL,(_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1ea2e6c23_Equal(jule::Ptr<_1ea320268_StructIns> _self_, jule::Ptr<_1d05c4504_TypeKind> _26521_other) {
	jule::Ptr<_1ea320268_StructIns> _26613_s = _1d05c7cdd_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1d05c4c0d_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1aa8d433e:;
	}
	_iter_end_1aa8d433e:;;
	return true;;
}



inline jule::Bool _1ea2e9077_Same(_1ea320268_StructIns* _self_, jule::Ptr<_1ea320268_StructIns> _29319_s) {
	if ((((*_self_)._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*_self_)._field_Generics.len()))) {
		return false;;
	};
	{
		auto &expr = (*_self_)._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aa8d6781:;
		if (it != expr.end()) {
			jule::I64 _29713_i = it - expr.begin();
			jule::Ptr<_1d05c2cc7_InsGeneric> &_29716_g = *it;
			{
				if ((!(_1d05c4c0d_Equal(_29716_g.get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1aa8d6781:;
			++it;
			_29713_i++;
			goto _iter_begin_1aa8d6781;
		}
		_iter_end_1aa8d6781:;
	};
	return true;;
}



inline jule::Ptr<_1eb023b80_Fn> _1ea2ea397_FindMethod(_1ea320268_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto &expr = (*_self_)._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aa8d81ab:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1aa8d81ab:;
			++it;
			goto _iter_begin_1aa8d81ab;
		}
		_iter_end_1aa8d81ab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ea32007b_FieldIns> _1ea2cc313_FindField(_1ea320268_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto &expr = (*_self_)._field_Fields;
		auto it = expr.begin();
		_iter_begin_1aa8d93dd:;
		if (it != expr.end()) {
			jule::Ptr<_1ea32007b_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1aa8d93dd:;
			++it;
			goto _iter_begin_1aa8d93dd;
		}
		_iter_end_1aa8d93dd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0550a13_Var> _1ea2d8330_FindStatic(_1ea320268_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto &expr = (*_self_)._field_Statics;
		auto it = expr.begin();
		_iter_begin_1aa8d9aa3:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1aa8d9aa3:;
			++it;
			goto _iter_begin_1aa8d9aa3;
		}
		_iter_end_1aa8d9aa3:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea320268_StructIns _Src) {
	_Stream << _1ea2e5abd_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b7d395bc_ObjectDeadCode> static__1b7d39a1d_new(jule::Ptr<_1b6c04994_IR>& _3424_ir) {
	return jule::new_ptr<_1b7d395bc_ObjectDeadCode>(_1b7d395bc_ObjectDeadCode{._field_ir=_3424_ir});;
}



inline jule::Bool _1ab7c599e_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d04ed4a5_Trait>& _4030_t) {
	jule::Slice<jule::Ptr<_1d04ed4a5_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab7c773c:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1ab7c7451:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ab7c7e24:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1ab7c7e24:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab7c7e24;
		}
		_iter_end_1ab7c7e24:;
	};
	return false;;
}

inline jule::Bool _1ab7ca9d7_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1eb026831_FnIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1eb026831_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab7cca50:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1ab7cc995:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ab7cd1e3:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1ab7cd1e3:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab7cd1e3;
		}
		_iter_end_1ab7cd1e3:;
	};
	return false;;
}

inline jule::Bool _1ab7d3429_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1ea320268_StructIns>& _4030_t) {
	jule::Slice<jule::Ptr<_1ea320268_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab7d6570:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1ab7d62ea:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ab7d73d9:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1ab7d73d9:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab7d73d9;
		}
		_iter_end_1ab7d73d9:;
	};
	return false;;
}

inline jule::Bool _1ab7d9056_isLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d0550a13_Var>& _4030_t) {
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1ab7daad5:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1ab7da9b4:;
	};
	{
		auto &expr = _4117_live;
		auto it = expr.begin();
		_iter_begin_1ab7daa19:;
		if (it != expr.end()) {
			jule::I64 _5213_i = it - expr.begin();
			{
				if ((_4117_live[_5213_i] == _4030_t)) {
					return true;;
				};
			}
			_iter_next_1ab7daa19:;
			++it;
			_5213_i++;
			goto _iter_begin_1ab7daa19;
		}
		_iter_end_1ab7daa19:;
	};
	return false;;
}



inline void _1ab7c5d12_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d04ed4a5_Trait> _6035_t) {
	{
		
{
			_case_begin_1ab7c984e:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1ab7c94ec:;
	};
}

inline void _1ab7cb39a_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1eb026831_FnIns> _6035_t) {
	{
		
{
			_case_begin_1ab7d03d2:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1ab7d015c:;
	};
}

inline void _1ab7d2703_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1ea320268_StructIns> _6035_t) {
	{
		
{
			_case_begin_1ab7d3e0d:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1ab7d3b22:;
	};
}

inline void _1ab7d93b9_pushLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d0550a13_Var> _6035_t) {
	{
		
{
			_case_begin_1ab7dd038:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1ab7dce5b:;
	};
}



inline void _1b7d6bbe8_setReferencesAsLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d04e218b_ReferenceStack>& _7344_rs) {
	if ((_7344_rs == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1d04e27da_Len(_7344_rs.ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1d04e2ae8_At(_7344_rs.ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type12) {
					_case_begin_1ab7c474a:;
					{
						jule::Ptr<_1d04ed4a5_Trait> _8225_t = _7921_ref.cast_ptr<_1d04ed4a5_Trait>(&__jule_any_type12);;
						if (_1ab7c599e_isLive(_self_, _8225_t)) {
							goto _iter_next_1ab7c3abd;
						};
						_1ab7c5d12_pushLive(_self_, _8225_t);
						{
							auto &expr = _8225_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1ab7c57b2:;
							if (it != expr.end()) {
								jule::Ptr<_1eb023b80_Fn> _8729_ins = *it;
								{
									{
										auto &expr = _8729_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1ab7cad4a:;
										if (it != expr.end()) {
											jule::Ptr<_1eb026831_FnIns> _8833_mins = *it;
											{
												if (_1ab7ca9d7_isLive(_self_, _8833_mins)) {
													goto _iter_next_1ab7cad4a;
												};
												_1ab7cb39a_pushLive(_self_, _8833_mins);
												_1b7d6bbe8_setReferencesAsLive(_self_, _8833_mins.get()._field_Refers);
											}
											_iter_next_1ab7cad4a:;
											++it;
											goto _iter_begin_1ab7cad4a;
										}
										_iter_end_1ab7cad4a:;
									};
								}
								_iter_next_1ab7c57b2:;
								++it;
								goto _iter_begin_1ab7c57b2;
							}
							_iter_end_1ab7c57b2:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1ab7c47b1:;
					{
						jule::Ptr<_1eb026831_FnIns> _9725_f = _7921_ref.cast_ptr<_1eb026831_FnIns>(&__jule_any_type9);;
						if (_1ab7ca9d7_isLive(_self_, _9725_f)) {
							goto _match_end_1ab7c45d5;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1ab7d3429_isLive(_self_, _9725_f.get()._field_Owner)))) {
								_1ab7d2703_pushLive(_self_, _9725_f.get()._field_Owner);
								_1b7d6bbe8_setReferencesAsLive(_self_, _9725_f.get()._field_Owner.get()._field_Refers);
							};
						};
						_1ab7cb39a_pushLive(_self_, _9725_f);
						_1b7d6bbe8_setReferencesAsLive(_self_, _9725_f.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1ab7c488d:;
					{
						jule::Ptr<_1d0550a13_Var> _11025_v = _7921_ref.cast_ptr<_1d0550a13_Var>(&__jule_any_type10);;
						if (_1ab7d9056_isLive(_self_, _11025_v)) {
							goto _match_end_1ab7c45d5;
						};
						_1ab7d93b9_pushLive(_self_, _11025_v);
						_1b7d6bbe8_setReferencesAsLive(_self_, _11025_v.get()._field_Refers);
					}
				}
				else if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1ab7c4904:;
					{
						jule::Ptr<_1ea320268_StructIns> _11725_s = _7921_ref.cast_ptr<_1ea320268_StructIns>(&__jule_any_type11);;
						if (_1ab7d3429_isLive(_self_, _11725_s)) {
							goto _match_end_1ab7c45d5;
						};
						_1ab7d2703_pushLive(_self_, _11725_s);
						_1b7d6bbe8_setReferencesAsLive(_self_, _11725_s.get()._field_Refers);
						{
							auto &expr = _11725_s.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1ab7e1228:;
							if (it != expr.end()) {
								jule::Ptr<_1eb023b80_Fn> _12329_ins = *it;
								{
									{
										auto &expr = _12329_ins.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1ab7e1954:;
										if (it != expr.end()) {
											jule::Ptr<_1eb026831_FnIns> _12433_mins = *it;
											{
												if (_1ab7ca9d7_isLive(_self_, _12433_mins)) {
													goto _iter_next_1ab7e1954;
												};
												_1ab7cb39a_pushLive(_self_, _12433_mins);
												_1b7d6bbe8_setReferencesAsLive(_self_, _12433_mins.get()._field_Refers);
											}
											_iter_next_1ab7e1954:;
											++it;
											goto _iter_begin_1ab7e1954;
										}
										_iter_end_1ab7e1954:;
									};
								}
								_iter_next_1ab7e1228:;
								++it;
								goto _iter_begin_1ab7e1228;
							}
							_iter_end_1ab7e1228:;
						};
					}
				}
				_match_end_1ab7c45d5:;
			};
		}
	_iter_next_1ab7c3abd:;
	}
	_iter_end_1ab7c3abd:;;
}



inline void _1b7d6be6d_inits(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d052c825_Package>& _13630_pkg) {
	{
		auto &expr = _13630_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab7c97c7:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _13721_file = *it;
			{
				{
					auto &expr = _13721_file.get()._field_Funcs;
					auto it = expr.begin();
					_iter_begin_1ab7e212a:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1eb026831_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1b7d6bbe8_setReferencesAsLive(_self_, _14029_ins.get()._field_Refers);
							};
						}
						_iter_next_1ab7e212a:;
						++it;
						goto _iter_begin_1ab7e212a;
					}
					_iter_end_1ab7e212a:;
				};
			}
			_iter_next_1ab7c97c7:;
			++it;
			goto _iter_begin_1ab7c97c7;
		}
		_iter_end_1ab7c97c7:;
	};
}



inline void _1b7d6c1e3_collectLivePackage(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d052c825_Package>& _14843_pkg) {
	_1b7d6be6d_inits(_self_, _14843_pkg);
	if (_22b12824e_Test) {
		{
			auto &expr = _14843_pkg.get()._field_Files;
			auto it = expr.begin();
			_iter_begin_1ab7e64c5:;
			if (it != expr.end()) {
				jule::Ptr<_1d0593748_SymbolTable> _15425_file = *it;
				{
					{
						auto &expr = _15425_file.get()._field_Funcs;
						auto it = expr.begin();
						_iter_begin_1ab7e6cde:;
						if (it != expr.end()) {
							jule::Ptr<_1eb023b80_Fn> _15529_f = *it;
							{
								if (_1b7d6e206_hasDirective(_15529_f.get()._field_Directives,jule::Str("test", 4))) {
									jule::Ptr<_1eb026831_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1b7d6bbe8_setReferencesAsLive(_self_, _15733_ins.get()._field_Refers);
								};
							}
							_iter_next_1ab7e6cde:;
							++it;
							goto _iter_begin_1ab7e6cde;
						}
						_iter_end_1ab7e6cde:;
					};
				}
				_iter_next_1ab7e64c5:;
				++it;
				goto _iter_begin_1ab7e64c5;
			}
			_iter_end_1ab7e64c5:;
		};
	};
}



inline void _1b7d6c3be_collectLive(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1ab7e4616:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1b7d6c1e3_collectLivePackage(_self_, _16721_used.get()._field_Package);
				};
			}
			_iter_next_1ab7e4616:;
			++it;
			goto _iter_begin_1ab7e4616;
		}
		_iter_end_1ab7e4616:;
	};
	_1b7d6c1e3_collectLivePackage(_self_, _self_.get()._field_ir.get()._field_Main);
	jule::Ptr<_1eb023b80_Fn> _17517_main = _1d052e0c9_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
	jule::Ptr<_1eb026831_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1b7d6bbe8_setReferencesAsLive(_self_, _17617_ins.get()._field_Refers);
}



inline void _1b7d6c644_removeDeadGlobals(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d0550a13_Var>>& _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < _18142_vars.len())) {
		{
			jule::Ptr<_1d0550a13_Var> _18417_v = _18142_vars[_18217_i];;
			if (_1ab7d9056_isLive(_self_, _18417_v)) {
				(_18217_i)++;
				goto _iter_next_1ab7eba3b;
			};
			_18142_vars=jule::append(_18142_vars.slice(0LL,_18217_i),_18142_vars.slice((_18217_i + 1LL)));
		}
	_iter_next_1ab7eba3b:;
	}
	_iter_end_1ab7eba3b:;;
}



inline void _1b7d6c8b9_removeDeadFns(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1eb023b80_Fn>>& _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < _19338_funcs.len())) {
		{
			jule::Ptr<_1eb023b80_Fn> _19621_f = _19338_funcs[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1eb026831_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1ab7ca9d7_isLive(_self_, _19921_ins)) {
						(_19721_j)++;
						goto _iter_next_1ab7eee6d;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL,_19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1ab7eee6d:;
			}
			_iter_end_1ab7eee6d:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				_19338_funcs=jule::append(_19338_funcs.slice(0LL,_19417_i),_19338_funcs.slice((_19417_i + 1LL)));
				goto _iter_next_1ab7ebed1;
			};
			(_19417_i)++;
		}
	_iter_next_1ab7ebed1:;
	}
	_iter_end_1ab7ebed1:;;
}



inline void _1b7d6cb3e_removeDeadStructs(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>& _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < _21442_structs.len())) {
		{
			jule::Ptr<_1ea31ed8e_Struct> _21721_s = _21442_structs[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1ea320268_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1b7d6c8b9_removeDeadFns(_self_, _22025_ins.get()._field_Methods);
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1ab7d3429_isLive(_self_, _22025_ins))) {
						(_21821_j)++;
						goto _iter_next_1ab803ee9;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL,_21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1ab803ee9:;
			}
			_iter_end_1ab803ee9:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				_21442_structs=jule::append(_21442_structs.slice(0LL,_21517_i),_21442_structs.slice((_21517_i + 1LL)));
				goto _iter_next_1ab801c61;
			};
			(_21517_i)++;
		}
	_iter_next_1ab801c61:;
	}
	_iter_end_1ab801c61:;;
}



inline void _1b7d6cdb4_removeDeadTraits(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d04ed4a5_Trait>>& _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < _23641_traits.len())) {
		{
			jule::Ptr<_1d04ed4a5_Trait> _23921_t = _23641_traits[_23717_i];;
			if ((!(_1ab7c599e_isLive(_self_, _23921_t)))) {
				_23641_traits=jule::append(_23641_traits.slice(0LL,_23717_i),_23641_traits.slice((_23717_i + 1LL)));
				goto _iter_next_1ab80678d;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1ea31ed8e_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1ab8084d7;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL,_24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1ab8084d7:;
			}
			_iter_end_1ab8084d7:;;
			(_23717_i)++;
		}
	_iter_next_1ab80678d:;
	}
	_iter_end_1ab80678d:;;
}



inline void _1b7d6d139_removeDeadsFile(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d0593748_SymbolTable>& _25740_file) {
	_1b7d6c8b9_removeDeadFns(_self_, _25740_file.get()._field_Funcs);
	_1b7d6cb3e_removeDeadStructs(_self_, _25740_file.get()._field_Structs);
	_1b7d6cdb4_removeDeadTraits(_self_, _25740_file.get()._field_Traits);
	_1b7d6c644_removeDeadGlobals(_self_, _25740_file.get()._field_Vars);
}



inline void _1b7d6d3ae_removeDeadsPackage(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_, jule::Ptr<_1d052c825_Package>& _26443_pkg) {
	{
		auto &expr = _26443_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab80ce48:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _26521_file = *it;
			{
				_1b7d6d139_removeDeadsFile(_self_, _26521_file);
			}
			_iter_next_1ab80ce48:;
			++it;
			goto _iter_begin_1ab80ce48;
		}
		_iter_end_1ab80ce48:;
	};
}



inline void _1b7d6d58a_removeDeads(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1ab80d6b8:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1b7d6d3ae_removeDeadsPackage(_self_, _27121_used.get()._field_Package);
				};
			}
			_iter_next_1ab80d6b8:;
			++it;
			goto _iter_begin_1ab80d6b8;
		}
		_iter_end_1ab80d6b8:;
	};
	_1b7d6d3ae_removeDeadsPackage(_self_, _self_.get()._field_ir.get()._field_Main);
}



inline void _1b7d6d766_elimanate(jule::Ptr<_1b7d395bc_ObjectDeadCode> _self_) {
	_1b7d6c3be_collectLive(_self_);
	_1b7d6d58a_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b7d395bc_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a951a99e_ObjectCoder> static__1a94de214_New(jule::Ptr<_1b6c04994_IR>& _8224_ir, _1a94a76e9_SerializationInfo _8233_info) {
	jule::Ptr<_1a951a99e_ObjectCoder> _8317_oc = jule::new_ptr<_1a951a99e_ObjectCoder>(_1a951a99e_ObjectCoder{._field_ir=_8224_ir, ._field_info=_8233_info, });;
	_8317_oc.get()._field_ec=static__1a946261b_new(_8317_oc);
	_8317_oc.get()._field_sc=static__1a9459b96_new(_8317_oc);
	return _8317_oc;;
}



inline void _1a947c1e6_write(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Str _9225_s) {
	_self_.get()._field_Obj+=_9225_s;
}



inline void _1a949c5ce_addIndent(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1a94db7a5_doneIndent(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL,(_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1a94dbcc2_indent(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1a94e0325_findAnyType(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1d05c4504_TypeKind>& _11136_t) {
	{
		auto &expr = _self_.get()._field_anyTypeMap;
		auto it = expr.begin();
		_iter_begin_1abd3512e:;
		if (it != expr.end()) {
			jule::I64 _11214_i = it - expr.begin();
			jule::Ptr<_1d05c4504_TypeKind> _11221_at = *it;
			{
				if (_1d05c4c0d_Equal(_11221_at, _11136_t)) {
					return _11214_i;;
				};
			}
			_iter_next_1abd3512e:;
			++it;
			_11214_i++;
			goto _iter_begin_1abd3512e;
		}
		_iter_end_1abd3512e:;
	};
	return -1LL;;
}



inline jule::I64 _1a94e6309_pushAnyType(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1d05c4504_TypeKind>& _12036_t) {
	jule::I64 _12117_i = _1a94e0325_findAnyType(_self_, _12036_t);;
	if ((_12117_i != -1LL)) {
		return _12117_i;;
	};
	_12117_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_12036_t);;
	jule::Str _12713_si = _1eaeea272_Itoa(_12117_i);;
	if ((_1d05c6b00_Sptr(_12036_t.ptr()) != nullptr)) {
		jule::Str _12917_elem_kind = static__1a9525cea_kind(_1d05c6b00_Sptr(_12036_t.ptr()).get()._field_Elem);;
		jule::Str _13017_kind = static__1a9522544_asSptr(_12917_elem_kind);;
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_12917_elem_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13017_kind;
		_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _15617_comparable = _1d05c5912_Comparable(_12036_t.ptr());;
		jule::Str _15717_kind = static__1a9525cea_kind(_12036_t);;
		if ((_15717_kind == jule::Str("[<unimplemented_type_kind>]", 27))) {
			jule::outln(_1d05c4900_Str(_12036_t.ptr()));
		};
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_15717_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		if (_15617_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_12713_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(void *alloc, void *other) noexcept { return *static_cast<", 61);
			_self_.get()._field_anyObj+=_15717_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(alloc) == *static_cast<", 26);
			_self_.get()._field_anyObj+=_15717_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(other); }\n", 13);
		};
		_self_.get()._field_anyObj+=jule::Str("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const ", 77);
		_self_.get()._field_anyObj+=_15717_kind;
		_self_.get()._field_anyObj+=jule::Str("*>(alloc)); }\n", 14);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, ", 10);
		if (_15617_comparable) {
			_self_.get()._field_anyObj+=jule::Str(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_12713_si;
			_self_.get()._field_anyObj+=jule::Str("_eq, ", 5);
		};
		_self_.get()._field_anyObj+=jule::Str(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_12713_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str};\n", 10);
		if (_15617_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_12713_si;
			_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_15717_kind;
			_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_12713_si;
			_self_.get()._field_anyObj+=jule::Str(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_12713_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12117_i;;
}



inline void _1a94a1bcc_pushResult(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1eb023b80_Fn>& _21935_f) {
	if ((_1eb0240e2_IsVoid(_21935_f.ptr()) || (_21935_f.get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _22417_n = _21935_f.get()._field_Instances.len();;
	if ((_21935_f.get()._field_Generics.len() == 0LL)) {
		_22417_n=1LL;
	};
	{
		auto expr = _21935_f.get()._field_Instances.slice(0LL,_22417_n);
		auto it = expr.begin();
		_iter_begin_1abd47581:;
		if (it != expr.end()) {
			jule::Ptr<_1eb026831_FnIns> _22821_ins = *it;
			{
				jule::Str _22917_s = static__1a952a074_code(_22821_ins.get()._field_Result);;
				jule::Bool _23021_ok = false;;
				_self_.get()._field_resultMap.lookup(_22917_s, nullptr, &(_23021_ok));
				if (_23021_ok) {
					goto _iter_next_1abd47581;
				};
				_self_.get()._field_resultMap[_22917_s]=false;
				_1a947c1e6_write(_self_, jule::Str("struct ", 7));
				_1a947c1e6_write(_self_, _22917_s);
				_1a947c1e6_write(_self_, jule::Str(" {\n", 3));
				_1a949c5ce_addIndent(_self_);
				{
					auto &expr = _1d05c852a_Tup(_22821_ins.get()._field_Result.ptr()).get()._field_Types;
					auto it = expr.begin();
					_iter_begin_1abd4a265:;
					if (it != expr.end()) {
						jule::I64 _23918_i = it - expr.begin();
						jule::Ptr<_1d05c4504_TypeKind> _23925_t = *it;
						{
							_1a94dbcc2_indent(_self_);
							_1a947c1e6_write(_self_, static__1a9525cea_kind(_23925_t));
							_1a947c1e6_write(_self_, jule::Str(" ", 1));
							_1a947c1e6_write(_self_, jule::Str("__jule_result_arg", 17));
							_1a947c1e6_write(_self_, _1eaeea272_Itoa(_23918_i));
							_1a947c1e6_write(_self_, jule::Str(";\n", 2));
						}
						_iter_next_1abd4a265:;
						++it;
						_23918_i++;
						goto _iter_begin_1abd4a265;
					}
					_iter_end_1abd4a265:;
				};
				_1a94db7a5_doneIndent(_self_);
				_1a94dbcc2_indent(_self_);
				_1a947c1e6_write(_self_, jule::Str("};\n", 3));
				_1a94dbcc2_indent(_self_);
			}
			_iter_next_1abd47581:;
			++it;
			goto _iter_begin_1abd47581;
		}
		_iter_end_1abd47581:;
	};
}



inline jule::I64 _1a94a0e0c_findTypeOffset(_1a951a99e_ObjectCoder* _self_, jule::Ptr<_1d04ed4a5_Trait> _25429_t, jule::Ptr<_1d05c4504_TypeKind> _25444_k) {
	if ((_25429_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ea320268_StructIns> _25817_s = nullptr;;
	if ((_1d05c6b00_Sptr(_25444_k.ptr()) != nullptr)) {
		_25444_k=_1d05c6b00_Sptr(_25444_k.ptr()).get()._field_Elem;
	};
	if ((_1d05c7cdd_Struct(_25444_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_25817_s=_1d05c7cdd_Struct(_25444_k.ptr());
	{
		auto &expr = (*_self_)._field_tmap;
		auto it = expr.begin();
		_iter_begin_1abd50204:;
		if (it != expr.end()) {
			jule::Ptr<_1a947cc0d_traitHash> &_26616_hash = *it;
			{
				if (((_26616_hash.get()._field_t == _25429_t) && (_26616_hash.get()._field_s == _25817_s))) {
					return _26616_hash.get()._field_i;;
				};
			}
			_iter_next_1abd50204:;
			++it;
			goto _iter_begin_1abd50204;
		}
		_iter_end_1abd50204:;
	};
	return -1LL;;
}



inline void _1a94ddc6e_locInfo(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_212a0c2ab_Token>& _27528_t) {
	jule::Str &_27614_loc = _27528_t.get()._field_File.get()._field_Path;;
	if (_22b128bab_Production) {
		{
			
			if (_22dc943e5_HasPrefix(_27614_loc,_21271b5e7_PathStdlib)) {
				_case_begin_1abd5257a:;
				{
					_1a947c1e6_write(_self_, _1a946e4b3_cstrBytes(static_cast<jule::Slice<jule::U8>>(_27614_loc.slice((_22dcc7b87_Dir(_21271b5e7_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_22dc943e5_HasPrefix(_27614_loc,_self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1abd52c51:;
				{
					_1a947c1e6_write(_self_, _1a946e4b3_cstrBytes(static_cast<jule::Slice<jule::U8>>(_27614_loc.slice((_22dcc7b87_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1abd521d4:;
				{
					_1a947c1e6_write(_self_, _1a946e4b3_cstrBytes(static_cast<jule::Slice<jule::U8>>(_27614_loc)));
				}
			}
			_match_end_1abd52118:;
		};
	} else {
		_1a947c1e6_write(_self_, _1a946e4b3_cstrBytes(static_cast<jule::Slice<jule::U8>>(_27614_loc)));
	};
	_1a947c1e6_write(_self_, jule::Str(":", 1));
	_1a947c1e6_write(_self_, _1eaeea272_Itoa(_27528_t.get()._field_Row));
	_1a947c1e6_write(_self_, jule::Str(":", 1));
	_1a947c1e6_write(_self_, _1eaeea272_Itoa(_27528_t.get()._field_Column));
}



inline void _1a947c966_head(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a9513b84_Time _30213_time = static__1a9514228_Now();;
	_1a95134e1_AbsTime _30313_abs = _1a9515867_Abs(&_30213_time);;
	_1a947c1e6_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a947c1e6_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a947c1e6_write(_self_, jule::Str("jule0.0.12 @master", 18));
	_1a947c1e6_write(_self_, jule::Str("\n", 1));
	_1a947c1e6_write(_self_, jule::Str("// Date: ", 9));
	_1a947c1e6_write(_self_, _1eaee9b45_FmtUint(_30313_abs._field_Day,10LL));
	_1a947c1e6_write(_self_, jule::Str("/", 1));
	_1a947c1e6_write(_self_, _1eaee9b45_FmtUint(_30313_abs._field_Month,10LL));
	_1a947c1e6_write(_self_, jule::Str("/", 1));
	_1a947c1e6_write(_self_, _1eaee9b45_FmtUint(_30313_abs._field_Year,10LL));
	_1a947c1e6_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a947c1e6_write(_self_, _self_.get()._field_info._field_Compiler);
	_1a947c1e6_write(_self_, jule::Str(" ", 1));
	_1a947c1e6_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	if (_22b128bab_Production) {
		_1a947c1e6_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22b128518_RC))) {
		_1a947c1e6_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22b1288e2_Safety))) {
		_1a947c1e6_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a951b076_links(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a947c1e6_write(_self_, _21272ba14_PathApi);
	_1a947c1e6_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a951b076_links(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1abd5d3dd:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _34016_used = *it;
			{
				{
					
					if ((!(_34016_used.get()._field_CppLinked))) {
						_case_begin_1abd5de49:;
						{
							goto _iter_next_1abd5d3dd;
						}
					}
					else if (_22ca24d58_IsStdHeaderPath(_34016_used.get()._field_Path)) {
						_case_begin_1abd5dec1:;
						{
							_1a947c1e6_write(_self_, jule::Str("#include ", 9));
							_1a947c1e6_write(_self_, _34016_used.get()._field_Path);
							_1a947c1e6_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_22ca25111_IsValidHeaderExt(_22dcc72c4_Ext(_34016_used.get()._field_Path))) {
						_case_begin_1abd5e048:;
						{
							_1a947c1e6_write(_self_, jule::Str("#include \"", 10));
							_1a947c1e6_write(_self_, _34016_used.get()._field_Path);
							_1a947c1e6_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1abd5dd28:;
				};
			}
			_iter_next_1abd5d3dd:;
			++it;
			goto _iter_begin_1abd5d3dd;
		}
		_iter_end_1abd5d3dd:;
	};
}



inline void _1a951b1a8_prepareStructures(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1abd608eb:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _35721_s = *it;
			{
				if ((_35721_s.get()._field_Token != nullptr)) {
					_1a951ee7b_prepareStructure(_35721_s);
				};
			}
			_iter_next_1abd608eb:;
			++it;
			goto _iter_begin_1abd608eb;
		}
		_iter_end_1abd608eb:;
	};
}



inline void _1a951b2da_iterPackages(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)> _36432_f) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1abd628ba:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _36521_used = *it;
			{
				if ((!(_36521_used.get()._field_CppLinked))) {
					_36432_f(_36521_used.get()._field_Package);
				};
			}
			_iter_next_1abd628ba:;
			++it;
			goto _iter_begin_1abd628ba;
		}
		_iter_end_1abd628ba:;
	};
	_36432_f(_self_.get()._field_ir.get()._field_Main);
}



inline void _1a951b41c_buildTraitMap(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b2da_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>([=](jule::Ptr<_1d052c825_Package>& _37435_pkg) mutable -> void {
		_1a951ec28_iterFiles(_37435_pkg,jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>([=](jule::Ptr<_1d0593748_SymbolTable>& _37536_file) mutable -> void {
			{
				auto &expr = _37536_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1abd65b76:;
				if (it != expr.end()) {
					jule::Ptr<_1d04ed4a5_Trait> _37629_t = *it;
					{
						if ((_37629_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_37629_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a947cc0d_traitHash>(_1a947cc0d_traitHash{._field_t=_37629_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1abd65b76;
						};
						jule::I64 _38829_i = 0LL;;
						{
							auto &expr = _37629_t.get()._field_Implemented;
							auto it = expr.begin();
							_iter_begin_1abd66418:;
							if (it != expr.end()) {
								jule::Ptr<_1ea31ed8e_Struct> _38933_s = *it;
								{
									{
										auto &expr = _38933_s.get()._field_Instances;
										auto it = expr.begin();
										_iter_begin_1abd67b01:;
										if (it != expr.end()) {
											jule::Ptr<_1ea320268_StructIns> _39037_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a947cc0d_traitHash>(_1a947cc0d_traitHash{._field_t=_37629_t, ._field_s=_39037_ins, ._field_i=_38829_i}));;
												(_38829_i)++;
											}
											_iter_next_1abd67b01:;
											++it;
											goto _iter_begin_1abd67b01;
										}
										_iter_end_1abd67b01:;
									};
								}
								_iter_next_1abd66418:;
								++it;
								goto _iter_begin_1abd66418;
							}
							_iter_end_1abd66418:;
						};
					}
					_iter_next_1abd65b76:;
					++it;
					goto _iter_begin_1abd65b76;
				}
				_iter_end_1abd65b76:;
			};
		}));
	}));
}



inline void _1a951b54e_traitDecls(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b2da_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>([=](jule::Ptr<_1d052c825_Package>& _40535_pkg) mutable -> void {
		_1a951ec28_iterFiles(_40535_pkg,jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>([=](jule::Ptr<_1d0593748_SymbolTable>& _40636_file) mutable -> void {
			{
				auto &expr = _40636_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1abd6a54e:;
				if (it != expr.end()) {
					jule::Ptr<_1d04ed4a5_Trait> _40729_t = *it;
					{
						if ((_40729_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a94dbcc2_indent(_self_);
						_1a947c1e6_write(_self_, jule::Str("struct ", 7));
						_1a947c1e6_write(_self_, static__1a94760e1_traitDecl(_40729_t));
						_1a947c1e6_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1abd6a54e:;
					++it;
					goto _iter_begin_1abd6a54e;
				}
				_iter_end_1abd6a54e:;
			};
		}));
	}));
}



inline void _1a951b681_structurePlainDecl(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea31ed8e_Struct>& _42043_s) {
	{
		auto &expr = _42043_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1abd6a0dc:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _42121_ins = *it;
			{
				_1a947c1e6_write(_self_, jule::Str("struct ", 7));
				_1a947c1e6_write(_self_, static__1a94768c7_structureIns(_42121_ins));
				_1a947c1e6_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1abd6a0dc:;
			++it;
			goto _iter_begin_1abd6a0dc;
		}
		_iter_end_1abd6a0dc:;
	};
}



inline void _1a951b7b3_structurePlainDecls(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1abd6d4ec:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _42921_s = *it;
			{
				if ((_42921_s.get()._field_Token != nullptr)) {
					_1a951b681_structurePlainDecl(_self_, _42921_s);
				};
			}
			_iter_next_1abd6d4ec:;
			++it;
			goto _iter_begin_1abd6d4ec;
		}
		_iter_end_1abd6d4ec:;
	};
}



inline void _1a951b8e5_fieldDecl(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea32007b_FieldIns>& _43634_f) {
	_1a947c1e6_write(_self_, static__1a9525cea_kind(_43634_f.get()._field_Kind));
	_1a947c1e6_write(_self_, jule::Str(" ", 1));
	_1a947c1e6_write(_self_, static__1a9476b6e_field(_43634_f.get()._field_Decl));
	if ((_43634_f.get()._field_Default == nullptr)) {
		if (_1a952c087_shouldInitialized(_43634_f.get()._field_Kind)) {
			_1a947c1e6_write(_self_, jule::Str(" = ", 3));
			_1a946dacd_initExpr(_self_.get()._field_ec, _43634_f.get()._field_Kind);
		};
	} else {
		_1a947c1e6_write(_self_, jule::Str(" = ", 3));
		_1a946d5d3_expr(_self_.get()._field_ec, _43634_f.get()._field_Default.get()._field_Model);
	};
	_1a947c1e6_write(_self_, jule::Str(";", 1));
}



inline void _1a951ba27_structureDestructor(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _45444_s) {
	;
	jule::Ptr<_1eb023b80_Fn> _45713_disposeMethod = _1ea2ea397_FindMethod(_45444_s.ptr(), jule::Str("Dispose", 7),false);;
	jule::Bool _45817_disposed = static__1d0551e32_Dispose(_45713_disposeMethod);;
	if ((!(_45817_disposed))) {
		return;;
	};
	_1a947c1e6_write(_self_, jule::Str("~", 1));
	_1a947c1e6_write(_self_, static__1a94768c7_structureIns(_45444_s));
	_1a947c1e6_write(_self_, jule::Str("(void) { ", 9));
	_1a947c1e6_write(_self_, static__1a9475aa2_func(_45713_disposeMethod));
	_1a947c1e6_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a951bb59_structureDeriveDefsDecls(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _47045_s) {
	if (_1ea2d8dbe_IsDerives(_47045_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, static__1a9471680_cloneFuncDecl(_47045_s.get()._field_Decl));
		_1a947c1e6_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a951bc8b_structureOperatorEq(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Str& _47840_ident, jule::Ptr<_1ea320268_StructIns>& _47857_s) {
	if ((!(_47857_s.get()._field_Comparable))) {
		return;;
	};
	if ((_47857_s.get()._field_Operators._field_Eq != nullptr)) {
		_1a951c000_structureOperator(_self_, _47840_ident,_47857_s.get()._field_Operators._field_Eq,jule::Str("==", 2));
		return;;
	};
	_1a94dbcc2_indent(_self_);
	if (_1d069e4be_Inline) {
		_1a947c1e6_write(_self_, jule::Str("inline ", 7));
	};
	_1a947c1e6_write(_self_, jule::Str("bool operator==(", 16));
	_1a947c1e6_write(_self_, _47840_ident);
	_1a947c1e6_write(_self_, jule::Str(" _other) {", 10));
	if ((_47857_s.get()._field_Fields.len() > 0LL)) {
		_1a949c5ce_addIndent(_self_);
		_1a947c1e6_write(_self_, jule::Str("\n", 1));
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, jule::Str("return ", 7));
		_1a949c5ce_addIndent(_self_);
		jule::Bool _50121_writed = false;;
		{
			auto &expr = _47857_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1abd7b2a7:;
			if (it != expr.end()) {
				jule::Ptr<_1ea32007b_FieldIns> _50225_f = *it;
				{
					jule::Ptr<_1ea320268_StructIns> _50421_strct = _1d05c7cdd_Struct(_50225_f.get()._field_Kind.ptr());;
					if ((((_50421_strct != nullptr) && (_50421_strct.get()._field_Decl != nullptr)) && _50421_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1abd7b2a7;
					};
					if (_50121_writed) {
						_1a947c1e6_write(_self_, jule::Str(" &&", 3));
					};
					_50121_writed=true;
					_1a947c1e6_write(_self_, jule::Str("\n", 1));
					_1a94dbcc2_indent(_self_);
					_1a947c1e6_write(_self_, jule::Str("this->", 6));
					jule::Str _51521_fIdent = static__1a9476b6e_field(_50225_f.get()._field_Decl);;
					_1a947c1e6_write(_self_, _51521_fIdent);
					_1a947c1e6_write(_self_, jule::Str(" == _other.", 11));
					_1a947c1e6_write(_self_, _51521_fIdent);
				}
				_iter_next_1abd7b2a7:;
				++it;
				goto _iter_begin_1abd7b2a7;
			}
			_iter_end_1abd7b2a7:;
		};
		_1a94db7a5_doneIndent(_self_);
		if ((!(_50121_writed))) {
			_1a947c1e6_write(_self_, jule::Str("true", 4));
		};
		_1a947c1e6_write(_self_, jule::Str(";\n", 2));
		_1a94db7a5_doneIndent(_self_);
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, jule::Str("}", 1));
	} else {
		_1a947c1e6_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a951bdbd_structureOperatorNotEq(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Str& _53443_ident, jule::Ptr<_1ea320268_StructIns>& _53460_s) {
	if ((!(_53460_s.get()._field_Comparable))) {
		return;;
	};
	_1a94dbcc2_indent(_self_);
	if (_1d069e4be_Inline) {
		_1a947c1e6_write(_self_, jule::Str("inline ", 7));
	};
	_1a947c1e6_write(_self_, jule::Str("bool operator!=(", 16));
	_1a947c1e6_write(_self_, _53443_ident);
	_1a947c1e6_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a951c000_structureOperator(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Str& _54838_ident, jule::Ptr<_1eb026831_FnIns>& _54855_f, jule::Str _54866_op) {
	if ((_54855_f == nullptr)) {
		return;;
	};
	jule::Bool _55313_unary = (_54855_f.get()._field_Params.len() == 1LL);;
	jule::Bool _55413_assignment = _1eb0240e2_IsVoid(_54855_f.get()._field_Decl.ptr());;
	_1a94dbcc2_indent(_self_);
	if (_1d069e4be_Inline) {
		_1a947c1e6_write(_self_, jule::Str("inline ", 7));
	};
	if (_55413_assignment) {
		_1a947c1e6_write(_self_, _54838_ident);
		_1a947c1e6_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1d05c688b_Prim(_54855_f.get()._field_Result.ptr()) == nullptr)) {
			_1a947c1e6_write(_self_, _54838_ident);
		} else {
			_1a947c1e6_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a947c1e6_write(_self_, jule::Str(" operator", 9));
	_1a947c1e6_write(_self_, _54866_op);
	_1a947c1e6_write(_self_, jule::Str("(", 1));
	if ((!(_55313_unary))) {
		jule::Ptr<_1eb025962_ParamIns> _57621_p = _54855_f.get()._field_Params[1LL];;
		_1a947c1e6_write(_self_, static__1a9524eb4_paramIns(_57621_p));
		_1a947c1e6_write(_self_, jule::Str(" _other", 7));
	};
	_1a947c1e6_write(_self_, jule::Str(") { ", 4));
	if ((!(_55413_assignment))) {
		_1a947c1e6_write(_self_, jule::Str("return ", 7));
	};
	_1a947c1e6_write(_self_, static__1a9475d49_funcIns(_54855_f));
	if ((!(_55313_unary))) {
		_1a947c1e6_write(_self_, jule::Str("(this, _other); ", 16));
		if (_55413_assignment) {
			_1a947c1e6_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a947c1e6_write(_self_, jule::Str("}", 1));
	} else {
		_1a947c1e6_write(_self_, jule::Str("(this); }", 9));
	};
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a951c132_structureOperators(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _59743_s) {
	jule::Str _59813_ident = static__1a94768c7_structureIns(_59743_s);;
	_1a951bc8b_structureOperatorEq(_self_, _59813_ident,_59743_s);
	_1a951bdbd_structureOperatorNotEq(_self_, _59813_ident,_59743_s);
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Gt,jule::Str(">", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_GtEq,jule::Str(">=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Lt,jule::Str("<", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_LtEq,jule::Str("<=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Shl,jule::Str("<<", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Shr,jule::Str(">>", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Add,jule::Str("+", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Sub,jule::Str("-", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Div,jule::Str("/", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Mul,jule::Str("*", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Mod,jule::Str("%", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitAnd,jule::Str("&", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitOr,jule::Str("|", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitXor,jule::Str("^", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Neg,jule::Str("-", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_Pos,jule::Str("+", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitNot,jule::Str("~", 1));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_AddAssign,jule::Str("+=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_SubAssign,jule::Str("-=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_DivAssign,jule::Str("/=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_MulAssign,jule::Str("*=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_ModAssign,jule::Str("%=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_ShlAssign,jule::Str("<<=", 3));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_ShrAssign,jule::Str(">>=", 3));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitOrAssign,jule::Str("|=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitAndAssign,jule::Str("&=", 2));
	_1a951c000_structureOperator(_self_, _59813_ident,_59743_s.get()._field_Operators._field_BitXorAssign,jule::Str("^=", 2));
}



inline void _1a951c264_structureInsDecl(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _63641_s) {
	if ((_63641_s.get()._field_Methods.len() > 0LL)) {
		{
			auto &expr = _63641_s.get()._field_Methods;
			auto it = expr.begin();
			_iter_begin_1abd9910a:;
			if (it != expr.end()) {
				jule::Ptr<_1eb023b80_Fn> _63825_m = *it;
				{
					_1a94a1bcc_pushResult(_self_, _63825_m);
					_1a951c86e_funcDecl(_self_, _63825_m,false);
				}
				_iter_next_1abd9910a:;
				++it;
				goto _iter_begin_1abd9910a;
			}
			_iter_end_1abd9910a:;
		};
	};
	_1a947c1e6_write(_self_, jule::Str("struct ", 7));
	jule::Str _64513_outIdent = static__1a94768c7_structureIns(_63641_s);;
	_1a947c1e6_write(_self_, _64513_outIdent);
	_1a947c1e6_write(_self_, jule::Str(" {\n", 3));
	_1a949c5ce_addIndent(_self_);
	{
		auto &expr = _63641_s.get()._field_Fields;
		auto it = expr.begin();
		_iter_begin_1abd9b0c9:;
		if (it != expr.end()) {
			jule::Ptr<_1ea32007b_FieldIns> _65121_f = *it;
			{
				_1a94dbcc2_indent(_self_);
				_1a951b8e5_fieldDecl(_self_, _65121_f);
				_1a947c1e6_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1abd9b0c9:;
			++it;
			goto _iter_begin_1abd9b0c9;
		}
		_iter_end_1abd9b0c9:;
	};
	_1a94dbcc2_indent(_self_);
	_1a951ba27_structureDestructor(_self_, _63641_s);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_1a94dbcc2_indent(_self_);
	_1a947c1e6_write(_self_, _64513_outIdent);
	_1a947c1e6_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1a951bb59_structureDeriveDefsDecls(_self_, _63641_s);
	_1a951c132_structureOperators(_self_, _63641_s);
	_1a947c1e6_write(_self_, jule::Str("\n", 1));
	_1a94db7a5_doneIndent(_self_);
	_1a94dbcc2_indent(_self_);
	_1a947c1e6_write(_self_, jule::Str("};", 2));
}



inline void _1a951c396_structureDecl(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea31ed8e_Struct>& _67638_s) {
	{
		auto &expr = _67638_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1abda030e:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _67721_ins = *it;
			{
				_1a951c264_structureInsDecl(_self_, _67721_ins);
			}
			_iter_next_1abda030e:;
			++it;
			goto _iter_begin_1abda030e;
		}
		_iter_end_1abda030e:;
	};
}



inline void _1a951c4c8_structureDecls(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1abda11bc:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _68321_s = *it;
			{
				if ((_68321_s.get()._field_Token != nullptr)) {
					_1a951c396_structureDecl(_self_, _68321_s);
					_1a947c1e6_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1abda11bc:;
			++it;
			goto _iter_begin_1abda11bc;
		}
		_iter_end_1abda11bc:;
	};
}



inline void _1a951c60a_paramsDecls(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>& _69136_params) {
	if ((_69136_params.len() == 0LL)) {
		_1a947c1e6_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a947c1e6_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _69136_params;
		auto it = expr.begin();
		_iter_begin_1abda80c5:;
		if (it != expr.end()) {
			jule::I64 _69814_i = it - expr.begin();
			jule::Ptr<_1eb025962_ParamIns> _69821_p = *it;
			{
				_1a947c1e6_write(_self_, static__1a9524eb4_paramIns(_69821_p));
				if (((_69136_params.len() - _69814_i) > 1LL)) {
					_1a947c1e6_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1abda80c5:;
			++it;
			_69814_i++;
			goto _iter_begin_1abda80c5;
		}
		_iter_end_1abda80c5:;
	};
	_1a947c1e6_write(_self_, jule::Str(")", 1));
}



inline void _1a951c73c_funcHead(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1eb026831_FnIns>& _70833_f, jule::Bool _70844_ptr) {
	if ((((!(_70844_ptr)) && _1d069e4be_Inline) && (!(_1eb0245ba_IsEntryPoint(_70833_f.get()._field_Decl.ptr()))))) {
		_1a947c1e6_write(_self_, jule::Str("inline ", 7));
	};
	static__1a9525514_funcInsResult(_self_.get()._field_Obj,_70833_f);
	if (_70844_ptr) {
		_1a947c1e6_write(_self_, jule::Str("(*", 2));
		_1a947c1e6_write(_self_, static__1a9475d49_funcIns(_70833_f));
		_1a947c1e6_write(_self_, jule::Str(")", 1));
	} else {
		_1a947c1e6_write(_self_, jule::Str(" ", 1));
		_1a947c1e6_write(_self_, static__1a9475d49_funcIns(_70833_f));
	};
}



inline void _1a951c86e_funcDecl(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1eb023b80_Fn>& _72333_f, jule::Bool _72341_ptr) {
	{
		auto &expr = _72333_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1abdad284:;
		if (it != expr.end()) {
			jule::Ptr<_1eb026831_FnIns> _72421_c = *it;
			{
				_1a94dbcc2_indent(_self_);
				_1a951c73c_funcHead(_self_, _72421_c,_72341_ptr);
				_1a951c60a_paramsDecls(_self_, _72421_c.get()._field_Params);
				_1a947c1e6_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1abdad284:;
			++it;
			goto _iter_begin_1abdad284;
		}
		_iter_end_1abdad284:;
	};
}



inline void _1a951c9a1_funcDecls(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b2da_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>([=](jule::Ptr<_1d052c825_Package>& _73335_pkg) mutable -> void {
		_1a951ec28_iterFiles(_73335_pkg,jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>([=](jule::Ptr<_1d0593748_SymbolTable>& _73436_file) mutable -> void {
			{
				auto &expr = _73436_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1abdb174e:;
				if (it != expr.end()) {
					jule::Ptr<_1eb023b80_Fn> _73529_f = *it;
					{
						if (((!(_73529_f.get()._field_CppLinked)) && (_73529_f.get()._field_Token != nullptr))) {
							_1a94a1bcc_pushResult(_self_, _73529_f);
							_1a951c86e_funcDecl(_self_, _73529_f,false);
						};
					}
					_iter_next_1abdb174e:;
					++it;
					goto _iter_begin_1abdb174e;
				}
				_iter_end_1abdb174e:;
			};
		}));
	}));
}



inline void _1a951cad3_traitDataTypes(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b2da_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>([=](jule::Ptr<_1d052c825_Package>& _74635_pkg) mutable -> void {
		_1a951ec28_iterFiles(_74635_pkg,jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>([=](jule::Ptr<_1d0593748_SymbolTable>& _74736_file) mutable -> void {
			{
				auto &expr = _74736_file.get()._field_Traits;
				auto it = expr.begin();
				_iter_begin_1abdb471e:;
				if (it != expr.end()) {
					jule::Ptr<_1d04ed4a5_Trait> _74829_t = *it;
					{
						if ((_74829_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a947c1e6_write(_self_, jule::Str("struct ", 7));
						_1a947c1e6_write(_self_, static__1a94760e1_traitDecl(_74829_t));
						_1a947c1e6_write(_self_, jule::Str("MptrData", 8));
						_1a947c1e6_write(_self_, jule::Str(" {\n", 3));
						_1a949c5ce_addIndent(_self_);
						{
							auto &expr = _74829_t.get()._field_Methods;
							auto it = expr.begin();
							_iter_begin_1abdb6677:;
							if (it != expr.end()) {
								jule::Ptr<_1eb023b80_Fn> _75733_m = *it;
								{
									jule::Ptr<_1eb026831_FnIns> _75833_ins = _75733_m.get()._field_Instances[0LL];;
									jule::Ptr<_1eb025962_ParamIns> _75933_p = _75833_ins.get()._field_Params[0LL];;
									_75933_p.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_74829_t, 2)});
									{
										auto expr = _75833_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										_iter_begin_1abdb7623:;
										if (it != expr.end()) {
											jule::I64 _76330_i = it - expr.begin();
											jule::Ptr<_1eb025962_ParamIns> _76337_ip = *it;
											{
												if (_212a0ece7_IsAnonIdent(_76337_ip.get()._field_Decl.get()._field_Ident)) {
													_76337_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1eaeea272_Itoa(_76330_i));
												};
											}
											_iter_next_1abdb7623:;
											++it;
											_76330_i++;
											goto _iter_begin_1abdb7623;
										}
										_iter_end_1abdb7623:;
									};
									if ((!(_22b128bab_Production))) {
										_75833_ins.get()._field_Params = jule::alloc_for_append(_75833_ins.get()._field_Params,1);_75833_ins.get()._field_Params.__push(jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1a9520e27_customType>(_1a9520e27_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1a951c86e_funcDecl(_self_, _75733_m,true);
								}
								_iter_next_1abdb6677:;
								++it;
								goto _iter_begin_1abdb6677;
							}
							_iter_end_1abdb6677:;
						};
						_1a94db7a5_doneIndent(_self_);
						_1a94dbcc2_indent(_self_);
						_1a947c1e6_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1abdb471e:;
					++it;
					goto _iter_begin_1abdb471e;
				}
				_iter_end_1abdb471e:;
			};
		}));
	}));
}



inline void _1a951cc15_paramIns(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1eb025962_ParamIns>& _79033_p) {
	_1a947c1e6_write(_self_, static__1a9524eb4_paramIns(_79033_p));
	_1a947c1e6_write(_self_, jule::Str(" ", 1));
	_1a947c1e6_write(_self_, static__1a9476388_param(_79033_p.get()._field_Decl));
}



inline void _1a951cd47_paramsIns(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1eb025962_ParamIns>>& _79634_params) {
	if ((_79634_params.len() == 0LL)) {
		_1a947c1e6_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a947c1e6_write(_self_, jule::Str("(", 1));
	{
		auto &expr = _79634_params;
		auto it = expr.begin();
		_iter_begin_1abdbce53:;
		if (it != expr.end()) {
			jule::I64 _80214_i = it - expr.begin();
			jule::Ptr<_1eb025962_ParamIns> _80221_p = *it;
			{
				_1a951cc15_paramIns(_self_, _80221_p);
				if (((_79634_params.len() - _80214_i) > 1LL)) {
					_1a947c1e6_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1abdbce53:;
			++it;
			_80214_i++;
			goto _iter_begin_1abdbce53;
		}
		_iter_end_1abdbce53:;
	};
	_1a947c1e6_write(_self_, jule::Str(")", 1));
}



inline void _1a951ce79_varInitExpr(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1d0550a13_Var>& _81136_v, jule::Fn<void(void)> _81145_init) {
	if (_81136_v.get()._field_Statically) {
		_1a947c1e6_write(_self_, jule::Str("static ", 7));
	};
	_1a947c1e6_write(_self_, static__1a9525cea_kind(_81136_v.get()._field_Kind.get()._field_Kind));
	_1a947c1e6_write(_self_, jule::Str(" ", 1));
	if (_81136_v.get()._field_Reference) {
		_1a947c1e6_write(_self_, jule::Str("&", 1));
	};
	_1a947c1e6_write(_self_, static__1a9476e16_var(_81136_v));
	if ((_81145_init != nullptr)) {
		_1a947c1e6_write(_self_, jule::Str(" = ", 3));
		_81145_init();
	};
	_1a947c1e6_write(_self_, jule::Str(";", 1));
}



inline void _1a951d0ab_var(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1d0550a13_Var> _82927_v) {
	if (_212a0ea50_IsIgnoreIdent(_82927_v.get()._field_Ident)) {
		return;;
	};
	if (((_82927_v.get()._field_Value != nullptr) && (_82927_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_82927_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			_1a951ce79_varInitExpr(_self_, _82927_v,jule::Fn<void(void)>([=](void) mutable -> void {
				_1a946d858_val(_self_.get()._field_ec, _82927_v.get()._field_Value);
			}));
			return;;
		};
		_1a951ce79_varInitExpr(_self_, _82927_v,nullptr);
		return;;
	};
	if (_1a952c087_shouldInitialized(_82927_v.get()._field_Kind.get()._field_Kind)) {
		_1a951ce79_varInitExpr(_self_, _82927_v,jule::Fn<void(void)>([=](void) mutable -> void {
			_1a946dacd_initExpr(_self_.get()._field_ec, _82927_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1a951ce79_varInitExpr(_self_, _82927_v,nullptr);
}



inline void _1a951d1dd_func(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1eb023b80_Fn>& _84829_f) {
	{
		auto &expr = _84829_f.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1abdc7435:;
		if (it != expr.end()) {
			jule::Ptr<_1eb026831_FnIns> _84921_ins = *it;
			{
				_1a951c73c_funcHead(_self_, _84921_ins,false);
				_1a951cd47_paramsIns(_self_, _84921_ins.get()._field_Params);
				_1a947c1e6_write(_self_, jule::Str(" ", 1));
				_1a945e77d_funcScope(_self_.get()._field_sc, _84921_ins);
				if ((_84921_ins.get()._field_Scope != nullptr)) {
					_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1abdc7435:;
			++it;
			goto _iter_begin_1abdc7435;
		}
		_iter_end_1abdc7435:;
	};
}



inline void _1a951d320_traitWrappers(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1abdc97cd:;
		if (it != expr.end()) {
			jule::Ptr<_1a947cc0d_traitHash> _86121_hash = *it;
			{
				{
					auto &expr = _86121_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1abdc9e1b:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _86225_m = *it;
						{
							jule::Str _86321_ident = _86225_m.get()._field_Ident;;
							_86225_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_86225_m.get()._field_Ident=((_86321_ident + jule::Str("_", 1)) + _1eaeea272_Itoa(_86121_hash.get()._field_i));
							_1a951d1dd_func(_self_, _86225_m);
							_86225_m.get()._field_Ident=_86321_ident;
							if ((_86121_hash.get()._field_s == nullptr)) {
								if (_22b128bab_Production) {
									_1a947c1e6_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1a947c1e6_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1abdc9e1b;
							};
							jule::Bool _87921_ptr = (!(_1eb022bd4_IsRef(_86225_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1eb023b80_Fn> _88125_sm = _1ea2ea397_FindMethod(_86121_hash.get()._field_s.ptr(), _86225_m.get()._field_Ident,false);;
							if (((_88125_sm == nullptr) || (_88125_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1abdc9e1b;
							};
							_1a949c5ce_addIndent(_self_);
							_1a947c1e6_write(_self_, jule::Str("{\n", 2));
							_1a94dbcc2_indent(_self_);
							if ((_88125_sm.get()._field_Exceptional || (!(_1eb0240e2_IsVoid(_88125_sm.ptr()))))) {
								_1a947c1e6_write(_self_, jule::Str("return ", 7));
							};
							_1a947c1e6_write(_self_, static__1a9475aa2_func(_88125_sm));
							_1a947c1e6_write(_self_, jule::Str("(", 1));
							if (_87921_ptr) {
								_1a947c1e6_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1a947c1e6_write(_self_, static__1a95246cd_structureIns(_86121_hash.get()._field_s));
								_1a947c1e6_write(_self_, jule::Str(">(", 2));
								if ((!(_22b128bab_Production))) {
									_1a947c1e6_write(_self_, jule::Str("_00___file", 10));
								};
								_1a947c1e6_write(_self_, jule::Str(")", 1));
							} else {
								_1a947c1e6_write(_self_, jule::Str("_self_.data.as<", 15));
								_1a947c1e6_write(_self_, static__1a9524436_structure(_88125_sm.get()._field_Owner));
								_1a947c1e6_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _86225_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								_iter_begin_1abdd2d47:;
								if (it != expr.end()) {
									jule::Ptr<_1eb022343_Param> _90724_mp = *it;
									{
										_1a947c1e6_write(_self_, jule::Str(", ", 2));
										_1a947c1e6_write(_self_, static__1a9476388_param(_90724_mp));
									}
									_iter_next_1abdd2d47:;
									++it;
									goto _iter_begin_1abdd2d47;
								}
								_iter_end_1abdd2d47:;
							};
							_1a947c1e6_write(_self_, jule::Str(");\n}\n", 5));
							_1a94db7a5_doneIndent(_self_);
						}
						_iter_next_1abdc9e1b:;
						++it;
						goto _iter_begin_1abdc9e1b;
					}
					_iter_end_1abdc9e1b:;
				};
			}
			_iter_next_1abdc97cd:;
			++it;
			goto _iter_begin_1abdc97cd;
		}
		_iter_end_1abdc97cd:;
	};
}



inline void _1a951d452_traitDatas(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	jule::Ptr<_1d04ed4a5_Trait> _91817_old = nullptr;;
	{
		auto &expr = _self_.get()._field_tmap;
		auto it = expr.begin();
		_iter_begin_1abdc9a97:;
		if (it != expr.end()) {
			jule::Ptr<_1a947cc0d_traitHash> _91921_hash = *it;
			{
				jule::Str _92017_ident = static__1a94760e1_traitDecl(_91921_hash.get()._field_t);;
				if ((_91921_hash.get()._field_t != _91817_old)) {
					if ((_91817_old != nullptr)) {
						_1a94db7a5_doneIndent(_self_);
						_1a94dbcc2_indent(_self_);
						_1a947c1e6_write(_self_, jule::Str("};\n", 3));
					};
					_1a947c1e6_write(_self_, jule::Str("static ", 7));
					_1a947c1e6_write(_self_, _92017_ident);
					_1a947c1e6_write(_self_, jule::Str("MptrData ", 9));
					_1a947c1e6_write(_self_, _92017_ident);
					_1a947c1e6_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_91817_old=_91921_hash.get()._field_t;
					_1a949c5ce_addIndent(_self_);
				};
				_1a94dbcc2_indent(_self_);
				_1a947c1e6_write(_self_, jule::Str("{\n", 2));
				_1a949c5ce_addIndent(_self_);
				{
					auto &expr = _91921_hash.get()._field_t.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1abdd9b95:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _93825_m = *it;
						{
							jule::Str _93921_mIdent = static__1a9475aa2_func(_93825_m);;
							_1a94dbcc2_indent(_self_);
							_1a947c1e6_write(_self_, jule::Str(".", 1));
							_1a947c1e6_write(_self_, _93921_mIdent);
							_1a947c1e6_write(_self_, jule::Str("=", 1));
							_1a947c1e6_write(_self_, _93921_mIdent);
							_1a947c1e6_write(_self_, jule::Str("_", 1));
							_1a947c1e6_write(_self_, _1eaeea272_Itoa(_91921_hash.get()._field_i));
							_1a947c1e6_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1abdd9b95:;
						++it;
						goto _iter_begin_1abdd9b95;
					}
					_iter_end_1abdd9b95:;
				};
				_1a94db7a5_doneIndent(_self_);
				_1a94dbcc2_indent(_self_);
				_1a947c1e6_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1abdc9a97:;
			++it;
			goto _iter_begin_1abdc9a97;
		}
		_iter_end_1abdc9a97:;
	};
	if ((_91817_old != nullptr)) {
		_1a94db7a5_doneIndent(_self_);
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a951d584_globals(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Globals;
		auto it = expr.begin();
		_iter_begin_1abdddd0e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0550a13_Var> _96121_v = *it;
			{
				_1a947c1e6_write(_self_, static__1a9525cea_kind(_96121_v.get()._field_Kind.get()._field_Kind));
				_1a947c1e6_write(_self_, jule::Str(" ", 1));
				if (_96121_v.get()._field_Reference) {
					_1a947c1e6_write(_self_, jule::Str("&", 1));
				};
				_1a947c1e6_write(_self_, static__1a9476e16_var(_96121_v));
				_1a947c1e6_write(_self_, jule::Str(" = ", 3));
				_1a946d858_val(_self_.get()._field_ec, _96121_v.get()._field_Value);
				_1a947c1e6_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1abdddd0e:;
			++it;
			goto _iter_begin_1abdddd0e;
		}
		_iter_end_1abdddd0e:;
	};
}



inline void _1a951d6b6_decls(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b54e_traitDecls(_self_);
	_1a951b7b3_structurePlainDecls(_self_);
	_1a951c4c8_structureDecls(_self_);
	_1a951c9a1_funcDecls(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_1a951cad3_traitDataTypes(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_1a951d320_traitWrappers(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_1a951d452_traitDatas(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a951d584_globals(_self_);
}



inline void _1a951d7e8_structureMethods(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _99041_s) {
	{
		auto &expr = _99041_s.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1abde4ba0:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _99121_f = *it;
			{
				_1a951d1dd_func(_self_, _99121_f);
				_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1abde4ba0:;
			++it;
			goto _iter_begin_1abde4ba0;
		}
		_iter_end_1abde4ba0:;
	};
}



inline void _1a951d92a_structureDeriveDefs(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _99744_s) {
	if (_1ea2d8dbe_IsDerives(_99744_s.get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a947c1e6_write(_self_, static__1a9471927_cloneFuncDef(_99744_s.get()._field_Decl));
		_1a947c1e6_write(_self_, jule::Str("{\n", 2));
		_1a949c5ce_addIndent(_self_);
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, static__1a95246cd_structureIns(_99744_s));
		_1a947c1e6_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto &expr = _99744_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1abde7b2b:;
			if (it != expr.end()) {
				jule::Ptr<_1ea32007b_FieldIns> _100520_f = *it;
				{
					jule::Str _100621_ident = static__1a9476b6e_field(_100520_f.get()._field_Decl);;
					_1a94dbcc2_indent(_self_);
					_1a947c1e6_write(_self_, jule::Str("clone.", 6));
					_1a947c1e6_write(_self_, _100621_ident);
					_1a947c1e6_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a947c1e6_write(_self_, _100621_ident);
					_1a947c1e6_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1abde7b2b:;
				++it;
				goto _iter_begin_1abde7b2b;
			}
			_iter_end_1abde7b2b:;
		};
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, jule::Str("return clone;\n", 14));
		_1a94db7a5_doneIndent(_self_);
		_1a947c1e6_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a951da5c_structureOstream(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _102141_s) {
	_1a94dbcc2_indent(_self_);
	_1a947c1e6_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a947c1e6_write(_self_, static__1a94768c7_structureIns(_102141_s));
	_1a947c1e6_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a949c5ce_addIndent(_self_);
	_1a94dbcc2_indent(_self_);
	jule::Ptr<_1eb023b80_Fn> _102917_fts = _1ea2ea397_FindMethod(_102141_s.ptr(), jule::Str("Str", 3),false);;
	if (static__1d05521c9_Str(_102917_fts)) {
		_1a947c1e6_write(_self_, jule::Str("_Stream << ", 11));
		_1a947c1e6_write(_self_, static__1a9475aa2_func(_102917_fts));
		_1a947c1e6_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a947c1e6_write(_self_, jule::Str("_Stream << \"", 12));
		_1a947c1e6_write(_self_, _102141_s.get()._field_Decl.get()._field_Ident);
		_1a947c1e6_write(_self_, jule::Str("{\";\n", 4));
		{
			auto &expr = _102141_s.get()._field_Fields;
			auto it = expr.begin();
			_iter_begin_1abdeeddb:;
			if (it != expr.end()) {
				jule::I64 _103918_i = it - expr.begin();
				jule::Ptr<_1ea32007b_FieldIns> _103925_f = *it;
				{
					_1a94dbcc2_indent(_self_);
					_1a947c1e6_write(_self_, jule::Str("_Stream << \"", 12));
					_1a947c1e6_write(_self_, _103925_f.get()._field_Decl.get()._field_Ident);
					_1a947c1e6_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1ea320268_StructIns> _104621_strct = _1d05c7cdd_Struct(_103925_f.get()._field_Kind.ptr());;
					if ((((_104621_strct != nullptr) && (_104621_strct.get()._field_Decl != nullptr)) && _104621_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1a947c1e6_write(_self_, jule::Str(" cpp.", 5));
						_1a947c1e6_write(_self_, static__1a9476b6e_field(_103925_f.get()._field_Decl));
						_1a947c1e6_write(_self_, jule::Str("\"", 1));
					} else {
						_1a947c1e6_write(_self_, jule::Str("\" << _Src.", 10));
						_1a947c1e6_write(_self_, static__1a9476b6e_field(_103925_f.get()._field_Decl));
					};
					if (((_103918_i + 1LL) < _102141_s.get()._field_Fields.len())) {
						_1a947c1e6_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a947c1e6_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1abdeeddb:;
				++it;
				_103918_i++;
				goto _iter_begin_1abdeeddb;
			}
			_iter_end_1abdeeddb:;
		};
		_1a94dbcc2_indent(_self_);
		_1a947c1e6_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a94dbcc2_indent(_self_);
	_1a947c1e6_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a94db7a5_doneIndent(_self_);
	_1a947c1e6_write(_self_, jule::Str("}", 1));
}



inline void _1a951db8e_structureIns(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea320268_StructIns>& _107237_s) {
	_1a951d7e8_structureMethods(_self_, _107237_s);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_1a951d92a_structureDeriveDefs(_self_, _107237_s);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	_1a951da5c_structureOstream(_self_, _107237_s);
}



inline void _1a951dcc1_structure(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1ea31ed8e_Struct>& _108034_s) {
	{
		auto &expr = _108034_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1abe07d6c:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _108121_ins = *it;
			{
				_1a951db8e_structureIns(_self_, _108121_ins);
				_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1abe07d6c:;
			++it;
			goto _iter_begin_1abe07d6c;
		}
		_iter_end_1abe07d6c:;
	};
}



inline void _1a951de03_structures(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	{
		auto &expr = _self_.get()._field_ir.get()._field_Ordered._field_Structs;
		auto it = expr.begin();
		_iter_begin_1abe0909e:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31ed8e_Struct> _108821_s = *it;
			{
				if ((_108821_s.get()._field_Token != nullptr)) {
					_1a951dcc1_structure(_self_, _108821_s);
					_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1abe0909e:;
			++it;
			goto _iter_begin_1abe0909e;
		}
		_iter_end_1abe0909e:;
	};
}



inline void _1a951e035_funcs(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b2da_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>([=](jule::Ptr<_1d052c825_Package>& _109735_pkg) mutable -> void {
		_1a951ec28_iterFiles(_109735_pkg,jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>([=](jule::Ptr<_1d0593748_SymbolTable>& _109836_file) mutable -> void {
			{
				auto &expr = _109836_file.get()._field_Funcs;
				auto it = expr.begin();
				_iter_begin_1abe0c27d:;
				if (it != expr.end()) {
					jule::Ptr<_1eb023b80_Fn> _109929_f = *it;
					{
						if (((!(_22b12824e_Test)) && _1a952bce0_hasDirective(_109929_f.get()._field_Directives,jule::Str("test", 4)))) {
							goto _iter_next_1abe0c27d;
						};
						if (((!(_109929_f.get()._field_CppLinked)) && (_109929_f.get()._field_Token != nullptr))) {
							_1a951d1dd_func(_self_, _109929_f);
							_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1abe0c27d:;
					++it;
					goto _iter_begin_1abe0c27d;
				}
				_iter_end_1abe0c27d:;
			};
		}));
	}));
}



inline void _1a951e167_pushInit(jule::Ptr<_1a951a99e_ObjectCoder> _self_, jule::Ptr<_1d052c825_Package>& _111233_pkg) {
	_1a951ec28_iterFiles(_111233_pkg,jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)>([=](jule::Ptr<_1d0593748_SymbolTable>& _111332_file) mutable -> void {
		{
			auto &expr = _111332_file.get()._field_Funcs;
			auto it = expr.begin();
			_iter_begin_1abe0ea44:;
			if (it != expr.end()) {
				jule::Ptr<_1eb023b80_Fn> _111420_f = *it;
				{
					if ((_111420_f.get()._field_Ident == jule::Str("init", 4))) {
						_1a94dbcc2_indent(_self_);
						_1a947c1e6_write(_self_, static__1a9475aa2_func(_111420_f));
						_1a947c1e6_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1abe0ea44:;
				++it;
				goto _iter_begin_1abe0ea44;
			}
			_iter_end_1abe0ea44:;
		};
	}));
}



inline void _1a951e332_initCaller(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a947c1e6_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a949c5ce_addIndent(_self_);
	_1a951b2da_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d052c825_Package>&)>([=](jule::Ptr<_1d052c825_Package>& _112735_pkg) mutable -> void {
		_1a951e167_pushInit(_self_, _112735_pkg);
	}));
	_1a94db7a5_doneIndent(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n}", 2));
}



inline void _1a951e50d_end(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a947c1e6_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22b12824e_Test) {
		_1a947c1e6_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a947c1e6_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a947c1e6_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a951e6d9_serializeHead(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951b1a8_prepareStructures(_self_);
	_1a951b41c_buildTraitMap(_self_);
	_1a947c966_head(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n", 1));
	_1a951d6b6_decls(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n", 1));
	_1a951de03_structures(_self_);
	_1a951e035_funcs(_self_);
	_1a951e332_initCaller(_self_);
	_1a947c1e6_write(_self_, jule::Str("\n\n", 2));
	jule::Str _116617_head = _self_.get()._field_Obj.slice(0LL,_self_.get()._field_declPos);;
	_116617_head+=_self_.get()._field_anyObj;
	_116617_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
	_self_.get()._field_Obj=_116617_head;
}



inline void _1a951e8b5_Serialize(jule::Ptr<_1a951a99e_ObjectCoder> _self_) {
	_1a951e6d9_serializeHead(_self_);
	_1a951e50d_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a951a99e_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1b6c04994_IR__jule_tuple_s_22ca31eb9_Log static__1b6c58b4c_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1b6c04994_IR__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	jule::Ptr<_1b7b56cbe_JuleImporter> _2817_importer = static__1d09bd7bb_New(_1b7ab80b5_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1ea2be217_Ast>> _2918_files;;
	jule::Slice<_22ca31eb9_Log> _2929_logs;;
	({
		__jule_tuple_sx_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b6bec6e5_ImportPackage(_2817_importer.ptr(), _2721_path,true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1d052c825_Package> _3918_pkg;;
	({
		__jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1d05e1972_AnalyzePackage(_2918_files,jule::Trait<_1d0526c4d_Importer>(_2817_importer, 0),_2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1b6c04994_IR> _4417_ir = jule::new_ptr<_1b6c04994_IR>(_1b6c04994_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1d09dc90b_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1b7a9c64e_getAllUniquePasses(_4417_ir.get()._field_Main,_4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b6c6b5aa_appendStructs(_1b6c04994_IR* _self_, jule::Ptr<_1d052c825_Package>& _5633_p, jule::Slice<jule::Ptr<_1ea31ed8e_Struct>>& _5657_buffer) {
	{
		auto &expr = _5633_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab788357:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _5721_f = *it;
			{
				{
					auto &expr = _5721_f.get()._field_Structs;
					auto it = expr.begin();
					_iter_begin_1ab788ba4:;
					if (it != expr.end()) {
						jule::Ptr<_1ea31ed8e_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								_5657_buffer = jule::alloc_for_append(_5657_buffer,1);_5657_buffer.__push(_5825_s);;
							};
						}
						_iter_next_1ab788ba4:;
						++it;
						goto _iter_begin_1ab788ba4;
					}
					_iter_end_1ab788ba4:;
				};
			}
			_iter_next_1ab788357:;
			++it;
			goto _iter_begin_1ab788357;
		}
		_iter_end_1ab788357:;
	};
}



inline jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _1b6c7e5e0_GetAllStructures(_1b6c04994_IR* _self_) {
	jule::Slice<jule::Ptr<_1ea31ed8e_Struct>> _6917_buffer = nullptr;;
	_1b6c6b5aa_appendStructs(&(*_self_), (*_self_)._field_Main,_6917_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1ab788852:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1b6c6b5aa_appendStructs(&(*_self_), _7121_u.get()._field_Package,_6917_buffer);
				};
			}
			_iter_next_1ab788852:;
			++it;
			goto _iter_begin_1ab788852;
		}
		_iter_end_1ab788852:;
	};
	return _6917_buffer;;
}



inline void _1b6c8d456_appendGlobals(_1b6c04994_IR* _self_, jule::Ptr<_1d052c825_Package>& _7933_p, jule::Slice<jule::Ptr<_1d0550a13_Var>>& _7957_buffer) {
	{
		auto &expr = _7933_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab78b349:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _8021_f = *it;
			{
				{
					auto &expr = _8021_f.get()._field_Vars;
					auto it = expr.begin();
					_iter_begin_1ab78bb74:;
					if (it != expr.end()) {
						jule::Ptr<_1d0550a13_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								_7957_buffer = jule::alloc_for_append(_7957_buffer,1);_7957_buffer.__push(_8125_v);;
							};
						}
						_iter_next_1ab78bb74:;
						++it;
						goto _iter_begin_1ab78bb74;
					}
					_iter_end_1ab78bb74:;
				};
			}
			_iter_next_1ab78b349:;
			++it;
			goto _iter_begin_1ab78b349;
		}
		_iter_end_1ab78b349:;
	};
}



inline jule::Slice<jule::Ptr<_1d0550a13_Var>> _1b6e1c140_GetAllGlobals(_1b6c04994_IR* _self_) {
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _9217_buffer = nullptr;;
	_1b6c8d456_appendGlobals(&(*_self_), (*_self_)._field_Main,_9217_buffer);
	{
		auto &expr = (*_self_)._field_Used;
		auto it = expr.begin();
		_iter_begin_1ab78d615:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1b6c8d456_appendGlobals(&(*_self_), _9421_u.get()._field_Package,_9217_buffer);
				};
			}
			_iter_next_1ab78d615:;
			++it;
			goto _iter_begin_1ab78d615;
		}
		_iter_end_1ab78d615:;
	};
	return _9217_buffer;;
}



inline void _1b6e243ab_Order(_1b6c04994_IR* _self_) {
	(*_self_)._field_Ordered._field_Structs=_1b6c7e5e0_GetAllStructures(&(*_self_));
	(*_self_)._field_Ordered._field_Globals=_1b6e1c140_GetAllGlobals(&(*_self_));
	static__1b7b384cb_orderStructures((*_self_)._field_Ordered._field_Structs);
	static__1b7b4c358_orderVars((*_self_)._field_Ordered._field_Globals);
}







std::ostream &operator<<(std::ostream &_Stream, _1b6c04994_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1abb934cb_parseInteger(_1a95732ba_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1abb9616b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22dc943e5_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1abb965cd:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22dc943e5_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1abb96776:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22dc943e5_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1abb964bd:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1abb95d3b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1abb95cc5:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1abb95c09:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1abb9b5c2_parseInteger(_1a95732ba_argParser* _self_, jule::Str& _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (_19031_s.empty()) {
			_case_begin_1abb9e21d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22dc943e5_HasPrefix(_19031_s,jule::Str("0x", 2))) {
			_case_begin_1abb9e680:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22dc943e5_HasPrefix(_19031_s,jule::Str("0b", 2))) {
			_case_begin_1abb9e828:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22dc943e5_HasPrefix(_19031_s,jule::Str("0o", 2))) {
			_case_begin_1abb9e570:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(2LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if ((_19031_s[0LL] == '0')) {
			_case_begin_1abb9dddd:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s.slice(1LL),8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1abb9dd77:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser(_19031_s,10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1abb9dcab:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a9573ab2_getData(_1a95732ba_argParser* _self_) {
	if ((((*_self_)._field_i + 1LL) >= (*_self_)._field_args.len())) {
		return jule::Str();;
	};
	((*_self_)._field_i)++;
	return (*_self_)._field_args[(*_self_)._field_i];;
}



inline jule::VoidExceptional _1a9573d04_processFlag(_1a95732ba_argParser* _self_, jule::Trait<_1a956e173_CommonFlag>& _21735_flag) {
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1abb7b728_Flag>>()) {
			_case_begin_1abb9072b:;
			{
				jule::Ptr<_1abb7b728_Flag> _22021_bf = _21735_flag.operator jule::Ptr<_1abb7b728_Flag>();;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1abb906b5:;
	};
	jule::Str _22513_data = _1a9573ab2_getData(&(*_self_));;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a956e173_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a953e495_Name(_21735_flag)) + jule::Str(": expression missing", 20)), &__jule_any_type7));
	};
	{
		auto &_match_expr{ _21735_flag };
		
		if (_match_expr.type_is<jule::Ptr<_1abb707e9_Flag>>()) {
			_case_begin_1abb91d37:;
			{
				jule::Ptr<_1abb707e9_Flag> _23221_intf = _21735_flag.operator jule::Ptr<_1abb707e9_Flag>();;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1abb934cb_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1eaeda5a3_ParseInt(_23370_s,_23378_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a956e173_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a953e495_Name(_21735_flag)) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type7));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abb7459a_Flag>>()) {
			_case_begin_1abb92772:;
			{
				jule::Ptr<_1abb7459a_Flag> _24021_uintf = _21735_flag.operator jule::Ptr<_1abb7459a_Flag>();;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1abb9b5c2_parseInteger(&(*_self_), _22513_data,jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1eaeda471_ParseUint(_24171_s,_24179_base,64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a956e173_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a953e495_Name(_21735_flag)) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type7));
				};
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abb77db7_Flag>>()) {
			_case_begin_1abb927d8:;
			{
				jule::Ptr<_1abb77db7_Flag> _24821_ff = _21735_flag.operator jule::Ptr<_1abb77db7_Flag>();;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1eaee0b4c_ParseFloat(_22513_data,64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a956e173_CommonFlag_mptr_data[(_21735_flag).type_offset]._1a953e495_Name(_21735_flag)) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type7));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is<jule::Ptr<_1abb80045_Flag>>()) {
			_case_begin_1abb9284e:;
			{
				(*(_21735_flag.operator jule::Ptr<_1abb80045_Flag>().get()._field_data))=_22513_data;
			}
		}
		_match_end_1abb9270b:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a9574079_singleDash(_1a95732ba_argParser* _self_, jule::Str& _25730_arg) {
	if ((_25730_arg.len() == 1LL)) {
		return jule::VoidExceptional(jule::Any((_25730_arg + jule::Str(": missing argument", 18)), &__jule_any_type7));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>(_25730_arg).slice(1LL);;
	{
		auto &expr = _26113_rarg;
		auto it = expr.begin();
		_iter_begin_1abba4ec1:;
		if (it != expr.end()) {
			jule::I32 &_26216_r = *it;
			{
				jule::Trait<_1a956e173_CommonFlag> _26321_flag = _1a9571670_FindFlagShort(&(*_self_)._field_set, _26216_r);;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any(((_25730_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_26216_r)), &__jule_any_type7));
				};
				({
					auto except = _1a9573d04_processFlag(&(*_self_), _26321_flag);
					if (!except.ok()) {
						return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
					}
				});
			}
			_iter_next_1abba4ec1:;
			++it;
			goto _iter_begin_1abba4ec1;
		}
		_iter_end_1abba4ec1:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a95742ee_doubleDash(_1a95732ba_argParser* _self_, jule::Str& _27230_arg) {
	if ((_27230_arg.len() == 2LL)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": missing argument", 18)), &__jule_any_type7));
	};
	jule::Trait<_1a956e173_CommonFlag> _27617_flag = _1a9571362_FindFlag(&(*_self_)._field_set, _27230_arg.slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any((_27230_arg + jule::Str(": flag is not exist", 19)), &__jule_any_type7));
	};
	({
		auto except = _1a9573d04_processFlag(&(*_self_), _27617_flag);
		if (!except.ok()) {
			return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a95744ca_tryArg(_1a95732ba_argParser* _self_) {
	jule::Str _28413_arg = (*_self_)._field_args[(*_self_)._field_i];;
	if (((*_self_)._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1a95742ee_doubleDash(&(*_self_), _28413_arg);
				if (!except.ok()) {
					return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a9574079_singleDash(&(*_self_), _28413_arg);
			if (!except.ok()) {
				return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
			}
		});
		return jule::VoidExceptional();;
	};
	(*_self_)._field_content = jule::alloc_for_append((*_self_)._field_content,1);(*_self_)._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a95746a6_parse(_1a95732ba_argParser* _self_) {
	for (; ((*_self_)._field_i < (*_self_)._field_args.len()); ((*_self_)._field_i)++) {
		{
			({
				auto except = _1a95744ca_tryArg(&(*_self_));
				if (!except.ok()) {
					return jule::VoidExceptional(jule::Any(except.error, &__jule_any_type1));
				}
			});
		}
	_iter_next_1abbac3b3:;
	}
	_iter_end_1abbac3b3:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a95732ba_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _22b2d95ec_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _22b2edd2b_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _22b1a4990_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _22b31c0e1_Stat(jule::U8* _4816_path, struct stat* _4833_stat) {
	return static_cast<jule::I64>(stat(((char*)(_4816_path)), _4833_stat));;
}



inline jule::I64 _22b31c4cb_Open(jule::U8* _5316_path, jule::I64 _5329_flag, jule::I64 _5340_mode) {
	return static_cast<jule::I64>(open(((char*)(_5316_path)),_5329_flag,_5340_mode));;
}



inline jule::U8* _22b31c81c_Getcwd(jule::U8* _5918_buff, jule::U64 _5931_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5918_buff)),_5931_bufflen)));;
}



inline DIR* _22b31cce5_Opendir(jule::U8* _6419_path) {
	return opendir(((char*)(_6419_path)));;
}



inline struct dirent* _22b31d08c_Readdir(DIR* _6723_dir) {
	return readdir(_6723_dir);;
}



inline jule::I64 _22b31d334_Closedir(DIR* _7024_dir) {
	return static_cast<jule::I64>(closedir(_7024_dir));;
}



inline jule::I64 _22b31dbb4_Mkdir(jule::U8* _7917_path, jule::I64 _7930_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_7917_path)),_7930_mode));;
}



inline jule::I64 _22b31de5b_Rmdir(jule::U8* _8417_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_8417_path))));;
}



inline jule::I64 _22b31e203_Unlink(jule::U8* _8718_path) {
	return static_cast<jule::I64>(unlink(((char*)(_8718_path))));;
}



inline jule::I64 _22c09b2e2_Seek(jule::I64 _269_handle, jule::I64 _2622_offset, jule::I64 _2635_origin) {
	return static_cast<jule::I64>(lseek(_269_handle,_2622_offset,_2635_origin));;
}



inline jule::I64 _22c09b6cc_Read(jule::I64 _3116_handle, void* _3133_buff, jule::U64 _3148_n) {
	return static_cast<jule::I64>(read(_3116_handle,_3133_buff,_3148_n));;
}



inline jule::I64 _22c09ba51_Close(jule::I64 _3610_handle) {
	return static_cast<jule::I64>(close(_3610_handle));;
}



inline jule::I64 _22c09be3b_Write(jule::I64 _3917_handle, void* _3930_buff, jule::U64 _3945_n) {
	return static_cast<jule::I64>(write(_3917_handle,_3930_buff,_3945_n));;
}



inline void _22c09c14a_Exit(jule::I64 _449_code) {
	exit(_449_code);
}



inline jule::I64 _22c14aa56_getLastOsError(void) {
	jule::I64 _309_err = _22b1a4990_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a9601db5:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a96017bb:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a9601843:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a96018ba:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a9601aeb:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a9601b62:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a9601bc8:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a9601612:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a96015ac:;
	};
}



inline jule::Slice<jule::Str> _22c14ba79_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _22c14beec_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _22c14c8b0_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(jule::Any(except.error, &__jule_any_type1));
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _22c14c8b0_getwd(void) {
	jule::U8* _1113_buff = _22b31c81c_Getcwd(nullptr,0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_22c14aa56_getLastOsError(), &__jule_any_type133));
	};
	jule::Str _159_pwd = _22b2edd2b_BytePtrToStr(_1113_buff);;
	{
		_22b2d95ec_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _22db5d006_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22dbbd275__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22dbc65ad_isExcludingLatin(_22db671db_Letter,_7613_r);;
}



inline jule::Bool _22dbc59ca_is16(jule::Slice<_22dbc3e18_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto &expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_1d0876a5e:;
			if (it != expr.end()) {
				jule::I64 _19313_i = it - expr.begin();
				{
					_22dbc3e18_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1d0876a5e:;
				++it;
				_19313_i++;
				goto _iter_begin_1d0876a5e;
			}
			_iter_end_1d0876a5e:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_22dbc3e18_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1d0876531:;
	}
	_iter_end_1d0876531:;;
	return false;;
}



inline jule::Bool _22dbc5d1b_is32(jule::Slice<_22dbc438b_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto &expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_1d087ceb6:;
			if (it != expr.end()) {
				jule::I64 _23013_i = it - expr.begin();
				{
					_22dbc438b_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1d087ceb6:;
				++it;
				_23013_i++;
				goto _iter_begin_1d087ceb6;
			}
			_iter_end_1d087ceb6:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_22dbc438b_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1d0879c82:;
	}
	_iter_end_1d0879c82:;;
	return false;;
}



inline jule::Bool _22dbc65ad_isExcludingLatin(jule::Ptr<_22dbc480e_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22dbc3e18_Range16> &_28014_R16 = _27821_rangeTab.get()._field_R16;;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if (((_28014_R16.len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>(_28014_R16[(_28014_R16.len() - 1LL)]._field_Hi)))) {
			return _22dbc59ca_is16(_28014_R16.slice(_28213_off),static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_22dbc438b_Range32> &_28710_R32 = _27821_rangeTab.get()._field_R32;;
	if (((_28710_R32.len() > 0LL) && (_27844_r >= static_cast<jule::I32>(_28710_R32[0LL]._field_Lo)))) {
		return _22dbc5d1b_is32(_28710_R32,static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _22dbc6855_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22dbbd275__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22dbc65ad_isExcludingLatin(_22db6d742_Upper,_29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _22dc8d642_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _22dc8c520_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_22dc8caa3_acceptRange _1969_accept = _22dc8cdb1_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22dc8d961_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _22dc8c520_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_22dc8caa3_acceptRange _2439_accept = _22dc8cdb1_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22dc8dc08_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_22dc905cd_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1d08c3e74;
			};
		}
	_iter_next_1d08c3e74:;
	}
	_iter_end_1d08c3e74:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_27619_p.slice(_28113_start,_2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _22dc8e9a6_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _22dc8ece7_appendRuneNonASCII(_40519_p,_40530_r);;
}



inline jule::Slice<jule::U8> _22dc8ece7_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1d08d9396:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1d08d79d2:;
			{
				_41242_r=128LL;
				goto _case_begin_1d08d7a48;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1d08d7a48:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1d08d7042:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1d08d6edc:;
	};
}



inline jule::I64 _22dc90336_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1d08e2910;
			};
			jule::U8 _48213_x = _22dc8c520_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1d08e2910;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1d08e2910;
			};
			_22dc8caa3_acceptRange _49213_accept = _22dc8cdb1_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1d08e2910:;
	}
	_iter_end_1d08e2910:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22dc905cd_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::Slice<jule::U8> _22dcb16ba_Stobs(jule::Str& _911_s) {
	return _911_s.fake_slice();;
}



inline void _22dcb6ca8_PushToStrBuffer(jule::Str& _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		(_2825_s).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _22dcb72a3_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1a9b7a86c:;
	}
	_iter_end_1a9b7a86c:;;
	return -1LL;;
}



inline jule::I64 _22dcb7528_FindLastByteStr(jule::Str& _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_22dcb72a3_FindLastByte(_22dcb16ba_Stobs(_6921_s),_6929_b));;
}



inline jule::Str _22dc94ca8_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1a9b8e6a5:;
	}
	_iter_end_1a9b8e6a5:;;
	return _2013_ss;;
}



inline jule::Bool _22dc98163_hasPrefix(jule::Str& _2715_s, jule::Str& _2724_sub, jule::I64 _2738_start) {
	if (((_2724_sub.len() == 0LL) || ((_2715_s.len() - _2738_start) < _2724_sub.len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < _2724_sub.len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if ((_2715_s[_2738_start] != _2724_sub[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1a9b9270d:;
	}
	_iter_end_1a9b9270d:;;
	return true;;
}



inline jule::Bool _22dc943e5_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _22dc98163_hasPrefix(_4214_s,_4222_sub,0LL);;
}



inline jule::Bool _22dcb768d_hasSuffix(jule::Str& _4615_s, jule::Str& _4624_sub, jule::I64 _4638_start) {
	if (((_4624_sub.len() == 0LL) || ((_4615_s.len() - _4638_start) < _4624_sub.len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>((_4615_s.len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < _4624_sub.len()); (_5213_i)++) {
		{
			if ((_4615_s[((_4638_start - _5213_i) - 1LL)] != _4624_sub[((_4624_sub.len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1a9b94732:;
	}
	_iter_end_1a9b94732:;;
	return true;;
}



inline jule::Bool _22dcb7946_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _22dcb768d_hasSuffix(_6214_s,_6222_sub,0LL);;
}



inline jule::I64 _22dcb7d31_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_22dc98163_hasPrefix(_7011_s,_7019_sub,_7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1a9b98813:;
	}
	_iter_end_1a9b98813:;;
	return -1LL;;
}



inline jule::I64 _22dcb866c_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1a9b9ad65;
					};
				}
			_iter_next_1a9b9c5c5:;
			}
			_iter_end_1a9b9c5c5:;;
			return _9413_j;;
		}
	_iter_next_1a9b9ad65:;
	}
	_iter_end_1a9b9ad65:;;
	return -1LL;;
}



inline jule::I64 _22dcb8a24_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_22dcb866c_FindLastAt(_11513_s,_11521_sub,static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _22dcc0047_findRune(jule::Slice<jule::U8>& _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < _17114_s.len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_17114_s.slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1a9ba4ec3:;
	}
	_iter_end_1a9ba4ec3:;;
	return -1LL;;
}



inline jule::I64 _22dcc0883_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_22dcb7528_FindLastByteStr(_19317_s,_19325_b));;
}



inline jule::I64 _22dcc1697_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _22dcb16ba_Stobs(_22812_s);;
	jule::Slice<jule::U8> _23013_rb = _22dcb16ba_Stobs(_22820_runes);;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22dcc0047_findRune(_23013_rb,_23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1a9baa759:;
	}
	_iter_end_1a9baa759:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _22dcc1dc3_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _22dcb7d31_FindAt(_26210_s,_26218_sub,_27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1a9bb1b5b;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i,_27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1a9bb1b5b:;
	}
	_iter_end_1a9bb1b5b:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _22dcc2214_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_22dcb7d31_FindAt(_29013_s,_29021_sub,0LL) != -1LL);;
}



inline jule::Bool _22dcc2bd7_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_22dcc1697_FindAny(_30616_s,_30624_runes) != -1LL);;
}



inline jule::I64 _22dcc3028_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _22dcb7d31_FindAt(_31210_s,_31218_sub,_31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1a9bb7216;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1a9bb7216:;
	}
	_iter_end_1a9bb7216:;;
	return _31613_n;;
}



inline jule::Str _22dcc34ac_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _22dcc3028_Count(_33212_s,_33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _22dcb7d31_FindAt(_33212_s,_33220_sub,_34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1a9bbb03e;
			};
			_34513_ss+=_33212_s.slice(_34613_i,_34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1a9bbb03e:;
	}
	_iter_end_1a9bbb03e:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _22dcc0520_trimLeft(jule::Slice<jule::U8>& _38818_s, jule::Slice<jule::U8>& _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < _38818_s.len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_38818_s.slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22dcc0047_findRune(_38830_cutset,_39114_r) == -1LL)) {
				_38818_s=_38818_s.slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1a9bbdb57:;
	}
	_iter_end_1a9bbdb57:;;
	_38818_s=nullptr;
}



inline jule::Str _22dcc4568_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _22dcb16ba_Stobs(_40313_s);;
	jule::Slice<jule::U8> _4059_bcutset = _22dcb16ba_Stobs(_40321_cutset);;
	_22dcc0520_trimLeft(_40413_bytes,_4059_bcutset);
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _22dcc4821_trimRight(jule::Slice<jule::U8>& _41019_s, jule::Slice<jule::U8>& _41031_cutset) {
	jule::I64 _41113_i = _41019_s.len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8dc08_DecodeLastRune(_41019_s.slice(0LL,_41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22dcc0047_findRune(_41031_cutset,_41314_r) == -1LL)) {
				_41019_s=_41019_s.slice(0LL,_41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1a9bc32bb:;
	}
	_iter_end_1a9bc32bb:;;
	_41019_s=nullptr;
}



inline jule::Str _22dcc4ea3_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _22dcb16ba_Stobs(_4349_s);;
	jule::Slice<jule::U8> _4369_bcutset = _22dcb16ba_Stobs(_43417_cutset);;
	_22dcc0520_trimLeft(_43513_bytes,_4369_bcutset);
	_22dcc4821_trimRight(_43513_bytes,_4369_bcutset);
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _22dcc52e4_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a9bc7bb6:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a9bc7c2c:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1a9bc7853:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1a9bc8c83:;
		if (it != expr.end()) {
			jule::Str &_45212_part = *it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=_45212_part;
			}
			_iter_next_1a9bc8c83:;
			++it;
			goto _iter_begin_1a9bc8c83;
		}
		_iter_end_1a9bc8c83:;
	};
	return _45113_s;;
}



inline jule::Str _22dcc667a_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _22dcc931a_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _22dcc8c87_IsPathSep(_1099_originalPath[0LL])) && _22dcc8c87_IsPathSep(_1099_originalPath[1LL]))) {
			return _22dcc6c0d_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _22dcc8c87_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_22dcc58bb_lazyBuff _12713_out = _22dcc58bb_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_22dcc60b4_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_22dcc8c87_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1a9bd7896:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _22dcc8c87_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1a9bda569:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _22dcc8c87_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1a9bda5d0:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1a9d4dd70:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_22dcc8c87_IsPathSep(static_cast<jule::U8>(_22dcc5d3e_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a9d4e7dd:;
									}
									_iter_end_1a9d4e7dd:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a9d4ddd6:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_22dcc60b4_append(&_12713_out, 47LLU);
									};
									_22dcc60b4_append(&_12713_out, '.');
									_22dcc60b4_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a9d4d9da:;
						};
					}
				}
				else {
					_case_begin_1a9bd5d28:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_22dcc60b4_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_22dcc8c87_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_22dcc60b4_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1a9bd7357:;
						}
						_iter_end_1a9bd7357:;;
					}
				}
				_match_end_1a9bd5ae7:;
			};
		}
	_iter_next_1a9bd5c7e:;
	}
	_iter_end_1a9bd5c7e:;;
	if ((_12713_out._field_w == 0LL)) {
		_22dcc60b4_append(&_12713_out, '.');
	};
	return _22dcc6c0d_FromSlash(_22dcc6328_string(&_12713_out));;
}



inline jule::Str _22dcc6c0d_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _22dcc702c_Join(jule::Slice<jule::Str> _2259_elem) {
	return _22dcc98d1_join(_2259_elem);;
}



inline jule::Str _22dcc72c4_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_22dcc8c87_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1a9d534e5:;
	}
	_iter_end_1a9d534e5:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _22dcc756b_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22dcc9639_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _22dcc7813_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _22dcc8c87_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL,(_25413_path.len() - 1LL));;
		}
	_iter_next_1a9d55a14:;
	}
	_iter_end_1a9d55a14:;;
	(_25413_path).mut_slice(_22dcc7e2e_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_22dcc8c87_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a9d5732e:;
	}
	_iter_end_1a9d5732e:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _22dcc7b87_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _22dcc7e2e_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_22dcc8c87_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a9d59650:;
	}
	_iter_end_1a9d59650:;;
	jule::Str _2919_dir = _22dcc667a_Clean(_2858_path.slice(_2869_vol.len(),(_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _22dcc7e2e_VolumeName(jule::Str _30315_path) {
	return _22dcc6c0d_FromSlash(_30315_path.slice(0LL,_22dcc931a_volumeNameLen(_30315_path)));;
}



inline jule::Bool _22dcc8c87_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _22dcc9073_IsAbs(jule::Str _5310_path) {
	return _22dc943e5_HasPrefix(_5310_path,jule::Str("/", 1));;
}



inline jule::I64 _22dcc931a_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _22dcc9639_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_22dcc9073_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _22dcc667a_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _22c14beec_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _22dcc98d1_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _22dcc98d1_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto &expr = _739_elem;
		auto it = expr.begin();
		_iter_begin_1a9d63318:;
		if (it != expr.end()) {
			jule::I64 _749_i = it - expr.begin();
			jule::Str &_7412_e = *it;
			{
				if ((!(_7412_e.empty()))) {
					return _22dcc667a_Clean(_22dcc52e4_Join(_739_elem.slice(_749_i),static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1a9d63318:;
			++it;
			_749_i++;
			goto _iter_begin_1a9d63318;
		}
		_iter_end_1a9d63318:;
	};
	return jule::Str();;
}



inline jule::I64 _22b1cdd93_getLastFsError(void) {
	jule::I64 _729_err = _22b1a4990_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a9d7139d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a9d70831:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a9d70c93:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a9d70d09:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a9d70d70:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a9d70dd6:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1a9d714be:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a9d71535:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a9d7159b:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a9d71612:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a9d71689:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a9d71711:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a9d71788:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a9d71810:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a9d71887:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1a9d7190e:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a9d71986:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a9d71a0d:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a9d71a85:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1a9d71b0c:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a9d71b84:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a9d71c0b:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a9d71c83:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a9d71d0a:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a9d71d82:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1a9d71e09:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1a9d71e81:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1a9d72008:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a9d70aea:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a9d70a95:;
	};
}



inline jule::I64 _21272c99e_getLastProcessError(void) {
	jule::I64 _429_err = _22b1a4990_GetLastErrno();;
	{
		auto &_match_expr{ _429_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a9d97d53:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a9d972e7:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a9d97748:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a9d977c0:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a9d97847:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a9d978be:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a9d97a9a:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a9d97b22:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a9d97b99:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 97LL) {
			_case_begin_1a9d97c21:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a9d97e74:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else {
			_case_begin_1a9d975a0:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		_match_end_1a9d9754a:;
	};
}



inline jule::Slice<char*> _212730b6c_strSliceToCstrSlice(jule::Slice<jule::Str> _2024_s) {
	jule::Slice<char*> _2113_cs = jule::Slice<char*>::alloc(0LL, (_2024_s.len() + 1LL), nullptr);;
	{
		auto &expr = _2024_s;
		auto it = expr.begin();
		_iter_begin_1a9da4029:;
		if (it != expr.end()) {
			jule::I64 _229_i = it - expr.begin();
			{
				_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(((char*)((&(_2024_s[_229_i][0LL])))));;
			}
			_iter_next_1a9da4029:;
			++it;
			_229_i++;
			goto _iter_begin_1a9da4029;
		}
		_iter_end_1a9da4029:;
	};
	_2113_cs = jule::alloc_for_append(_2113_cs,1);_2113_cs.__push(nullptr);;
	return _2113_cs;;
}



inline jule::I64 _2127310bd_execvp(jule::Str _2911_file, jule::Slice<jule::Str> _2922_argv) {
	jule::Slice<char*> _309_cargv = _212730b6c_strSliceToCstrSlice(_2922_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&(_2911_file[0LL])))), (char*const*)(&(_309_cargv[0LL]))));;
	};
}



inline jule::I64 _2127314a8_execve(jule::Str _3611_file, jule::Slice<jule::Str> _3622_argv, jule::Slice<jule::Str> _3635_env) {
	jule::Slice<char*> _379_cargv = _212730b6c_strSliceToCstrSlice(_3622_argv);;
	jule::Slice<char*> _389_cenv = _212730b6c_strSliceToCstrSlice(_3635_env);;
	{
		return static_cast<jule::I64>(execve(((char*)((&(_3611_file[0LL])))), (char*const*)(&(_379_cargv[0LL])), (char*const*)((&(_389_cenv[0LL])))));;
	};
}



inline void _2127320be_Exit(jule::I64 _129_code) {
	_22c09c14a_Exit(_129_code);
}



inline jule::Str _2127322bc_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _22ca24d58_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _22ca25111_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto &expr = _22ca22a8c_CppHeaderExts;
		auto it = expr.begin();
		_iter_begin_1a9dda11a:;
		if (it != expr.end()) {
			jule::Str &_3212_validExt = *it;
			{
				if ((_3121_ext == _3212_validExt)) {
					return true;;
				};
			}
			_iter_next_1a9dda11a:;
			++it;
			goto _iter_begin_1a9dda11a;
		}
		_iter_end_1a9dda11a:;
	};
	return false;;
}



inline jule::Bool _22ca253a8_IsValidCppExt(jule::Str _4118_ext) {
	if ((_4118_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto &expr = _22ca247c5_CppExts;
		auto it = expr.begin();
		_iter_begin_1a9dda978:;
		if (it != expr.end()) {
			jule::Str &_4512_e = *it;
			{
				if ((_4118_ext == _4512_e)) {
					return true;;
				};
			}
			_iter_next_1a9dda978:;
			++it;
			goto _iter_begin_1a9dda978;
		}
		_iter_end_1a9dda978:;
	};
	{
		auto &expr = _22ca24a6c_ObjectiveCppExts;
		auto it = expr.begin();
		_iter_begin_1a9ddbc87:;
		if (it != expr.end()) {
			jule::Str &_5012_e = *it;
			{
				if ((_4118_ext == _5012_e)) {
					return true;;
				};
			}
			_iter_next_1a9ddbc87:;
			++it;
			goto _iter_begin_1a9ddbc87;
		}
		_iter_end_1a9ddbc87:;
	};
	return false;;
}



inline jule::Str _22ca32409_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _22ca32d22_applyFmt(_3009_fmt,_30022_args);;
}



inline jule::Str _22ca326e5_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9ddd1d9:;
			{
				return _30413_arg.cast<jule::Str>(&__jule_any_type7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a9ddd250:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::U8>(&__jule_any_type134));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a9ddceca:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::I32>(&__jule_any_type3));;
			}
		}
		else {
			_case_begin_1a9ddca9b:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1a9ddc8ae:;
	};
}



inline jule::I64 _22ca3298c_findNextFmt(jule::Str _31716_fmt) {
	{
		auto &expr = _31716_fmt;
		auto it = expr.begin();
		_iter_begin_1a9ddd75b:;
		if (it != expr.end()) {
			jule::I64 _3189_i = it - expr.begin();
			jule::U8 &_31812_b = *it;
			{
				if ((_31812_b == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_1a9ddd75b:;
			++it;
			_3189_i++;
			goto _iter_begin_1a9ddd75b;
		}
		_iter_end_1a9ddd75b:;
	};
	return -1LL;;
}



inline jule::Str _22ca32d22_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto &expr = _32627_args;
		auto it = expr.begin();
		_iter_begin_1a9de061a:;
		if (it != expr.end()) {
			jule::Any &_32812_arg = *it;
			{
				jule::I64 _32913_i = _22ca3298c_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_1a9de061a;
				};
				_32713_s+=_32617_fmt.slice(0LL,_32913_i);
				_32713_s+=_22ca326e5_argToStr(_32812_arg);
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_1a9de061a:;
			++it;
			goto _iter_begin_1a9de061a;
		}
		_iter_end_1a9de061a:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _22ca33d9a_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _22ca352ca_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _22ca35583_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _22ca3582a_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _22ca35b49_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _22ca35de1_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _22ca36188_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _22ca36430_IsUnix(jule::Str _5511_os) {
	return (_22ca35583_IsDarwin(_5511_os) || _22ca3582a_IsLinux(_5511_os));;
}



inline jule::Bool _22ca367a4_Is32Bit(jule::Str _5812_arch) {
	return _22ca35b49_IsI386(_5812_arch);;
}



inline jule::Bool _22ca36a4b_Is64Bit(jule::Str _6112_arch) {
	return (_22ca35de1_IsAmd64(_6112_arch) || _22ca36188_IsArm64(_6112_arch));;
}



inline void _21271c6b4_init(void) {
	jule::Str _2513_path = _2127322bc_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_21271d198_PathWd=({
			auto except = _22c14beec_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_21271be77_PathExec=_22dcc7b87_Dir(_2513_path);
		_21271b5e7_PathStdlib=_22dcc702c_Join(jule::Slice<jule::Str>::make({_21271be77_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_21272ba14_PathApi=_22dcc702c_Join(jule::Slice<jule::Str>::make({_21271be77_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _212a0c9b5_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto &expr = _21295b969_UnaryOps;
		auto it = expr.begin();
		_iter_begin_1a9e39587:;
		if (it != expr.end()) {
			jule::Str &_31312_op = *it;
			{
				if ((_31214_kind == _31312_op)) {
					return true;;
				};
			}
			_iter_next_1a9e39587:;
			++it;
			goto _iter_begin_1a9e39587;
		}
		_iter_end_1a9e39587:;
	};
	return false;;
}



inline jule::Bool _212a0cca1_IsBinOp(jule::Str _32212_kind) {
	{
		auto &expr = _21295bbbc_BinOps;
		auto it = expr.begin();
		_iter_begin_1a9e39a2c:;
		if (it != expr.end()) {
			jule::Str &_32312_op = *it;
			{
				if ((_32212_kind == _32312_op)) {
					return true;;
				};
			}
			_iter_next_1a9e39a2c:;
			++it;
			goto _iter_begin_1a9e39a2c;
		}
		_iter_end_1a9e39a2c:;
	};
	return false;;
}



inline jule::Bool _212a0d367_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _212a0d60e_IsRawStr(_34210_k)));;
}



inline jule::Bool _212a0d60e_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _212a0d8a6_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _212a0dec2_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _212a0e269_IsFloat(jule::Str _35812_k) {
	if (_22dc943e5_HasPrefix(_35812_k,jule::Str("0x", 2))) {
		return _22dcc2bd7_ContainsAny(_35812_k,jule::Str(".pP", 3));;
	};
	return _22dcc2bd7_ContainsAny(_35812_k,jule::Str(".eE", 3));;
}



inline jule::Bool _212a0e511_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _212a0ea50_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _212a0ece7_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _212a10336_IsSpace(jule::I32 _39712_r) {
	{
		auto &expr = _21295b749_Spaces;
		auto it = expr.begin();
		_iter_begin_1a9e43481:;
		if (it != expr.end()) {
			jule::I32 &_39812_cr = *it;
			{
				if ((_39712_r == _39812_cr)) {
					return true;;
				};
			}
			_iter_next_1a9e43481:;
			++it;
			goto _iter_begin_1a9e43481;
		}
		_iter_end_1a9e43481:;
	};
	return false;;
}



inline jule::Bool _212a10787_IsLetter(jule::I32 _40713_r) {
	return _22db5d006_IsLetter(_40713_r);;
}



inline jule::Bool _212a10cc6_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _212a1106d_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _212a11315_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _212a115ac_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1a9e48244:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1a9e47a6d:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1a9e47ad4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a9e47a07:;
			{
				return false;;
			}
		}
		_match_end_1a9e4793b:;
	};
}



inline jule::Bool _212a11854_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _212a11aeb_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto &expr = _212a067b1_PostfixOps;
		auto it = expr.begin();
		_iter_begin_1a9e4b599:;
		if (it != expr.end()) {
			jule::Str &_46312_op = *it;
			{
				if ((_46216_kind == _46312_op)) {
					return true;;
				};
			}
			_iter_next_1a9e4b599:;
			++it;
			goto _iter_begin_1a9e4b599;
		}
		_iter_end_1a9e4b599:;
	};
	return false;;
}



inline jule::Bool _212a11d93_IsAssignOp(jule::Str _47215_kind) {
	if (_212a11aeb_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto &expr = _212a06aad_AssignOps;
		auto it = expr.begin();
		_iter_begin_1a9e4c798:;
		if (it != expr.end()) {
			jule::Str &_47612_op = *it;
			{
				if ((_47215_kind == _47612_op)) {
					return true;;
				};
			}
			_iter_next_1a9e4c798:;
			++it;
			goto _iter_begin_1a9e4c798;
		}
		_iter_end_1a9e4c798:;
	};
	return false;;
}



inline jule::Ptr<_212a12646_File> _212a13b75_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_212a12646_File>(_212a12646_File{._field_Path=_6315_path, });;
}



inline _22ca31eb9_Log _212a15418_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_212a12646_File>& _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=_11133_f.get()._field_Path, ._field_Text=_22ca32409_Logf(_11143_fmt,_11156_args), };;
}



inline jule::Bool _212a1579d_bytesHasPrefix(jule::Slice<jule::U8>& _12120_bytes, jule::Str _12135_prefix) {
	if ((_12120_bytes.len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto &expr = _12135_prefix;
		auto it = expr.begin();
		_iter_begin_1a9e57660:;
		if (it != expr.end()) {
			jule::I64 _1259_i = it - expr.begin();
			{
				if ((_12120_bytes[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1a9e57660:;
			++it;
			_1259_i++;
			goto _iter_begin_1a9e57660;
		}
		_iter_end_1a9e57660:;
	};
	return true;;
}



inline jule::Str _212a15ade_floatFmtE(jule::Slice<jule::U8>& _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= _13315_txt.len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = _13315_txt[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= _13315_txt.len())) {
			return __jule_func_result;;
		};
		if ((_13315_txt[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < _13315_txt.len()); (_13332_i)++) {
		{
			_13913_b=_13315_txt[_13332_i];
			if (((_13913_b != '_') && (!(_212a10cc6_IsDecimal(_13913_b))))) {
				goto _iter_end_1a9e5ab08;
			};
		}
	_iter_next_1a9e5ab08:;
	}
	_iter_end_1a9e5ab08:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_13315_txt.slice(0LL,_13332_i));
	return __jule_func_result;;
}



inline jule::Str _212a15e74_floatFmtP(jule::Slice<jule::U8>& _16715_txt, jule::I64 _16728_i) {
	return _212a15ade_floatFmtE(_16715_txt,_16728_i);;
}



inline jule::Str _212a162b5_floatFmtDotnp(jule::Slice<jule::U8>& _17119_txt, jule::I64 _17136_i) {
	if ((_17119_txt[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < _17119_txt.len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = _17119_txt[_17136_i];;
			{
				
				if ((_17913_b == '_') || _212a10cc6_IsDecimal(_17913_b)) {
					_case_begin_1a9e5d963:;
					{
						goto _iter_next_1a9e5cd08;
					}
				}
				else if (_212a17a69_isFloatFmtP(_17913_b,_17136_i)) {
					_case_begin_1a9e5d9c9:;
					{
						return _212a15e74_floatFmtP(_17119_txt,_17136_i);;
					}
				}
				else {
					_case_begin_1a9e5d8ec:;
					{
						goto _iter_end_1a9e5cd08;
					}
				}
				_match_end_1a9e5d886:;
			};
		}
	_iter_next_1a9e5cd08:;
	}
	_iter_end_1a9e5cd08:;;
	return jule::Str();;
}



inline jule::Str _212a16606_floatFmtDotfp(jule::Slice<jule::U8>& _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _212a15ade_floatFmtE(_19219_txt,_19236_i);;
}



inline jule::Str _212a16947_floatFmtDotp(jule::Slice<jule::U8>& _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _212a15ade_floatFmtE(_19718_txt,_19735_i);;
}



inline jule::Str _212a16d98_floatNum(jule::Slice<jule::U8>& _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= _20214_txt.len())) {
		__jule_func_result = static_cast<jule::Str>(_20214_txt);
		return __jule_func_result;;
	};
	if ((_20214_txt[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < _20214_txt.len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = _20214_txt[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _212a15ade_floatFmtE(_20214_txt,_20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_212a10cc6_IsDecimal(_21213_b))))) {
				goto _iter_end_1a9e612e5;
			};
		}
	_iter_next_1a9e612e5:;
	}
	_iter_end_1a9e612e5:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_20214_txt.slice(0LL,_20231_i));
	return __jule_func_result;;
}



inline jule::Str _212a17140_commonNum(jule::Slice<jule::U8>& _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < _22715_txt.len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = _22715_txt[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1a9e65261:;
					{
						__jule_func_result = _212a16d98_floatNum(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1a9e652d8:;
					{
						goto _iter_next_1a9e6456d;
					}
				}
				else if (_212a17728_isFloatFmtE(_23113_b,_22813_i)) {
					_case_begin_1a9e65360:;
					{
						__jule_func_result = _212a15ade_floatFmtE(_22715_txt,_22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_212a10cc6_IsDecimal(_23113_b)))) {
					_case_begin_1a9e653d7:;
					{
						goto _iter_end_1a9e6456d;
					}
				}
				_match_end_1a9e65184:;
			};
		}
	_iter_next_1a9e6456d:;
	}
	_iter_end_1a9e6456d:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_22715_txt.slice(0LL,_22813_i));
	return __jule_func_result;;
}



inline jule::Str _212a173d7_binaryNum(jule::Slice<jule::U8>& _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_212a1579d_bytesHasPrefix(_25015_txt,jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_25015_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < _25015_txt.len()); (_25913_i)++) {
		{
			if (((_25015_txt[_25913_i] != '_') && (!(_212a1106d_IsBinary(_25015_txt[_25913_i]))))) {
				goto _iter_end_1a9e66b69;
			};
		}
	_iter_next_1a9e66b69:;
	}
	_iter_end_1a9e66b69:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_25015_txt.slice(0LL,_25913_i));
	return __jule_func_result;;
}



inline jule::Bool _212a17728_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _212a17a69_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _212a17daa_isFloatFmtDotnp(jule::Slice<jule::U8>& _28021_txt, jule::I64 _28038_i) {
	if ((_28021_txt[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < _28021_txt.len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = _28021_txt[_28038_i];;
			{
				
				if ((_28713_b == '_') || _212a10cc6_IsDecimal(_28713_b)) {
					_case_begin_1a9e6ca93:;
					{
						goto _iter_next_1a9e6b8a5;
					}
				}
				else if (_212a17a69_isFloatFmtP(_28713_b,_28038_i)) {
					_case_begin_1a9e6cb09:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a9e6ca2c:;
					{
						goto _iter_end_1a9e6b8a5;
					}
				}
				_match_end_1a9e6c9b6:;
			};
		}
	_iter_next_1a9e6b8a5:;
	}
	_iter_end_1a9e6b8a5:;;
	return false;;
}



inline jule::Bool _212a181eb_isFloatFmtDotp(jule::Slice<jule::U8>& _30120_txt, jule::I64 _30133_i) {
	{
		
		if ((_30120_txt.len() < 3LL)) {
			_case_begin_1a9e6e787:;
			{
				goto _case_begin_1a9e6e0b1;
			}
		}
		else if ((_30120_txt[_30133_i] != '.')) {
			_case_begin_1a9e6e0b1:;
			{
				goto _case_begin_1a9e6e127;
			}
		}
		else if (((_30120_txt[(_30133_i + 1LL)] != 'p') && (_30120_txt[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1a9e6e127:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a9e6e04a:;
			{
				return true;;
			}
		}
		_match_end_1a9e6de7e:;
	};
}



inline jule::Bool _212a1853c_isFloatFmtDotfp(jule::Slice<jule::U8>& _31421_txt, jule::I64 _31434_i) {
	{
		
		if ((_31421_txt.len() < 4LL)) {
			_case_begin_1a9e71a86:;
			{
				goto _case_begin_1a9e713c1;
			}
		}
		else if ((_31421_txt[_31434_i] != '.')) {
			_case_begin_1a9e713c1:;
			{
				goto _case_begin_1a9e71437;
			}
		}
		else if (((_31421_txt[(_31434_i + 1LL)] != 'f') && (_31421_txt[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1a9e71437:;
			{
				goto _case_begin_1a9e7149d;
			}
		}
		else if (((_31421_txt[(_31434_i + 2LL)] != 'p') && (_31421_txt[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1a9e7149d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a9e70e5e:;
			{
				return true;;
			}
		}
		_match_end_1a9e70d93:;
	};
}



inline jule::Str _212a1898d_octalNum(jule::Slice<jule::U8>& _32914_txt) {
	jule::Str __jule_func_result;
	if ((_32914_txt[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if ((_32914_txt.len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if ((_32914_txt[1LL] == 'o')) {
		if ((_32914_txt.len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < _32914_txt.len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = _32914_txt[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _212a16d98_floatNum(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (_212a17728_isFloatFmtE(_35013_b,_34813_i)) {
				__jule_func_result = _212a15ade_floatFmtE(_32914_txt,_34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_212a11315_IsOctal(_35013_b))))) {
				goto _iter_end_1a9e75ace;
			};
		}
	_iter_next_1a9e75ace:;
	}
	_iter_end_1a9e75ace:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_32914_txt.slice(0LL,_34813_i));
	return __jule_func_result;;
}



inline jule::Str _212a18c35_hexNum(jule::Slice<jule::U8>& _37112_txt) {
	jule::Str __jule_func_result;
	if ((_37112_txt.len() < 3LL)) {
		return __jule_func_result;;
	};
	if (((_37112_txt[0LL] != '0') || ((_37112_txt[1LL] != 'x') && (_37112_txt[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < _37112_txt.len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = _37112_txt[_38013_i];;
			{
				
				if (_212a181eb_isFloatFmtDotp(_37112_txt,_38013_i)) {
					_case_begin_1a9e7bae6:;
					{
						__jule_func_result = _212a16947_floatFmtDotp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_212a1853c_isFloatFmtDotfp(_37112_txt,_38013_i)) {
					_case_begin_1a9e7bb6d:;
					{
						__jule_func_result = _212a16606_floatFmtDotfp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_212a17a69_isFloatFmtP(_38313_b,_38013_i)) {
					_case_begin_1a9e7bbe5:;
					{
						__jule_func_result = _212a15e74_floatFmtP(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (_212a17daa_isFloatFmtDotnp(_37112_txt,_38013_i)) {
					_case_begin_1a9e7bc6c:;
					{
						__jule_func_result = _212a162b5_floatFmtDotnp(_37112_txt,_38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_212a115ac_IsHex(_38313_b))))) {
					_case_begin_1a9e7bce4:;
					{
						goto _iter_end_1a9e7ad37;
					}
				}
				_match_end_1a9e7ba08:;
			};
		}
	_iter_next_1a9e7ad37:;
	}
	_iter_end_1a9e7ad37:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_37112_txt.slice(0LL,_38013_i));
	return __jule_func_result;;
}



inline jule::Str _212a19076_hexEscape(jule::Slice<jule::U8>& _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if ((_40415_txt.len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_212a115ac_IsHex(_40415_txt[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a9e7e4bc:;
	}
	_iter_end_1a9e7e4bc:;;
	__jule_func_result=static_cast<jule::Str>(_40415_txt.slice(0LL,_40428_n));
	return __jule_func_result;;
}



inline jule::Str _212a1931d_bigUnicodePointEscape(jule::Slice<jule::U8>& _42227_txt) {
	return _212a19076_hexEscape(_42227_txt,10LL);;
}



inline jule::Str _212a195d7_littleUnicodePointEscape(jule::Slice<jule::U8>& _42730_txt) {
	return _212a19076_hexEscape(_42730_txt,6LL);;
}



inline jule::Str _212a19791_hexByteEscape(jule::Slice<jule::U8>& _43219_txt) {
	return _212a19076_hexEscape(_43219_txt,4LL);;
}



inline jule::Str _212a19a27_byteEscape(jule::Slice<jule::U8>& _43716_txt) {
	jule::Str __jule_func_result;
	if ((_43716_txt.len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_212a11315_IsOctal(_43716_txt[1LL]))) || (!(_212a11315_IsOctal(_43716_txt[2LL])))) || (!(_212a11315_IsOctal(_43716_txt[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>(_43716_txt.slice(0LL,4LL));
	return __jule_func_result;;
}



inline jule::Slice<_22ca31eb9_Log> _212a1e521_Lex(jule::Ptr<_212a12646_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_212a1a20e_lex _83113_lex = _212a1a20e_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_212a1cca0_newLine(&_83113_lex);
	_212a1ac9d_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1eae9d225_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1eaea56a0_Len64(_6119_x)));;
}



inline jule::I64 _1eae9e15a_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1eae9ece8_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1eae9ea51_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1eae9d830__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1eae9ece8_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1eae9dde6__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1eaea5408_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1eaea56a0_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1eaea6360_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1eaea79e3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1eadca0b9_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1eadca3a5_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1eadca64c_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1eadca96b_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1eadcce57_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1aa109647:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1eaeabb3a_IsInf(_4714_f,0LL) || _1eaeab8c6_IsNaN(_4714_f)) {
			_case_begin_1aa1096be:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1aa109537:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1eaeabc6c_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1eadca64c_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1eadca96b_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1eaeab794_NaN(void) {
	return static_cast<jule::F64>(_1eadca96b_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1eaeab8c6_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1eaeaba08_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1eadca96b_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1eadca96b_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1eaeabb3a_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1eaeabc6c_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1eaead257_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1eaeacb3b_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1eaeab8c6_IsNaN(_1118_x) || _1eaeabb3a_IsInf(_1118_x,1LL)) {
			_case_begin_1a91d4624:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a91d469b:;
			{
				return static_cast<jule::F64>(_1eaeab794_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a91d4723:;
			{
				return static_cast<jule::F64>(_1eaeaba08_Inf(-1LL));;
			}
		}
		_match_end_1a91d4558:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1eadcce57_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1eaead257_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1eadca96b_F64FromBits(static_cast<jule::U64>((_1eadca64c_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1eaeb2008_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1eaead257_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1aa282616:;
		}
		_iter_end_1aa282616:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1eaeb2448_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1eadcce57_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1eaeacb3b_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _22bec87a2_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_22bec8ad2_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1eaed9bac_max(static_cast<jule::I64>((_7832_prec + 4LL)),24LL), 0),_7813_f,_7821_fmt,_7832_prec,_7843_bit_size));;
}



inline jule::Slice<jule::U8> _22bec8ad2_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_22c00d485_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa3dd200:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1eadca0b9_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_22c00d485_floatInfo>)((&(_22c024644_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa3dd3cb:;
			{
				_8313_bits=static_cast<jule::U64>(_1eadca64c_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_22c00d485_floatInfo>)((&(_22c040b9e_f64info))));
			}
		}
		else {
			_case_begin_1aa3dcad4:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1aa3db7d6:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1aa3e1a1c:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1aa3e3e5e:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1aa3e4107:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1aa3e3007:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1aa3e2e3b:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1aa3e2589:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1aa3dd442:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1aa3e19b7:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1eaed9816_fmtB(_8220_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1eaed9948_fmtX(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	;
	_1eaed9041_decimalSlice _13213_digs = _1eaed9041_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1eaee2566_ryuFtoaShortest(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),(*(_8413_flt)));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa3e7c54:;
				{
					_8258_prec=static_cast<jule::I64>(_1eaed9bac_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)),0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa3e7d31:;
				{
					_8258_prec=static_cast<jule::I64>(_1eaed9bac_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa3e7d97:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1aa3e6ed9:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa3e998c:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa3ea020:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1aa3e9e21:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1aa3e9cde:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1eaee13bc_ryuFtoaFixed32(_13213_digs,static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)),static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1eaee180c_ryuFtoaFixed64(_13213_digs,_9813_mant,static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))),_15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _22c026a0e_bigFtoa(_8220_dst,_8258_prec,_8243_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));;
	};
	return _1eaed922d_fmtDigits(_8220_dst,_1359_shortest,_969_neg,_13213_digs,_8258_prec,_8243_fmt);;
}



inline jule::Slice<jule::U8> _22c026a0e_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _22c00d485_floatInfo& _18327_flt) {
	_1eaee605e_decimal _18413_d = _1eaee605e_decimal{};;
	_1eaee6438_assign(&_18413_d, _1835_mant);
	_1eaee66ad_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>(_18327_flt._field_mantbits))));
	_1eaed9041_decimalSlice _18713_digs = _1eaed9041_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1eaed9360_roundShortest(_18413_d,_1835_mant,_18316_exp,_18327_flt);
		_18713_digs=_1eaed9041_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa3eeed1:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa402687:;
				{
					_18233_prec=static_cast<jule::I64>(_1eaed9bac_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)),0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa402742:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1aa4023bd:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1aa4040b2:;
				{
					_1eaee6e2d_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1aa404139:;
				{
					_1eaee6e2d_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1aa4041b1:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1eaee6e2d_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1aa403e91:;
		};
		_18713_digs=_1eaed9041_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1eaed922d_fmtDigits(_18216_dst,_1889_shortest,_18255_neg,_18713_digs,_18233_prec,_18244_fmt);;
}



inline jule::Slice<jule::U8> _1eaed922d_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1eaed9041_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1aa407802:;
			{
				return _1eaed9492_fmtE(_21918_dst,_21947_neg,_2205_digs,_22029_prec,_22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa407868:;
			{
				return _1eaed95c4_fmtF(_21918_dst,_21947_neg,_2205_digs,_22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1aa4078ce:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1eaed9492_fmtE(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>((_22029_prec - 1LL)),static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1eaed95c4_fmtF(_21918_dst,_21947_neg,_2205_digs,static_cast<jule::I64>(_1eaed9bac_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)),0LL)));;
			}
		}
		_match_end_1aa4076ae:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1eaed9360_roundShortest(_1eaee605e_decimal& _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _22c00d485_floatInfo& _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		_25723_d._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = (_25757_flt._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * (_25723_d._field_dp - _25723_d._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)))))) {
		return;;
	};
	_1eaee605e_decimal _28713_upper = _1eaee605e_decimal{};;
	_1eaee6438_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1eaee66ad_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << _25757_flt._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1eaee605e_decimal _30613_lower = _1eaee605e_decimal{};;
	_1eaee6438_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1eaee66ad_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>(_25757_flt._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + _25723_d._field_dp);;
			if ((_33513_mi >= _25723_d._field_nd)) {
				goto _iter_end_1aa4154be;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=_25723_d._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1aa41a639:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1aa41a6b1:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1aa41a738:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1aa41a56d:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1aa41d928:;
					{
						_1eaee6e2d_round(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1aa41d9a0:;
					{
						_1eaee6933_roundDown(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1aa41da27:;
					{
						_1eaee6ba8_roundUp(&_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1aa41d85c:;
			};
		}
	_iter_next_1aa4154be:;
	}
	_iter_end_1aa4154be:;;
}



inline jule::Slice<jule::U8> _1eaed9492_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1eaed9041_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1eaed9a7a_min(_39637_d._field_nd,static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i,_41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1aa4209d5:;
		}
		_iter_end_1aa4209d5:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1aa425501:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1aa425aa6:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1aa425754:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1aa425952:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1eaed95c4_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1eaed9041_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1eaed9a7a_min(_45137_d._field_nd,_45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL,_45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1aa429d85:;
		}
		_iter_end_1aa429d85:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1aa42b55c:;
		}
		_iter_end_1aa42b55c:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1eaed9816_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _22c00d485_floatInfo& _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1eaeead66_fmtBits(_48413_dst,_48437_mant,10LL,false,true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>(_48463_flt._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1eaeead66_fmtBits(_48413_dst,static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)),10LL,(_48452_exp < 0LL),true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1eaed9948_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _22c00d485_floatInfo& _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - _50735_flt._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1aa42e6a3:;
	}
	_iter_end_1aa42e6a3:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1aa437128:;
		}
		_iter_end_1aa437128:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1aa4389a9:;
		}
		_iter_end_1aa4389a9:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1eaeda20c_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1aa435cd6:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1aa435bc6:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1aa43b391:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1aa43b57d:;
	};
	return _50613_dst;;
}



inline jule::I64 _1eaed9a7a_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1eaed9bac_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1eaeda20c_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1ea935383_ConvError _1eaeda33e_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1ea935383_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1aa443233:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1aa443112:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1eaeda20c_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1aa445037:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1eaeda20c_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1aa444d4a:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1eaeda20c_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1aa444db1:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aa4449a4:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1aa4448d8:;
					};
				};
			}
		}
		else {
			_case_begin_1aa44241e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1aa4423a8:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aa449c1d:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aa449338:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aa449613:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1aa44948c:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aa449701:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aa44ad62:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1aa449943:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto &expr = _5118_s;
		auto it = expr.begin();
		_iter_begin_1aa44be73:;
		if (it != expr.end()) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1aa44c9bd:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1eaeda20c_lower(_10912_c)) && (_1eaeda20c_lower(_10912_c) <= 'z'))) {
						_case_begin_1aa44d2b5:;
						{
							_11017_d=static_cast<jule::U8>(((_1eaeda20c_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1aa44cddb:;
						{
							goto _iter_next_1aa44be73;
						}
					}
					else {
						_case_begin_1aa44cd75:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1aa44cd0e:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1aa44be73:;
			++it;
			goto _iter_begin_1aa44be73;
		}
		_iter_end_1aa44be73:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1eaeda471_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaeda33e_parseUint(_14618_s,_14630_base,_14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type135));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1eaeda5a3_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type135));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaeda33e_parseUint(_17217_s,_17225_base,_17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type135));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type135));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type135));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1eaeda9e3_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1eadca96b_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1eae9d225_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(_4122_man,_1eaedb1b9_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(_4122_man,_1eaedb1b9_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1eadca96b_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1eaedab25_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1eadca3a5_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1eae9d225_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(_11022_man,_1eaedb1b9_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(_11022_man,_1eaedb1b9_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1eadca3a5_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1eaedc385_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1a9c9757c:;
	}
	_iter_end_1a9c9757c:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1eaedc682_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a9c9b938:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1a9c9b9b0;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a9c9b9b0:;
			{
				jule::I64 _8317_caseN = _1eaedc385_commonPrefixLenIgnoreCase(_6816_s,jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1eaeaba08_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a9c9ba37:;
			{
				if ((_1eaedc385_commonPrefixLenIgnoreCase(_6816_s,jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1eaeab794_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a9c9b86c:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1eaedc929_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a9ca25a9:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a9ca2631:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a9ca2466:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1eaeda20c_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1a9ca879c:;
					{
						goto _iter_next_1a9ca7bec;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1a9ca8824:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1a9ca7bec;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1a9ca889b:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1a9ca7bec;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a9ca7bec;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1eaeda20c_lower(_13313_c))) && (_1eaeda20c_lower(_13313_c) <= 'f'))) {
					_case_begin_1a9ca8923:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1eaeda20c_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a9ca7bec;
					}
				}
				_match_end_1a9ca86c0:;
			};
			goto _iter_end_1a9ca7bec;
		}
	_iter_next_1a9ca7bec:;
	}
	_iter_end_1a9ca7bec:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1eaeda20c_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a9cb2d06;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1a9cb2d06:;
		}
		_iter_end_1a9cb2d06:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1eaede3a9_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _22c040b9e_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1a9cbcc67:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1a9cbccde:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1eaedd7c6_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1eaedd7c6_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1a9cbcd66:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1eaedd7c6_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9cbcb9b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1eaede794_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _22c024644_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1a9cc294d:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1a9cc29c5:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1eaeddb17_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1eaeddb17_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1a9cc2a4c:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1eaeddb17_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a9cc2882:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1ea935383_ConvError _1eaeded6b_atofHex(jule::Str _55112_s, _22c00d485_floatInfo& _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1ea935383_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << _55121_flt._field_expbits)) + _55121_flt._field_bias) - 2LL);;
	jule::I64 _5539_minExp = (_55121_flt._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>(_55121_flt._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> (_55121_flt._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1a9cc7854:;
	}
	_iter_end_1a9cc7854:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + _55121_flt._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a9cc9702:;
	}
	_iter_end_1a9cc9702:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a9cca1c5:;
	}
	_iter_end_1a9cca1c5:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + _55121_flt._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> _55121_flt._field_mantbits) == 0LLU)) {
		_55160_exp=_55121_flt._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << _55121_flt._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << _55121_flt._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - _55121_flt._field_bias) & static_cast<jule::I64>(((1LL << _55121_flt._field_expbits) - 1LL)))) << _55121_flt._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << _55121_flt._field_mantbits) << _55121_flt._field_expbits);
	};
	if ((_55121_flt == _22c024644_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1eadca3a5_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1eadca96b_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ea935383_ConvError _1eaee0223_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1ea935383_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaedc682_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaedc929_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaeded6b_atofHex(_61611_s.slice(0LL,__jule_func_result.__jule_result_arg1),_22c024644_f32info,_62410_mantissa,_62420_exp,_62425_neg,_62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1eaede794_atof32exact(_62410_mantissa,_62420_exp,_62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1eaedab25_eiselLemire32(_62410_mantissa,_62420_exp,_62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1eaedab25_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)),_62420_exp,_62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1eaee605e_decimal _66213_d = _1eaee605e_decimal{};;
	if ((!(_1eaedd0cd_set(&_66213_d, _61611_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1eaedd3db_floatBits(&_66213_d, _22c024644_f32info);
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1eadca3a5_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError _1eaee04ba_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaedc682_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaedc929_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaeded6b_atofHex(_67411_s.slice(0LL,__jule_func_result.__jule_result_arg1),_22c040b9e_f64info,_68210_mantissa,_68220_exp,_68225_neg,_68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1eaede3a9_atof64exact(_68210_mantissa,_68220_exp,_68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1eaeda9e3_eiselLemire64(_68210_mantissa,_68220_exp,_68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1eaeda9e3_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)),_68220_exp,_68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1eaee605e_decimal _71913_d = _1eaee605e_decimal{};;
	if ((!(_1eaedd0cd_set(&_71913_d, _67411_s.slice(0LL,__jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1eaedd3db_floatBits(&_71913_d, _22c040b9e_f64info);
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1eadca96b_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError _1eaee080b_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaee0223_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaee04ba_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1eaee0b4c_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ea935383_ConvError __jule_assign_result = _1eaee080b_parseFloatPrefix(_76515_s,_76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type135));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type135));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1eaee13bc_ryuFtoaFixed32(_1eaed9041_decimalSlice& _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_4924_d._field_nd = ___jule_assign_arg;
			_4924_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1eaea5408_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1eaee280d_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee4007_mult64bitPow10(_4945_mant,_6213_e2,_749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1eaee4733_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)),static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1eaee20e3_formatDecimal(_4924_d,static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)),(!(_8129_d0)),_9913_roundUp,_4966_prec);
	_4924_d._field_dp-=_749_q;
}



inline void _1eaee180c_ryuFtoaFixed64(_1eaed9041_decimalSlice& _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_12124_d._field_nd = ___jule_assign_arg;
			_12124_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1eaea56a0_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1eaee280d_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee43e2_mult128bitPow10(_12145_mant,_13113_e2,_1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1eaee4733_divisibleByPow5(_12145_mant,static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1eaee20e3_formatDecimal(_12124_d,_15314_di,(!(_15329_d0)),_17113_roundUp,_12166_prec);
	_12124_d._field_dp-=_1469_q;
}



inline void _1eaee20e3_formatDecimal(_1eaed9041_decimalSlice& _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1eaee1b3c_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a9d11470:;
	}
	_iter_end_1a9d11470:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	_20023_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			_20023_d._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1a9d14e24:;
	}
	_iter_end_1a9d14e24:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		_20023_d._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while ((_20023_d._field_d[(_20023_d._field_nd - 1LL)] == '0')) {
		{
			(_20023_d._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a9d1ac4e:;
	}
	_iter_end_1a9d1ac4e:;;
	_20023_d._field_dp=static_cast<jule::I64>((_20023_d._field_nd + _20213_trimmed));
}



inline void _1eaee2566_ryuFtoaShortest(_1eaed9041_decimalSlice& _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _22c00d485_floatInfo& _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			_26125_d._field_nd = ___jule_assign_arg;
			_26125_d._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1eae9ece8_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1eaee3534_ryuDigits(_26125_d,_26146_mant,_26146_mant,_26146_mant,true,false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1eaee2e90_computeBounds(_26146_mant,_26157_exp,_26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1eaee3534_ryuDigits(_26125_d,_27310_ml,_27314_mc,_27318_mu,true,false);
		return;;
	};
	jule::I64 _2799_q = (_1eaee280d_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if ((_26168_flt == _22c024644_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee4007_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)),_27326_e2,_2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee4007_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)),_27326_e2,_2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee4007_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)),_27326_e2,_2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee43e2_mult128bitPow10(_27310_ml,_27326_e2,_2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee43e2_mult128bitPow10(_27314_mc,_27326_e2,_2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1eaee43e2_mult128bitPow10(_27318_mu,_27326_e2,_2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1eaee4733_divisibleByPow5(_27310_ml,static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1eaee4733_divisibleByPow5(_27314_mc,static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1eaee4733_divisibleByPow5(_27318_mu,static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1eaee3534_ryuDigits(_26125_d,_28313_dl,_28413_dc,_28513_du,_3669_c0,_34713_cup);
	_26125_d._field_dp-=_2799_q;
}



inline jule::I64 _1eaee280d_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1eaee2aa5_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1eaee2e90_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _22c00d485_floatInfo& _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << _3966_flt._field_mantbits)) || (_39529_exp == ((_3966_flt._field_bias + 1LL) - static_cast<jule::I64>(_3966_flt._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1eaee3534_ryuDigits(_1eaed9041_decimalSlice& _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1eaee49ca_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1eaee49ca_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1eaee49ca_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1eaee3b1c_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1eaee3b1c_ryuDigits32(_40919_d,_41014_lhi,_41110_chi,_41210_uhi,_40978_c0,_40992_cup,8LL);
		_40919_d._field_dp+=9LL;
	} else {
		_40919_d._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				_40919_d._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1a9d3abb4:;
		}
		_iter_end_1a9d3abb4:;;
		_40919_d._field_d=_40919_d._field_d.slice(static_cast<jule::I64>(_42817_n));
		_40919_d._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1eaee3b1c_ryuDigits32(_40919_d,_41019_llo,_41115_clo,_41215_ulo,_40978_c0,_40992_cup,static_cast<jule::I64>((_40919_d._field_nd + 8LL)));
	};
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[(_40919_d._field_nd - 1LL)] == '0'))) {
		{
			(_40919_d._field_nd)--;
		}
	_iter_next_1a9d3b247:;
	}
	_iter_end_1a9d3b247:;;
	while (((_40919_d._field_nd > 0LL) && (_40919_d._field_d[0LL] == '0'))) {
		{
			(_40919_d._field_nd)--;
			(_40919_d._field_dp)--;
			_40919_d._field_d=_40919_d._field_d.slice(1LL);
		}
	_iter_next_1a9d3a8b7:;
	}
	_iter_end_1a9d3a8b7:;;
}



inline void _1eaee3b1c_ryuDigits32(_1eaed9041_decimalSlice& _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		_45421_d._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1a9d41879;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a9d41879:;
	}
	_iter_end_1a9d41879:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > _45421_d._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			_45421_d._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			_45421_d._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1aa536865:;
	}
	_iter_end_1aa536865:;;
	if ((_51013_n == _45421_d._field_nd)) {
		_45421_d._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	_45421_d._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	_45421_d._field_dp=static_cast<jule::I64>((_45421_d._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1eaee4007_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1eaedb1b9_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)),_54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1eaee2aa5_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1eaee43e2_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1eaedb1b9_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1eaee2aa5_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(_56220_m,_57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea79e3_Mul64(_56220_m,_57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1eaea6360_Add64(_57910_l1,_58018_h0,0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1eaee4733_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1aa5459a6:;
	}
	_iter_end_1aa5459a6:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1eaee49ca_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1eaee7747_trim(_1eaee605e_decimal& _45314_a) {
	while (((_45314_a._field_nd > 0LL) && (_45314_a._field_d[(_45314_a._field_nd - 1LL)] == '0'))) {
		{
			(_45314_a._field_nd)--;
		}
	_iter_next_1aa549070:;
	}
	_iter_end_1aa549070:;;
	if ((_45314_a._field_nd == 0LL)) {
		_45314_a._field_dp=0LL;
	};
}



inline void _1eaee7a00_rightShift(_1eaee605e_decimal& _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= _46320_a._field_nd)) {
				if ((_46813_n == 0LLU)) {
					_46320_a._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1aa54c89d:;
				}
				_iter_end_1aa54c89d:;;
				goto _iter_end_1aa54b4e5;
			};
			jule::U64 _48213_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1aa54b4e5:;
	}
	_iter_end_1aa54b4e5:;;
	_46320_a._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < _46320_a._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>(_46320_a._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1aa550197:;
	}
	_iter_end_1aa550197:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				_46320_a._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				_46320_a._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1aa551b6b:;
	}
	_iter_end_1aa551b6b:;;
	_46320_a._field_nd=_46513_w;
	_1eaee7747_trim(_46320_a);
}



inline jule::Bool _1eaee7e62_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1aa554a09:;
	}
	_iter_end_1aa554a09:;;
	return false;;
}



inline void _1eaee81d7_leftShift(_1eaee605e_decimal& _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1eaee59ba_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1eaee7e62_prefixIsLessThan(_53119_a._field_d,_53119_a._field_nd,_1eaee59ba_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = _53119_a._field_nd;;
	jule::I64 _53813_w = (_53119_a._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>(_53119_a._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1aa5580b2:;
	}
	_iter_end_1aa5580b2:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				_53119_a._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				_53119_a._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1aa55ab53:;
	}
	_iter_end_1aa55ab53:;;
	_53119_a._field_nd+=_53213_delta;
	if ((_53119_a._field_nd >= 800LL)) {
		_53119_a._field_nd=800LL;
	};
	_53119_a._field_dp+=_53213_delta;
	_1eaee7747_trim(_53119_a);
}



inline jule::Bool _1eaee8528_shouldRoundUp(_1eaee605e_decimal& _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= _57819_a._field_nd))) {
		return false;;
	};
	if (((_57819_a._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == _57819_a._field_nd))) {
		if (_57819_a._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && (((_57819_a._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return (_57819_a._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1eaee9b45_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1eaeea591_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1eaeead66_fmtBits(nullptr,_6012_i,_6020_base,false,false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1eaee9eca_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1eaeea591_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1eaeead66_fmtBits(nullptr,static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)),_7119_base,(_7111_i < 0LL),false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1eaeea272_Itoa(jule::I64 _809_i) {
	return _1eaee9eca_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)),10LL);;
}



inline jule::Str _1eaeea591_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,(_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU),((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1eaeea838_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1eaeead66_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1aa598e9e:;
		}
		_iter_end_1aa598e9e:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1eaeea838_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1eae9e15a_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1aa5a277c:;
		}
		_iter_end_1aa5a277c:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1aa5a5395:;
		}
		_iter_end_1aa5a5395:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1eaeec274_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa5be711:;
			{
				return _1eaeeb7c3_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa5be777:;
			{
				return _1eaeeba8c_SysUint;;
			}
		}
		else {
			_case_begin_1aa5beb0c:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aa5c00b3:;
	};
}



inline jule::I64 _1eaeec51b_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa5c10c5:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa5c113b:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa5c0b63:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa5c0bc9:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1aa5c0c40:;
			{
				return _1eaeeb55e_BitSize;;
			}
		}
		else {
			_case_begin_1aa5c068a:;
			{
				return -1LL;;
			}
		}
		_match_end_1aa5c0ab9:;
	};
}



inline jule::Str _1eaeec83a_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa5c3061:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa5c30c7:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa5c2d74:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa5c2dda:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1aa5c1317:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa5c2aaa:;
	};
}



inline jule::Str _1eaeecad2_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aa5c44d5:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aa5c454b:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aa5c42d7:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa5c434d:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1aa5c3d53:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa5c3c21:;
	};
}



inline jule::Str _1eaeecd79_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aa5c5959:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aa5c59c0:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1aa5c52c7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aa5c5195:;
	};
}



inline jule::Bool _1eaeed929_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1eaee0b4c_ParseFloat(_15018_val,_15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1eaeedbc1_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aa5ca9a3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa5c9b06:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa5c9a5c:;
	};
}



inline jule::I64 _1eaeede68_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1aa5cb883:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1aa5cb8e9:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1aa5cb960:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa5cb0ad:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa5caee2:;
	};
}



inline jule::I64 _1eaeee210_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1aa5cd797:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1aa5cd80d:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1aa5cd874:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aa5ccbd6:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aa5cc7eb:;
	};
}



inline void _1eaeee375_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _2126e4108_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1aa5ce90d:;
				{
					_1eaeeb55e_BitSize=64LLU;
					_1eaeeb7c3_SysInt=jule::Str("i64", 3);
					_1eaeeba8c_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1aa5ce985:;
				{
					_1eaeeb55e_BitSize=32LLU;
					_1eaeeb7c3_SysInt=jule::Str("i32", 3);
					_1eaeeba8c_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1aa5ce853:;
		};
	};
}



inline void _1eaeee4da_init(void) {
	_1eaeee375_UpdateTarget();
}



inline jule::F64 _1eb003324_Min(jule::Str _6112_k) {
	_6112_k=_1eaeec274_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa5d22a1:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa5d2317:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa5d1cb7:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa5d1d3e:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa5d1db6:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa5d1e3d:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aa5cebb6:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa5ced81:;
	};
}



inline jule::F64 _1eb003610_Max(jule::Str _8312_k) {
	_8312_k=_1eaeec274_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa5d2768:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa5d3868:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa5d38ce:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa5d3945:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa5d39bc:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa5d3c31:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa5d3c97:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa5d3d1e:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa5d3d96:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa5d40a5:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aa5d348e:;
			{
				return 0LL;;
			}
		}
		_match_end_1aa5d3439:;
	};
}



inline jule::Bool _1eb003984_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _1eb003c70_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1eb004017_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _1eb004336_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _1eb0045cd_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _1eb004875_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1eb004b1c_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1eb004e91_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _1eb005238_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _1eb0054d0_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _1eb005821_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aa5dbce4:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa5dc5ca:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa5dc641:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa5dc0be:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1aa5dc135:;
			{
				return _1eb003984_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa5dc19b:;
			{
				return _1eb003c70_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa5dc212:;
			{
				return _1eb004017_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa5dc6da:;
			{
				return _1eb004336_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1aa5dc751:;
			{
				return _1eb0045cd_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa5dc7b7:;
			{
				return _1eb004875_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa5dc82d:;
			{
				return _1eb004b1c_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa5dc894:;
			{
				return _1eb004e91_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa5dc90a:;
			{
				return _1eb005238_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa5dc982:;
			{
				return _1eb0054d0_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1aa5dca09:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1aa5dca81:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_1aa5dbeae:;
			{
				return false;;
			}
		}
		_match_end_1aa5dbd7c:;
	};
}



inline jule::Bool _1eb005ab8_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _1eb005d60_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1eb006107_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _1eb00639e_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _1eb006800_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1eb006a97_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1eb006d3e_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _1eb0070d6_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1eb007427_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1aa5dd147:;
			{
				return _1eb00845b_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1aa5e569e:;
			{
				return _1eb008747_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1aa5e5715:;
			{
				return _1eb008747_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1aa5e577b:;
			{
				return _1eb005ab8_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1aa5e53c4:;
			{
				return _1eb005d60_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1aa5e543a:;
			{
				return _1eb006107_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1aa5e54a1:;
			{
				return _1eb00639e_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1aa5e5517:;
			{
				return _1eb006800_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1aa5e59ac:;
			{
				return _1eb006a97_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1aa5e5a23:;
			{
				return _1eb006d3e_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1aa5e5a89:;
			{
				return _1eb0070d6_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1aa5e5b11:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa5e525e:;
			{
				return false;;
			}
		}
		_match_end_1aa5e51b5:;
	};
}



inline jule::Bool _1eb00845b_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _1eb008747_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _1eb0089de_IsInt(jule::Str _4610_k) {
	return (_1eb00845b_IsSigInt(_4610_k) || _1eb008747_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1eb008d0d_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _1eb0090a5_IsNum(jule::Str _5610_k) {
	return (_1eb0089de_IsInt(_5610_k) || _1eb008d0d_IsFloat(_5610_k));;
}



inline jule::Bool _1eb00934c_IsSigNum(jule::Str _6113_k) {
	return (_1eb00845b_IsSigInt(_6113_k) || _1eb008d0d_IsFloat(_6113_k));;
}



inline void _1eb012cd4_lshiftUnsig(_1eb0095b1_Const& _59021_c, _1eb0095b1_Const& _59032_x) {
	jule::U64 _5919_l = _1eb00bd33_AsU64(&_59021_c);;
	jule::U64 _5929_r = _1eb00bd33_AsU64(&_59032_x);;
	_1eb00c592_SetU64(&_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1eb0130d1_rshiftUnsig(_1eb0095b1_Const& _59621_c, _1eb0095b1_Const& _59632_x) {
	jule::U64 _5979_l = _1eb00bd33_AsU64(&_59621_c);;
	jule::U64 _5989_r = _1eb00bd33_AsU64(&_59632_x);;
	_1eb00c592_SetU64(&_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1d0569059_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1d05691d0_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1d0581abb_runeFromEsqSeq(_1811_bytes,_2517_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1d0581219_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1d0581516_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1d0581e0c_strEsqSeq(_4210_bytes,_4813_i));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_22dc8e9a6_AppendRune(_4713_s,_5418_r);
			};
		}
	_iter_next_1aa662265:;
	}
	_iter_end_1aa662265:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1d05817ad_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aa666731:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aa666797:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aa66680d:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aa666874:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aa6668eb:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aa666973:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aa6669ea:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aa666a72:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aa666ae9:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aa666b71:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aa666610:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1d0581abb_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64& _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1d05817ad_tryBtoaCommonEsq(_9219_bytes.slice(_9239_i));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	(_9239_i)++;
	if (_9313_ok) {
		(_9239_i)++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[_9239_i] };
		
		if (_match_expr == 'u') {
			_case_begin_1aa66c7e2:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1eaeda471_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 5LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				_9239_i+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aa66c182:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1eaeda471_ParseUint(static_cast<jule::Str>(_9219_bytes.slice((_9239_i + 1LL),(_9239_i + 9LL))),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				_9239_i+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aa66c1e8:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice((_9239_i + 1LL),(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1eaeda471_ParseUint(static_cast<jule::Str>(_11313_seq),16LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1aa66a988:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice(_9239_i,(_9239_i + 3LL));;
				_9239_i+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1eaeda471_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)),8LL,64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1aa66ad73:;
	};
}



inline jule::Slice<jule::U8> _1d0581e0c_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64& _12434_i) {
	jule::I32 _1259_r = _1d0581abb_runeFromEsqSeq(_12414_bytes,_12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _1d067d02a_findFormatPrefix(jule::Slice<jule::U8>& _1022_bytes, jule::I64& _1038_start) {
	jule::I64 _1113_i = _1038_start;;
	while ((_1113_i < _1022_bytes.len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_1022_bytes.slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1aa6a6a6d:;
	}
	_iter_end_1aa6a6a6d:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1d0683b24_getFormatRange(jule::I64& _2724_i, jule::Slice<jule::U8>& _2737_bytes) {
	jule::I64 _289_start = _2724_i;;
	jule::I64 _2913_braces = 0LL;;
	while ((_2724_i < _2737_bytes.len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d642_DecodeRune(_2737_bytes.slice(_2724_i));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			_2724_i+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1aa6a9620:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aa6a9686:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return _2737_bytes.slice(_289_start,_2724_i);;
						};
					}
				}
				_match_end_1aa6a9312:;
			};
		}
	_iter_next_1aa6a88d8:;
	}
	_iter_end_1aa6a88d8:;;
	return nullptr;;
}



inline void _1d0683dcc_FmtByDefault(jule::Str& _4722_buf, jule::Any& _4733_arg) {
	if ((_4733_arg == nullptr)) {
		_4722_buf+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ _4733_arg };
		
		if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1aa6aa610:;
			{
				_4722_buf+=_22bec87a2_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>(_4733_arg.cast<jule::F32>(&__jule_any_type136))),'g',-1LL,32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1aa6ab39c:;
			{
				_4722_buf+=_22bec87a2_FmtFloat(static_cast<jule::F64>(_4733_arg.cast<jule::F64>(&__jule_any_type8)),'g',-1LL,64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1aa6ab556:;
			{
				_4722_buf+=_1eaee9eca_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I8>(&__jule_any_type137)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1aa6aa698:;
			{
				_4722_buf+=_1eaee9eca_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I16>(&__jule_any_type138)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aa6aaec3:;
			{
				_4722_buf+=_1eaee9eca_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I32>(&__jule_any_type3)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aa6ab039:;
			{
				_4722_buf+=_1eaee9eca_FmtInt(static_cast<jule::I64>(_4733_arg.cast<jule::I64>(&__jule_any_type4)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aa6ab5cd:;
			{
				_4722_buf+=_1eaee9b45_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U8>(&__jule_any_type134)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1aa6ab644:;
			{
				_4722_buf+=_1eaee9b45_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U16>(&__jule_any_type139)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1aa6ab6aa:;
			{
				_4722_buf+=_1eaee9b45_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U32>(&__jule_any_type140)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aa6ab721:;
			{
				_4722_buf+=_1eaee9b45_FmtUint(static_cast<jule::U64>(_4733_arg.cast<jule::U64>(&__jule_any_type5)),10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1aa6ab787:;
			{
				_4722_buf+=_4733_arg.cast<jule::Str>(&__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aa6ab7ed:;
			{
				if (_4733_arg.cast<jule::Bool>(&__jule_any_type6)) {
					_4722_buf+=jule::Str("true", 4);
				} else {
					_4722_buf+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1aa6aad6e:;
			{
				_4722_buf+=jule::to_str(_4733_arg);
			}
		}
		_match_end_1aa6a9b09:;
	};
}



inline void _1d06842a6_applyFmtByDefault(jule::Str& _8627_buf, jule::I64& _8642_j, jule::Slice<jule::Any>& _8651_args) {
	jule::Any _879_arg = _8651_args[_8642_j];;
	(_8642_j)++;
	_1d0683dcc_FmtByDefault(_8627_buf,_879_arg);
}



inline void _1d06846a2_applyFmt(jule::Slice<jule::U8>& _9418_fmt, jule::Str& _9436_buf, jule::I64& _9451_j, jule::Slice<jule::Any>& _9460_args) {
	if ((_9418_fmt.len() == 2LL)) {
		_1d06842a6_applyFmtByDefault(_9436_buf,_9451_j,_9460_args);
		return;;
	};
	if ((((((_9418_fmt.len() == 4LL) && (_9418_fmt[0LL] == '{')) && (_9418_fmt[1LL] == '{')) && (_9418_fmt[2LL] == '}')) && (_9418_fmt[3LL] == '}'))) {
		_9436_buf+=jule::Str("{}", 2);
		return;;
	};
	_22dcb6ca8_PushToStrBuffer(_9436_buf,_9418_fmt);
}



inline jule::Str _1d06849b0_Format(jule::Str& _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return _11312_fmt;;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _22dcb16ba_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, _11312_fmt.len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1d067d02a_findFormatPrefix(_11713_fmtBytes,_12013_last);;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1d067d02a_findFormatPrefix(_11713_fmtBytes,_12113_i))) {
		{
			_22dcb6ca8_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last,_12113_i));
			jule::Slice<jule::U8> _12417_format = _1d0683b24_getFormatRange(_12113_i,_11713_fmtBytes);;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1aa6b7e47;
			};
			_1d06846a2_applyFmt(_12417_format,_11813_buf,_11913_j,_11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_22dcb6ca8_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1aa6b7e47;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1aa6b7e47:;
	}
	_iter_end_1aa6b7e47:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_22dcb6ca8_PushToStrBuffer(_11813_buf,_11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1d06852c9_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1d06849b0_Format(_3011_fmt,_3021_args);;
}



inline jule::Bool _1eb028943_parameterUsesGenerics(jule::Ptr<_1eb025962_ParamIns>& _37431_p, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>& _37446_generics) {
	if (_1eb022970_IsSelf(_37431_p.get()._field_Decl.ptr())) {
		return false;;
	};
	return _1d05db20d_kindUsesGenerics(_37431_p.get()._field_Kind,_37446_generics);;
}



inline jule::Ptr<_1d05c88d2_TypeSymbol> _1d04e3885_buildType(jule::Ptr<_1ea30369c_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1d05995ea_Value> _1d04e3b71_buildExpr(jule::Ptr<_1ea307bbd_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d04e3e18_buildTypeAlias(jule::Ptr<_1ea31996b_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1d05c3811_TypeAlias>(_1d05c3811_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1d04e3885_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1ea2e3deb_Field> _1d04e4237_buildField(jule::Ptr<_1ea31d112_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1ea2e3deb_Field>(_1ea2e3deb_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1d04e3885_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ea2e3deb_Field>> _1d04e44ce_buildFields(jule::Slice<jule::Ptr<_1ea31d112_FieldDecl>>& _13421_decls) {
	jule::Slice<jule::Ptr<_1ea2e3deb_Field>> _13513_fields = jule::Slice<jule::Ptr<_1ea2e3deb_Field>>::alloc(0LL, _13421_decls.len());;
	{
		auto &expr = _13421_decls;
		auto it = expr.begin();
		_iter_begin_1aa915caa:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31d112_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1d04e4237_buildField(_13617_decl));;
			}
			_iter_next_1aa915caa:;
			++it;
			goto _iter_begin_1aa915caa;
		}
		_iter_end_1aa915caa:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d04e4776_buildStruct(jule::Ptr<_1ea31d8b5_StructDecl> _14220_decl) {
	return jule::new_ptr<_1ea31ed8e_Struct>(_1ea31ed8e_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1d04e44ce_buildFields(_14220_decl.get()._field_Fields), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1eb022343_Param> _1d04e4a1d_buildParam(jule::Ptr<_1ea313d0b_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1d04e3885_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1eb022343_Param>> _1d04e4d92_buildParams(jule::Slice<jule::Ptr<_1ea313d0b_ParamDecl>>& _16521_decls) {
	jule::Slice<jule::Ptr<_1eb022343_Param>> _16613_params = jule::Slice<jule::Ptr<_1eb022343_Param>>::alloc(0LL, _16521_decls.len());;
	{
		auto &expr = _16521_decls;
		auto it = expr.begin();
		_iter_begin_1aa9189a0:;
		if (it != expr.end()) {
			jule::Ptr<_1ea313d0b_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1d04e4a1d_buildParam(_16717_decl));;
			}
			_iter_next_1aa9189a0:;
			++it;
			goto _iter_begin_1aa9189a0;
		}
		_iter_end_1aa9189a0:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1eb021b6c_RetType> _1d04e5139_buildRetType(jule::Ptr<_1ea3067b0_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1eb021b6c_RetType>(_1eb021b6c_RetType{._field_Kind=_1d04e3885_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1eb023b80_Fn> _1d04e53d1_buildFn(jule::Ptr<_1ea31512b_FnDecl> _18316_decl) {
	return jule::new_ptr<_1eb023b80_Fn>(_1eb023b80_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1d04e5139_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1d04e4d92_buildParams(_18316_decl.get()._field_Params), });;
}



inline jule::Slice<jule::Ptr<_1eb023b80_Fn>> _1d04e5678_buildMethods(jule::Slice<jule::Ptr<_1ea31512b_FnDecl>>& _20122_decls) {
	jule::Slice<jule::Ptr<_1eb023b80_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1eb023b80_Fn>>::alloc(0LL, _20122_decls.len());;
	{
		auto &expr = _20122_decls;
		auto it = expr.begin();
		_iter_begin_1aa91c399:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31512b_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1d04e53d1_buildFn(_20317_decl));;
			}
			_iter_next_1aa91c399:;
			++it;
			goto _iter_begin_1aa91c399;
		}
		_iter_end_1aa91c399:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d04e5920_buildTrait(jule::Ptr<_1ea31dec0_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1d04ed4a5_Trait>(_1d04ed4a5_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1d04e5678_buildMethods(_20919_decl.get()._field_Methods), });;
}



inline jule::Ptr<_1d04eeb05_EnumItem> _1d04e5bb7_buildEnumItem(jule::Ptr<_1ea31b2ca_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1d04eeb05_EnumItem>(_1d04eeb05_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1d04e3b71_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>> _1d04e5e5e_buildEnumItems(jule::Slice<jule::Ptr<_1ea31b2ca_EnumItemDecl>>& _22624_decls) {
	jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1d04eeb05_EnumItem>>::alloc(0LL, _22624_decls.len());;
	{
		auto &expr = _22624_decls;
		auto it = expr.begin();
		_iter_begin_1aa91e7b9:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31b2ca_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1d04e5bb7_buildEnumItem(_22817_decl));;
			}
			_iter_next_1aa91e7b9:;
			++it;
			goto _iter_begin_1aa91e7b9;
		}
		_iter_end_1aa91e7b9:;
	};
	return _22713_items;;
}



inline jule::Ptr<_1d05005ea_Enum> _1d04e6206_buildEnum(jule::Ptr<_1ea31bd03_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1d05005ea_Enum>(_1d05005ea_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1d04e3885_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1d04e5e5e_buildEnumItems(_23418_decl.get()._field_Items)});;
}



inline jule::Ptr<_1d050162e_TypeEnumItem> _1d04e6657_buildTypeEnumItem(jule::Ptr<_1ea31c809_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1d050162e_TypeEnumItem>(_1d050162e_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1d04e3885_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>> _1d04e68ee_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ea31c809_TypeEnumItemDecl>>& _25228_decls) {
	jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1d050162e_TypeEnumItem>>::alloc(0LL, _25228_decls.len());;
	{
		auto &expr = _25228_decls;
		auto it = expr.begin();
		_iter_begin_1aa921e70:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31c809_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1d04e6657_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1aa921e70:;
			++it;
			goto _iter_begin_1aa921e70;
		}
		_iter_end_1aa921e70:;
	};
	return _25313_items;;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d04e6b96_buildTypeEnum(jule::Ptr<_1ea31ce14_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1d0501be5_TypeEnum>(_1d0501be5_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1d04e68ee_buildTypeEnumItems(_26022_decl.get()._field_Items)});;
}



inline jule::Ptr<_1d0550a13_Var> _1d04e6e3d_buildVar(jule::Ptr<_1ea31610a_VarDecl> _26917_decl) {
	return jule::new_ptr<_1d0550a13_Var>(_1d0550a13_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1d04e3885_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1d04e3b71_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1d04e2455_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1d0550a13_Var>> _1d04e71d5_buildVars(jule::Slice<jule::Ptr<_1ea31610a_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1d0550a13_Var>> _28713_vars = jule::Slice<jule::Ptr<_1d0550a13_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto &expr = _28618_decls;
		auto it = expr.begin();
		_iter_begin_1aa924deb:;
		if (it != expr.end()) {
			jule::Ptr<_1ea31610a_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1d04e6e3d_buildVar(_28817_decl));;
			}
			_iter_next_1aa924deb:;
			++it;
			goto _iter_begin_1aa924deb;
		}
		_iter_end_1aa924deb:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_1d050615b_Impl> _1d04e747c_buildImpl(jule::Ptr<_1ea31e5ca_Impl> _29418_decl) {
	return jule::new_ptr<_1d050615b_Impl>(_1d050615b_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1d04e5678_buildMethods(_29418_decl.get()._field_Methods), ._field_Statics=_1d04e71d5_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _1d0505501_matchConstraint(jule::Str& _14221_c, jule::Ptr<_1d05c4504_TypeKind>& _14234_g) {
	{
		auto &_match_expr{ _14221_c };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1aa982c6c:;
			{
				jule::Ptr<_1d05c9251_Prim> _14513_prim = _1d05c688b_Prim(_14234_g.ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1eb00934c_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1aa98270b:;
			{
				jule::Ptr<_1d05c9251_Prim> _15113_prim = _1d05c688b_Prim(_14234_g.ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1eb008747_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1aa9829c5:;
			{
				jule::Ptr<_1d05c9251_Prim> _15713_prim = _1d05c688b_Prim(_14234_g.ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1eb008d0d_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1aa982a4c:;
			{
				jule::Ptr<_1d05c9251_Prim> _16313_prim = _1d05c688b_Prim(_14234_g.ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1eb0090a5_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1aa982ac4:;
			{
				return _1d05c5b76_Mutable(_14234_g.ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1aa982794:;
			{
				return (!(_1d05c5b76_Mutable(_14234_g.ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1aa98280a:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1aa982882:;
			{
				jule::Ptr<_1d05c9251_Prim> _17513_prim = _1d05c688b_Prim(_14234_g.ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1eb0090a5_IsNum(_17513_prim.get()._field_Kind) || _1d05cc485_IsStr(_17513_prim.ptr()));;
				};
				if ((_1d05c6d64_Ptr(_14234_g.ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1ea320268_StructIns> _18213_s = _1d05c7cdd_Struct(_14234_g.ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1d05005ea_Enum> _18913_enm = _1d05c70c8_Enum(_14234_g.ptr());;
				if ((_18913_enm != nullptr)) {
					return _1eb0090a5_IsNum(_1d05c4900_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1aa981b28:;
			{
				return false;;
			}
		}
		_match_end_1aa981a7e:;
	};
}



inline jule::Bool _1d05057dc_isBuiltinConstraint(jule::Str& _19925_ident) {
	{
		auto &expr = _1d0503961_builtinConstraints;
		auto it = expr.begin();
		_iter_begin_1aa98967a:;
		if (it != expr.end()) {
			jule::Str &_20012_bc = *it;
			{
				if ((_19925_ident == _20012_bc)) {
					return true;;
				};
			}
			_iter_next_1aa98967a:;
			++it;
			goto _iter_begin_1aa98967a;
		}
		_iter_end_1aa98967a:;
	};
	return false;;
}



inline jule::Ptr<_1d0512c28_scopeChecker> _1d05081e6_newScopeCheckerBase(jule::Ptr<_1d0532a17_Sema>& _5829_s, jule::Ptr<_1eb026831_FnIns> _5843_owner) {
	return jule::new_ptr<_1d0512c28_scopeChecker>(_1d0512c28_scopeChecker{._field_s=_5829_s, ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1d0593748_SymbolTable>(), });;
}



inline jule::Ptr<_1d0512c28_scopeChecker> _1d050857b_newScopeChecker(jule::Ptr<_1d0532a17_Sema>& _6625_s, jule::Ptr<_1eb026831_FnIns> _6639_owner) {
	jule::Ptr<_1d0512c28_scopeChecker> _6713_base = _1d05081e6_newScopeCheckerBase(_6625_s,_6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d0511991_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d0511e14_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1d0511991_scopeLabel> _1d05088bc_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1d0512c28_scopeChecker> _7636_scope) {
	jule::Ptr<_1d0511991_scopeLabel> _7713_label = _1d05166ee_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1d05166ee_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1aa9a1593:;
	}
	_iter_end_1aa9a1593:;;
	return _7713_label;;
}



inline jule::Bool _1d0508c52_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1d050b1b6_Scope>& _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1aa9a3177:;
			{
				jule::Ptr<_1eb017712_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36);;
				if ((_9313_fcem.get()._field_Except == _9034_sc)) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa9a31dd:;
			{
				jule::Ptr<_1d0598572_Data> _9813_d = _9021_Model.cast_ptr<_1d0598572_Data>(&__jule_any_type25);;
				return _1d0508c52_modelIsGotoScope(_9813_d.get()._field_Model,_9034_sc);;
			}
		}
		_match_end_1aa9a2e9b:;
	};
	return false;;
}



inline jule::Bool _1d0509093_stmtIsGotoScope(jule::Any& _10421_stmt, jule::Ptr<_1d050b1b6_Scope>& _10434_sc) {
	{
		auto &_match_expr{ _10421_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1aa9a55db:;
			{
				return (_10421_stmt.cast_ptr<_1d050b1b6_Scope>(&__jule_any_type23) == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1aa9a5377:;
			{
				return (_10421_stmt.cast_ptr<_1d050c00d_InfIter>(&__jule_any_type38).get()._field_Scope == _10434_sc);;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1aa9a53dd:;
			{
				jule::Ptr<_1d050cd66_RangeIter> _11113_it = _10421_stmt.cast_ptr<_1d050cd66_RangeIter>(&__jule_any_type42);;
				return ((_11113_it.get()._field_Scope == _10434_sc) || _1d0508c52_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1aa9a5454:;
			{
				jule::Ptr<_1d050c481_WhileIter> _11413_it = _10421_stmt.cast_ptr<_1d050c481_WhileIter>(&__jule_any_type40);;
				return (((_11413_it.get()._field_Scope == _10434_sc) || _1d0508c52_modelIsGotoScope(_11413_it.get()._field_Expr,_10434_sc)) || _1d0508c52_modelIsGotoScope(_11413_it.get()._field_Next,_10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1aa9a50be:;
			{
				jule::Ptr<_1d050ee12_Match> _11913_m = _10421_stmt.cast_ptr<_1d050ee12_Match>(&__jule_any_type50);;
				{
					auto &expr = _11913_m.get()._field_Cases;
					auto it = expr.begin();
					_iter_begin_1aa9a8a1d:;
					if (it != expr.end()) {
						jule::Ptr<_1d051095c_Case> &_12016_c = *it;
						{
							if ((_12016_c.get()._field_Scope == _10434_sc)) {
								return true;;
							};
							{
								auto &expr = _12016_c.get()._field_Exprs;
								auto it = expr.begin();
								_iter_begin_1aa9a9953:;
								if (it != expr.end()) {
									jule::Ptr<_1d0598572_Data> &_12420_expr = *it;
									{
										if (_1d0508c52_modelIsGotoScope(_12420_expr.get()._field_Model,_10434_sc)) {
											return true;;
										};
									}
									_iter_next_1aa9a9953:;
									++it;
									goto _iter_begin_1aa9a9953;
								}
								_iter_end_1aa9a9953:;
							};
						}
						_iter_next_1aa9a8a1d:;
						++it;
						goto _iter_begin_1aa9a8a1d;
					}
					_iter_end_1aa9a8a1d:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1aa9a5135:;
			{
				jule::Ptr<_1d050bc22_Conditional> _13213_c = _10421_stmt.cast_ptr<_1d050bc22_Conditional>(&__jule_any_type37);;
				{
					auto &expr = _13213_c.get()._field_Elifs;
					auto it = expr.begin();
					_iter_begin_1aa9aae71:;
					if (it != expr.end()) {
						jule::Ptr<_1d050b5b2_If> &_13316_elif = *it;
						{
							if (((_13316_elif.get()._field_Scope == _10434_sc) || _1d0508c52_modelIsGotoScope(_13316_elif.get()._field_Expr,_10434_sc))) {
								return true;;
							};
						}
						_iter_next_1aa9aae71:;
						++it;
						goto _iter_begin_1aa9aae71;
					}
					_iter_end_1aa9aae71:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa9a51ac:;
			{
				jule::Ptr<_1d0598572_Data> _14013_d = _10421_stmt.cast_ptr<_1d0598572_Data>(&__jule_any_type25);;
				return _1d0508c52_modelIsGotoScope(_14013_d.get()._field_Model,_10434_sc);;
			}
		}
		else {
			_case_begin_1aa9a3562:;
			{
				return false;;
			}
		}
		_match_end_1aa9a34eb:;
	};
}



inline jule::I64 _1d05093d4_countMatchType(jule::Ptr<_1d050ee12_Match>& _14720_m, jule::Ptr<_1d05c4504_TypeKind>& _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1d05c4900_Str(_14732_t.ptr());;
	_julec_label_loop:;
	{
		auto &expr = _14720_m.get()._field_Cases;
		auto it = expr.begin();
		_iter_begin_1aa9ade52:;
		if (it != expr.end()) {
			jule::Ptr<_1d051095c_Case> &_15112_c = *it;
			{
				if ((_15112_c == nullptr)) {
					goto _iter_next_1aa9ade52;
				};
				{
					auto &expr = _15112_c.get()._field_Exprs;
					auto it = expr.begin();
					_iter_begin_1aa9ae88c:;
					if (it != expr.end()) {
						jule::Ptr<_1d0598572_Data> &_15616_expr = *it;
						{
							if ((_15616_expr == nullptr)) {
								goto _iter_end_1aa9ade52;
							};
							if ((_1499_kind == _1d05c4900_Str(_15616_expr.get()._field_Model.cast_ptr<_1d05c4504_TypeKind>(&__jule_any_type92).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1aa9ae88c:;
						++it;
						goto _iter_begin_1aa9ae88c;
					}
					_iter_end_1aa9ae88c:;
				};
			}
			_iter_next_1aa9ade52:;
			++it;
			goto _iter_begin_1aa9ade52;
		}
		_iter_end_1aa9ade52:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1d0598572_Data>> _1d050967b_getDatasFromTupleData(jule::Ptr<_1d0598572_Data>& _17131_d) {
	if ((_1d05c852a_Tup(_17131_d.get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ _17131_d.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type90) {
				_case_begin_1aa9b3907:;
				{
					return _17131_d.get()._field_Model.cast_ptr<_1eb01b507_TupleExprModel>(&__jule_any_type90).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1aa9b14e8:;
				{
					jule::Ptr<_1d05cdec0_Tuple> _17721_t = _1d05c852a_Tup(_17131_d.get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1d0598572_Data>> _17821_r = jule::Slice<jule::Ptr<_1d0598572_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto &expr = _17721_t.get()._field_Types;
						auto it = expr.begin();
						_iter_begin_1aa9b284b:;
						if (it != expr.end()) {
							jule::Ptr<_1d05c4504_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1aa9b284b:;
							++it;
							goto _iter_begin_1aa9b284b;
						}
						_iter_end_1aa9b284b:;
					};
					return _17821_r;;
				}
			}
			_match_end_1aa9b1460:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1d0598572_Data>>::make({_17131_d});;
	};
}



inline jule::Bool _1d0509eb7_checkMut(jule::Ptr<_1d0532a17_Sema>& _20618_s, jule::Ptr<_1d0598572_Data>& _20629_left, jule::Ptr<_1d0598572_Data> _20646_right, jule::Ptr<_212a0c2ab_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!(_20629_left.get()._field_Mutable))) {
			_case_begin_1aa9b6ac5:;
			{
				_1d05356c9_pushErr(_20618_s.ptr(), _20660_op,jule::Str("cannot assign to immutable storage", 34),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1d05c5b76_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1aa9b6432:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_1d05c7cdd_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1d05356c9_pushErr(_20618_s.ptr(), _20660_op,jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type7)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa9b63bb:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa9b6322:;
	};
}



inline jule::Bool _1d050a44b_checkAssign(jule::Ptr<_1d0532a17_Sema>& _22521_s, jule::Ptr<_1d0598572_Data>& _22536_left, jule::Ptr<_1d0598572_Data> _22553_right, jule::Ptr<_212a0c2ab_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1eb026831_FnIns> _2269_f = _1d05c7a79_Fn(_22536_left.get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1d05356c9_pushErr(_22521_s.ptr(), _22567_op,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1d0598e35_IsConst(_22536_left.ptr())) {
			_case_begin_1aa9bb712:;
			{
				_1d05356c9_pushErr(_22521_s.ptr(), _22567_op,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>());
				_1d05359e8_pushSugggestion(_22521_s.ptr(), jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_22536_left.get()._field_Lvalue))) {
			_case_begin_1aa9bb080:;
			{
				_1d05356c9_pushErr(_22521_s.ptr(), _22567_op,jule::Str("invalid expression: expected lvalue for assignment", 50),jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1d0509eb7_checkMut(_22521_s,_22536_left,_22553_right,_22567_op)))) {
			_case_begin_1aa9bb0e6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1aa9bb019:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aa9bade8:;
	};
}



inline jule::Bool _1d050a6e3_isValidAstStForNextSt(jule::Any& _24731_n) {
	{
		auto &_match_expr{ _24731_n };
		
		if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1aa9bb190:;
			{
				return (!(_24731_n.cast_ptr<_1ea312139_AssignSt>(&__jule_any_type61).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1aa9bd47d:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa9bd318:;
			{
				return false;;
			}
		}
		_match_end_1aa9bd2a2:;
	};
}



inline jule::Bool _1d050a98a_isValidStForNextSt(jule::Any& _25824_st) {
	{
		auto &_match_expr{ _25824_st };
		
		if (_match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type46 || _match_expr.type == &__jule_any_type48) {
			_case_begin_1aa9be47e:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1aa9be4e5:;
			{
				{
					auto &_match_expr{ _25824_st.cast_ptr<_1d0598572_Data>(&__jule_any_type25).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1aa9beccb:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1aa9c0183:;
						{
							return false;;
						}
					}
					_match_end_1aa9beddb:;
				};
			}
		}
		else {
			_case_begin_1aa9bde2e:;
			{
				return false;;
			}
		}
		_match_end_1aa9bddc9:;
	};
}



inline jule::Bool _1d050ac32_stmtIsDef(jule::Any& _27615_st) {
	{
		auto &_match_expr{ _27615_st };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aa9c07d2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aa9c0392:;
			{
				return false;;
			}
		}
		_match_end_1aa9c02a4:;
	};
}



inline jule::Ptr<_1d0550a13_Var> _1d05270d3_findVarInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto &expr = _4626_files;
		auto it = expr.begin();
		_iter_begin_1aab1d5bc:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1d0550a13_Var> _4817_v = _1d059442a_FindVar(_4717_f.ptr(), _4649_ident,_4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1aab1d5bc:;
			++it;
			goto _iter_begin_1aab1d5bc;
		}
		_iter_end_1aab1d5bc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d0527512_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto &expr = _5832_files;
		auto it = expr.begin();
		_iter_begin_1aab1ea85:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1d05c3811_TypeAlias> _6017_ta = _1d05947d2_FindTypeAlias(_5917_f.ptr(), _5855_ident,_5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1aab1ea85:;
			++it;
			goto _iter_begin_1aab1ea85;
		}
		_iter_end_1aab1ea85:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d05278ec_findStructInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto &expr = _7029_files;
		auto it = expr.begin();
		_iter_begin_1aab2103c:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1ea31ed8e_Struct> _7217_s = _1d0594b89_FindStruct(_7117_f.ptr(), _7052_ident,_7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1aab2103c:;
			++it;
			goto _iter_begin_1aab2103c;
		}
		_iter_end_1aab2103c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1eb023b80_Fn> _1d0527d5e_findFnInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto &expr = _8225_files;
		auto it = expr.begin();
		_iter_begin_1aab224e4:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1eb023b80_Fn> _8417_f = _1d0595041_FindFn(_8317_file.ptr(), _8248_ident,_8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1aab224e4:;
			++it;
			goto _iter_begin_1aab224e4;
		}
		_iter_end_1aab224e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d04ed4a5_Trait> _1d052816c_findTraitInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _9428_files, jule::Str _9451_ident) {
	{
		auto &expr = _9428_files;
		auto it = expr.begin();
		_iter_begin_1aab22a77:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1d04ed4a5_Trait> _9617_t = _1d059534e_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1aab22a77:;
			++it;
			goto _iter_begin_1aab22a77;
		}
		_iter_end_1aab22a77:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d05005ea_Enum> _1d05284ad_findEnumInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _10627_files, jule::Str _10650_ident) {
	{
		auto &expr = _10627_files;
		auto it = expr.begin();
		_iter_begin_1aab24a8a:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1d05005ea_Enum> _10817_e = _1d059565c_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1aab24a8a:;
			++it;
			goto _iter_begin_1aab24a8a;
		}
		_iter_end_1aab24a8a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0501be5_TypeEnum> _1d05287ee_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _11831_files, jule::Str _11854_ident) {
	{
		auto &expr = _11831_files;
		auto it = expr.begin();
		_iter_begin_1aab25d55:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1d0501be5_TypeEnum> _12017_e = _1d059596a_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1aab25d55:;
			++it;
			goto _iter_begin_1aab25d55;
		}
		_iter_end_1aab25d55:;
	};
	return nullptr;;
}



inline jule::Any _1d0528ce9_defByIdentPackage(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _12927_files, jule::Str& _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto &expr = _12927_files;
		auto it = expr.begin();
		_iter_begin_1aab2732e:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1d05967e5_defByIdent(_13017_file.ptr(), _12951_ident,_12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1aab2732e:;
			++it;
			goto _iter_begin_1aab2732e;
		}
		_iter_end_1aab2732e:;
	};
	return nullptr;;
}



inline jule::Bool _1d052edee_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _22dc943e5_HasPrefix(_36117_f,_22dcc702c_Join(jule::Slice<jule::Str>::make({_21271b5e7_PathStdlib,_36125_p})));;
}



inline jule::Bool _1d0530bd0_isValidModelForRef(jule::Any& _1228_m) {
	{
		auto &_match_expr{ _1228_m };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1aab382eb:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aab38362:;
			{
				jule::Ptr<_1eb01a14e_StructSubIdentExprModel> _1717_model = _1228_m.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73);;
				return _1d0530bd0_isValidModelForRef(_1717_model.get()._field_Expr.get()._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1aab380ed:;
			{
				jule::Ptr<_1eb01979c_TraitSubIdentExprModel> _2017_model = _1228_m.cast_ptr<_1eb01979c_TraitSubIdentExprModel>(&__jule_any_type72);;
				return _1d0530bd0_isValidModelForRef(_2017_model.get()._field_Expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1aab38164:;
			{
				jule::Ptr<_1eb015c4e_UnaryExprModel> _2317_unary = _1228_m.cast_ptr<_1eb015c4e_UnaryExprModel>(&__jule_any_type76);;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_1d05c6d64_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1d05c6b00_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1d0530bd0_isValidModelForRef(_2317_unary.get()._field_Expr.get()._field_Model);;
			}
		}
		else {
			_case_begin_1aab376d5:;
			{
				return false;;
			}
		}
		_match_end_1aab37680:;
	};
}



inline _22ca31eb9_Log _1d05310ed_compilerErr(jule::Ptr<_212a0c2ab_Token>& _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_22ca31eb9_Log _4213_log = _22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_4117_token.get()._field_Row, ._field_Column=_4117_token.get()._field_Column, ._field_Path=_4117_token.get()._field_File.get()._field_Path, ._field_Text=_22ca32409_Logf(_4144_fmt,_4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_212a13823_GetRow(_4117_token.get()._field_File.ptr(), _4117_token.get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1d053143e_impIsLookupable(jule::Ptr<_1d05298bb_ImportInfo>& _5521_i, jule::Str _5537_ident) {
	if (_5521_i.get()._field_CppLinked) {
		return false;;
	};
	if ((!(_5521_i.get()._field_ImportAll))) {
		if ((_5521_i.get()._field_Selected.len() > 0LL)) {
			return _1d052c292_existIdent(_5521_i.ptr(), _5537_ident);;
		};
	};
	return _5521_i.get()._field_ImportAll;;
}



inline void _1d053173b_appendRetVars(jule::Slice<jule::Ptr<_1d0550a13_Var>>& _6723_dest, jule::Ptr<_1eb026831_FnIns>& _6742_f) {
	if ((_1eb0240e2_IsVoid(_6742_f.get()._field_Decl.ptr()) || (_6742_f.get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d05c4504_TypeKind>> _7213_types = _1eb027953_Types(_6742_f.ptr());;
	{
		auto &expr = _6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents;
		auto it = expr.begin();
		_iter_begin_1aab4139d:;
		if (it != expr.end()) {
			jule::I64 _7310_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _7317_ident = *it;
			{
				if ((_212a0ea50_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _212a0ece7_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1aab4139d;
				};
				_6723_dest = jule::alloc_for_append(_6723_dest,1);_6723_dest.__push(jule::new_ptr<_1d0550a13_Var>(_1d0550a13_Var{._field_Scope=_6742_f.get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Data=jule::new_ptr<_1d0598572_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1aab4139d:;
			++it;
			_7310_i++;
			goto _iter_begin_1aab4139d;
		}
		_iter_end_1aab4139d:;
	};
	if (((_6742_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && (_6723_dest.len() == 1LL))) {
		_6723_dest[(_6723_dest.len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1d05319e4_appendParamVars(jule::Slice<jule::Ptr<_1d0550a13_Var>>& _9725_dest, jule::Ptr<_1eb026831_FnIns>& _9744_f) {
	if ((_9744_f.get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto &expr = _9744_f.get()._field_Params;
		auto it = expr.begin();
		_iter_begin_1aab45171:;
		if (it != expr.end()) {
			jule::Ptr<_1eb025962_ParamIns> _10217_p = *it;
			{
				if ((_212a0ea50_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _212a0ece7_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1aab45171;
				};
				jule::Ptr<_1d0550a13_Var> _10717_v = jule::new_ptr<_1d0550a13_Var>(_1d0550a13_Var{._field_Scope=_9744_f.get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(), ._field_Value=jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Data=jule::new_ptr<_1d0598572_Data>()}), });;
				{
					
					if (_1eb022970_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1aab47b57:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1d05c40c5_Kind>(_9744_f.get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1eb022bd4_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1eb022bd4_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cc9d5_Sptr>(_1d05cc9d5_Sptr{._field_Elem=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1aab4788d:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cd442_Slc>(_1d05cd442_Slc{._field_Elem=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1aab45825:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1aab4776c:;
				};
				_9725_dest = jule::alloc_for_append(_9725_dest,1);_9725_dest.__push(_10717_v);;
			}
			_iter_next_1aab45171:;
			++it;
			goto _iter_begin_1aab45171;
		}
		_iter_end_1aab45171:;
	};
}



inline void _1d0531cbe_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1d05c3811_TypeAlias>>& _15734_dest, jule::Ptr<_1eb026831_FnIns>& _15759_f) {
	jule::I64 _15813_size = _15759_f.get()._field_Generics.len();;
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=_15759_f.get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto &expr = _15759_f.get()._field_Generics;
		auto it = expr.begin();
		_iter_begin_1aab4d0e1:;
		if (it != expr.end()) {
			jule::I64 _16710_i = it - expr.begin();
			jule::Ptr<_1d05c2cc7_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1ea310995_GenericDecl> _16817_decl = _15759_f.get()._field_Decl.get()._field_Generics[_16710_i];;
				_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_1d05c3811_TypeAlias>(_1d05c3811_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1aab4d0e1:;
			++it;
			_16710_i++;
			goto _iter_begin_1aab4d0e1;
		}
		_iter_end_1aab4d0e1:;
	};
	if ((_15759_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1ea320268_StructIns> _18017_owner = _15759_f.get()._field_Owner;;
		{
			auto &expr = _18017_owner.get()._field_Generics;
			auto it = expr.begin();
			_iter_begin_1aab50621:;
			if (it != expr.end()) {
				jule::I64 _18114_i = it - expr.begin();
				jule::Ptr<_1d05c2cc7_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1ea310995_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					_15734_dest = jule::alloc_for_append(_15734_dest,1);_15734_dest.__push(jule::new_ptr<_1d05c3811_TypeAlias>(_1d05c3811_TypeAlias{._field_Scope=_15759_f.get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1aab50621:;
				++it;
				_18114_i++;
				goto _iter_begin_1aab50621;
			}
			_iter_end_1aab50621:;
		};
	};
}



inline jule::Ptr<_1d0593748_SymbolTable> _1d0532121_findFile(jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>& _19518_files, jule::Ptr<_212a12646_File>& _19542_handler) {
	{
		auto &expr = _19518_files;
		auto it = expr.begin();
		_iter_begin_1aab50de6:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == _19542_handler)) {
					return _19617_fl;;
				};
			}
			_iter_next_1aab50de6:;
			++it;
			goto _iter_begin_1aab50de6;
		}
		_iter_end_1aab50de6:;
	};
	return nullptr;;
}



inline void _1d0532583_pushSugggestion(_22ca31eb9_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_22ca32409_Logf(_20442_fmt,_20455_args);
}



inline jule::Bool _1d0569477_traitHasReferenceReceiver(jule::Ptr<_1d04ed4a5_Trait>& _2631_t) {
	{
		auto &expr = _2631_t.get()._field_Methods;
		auto it = expr.begin();
		_iter_begin_1aad6d234:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> &_2712_f = *it;
			{
				if (_2712_f.get()._field_Statically) {
					goto _iter_next_1aad6d234;
				};
				jule::Ptr<_1eb022343_Param> _3313_p = _2712_f.get()._field_Params[0LL];;
				if ((_1eb022bd4_IsRef(_3313_p.ptr()) && _1eb022970_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1aad6d234:;
			++it;
			goto _iter_begin_1aad6d234;
		}
		_iter_end_1aad6d234:;
	};
	return false;;
}



inline jule::Bool _1d05695a9_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1d0598572_Data>& _4132_d) {
	jule::Str _429_value = _22bec87a2_FmtFloat(static_cast<jule::F64>(_1eb00c097_AsF64(_4132_d.get()._field_Constant.ptr())),'g',-1LL,64LL);;
	return _1eaeed929_CheckBitFloat(_429_value,static_cast<jule::I64>(_1eaeec51b_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1d0580e83_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1d0598572_Data>& _4630_d) {
	jule::F64 _479_min = _1eb003324_Min(_4618_kind);;
	jule::F64 _489_max = _1eb003610_Max(_4618_kind);;
	{
		
		if (_1eb00dc03_IsF64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1aad792d9:;
			{
				jule::F64 _5113_x = _1eb00b85a_ReadF64(_4630_d.get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1eaeb2008_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1eb00d4b6_IsU64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1aad797d4:;
			{
				jule::F64 _5813_x = _1eb00c097_AsF64(_4630_d.get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1eb00d252_IsI64(_4630_d.get()._field_Constant.ptr())) {
			_case_begin_1aad7984a:;
			{
				jule::F64 _6313_x = _1eb00c097_AsF64(_4630_d.get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1aad796c4:;
	};
	return false;;
}



inline jule::Bool _1d05810b5_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1d0598572_Data>& _6932_d) {
	jule::F64 _709_max = _1eb003610_Max(_6920_kind);;
	if ((_6932_d.get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1d0569059_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1eb00ada9_ReadI64(_6932_d.get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1eb00dc03_IsF64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1aad7e652:;
			{
				jule::F64 _7713_x = _1eb00b85a_ReadF64(_6932_d.get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1eaeb2008_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1eb00d4b6_IsU64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1aad7e6c9:;
			{
				jule::F64 _8713_x = _1eb00c097_AsF64(_6932_d.get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1eb00d252_IsI64(_6932_d.get()._field_Constant.ptr())) {
			_case_begin_1aad7e751:;
			{
				jule::F64 _9213_x = _1eb00c097_AsF64(_6932_d.get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1aad7dec0:;
	};
	return false;;
}



inline jule::Bool _1d0582160_intAssignable(jule::Str _9818_kind, jule::Ptr<_1d0598572_Data>& _9830_d) {
	{
		
		if (_1eb00845b_IsSigInt(_9818_kind)) {
			_case_begin_1aad83e5e:;
			{
				return _1d0580e83_sigAssignable(_9818_kind,_9830_d);;
			}
		}
		else if (_1eb008747_IsUnsigInt(_9818_kind)) {
			_case_begin_1aad83810:;
			{
				return _1d05810b5_unsigAssignable(_9818_kind,_9830_d);;
			}
		}
		else {
			_case_begin_1aad7ee38:;
			{
				return false;;
			}
		}
		_match_end_1aad7ed6c:;
	};
}



inline jule::Ptr<_1d05c4504_TypeKind> _1d05927be_lenKind(void) {
	return jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_1ea2c0405_Directive> _1d05bdba2_findDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _411223_directives, jule::Str _411254_d) {
	{
		auto &expr = _411223_directives;
		auto it = expr.begin();
		_iter_begin_1aae8b3b8:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _411317_dr = *it;
			{
				if ((_411317_dr.get()._field_Tag.get()._field_Kind == _411254_d)) {
					return _411317_dr;;
				};
			}
			_iter_next_1aae8b3b8:;
			++it;
			goto _iter_begin_1aae8b3b8;
		}
		_iter_end_1aae8b3b8:;
	};
	return nullptr;;
}



inline jule::Any _1d05be037_findBuiltinsImport(jule::Str _412123_ident, jule::Ptr<_1d05298bb_ImportInfo> _412135_imp) {
	return _1d05ea3e8_findPackageBuiltinDef(_412135_imp.get()._field_LinkPath,_412123_ident);;
}



inline void _1d05be246_fitBitsize(jule::Ptr<_1d0598572_Data>& _412820_d) {
	jule::Ptr<_1d05c9251_Prim> _412913_prim = _1d05c688b_Prim(_412820_d.get()._field_Kind.ptr());;
	jule::I64 _41309_z = _1eaeec51b_BitsizeOf(_1d05c95b4_Str(_412913_prim.ptr()));;
	if ((_41309_z == 64LLU)) {
		return;;
	};
	jule::I64 _413513_k = 0LL;;
	{
		
		if (_1eb00d252_IsI64(_412820_d.get()._field_Constant.ptr())) {
			_case_begin_1aae8e003:;
			{
				_413513_k=static_cast<jule::I64>(_1eaeede68_BitsizeOfInt(static_cast<jule::I64>(_1eb00ada9_ReadI64(_412820_d.get()._field_Constant.ptr()))));
				if ((_413513_k > _41309_z)) {
					_412913_prim.get()._field_Kind=_1eaeec83a_IntFromBits(_413513_k);
				};
			}
		}
		else if (_1eb00d4b6_IsU64(_412820_d.get()._field_Constant.ptr())) {
			_case_begin_1aae8e07a:;
			{
				_413513_k=static_cast<jule::I64>(_1eaeee210_BitsizeOfUint(static_cast<jule::U64>(_1eb00b11d_ReadU64(_412820_d.get()._field_Constant.ptr()))));
				if ((_413513_k > _41309_z)) {
					_412913_prim.get()._field_Kind=_1eaeecad2_UintFromBits(_413513_k);
				};
			}
		}
		else if (_1eb00dc03_IsF64(_412820_d.get()._field_Constant.ptr())) {
			_case_begin_1aae8e102:;
			{
				_413513_k=static_cast<jule::I64>(_1eaeedbc1_BitsizeOfFloat(static_cast<jule::F64>(_1eb00b85a_ReadF64(_412820_d.get()._field_Constant.ptr()))));
				if ((_413513_k > _41309_z)) {
					_412913_prim.get()._field_Kind=_1eaeecd79_FloatFromBits(_413513_k);
				};
			}
		}
		_match_end_1aae8de37:;
	};
}



inline void _1d05be543_makeStructLitAlloc(jule::Ptr<_1d0598572_Data>& _415528_d, jule::Ptr<_1eb016502_StructLitExprModel>& _415543_lit) {
	_415528_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cc9d5_Sptr>(_1d05cc9d5_Sptr{._field_Elem=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_415543_lit.get()._field_Strct, 0)})}), 7)});
	_415528_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb016810_AllocStructLitExprModel>(_1eb016810_AllocStructLitExprModel{._field_Lit=_415543_lit}), &__jule_any_type120);
}



inline jule::Ptr<_1d0550a13_Var> _1d05be884_buildErrorVar(jule::Ptr<_1d050b1b6_Scope>& _416623_s, jule::Ptr<_1ea30bba0_FnCallExpr>& _416639_fc) {
	return jule::new_ptr<_1d0550a13_Var>(_1d0550a13_Var{._field_Scope=_416623_s, ._field_Token=_416639_fc.get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1d05995ea_Value>(_1d05995ea_Value{._field_Data=jule::new_ptr<_1d0598572_Data>()}), });;
}



inline jule::Any _1d05bebc5_findBuiltinsSema(jule::Str _418521_ident, jule::Ptr<_1d0532a17_Sema> _418537_s) {
	{
		auto &expr = _418537_s.get()._field_file.get()._field_Imports;
		auto it = expr.begin();
		_iter_begin_1aae93843:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _418617_imp = *it;
			{
				if ((_418617_imp.get()._field_ImportAll || _1d052c292_existIdent(_418617_imp.ptr(), _418521_ident))) {
					jule::Any _418821_def = _1d05be037_findBuiltinsImport(_418521_ident,_418617_imp);;
					if ((_418821_def != nullptr)) {
						return _418821_def;;
					};
				};
			}
			_iter_next_1aae93843:;
			++it;
			goto _iter_begin_1aae93843;
		}
		_iter_end_1aae93843:;
	};
	jule::Str _419613_ppath = _212a1303c_Dir(_418537_s.get()._field_file.get()._field_File.ptr());;
	if (_22dc943e5_HasPrefix(_419613_ppath,_21271b5e7_PathStdlib)) {
		(_419613_ppath).mut_slice(_21271b5e7_PathStdlib.len());;
		_419613_ppath=(jule::Str("std", 3) + _22dcc34ac_Replace(_419613_ppath,static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
		return _1d05ea3e8_findPackageBuiltinDef(_419613_ppath,_418521_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1d05bee6c_isOkForShifting(jule::Ptr<_1d0598572_Data>& _421025_d) {
	if (_1d0598e35_IsConst(_421025_d.ptr())) {
		{
			
			if (_1eb00d252_IsI64(_421025_d.get()._field_Constant.ptr())) {
				_case_begin_1aae98309:;
				{
					return (_1eb00ada9_ReadI64(_421025_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1eb00d4b6_IsU64(_421025_d.get()._field_Constant.ptr())) {
				_case_begin_1aae97b33:;
				{
					return true;;
				}
			}
			else if (_1eb00dc03_IsF64(_421025_d.get()._field_Constant.ptr())) {
				_case_begin_1aae97b99:;
				{
					return (_1eb00b85a_ReadF64(_421025_d.get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1aae97abc:;
				{
					return false;;
				}
			}
			_match_end_1aae97a01:;
		};
	};
	jule::Ptr<_1d05c9251_Prim> _42239_prim = _1d05c688b_Prim(_421025_d.get()._field_Kind.ptr());;
	return ((_42239_prim != nullptr) && _1eb0089de_IsInt(_1d05c95b4_Str(_42239_prim.ptr())));;
}



inline jule::Bool _1d05c0324_isInstancedStruct(jule::Ptr<_1ea320268_StructIns> _422722_s) {
	return (_422722_s.get()._field_Decl.get()._field_Generics.len() == _422722_s.get()._field_Generics.len());;
}



inline jule::Bool _1d05c0687_isPtrArithmeticCompatible(jule::Ptr<_1d0598572_Data>& _423135_l, jule::Ptr<_1d0598572_Data>& _423150_r) {
	jule::Ptr<_1d05d1049_Ptr> _42329_ptr = _1d05c6d64_Ptr(_423150_r.get()._field_Kind.ptr());;
	if ((_42329_ptr != nullptr)) {
		return _1d05c4c0d_Equal(_1d05c6d64_Ptr(_423135_l.get()._field_Kind.ptr()).get()._field_Elem, _42329_ptr.get()._field_Elem);;
	};
	if (_1d0598e35_IsConst(_423150_r.ptr())) {
		return _1d0582160_intAssignable(jule::Str("int", 3),_423150_r);;
	};
	_1d058233b_typeCompatibilityChecker _423913_tcc = _1d058233b_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=_423150_r.get()._field_Kind, };;
	return _1d0583925_check(&_423913_tcc);;
}



inline void _1d05c08c9_applyCastKindModel(jule::Ptr<_1d0598572_Data>& _424828_d, jule::Ptr<_1d05c4504_TypeKind>& _424843_t) {
	_424828_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb016d60_CastingExprModel>(_1eb016d60_CastingExprModel{._field_Expr=_424828_d.get()._field_Model, ._field_Kind=_424843_t, ._field_ExprKind=_424828_d.get()._field_Kind}), &__jule_any_type102);
}



inline void _1d05c0b82_applyCastKind(jule::Ptr<_1d0598572_Data>& _425623_d, jule::Ptr<_1d05c4504_TypeKind>& _425638_t) {
	_1d05c08c9_applyCastKindModel(_425623_d,_425638_t);
	_425623_d.get()._field_Kind=_425638_t;
}



inline jule::Ptr<_1d0598572_Data> _1d05c0d80_buildVoidData(void) {
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1d05c1149_checkDataForIntegerIndexing(jule::Ptr<_1d0598572_Data>& _426937_d) {
	jule::Str __jule_func_result = jule::Str();
	if ((_426937_d == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1d05c688b_Prim(_426937_d.get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1aaea0564:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1eb0089de_IsInt(_1d05c95b4_Str(_1d05c688b_Prim(_426937_d.get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1aaea05ca:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1d0598e35_IsConst(_426937_d.ptr())) {
			_case_begin_1aaea0641:;
			{
				if ((_1eb00c097_AsF64(_426937_d.get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1d05c688b_Prim(_426937_d.get()._field_Kind.ptr()) == nullptr) || _1d0598e35_IsConst(_426937_d.ptr()) || (_1eaeec274_RealKindOf(_1d05c95b4_Str(_1d05c688b_Prim(_426937_d.get()._field_Kind.ptr()).ptr())) != _1eaeec274_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1aaea06a7:;
			{
				jule::Ptr<_1d05c4504_TypeKind> _428617_t = jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)});;
				_1d05c0b82_applyCastKind(_426937_d,_428617_t);
			}
		}
		_match_end_1aaea019b:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1d05c1413_applyCastModelByEnum(jule::Ptr<_1d0598572_Data>& _429530_d, jule::Ptr<_1d05005ea_Enum> _429544_e) {
	if ((_429544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1d05c9251_Prim> _42999_p = _1d05c688b_Prim(_429544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1d05cc485_IsStr(_42999_p.ptr())) {
		return;;
	};
	_1d05c08c9_applyCastKindModel(_429530_d,_429544_e.get()._field_Kind.get()._field_Kind);
}



inline void _1d05c16bb_castConstByType(jule::Str& _430621_t, jule::Ptr<_1d0598572_Data>& _430634_d) {
	{
		
		if (_1eb00845b_IsSigInt(_430621_t)) {
			_case_begin_1aaea5910:;
			{
				{
					auto _match_expr{ _1eaeec51b_BitsizeOf(_1eaeec274_RealKindOf(_430621_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aaea6559:;
						{
							_1eb00c31c_SetI64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1eb00babe_AsI64(_430634_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aaea65d1:;
						{
							_1eb00c31c_SetI64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1eb00babe_AsI64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1aaea6647:;
						{
							_1eb00c31c_SetI64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1eb00babe_AsI64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1aaea66ad:;
						{
							_1eb00c31c_SetI64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1eb00babe_AsI64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1aaea5b96:;
				};
			}
		}
		else if (_1eb008747_IsUnsigInt(_430621_t)) {
			_case_begin_1aaea5987:;
			{
				{
					auto _match_expr{ _1eaeec51b_BitsizeOf(_1eaeec274_RealKindOf(_430621_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aaea9b45:;
						{
							_1eb00c592_SetU64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1eb00bd33_AsU64(_430634_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aaea9bcd:;
						{
							_1eb00c592_SetU64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1eb00bd33_AsU64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1aaea9c44:;
						{
							_1eb00c592_SetU64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1eb00bd33_AsU64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1aaea9caa:;
						{
							_1eb00c592_SetU64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1eb00bd33_AsU64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1aaea5d83:;
				};
			}
		}
		else if (_1eb008d0d_IsFloat(_430621_t)) {
			_case_begin_1aaea5a0e:;
			{
				{
					auto _match_expr{ _1eaeec51b_BitsizeOf(_1eaeec274_RealKindOf(_430621_t)) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1aaead242:;
						{
							_1eb00cd12_SetF64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1eb00c097_AsF64(_430634_d.get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1aaead2ca:;
						{
							_1eb00cd12_SetF64(_430634_d.get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1eb00c097_AsF64(_430634_d.get()._field_Constant.ptr())))));
						}
					}
					_match_end_1aaeab87d:;
				};
			}
		}
		_match_end_1aaea57de:;
	};
}



inline void _1d05c1bc7_updateModelToGenericIns(jule::Any& _434033_m, jule::Ptr<_1eb026831_FnIns>& _434052_f) {
	{
		auto &_match_expr{ _434033_m };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1aaeae2cb:;
			{
				_434033_m=jule::Any(_434052_f, &__jule_any_type9);
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1aaeae342:;
			{
				_434033_m.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73).get()._field_Method=_434052_f;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1aaeae3a8:;
			{
				_434033_m.cast_ptr<_1eb01a4e5_StructStaticIdentExprModel>(&__jule_any_type105).get()._field_Method=_434052_f;
			}
		}
		_match_end_1aaea613b:;
	};
}



inline jule::Bool _1d05c1e19_pushSubIdentFromExpr(jule::Any _435129_expr, jule::Ptr<_1ea3043b2_SubIdentTypeDecl>& _435150_t) {
	{
		auto &_match_expr{ _435129_expr };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1aaeb190a:;
			{
				jule::Ptr<_1ea30987e_IdentExpr> _435417_e = _435129_expr.cast_ptr<_1ea30987e_IdentExpr>(&__jule_any_type88);;
				_435150_t.get()._field_Idents = jule::alloc_for_append(_435150_t.get()._field_Idents,1);_435150_t.get()._field_Idents.__push(jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_435417_e.get()._field_Token, ._field_Ident=_435417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1aaeb1971:;
			{
				jule::Ptr<_1ea30b122_SubIdentExpr> _436017_e = _435129_expr.cast_ptr<_1ea30b122_SubIdentExpr>(&__jule_any_type94);;
				if ((!(_1d05c1e19_pushSubIdentFromExpr(_436017_e.get()._field_Expr.get()._field_Kind,_435150_t)))) {
					return false;;
				};
				_435150_t.get()._field_Idents = jule::alloc_for_append(_435150_t.get()._field_Idents,1);_435150_t.get()._field_Idents.__push(jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_436017_e.get()._field_Ident, ._field_Ident=_436017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1aaeb1366:;
			{
				return false;;
			}
		}
		_match_end_1aaeb1311:;
	};
	return true;;
}



inline jule::Bool _1d05db20d_kindUsesGenerics(jule::Ptr<_1d05c4504_TypeKind>& _157426_k, jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>& _157441_generics) {
	{
		auto &expr = _157441_generics;
		auto it = expr.begin();
		_iter_begin_1ab272490:;
		if (it != expr.end()) {
			jule::Ptr<_1ea310995_GenericDecl> &_157512_g = *it;
			{
				if (static__1d05dad12_exist(_157512_g.get()._field_Ident,_157426_k)) {
					return true;;
				};
			}
			_iter_next_1ab272490:;
			++it;
			goto _iter_begin_1ab272490;
		}
		_iter_end_1ab272490:;
	};
	return false;;
}



inline jule::Bool _1d05db593_hasDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _158422_directives, jule::Str _158453_tag) {
	{
		auto &expr = _158422_directives;
		auto it = expr.begin();
		_iter_begin_1ab272a78:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _158517_dr = *it;
			{
				if ((_158517_dr.get()._field_Tag.get()._field_Kind == _158453_tag)) {
					return true;;
				};
			}
			_iter_next_1ab272a78:;
			++it;
			goto _iter_begin_1ab272a78;
		}
		_iter_end_1ab272a78:;
	};
	return false;;
}



inline jule::Bool _1d05db83a_canGetPtr(jule::Ptr<_1d0598572_Data>& _159319_d) {
	if (((!(_159319_d.get()._field_Lvalue)) || _1d0598e35_IsConst(_159319_d.ptr()))) {
		return false;;
	};
	{
		
		if (((_1d05c7a79_Fn(_159319_d.get()._field_Kind.ptr()) != nullptr) || (_1d05c70c8_Enum(_159319_d.get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1ab275020:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ab274849:;
			{
				return true;;
			}
		}
		_match_end_1ab2747e4:;
	};
}



inline jule::Bool _1d05dbb59_isValidForSptrType(jule::Ptr<_1d05c4504_TypeKind>& _160628_t) {
	jule::Ptr<_1ea320268_StructIns> _160713_s = _1d05c7cdd_Struct(_160628_t.ptr());;
	if ((((_160713_s != nullptr) && (_160713_s.get()._field_Decl != nullptr)) && _160713_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1d05dbe01_isValidForRef(jule::Ptr<_1d05c4504_TypeKind>& _161523_t) {
	return (_1d05c7a79_Fn(_161523_t.ptr()) == nullptr);;
}



inline jule::Bool _1d05dc1ba_isBuiltinStrConvertable(jule::Ptr<_1d05c4504_TypeKind>& _161833_t) {
	return (((!(_1d05c569d_Void(_161833_t.ptr()))) && (_1d05c7a79_Fn(_161833_t.ptr()) == nullptr)) && (_1d05c852a_Tup(_161833_t.ptr()) == nullptr));;
}



inline jule::Str _1d05dc440_buildLinkPathByTokens(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _162227_tokens) {
	jule::Str _162313_s = _162227_tokens[0LL].get()._field_Kind;;
	{
		auto expr = _162227_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_1ab278c05:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_162412_token = *it;
			{
				_162313_s+=jule::Str("::", 2);
				_162313_s+=_162412_token.get()._field_Kind;
			}
			_iter_next_1ab278c05:;
			++it;
			goto _iter_begin_1ab278c05;
		}
		_iter_end_1ab278c05:;
	};
	return _162313_s;;
}



inline jule::Ptr<_1d05c9251_Prim> _1d05dc7e7_buildPrimType(jule::Str _163118_kind) {
	return jule::new_ptr<_1d05c9251_Prim>(_1d05c9251_Prim{._field_Kind=_163118_kind});;
}



inline jule::Ptr<_1ea31ed8e_Struct> _1d05dca8e_getStructFromKind(jule::Ptr<_1d05c4504_TypeKind> _163726_k) {
	{
		
		if ((_163726_k == nullptr)) {
			_case_begin_1ab279e37:;
			{
				return nullptr;;
			}
		}
		else if ((_1d05c7cdd_Struct(_163726_k.ptr()) != nullptr)) {
			_case_begin_1ab279e9d:;
			{
				return _1d05c7cdd_Struct(_163726_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1d05c6b00_Sptr(_163726_k.ptr()) != nullptr)) {
			_case_begin_1ab27a014:;
			{
				return _1d05dca8e_getStructFromKind(_1d05c6b00_Sptr(_163726_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1d05c7815_Slc(_163726_k.ptr()) != nullptr)) {
			_case_begin_1ab27a07a:;
			{
				return _1d05dca8e_getStructFromKind(_1d05c7815_Slc(_163726_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1d05c75a1_Arr(_163726_k.ptr()) != nullptr)) {
			_case_begin_1ab27a311:;
			{
				return _1d05dca8e_getStructFromKind(_1d05c75a1_Arr(_163726_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1d05c6d64_Ptr(_163726_k.ptr()) != nullptr)) {
			_case_begin_1ab27a377:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1ab279dc1:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab27940e:;
	};
}



inline jule::Bool _1d05dcd36_isPrim(jule::Str _166011_kind) {
	return ((((((((((((((((_166011_kind == jule::Str("i8", 2)) || (_166011_kind == jule::Str("i16", 3))) || (_166011_kind == jule::Str("i32", 3))) || (_166011_kind == jule::Str("i64", 3))) || (_166011_kind == jule::Str("u8", 2))) || (_166011_kind == jule::Str("u16", 3))) || (_166011_kind == jule::Str("u32", 3))) || (_166011_kind == jule::Str("u64", 3))) || (_166011_kind == jule::Str("f32", 3))) || (_166011_kind == jule::Str("f64", 3))) || (_166011_kind == jule::Str("int", 3))) || (_166011_kind == jule::Str("uint", 4))) || (_166011_kind == jule::Str("uintptr", 7))) || (_166011_kind == jule::Str("bool", 4))) || (_166011_kind == jule::Str("str", 3))) || (_166011_kind == jule::Str("any", 3)));;
}



inline void _1d05dd0de_applyImplicitCast(jule::Ptr<_1d05c4504_TypeKind>& _167927_dest, jule::Ptr<_1d0598572_Data>& _167949_d) {
	if (_1d05c5439_IsNil(_167949_d.get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1d05c9251_Prim> _16839_destPrim = _1d05c688b_Prim(_167927_dest.ptr());;
	jule::Ptr<_1d05c9251_Prim> _16849_prim = _1d05c688b_Prim(_167949_d.get()._field_Kind.ptr());;
	if ((_16839_destPrim != nullptr)) {
		if (_1d05cc6e9_IsAny(_16839_destPrim.ptr())) {
			if (((_16849_prim == nullptr) || (!(_1d05cc6e9_IsAny(_16849_prim.ptr()))))) {
				_1d05c0b82_applyCastKind(_167949_d,_167927_dest);
			};
			return;;
		};
		if (((((((!(_1d05c51c5_CppLinked(_167949_d.get()._field_Kind.ptr()))) && (!(_167949_d.get()._field_Kind.get()._field_Variadic))) && (!(_167949_d.get()._field_Lvalue))) && (!(_1d0598e35_IsConst(_167949_d.ptr())))) && (_16849_prim != nullptr)) && _1eb0090a5_IsNum(_16849_prim.get()._field_Kind))) {
			_1d05c0b82_applyCastKind(_167949_d,_167927_dest);
		};
		return;;
	};
	if (((_1d05c8052_Trait(_167927_dest.ptr()) != nullptr) && (_1d05c8052_Trait(_167949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1d05c08c9_applyCastKindModel(_167949_d,_167927_dest);
		return;;
	};
	if (((_1d05c733c_TypeEnum(_167927_dest.ptr()) != nullptr) && (_1d05c733c_TypeEnum(_167949_d.get()._field_Kind.ptr()) == nullptr))) {
		_1d05c08c9_applyCastKindModel(_167949_d,_167927_dest);
		return;;
	};
}



inline __jule_tuple_x_1d0593748_SymbolTable__jule_tuple_s_22ca31eb9_Log _1d05e1158_buildSymbols(jule::Ptr<_1ea2be217_Ast>& _1622_ast, jule::Trait<_1d0526c4d_Importer>& _1638_importer, jule::Ptr<_1d04e79cc_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1d0593748_SymbolTable__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	jule::Ptr<_1d04e79cc_symbolBuilder> _1713_sb = jule::new_ptr<_1d04e79cc_symbolBuilder>(_1d04e79cc_symbolBuilder{._field_owner=_1662_owner, ._field_importer=_1638_importer, ._field_ast=_1622_ast, });;
	_1d04ec97c_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log _1d05e1587_analyzePackage(jule::Slice<jule::Ptr<_1ea2be217_Ast>>& _3024_files, jule::Trait<_1d0526c4d_Importer>& _3044_importer, jule::I64& _3065_flags) {
	__jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d0593748_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1d0593748_SymbolTable>>::alloc(0LL, _3024_files.len());;
	{
		auto &expr = _3024_files;
		auto it = expr.begin();
		_iter_begin_1ab37d8ba:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2be217_Ast> _3317_f = *it;
			{
				jule::Ptr<_1d0593748_SymbolTable> _3418_table;;
				jule::Slice<_22ca31eb9_Log> _3429_errors;;
				({
					__jule_tuple_x_1d0593748_SymbolTable__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1d05e1158_buildSymbols(_3317_f,_3044_importer,nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1ab37d8ba:;
			++it;
			goto _iter_begin_1ab37d8ba;
		}
		_iter_end_1ab37d8ba:;
	};
	jule::Ptr<_1d0532a17_Sema> _4113_sema = jule::new_ptr<_1d0532a17_Sema>(_1d0532a17_Sema{._field_flags=_3065_flags});;
	_1d054c966_check(_4113_sema, _3213_tables);
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1d052c825_Package> _4913_pkg = jule::new_ptr<_1d052c825_Package>(_1d052c825_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log _1d05e1972_AnalyzePackage(jule::Slice<jule::Ptr<_1ea2be217_Ast>> _7323_files, jule::Trait<_1d0526c4d_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1d052c825_Package> _7714_package;;
	jule::Slice<_22ca31eb9_Log> _7727_logs;;
	({
		__jule_tuple_x_1d052c825_Package__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1d05e1587_analyzePackage(_7323_files,_7342_importer,_7362_flags);
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1eb026831_FnIns> _1d05eca38_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1ab38742e:;
			{
				static jule::Ptr<_1eb026831_FnIns> _2620_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d06862ca_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1ab387ae4:;
			{
				static jule::Ptr<_1eb026831_FnIns> _2920_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d06866b5_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1ab387bd2:;
			{
				static jule::Ptr<_1eb026831_FnIns> _3220_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0686aa0_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1ab387c48:;
			{
				static jule::Ptr<_1eb026831_FnIns> _3520_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0686e8a_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1ab38772b:;
			{
				static jule::Ptr<_1eb026831_FnIns> _3820_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d06875a6_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1ab387792:;
			{
				static jule::Ptr<_1eb026831_FnIns> _4120_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0687991_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1ab387819:;
			{
				static jule::Ptr<_1eb026831_FnIns> _4420_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0688794_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1ab387891:;
			{
				static jule::Ptr<_1eb026831_FnIns> _4720_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d0689993_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1ab387cc0:;
			{
				static jule::Ptr<_1eb026831_FnIns> _5020_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068a510_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1ab387d47:;
			{
				static jule::Ptr<_1eb026831_FnIns> _5320_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068ad7e_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1ab387dbe:;
			{
				static jule::Ptr<_1eb026831_FnIns> _5620_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068b269_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1ab387e46:;
			{
				static jule::Ptr<_1eb026831_FnIns> _5920_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068b830_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1ab3875b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab38751c:;
	};
}



inline jule::Ptr<_1d05c3811_TypeAlias> _1d05ee672_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1ab390536:;
			{
				static jule::Ptr<_1d05c3811_TypeAlias> _6920_t = jule::new_ptr<_1d05c3811_TypeAlias>(_1d05c3811_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1ab39059c:;
			{
				static jule::Ptr<_1d05c3811_TypeAlias> _7920_t = jule::new_ptr<_1d05c3811_TypeAlias>(_1d05c3811_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1d05c88d2_TypeSymbol>(_1d05c88d2_TypeSymbol{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1ab38ee70:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab38e997:;
	};
}



inline jule::Any _1d060404a_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1eb026831_FnIns> _9413_f = _1d05eca38_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type9);;
	};
	jule::Ptr<_1d05c3811_TypeAlias> _9813_ta = _1d05ee672_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type69);;
	};
	return nullptr;;
}



inline jule::Any _1d0603203_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1ab3934d4:;
			{
				static jule::Ptr<_1eb026831_FnIns> _10820_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068d26b_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1ab393bdd:;
			{
				static jule::Ptr<_1eb026831_FnIns> _11120_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068d656_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type9);;
			}
		}
		else {
			_case_begin_1ab3932a3:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3936b0:;
	};
}



inline jule::Any _1d0603335_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1ab39556e:;
			{
				static jule::Ptr<_1eb026831_FnIns> _12120_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068bb93_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1ab3955d5:;
			{
				static jule::Ptr<_1eb026831_FnIns> _12420_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068c0b1_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1ab395393:;
			{
				static jule::Ptr<_1eb026831_FnIns> _12720_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068c4ce_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type9);;
			}
		}
		else {
			_case_begin_1ab393803:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3945d4:;
	};
}



inline jule::Any _1d05ea2b6_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1ab39783a:;
			{
				static jule::Ptr<_1eb026831_FnIns> _13720_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068c90d_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type9);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1ab3978a1:;
			{
				static jule::Ptr<_1eb026831_FnIns> _14020_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_Decl=jule::new_ptr<_1eb023b80_Fn>(_1eb023b80_Fn{._field_Generics=jule::Slice<jule::Ptr<_1ea310995_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068cd2b_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type9);;
			}
		}
		else {
			_case_begin_1ab39564b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab3968a0:;
	};
}



inline jule::Any _1d05ea3e8_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1ab3997a4:;
			{
				return _1d0603203_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1ab39981a:;
			{
				return _1d0603335_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1ab3995c8:;
			{
				return _1d05ea2b6_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1ab3991bb:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab398286:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d068540b_builtinCallerCommonPlain(jule::Ptr<_1d059a0e0_Eval>& _16534_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _16549_fc, jule::Ptr<_1d0598572_Data>& _16571_d) {
	jule::Ptr<_1eb026831_FnIns> _16613_f = _1d05c7a79_Fn(_16571_d.get()._field_Kind.ptr());;
	_1d058a311_fnCallArgChecker _16813_fcac = _1d058a311_fnCallArgChecker{._field_e=_16534_e, ._field_args=_16549_fc.get()._field_Args, ._field_errorToken=_16549_fc.get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1d058c6cb_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1eb017712_FnCallExprModel> _17913_model = jule::new_ptr<_1eb017712_FnCallExprModel>(_1eb017712_FnCallExprModel{._field_Token=_16549_fc.get()._field_Token, ._field_Func=_16613_f, ._field_Expr=_16571_d.get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		_16571_d=_1d05c0d80_buildVoidData();
	} else {
		_16571_d=jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	_16571_d.get()._field_Model=jule::Any(_17913_model, &__jule_any_type36);
	return _16571_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d06856b4_builtinCallerCommon(jule::Ptr<_1d059a0e0_Eval>& _19829_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _19844_fc, jule::Ptr<_1d0598572_Data>& _19866_d) {
	return _1d068540b_builtinCallerCommonPlain(_19829_e,_19844_fc,_19866_d);;
}



inline jule::Ptr<_1d0598572_Data> _1d0685a9e_builtinCallerCommonMut(jule::Ptr<_1d059a0e0_Eval>& _20232_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _20247_fc, jule::Ptr<_1d0598572_Data>& _20269_d) {
	if ((!(_20269_d.get()._field_Mutable))) {
		_1d059a5eb_pushErr(_20232_e.ptr(), _20247_fc.get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	return _1d06856b4_builtinCallerCommon(_20232_e,_20247_fc,_20269_d);;
}



inline jule::Ptr<_1d0598572_Data> _1d0685de0_builtinCallerError(jule::Ptr<_1d059a0e0_Eval>& _20928_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _20943_fc) {
	if ((_20943_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_20943_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _21713_expr = _1d05b5a12_evalExpr(_20928_e, _20943_fc.get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1d059895c_IsNil(_21713_expr.ptr())) {
		_1d059a5eb_pushErr(_20928_e.ptr(), _20943_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("you cannot call error function with nil", 39),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _22613_d = _1d05c0d80_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01ec47_BuiltinErrorCallExprModel>(_1eb01ec47_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type24);
	return _22613_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d06862ca_builtinCallerOut(jule::Ptr<_1d059a0e0_Eval>& _23126_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _23141_fc, jule::Ptr<_1d0598572_Data>& ) {
	if ((_23141_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_23141_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _24013_expr = _1d05b5a12_evalExpr(_23126_e, _23141_fc.get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d05dc1ba_isBuiltinStrConvertable(_24013_expr.get()._field_Kind)))) {
		_1d059a5eb_pushErr(_23126_e.ptr(), _23141_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _25013_d = _1d05c0d80_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01b8d1_BuiltinOutCallExprModel>(_1eb01b8d1_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type29);
	return _25013_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d06866b5_builtinCallerOutln(jule::Ptr<_1d059a0e0_Eval>& _25528_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _25543_fc, jule::Ptr<_1d0598572_Data>& _25565_d) {
	_25565_d=_1d06862ca_builtinCallerOut(_25528_e,_25543_fc,_25565_d);
	if ((_25565_d == nullptr)) {
		return nullptr;;
	};
	_25565_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>(_1eb01bcbb_BuiltinOutlnCallExprModel{._field_Expr=_25565_d.get()._field_Model.cast_ptr<_1eb01b8d1_BuiltinOutCallExprModel>(&__jule_any_type29).get()._field_Expr, }), &__jule_any_type30);
	return _25565_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0686aa0_builtinCallerNew(jule::Ptr<_1d059a0e0_Eval>& _26726_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _26741_fc, jule::Ptr<_1d0598572_Data>& _26763_d) {
	if ((_26741_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_26741_fc.get()._field_Args.len() > 2LL)) {
		_1d059a5eb_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _27613_t = _1d05b53e6_evalExprKind(_26726_e, _26741_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1d059a5eb_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1d05dbb59_isValidForSptrType(_27613_t.get()._field_Kind)))) {
		jule::Ptr<_1ea320268_StructIns> _28717_s = _1d05c7cdd_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1d059a5eb_pushErr(_26726_e.ptr(), _26741_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	_26763_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1d05cc9d5_Sptr>(_1d05cc9d5_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if ((_26741_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1d05c4504_TypeKind> _30117_old = _26726_e.get()._field_prefix;;
		_26726_e.get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1d0598572_Data> _30417_init = _1d05b5a12_evalExpr(_26726_e, _26741_fc.get()._field_Args[1LL]);;
		_26726_e.get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_212a0c2ab_Token> _30921_token = _26741_fc.get()._field_Args[1LL].get()._field_Token;;
			;
			_1d05404c5_checkValidityForInitExpr(_26726_e.get()._field_s, (!(_26726_e.get()._field_immutable)),false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_1d053c5b0_checkAssignType(_26726_e.get()._field_s, false,_27613_t.get()._field_Kind,_30417_init,_30921_token);
			_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01c4c5_BuiltinNewCallExprModel>(_1eb01c4c5_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type121);
		};
	} else {
		_26763_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01c4c5_BuiltinNewCallExprModel>(_1eb01c4c5_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type121);
	};
	return _26763_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0686e8a_builtinCallerPanic(jule::Ptr<_1d059a0e0_Eval>& _32928_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _32943_fc, jule::Ptr<_1d0598572_Data>& ) {
	if ((_32943_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_32943_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _33813_expr = _1d05b5a12_evalExpr(_32928_e, _32943_fc.get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1d05c688b_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1d05cc485_IsStr(_1d05c688b_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1d059a5eb_pushErr(_32928_e.ptr(), _32943_fc.get()._field_Token,jule::Str("panic function only accepts strings", 35),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _34713_d = _1d05c0d80_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01c8b0_BuiltinPanicCallExprModel>(_1eb01c8b0_BuiltinPanicCallExprModel{._field_Token=_32943_fc.get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type31);
	return _34713_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d06875a6_builtinCallerMake(jule::Ptr<_1d059a0e0_Eval>& _35527_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _35542_fc, jule::Ptr<_1d0598572_Data>& _35564_d) {
	if ((_35542_fc.get()._field_Args.len() < 2LL)) {
		if ((_35542_fc.get()._field_Args.len() == 1LL)) {
			_1d059a5eb_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type7)}));
			return nullptr;;
		};
		_1d059a5eb_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _36513_t = _1d05b53e6_evalExprKind(_35527_e, _35542_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1d059a5eb_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_35542_fc.get()._field_Args.len() > 3LL)) {
		_1d059a5eb_pushErr(_35527_e.ptr(), _35542_fc.get()._field_Args[3LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
		return nullptr;;
	};
	_35564_d.get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1d0598572_Data> _38113_lenExpr = _1d05b5a12_evalExpr(_1d053bca7_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1d05a3bdc_checkIntegerIndexingByData(_35527_e.ptr(), _38113_lenExpr,_35542_fc.get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1eb01d31c_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1eb01d31c_BuiltinMakeCallExprModel>(_1eb01d31c_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	_35564_d.get()._field_Model=jule::Any(_38813_model, &__jule_any_type122);
	if ((_35542_fc.get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1d0598572_Data> _39417_capExpr = _1d05b5a12_evalExpr(_1d053bca7_evalp(_35527_e.get()._field_s, _35527_e.get()._field_lookup,_36513_t.get()._field_Kind), _35542_fc.get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return _35564_d;;
		};
		_1d05a3bdc_checkIntegerIndexingByData(_35527_e.ptr(), _39417_capExpr,_35542_fc.get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return _35564_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0687991_builtinCallerAppend(jule::Ptr<_1d059a0e0_Eval>& _40429_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _40444_fc, jule::Ptr<_1d0598572_Data>& _40466_d) {
	if ((_40444_fc.get()._field_Args.len() < 2LL)) {
		if ((_40444_fc.get()._field_Args.len() == 1LL)) {
			_1d059a5eb_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type7)}));
			return nullptr;;
		};
		_1d059a5eb_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _41413_t = _1d05b5a12_evalExpr(_40429_e, _40444_fc.get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1d05c7815_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1d059a5eb_pushErr(_40429_e.ptr(), _40444_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1eb026831_FnIns> _42413_f = jule::new_ptr<_1eb026831_FnIns>(_1eb026831_FnIns{._field_Params=jule::Slice<jule::Ptr<_1eb025962_ParamIns>>::make({jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1eb025962_ParamIns>(_1eb025962_ParamIns{._field_Decl=jule::new_ptr<_1eb022343_Param>(_1eb022343_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1d05c7815_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1d0598572_Data>(jule::Ptr<_1d059a0e0_Eval>&,jule::Ptr<_1ea30bba0_FnCallExpr>&,jule::Ptr<_1d0598572_Data>&)>(_1d068540b_builtinCallerCommonPlain), });;
	_40466_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_42413_f, 1)});
	_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01ab99_CommonIdentExprModel>(_1eb01ab99_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type74);
	_40466_d=_1d068540b_builtinCallerCommonPlain(_40429_e,_40444_fc,_40466_d);
	if ((_40466_d != nullptr)) {
		jule::Ptr<_1eb017712_FnCallExprModel> _45217_model = _40466_d.get()._field_Model.cast_ptr<_1eb017712_FnCallExprModel>(&__jule_any_type36);;
		_40466_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01d707_BuiltinAppendCallExprModel>(_1eb01d707_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type27);
	};
	return _40466_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0687e25_callerCopySlice(jule::Ptr<_1d0598572_Data>& _46125_dest, jule::Ptr<_1d059a0e0_Eval>& _46143_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _46158_fc, jule::Ptr<_1d0598572_Data>& _46180_d) {
	if ((!(_46125_dest.get()._field_Mutable))) {
		_1d059a5eb_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _46613_src = _1d05b5a12_evalExpr(_46143_e, _46158_fc.get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d05cd442_Slc> _47013_slc = _1d05c7815_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1d05c5b76_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1d059a5eb_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
		};
		if ((!(_1d05c4c0d_Equal(_46125_dest.get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1d059a5eb_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type7)}));
		};
	} else {
		jule::Ptr<_1d05c9251_Prim> _48013_destPrim = _1d05c688b_Prim(_1d05c7815_Slc(_46125_dest.get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1d05c9251_Prim> _48113_prim = _1d05c688b_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1d05cc485_IsStr(_48113_prim.ptr())))) || (!(_1d05caa5a_IsU8(_48013_destPrim.ptr()))))) {
			_1d059a5eb_pushErr(_46143_e.ptr(), _46158_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_46125_dest.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type7)}));
		};
	};
	_46180_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)});
	_46180_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01e85c_BuiltinCopyCallExprModel>(_1eb01e85c_BuiltinCopyCallExprModel{._field_Dest=_46125_dest, ._field_Src=_46613_src}), &__jule_any_type33);
	return _46180_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d06883a9_callerCopyStr(jule::Ptr<_1d0598572_Data>& _49523_dest, jule::Ptr<_1d059a0e0_Eval>& _49541_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _49556_fc, jule::Ptr<_1d0598572_Data>& _49578_d) {
	if ((!(_49523_dest.get()._field_Mutable))) {
		_1d059a5eb_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _50013_src = _1d05b5a12_evalExpr(_49541_e, _49556_fc.get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1d05c688b_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3d86b1:;
			{
				if (_1d05cc485_IsStr(_1d05c688b_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1d05c7815_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3d8727:;
			{
				jule::Ptr<_1d05cd442_Slc> _51017_slc = _1d05c7815_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1d05c688b_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1d05caa5a_IsU8(_1d05c688b_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1ab3d8491:;
	};
	_1d059a5eb_pushErr(_49541_e.ptr(), _49556_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_49523_dest.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(_1d05c4900_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type7)}));
	_julec_label_end:;
	_49578_d.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("int", 3)), 6)});
	_49578_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01e85c_BuiltinCopyCallExprModel>(_1eb01e85c_BuiltinCopyCallExprModel{._field_Dest=_49523_dest, ._field_Src=_50013_src}), &__jule_any_type33);
	return _49578_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0688794_builtinCallerCopy(jule::Ptr<_1d059a0e0_Eval>& _52527_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _52542_fc, jule::Ptr<_1d0598572_Data>& _52564_d) {
	if ((_52542_fc.get()._field_Args.len() < 2LL)) {
		if ((_52542_fc.get()._field_Args.len() == 1LL)) {
			_1d059a5eb_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type7)}));
			return nullptr;;
		};
		_1d059a5eb_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_52542_fc.get()._field_Args.len() > 2LL)) {
		_1d059a5eb_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _53813_dest = _1d05b5a12_evalExpr(_52527_e, _52542_fc.get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1ab3e3a84:;
			{
				return nullptr;;
			}
		}
		else if ((_1d05c7815_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3e3aea:;
			{
				return _1d0687e25_callerCopySlice(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else if (((_1d05c688b_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1d05cc485_IsStr(_1d05c688b_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab3e38db:;
			{
				return _1d06883a9_callerCopyStr(_53813_dest,_52527_e,_52542_fc,_52564_d);;
			}
		}
		else {
			_case_begin_1ab3e2b0a:;
			{
				_1d059a5eb_pushErr(_52527_e.ptr(), _52542_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid type", 12),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab3e2a94:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d0688ad5_callerLenSlice(jule::Ptr<_1d0598572_Data>& _55224_expr, jule::Ptr<_1d0598572_Data>& _55242_d) {
	_55242_d.get()._field_Kind=_1d05927be_lenKind();
	_55242_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01da26_BuiltinLenCallExprModel>(_1eb01da26_BuiltinLenCallExprModel{._field_Expr=_55224_expr}), &__jule_any_type123);
	return _55242_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0688e26_callerLenMap(jule::Ptr<_1d0598572_Data>& _56022_expr, jule::Ptr<_1d0598572_Data>& _56040_d) {
	_56040_d.get()._field_Kind=_1d05927be_lenKind();
	_56040_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01da26_BuiltinLenCallExprModel>(_1eb01da26_BuiltinLenCallExprModel{._field_Expr=_56022_expr}), &__jule_any_type123);
	return _56040_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0689267_callerLenArr(jule::Ptr<_1d0598572_Data>& _56822_expr, jule::Ptr<_1d0598572_Data>& _56840_d) {
	_56840_d.get()._field_Kind=_1d05927be_lenKind();
	_56840_d.get()._field_Constant=static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d05c75a1_Arr(_56822_expr.get()._field_Kind.ptr()).get()._field_N)));
	_56840_d.get()._field_Model=jule::Any(_56840_d.get()._field_Constant, &__jule_any_type49);
	return _56840_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d06895a8_callerLenStr(jule::Ptr<_1d0598572_Data>& _57522_expr, jule::Ptr<_1d0598572_Data>& _57540_d) {
	_57540_d.get()._field_Kind=_1d05927be_lenKind();
	if (_1d0598e35_IsConst(_57522_expr.ptr())) {
		_57540_d.get()._field_Constant=static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1eb00b5e6_ReadStr(_57522_expr.get()._field_Constant.ptr()).len())));
		_57540_d.get()._field_Model=jule::Any(_57540_d.get()._field_Constant, &__jule_any_type49);
	} else {
		_57540_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01da26_BuiltinLenCallExprModel>(_1eb01da26_BuiltinLenCallExprModel{._field_Expr=_57522_expr}), &__jule_any_type123);
	};
	return _57540_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d0689993_builtinCallerLen(jule::Ptr<_1d059a0e0_Eval>& _58826_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _58841_fc, jule::Ptr<_1d0598572_Data>& _58863_d) {
	if ((_58841_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_58841_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _59613_dest = _1d05b5a12_evalExpr(_58826_e, _58841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1ab3ed8e6:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1ab3ed95c:;
			{
				_1d059a5eb_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d05c7815_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3ed74d:;
			{
				return _1d0688ad5_callerLenSlice(_59613_dest,_58863_d);;
			}
		}
		else if ((_1d05c75a1_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3ed7c5:;
			{
				return _1d0689267_callerLenArr(_59613_dest,_58863_d);;
			}
		}
		else if ((_1d05c82b6_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab3ec9d3:;
			{
				return _1d0688e26_callerLenMap(_59613_dest,_58863_d);;
			}
		}
		else if (((_1d05c688b_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1d05cc485_IsStr(_1d05c688b_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab3eca49:;
			{
				return _1d06895a8_callerLenStr(_59613_dest,_58863_d);;
			}
		}
		else {
			_case_begin_1ab3ec96c:;
			{
				_1d059a5eb_pushErr(_58826_e.ptr(), _58841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab3ec906:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d0689cd4_callerCapSlice(jule::Ptr<_1d0598572_Data>& _61724_expr, jule::Ptr<_1d0598572_Data>& _61742_d) {
	_61742_d.get()._field_Kind=_1d05927be_lenKind();
	_61742_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01dd45_BuiltinCapCallExprModel>(_1eb01dd45_BuiltinCapCallExprModel{._field_Expr=_61724_expr}), &__jule_any_type124);
	return _61742_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d068a125_callerCapStr(jule::Ptr<_1d0598572_Data>& _62522_expr, jule::Ptr<_1d0598572_Data>& _62540_d) {
	_62540_d.get()._field_Kind=_1d05927be_lenKind();
	if (_1d0598e35_IsConst(_62522_expr.ptr())) {
		_62540_d.get()._field_Constant=static__1eb009a34_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1eb00b5e6_ReadStr(_62522_expr.get()._field_Constant.ptr()).cap())));
		_62540_d.get()._field_Model=jule::Any(_62540_d.get()._field_Constant, &__jule_any_type49);
	} else {
		_62540_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01dd45_BuiltinCapCallExprModel>(_1eb01dd45_BuiltinCapCallExprModel{._field_Expr=_62522_expr}), &__jule_any_type124);
	};
	return _62540_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d068a510_builtinCallerCap(jule::Ptr<_1d059a0e0_Eval>& _63826_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _63841_fc, jule::Ptr<_1d0598572_Data>& _63863_d) {
	if ((_63841_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_63841_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _64613_dest = _1d05b5a12_evalExpr(_63826_e, _63841_fc.get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1ab40d5a4:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1ab40d61a:;
			{
				_1d059a5eb_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d05c7815_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab40d40b:;
			{
				return _1d0689cd4_callerCapSlice(_64613_dest,_63863_d);;
			}
		}
		else if (((_1d05c688b_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1d05cc485_IsStr(_1d05c688b_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1ab40d472:;
			{
				return _1d068a125_callerCapStr(_64613_dest,_63863_d);;
			}
		}
		else {
			_case_begin_1ab40c62a:;
			{
				_1d059a5eb_pushErr(_63826_e.ptr(), _63841_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab40c5b4:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d068a994_callerDeleteMap(jule::Ptr<_1d059a0e0_Eval>& _66325_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _66340_fc, jule::Ptr<_1d0598572_Data>& _66362_expr, jule::Ptr<_1d0598572_Data>& _66380_d) {
	if ((!(_66362_expr.get()._field_Mutable))) {
		_1d059a5eb_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mutable operation cannot used with immutable data", 49),jule::Slice<jule::Any>());
	};
	_66380_d=_1d05c0d80_buildVoidData();
	jule::Ptr<_1eb01e4e9_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1eb01e4e9_BuiltinDeleteCallExprModel>(_1eb01e4e9_BuiltinDeleteCallExprModel{._field_Dest=_66362_expr, });;
	if ((_66340_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1d0598572_Data> _67217_key = _1d05b5a12_evalExpr(_66325_e, _66340_fc.get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1ab414c3c:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1ab413565:;
				{
					_1d059a5eb_pushErr(_66325_e.ptr(), _66340_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1ab4134ee:;
				{
					;
					jule::Ptr<_1d05c4504_TypeKind> _68121_keyType = _1d05c82b6_Map(_66362_expr.get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1d053c5b0_checkAssignType(_66325_e.get()._field_s, false,_68121_keyType,_67217_key,_66340_fc.get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1ab413488:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	_66380_d.get()._field_Model=jule::Any(_66813_model, &__jule_any_type34);
	return _66380_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d068ad7e_builtinCallerDelete(jule::Ptr<_1d059a0e0_Eval>& _69229_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _69244_fc, jule::Ptr<_1d0598572_Data>& _69266_d) {
	if ((_69244_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_69244_fc.get()._field_Args.len() > 2LL)) {
		_1d059a5eb_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _70013_dest = _1d05b5a12_evalExpr(_69229_e, _69244_fc.get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1ab41a2d6:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1ab41a34c:;
			{
				_1d059a5eb_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d05c82b6_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ab41a13d:;
			{
				return _1d068a994_callerDeleteMap(_69229_e,_69244_fc,_70013_dest,_69266_d);;
			}
		}
		else {
			_case_begin_1ab41935c:;
			{
				_1d059a5eb_pushErr(_69229_e.ptr(), _69244_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1ab4192e6:;
	};
}



inline jule::Ptr<_1d0598572_Data> _1d068b269_builtinCallerClone(jule::Ptr<_1d059a0e0_Eval>& _71528_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _71543_fc, jule::Ptr<_1d0598572_Data>& ) {
	if ((_71543_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_71543_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _72413_d = _1d05b53e6_evalExprKind(_71528_e, _71543_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d05c63b3_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1d05c7815_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1d05c82b6_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1d05c75a1_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1d05c6b00_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ab4204c8:;
				{
					{
						_1d059a5eb_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ has internally types which is not supports cloning", 57),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type7)}));
					};
				}
			}
			else if ((_1d05c7cdd_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1ab41ed35:;
				{
					{
						_1d059a5eb_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not derives @", 23),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(jule::Str("Clone", 5), &__jule_any_type77)}));
					};
				}
			}
			else {
				_case_begin_1ab41ecbe:;
				{
					{
						_1d059a5eb_pushErr(_71528_e.ptr(), _71543_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("type @ is not support cloning", 29),jule::Slice<jule::Any>::make({jule::Any(_1d05c4900_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type7),jule::Any(jule::Str("Clone", 5), &__jule_any_type77)}));
					};
				}
			}
			_match_end_1ab41e906:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1eb01c0da_BuiltinCloneCallExprModel>(_1eb01c0da_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type28);
	return _72413_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d068b830_builtinCallerAssert(jule::Ptr<_1d059a0e0_Eval>& _75729_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _75744_fc, jule::Ptr<_1d0598572_Data>& ) {
	if ((_75744_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_75744_fc.get()._field_Args.len() > 2LL)) {
		_1d059a5eb_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[2LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _76613_expr = _1d05b5a12_evalExpr(_75729_e, _75744_fc.get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1d05c688b_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1d05cc221_IsBool(_1d05c688b_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1d059a5eb_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Token,jule::Str("assertion requires boolean expression", 37),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1eb01cd66_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1eb01cd66_BuiltinAssertCallExprModel>(_1eb01cd66_BuiltinAssertCallExprModel{._field_Token=_75744_fc.get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if ((_75744_fc.get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1d0598572_Data> _78317_log = _1d05b5a12_evalExpr(_75729_e, _75744_fc.get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1d0598e35_IsConst(_78317_log.ptr()))) || (_1d05c688b_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1d05cc485_IsStr(_1d05c688b_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1d059a5eb_pushErr(_75729_e.ptr(), _75744_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type7),jule::Any(_1d05c4900_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type7)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1eb00b5e6_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1d0598572_Data> _79613_d = _1d05c0d80_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type32);
	return _79613_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d068bb93_builtinCallerStdMemSizeOf(jule::Ptr<_1d059a0e0_Eval>& _80135_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _80150_fc, jule::Ptr<_1d0598572_Data>& ) {
	jule::Ptr<_1d0598572_Data> _80213_result = jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_80150_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type7)}));
		return _80213_result;;
	};
	if ((_80150_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_80135_e.ptr(), _80150_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _81413_d = _1d05b53e6_evalExprKind(_80135_e, _80150_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1eb020044_SizeofExprModel>(_1eb020044_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type125);
	return _80213_result;;
}



inline jule::Ptr<_1d0598572_Data> _1d068c0b1_builtinCallerStdMemAlignOf(jule::Ptr<_1d059a0e0_Eval>& _82336_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _82351_fc, jule::Ptr<_1d0598572_Data>& ) {
	jule::Ptr<_1d0598572_Data> _82413_result = jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if ((_82351_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type7)}));
		return _82413_result;;
	};
	if ((_82351_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_82336_e.ptr(), _82351_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _83613_d = _1d05b53e6_evalExprKind(_82336_e, _82351_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1eb020330_AlignofExprModel>(_1eb020330_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type126);
	return _82413_result;;
}



inline jule::Ptr<_1d0598572_Data> _1d068c4ce_builtinCallerStdMemFree(jule::Ptr<_1d059a0e0_Eval>& _84533_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _84548_fc, jule::Ptr<_1d0598572_Data>& ) {
	if ((_84548_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_84548_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _85413_d = _1d05b53e6_evalExprKind(_84533_e, _84548_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d05c614e_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1d059a5eb_pushErr(_84533_e.ptr(), _84548_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _86313_result = _1d05c0d80_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1eb0210cd_FreeExprModel>(_1eb0210cd_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type35);
	return _86313_result;;
}



inline jule::Ptr<_1d0598572_Data> _1d068c90d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1d059a0e0_Eval>& _86845_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _86860_fc, jule::Ptr<_1d0598572_Data>& ) {
	if ((_86860_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	if ((_86860_fc.get()._field_Args.len() > 1LL)) {
		_1d059a5eb_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[1LL].get()._field_Token,jule::Str("argument overflow: passed more argument than expected", 53),jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0598572_Data> _87713_d = _1d05b53e6_evalExprKind(_86845_e, _86860_fc.get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d05dc1ba_isBuiltinStrConvertable(_87713_d.get()._field_Kind)))) {
		_1d059a5eb_pushErr(_86845_e.ptr(), _86860_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d0598572_Data>(_1d0598572_Data{._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(_1d05dc7e7_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1eb020929_IntegratedToStrExprModel>(_1eb020929_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type127), });;
}



inline jule::Ptr<_1d0598572_Data> _1d068cd2b_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1d059a0e0_Eval>& _89544_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _89559_fc, jule::Ptr<_1d0598572_Data>& _89581_d) {
	if ((!(_1d059b036_isUnsafe(_89544_e.ptr())))) {
		_1d059a5eb_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>());
	};
	if ((_89559_fc.get()._field_Args.len() < 1LL)) {
		_1d059a5eb_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type7)}));
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _90513_argd = _1d05b5a12_evalExpr(_89544_e, _89559_fc.get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1d05c688b_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1d05cc485_IsStr(_1d05c688b_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1d059a5eb_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("mismatched types: @ and @", 25),jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type101),jule::Any(_1d05c4900_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type7)}));
		return nullptr;;
	};
	if (((!(_1d0598e35_IsConst(_90513_argd.ptr()))) || (!(_1eb00d98e_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1d059a5eb_pushErr(_89544_e.ptr(), _89559_fc.get()._field_Args[0LL].get()._field_Token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0598572_Data> _92013_r = _1d05c0d80_buildVoidData();;
	jule::Ptr<_1eb026831_FnIns> _92213_f = _1d05c7a79_Fn(_89581_d.get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1eb020ce2_BackendEmitExprModel> _92713_model = jule::new_ptr<_1eb020ce2_BackendEmitExprModel>(_1eb020ce2_BackendEmitExprModel{._field_Code=_1eb00b5e6_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if ((_89559_fc.get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, (_89559_fc.get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = _89559_fc.get()._field_Args.slice(1LL);
			auto it = expr.begin();
			_iter_begin_1ab448b0b:;
			if (it != expr.end()) {
				jule::Ptr<_1ea307bbd_Expr> _93321_arg = *it;
				{
					_90513_argd=_1d05b53e6_evalExprKind(_89544_e, _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1ab448b0b:;
				++it;
				goto _iter_begin_1ab448b0b;
			}
			_iter_end_1ab448b0b:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type26);
	return _92013_r;;
}



inline jule::Ptr<_1d0598572_Data> _1d068d26b_builtinCallerStdDebugOut(jule::Ptr<_1d059a0e0_Eval>& _94634_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _94649_fc, jule::Ptr<_1d0598572_Data>& _94671_d) {
	_94671_d=_1d06862ca_builtinCallerOut(_94634_e,_94649_fc,_94671_d);
	if ((_94671_d == nullptr)) {
		return nullptr;;
	};
	_94671_d.get()._field_Model.cast_ptr<_1eb01b8d1_BuiltinOutCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return _94671_d;;
}



inline jule::Ptr<_1d0598572_Data> _1d068d656_builtinCallerStdDebugOutln(jule::Ptr<_1d059a0e0_Eval>& _95536_e, jule::Ptr<_1ea30bba0_FnCallExpr>& _95551_fc, jule::Ptr<_1d0598572_Data>& _95573_d) {
	_95573_d=_1d06866b5_builtinCallerOutln(_95536_e,_95551_fc,_95573_d);
	if ((_95573_d == nullptr)) {
		return nullptr;;
	};
	_95573_d.get()._field_Model.cast_ptr<_1eb01bcbb_BuiltinOutlnCallExprModel>(&__jule_any_type30).get()._field_Debug=true;
	return _95573_d;;
}



inline jule::Bool _1d0784681_FindModuleFile(jule::Slice<jule::Ptr<_22b24c131_DirEntry>>& _1220_dirents) {
	{
		auto &expr = _1220_dirents;
		auto it = expr.begin();
		_iter_begin_1ab44e31a:;
		if (it != expr.end()) {
			jule::Ptr<_22b24c131_DirEntry> &_1312_d = *it;
			{
				if (((!(_22b1c84ca_IsDir(_1312_d.get()._field_Stat.ptr()))) && (_1312_d.get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_1ab44e31a:;
			++it;
			goto _iter_begin_1ab44e31a;
		}
		_iter_end_1ab44e31a:;
	};
	return false;;
}



inline jule::Str _1d0784829_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_22b24c131_DirEntry>> _2617_dirents = ({
				auto except = static__22dcc9e31_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1ab45012e;
				} jule::Slice<jule::Ptr<_22b24c131_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1d0784681_FindModuleFile(_2617_dirents);;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_22dcc7b87_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1ab45012e;
			};
		}
	_iter_next_1ab45012e:;
	}
	_iter_end_1ab45012e:;;
	return jule::Str();;
}



inline jule::Slice<_22ca31eb9_Log> _1d0784ac1_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__22b1c9399_Read(_22dcc702c_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_22ca31eb9_Log>::make({_22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _22dcc4ea3_Trim(static_cast<jule::Str>(_479_bytes),jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_22ca31eb9_Log>::make({_22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1b7bd9060_FileInfo> _1b7c30abd_ParseFile(jule::Ptr<_212a12646_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b7bd9060_FileInfo> _2713_finf = jule::new_ptr<_1b7bd9060_FileInfo>();;
	({
		__jule_tuple_x_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log __jule_assign_result = _1b7c31151_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log _1b7c31151_parseFileset(jule::Ptr<_212a12646_File> _5521_f) {
	__jule_tuple_x_1ea2be217_Ast__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	jule::Ptr<_1b7c4eaed_parser> _5613_p = jule::new_ptr<_1b7c4eaed_parser>();;
	_1b7c5e4c0_parse(_5613_p, _5521_f);
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ea313635_ScopeTree> _1b7c31aad_newScope(void) {
	return jule::new_ptr<_1ea313635_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b7c31d66_isSt(jule::Ptr<_212a0c2ab_Token> _499_current, jule::Ptr<_212a0c2ab_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b7c321a7_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _5526_tokens, jule::I64& _5545_i) {
	if (((_5545_i > 1LL) && (_5526_tokens[(_5545_i - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_212a0c2ab_Token> _6113_prev = _5526_tokens[(_5545_i - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _212a0cca1_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < _5526_tokens[_5545_i].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b7c3253c_nextStPos(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < _7015_tokens.len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_212a0c2ab_Token> _7613_tok = _7015_tokens[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1ab4ce8ea:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1ab4d1d2b:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1b7c321a7_prevIsIncompleteExpr(_7015_tokens,_7213_i)))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b7c31d66_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1ab4d01e2:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < _7015_tokens.len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b7c31d66_isSt(_7015_tokens[(_7213_i + 1LL)],_7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1ab4d0027:;
						};
						goto _iter_next_1ab4cd102;
					}
				}
				_match_end_1ab4ce895:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1ab4cd102;
			};
			if ((_7213_i > _7033_start)) {
				if (_1b7c321a7_prevIsIncompleteExpr(_7015_tokens,_7213_i)) {
					goto _iter_next_1ab4cd102;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b7c31d66_isSt(_7613_tok,_7015_tokens[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b7c31d66_isSt(_7613_tok,_7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1ab4cd102;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1ab4cd102:;
	}
	_iter_end_1ab4cd102:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool _1b7c3287d_skipSt(jule::I64& _13216_i, jule::Slice<jule::Ptr<_212a0c2ab_Token>> _13228_tokens) {
	__jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = _13216_i;;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b7c3253c_nextStPos(_13228_tokens,_1339_start);
		_13216_i = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_212a0c2ab_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start,_13216_i);;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool __jule_assign_result = _1b7c3287d_skipSt(_13216_i,_13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL,(_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _1b7c33021_splitStmts(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _15420_tokens) {
	jule::Slice<jule::Ptr<_1b7c32b7a_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1b7c32b7a_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < _15420_tokens.len())) {
		{
			jule::Slice<jule::Ptr<_212a0c2ab_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_212a0c2ab_Token__jule_tuple_bool __jule_assign_result = _1b7c3287d_skipSt(_15613_pos,_15420_tokens);
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1b7c32b7a_stmt>(_1b7c32b7a_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1ab4d997c:;
	}
	_iter_end_1ab4d997c:;;
	return _15513_stmts;;
}



inline jule::Bool _1b7c4970d_isTypeOp(jule::Str& _88814_kind) {
	return (((_88814_kind == jule::Str("&", 1)) || (_88814_kind == jule::Str("&&", 2))) || (_88814_kind == jule::Str("*", 1)));;
}



inline jule::Bool _1b7c499e9_isTypeRange(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto &expr = _89521_tokens;
		auto it = expr.begin();
		_iter_begin_1ab090159:;
		if (it != expr.end()) {
			jule::I64 _8979_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_212a0c2ab_Token>> _90425_lTokens = _89521_tokens.slice(_8979_i);;
						{
							auto &expr = _90425_lTokens;
							auto it = expr.begin();
							_iter_begin_1ab0914ce:;
							if (it != expr.end()) {
								jule::Ptr<_212a0c2ab_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1ab092b62:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1ab0934c0:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1ab0914ce;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1ab093547:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1ab0914ce;
														}
													}
													_match_end_1ab0932e4:;
												};
											}
										}
										_match_end_1ab092920:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1b7c4970d_isTypeOp(_90524_lToken.get()._field_Kind);;
									};
								}
								_iter_next_1ab0914ce:;
								++it;
								goto _iter_begin_1ab0914ce;
							}
							_iter_end_1ab0914ce:;
						};
						return true;;
					};
				};
				if ((!(_1b7c4970d_isTypeOp(_89712_token.get()._field_Kind)))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1ab090159:;
			++it;
			_8979_i++;
			goto _iter_begin_1ab090159;
		}
		_iter_end_1ab090159:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_212a0c2ab_Token>> _1b7c49c91_getBlockExpr(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto &expr = _93322_tokens;
		auto it = expr.begin();
		_iter_begin_1ab094c96:;
		if (it != expr.end()) {
			jule::I64 _9369_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1ab095a77:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ab095aee:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ab09688b:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1ab0969ce;
										};
										return _93322_tokens.slice(0LL,_9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ab09701d:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1ab096a45:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1ab0969ce:;
							};
						}
					}
					_match_end_1ab0959cd:;
				};
			}
			_iter_next_1ab094c96:;
			++it;
			_9369_i++;
			goto _iter_begin_1ab094c96;
		}
		_iter_end_1ab094c96:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token _1b7c4a126_splitDelim(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto &expr = _96420_tokens;
		auto it = expr.begin();
		_iter_begin_1ab0955b0:;
		if (it != expr.end()) {
			jule::I64 _9669_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1ab09920c:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1ab099eee:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1ab0955b0;
									}
								}
								else {
									_case_begin_1ab099b03:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1ab099938:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1ab099284:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_212a0c2ab_Token>> _98025_l = _96420_tokens.slice(0LL,_9669_i);;
								jule::Slice<jule::Ptr<_212a0c2ab_Token>> _98125_r = _96420_tokens.slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1ab098ecb:;
				};
			}
			_iter_next_1ab0955b0:;
			++it;
			_9669_i++;
			goto _iter_begin_1ab0955b0;
		}
		_iter_end_1ab0955b0:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1b7c4a3bd_findLowestPrecOp(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto &expr = _99122_tokens;
		auto it = expr.begin();
		_iter_begin_1ab09c809:;
		if (it != expr.end()) {
			jule::I64 _10019_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> &_100112_token = *it;
			{
				{
					
					if ((_100112_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1ab09d541:;
						{
							{
								auto &_match_expr{ _100112_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1ab09e19b:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1ab09e8c7;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1ab09e8c7:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1ab09e432:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1ab09e267:;
							};
							goto _iter_next_1ab09c809;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1ab09d5b8:;
						{
							goto _iter_next_1ab09c809;
						}
					}
					else if ((_100112_token.get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1ab09d640:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1ab09c809;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1ab09d6b7:;
						{
							goto _iter_next_1ab09c809;
						}
					}
					else if ((_100112_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1ab09d73e:;
						{
							goto _iter_next_1ab09c809;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1ab09d7b6:;
						{
							goto _iter_next_1ab09c809;
						}
					}
					_match_end_1ab09d3dc:;
				};
				jule::Ptr<_212a0c2ab_Token> _102813_left = _99122_tokens[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1ab09c809;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_212a0c2ab_Token> _103617_lleft = _99122_tokens[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if (((_100112_token.get()._field_Kind == jule::Str("&", 1)) || (_100112_token.get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1ab09c809;
						};
					};
				};
				jule::U8 _104513_p = _212a0c663_Prec(_100112_token.ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1ab09c809:;
			++it;
			_10019_i++;
			goto _iter_begin_1ab09c809;
		}
		_iter_end_1ab09c809:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_1ea30987e_IdentExpr> _1b7c4a665_buildIdentExpr(jule::Ptr<_212a0c2ab_Token>& _105424_token) {
	return jule::new_ptr<_1ea30987e_IdentExpr>(_1ea30987e_IdentExpr{._field_Token=_105424_token, ._field_Ident=_105424_token.get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_int _1b7c4a90c_getRangeExprTokens(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _106228_tokens) {
	__jule_tuple_sx_212a0c2ab_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = (_106228_tokens.len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_212a0c2ab_Token> _106613_tok = _106228_tokens[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ab0a7d86:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1ab0a7979:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1ab0a776a:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _106228_tokens.slice(0LL,_106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1ab0a6956:;
	}
	_iter_end_1ab0a6956:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1b7c4b666_checkAssignTokens(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _1623_tokens) {
	if (((_1623_tokens.len() == 0LL) || (!(_212a11854_IsAssign(_1623_tokens[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto &expr = _1623_tokens;
		auto it = expr.begin();
		_iter_begin_1ab56e8d0:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_2112_t = *it;
			{
				if ((_2112_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _2112_t.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab570b67:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1ab57075a:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1ab57054b:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1ab56e8d0;
				} else if (((_2112_t.get()._field_Id == static_cast<jule::U64>(7LLU)) && _212a11d93_IsAssignOp(_2112_t.get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1ab56e8d0:;
			++it;
			goto _iter_begin_1ab56e8d0;
		}
		_iter_end_1ab56e8d0:;
	};
	return false;;
}



inline _22ca31eb9_Log _1b7c4c887_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_212a12646_File>& _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=_5233_f.get()._field_Path, ._field_Text=_22ca32409_Logf(_5243_fmt,_5256_args), };;
}



inline jule::Slice<jule::Ptr<_212a0c2ab_Token>> _1b7c4cd60_range(jule::I64& _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _7163_tokens) {
	if ((_7115_i >= _7163_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_212a0c2ab_Token> _759_tok = _7163_tokens[_7115_i];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	(_7115_i)++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = _7115_i;;
	for (; ((_8013_rangeN != 0LL) && (_7115_i < _7163_tokens.len())); (_7115_i)++) {
		{
			jule::Ptr<_212a0c2ab_Token> _8313_token = _7163_tokens[_7115_i];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1ab5764db:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1ab576563:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1ab5762aa:;
				};
			};
		}
	_iter_next_1ab5754da:;
	}
	_iter_end_1ab5754da:;;
	return _7163_tokens.slice(_819_start,(_7115_i - 1LL));;
}



inline __jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token _1b7c4d107_rangeLast(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _10319_tokens) {
	__jule_tuple_sx_212a0c2ab_Token__jule_tuple_sx_212a0c2ab_Token __jule_func_result;
	if ((_10319_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if ((_10319_tokens[(_10319_tokens.len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = _10319_tokens;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = (_10319_tokens.len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_212a0c2ab_Token> _11213_token = _10319_tokens[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1ab57a80e:;
						{
							(_10913_braceN)++;
							goto _iter_next_1ab577564;
						}
					}
					else {
						_case_begin_1ab57a402:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1ab57a1e3:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = _10319_tokens.slice(0LL,_11013_i);
				__jule_func_result.__jule_result_arg1 = _10319_tokens.slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1ab577564:;
	}
	_iter_end_1ab577564:;;
	__jule_func_result.__jule_result_arg0 = _10319_tokens;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log _1b7c4d4e2_partsKind(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	if ((_13219_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _13713_parts = nullptr;;
	jule::Slice<_22ca31eb9_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto &expr = _13219_tokens;
		auto it = expr.begin();
		_iter_begin_1ab57d526:;
		if (it != expr.end()) {
			jule::I64 _1429_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab57eba9:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1ab57d526;
							}
						}
						else {
							_case_begin_1ab57e79c:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1ab57e58d:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1ab57d526;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_22ca31eb9_Log _16121_err = _1b7c4c887_makeErr(_14212_token.get()._field_Row,_14212_token.get()._field_Column,_14212_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last,_1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1ab57d526:;
			++it;
			_1429_i++;
			goto _iter_begin_1ab57d526;
		}
		_iter_end_1ab57d526:;
	};
	if ((_14113_last < _13219_tokens.len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(_13219_tokens.slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_212a0c2ab_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log _1b7c4d8cc_parts(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_212a0c2ab_Token__jule_tuple_s_22ca31eb9_Log __jule_func_result;
	if ((_18415_tokens.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_212a0c2ab_Token>>> _18913_parts = nullptr;;
	jule::Slice<_22ca31eb9_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto &expr = _18415_tokens;
		auto it = expr.begin();
		_iter_begin_1ab584c14:;
		if (it != expr.end()) {
			jule::I64 _1949_i = it - expr.begin();
			jule::Ptr<_212a0c2ab_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1ab586397:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1ab584c14;
							}
						}
						else {
							_case_begin_1ab585e8a:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1ab585c7b:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1ab584c14;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_22ca31eb9_Log _21321_err = _1b7c4c887_makeErr(_19412_token.get()._field_Row,_19412_token.get()._field_Column,_19412_token.get()._field_File,jule::Str("expression missing", 18),jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last,_1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1ab584c14:;
			++it;
			_1949_i++;
			goto _iter_begin_1ab584c14;
		}
		_iter_end_1ab584c14:;
	};
	if ((_19313_last < _18415_tokens.len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(_18415_tokens.slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_212a0c2ab_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1b7c4db74_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1ab589895:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1ab58990b:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1ab589686:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1ab58893d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1ab5888d8:;
	};
}



inline _22ca31eb9_Log _1b7c4e05e_compilerErr(jule::Ptr<_212a0c2ab_Token>& _24317_token, jule::Str& _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_24317_token.get()._field_Row, ._field_Column=_24317_token.get()._field_Column, ._field_Path=_24317_token.get()._field_File.get()._field_Path, ._field_Text=_22ca32409_Logf(_24333_fmt,_24346_args), ._field_Line=_212a13823_GetRow(_24317_token.get()._field_File.ptr(), _24317_token.get()._field_Row), };;
}



inline void _1b7c4e48d_pushSuggestion(_22ca31eb9_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_22ca32409_Logf(_25441_fmt,_25454_args);
}



inline jule::Str _1b7c4e735_tokstoa(jule::Slice<jule::Ptr<_212a0c2ab_Token>>& _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1ab58c557:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_26012_token = *it;
			{
				_25913_n+=_26012_token.get()._field_Kind.len();
			}
			_iter_next_1ab58c557:;
			++it;
			goto _iter_begin_1ab58c557;
		}
		_iter_end_1ab58c557:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto &expr = _25813_tokens;
		auto it = expr.begin();
		_iter_begin_1ab58cc0b:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_26412_token = *it;
			{
				_26313_s+=_26412_token.get()._field_Kind;
			}
			_iter_next_1ab58cc0b:;
			++it;
			goto _iter_begin_1ab58cc0b;
		}
		_iter_end_1ab58cc0b:;
	};
	return _26313_s;;
}



inline jule::Bool _1b7c5e79a_isPub(jule::Str& _203511_ident) {
	jule::I32 _203610_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22dc8d961_DecodeRuneStr(_203511_ident);
		_203610_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22dbc6855_IsUpper(_203610_r);;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6016e_buildVoidType(void) {
	return jule::new_ptr<_1ea30369c_TypeDecl>();;
}



inline jule::Ptr<_1ea30369c_TypeDecl> _1b7c6037d_buildPrimType(jule::Ptr<_212a0c2ab_Token> _2322_t) {
	return jule::new_ptr<_1ea30369c_TypeDecl>(_1ea30369c_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1ea303c63_IdentTypeDecl>(_1ea303c63_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type21)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1d075d869_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1ab73c949:;
			{
				__jule_func_result.__jule_result_arg0=_22ca352ca_IsWindows(_21271b97c_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1ab73c350:;
			{
				__jule_func_result.__jule_result_arg0=_22ca35583_IsDarwin(_21271b97c_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1ab73c3b6:;
			{
				__jule_func_result.__jule_result_arg0=_22ca3582a_IsLinux(_21271b97c_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1ab73c42c:;
			{
				__jule_func_result.__jule_result_arg0=_22ca36430_IsUnix(_21271b97c_Os);
			}
		}
		else {
			_case_begin_1ab73bb02:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ab73c020:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1d076ed0e_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1ab73e7e7:;
			{
				__jule_func_result.__jule_result_arg0=_22ca35b49_IsI386(_2126e4108_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1ab73e85d:;
			{
				__jule_func_result.__jule_result_arg0=_22ca35de1_IsAmd64(_2126e4108_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1ab73e8c4:;
			{
				__jule_func_result.__jule_result_arg0=_22ca36188_IsArm64(_2126e4108_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1ab73e93a:;
			{
				__jule_func_result.__jule_result_arg0=_22ca36a4b_Is64Bit(_2126e4108_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1ab73e9a1:;
			{
				__jule_func_result.__jule_result_arg0=_22ca367a4_Is32Bit(_2126e4108_Arch);
			}
		}
		else {
			_case_begin_1ab73e099:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1ab73e4b7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d0758a95_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_22dcc7813_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL,(_529_n - _22dcc72c4_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _22dcc0883_FindLastByte(_5029_p,'_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d075d869_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d076ed0e_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL,_6413_i);;
	_6413_i=static_cast<jule::I64>(_22dcc0883_FindLastByte(_5029_p,'_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d075d869_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d076ed0e_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d076ed0e_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d075d869_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d075d869_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1d07736a3_setOsVars(jule::Slice<jule::Str>& _3619_vars) {
	_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(_21271b97c_Os);;
	if (_22ca36430_IsUnix(_21271b97c_Os)) {
		_3619_vars = jule::alloc_for_append(_3619_vars,1);_3619_vars.__push(jule::Str("unix", 4));;
	};
}



inline void _1d0773906_setArchVars(jule::Slice<jule::Str>& _4421_vars) {
	_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(_2126e4108_Arch);;
	if (_22ca36a4b_Is64Bit(_2126e4108_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x64", 3));;
	};
	if (_22ca367a4_Is32Bit(_2126e4108_Arch)) {
		_4421_vars = jule::alloc_for_append(_4421_vars,1);_4421_vars.__push(jule::Str("x32", 3));;
	};
}



inline void _1d0773bae_initVars(jule::Slice<jule::Str>& _5518_vars, _1d0773395_CompileInfo& _5532_info) {
	_1d07736a3_setOsVars(_5518_vars);
	_1d0773906_setArchVars(_5518_vars);
	if (_5532_info._field_Prod) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("production", 10));;
	};
	if (_5532_info._field_Test) {
		_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ _5532_info._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ab74aabc:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ab74ab33:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1ab74a5b1:;
	};
	{
		auto &_match_expr{ _5532_info._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ab74b480:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ab74b4e6:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ab74b55c:;
			{
				_5518_vars = jule::alloc_for_append(_5518_vars,1);_5518_vars.__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1ab74bbde:;
	};
}



inline jule::Slice<jule::U8> _1d0974a19_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__22b1c9399_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_2127320be_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _22ca31eb9_Log _1d097a206_flatCompilerErr(jule::Str _4120_text) {
	return _22ca31eb9_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1b6e27d2c_pushPasses(jule::Ptr<_1d052c825_Package>& _11120_p, jule::Slice<jule::Str>& _11144_passes) {
	{
		auto &expr = _11120_p.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab77c9cd:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto &expr = _11217_f.get()._field_Passes;
					auto it = expr.begin();
					_iter_begin_1ab77d45c:;
					if (it != expr.end()) {
						_1d04e3533_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1ab77d45c;
							};
							{
								auto &expr = _11144_passes;
								auto it = expr.begin();
								_iter_begin_1ab77e419:;
								if (it != expr.end()) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1ab77d45c;
										};
									}
									_iter_next_1ab77e419:;
									++it;
									goto _iter_begin_1ab77e419;
								}
								_iter_end_1ab77e419:;
							};
							_11144_passes = jule::alloc_for_append(_11144_passes,1);_11144_passes.__push(_11416_pass._field_Text);;
						}
						_iter_next_1ab77d45c:;
						++it;
						goto _iter_begin_1ab77d45c;
					}
					_iter_end_1ab77d45c:;
				};
			}
			_iter_next_1ab77c9cd:;
			++it;
			goto _iter_begin_1ab77c9cd;
		}
		_iter_end_1ab77c9cd:;
	};
}



inline jule::Slice<jule::Str> _1b7a9c64e_getAllUniquePasses(jule::Ptr<_1d052c825_Package>& _12828_pkg, jule::Slice<jule::Ptr<_1d05298bb_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1b6e27d2c_pushPasses(_12828_pkg,_12913_passes);
	{
		auto &expr = _12853_uses;
		auto it = expr.begin();
		_iter_begin_1ab78098c:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1b6e27d2c_pushPasses(_13217_u.get()._field_Package,_12913_passes);
				};
			}
			_iter_next_1ab78098c:;
			++it;
			goto _iter_begin_1ab78098c;
		}
		_iter_end_1ab78098c:;
	};
	return _12913_passes;;
}



inline _1d0773395_CompileInfo _1b7ab80b5_buildCompileInfo(void) {
	_1d0773395_CompileInfo _14213_info = _1d0773395_CompileInfo{._field_Prod=_22b128bab_Production, ._field_Test=_22b12824e_Test, };;
	{
		auto &_match_expr{ _22b069a42_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1ab781d01:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1ab781d67:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1ab781c79:;
	};
	{
		auto &_match_expr{ _22b127a12_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1ab781570:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1ab7821ec:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1ab782263:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1ab78265e:;
	};
	return _14213_info;;
}



inline void _1b7d6da30_EliminateDefines(jule::Ptr<_1b6c04994_IR>& _28526_ir) {
	jule::Ptr<_1b7d395bc_ObjectDeadCode> _28613_ocd = static__1b7d39a1d_new(_28526_ir);;
	_1b7d6d766_elimanate(_28613_ocd);
}



inline jule::Ptr<_1ea2c0405_Directive> _1b7d6ddb5_findDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _29123_directives, jule::Str _29154_tag) {
	{
		auto &expr = _29123_directives;
		auto it = expr.begin();
		_iter_begin_1ab7c1769:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1ab7c1769:;
			++it;
			goto _iter_begin_1ab7c1769;
		}
		_iter_end_1ab7c1769:;
	};
	return nullptr;;
}



inline jule::Bool _1b7d6e206_hasDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _30118_directives, jule::Str _30149_tag) {
	return (_1b7d6ddb5_findDirective(_30118_directives,_30149_tag) != nullptr);;
}



inline void _1b7d72d53_eliminateDeadCodeOfScope(jule::Ptr<_1d050b1b6_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1d050d905_Label>> _2429_labels = jule::Slice<jule::Ptr<_1d050d905_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1d050dbe1_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1d050dbe1_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1b7d6ee4e_scopeDeadCode> _24413_sdc = jule::new_ptr<_1b7d6ee4e_scopeDeadCode>(_1b7d6ee4e_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1d050d905_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1d050dbe1_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1b7d72a67_optimizeStmts(_24413_sdc);
	};
}



inline void _1b7d730d9_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1eb023b80_Fn>>& _25433_funcs) {
	{
		auto &expr = _25433_funcs;
		auto it = expr.begin();
		_iter_begin_1ab8115ab:;
		if (it != expr.end()) {
			jule::Ptr<_1eb023b80_Fn> _25517_func = *it;
			{
				{
					auto &expr = _25517_func.get()._field_Instances;
					auto it = expr.begin();
					_iter_begin_1ab81369b:;
					if (it != expr.end()) {
						jule::Ptr<_1eb026831_FnIns> _25621_ins = *it;
						{
							_1b7d72d53_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1ab81369b:;
						++it;
						goto _iter_begin_1ab81369b;
					}
					_iter_end_1ab81369b:;
				};
			}
			_iter_next_1ab8115ab:;
			++it;
			goto _iter_begin_1ab8115ab;
		}
		_iter_end_1ab8115ab:;
	};
}



inline void _1b7d7332b_eliminateFunctionsScopePackage(jule::Ptr<_1d052c825_Package>& _26240_pkg) {
	{
		auto &expr = _26240_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1ab813b0d:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _26317_f = *it;
			{
				_1b7d730d9_eliminateScopeFunctions(_26317_f.get()._field_Funcs);
			}
			_iter_next_1ab813b0d:;
			++it;
			goto _iter_begin_1ab813b0d;
		}
		_iter_end_1ab813b0d:;
	};
}



inline void _1b7d735c3_eliminateScopePackage(jule::Ptr<_1d052c825_Package>& _26831_pkg) {
	_1b7d7332b_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1b7d737d2_EliminateScopes(jule::Ptr<_1b6c04994_IR>& _27325_ir) {
	jule::I64 _27413_i = (_27325_ir.get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1d05298bb_ImportInfo> _27617_u = _27325_ir.get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1b7d735c3_eliminateScopePackage(_27617_u.get()._field_Package);
			};
		}
	_iter_next_1ab8152b3:;
	}
	_iter_end_1ab8152b3:;;
	_1b7d735c3_eliminateScopePackage(_27325_ir.get()._field_Main);
}



inline jule::Bool _1d06944a3_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _22dc943e5_HasPrefix(_39817_f,_22dcc702c_Join(jule::Slice<jule::Str>::make({_21271b5e7_PathStdlib,_39825_p})));;
}



inline jule::Bool _1d06947b1_isConstantValidConditionalCase(jule::Ptr<_1d050b5b2_If>& _40236_i) {
	{
		auto &_match_expr{ _40236_i.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ab88e749:;
			{
				jule::Ptr<_1eb0095b1_Const> _40513_c = _40236_i.get()._field_Expr.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
				return (_1eb00d72a_IsBool(_40513_c.ptr()) && _1eb00b382_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_1ab88e5c3:;
	};
	return false;;
}



inline jule::Bool _1d0694a69_isUnreachableExpr(jule::Any& _41123_expr) {
	{
		auto &_match_expr{ _41123_expr };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ab890162:;
			{
				jule::Ptr<_1eb0095b1_Const> _41413_c = _41123_expr.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49);;
				return (_1eb00d72a_IsBool(_41413_c.ptr()) && (!(_1eb00b382_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1ab8901c8:;
			{
				jule::Ptr<_1eb015897_BinopExprModel> _41713_m = _41123_expr.cast_ptr<_1eb015897_BinopExprModel>(&__jule_any_type119);;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1d0694a69_isUnreachableExpr(_41713_m.get()._field_Left.get()._field_Model) || _1d0694a69_isUnreachableExpr(_41713_m.get()._field_Right.get()._field_Model));;
				};
			}
		}
		_match_end_1ab88e804:;
	};
	return false;;
}



inline jule::Bool _1d0694daa_isConstantValidMatchCase(jule::Ptr<_1d051095c_Case>& _42630_case) {
	{
		auto &expr = _42630_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ab8929a0:;
		if (it != expr.end()) {
			jule::Ptr<_1d0598572_Data> &_42712_expr = *it;
			{
				if (((_1d0598e35_IsConst(_42712_expr.ptr()) && _1eb00d72a_IsBool(_42712_expr.get()._field_Constant.ptr())) && _1eb00b382_ReadBool(_42712_expr.get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1ab8929a0:;
			++it;
			goto _iter_begin_1ab8929a0;
		}
		_iter_end_1ab8929a0:;
	};
	return false;;
}



inline jule::Bool _1d0695152_isUnreachableConditionalCase(jule::Ptr<_1d050b5b2_If>& _43534_i) {
	return _1d0694a69_isUnreachableExpr(_43534_i.get()._field_Expr);;
}



inline jule::Bool _1d069540a_isUnreachableMatchCase(jule::Ptr<_1d051095c_Case>& _43928_case) {
	{
		auto &expr = _43928_case.get()._field_Exprs;
		auto it = expr.begin();
		_iter_begin_1ab895035:;
		if (it != expr.end()) {
			jule::Ptr<_1d0598572_Data> &_44012_expr = *it;
			{
				if ((!(_1d0694a69_isUnreachableExpr(_44012_expr.get()._field_Model)))) {
					return false;;
				};
			}
			_iter_next_1ab895035:;
			++it;
			goto _iter_begin_1ab895035;
		}
		_iter_end_1ab895035:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1d069cd08_checkForBitShiftOpt(jule::Ptr<_1eb0153d0_OperandExprModel>& _45125_l, jule::Ptr<_1eb0153d0_OperandExprModel>& _45148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1eb0089de_IsInt(_1d05c4900_Str(_45125_l.get()._field_Kind.ptr())))) || (!(_1eb0089de_IsInt(_1d05c4900_Str(_45148_r.get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _45148_r.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1ab8cc39c:;
			{
				goto _match_end_1ab8ccd92;
			}
		}
		else {
			_case_begin_1ab8ccee6:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1ab8ccd92:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1eb00bd33_AsU64(_45148_r.get()._field_Model.cast_ptr<_1eb0095b1_Const>(&__jule_any_type49).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _1eaeb2448_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _1d069ed3d_PushOptLevel(jule::I64 _3217_level) {
	_1d069d556_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069d864_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069db2d_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069de3b_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069e205_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069e4be_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069e788_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1d069eb62_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1b7d05a0b_detectEnabled(void) {
	_1b7c727d0_exprEnabled=(((_1d069e788_Ptr || _1d069de3b_Math) || _1d069e205_Access) || _1d069eb62_Cond);
	_1b7c7344b_scopeEnabled=((_1d069eb62_Cond || _1d069db2d_Append) || _1d069d556_Copy);
}



inline void _1b7e8210a_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_2127320be_Exit(1LL);
}



inline jule::U64 _1a9515b20_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1a9515e2d_unixYearToSeconds(jule::U64 _20122_y, jule::Bool& _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		_20140_leap=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if (_20140_leap) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		_20140_leap=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			_20140_leap=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			_20140_leap=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if (_20140_leap) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1a95162b3_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1ab96150d:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab961574:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ab9615da:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ab961651:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ab9616c8:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ab961750:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1ab9617c7:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1ab96184e:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ab9618c6:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1ab96194d:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ab9619c5:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1ab9613a9:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1a945ead0_isCopyOptimizable(jule::Ptr<_1d0598572_Data>& _75223_expr) {
	if ((!(_75223_expr.get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ _75223_expr.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1aba10ba6:;
			{
				return false;;
			}
		}
		_match_end_1aba10b51:;
	};
	return true;;
}



inline jule::Bool _1a945ee65_isIterCopyOptimizable(jule::Ptr<_1d0598572_Data>& _76327_expr, jule::Ptr<_1d0550a13_Var>& _76341_v) {
	if (((!(_76327_expr.get()._field_Lvalue)) && (!(_1d05c5b76_Mutable(_76327_expr.get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!(_76341_v.get()._field_Mutable)) && (!(_76327_expr.get()._field_Mutable)));;
}



inline jule::Str _1a946de30_decomposeCommonEsq(jule::U8 _135823_b) {
	{
		auto &_match_expr{ _135823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1abab6520:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1abab6ab4:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1abab6b2a:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1abab6b91:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1abab67a6:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1abab681c:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1abab6883:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1abab68e9:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1abab6dd3:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1abab6e49:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1abab6674:;
			{
				return jule::Str();;
			}
		}
		_match_end_1abab65a8:;
	};
}



inline jule::Str _1a946e21b_sbtoa(jule::U8 _138510_b) {
	if ((_138510_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_138510_b < 128LLU)) {
		jule::Str _139013_seq = _1a946de30_decomposeCommonEsq(_138510_b);;
		if ((!(_139013_seq.empty()))) {
			return _139013_seq;;
		};
		if (((32LL <= _138510_b) && (_138510_b <= 126LLU))) {
			return static_cast<jule::Str>(_138510_b);;
		};
	};
	jule::Str _13989_seq = _1eaee9b45_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_138510_b)),8LL);;
	if ((_13989_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _13989_seq);;
	};
	return (jule::Str("\\", 1) + _13989_seq);;
}



inline jule::Str _1a946e4b3_cstrBytes(jule::Slice<jule::U8> _140514_bytes) {
	jule::Str _140613_lit = jule::Str::alloc(0LL, _140514_bytes.len());;
	{
		auto &expr = _140514_bytes;
		auto it = expr.begin();
		_iter_begin_1ababc9aa:;
		if (it != expr.end()) {
			jule::U8 &_140712_b = *it;
			{
				_140613_lit+=_1a946e21b_sbtoa(_140712_b);
			}
			_iter_next_1ababc9aa:;
			++it;
			goto _iter_begin_1ababc9aa;
		}
		_iter_end_1ababc9aa:;
	};
	return _140613_lit;;
}



inline jule::Str _1a946e7d2_cstrLit(jule::Slice<jule::U8> _141312_bytes) {
	return ((jule::Str("\"", 1) + _1a946e4b3_cstrBytes(_141312_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1a946eae0_ftoa(jule::F64 _14179_f, jule::I64 _141717_bitsize) {
	if ((_141717_bitsize != 32LL)) {
		if ((_14179_f == static_cast<jule::F64>(static_cast<jule::I64>(_14179_f)))) {
			return _1a946ed87_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_14179_f)));;
		};
		if ((_14179_f == static_cast<jule::F64>(static_cast<jule::U64>(_14179_f)))) {
			return _1a947012e_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_14179_f)));;
		};
	};
	jule::Str _142613_m = _22bec87a2_FmtFloat(_14179_f,'f',-1LL,_141717_bitsize);;
	if ((!(_22dcc2214_Contains(_142613_m,jule::Str(".", 1))))) {
		_142613_m+=jule::Str(".0", 2);
	};
	return _142613_m;;
}



inline jule::Str _1a946ed87_itoa(jule::I64 _14339_x) {
	{
		
		if ((_14339_x == jule::MAX_I64)) {
			_case_begin_1abac1085:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_14339_x == jule::MIN_I64)) {
			_case_begin_1abac10eb:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1abac0e42:;
	};
	jule::Str _14419_fmt = _1eaee9eca_FmtInt(_14339_x,10LL);;
	if (_22ca36a4b_Is64Bit(jule::Str("arm64", 5))) {
		return (_14419_fmt + jule::Str("LL", 2));;
	};
	return (_14419_fmt + jule::Str("L", 1));;
}



inline jule::Str _1a947012e_utoa(jule::U64 _14489_x) {
	{
		
		if ((_14489_x == jule::MAX_U64)) {
			_case_begin_1abac2c57:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1abac2b58:;
	};
	jule::Str _14549_fmt = _1eaee9b45_FmtUint(_14489_x,10LL);;
	if (_22ca36a4b_Is64Bit(jule::Str("arm64", 5))) {
		return (_14549_fmt + jule::Str("LLU", 3));;
	};
	return (_14549_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1a94704d6_isForwarded(jule::Ptr<_1d050b1b6_Scope>& _146117_s) {
	jule::Any _14629_last = _146117_s.get()._field_Stmts[(_146117_s.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _14629_last };
		
		if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1abac452d:;
			{
				{
					auto &_match_expr{ _14629_last.cast_ptr<_1d0598572_Data>(&__jule_any_type25).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1abac55c8:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1abac5991:;
						{
							return false;;
						}
					}
					_match_end_1abac56d8:;
				};
			}
		}
		else {
			_case_begin_1abac4d14:;
			{
				return true;;
			}
		}
		_match_end_1abac4c37:;
	};
}



inline jule::Bool _1a94707a0_isBuiltinCallHasDebuginf(jule::Ptr<_1eb017712_FnCallExprModel>& _147630_m) {
	if ((!(_1eb027bb7_IsBuiltin(_147630_m.get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ _147630_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1abac5c38:;
			{
				jule::Ptr<_1eb01b20a_CommonSubIdentExprModel> _148213_csie = _147630_m.get()._field_Expr.cast_ptr<_1eb01b20a_CommonSubIdentExprModel>(&__jule_any_type75);;
				return (_148213_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_1abac509a:;
			{
				return false;;
			}
		}
		_match_end_1abac5045:;
	};
}



inline jule::Bool _1a94709d1_isExprComesFromBind(jule::Ptr<_1d0598572_Data>& _148925_d) {
	{
		auto &_match_expr{ _148925_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1abac8037:;
			{
				return _148925_d.get()._field_Model.cast_ptr<_1d0550a13_Var>(&__jule_any_type10).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1abac809d:;
			{
				return _148925_d.get()._field_Model.cast_ptr<_1eb01a14e_StructSubIdentExprModel>(&__jule_any_type73).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1abac7674:;
			{
				return false;;
			}
		}
		_match_end_1abac761e:;
	};
}



inline jule::Bool _1a9470c78_isAny(jule::Ptr<_1d05c4504_TypeKind>& _150115_t) {
	if ((_1d05c733c_TypeEnum(_150115_t.ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1d05c9251_Prim> _15059_prim = _1d05c688b_Prim(_150115_t.ptr());;
	return ((_15059_prim != nullptr) && _1d05cc6e9_IsAny(_15059_prim.ptr()));;
}



inline void _1a951ec28_iterFiles(jule::Ptr<_1d052c825_Package>& _117819_pkg, jule::Fn<void(jule::Ptr<_1d0593748_SymbolTable>&)> _117834_f) {
	{
		auto &expr = _117819_pkg.get()._field_Files;
		auto it = expr.begin();
		_iter_begin_1abd2a9c6:;
		if (it != expr.end()) {
			jule::Ptr<_1d0593748_SymbolTable> _117917_file = *it;
			{
				_117834_f(_117917_file);
			}
			_iter_next_1abd2a9c6:;
			++it;
			goto _iter_begin_1abd2a9c6;
		}
		_iter_end_1abd2a9c6:;
	};
}



inline void _1a951ee7b_prepareStructure(jule::Ptr<_1ea31ed8e_Struct>& _118426_s) {
	{
		auto &expr = _118426_s.get()._field_Instances;
		auto it = expr.begin();
		_iter_begin_1abd2b29b:;
		if (it != expr.end()) {
			jule::Ptr<_1ea320268_StructIns> _118517_ins = *it;
			{
				{
					auto &expr = _118517_ins.get()._field_Methods;
					auto it = expr.begin();
					_iter_begin_1abd2bd90:;
					if (it != expr.end()) {
						jule::Ptr<_1eb023b80_Fn> _118621_m = *it;
						{
							if (_118621_m.get()._field_Statically) {
								goto _iter_next_1abd2bd90;
							};
							{
								auto &expr = _118621_m.get()._field_Instances;
								auto it = expr.begin();
								_iter_begin_1abd2cae9:;
								if (it != expr.end()) {
									jule::Ptr<_1eb026831_FnIns> _119025_mins = *it;
									{
										jule::Ptr<_1eb025962_ParamIns> _119125_p = _119025_mins.get()._field_Params[0LL];;
										if ((!(_1eb022bd4_IsRef(_119125_p.get()._field_Decl.ptr())))) {
											_119125_p.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1a9520e27_customType>(_1a9520e27_customType{._field_kind=static__1a95227db_asPtr(static__1a9525cea_kind(_119125_p.get()._field_Kind))}), 13)});
										} else {
											_119125_p.get()._field_Kind=jule::new_ptr<_1d05c4504_TypeKind>(_1d05c4504_TypeKind{._field_Kind=jule::Trait<_1d05c40c5_Kind>(jule::new_ptr<_1a9520e27_customType>(_1a9520e27_customType{._field_kind=static__1a9525cea_kind(_119125_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1abd2cae9:;
									++it;
									goto _iter_begin_1abd2cae9;
								}
								_iter_end_1abd2cae9:;
							};
						}
						_iter_next_1abd2bd90:;
						++it;
						goto _iter_begin_1abd2bd90;
					}
					_iter_end_1abd2bd90:;
				};
			}
			_iter_next_1abd2b29b:;
			++it;
			goto _iter_begin_1abd2b29b;
		}
		_iter_end_1abd2b29b:;
	};
}



inline jule::Str _1a9520223_concatAllParts(jule::Slice<jule::Ptr<_212a0c2ab_Token>> _121119_parts) {
	jule::I64 _121213_n = 0LL;;
	{
		auto &expr = _121119_parts;
		auto it = expr.begin();
		_iter_begin_1abd2bc3b:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_121312_part = *it;
			{
				_121213_n+=_121312_part.get()._field_Kind.len();
			}
			_iter_next_1abd2bc3b:;
			++it;
			goto _iter_begin_1abd2bc3b;
		}
		_iter_end_1abd2bc3b:;
	};
	if ((_121213_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _121913_s = jule::Str::alloc(0LL, _121213_n);;
	{
		auto &expr = _121119_parts;
		auto it = expr.begin();
		_iter_begin_1abd31416:;
		if (it != expr.end()) {
			jule::Ptr<_212a0c2ab_Token> &_122012_p = *it;
			{
				_121913_s+=_122012_p.get()._field_Kind;
			}
			_iter_next_1abd31416:;
			++it;
			goto _iter_begin_1abd31416;
		}
		_iter_end_1abd31416:;
	};
	return _121913_s;;
}



inline jule::Ptr<_1ea2c0405_Directive> _1a952b95a_findDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _44423_directives, jule::Str _44454_tag) {
	{
		auto &expr = _44423_directives;
		auto it = expr.begin();
		_iter_begin_1abe182ab:;
		if (it != expr.end()) {
			jule::Ptr<_1ea2c0405_Directive> _44517_dr = *it;
			{
				if ((_44517_dr.get()._field_Tag.get()._field_Kind == _44454_tag)) {
					return _44517_dr;;
				};
			}
			_iter_next_1abe182ab:;
			++it;
			goto _iter_begin_1abe182ab;
		}
		_iter_end_1abe182ab:;
	};
	return nullptr;;
}



inline jule::Bool _1a952bce0_hasDirective(jule::Slice<jule::Ptr<_1ea2c0405_Directive>>& _45418_directives, jule::Str _45449_tag) {
	return (_1a952b95a_findDirective(_45418_directives,_45449_tag) != nullptr);;
}



inline jule::Bool _1a952c087_shouldInitialized(jule::Ptr<_1d05c4504_TypeKind>& _46127_t) {
	jule::Ptr<_1d05c9251_Prim> _4629_prim = _1d05c688b_Prim(_46127_t.ptr());;
	if ((_4629_prim != nullptr)) {
		return ((!(_1d05cc6e9_IsAny(_4629_prim.ptr()))) && (!(_1d05cc485_IsStr(_4629_prim.ptr()))));;
	};
	{
		
		if ((_1d05c6b00_Sptr(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1b15a:;
			{
				return false;;
			}
		}
		else if ((_1d05c82b6_Map(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1aa83:;
			{
				return false;;
			}
		}
		else if ((_1d05c7815_Slc(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1ab0a:;
			{
				return false;;
			}
		}
		else if ((_1d05c8052_Trait(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1ab82:;
			{
				return false;;
			}
		}
		else if ((_1d05c7a79_Fn(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1ad3b:;
			{
				return false;;
			}
		}
		else if ((_1d05c75a1_Arr(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1ada2:;
			{
				jule::Ptr<_1d05d05dc_Arr> _47817_arr = _1d05c75a1_Arr(_46127_t.ptr());;
				return _1a952c087_shouldInitialized(_47817_arr.get()._field_Elem);;
			}
		}
		else if ((_1d05c7cdd_Struct(_46127_t.ptr()) != nullptr)) {
			_case_begin_1abe1ae18:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1abe1a3ce:;
			{
				return true;;
			}
		}
		_match_end_1abe1a379:;
	};
}



inline void _22ca13e02_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _22ca07a2d_help(jule::Slice<jule::Str>& _3510_args) {
	if ((_3510_args.len() > 2LL)) {
		_22ca13e02_printErrorMessage((jule::Str("invalid command: ", 17) + _3510_args[2LL]));
		return;;
	};
	jule::I64 _4113_max = _22ca13682_HelpMap[0LL][0LL].len();;
	{
		auto &expr = _22ca13682_HelpMap;
		auto it = expr.begin();
		_iter_begin_1abbbd391:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> &_4212_k = *it;
			{
				jule::I64 _4313_n = _4212_k[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1abbbd391:;
			++it;
			goto _iter_begin_1abbbd391;
		}
		_iter_end_1abbbd391:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto &expr = _22ca13682_HelpMap;
		auto it = expr.begin();
		_iter_begin_1abbbec55:;
		if (it != expr.end()) {
			jule::I64 _519_i = it - expr.begin();
			jule::Array<jule::Str,2> &_5112_part = *it;
			{
				_4913_s+=_5112_part[0LL];
				_4913_s+=_22dc94ca8_Repeat(jule::Str(" ", 1),static_cast<jule::I64>(((_4113_max - _5112_part[0LL].len()) + 5LL)));
				_4913_s+=_5112_part[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1abbbec55:;
			++it;
			_519_i++;
			goto _iter_begin_1abbbec55;
		}
		_iter_end_1abbbec55:;
	};
	jule::outln(_4913_s);
}



inline void _22ca07b60_version(jule::Slice<jule::Str>& _6313_args) {
	if ((_6313_args.len() > 2LL)) {
		_22ca13e02_printErrorMessage((jule::Str("invalid command: ", 17) + _6313_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.12 @master", 18));
}



inline void _22ca00927_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _22ca00a59_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _22ca157b6_tool(jule::Slice<jule::Str>& _9410_args) {
	if ((_9410_args.len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if ((_9410_args.len() > 3LL)) {
		_22ca13e02_printErrorMessage((jule::Str("invalid command: ", 17) + _9410_args[3LL]));
		return;;
	};
	jule::Str _1059_cmd = _9410_args[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1abbc6be6:;
			{
				_22ca00927_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1abbc690a:;
			{
				_22ca00a59_toolDistarch();
			}
		}
		else {
			_case_begin_1abbc5288:;
			{
				_22ca13e02_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1abbc671d:;
	};
}



inline void _22ca158e8_julenv(jule::Slice<jule::Str>& _11712_args) {
	if ((_11712_args.len() > 2LL)) {
		_22ca13e02_printErrorMessage((jule::Str("invalid command: ", 17) + _11712_args[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.12 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _22b069a42_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _22b127a12_CppStd));
}



inline void _22ca217b1_mod(jule::Slice<jule::Str>& _1309_args) {
	if ((_1309_args.len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if ((_1309_args.len() > 3LL)) {
		_22ca13e02_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[3LL]));
		return;;
	};
	{
		auto &_match_expr{ _1309_args[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1abbcb0d5:;
			{
				({
					auto except = static__22b24c7e6_Write(jule::Str("jule.mod", 8),jule::Slice<jule::U8>(),432LL);
					if (!except.ok()) {
						_22ca13e02_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1abbc99b8:;
			{
				_22ca13e02_printErrorMessage((jule::Str("invalid command: ", 17) + _1309_args[2LL]));
			}
		}
		_match_end_1abbcac0b:;
	};
}



inline jule::Bool _22ca2453e_processCommand(jule::Slice<jule::Str>& _15320_args) {
	{
		auto &_match_expr{ _15320_args[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1abbcc713:;
			{
				_22ca07a2d_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1abbccb42:;
			{
				_22ca07b60_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1abbccba8:;
			{
				_22ca157b6_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1abbccc96:;
			{
				_22ca158e8_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1abbccd0c:;
			{
				_22ca217b1_mod(_15320_args);
			}
		}
		else {
			_case_begin_1abbcc2c3:;
			{
				return false;;
			}
		}
		_match_end_1abbcc207:;
	};
	return true;;
}



inline void _22ca24671_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _22c14ba79_Args();;
	if ((_18913_args.len() < 2LL)) {
		_22ca24671_showInfo();
		return;;
	};
	if (_22ca2453e_processCommand(_18913_args)) {
		return;;
	};
	_1a9575344_compileCommand(_18913_args);
}



inline void _1a9544511_init(void) {
	_22b069a42_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_22b1e9694_File> _1a9547aec_openOutput(jule::Str& _4316_path) {
	jule::Str _449_dir = _22dcc7b87_Dir(_4316_path);;
	({
		auto except = static__22b1c7e14_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__22dcca140_Create(_449_dir);
				if (!except.ok()) {
					_1b7e8210a_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__22b1c8c17_Create(_4316_path);
		(except.ok()) ? (except.result) : ({
			_1b7e8210a_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a9553c3a_clearObjects(void) {
	({
		auto except = static__22b1eb93d_Remove(_1a9540089_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__22dcca34e_Remove(_1a95402cb_OutDir);
}



inline void _1a9542740_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_21272d230_Cmd> _7313_cmd = static__21272d65e_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=jule::Slice<jule::Str>::make({_7214_compiler});
	_7313_cmd.get()._field_Args=jule::append(_7313_cmd.get()._field_Args,_22dcc1dc3_Split(_7229_compilerCmd,jule::Str(" ", 1),-1LL));
	jule::I64 _769_status = ({
		auto except = _21272d8c3_Spawn(_7313_cmd.ptr());
		(except.ok()) ? (except.result) : ({
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(12LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1abbd4e79:;
					{
						static__1b7e7e7ab_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of fork problem", 56));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1abbd475e:;
					{
						static__1b7e7e7ab_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(9LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1abbd49c3:;
					{
						static__1b7e7e7ab_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of compiler path is not in the proper format", 85));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type2) == _match_expr) {
					_case_begin_1abbd4a39:;
					{
						static__1b7e7e7ab_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1abbd4891:;
					{
						static__1b7e7e7ab_Print(jule::Str("\033[31m", 5),jule::Str("back-end compiler could not used because of unkown problem", 58));
					}
				}
				_match_end_1abbd47e7:;
			};
			_1b7e8210a_Throw(jule::Str());

			0LL;
		});
	});;
	if ((_769_status != 0LL)) {
		jule::Str _9313_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _22b069a42_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1b7e7e7ab_Print(jule::Str("\033[31m", 5),_9313_errorMessage);
		_1b7e8210a_Throw(jule::Str());
	};
	_1a9553c3a_clearObjects();
}



inline jule::Bool _1a9563750_isCppSourceFile(jule::Str _10420_path) {
	jule::I64 _1059_offset = _22dcc0883_FindLastByte(_10420_path,'.');;
	if ((_1059_offset == -1LL)) {
		return false;;
	};
	return _22ca253a8_IsValidCppExt(_10420_path.slice(_1059_offset));;
}



inline void _1a9567842_pushCompCmdClang(jule::Str& _11226_cmd) {
	_11226_cmd+=jule::Str("-Wno-everything ", 16);
	_11226_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22b127a12_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1abbd2edd:;
			{
				_11226_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1abbd97a8:;
			{
				_11226_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1abbd981e:;
			{
				_11226_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1abbd9588:;
	};
	_11226_cmd+=jule::Str(" ", 1);
	if (_22b128bab_Production) {
		_11226_cmd+=jule::Str("-O3 ", 4);
		_11226_cmd+=jule::Str("-flto ", 6);
		_11226_cmd+=jule::Str("-DNDEBUG ", 9);
		_11226_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_11226_cmd+=jule::Str("-O0 ", 4);
	};
}



inline void _1a9540a07_pushCompCmdGcc(jule::Str& _13824_cmd) {
	_13824_cmd+=jule::Str("-w ", 3);
	_13824_cmd+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _22b127a12_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1abbd9c4d:;
			{
				_13824_cmd+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1abbdc04c:;
			{
				_13824_cmd+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1abbdc0b3:;
			{
				_13824_cmd+=jule::Str("c++20", 5);
			}
		}
		_match_end_1abbdbd2c:;
	};
	_13824_cmd+=jule::Str(" ", 1);
	if (_22b128bab_Production) {
		_13824_cmd+=jule::Str("-O3 ", 4);
		_13824_cmd+=jule::Str("-DNDEBUG ", 9);
		_13824_cmd+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		_13824_cmd+=jule::Str("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1a9545985_genCompileCmd(jule::Str _16418_sourcePath, jule::Ptr<_1b6c04994_IR>& _16436_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str &_16510_compiler = _22b1277e2_CompilerPath;;
	jule::Str _16613_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _22b069a42_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1abbdde0b:;
			{
				_1a9540a07_pushCompCmdGcc(_16613_cmd);
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1abbdeea6:;
			{
				_1a9567842_pushCompCmdClang(_16613_cmd);
			}
		}
		_match_end_1abbded74:;
	};
	{
		auto &expr = _16436_ir.get()._field_Passes;
		auto it = expr.begin();
		_iter_begin_1abbe0858:;
		if (it != expr.end()) {
			jule::Str &_17612_pass = *it;
			{
				_16613_cmd+=_17612_pass;
				_16613_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1abbe0858:;
			++it;
			goto _iter_begin_1abbe0858;
		}
		_iter_end_1abbe0858:;
	};
	{
		auto &expr = _16436_ir.get()._field_Used;
		auto it = expr.begin();
		_iter_begin_1abbe0cba:;
		if (it != expr.end()) {
			jule::Ptr<_1d05298bb_ImportInfo> &_18212_u = *it;
			{
				if ((_18212_u.get()._field_CppLinked && _1a9563750_isCppSourceFile(_18212_u.get()._field_Path))) {
					_16613_cmd+=_18212_u.get()._field_Path;
					_16613_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1abbe0cba:;
			++it;
			goto _iter_begin_1abbe0cba;
		}
		_iter_end_1abbe0cba:;
	};
	if ((!(_1a954073d_Out.empty()))) {
		_16613_cmd+=jule::Str("-o ", 3);
		_16613_cmd+=_1a954073d_Out;
		_16613_cmd+=jule::Str(" ", 1);
	};
	_16613_cmd+=_16418_sourcePath;
	__jule_func_result.__jule_result_arg0 = _16510_compiler;
	__jule_func_result.__jule_result_arg1 = _16613_cmd;
	return __jule_func_result;;
}



inline jule::Str _1a9540089_getCompilePath(void) {
	return _22dcc702c_Join(jule::Slice<jule::Str>::make({_1a95402cb_OutDir,_1a95405d9_OutName}));;
}



inline void _1a954ea5a_applyTargetIndependentOptimizations(jule::Ptr<_1b6c04994_IR>& _20545_ir) {
	jule::Ptr<_1b7c70e1b_Optimizer> _20713_opt = static__1b7c90622_New(_20545_ir);;
	_1b7cd0992_Optimize(_20713_opt.ptr());
}



inline void _1a953e9b2_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _22b069a42_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1abbe17c1:;
			{
				_1b7e8210a_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1abbe3aae:;
			{
				if (_22b1277e2_CompilerPath.empty()) {
					_22b1277e2_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1abbe3b25:;
			{
				if (_22b1277e2_CompilerPath.empty()) {
					_22b1277e2_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1abbe3a48:;
			{
				_1b7e8210a_Throw((jule::Str("invalid option value for --compiler: ", 37) + _22b069a42_Compiler));
			}
		}
		_match_end_1abbe386c:;
	};
}



inline void _1a9543796_checkTargetArch(jule::Str _22820_arch) {
	if ((((_22820_arch != jule::Str("amd64", 5)) && (_22820_arch != jule::Str("arm64", 5))) && (_22820_arch != jule::Str("i386", 4)))) {
		_1b7e8210a_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22820_arch));
	};
}



inline void _1a95438c8_checkTargetOs(jule::Str _23618_os) {
	if ((((_23618_os != jule::Str("windows", 7)) && (_23618_os != jule::Str("linux", 5))) && (_23618_os != jule::Str("darwin", 6)))) {
		_1b7e8210a_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23618_os));
	};
}



inline void _1a95748c6_checkTargetFlag(jule::Str& _24421_target) {
	if (_24421_target.empty()) {
		_1b7e8210a_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2499_parts = _22dcc1dc3_Split(_24421_target,jule::Str("-", 1),-1LL);;
	if ((_2499_parts.len() != 2LL)) {
		_1b7e8210a_Throw((jule::Str("--target: undefined platform target format: ", 44) + _24421_target));
	};
	jule::Str _25410_os;;
	jule::Str _25414_arch;;
	({
		jule::Str ___jule_assign_arg = _2499_parts[0LL];
		jule::Str _1___jule_assign_arg = _2499_parts[1LL];
		_25410_os = ___jule_assign_arg;
		_25414_arch = _1___jule_assign_arg;
	});
	if ((_25410_os != jule::Str("native", 6))) {
		_1a95438c8_checkTargetOs(_25410_os);
		_21271b97c_Os=_25410_os;
	};
	if ((_25414_arch != jule::Str("native", 6))) {
		_1a9543796_checkTargetArch(_25414_arch);
		_2126e4108_Arch=_25414_arch;
	};
	_1eaeee375_UpdateTarget();
}



inline void _1a9574a08_checkOptFlag(jule::Str& _26718_opt) {
	if (_26718_opt.empty()) {
		_1b7e8210a_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ _26718_opt };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1abbeb655:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1abbebb61:;
			{
				_1d069ed3d_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1abbeb48a:;
			{
				_1b7e8210a_Throw((jule::Str("--opt: invalid optimization level: ", 35) + _26718_opt));
			}
		}
		_match_end_1abbeb435:;
	};
}



inline void _1a9574d6b_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22b127a12_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1abbebbc7:;
			{
				goto _match_end_1abbeca30;
			}
		}
		else {
			_case_begin_1abbec5ce:;
			{
				_1b7e8210a_Throw((jule::Str("--cppstd: invalid optimization level: ", 38) + _22b127a12_CppStd));
			}
		}
		_match_end_1abbeca30:;
	};
}



inline jule::Slice<jule::Str> _1a9574e9d_checkFlags(jule::Slice<jule::Str>& _29216_args) {
	jule::Str _29313_opt = jule::Str("L0", 2);;
	jule::Str _29413_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a9570ae2_FlagSet> _29613_fs = static__1a9570dcd_New();;
	_1abbeee1c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_opt)))),jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_1abbeee1c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29413_target)))),jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_1abbeee1c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a954073d_Out)))),jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22b127c32_Shadowing)))),jule::Str("shadowing", 9),0LL,jule::Str("Allow shadowing", 15));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22b127e85_Transpilation)))),jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_1abbeee1c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22b069a42_Compiler)))),jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_1abbeee1c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22b1277e2_CompilerPath)))),jule::Str("compiler-path", 13),0LL,jule::Str("Path of backend compiler", 24));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22b128bab_Production)))),jule::Str("production", 10),'p',jule::Str("Compile for production", 22));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22b128518_RC)))),jule::Str("disable-rc", 10),0LL,jule::Str("Disable reference counting", 26));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22b1288e2_Safety)))),jule::Str("disable-safety", 14),0LL,jule::Str("Disable safety", 14));
	_1abbeee1c_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22b127a12_CppStd)))),jule::Str("cppstd", 6),0LL,jule::Str("C++ standard", 12));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069d556_Copy)))),jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069d864_Deadcode)))),jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069db2d_Append)))),jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069de3b_Math)))),jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069e205_Access)))),jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069e4be_Inline)))),jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069e788_Ptr)))),jule::Str("opt-ptr", 7),0LL,jule::Str("Pointer optimizations", 21));
	_1abc0884e_AddVar(_29613_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d069eb62_Cond)))),jule::Str("opt-cond", 8),0LL,jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1a9571be2_Parse(_29613_fs.ptr(), _29216_args);
		(except.ok()) ? (except.result) : ({
			_1b7e8210a_Throw(except.error.cast<jule::Str>(&__jule_any_type7));

			nullptr;
		});
	});;
	_1a953e9b2_checkCompilerFlag();
	_1a9574d6b_checkCppStdFlag();
	_1a95748c6_checkTargetFlag(_29413_target);
	_1a9574a08_checkOptFlag(_29313_opt);
	return _31813_content;;
}



inline void _1a95750d0_setupSemaFlags(jule::I64& _33124_flags) {
	if (_22b127c32_Shadowing) {
		_33124_flags|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1b6c04994_IR> _1a9575212_buildIr(jule::Slice<jule::Str>& _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1a9574e9d_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1a95750d0_setupSemaFlags(_34013_semaFlags);
	if ((_3389_content.len() == 0LL)) {
		_1b7e8210a_Throw(_22ca32409_Logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1b7e8210a_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22dcc756b_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1b7e8210a_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_22c0b62c9_Status> _3549_inf = ({
		auto except = static__22b1c7e14_Of(_21271b5e7_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1b7e8210a_Throw(_22ca32409_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_22c0b62c9_Status>(nullptr);});
	});;
	if ((!(_22b1c84ca_IsDir(_3549_inf.ptr())))) {
		_1b7e8210a_Throw(_22ca32409_Logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1b6c04994_IR> _36214_ir;;
	jule::Slice<_22ca31eb9_Log> _36218_logs;;
	({
		__jule_tuple_x_1b6c04994_IR__jule_tuple_s_22ca31eb9_Log __jule_assign_result = static__1b6c58b4c_Build(_34814_path,_34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1b7e8210a_Throw(_22ca32409_Logf(jule::Str("there is no Jule source code in package: @", 42),jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type7)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1b7e816d1_PrintLogs(_36218_logs);
		_1b7e8210a_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1a9575344_compileCommand(jule::Slice<jule::Str>& _37724_args) {
	_37724_args=_37724_args.slice(1LL);
	if ((_37724_args[0LL] == jule::Str("test", 4))) {
		_22b12824e_Test=true;
		_37724_args=_37724_args.slice(1LL);
	};
	jule::Ptr<_1b6c04994_IR> _38313_ir = _1a9575212_buildIr(_37724_args);;
	;
	if ((!(_22b12824e_Test))) {
		jule::Ptr<_1eb023b80_Fn> _38817_main = _1d052e0c9_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4),false);;
		if ((_38817_main == nullptr)) {
			_1b7e8210a_Throw(_22ca32409_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63),jule::Slice<jule::Any>()));
		};
	};
	_1a954ea5a_applyTargetIndependentOptimizations(_38313_ir);
	_1b6e243ab_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a9545985_genCompileCmd(_1a9540089_getCompilePath(),_38313_ir);
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a951a99e_ObjectCoder> _40113_oc = static__1a94de214_New(_38313_ir,_1a94a76e9_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_22b12824e_Test) {
		jule::Ptr<_1a9472807_TestCoder> _40617_tc = static__1a9472c7a_New(_40113_oc);;
		_1a9473eac_Serialize(_40617_tc);
	} else {
		_1a951e8b5_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1a9540089_getCompilePath();;
	jule::Ptr<_22b1e9694_File> _41313_file = _1a9547aec_openOutput(_4129_path);;
	({
		auto except = _22b295e5a_Write(_41313_file.ptr(), static_cast<jule::Slice<jule::U8>>(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1b7e8210a_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _22b24d495_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_22b127e85_Transpilation))) {
		_1a9542740_compileIr(_39910_compiler,_39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_21271c6b4_init();
	_1eaeee4da_init();
	_1a9544511_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}