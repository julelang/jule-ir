// Auto generated by JuleC.
// JuleC version: jule0.0.13 @master
// Date: 1/6/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _215e174b5_Importer{};
struct _215eb9ec4_Kind{};
struct _215ed6375_Lookup{};
struct _1ea778b22_CommonFlag{};
struct _22da89185_Range16;
struct _22da89608_Range32;
struct _22da89a7b_RangeTable;
struct _22db4ab81_acceptRange;
struct _22cbb2a40_lazyBuff;
struct _22bdc95e8_DirEntry;
struct _22bcdbd24_Directory;
struct _22cad4b93_File;
struct _22cad505b_Status;
struct _22dcbb609_cmdAttrs;
struct _22dbec89d_Log;
struct _22e0aa1de_Token;
struct _22e0b0579_File;
struct _22e0b25d1_kindPair;
struct _22e0b8142_lex;
struct _2142c7d2d_floatInfo;
struct _21454ed63_decimalSlice;
struct _2146ebac0_leftCheat;
struct _2146ebdcd_decimal;
struct _21470339b_Const;
struct _215d761c1_Ast;
struct _215d76e4c_Node;
struct _215d77348_Directive;
struct _215daa5e0_TypeDecl;
struct _215daaba6_IdentTypeDecl;
struct _215dab305_SubIdentTypeDecl;
struct _215dab6ac_NamespaceTypeDecl;
struct _215dab998_SptrTypeDecl;
struct _215dabd94_SlcTypeDecl;
struct _215dac180_TupleTypeDecl;
struct _215dac46b_PtrTypeDecl;
struct _215dacaed_ArrTypeDecl;
struct _215dad34b_MapTypeDecl;
struct _215dad703_RetTypeDecl;
struct _215daeb11_Expr;
struct _215daedec_RangeExpr;
struct _215db04a2_UseExpr;
struct _215db078d_TupleExpr;
struct _215db0b45_LitExpr;
struct _215db134e_UnsafeExpr;
struct _215db17c2_IdentExpr;
struct _215db1ecb_UnaryExpr;
struct _215db2383_VariadicExpr;
struct _215db273a_CastExpr;
struct _215db2ae2_NsSelectionExpr;
struct _215db3065_SubIdentExpr;
struct _215db34d8_BinopExpr;
struct _215db3ae3_FnCallExpr;
struct _215db4572_FieldExprPair;
struct _215db4cc0_StructLit;
struct _215db5243_BraceLit;
struct _215db5a18_KeyValPair;
struct _215db6200_SliceExpr;
struct _215db6a6e_IndexingExpr;
struct _215db7179_SlicingExpr;
struct _215db7465_Constraint;
struct _215db78d8_GenericDecl;
struct _215db7c90_LabelSt;
struct _215db8147_GotoSt;
struct _215db8433_FallSt;
struct _215db8a3d_AssignLeft;
struct _215db907c_AssignSt;
struct _215db9e6d_Stmt;
struct _215dba578_ScopeTree;
struct _215dbac4e_ParamDecl;
struct _215dbc06e_FnDecl;
struct _215dbd04d_VarDecl;
struct _215dbd405_RetSt;
struct _215dbda65_Iter;
struct _215dbe33a_WhileKind;
struct _215dbebcb_RangeKind;
struct _215dc0083_BreakSt;
struct _215dc043a_ContSt;
struct _215dc08ad_If;
struct _215dc0c65_Else;
struct _215dc11d8_Conditional;
struct _215dc18ae_TypeAliasDecl;
struct _215dc1d32_Case;
struct _215dc2508_MatchCase;
struct _215dc2c9a_UseDecl;
struct _215dc321d_EnumItemDecl;
struct _215dc3c46_EnumDecl;
struct _215dc474c_TypeEnumItemDecl;
struct _215dc4d57_TypeEnumDecl;
struct _215dc5055_FieldDecl;
struct _215dc5808_StructDecl;
struct _215dc5e13_TraitDecl;
struct _215dc651d_Impl;
struct _215d9ad3e_Field;
struct _215da3484_Operators;
struct _215dc6cd2_Struct;
struct _215dc6ebe_FieldIns;
struct _215dc76d9_OperandExprModel;
struct _215dc78c6_BinopExprModel;
struct _215dc7ab3_UnaryExprModel;
struct _215dc7ca0_StructArgExprModel;
struct _215dc7e8c_StructLitExprModel;
struct _215dc8179_AllocStructLitExprModel;
struct _215dc8366_CastingExprModel;
struct _215dc8553_FnCallExprModel;
struct _215dc8740_SliceExprModel;
struct _215dc892c_IndexingExprModel;
struct _215dc8b19_AnonFnExprModel;
struct _215dc8d06_KeyValPairExprModel;
struct _215dc8ee3_MapExprModel;
struct _215dc91d0_SlicingExprModel;
struct _215dc93bc_TraitSubIdentExprModel;
struct _215dc97da_StructSubIdentExprModel;
struct _215dc99c7_StructStaticIdentExprModel;
struct _215dc9bb4_ArrayExprModel;
struct _215dc9da1_CommonIdentExprModel;
struct _215dca08d_CommonSubIdentExprModel;
struct _215dca27a_TupleExprModel;
struct _215dca467_BuiltinOutCallExprModel;
struct _215dca654_BuiltinOutlnCallExprModel;
struct _215dca841_BuiltinCloneCallExprModel;
struct _215dcaa2d_BuiltinNewCallExprModel;
struct _215dcac1a_BuiltinPanicCallExprModel;
struct _215dcae07_BuiltinAssertCallExprModel;
struct _215dcb0e4_BuiltinMakeCallExprModel;
struct _215dcb2d1_BuiltinAppendCallExprModel;
struct _215dcb4bd_BuiltinLenCallExprModel;
struct _215dcb6aa_BuiltinCapCallExprModel;
struct _215dc95a9_BuiltinDeleteCallExprModel;
struct _215dcbd1a_BuiltinCopyCallExprModel;
struct _215dcc007_BuiltinErrorCallExprModel;
struct _215dcc1e4_SizeofExprModel;
struct _215dcc3d1_AlignofExprModel;
struct _215dcc5bd_RuneExprModel;
struct _215dcc7aa_IntegratedToStrExprModel;
struct _215dcc997_BackendEmitExprModel;
struct _215dccb84_FreeExprModel;
struct _215dccd71_RetType;
struct _215dcd05d_Param;
struct _215dcd24a_Fn;
struct _215dcdb41_ParamIns;
struct _215dcea10_FnIns;
struct _215dd2969_ReferenceStack;
struct _215dd3c9a_Pass;
struct _215dd8244_symbolBuilder;
struct _215dddc1c_Trait;
struct _215de036c_EnumItem;
struct _215de0d62_Enum;
struct _215de1d96_TypeEnumItem;
struct _215de245c_TypeEnum;
struct _215de498c_constraintChecker;
struct _215de68c3_Impl;
struct _215deb92d_Scope;
struct _215debd29_If;
struct _215dec115_Else;
struct _215dec489_Conditional;
struct _215dec775_InfIter;
struct _215decbe8_WhileIter;
struct _215ded5cd_RangeIter;
struct _215ded9c9_ContSt;
struct _215dedd81_BreakSt;
struct _215dee16c_Label;
struct _215dee458_GotoSt;
struct _215dee810_Postfix;
struct _215deec83_Assign;
struct _215e0013a_MultiAssign;
struct _215e00679_Match;
struct _215e011c4_Case;
struct _215e01779_FallSt;
struct _215e01aed_RetSt;
struct _215e02208_scopeLabel;
struct _215e0267b_scopeGoto;
struct _215e03490_scopeChecker;
struct _215e140a5_directiveChecker;
struct _215e1a133_ImportInfo;
struct _215e1d08c_Package;
struct _215e2327e_Sema;
struct _215e3ddb0_missingRetChecker;
struct _215e40a60_IterRelation;
struct _215e41aa5_Var;
struct _215e42853_FuncPattern;
struct _215e7823a_typeCompatibilityChecker;
struct _215e79d63_assignTypeChecker;
struct _215e7b848_dynamicTypeAnnotation;
struct _215e81210_fnCallArgChecker;
struct _215e83b19_structLitChecker;
struct _215e856ed_rangeChecker;
struct _215e87788_retTypeChecker;
struct _215e89647_SymbolTable;
struct _215e8e471_Data;
struct _215e904e9_Value;
struct _215e90ede_Eval;
struct _215eabd84_unaryEval;
struct _215eadb22_binaryEval;
struct _215eb8bc6_InsGeneric;
struct _215eb9710_TypeAlias;
struct _215eba403_TypeKind;
struct _215ebe7d1_TypeSymbol;
struct _215ec0150_Prim;
struct _215ec38d4_Sptr;
struct _215ec4341_Slc;
struct _215ec4dbe_Tuple;
struct _215ec58e7_Map;
struct _215ec64db_Arr;
struct _215ec6e48_Ptr;
struct _215ec7d8e_referencer;
struct _215ec8c6e_typeChecker;
struct _215ed1480_identTypeLookup;
struct _1e9dbee6c_FileInfo;
struct _1e9e18a87_stmt;
struct _1e9e193b2_scopeParser;
struct _1e9e25896_exprBuilder;
struct _1e9e321cc_assignInfo;
struct _1e9e35a0a_parser;
struct _1e9e4671e_typeBuilder;
struct _2161e9038_CompileInfo;
struct _2161ea38b_directiveEval;
struct _1e9d3cbcb_JuleImporter;
struct _22e371917_OrderedDefines;
struct _1e9c084ae_defineOrderer;
struct _1ea02a616_liveTable;
struct _1ea06131c_scopeDeadCode;
struct _1ea065277_exprDeadCode;
struct _21611662b_StrCompExprModel;
struct _2161169e4_StrAppendExprModel;
struct _216116cd0_UnsafeBinopExprModel;
struct _216117165_UnsafeIndexingExprModel;
struct _2161174ea_PushToSliceExprModel;
struct _216117a39_MutSlicingExprModel;
struct _216117e13_StrInsertBeginExprModel;
struct _216119123_scopeOptimizer;
struct _21611ea1e_exprOptimizer;
struct _1e9e622d9_Optimizer;
struct _1ea06e281_AnsiEscape;
struct _1ea07076b_Logger;
struct _1ea71ae49_AbsTime;
struct _1ea71b5dc_Time;
struct _1ea661059_scopeCoder;
struct _1ea6694a2_exprCoder;
struct _1ea678879_deriveCoder;
struct _1ea67a260_TestCoder;
struct _1ea67c7a1_identCoder;
struct _1ea6b0152_SerializationInfo;
struct _1ea685666_traitHash;
struct _1ea728e8a_customType;
struct _1ea729908_typeCoder;
struct _1ea7321e6_resultCoder;
struct _20c3cd18d_Flag;
struct _20c3d1ceb_Flag;
struct _20c3d55b3_Flag;
struct _20c3d8dbe_Flag;
struct _20c3dc686_Flag;
struct _1ea77a591_FlagSet;
struct _1ea77cc69_argParser;
struct _1ea723407_ObjectCoder;
struct _1ea02a913_ObjectDeadCode;
struct _22e2caed1_IR;
struct _215dc71ab_StructIns;
struct _22dc83956_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_215e8e471_Data__jule_tuple_x_215e8e471_Data {
	jule::Ptr<_215e8e471_Data> __jule_result_arg0;
	jule::Ptr<_215e8e471_Data> __jule_result_arg1;
};
struct __jule_tuple_x_215dc1d32_Case__jule_tuple_bool {
	jule::Ptr<_215dc1d32_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_215dc1d32_Case__jule_tuple_x_215dc0c65_Else {
	jule::Slice<jule::Ptr<_215dc1d32_Case>> __jule_result_arg0;
	jule::Ptr<_215dc0c65_Else> __jule_result_arg1;
};
struct __jule_tuple__215db9c3c_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool {
	jule::Ptr<_215db907c_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool {
	jule::Ptr<_215daa5e0_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_215dad703_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log {
	jule::Slice<jule::Ptr<_215d761c1_Ast>> __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_22dbec89d_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_22e2caed1_IR__jule_tuple_s_22dbec89d_Log {
	jule::Ptr<_22e2caed1_IR> __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__213516d09_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__213516d09_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__213516d09_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_215e89647_SymbolTable__jule_tuple_s_22dbec89d_Log {
	jule::Ptr<_215e89647_SymbolTable> __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log {
	jule::Ptr<_215e1d08c_Package> __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_x_215d761c1_Ast__jule_tuple_s_22dbec89d_Log {
	jule::Ptr<_215d761c1_Ast> __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_22e0aa1de_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> __jule_result_arg0;
	jule::Slice<_22dbec89d_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _22da89185_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_22da89185_Range16(void) = default;

	inline bool operator==(_22da89185_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22da89185_Range16 _other) { return !this->operator==(_other); }


};
struct _22da89608_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_22da89608_Range32(void) = default;

	inline bool operator==(_22da89608_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22da89608_Range32 _other) { return !this->operator==(_other); }


};
struct _22da89a7b_RangeTable {
	jule::Slice<_22da89185_Range16> _field_R16;
	jule::Slice<_22da89608_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_22da89a7b_RangeTable(void) = default;


};
struct _22db4ab81_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_22db4ab81_acceptRange(void) = default;

	inline bool operator==(_22db4ab81_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22db4ab81_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _22cbb9151_index(_22cbb2a40_lazyBuff*, jule::I64);
inline void _22cbbb97d_append(_22cbb2a40_lazyBuff*, jule::U8);
inline jule::Str _22cbbd2a9_string(_22cbb2a40_lazyBuff*);
struct _22cbb2a40_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_22cbb2a40_lazyBuff(void) = default;


};
struct _22bdc95e8_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_22cad505b_Status> _field_Stat;
	

	_22bdc95e8_DirEntry(void) = default;

	inline bool operator==(_22bdc95e8_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_22bdc95e8_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>> static__22cb24881_Read(jule::Str);
inline jule::VoidExceptional static__22cb4e3c2_Create(jule::Str);
inline jule::VoidExceptional static__22cb29237_Remove(jule::Str);
struct _22bcdbd24_Directory {
	

	_22bcdbd24_Directory(void) = default;

	inline bool operator==(_22bcdbd24_Directory _other) { return true; }

	inline bool operator!=(_22bcdbd24_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_22cad4b93_File>> static__22be1ec15_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__22bdc734e_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _22bcc2c72_Write(_22cad4b93_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _22bcdca06_Read(_22cad4b93_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_22cad4b93_File> static__22bd129c6_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_22cad4b93_File>> static__22bdc6ae0_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__22bdc71a6_Read(jule::Str);
inline jule::VoidExceptional static__22bdc7bac_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional static__22bcdd0bc_WriteStr(jule::Str, jule::Str*, jule::I64);
inline jule::Exceptional<jule::I64> _22bdc645d_Seek(_22cad4b93_File*, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _22bcc17cb_WriteStr(_22cad4b93_File*, jule::Str*);
inline jule::VoidExceptional _22bcdeb3a_Close(_22cad4b93_File*);
struct _22cad4b93_File {
	jule::Uintptr _field_handle = 0;
	

	_22cad4b93_File(void) = default;

	inline bool operator==(_22cad4b93_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_22cad4b93_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_22cad505b_Status>> static__22bd107e8_Of(jule::Str);
inline jule::Bool _22bd10991_IsDir(_22cad505b_Status*);
inline jule::Bool _22cad5248_IsReg(_22cad505b_Status*);
inline jule::U64 _22cad537a_Size(_22cad505b_Status*);
struct _22cad505b_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	_22cad505b_Status(void) = default;

	inline bool operator==(_22cad505b_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_22cad505b_Status _other) { return !this->operator==(_other); }


};
struct _22dcbb609_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	_22dcbb609_cmdAttrs(void) = default;

	inline bool operator==(_22dcbb609_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_22dcbb609_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _22dbec89d_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_22dbec89d_Log(void) = default;

	inline bool operator==(_22dbec89d_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_22dbec89d_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _22e0aa596_Prec(_22e0aa1de_Token*);
struct _22e0aa1de_Token {
	jule::Ptr<_22e0b0579_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_22e0aa1de_Token(void) = default;

	inline bool operator==(_22e0aa1de_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_22e0aa1de_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _22e0b0986_IsOk(_22e0b0579_File*);
inline void _22e0b0c0b_Fill(_22e0b0579_File*, jule::Slice<jule::U8>);
inline jule::Str _22e0b0e70_Dir(_22e0b0579_File*);
inline jule::Str _22e0b11d4_Name(_22e0b0579_File*);
inline jule::Uintptr _22e0b1448_Addr(_22e0b0579_File*);
inline jule::Str _22e0b1756_GetRow(_22e0b0579_File*, jule::I64);
struct _22e0b0579_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Tokens;
	

	_22e0b0579_File(void) = default;


};
struct _22e0b25d1_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_22e0b25d1_kindPair(void) = default;

	inline bool operator==(_22e0b25d1_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_22e0b25d1_kindPair _other) { return !this->operator==(_other); }


};
inline void _22e0b86d6_pushErr(_22e0b8142_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _22e0b8a05_pushErrTok(_22e0b8142_lex*, jule::Ptr<_22e0aa1de_Token>*, jule::Str);
inline void _22e0b8bd1_lex(_22e0b8142_lex*);
inline jule::Str _22e0b8ede_id(_22e0b8142_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _22e0b9253_resume(_22e0b8142_lex*);
inline void _22e0b94c8_lexLineComment(_22e0b8142_lex*, jule::Ptr<_22e0aa1de_Token>*);
inline void _22e0b974d_lexRangeComment(_22e0b8142_lex*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Str _22e0b9a5b_num(_22e0b8142_lex*, jule::Slice<jule::U8>*);
inline jule::Str _22e0b9d69_escapeSeq(_22e0b8142_lex*, jule::Slice<jule::U8>*);
inline jule::Str _22e0ba221_getRune(_22e0b8142_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _22e0ba52e_lexRune(_22e0b8142_lex*, jule::Slice<jule::U8>*);
inline jule::Str _22e0ba793_lexStr(_22e0b8142_lex*);
inline jule::Bool _22e0baa07_isFirstTokenOfLine(_22e0b8142_lex*);
inline void _22e0babd3_newLine(_22e0b8142_lex*);
inline jule::Bool _22e0bb1cd_isOp(_22e0b8142_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _22e0bb585_lexBasicOps(_22e0b8142_lex*, jule::Slice<jule::U8>, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _22e0bb93c_lexId(_22e0b8142_lex*, jule::Slice<jule::U8>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _22e0bbce4_lexNum(_22e0b8142_lex*, jule::Slice<jule::U8>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Ptr<_22e0aa1de_Token> _22e0bc058_token(_22e0b8142_lex*);
struct _22e0b8142_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_tokens;
	jule::Ptr<_22e0b0579_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_22dbec89d_Log> _field_errors;
	

	_22e0b8142_lex(void) = default;


};
struct _2142c7d2d_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_2142c7d2d_floatInfo(void) = default;

	inline bool operator==(_2142c7d2d_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_2142c7d2d_floatInfo _other) { return !this->operator==(_other); }


};
struct _21454ed63_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_21454ed63_decimalSlice(void) = default;


};
struct _2146ebac0_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_2146ebac0_leftCheat(void) = default;

	inline bool operator==(_2146ebac0_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_2146ebac0_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _2135194e3_set(_2146ebdcd_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _2146e9194_floatBits(_2146ebdcd_decimal*, _2142c7d2d_floatInfo*);
inline void _2146ec0ba_assign(_2146ebdcd_decimal*, jule::U64);
inline void _2146ec1ec_shift(_2146ebdcd_decimal*, jule::I64);
inline void _2146ec32e_roundDown(_2146ebdcd_decimal*, jule::I64);
inline void _2146ec461_roundUp(_2146ebdcd_decimal*, jule::I64);
inline void _2146ec593_round(_2146ebdcd_decimal*, jule::I64);
inline jule::U64 _2146ec6c5_roundedInteger(_2146ebdcd_decimal*);
struct _2146ebdcd_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_2146ebdcd_decimal(void) = default;

	inline bool operator==(_2146ebdcd_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_2146ebdcd_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_21470339b_Const> static__214703588_NewI64(jule::I64);
inline jule::Ptr<_21470339b_Const> static__2147036ba_NewU64(jule::U64);
inline jule::Ptr<_21470339b_Const> static__2147037ec_NewBool(jule::Bool);
inline jule::Ptr<_21470339b_Const> static__21470392e_NewStr(jule::Str);
inline jule::Ptr<_21470339b_Const> static__214703a61_NewF64(jule::F64);
inline jule::Ptr<_21470339b_Const> static__214703b93_NewNil(void);
inline jule::I64 _21470408e_ReadI64(_21470339b_Const*);
inline jule::U64 _2147041c1_ReadU64(_21470339b_Const*);
inline jule::Bool _214704303_ReadBool(_21470339b_Const*);
inline jule::Str _214704435_ReadStr(_21470339b_Const*);
inline jule::F64 _214704567_ReadF64(_21470339b_Const*);
inline jule::I64 _214704699_AsI64(_21470339b_Const*);
inline jule::U64 _2147047cb_AsU64(_21470339b_Const*);
inline jule::F64 _21470490d_AsF64(_21470339b_Const*);
inline void _214704a40_SetI64(_21470339b_Const*, jule::I64);
inline void _214704b72_SetU64(_21470339b_Const*, jule::U64);
inline void _214704ca4_SetBool(_21470339b_Const*, jule::Bool);
inline void _214704dd6_SetStr(_21470339b_Const*, jule::Str);
inline void _214705018_SetF64(_21470339b_Const*, jule::F64);
inline void _21470514a_SetNil(_21470339b_Const*);
inline jule::Bool _21470527c_IsI64(_21470339b_Const*);
inline jule::Bool _2147053ae_IsU64(_21470339b_Const*);
inline jule::Bool _2147054e1_IsBool(_21470339b_Const*);
inline jule::Bool _214705623_IsStr(_21470339b_Const*);
inline jule::Bool _214705755_IsF64(_21470339b_Const*);
inline jule::Bool _214705887_IsNil(_21470339b_Const*);
inline jule::Bool _2147059b9_AreSameTypes(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214705aeb_And(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214705c2d_Or(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214705d60_Eq(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214705e92_Lt(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _2147060c4_LtEq(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706206_Gt(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706338_GtEq(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _21470646a_Add(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _21470659c_Sub(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _2147066ce_Mul(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706811_Div(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706943_Mod(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706a75_BitwiseAnd(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706ba7_BitwiseOr(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706cd9_Xor(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _214706e1b_Lshift(_21470339b_Const*, _21470339b_Const);
inline jule::Bool _21470704d_Rshift(_21470339b_Const*, _21470339b_Const);
struct _21470339b_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_21470339b_Const(void) = default;

	inline jule::Bool operator==(_21470339b_Const _other) { return _214705d60_Eq(this, _other); }

	inline bool operator!=(_21470339b_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_21470339b_Const _other) { return _214706206_Gt(this, _other); }

	inline jule::Bool operator>=(_21470339b_Const _other) { return _214706338_GtEq(this, _other); }

	inline jule::Bool operator<(_21470339b_Const _other) { return _214705e92_Lt(this, _other); }

	inline jule::Bool operator<=(_21470339b_Const _other) { return _2147060c4_LtEq(this, _other); }


};
struct _215d761c1_Ast {
	jule::Ptr<_22e0b0579_File> _field_File;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_215dc2c9a_UseDecl>> _field_UseDecls;
	jule::Slice<_215d76e4c_Node> _field_Nodes;
	

	_215d761c1_Ast(void) = default;


};
struct _215d76e4c_Node {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_215d76e4c_Node(void) = default;

	inline bool operator==(_215d76e4c_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_215d76e4c_Node _other) { return !this->operator==(_other); }


};
struct _215d77348_Directive {
	jule::Ptr<_22e0aa1de_Token> _field_Tag;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Args;
	

	_215d77348_Directive(void) = default;


};
struct _215daa5e0_TypeDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_215daa5e0_TypeDecl(void) = default;

	inline bool operator==(_215daa5e0_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215daa5e0_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _215dab019_IsPrim(_215daaba6_IdentTypeDecl*);
struct _215daaba6_IdentTypeDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _field_Generics;
	

	_215daaba6_IdentTypeDecl(void) = default;


};
struct _215dab305_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_215daaba6_IdentTypeDecl>> _field_Idents;
	

	_215dab305_SubIdentTypeDecl(void) = default;


};
struct _215dab6ac_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Idents;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	

	_215dab6ac_NamespaceTypeDecl(void) = default;


};
struct _215dab998_SptrTypeDecl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Elem;
	

	_215dab998_SptrTypeDecl(void) = default;

	inline bool operator==(_215dab998_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215dab998_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _215dabd94_SlcTypeDecl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Elem;
	

	_215dabd94_SlcTypeDecl(void) = default;

	inline bool operator==(_215dabd94_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215dabd94_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _215dac180_TupleTypeDecl {
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _field_Types;
	

	_215dac180_TupleTypeDecl(void) = default;


};
inline jule::Bool _215dac7bd_IsUnsafe(_215dac46b_PtrTypeDecl*);
struct _215dac46b_PtrTypeDecl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Elem;
	

	_215dac46b_PtrTypeDecl(void) = default;

	inline bool operator==(_215dac46b_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215dac46b_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _215dacec7_AutoSized(_215dacaed_ArrTypeDecl*);
struct _215dacaed_ArrTypeDecl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Elem;
	jule::Ptr<_215daeb11_Expr> _field_Size;
	

	_215dacaed_ArrTypeDecl(void) = default;

	inline bool operator==(_215dacaed_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_215dacaed_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _215dad34b_MapTypeDecl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Key;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Val;
	

	_215dad34b_MapTypeDecl(void) = default;

	inline bool operator==(_215dad34b_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_215dad34b_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _215dad703_RetTypeDecl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Idents;
	

	_215dad703_RetTypeDecl(void) = default;


};
struct _215daeb11_Expr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_215daeb11_Expr(void) = default;

	inline bool operator==(_215daeb11_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215daeb11_Expr _other) { return !this->operator==(_other); }


};
struct _215daedec_RangeExpr {
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215daedec_RangeExpr(void) = default;

	inline bool operator==(_215daedec_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215daedec_RangeExpr _other) { return !this->operator==(_other); }


};
struct _215db04a2_UseExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db04a2_UseExpr(void) = default;

	inline bool operator==(_215db04a2_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db04a2_UseExpr _other) { return !this->operator==(_other); }


};
struct _215db078d_TupleExpr {
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_Expr;
	

	_215db078d_TupleExpr(void) = default;


};
inline jule::Bool _215db0e97_IsNil(_215db0b45_LitExpr*);
struct _215db0b45_LitExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Value;
	

	_215db0b45_LitExpr(void) = default;

	inline bool operator==(_215db0b45_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_215db0b45_LitExpr _other) { return !this->operator==(_other); }


};
struct _215db134e_UnsafeExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db134e_UnsafeExpr(void) = default;

	inline bool operator==(_215db134e_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db134e_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _215db1b24_IsSelf(_215db17c2_IdentExpr*);
struct _215db17c2_IdentExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_215db17c2_IdentExpr(void) = default;

	inline bool operator==(_215db17c2_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_215db17c2_IdentExpr _other) { return !this->operator==(_other); }


};
struct _215db1ecb_UnaryExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Op;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db1ecb_UnaryExpr(void) = default;

	inline bool operator==(_215db1ecb_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db1ecb_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _215db2383_VariadicExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db2383_VariadicExpr(void) = default;

	inline bool operator==(_215db2383_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db2383_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _215db273a_CastExpr {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db273a_CastExpr(void) = default;

	inline bool operator==(_215db273a_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db273a_CastExpr _other) { return !this->operator==(_other); }


};
struct _215db2ae2_NsSelectionExpr {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Ns;
	jule::Ptr<_22e0aa1de_Token> _field_Ident;
	

	_215db2ae2_NsSelectionExpr(void) = default;


};
struct _215db3065_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Ptr<_22e0aa1de_Token> _field_Ident;
	

	_215db3065_SubIdentExpr(void) = default;

	inline bool operator==(_215db3065_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215db3065_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _215db34d8_BinopExpr {
	jule::Ptr<_215daeb11_Expr> _field_Left;
	jule::Ptr<_215daeb11_Expr> _field_Right;
	jule::Ptr<_22e0aa1de_Token> _field_Op;
	

	_215db34d8_BinopExpr(void) = default;

	inline bool operator==(_215db34d8_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_215db34d8_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _215db3e56_Unhandled(_215db3ae3_FnCallExpr*);
inline jule::Bool _215db41ba_Ignored(_215db3ae3_FnCallExpr*);
struct _215db3ae3_FnCallExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_Args;
	jule::Ptr<_215dba578_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_215db3ae3_FnCallExpr(void) = default;


};
inline jule::Bool _215db48c4_IsTargeted(_215db4572_FieldExprPair*);
struct _215db4572_FieldExprPair {
	jule::Ptr<_22e0aa1de_Token> _field_Field;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db4572_FieldExprPair(void) = default;

	inline bool operator==(_215db4572_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db4572_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _215db4cc0_StructLit {
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_Exprs;
	

	_215db4cc0_StructLit(void) = default;


};
inline jule::Bool _215db5595_IsEmpty(_215db5243_BraceLit*);
struct _215db5243_BraceLit {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_Exprs;
	

	_215db5243_BraceLit(void) = default;


};
struct _215db5a18_KeyValPair {
	jule::Ptr<_215daeb11_Expr> _field_Key;
	jule::Ptr<_215daeb11_Expr> _field_Val;
	jule::Ptr<_22e0aa1de_Token> _field_Colon;
	

	_215db5a18_KeyValPair(void) = default;

	inline bool operator==(_215db5a18_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_215db5a18_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _215db6530_IsEmpty(_215db6200_SliceExpr*);
struct _215db6200_SliceExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_Exprs;
	

	_215db6200_SliceExpr(void) = default;


};
struct _215db6a6e_IndexingExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Ptr<_215daeb11_Expr> _field_Index;
	

	_215db6a6e_IndexingExpr(void) = default;

	inline bool operator==(_215db6a6e_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_215db6a6e_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _215db7179_SlicingExpr {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Ptr<_215daeb11_Expr> _field_Start;
	jule::Ptr<_215daeb11_Expr> _field_To;
	

	_215db7179_SlicingExpr(void) = default;

	inline bool operator==(_215db7179_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_215db7179_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _215db7465_Constraint {
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _field_Mask;
	

	_215db7465_Constraint(void) = default;


};
struct _215db78d8_GenericDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215db7465_Constraint> _field_Constraint;
	

	_215db78d8_GenericDecl(void) = default;

	inline bool operator==(_215db78d8_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_215db78d8_GenericDecl _other) { return !this->operator==(_other); }


};
struct _215db7c90_LabelSt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	

	_215db7c90_LabelSt(void) = default;

	inline bool operator==(_215db7c90_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215db7c90_LabelSt _other) { return !this->operator==(_other); }


};
struct _215db8147_GotoSt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_Label;
	

	_215db8147_GotoSt(void) = default;

	inline bool operator==(_215db8147_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_215db8147_GotoSt _other) { return !this->operator==(_other); }


};
struct _215db8433_FallSt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	

	_215db8433_FallSt(void) = default;

	inline bool operator==(_215db8433_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_215db8433_FallSt _other) { return !this->operator==(_other); }


};
struct _215db8a3d_AssignLeft {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215db8a3d_AssignLeft(void) = default;

	inline bool operator==(_215db8a3d_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215db8a3d_AssignLeft _other) { return !this->operator==(_other); }


};
struct _215db907c_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_22e0aa1de_Token> _field_Setter;
	jule::Slice<jule::Ptr<_215db8a3d_AssignLeft>> _field_Left;
	jule::Ptr<_215daeb11_Expr> _field_Right;
	

	_215db907c_AssignSt(void) = default;


};
struct _215db9e6d_Stmt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_215db9e6d_Stmt(void) = default;

	inline bool operator==(_215db9e6d_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_215db9e6d_Stmt _other) { return !this->operator==(_other); }


};
struct _215dba578_ScopeTree {
	jule::Ptr<_215dba578_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_215db9e6d_Stmt> _field_Stmts;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	

	_215dba578_ScopeTree(void) = default;


};
inline jule::Bool _215dbb0b2_IsSelf(_215dbac4e_ParamDecl*);
inline jule::Bool _215dbb326_IsRef(_215dbac4e_ParamDecl*);
struct _215dbac4e_ParamDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_215dbac4e_ParamDecl(void) = default;

	inline bool operator==(_215dbac4e_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215dbac4e_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _215dbc3c1_IsAnon(_215dbc06e_FnDecl*);
struct _215dbc06e_FnDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_Directives;
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _field_Generics;
	jule::Ptr<_215dad703_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>> _field_Params;
	

	_215dbc06e_FnDecl(void) = default;


};
struct _215dbd04d_VarDecl {
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_Directives;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215dbd04d_VarDecl(void) = default;


};
struct _215dbd405_RetSt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215dbd405_RetSt(void) = default;

	inline bool operator==(_215dbd405_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dbd405_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _215dbddb7_IsInf(_215dbda65_Iter*);
struct _215dbda65_Iter {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	

	_215dbda65_Iter(void) = default;

	inline bool operator==(_215dbda65_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215dbda65_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _215dbe68c_IsWhileNext(_215dbe33a_WhileKind*);
struct _215dbe33a_WhileKind {
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_22e0aa1de_Token> _field_NextToken;
	

	_215dbe33a_WhileKind(void) = default;

	inline bool operator==(_215dbe33a_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_215dbe33a_WhileKind _other) { return !this->operator==(_other); }


};
struct _215dbebcb_RangeKind {
	jule::Ptr<_22e0aa1de_Token> _field_InToken;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Ptr<_215dbd04d_VarDecl> _field_KeyA;
	jule::Ptr<_215dbd04d_VarDecl> _field_KeyB;
	

	_215dbebcb_RangeKind(void) = default;

	inline bool operator==(_215dbebcb_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_215dbebcb_RangeKind _other) { return !this->operator==(_other); }


};
struct _215dc0083_BreakSt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_Label;
	

	_215dc0083_BreakSt(void) = default;

	inline bool operator==(_215dc0083_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_215dc0083_BreakSt _other) { return !this->operator==(_other); }


};
struct _215dc043a_ContSt {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_Label;
	

	_215dc043a_ContSt(void) = default;

	inline bool operator==(_215dc043a_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_215dc043a_ContSt _other) { return !this->operator==(_other); }


};
struct _215dc08ad_If {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	

	_215dc08ad_If(void) = default;

	inline bool operator==(_215dc08ad_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215dc08ad_If _other) { return !this->operator==(_other); }


};
struct _215dc0c65_Else {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	

	_215dc0c65_Else(void) = default;

	inline bool operator==(_215dc0c65_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215dc0c65_Else _other) { return !this->operator==(_other); }


};
struct _215dc11d8_Conditional {
	jule::Ptr<_215dc08ad_If> _field_Head;
	jule::Slice<jule::Ptr<_215dc08ad_If>> _field_Tail;
	jule::Ptr<_215dc0c65_Else> _field_Default;
	

	_215dc11d8_Conditional(void) = default;


};
struct _215dc18ae_TypeAliasDecl {
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	

	_215dc18ae_TypeAliasDecl(void) = default;

	inline bool operator==(_215dc18ae_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215dc18ae_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _215dc1d32_Case {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_Exprs;
	

	_215dc1d32_Case(void) = default;


};
struct _215dc2508_MatchCase {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_215dc1d32_Case>> _field_Cases;
	jule::Ptr<_215dc0c65_Else> _field_Default;
	

	_215dc2508_MatchCase(void) = default;


};
struct _215dc2c9a_UseDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_215dc2c9a_UseDecl(void) = default;


};
inline jule::Bool _215dc3570_AutoExpr(_215dc321d_EnumItemDecl*);
struct _215dc321d_EnumItemDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	

	_215dc321d_EnumItemDecl(void) = default;

	inline bool operator==(_215dc321d_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dc321d_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _215dc42c9_DefaultTyped(_215dc3c46_EnumDecl*);
struct _215dc3c46_EnumDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>> _field_Items;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	

	_215dc3c46_EnumDecl(void) = default;


};
struct _215dc474c_TypeEnumItemDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	

	_215dc474c_TypeEnumItemDecl(void) = default;

	inline bool operator==(_215dc474c_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215dc474c_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _215dc4d57_TypeEnumDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	

	_215dc4d57_TypeEnumDecl(void) = default;


};
struct _215dc5055_FieldDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Kind;
	jule::Ptr<_215daeb11_Expr> _field_Default;
	

	_215dc5055_FieldDecl(void) = default;

	inline bool operator==(_215dc5055_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_215dc5055_FieldDecl _other) { return !this->operator==(_other); }


};
struct _215dc5808_StructDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_215dc5055_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _field_Generics;
	

	_215dc5808_StructDecl(void) = default;


};
struct _215dc5e13_TraitDecl {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_215dbc06e_FnDecl>> _field_Methods;
	

	_215dc5e13_TraitDecl(void) = default;


};
inline jule::Bool _215dc6881_IsTraitImpl(_215dc651d_Impl*);
inline jule::Bool _215dc6ae5_IsStructImpl(_215dc651d_Impl*);
struct _215dc651d_Impl {
	jule::Ptr<_22e0aa1de_Token> _field_End;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Base;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_215dbc06e_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_215dbd04d_VarDecl>> _field_Statics;
	

	_215dc651d_Impl(void) = default;


};
inline jule::Ptr<_215dc6ebe_FieldIns> _215d83585_instance(jule::Ptr<_215d9ad3e_Field>);
struct _215d9ad3e_Field {
	jule::Ptr<_215dc6cd2_Struct> _field_Owner;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	jule::Ptr<_215daeb11_Expr> _field_Default;
	

	_215d9ad3e_Field(void) = default;

	inline bool operator==(_215d9ad3e_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_215d9ad3e_Field _other) { return !this->operator==(_other); }


};
struct _215da3484_Operators {
	jule::Ptr<_215dcea10_FnIns> _field_Eq;
	jule::Ptr<_215dcea10_FnIns> _field_Gt;
	jule::Ptr<_215dcea10_FnIns> _field_GtEq;
	jule::Ptr<_215dcea10_FnIns> _field_Lt;
	jule::Ptr<_215dcea10_FnIns> _field_LtEq;
	jule::Ptr<_215dcea10_FnIns> _field_Shl;
	jule::Ptr<_215dcea10_FnIns> _field_Shr;
	jule::Ptr<_215dcea10_FnIns> _field_Add;
	jule::Ptr<_215dcea10_FnIns> _field_Sub;
	jule::Ptr<_215dcea10_FnIns> _field_Div;
	jule::Ptr<_215dcea10_FnIns> _field_Mul;
	jule::Ptr<_215dcea10_FnIns> _field_Mod;
	jule::Ptr<_215dcea10_FnIns> _field_BitAnd;
	jule::Ptr<_215dcea10_FnIns> _field_BitOr;
	jule::Ptr<_215dcea10_FnIns> _field_BitXor;
	jule::Ptr<_215dcea10_FnIns> _field_Neg;
	jule::Ptr<_215dcea10_FnIns> _field_Pos;
	jule::Ptr<_215dcea10_FnIns> _field_BitNot;
	jule::Ptr<_215dcea10_FnIns> _field_AddAssign;
	jule::Ptr<_215dcea10_FnIns> _field_SubAssign;
	jule::Ptr<_215dcea10_FnIns> _field_DivAssign;
	jule::Ptr<_215dcea10_FnIns> _field_MulAssign;
	jule::Ptr<_215dcea10_FnIns> _field_ModAssign;
	jule::Ptr<_215dcea10_FnIns> _field_ShlAssign;
	jule::Ptr<_215dcea10_FnIns> _field_ShrAssign;
	jule::Ptr<_215dcea10_FnIns> _field_BitOrAssign;
	jule::Ptr<_215dcea10_FnIns> _field_BitAndAssign;
	jule::Ptr<_215dcea10_FnIns> _field_BitXorAssign;
	

	_215da3484_Operators(void) = default;

	inline bool operator==(_215da3484_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_215da3484_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_215dc71ab_StructIns> _215d87358_instance(jule::Ptr<_215dc6cd2_Struct>);
inline jule::Ptr<_215dc71ab_StructIns> _215d880b2_appendInstance(_215dc6cd2_Struct*, jule::Ptr<_215dc71ab_StructIns>*);
inline jule::Ptr<_215dcd24a_Fn> _215d8b219_FindMethod(_215dc6cd2_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_215e41aa5_Var> _215d8a669_FindStatic(_215dc6cd2_Struct*, jule::Str);
inline jule::Ptr<_215d9ad3e_Field> _215d8ca45_FindField(_215dc6cd2_Struct*, jule::Str);
inline jule::Bool _215d8bd41_IsImplements(_215dc6cd2_Struct*, jule::Ptr<_215dddc1c_Trait>);
inline jule::Bool _215d90d12_IsDerives(_215dc6cd2_Struct*, jule::Str);
inline jule::Bool _215d914c7_IsUses(_215dc6cd2_Struct*, jule::Ptr<_215dc6cd2_Struct>);
inline jule::Bool _215d96994_HasRefAccessible(_215dc6cd2_Struct*);
struct _215dc6cd2_Struct {
	jule::Ptr<_215e2327e_Sema> _field_sema;
	jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _field_Uses;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_215d9ad3e_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_215dcd24a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_215dddc1c_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_215dc71ab_StructIns>> _field_Instances;
	

	_215dc6cd2_Struct(void) = default;


};
struct _215dc6ebe_FieldIns {
	jule::Ptr<_215d9ad3e_Field> _field_Decl;
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Ptr<_215e8e471_Data> _field_Default;
	

	_215dc6ebe_FieldIns(void) = default;

	inline bool operator==(_215dc6ebe_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_215dc6ebe_FieldIns _other) { return !this->operator==(_other); }


};
struct _215dc76d9_OperandExprModel {
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_215dc76d9_OperandExprModel(void) = default;

	inline bool operator==(_215dc76d9_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_215dc76d9_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _215dc78c6_BinopExprModel {
	jule::Ptr<_215dc76d9_OperandExprModel> _field_Left;
	jule::Ptr<_215dc76d9_OperandExprModel> _field_Right;
	jule::Ptr<_22e0aa1de_Token> _field_Op;
	

	_215dc78c6_BinopExprModel(void) = default;

	inline bool operator==(_215dc78c6_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_215dc78c6_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _215dc7ab3_UnaryExprModel {
	jule::Ptr<_215e8e471_Data> _field_Expr;
	jule::Ptr<_22e0aa1de_Token> _field_Op;
	

	_215dc7ab3_UnaryExprModel(void) = default;

	inline bool operator==(_215dc7ab3_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_215dc7ab3_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _215dc7ca0_StructArgExprModel {
	jule::Ptr<_215dc6ebe_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dc7ca0_StructArgExprModel(void) = default;

	inline bool operator==(_215dc7ca0_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dc7ca0_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _215dc7e8c_StructLitExprModel {
	jule::Ptr<_215dc71ab_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_215dc7ca0_StructArgExprModel>> _field_Args;
	

	_215dc7e8c_StructLitExprModel(void) = default;


};
struct _215dc8179_AllocStructLitExprModel {
	jule::Ptr<_215dc7e8c_StructLitExprModel> _field_Lit;
	

	_215dc8179_AllocStructLitExprModel(void) = default;

	inline bool operator==(_215dc8179_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_215dc8179_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _215dc8366_CastingExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Ptr<_215eba403_TypeKind> _field_ExprKind;
	

	_215dc8366_CastingExprModel(void) = default;

	inline bool operator==(_215dc8366_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_215dc8366_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _215dc8553_FnCallExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215dcea10_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_215deb92d_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_215dc8553_FnCallExprModel(void) = default;


};
struct _215dc8740_SliceExprModel {
	jule::Ptr<_215eba403_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_215dc8740_SliceExprModel(void) = default;


};
struct _215dc892c_IndexingExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215e8e471_Data> _field_Expr;
	jule::Ptr<_215e8e471_Data> _field_Index;
	

	_215dc892c_IndexingExprModel(void) = default;

	inline bool operator==(_215dc892c_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_215dc892c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _215dc8b19_AnonFnExprModel {
	jule::Ptr<_215dcea10_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_215dc8b19_AnonFnExprModel(void) = default;

	inline bool operator==(_215dc8b19_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_215dc8b19_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _215dc8d06_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_215dc8d06_KeyValPairExprModel(void) = default;

	inline bool operator==(_215dc8d06_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_215dc8d06_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _215dc8ee3_MapExprModel {
	jule::Ptr<_215eba403_TypeKind> _field_KeyKind;
	jule::Ptr<_215eba403_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_215dc8d06_KeyValPairExprModel>> _field_Entries;
	

	_215dc8ee3_MapExprModel(void) = default;


};
struct _215dc91d0_SlicingExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_215dc91d0_SlicingExprModel(void) = default;

	inline bool operator==(_215dc91d0_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_215dc91d0_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _215dc93bc_TraitSubIdentExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_215dcd24a_Fn> _field_Method;
	jule::Ptr<_215dddc1c_Trait> _field_Trt;
	

	_215dc93bc_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_215dc93bc_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_215dc93bc_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _215dc97da_StructSubIdentExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Ptr<_215e8e471_Data> _field_Expr;
	jule::Ptr<_215dcea10_FnIns> _field_Method;
	jule::Ptr<_215dc6ebe_FieldIns> _field_Field;
	jule::Ptr<_215dc71ab_StructIns> _field_Owner;
	

	_215dc97da_StructSubIdentExprModel(void) = default;

	inline bool operator==(_215dc97da_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_215dc97da_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _215dc99c7_StructStaticIdentExprModel {
	jule::Ptr<_215dc71ab_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_215dcea10_FnIns> _field_Method;
	

	_215dc99c7_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_215dc99c7_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_215dc99c7_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _215dc9bb4_ArrayExprModel {
	jule::Ptr<_215ec64db_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_215dc9bb4_ArrayExprModel(void) = default;


};
struct _215dc9da1_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_215dc9da1_CommonIdentExprModel(void) = default;

	inline bool operator==(_215dc9da1_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215dc9da1_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _215dca08d_CommonSubIdentExprModel {
	jule::Ptr<_215eba403_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	

	_215dca08d_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_215dca08d_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215dca08d_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _215dca27a_TupleExprModel {
	jule::Slice<jule::Ptr<_215e8e471_Data>> _field_Datas;
	

	_215dca27a_TupleExprModel(void) = default;


};
struct _215dca467_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_215dca467_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_215dca467_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_215dca467_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dca654_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_215dca654_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_215dca654_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_215dca654_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dca841_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dca841_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_215dca841_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dca841_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcaa2d_BuiltinNewCallExprModel {
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_215dcaa2d_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_215dcaa2d_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_215dcaa2d_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcac1a_BuiltinPanicCallExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dcac1a_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_215dcac1a_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dcac1a_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcae07_BuiltinAssertCallExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_215dcae07_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_215dcae07_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_215dcae07_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcb0e4_BuiltinMakeCallExprModel {
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_215dcb0e4_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_215dcb0e4_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_215dcb0e4_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcb2d1_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_215dcb2d1_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_215dcb2d1_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_215dcb2d1_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcb4bd_BuiltinLenCallExprModel {
	jule::Ptr<_215e8e471_Data> _field_Expr;
	

	_215dcb4bd_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_215dcb4bd_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dcb4bd_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcb6aa_BuiltinCapCallExprModel {
	jule::Ptr<_215e8e471_Data> _field_Expr;
	

	_215dcb6aa_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_215dcb6aa_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dcb6aa_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dc95a9_BuiltinDeleteCallExprModel {
	jule::Ptr<_215e8e471_Data> _field_Dest;
	jule::Ptr<_215e8e471_Data> _field_Key;
	

	_215dc95a9_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_215dc95a9_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_215dc95a9_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcbd1a_BuiltinCopyCallExprModel {
	jule::Ptr<_215e8e471_Data> _field_Dest;
	jule::Ptr<_215e8e471_Data> _field_Src;
	

	_215dcbd1a_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_215dcbd1a_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_215dcbd1a_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcc007_BuiltinErrorCallExprModel {
	jule::Ptr<_215dcea10_FnIns> _field_Func;
	jule::Ptr<_215e8e471_Data> _field_Err;
	

	_215dcc007_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_215dcc007_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_215dcc007_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _215dcc1e4_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dcc1e4_SizeofExprModel(void) = default;

	inline bool operator==(_215dcc1e4_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dcc1e4_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _215dcc3d1_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dcc3d1_AlignofExprModel(void) = default;

	inline bool operator==(_215dcc3d1_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dcc3d1_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _215dcc5bd_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_215dcc5bd_RuneExprModel(void) = default;

	inline bool operator==(_215dcc5bd_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_215dcc5bd_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _215dcc7aa_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dcc7aa_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_215dcc7aa_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dcc7aa_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _215dcc997_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_215dcc997_BackendEmitExprModel(void) = default;


};
struct _215dccb84_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215dccb84_FreeExprModel(void) = default;

	inline bool operator==(_215dccb84_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215dccb84_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _215dccd71_RetType {
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Idents;
	

	_215dccd71_RetType(void) = default;


};
inline jule::Ptr<_215dcdb41_ParamIns> _215d85840_instance(jule::Ptr<_215dcd05d_Param>);
inline jule::Bool _215d8baee_IsSelf(_215dcd05d_Param*);
inline jule::Bool _215d8d46e_IsRef(_215dcd05d_Param*);
struct _215dcd05d_Param {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_215dcd05d_Param(void) = default;

	inline bool operator==(_215dcd05d_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215dcd05d_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _215d7ce64_IsVoid(_215dcd24a_Fn*);
inline jule::Bool _215d9c5b0_IsMethod(_215dcd24a_Fn*);
inline jule::Bool _215d938a3_IsEntryPoint(_215dcd24a_Fn*);
inline jule::Bool _215d7a99a_IsInit(_215dcd24a_Fn*);
inline jule::Bool _215d82ac3_IsAnon(_215dcd24a_Fn*);
inline jule::Bool _215da0393_AnyVar(_215dcd24a_Fn*);
inline jule::Ptr<_215dcea10_FnIns> _215d95146_instanceForce(jule::Ptr<_215dcd24a_Fn>);
inline jule::Ptr<_215dcea10_FnIns> _215dcd4ae_instance(jule::Ptr<_215dcd24a_Fn>);
inline jule::Ptr<_215dcea10_FnIns> _215dcd789_appendInstance(_215dcd24a_Fn*, jule::Ptr<_215dcea10_FnIns>*);
struct _215dcd24a_Fn {
	jule::Ptr<_215e2327e_Sema> _field_sema;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_Directives;
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _field_Generics;
	jule::Ptr<_215dccd71_RetType> _field_Result;
	jule::Slice<jule::Ptr<_215dcd05d_Param>> _field_Params;
	jule::Ptr<_215dc6cd2_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_215dcea10_FnIns>> _field_Instances;
	

	_215dcd24a_Fn(void) = default;


};
inline jule::Str _215dce01a_Str(_215dcdb41_ParamIns*);
struct _215dcdb41_ParamIns {
	jule::Ptr<_215dcd05d_Param> _field_Decl;
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	

	_215dcdb41_ParamIns(void) = default;

	inline bool operator==(_215dcdb41_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215dcdb41_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _215dced40_Str(_215dcea10_FnIns*);
inline jule::Bool _215dd014d_Equal(jule::Ptr<_215dcea10_FnIns>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215dd05b0_EqualFn(jule::Ptr<_215dcea10_FnIns>, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Bool _215dd08bd_equalTrait(jule::Ptr<_215dcea10_FnIns>, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Slice<jule::Ptr<_215eba403_TypeKind>> _215dd0b32_Types(_215dcea10_FnIns*);
inline jule::Bool _215dd0d96_IsBuiltin(_215dcea10_FnIns*);
inline jule::Bool _215dd110a_IsAnon(_215dcea10_FnIns*);
inline jule::Bool _215dd1418_Same(_215dcea10_FnIns*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Str _215dd1726_GetKindStr(_215dcea10_FnIns*, jule::Bool);
struct _215dcea10_FnIns {
	jule::Ptr<_215dc71ab_StructIns> _field_Owner;
	jule::Ptr<_215dcd24a_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_215eb8bc6_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_215dcdb41_ParamIns>> _field_Params;
	jule::Ptr<_215eba403_TypeKind> _field_Result;
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	jule::Ptr<_215dd2969_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_215dcea10_FnIns(void) = default;


};
inline jule::Ptr<_215dd2969_ReferenceStack> static__215dd2bbc_new(void);
inline jule::I64 _215dd3052_Len(_215dd2969_ReferenceStack*);
inline jule::Any _215dd3360_At(_215dd2969_ReferenceStack*, jule::I64);
inline void _215dd35d5_Push(_215dd2969_ReferenceStack*, jule::Any);
inline jule::Bool _209c00908_Exist(_215dd2969_ReferenceStack*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Bool _209c14664_Exist(_215dd2969_ReferenceStack*, jule::Ptr<_215e41aa5_Var>);
inline jule::Bool _209ca9aa0_Exist(_215dd2969_ReferenceStack*, jule::Ptr<_215dc71ab_StructIns>);
inline jule::Bool _20a063760_Exist(_215dd2969_ReferenceStack*, jule::Ptr<_215dddc1c_Trait>);
struct _215dd2969_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_215dd2969_ReferenceStack(void) = default;


};
struct _215dd3c9a_Pass {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Text;
	

	_215dd3c9a_Pass(void) = default;

	inline bool operator==(_215dd3c9a_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_215dd3c9a_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_215dd8244_symbolBuilder> _215dd86ea_getRoot(jule::Ptr<_215dd8244_symbolBuilder>);
inline void _215dd8ab3_pushErr(_215dd8244_symbolBuilder*, jule::Ptr<_22e0aa1de_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _215dd8e7b_pushErrText(_215dd8244_symbolBuilder*, jule::Ptr<_22e0aa1de_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _215dd929a_pushSuggestion(_215dd8244_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215dd9652_checkCppUseDeclPath(_215dd8244_symbolBuilder*, jule::Ptr<_215dc2c9a_UseDecl>*, jule::Str);
inline jule::Ptr<_215e1a133_ImportInfo> _215dd992c_buildCppHeaderImport(_215dd8244_symbolBuilder*, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Ptr<_215e1a133_ImportInfo> _215dd9c3a_buildStdImport(_215dd8244_symbolBuilder*, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Ptr<_215e1a133_ImportInfo> _215dda048_buildIdentImport(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Ptr<_215e1a133_ImportInfo> _215dda356_buildImport(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Bool _215dda664_checkDuplicateUseDecl(_215dd8244_symbolBuilder*, jule::Ptr<_215e1a133_ImportInfo>*);
inline void _215dda983_implImportSelections(_215dd8244_symbolBuilder*, jule::Ptr<_215e1a133_ImportInfo>*, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Str _215ddac91_getAsLinkPath(jule::Ptr<_215dd8244_symbolBuilder>, jule::Str);
inline void _215ddb159_pushCycleError(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215dd8244_symbolBuilder>*, jule::Str, jule::Str*);
inline void _215ddb522_pushCrossCycleError(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215dd8244_symbolBuilder>*, jule::Ptr<_215e1a133_ImportInfo>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _215ddb8c9_checkImportCycles(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215e1a133_ImportInfo>, jule::Ptr<_215dc2c9a_UseDecl>*);
inline void _215ddbcb4_checkPackageAccessibility(_215dd8244_symbolBuilder*, jule::Ptr<_215dc2c9a_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _215ddc17c_importPackage(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215e1a133_ImportInfo>*, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Ptr<_215e1a133_ImportInfo> _215ddc48a_importUseDecl(jule::Ptr<_215dd8244_symbolBuilder>, jule::Ptr<_215dc2c9a_UseDecl>*);
inline void _215ddc666_importUseDecls(jule::Ptr<_215dd8244_symbolBuilder>);
inline void _215ddc8db_appendNode(_215dd8244_symbolBuilder*, _215d76e4c_Node*);
inline void _215ddcab7_appendNodes(_215dd8244_symbolBuilder*);
inline void _215ddcd3c_pushDirectivePass(_215dd8244_symbolBuilder*, jule::Ptr<_215d77348_Directive>*);
inline void _215ddd018_appendTopDirectives(_215dd8244_symbolBuilder*);
inline void _215ddd1e4_build(jule::Ptr<_215dd8244_symbolBuilder>);
struct _215dd8244_symbolBuilder {
	jule::Ptr<_215dd8244_symbolBuilder> _field_owner;
	jule::Trait<_215e174b5_Importer> _field_importer;
	jule::Slice<_22dbec89d_Log> _field_errors;
	jule::Ptr<_215d761c1_Ast> _field_ast;
	jule::Ptr<_215e89647_SymbolTable> _field_table;
	

	_215dd8244_symbolBuilder(void) = default;


};
inline jule::Str _215dde118_Str(_215dddc1c_Trait*);
inline jule::Bool _215dde426_Equal(jule::Ptr<_215dddc1c_Trait>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215dde789_IsBuiltin(_215dddc1c_Trait*);
inline jule::Ptr<_215dcd24a_Fn> _215ddea97_FindMethod(_215dddc1c_Trait*, jule::Str);
struct _215dddc1c_Trait {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_215dcd24a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _field_Implemented;
	

	_215dddc1c_Trait(void) = default;


};
inline jule::Bool _215de0757_AutoExpr(_215de036c_EnumItem*);
struct _215de036c_EnumItem {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215e904e9_Value> _field_Value;
	

	_215de036c_EnumItem(void) = default;

	inline bool operator==(_215de036c_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_215de036c_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _215de11c5_Str(_215de0d62_Enum*);
inline jule::Bool _215de14d3_Equal(jule::Ptr<_215de0d62_Enum>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Ptr<_215de036c_EnumItem> _215de1923_FindItem(_215de0d62_Enum*, jule::Str);
struct _215de0d62_Enum {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_215de036c_EnumItem>> _field_Items;
	

	_215de0d62_Enum(void) = default;


};
struct _215de1d96_TypeEnumItem {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	

	_215de1d96_TypeEnumItem(void) = default;

	inline bool operator==(_215de1d96_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215de1d96_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _215de278c_Str(_215de245c_TypeEnum*);
inline jule::Bool _215de2a9a_Equal(jule::Ptr<_215de245c_TypeEnum>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Ptr<_215de1d96_TypeEnumItem> _215de2e96_FindItem(_215de245c_TypeEnum*, jule::Str);
struct _215de245c_TypeEnum {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>> _field_Items;
	

	_215de245c_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_215e2327e_Sema>*,jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*)> _215de4dbb_readyFn(jule::Ptr<_215de498c_constraintChecker>);
inline jule::Bool _215de5130_readyFi(jule::Ptr<_215de498c_constraintChecker>);
inline jule::Bool _215de5394_readySi(jule::Ptr<_215de498c_constraintChecker>);
inline jule::Bool _215de5608_ready(jule::Ptr<_215de498c_constraintChecker>);
inline jule::Bool _215de586c_check(jule::Ptr<_215de498c_constraintChecker>);
struct _215de498c_constraintChecker {
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_215eb8bc6_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _field_genericsA;
	jule::Ptr<_215dcea10_FnIns> _field_fi;
	jule::Ptr<_215dc71ab_StructIns> _field_si;
	jule::Ptr<_22e0aa1de_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_215de498c_constraintChecker(void) = default;


};
inline jule::Bool _215de6cbe_IsTraitImpl(_215de68c3_Impl*);
inline jule::Bool _215de7033_IsStructImpl(_215de68c3_Impl*);
struct _215de68c3_Impl {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Base;
	jule::Ptr<_215daa5e0_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_215dcd24a_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_Statics;
	

	_215de68c3_Impl(void) = default;


};
struct _215deb92d_Scope {
	jule::Ptr<_215deb92d_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_215deb92d_Scope(void) = default;


};
struct _215debd29_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	

	_215debd29_If(void) = default;

	inline bool operator==(_215debd29_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215debd29_If _other) { return !this->operator==(_other); }


};
struct _215dec115_Else {
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	

	_215dec115_Else(void) = default;

	inline bool operator==(_215dec115_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215dec115_Else _other) { return !this->operator==(_other); }


};
struct _215dec489_Conditional {
	jule::Slice<jule::Ptr<_215debd29_If>> _field_Elifs;
	jule::Ptr<_215dec115_Else> _field_Default;
	

	_215dec489_Conditional(void) = default;


};
struct _215dec775_InfIter {
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	

	_215dec775_InfIter(void) = default;

	inline bool operator==(_215dec775_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215dec775_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _215ded08e_IsWhileNext(_215decbe8_WhileIter*);
struct _215decbe8_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	

	_215decbe8_WhileIter(void) = default;

	inline bool operator==(_215decbe8_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_215decbe8_WhileIter _other) { return !this->operator==(_other); }


};
struct _215ded5cd_RangeIter {
	jule::Ptr<_215e8e471_Data> _field_Expr;
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	jule::Ptr<_215e41aa5_Var> _field_KeyA;
	jule::Ptr<_215e41aa5_Var> _field_KeyB;
	

	_215ded5cd_RangeIter(void) = default;

	inline bool operator==(_215ded5cd_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_215ded5cd_RangeIter _other) { return !this->operator==(_other); }


};
struct _215ded9c9_ContSt {
	jule::Uintptr _field_It = 0;
	

	_215ded9c9_ContSt(void) = default;

	inline bool operator==(_215ded9c9_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_215ded9c9_ContSt _other) { return !this->operator==(_other); }


};
struct _215dedd81_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_215dedd81_BreakSt(void) = default;

	inline bool operator==(_215dedd81_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_215dedd81_BreakSt _other) { return !this->operator==(_other); }


};
struct _215dee16c_Label {
	jule::Str _field_Ident;
	

	_215dee16c_Label(void) = default;

	inline bool operator==(_215dee16c_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215dee16c_Label _other) { return !this->operator==(_other); }


};
struct _215dee458_GotoSt {
	jule::Str _field_Ident;
	

	_215dee458_GotoSt(void) = default;

	inline bool operator==(_215dee458_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_215dee458_GotoSt _other) { return !this->operator==(_other); }


};
struct _215dee810_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_215dee810_Postfix(void) = default;

	inline bool operator==(_215dee810_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_215dee810_Postfix _other) { return !this->operator==(_other); }


};
struct _215deec83_Assign {
	jule::Ptr<_215dc76d9_OperandExprModel> _field_L;
	jule::Ptr<_215dc76d9_OperandExprModel> _field_R;
	jule::Ptr<_22e0aa1de_Token> _field_Op;
	

	_215deec83_Assign(void) = default;

	inline bool operator==(_215deec83_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_215deec83_Assign _other) { return !this->operator==(_other); }


};
struct _215e0013a_MultiAssign {
	jule::Slice<jule::Ptr<_215e8e471_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_215e0013a_MultiAssign(void) = default;


};
inline jule::Bool _215e00b85_IsGenericTypeMatch(_215e00679_Match*);
struct _215e00679_Match {
	jule::Ptr<_215e8e471_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_215e011c4_Case>> _field_Cases;
	jule::Ptr<_215e011c4_Case> _field_Default;
	

	_215e00679_Match(void) = default;


};
inline jule::Bool _215e0148d_isDefault(_215e011c4_Case*);
struct _215e011c4_Case {
	jule::Ptr<_215e00679_Match> _field_Owner;
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_215e8e471_Data>> _field_Exprs;
	jule::Ptr<_215e011c4_Case> _field_Next;
	

	_215e011c4_Case(void) = default;


};
struct _215e01779_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_215e01779_FallSt(void) = default;

	inline bool operator==(_215e01779_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_215e01779_FallSt _other) { return !this->operator==(_other); }


};
struct _215e01aed_RetSt {
	jule::Ptr<_215dcea10_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_215e01aed_RetSt(void) = default;

	inline bool operator==(_215e01aed_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_215e01aed_RetSt _other) { return !this->operator==(_other); }


};
struct _215e02208_scopeLabel {
	jule::Ptr<_22e0aa1de_Token> _field_token;
	jule::Ptr<_215dee16c_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_215e03490_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_215e02208_scopeLabel(void) = default;

	inline bool operator==(_215e02208_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_215e02208_scopeLabel _other) { return !this->operator==(_other); }


};
struct _215e0267b_scopeGoto {
	jule::Ptr<_215db8147_GotoSt> _field_gt;
	jule::Ptr<_215e03490_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_215e0267b_scopeGoto(void) = default;

	inline bool operator==(_215e0267b_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_215e0267b_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_215e1a133_ImportInfo> _215e03924_FindPackage(_215e03490_scopeChecker*, jule::Str);
inline jule::Ptr<_215e1a133_ImportInfo> _215e03c32_SelectPackage(_215e03490_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>);
inline jule::Ptr<_215e41aa5_Var> _215e040d9_FindVar(_215e03490_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e04491_FindTypeAlias(_215e03490_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6cd2_Struct> _215e04848_FindStruct(_215e03490_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_215dcd24a_Fn> _215e04c00_FindFn(_215e03490_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_215dddc1c_Trait> _215e0500d_FindTrait(_215e03490_scopeChecker*, jule::Str);
inline jule::Ptr<_215de0d62_Enum> _215e0531b_FindEnum(_215e03490_scopeChecker*, jule::Str);
inline jule::Ptr<_215de245c_TypeEnum> _215e05629_FindTypeEnum(_215e03490_scopeChecker*, jule::Str);
inline jule::Bool _215e05959_isUnsafe(jule::Ptr<_215e03490_scopeChecker>);
inline jule::Bool _215e05bbd_isRoot(_215e03490_scopeChecker*);
inline void _215e05d99_stop(_215e03490_scopeChecker*);
inline jule::Bool _215e0610d_stopped(_215e03490_scopeChecker*);
inline jule::Bool _215e06372_isDeferred(jule::Ptr<_215e03490_scopeChecker>);
inline jule::Ptr<_215e03490_scopeChecker> _215e065d6_getRoot(jule::Ptr<_215e03490_scopeChecker>);
inline jule::Ptr<_215e03490_scopeChecker> _215e0684a_getHardRoot(jule::Ptr<_215e03490_scopeChecker>);
inline jule::Ptr<_215dee16c_Label> _215e06b58_findLabel(_215e03490_scopeChecker*, jule::Str);
inline jule::Ptr<_215e02208_scopeLabel> _215e06e66_findLabelScope(jule::Ptr<_215e03490_scopeChecker>, jule::Str);
inline jule::Ptr<_215e02208_scopeLabel> _215e07274_findLabelAll(_215e03490_scopeChecker*, jule::Str);
inline jule::Bool _215e0762b_isDuplicatedIdent(_215e03490_scopeChecker*, jule::Uintptr, jule::Str);
inline void _215e078a1_checkVarDecl(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dbd04d_VarDecl>);
inline void _215e07b26_checkTypeAliasDecl(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc18ae_TypeAliasDecl>);
inline jule::Ptr<_215deb92d_Scope> _215e07d8a_getChild(_215e03490_scopeChecker*);
inline void _215e08253_checkChildSsc(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dba578_ScopeTree>*, jule::Ptr<_215deb92d_Scope>*, jule::Ptr<_215e03490_scopeChecker>*);
inline jule::Ptr<_215deb92d_Scope> _215e0860a_checkChildSc(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dba578_ScopeTree>*, jule::Ptr<_215e03490_scopeChecker>*);
inline jule::Ptr<_215deb92d_Scope> _215e08918_checkChild(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dba578_ScopeTree>*);
inline void _215e08b8d_checkAnonScope(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dba578_ScopeTree>);
inline void _215e08eac_processErrorCall(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel>*, jule::Ptr<_22e0aa1de_Token>);
inline void _215e09232_checkExpr(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215daeb11_Expr>);
inline jule::Ptr<_215debd29_If> _215e09540_checkIf(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc08ad_If>);
inline jule::Ptr<_215dec115_Else> _215e0984d_checkElse(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc0c65_Else>);
inline void _215e09ac3_checkConditional(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc11d8_Conditional>);
inline void _215e0a035_checkIterScopeSsc(jule::Ptr<_215e03490_scopeChecker>, jule::Uintptr, jule::Ptr<_215dba578_ScopeTree>, jule::Ptr<_215deb92d_Scope>*, jule::Ptr<_215e03490_scopeChecker>);
inline jule::Ptr<_215deb92d_Scope> _215e0a486_checkIterScopeSc(jule::Ptr<_215e03490_scopeChecker>, jule::Uintptr, jule::Ptr<_215dba578_ScopeTree>, jule::Ptr<_215e03490_scopeChecker>);
inline jule::Ptr<_215deb92d_Scope> _215e0a83d_checkIterScope(jule::Ptr<_215e03490_scopeChecker>, jule::Uintptr, jule::Ptr<_215dba578_ScopeTree>*);
inline void _215e0aab3_checkInfIter(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dbda65_Iter>*);
inline void _215e0ad38_checkWhileIter(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dbda65_Iter>*);
inline void _215e0b0ad_checkRangeIter(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dbda65_Iter>*);
inline void _215e0b333_checkIter(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dbda65_Iter>);
inline jule::Bool _215e0b641_checkValidContLabel(jule::Ptr<_215e03490_scopeChecker>, jule::Uintptr);
inline jule::Bool _215e0b94e_checkValidBreakLabel(jule::Ptr<_215e03490_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_215ded9c9_ContSt> _215e0bc5c_checkContValidScope(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc043a_ContSt>);
inline void _215e0bed2_checkCont(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc043a_ContSt>);
inline void _215e0c257_checkLabel(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db7c90_LabelSt>);
inline void _215e0c4cc_pushGoto(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db8147_GotoSt>);
inline void _215e0c752_checkPostfix(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db907c_AssignSt>);
inline jule::Bool _215e0ca60_isNewAssignIdent(_215e03490_scopeChecker*, jule::Str);
inline jule::Bool _215e0ceb1_checkStructureAssignOp(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_215db907c_AssignSt>*, jule::Ptr<_215e8e471_Data>*);
inline void _215e0d236_checkSingleAssign(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db907c_AssignSt>*);
inline void _215e0d764_processEndPartOfMultiAssign(_215e03490_scopeChecker*, jule::Ptr<_215e0013a_MultiAssign>*, jule::Ptr<_215db907c_AssignSt>*, jule::Ptr<_215db8a3d_AssignLeft>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline void _215e0d9ea_checkMultiAssign(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db907c_AssignSt>*);
inline void _215e0dc70_checkAssignSt(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db907c_AssignSt>);
inline jule::Ptr<_215deb92d_Scope> _215e0e127_checkCaseScope(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215e011c4_Case>*, jule::Ptr<_215dba578_ScopeTree>*);
inline jule::Ptr<_215e011c4_Case> _215e0e622_checkCase(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215e00679_Match>, jule::I64, jule::Ptr<_215dc1d32_Case>, jule::Ptr<_215e8e471_Data>);
inline void _215e0e9da_checkCases(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc2508_MatchCase>*, jule::Ptr<_215e00679_Match>, jule::Ptr<_215e8e471_Data>);
inline jule::Ptr<_215e011c4_Case> _215e0ed92_checkDefault(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215e00679_Match>, jule::Ptr<_215dc0c65_Else>);
inline void _215e10117_checkComptimePanic(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215deb92d_Scope>*);
inline void _215e10436_pushTypeMatch(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215e00679_Match>, jule::Ptr<_215dc2508_MatchCase>*);
inline void _215e106ab_checkTypeMatch(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc2508_MatchCase>*);
inline void _215e10931_checkCommonMatch(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc2508_MatchCase>*);
inline void _215e10ba6_checkMatch(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc2508_MatchCase>);
inline void _215e10e2b_checkFall(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db8433_FallSt>);
inline jule::Ptr<_215dedd81_BreakSt> _215e11239_checkBreakWithLabel(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc0083_BreakSt>);
inline jule::Ptr<_215dedd81_BreakSt> _215e11547_checkPlainBreak(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc0083_BreakSt>);
inline void _215e117bc_checkBreak(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dc0083_BreakSt>);
inline void _215e11a42_checkRet(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dbd405_RetSt>);
inline void _215e11cb7_checkUseExpr(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215db04a2_UseExpr>);
inline void _215e1203c_checkNode(jule::Ptr<_215e03490_scopeChecker>, jule::Any*);
inline void _215e12218_checkResult(jule::Ptr<_215e03490_scopeChecker>);
inline void _215e123e4_checkTree(jule::Ptr<_215e03490_scopeChecker>);
inline void _215e12713_checkGoto(_215e03490_scopeChecker*, jule::Ptr<_215e0267b_scopeGoto>*, jule::Ptr<_215e02208_scopeLabel>*);
inline void _215e128de_checkGotos(_215e03490_scopeChecker*);
inline void _215e12aba_checkLabels(_215e03490_scopeChecker*);
inline void _215e12c96_checkVars(_215e03490_scopeChecker*);
inline void _215e12e72_checkAliases(_215e03490_scopeChecker*);
inline void _215e13291_check(jule::Ptr<_215e03490_scopeChecker>, jule::Ptr<_215dba578_ScopeTree>*, jule::Ptr<_215deb92d_Scope>*);
inline jule::Ptr<_215e03490_scopeChecker> _215e13505_newChildChecker(jule::Ptr<_215e03490_scopeChecker>);
struct _215e03490_scopeChecker {
	jule::Ptr<_22e0aa1de_Token> _field_calledFrom;
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Ptr<_215dcea10_FnIns> _field_owner;
	jule::Ptr<_215e03490_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_215e89647_SymbolTable> _field_table;
	jule::Ptr<_215deb92d_Scope> _field_scope;
	jule::Ptr<_215dba578_ScopeTree> _field_tree;
	jule::Ptr<_215dcea10_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_215e02208_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_215e0267b_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_215e03490_scopeChecker(void) = default;

	inline bool operator==(_215e03490_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_215e03490_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _215e144e5_checkCdef(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e1476a_checkTypedef(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e149e0_checkDerive(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e14c65_checkNamespace(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e14eda_checkDeprecated(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e15260_checkTest(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e154d5_checkDirective(_215e140a5_directiveChecker*, jule::Ptr<_215d77348_Directive>*);
inline void _215e156b1_check(_215e140a5_directiveChecker*);
struct _215e140a5_directiveChecker {
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_215d77348_Directive>>> _field_d;
	jule::Any _field_o;
	

	_215e140a5_directiveChecker(void) = default;

	inline bool operator==(_215e140a5_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_215e140a5_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_215e1a133_ImportInfo> _215e1a650_FindPackage(_215e1a133_ImportInfo*, jule::Str);
inline jule::Ptr<_215e1a133_ImportInfo> _215e1a95d_SelectPackage(_215e1a133_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>);
inline jule::Ptr<_215e41aa5_Var> _215e1ad15_FindVar(_215e1a133_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e1b1bc_FindTypeAlias(_215e1a133_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6cd2_Struct> _215e1b574_FindStruct(_215e1a133_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_215dcd24a_Fn> _215e1b92b_FindFn(_215e1a133_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_215dddc1c_Trait> _215e1bc39_FindTrait(_215e1a133_ImportInfo*, jule::Str);
inline jule::Ptr<_215de0d62_Enum> _215e1c047_FindEnum(_215e1a133_ImportInfo*, jule::Str);
inline jule::Ptr<_215de245c_TypeEnum> _215e1c355_FindTypeEnum(_215e1a133_ImportInfo*, jule::Str);
inline jule::Bool _215e1c6eb_isLookupable(_215e1a133_ImportInfo*, jule::Str);
inline jule::Bool _215e1ca09_existIdent(_215e1a133_ImportInfo*, jule::Str);
inline jule::Bool _215e1cc90_isAccessibleViaSelection(_215e1a133_ImportInfo*);
struct _215e1a133_ImportInfo {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_Selected;
	jule::Ptr<_215e1d08c_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_215e1a133_ImportInfo(void) = default;


};
inline jule::Ptr<_215e1a133_ImportInfo> _215e1d565_FindPackage(_215e1d08c_Package*, jule::Str);
inline jule::Ptr<_215e1a133_ImportInfo> _215e1d873_SelectPackage(_215e1d08c_Package*, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>);
inline jule::Ptr<_215e41aa5_Var> _215e1dc2a_FindVar(_215e1d08c_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e1e0d2_FindTypeAlias(_215e1d08c_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6cd2_Struct> _215e1e489_FindStruct(_215e1d08c_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_215dcd24a_Fn> _215e1e841_FindFn(_215e1d08c_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_215dddc1c_Trait> _215e1eb4e_FindTrait(_215e1d08c_Package*, jule::Str);
inline jule::Ptr<_215de0d62_Enum> _215e1ee5c_FindEnum(_215e1d08c_Package*, jule::Str);
inline jule::Ptr<_215de245c_TypeEnum> _215e2026a_FindTypeEnum(_215e1d08c_Package*, jule::Str);
struct _215e1d08c_Package {
	jule::Slice<jule::Ptr<_215e89647_SymbolTable>> _field_Files;
	

	_215e1d08c_Package(void) = default;


};
inline jule::Ptr<_215e1a133_ImportInfo> _215e2379b_FindPackage(_215e2327e_Sema*, jule::Str);
inline jule::Ptr<_215e1a133_ImportInfo> _215e23aa9_SelectPackage(_215e2327e_Sema*, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>);
inline jule::Ptr<_215e41aa5_Var> _215e23e61_FindVar(_215e2327e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e24318_FindTypeAlias(_215e2327e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6cd2_Struct> _215e246c0_FindStruct(_215e2327e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_215dcd24a_Fn> _215e24a77_FindFn(_215e2327e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_215dddc1c_Trait> _215e24d85_FindTrait(_215e2327e_Sema*, jule::Str);
inline jule::Ptr<_215de0d62_Enum> _215e25193_FindEnum(_215e2327e_Sema*, jule::Str);
inline jule::Ptr<_215de245c_TypeEnum> _215e254a1_FindTypeEnum(_215e2327e_Sema*, jule::Str);
inline jule::Bool _215e25803_isFlag(_215e2327e_Sema*, jule::I64);
inline void _215e25a78_setCurrentFile(_215e2327e_Sema*, jule::Ptr<_215e89647_SymbolTable>);
inline void _215e25e41_pushErr(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _215e26260_pushSugggestion(_215e2327e_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215e26617_isAccessibleDefine(_215e2327e_Sema*, jule::Bool, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215e26a68_isDuplicatedIdent(_215e2327e_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _215e26d87_checkDirectives(jule::Ptr<_215e2327e_Sema>, jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Any);
inline jule::Bool _215e272d8_checkGenericQuantity(_215e2327e_Sema*, jule::I64, jule::I64, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215e276b2_isDuplicatedImportSelection(_215e2327e_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _215e27a7a_getImportDef(_215e2327e_Sema*, jule::Str, jule::Ptr<_215e1a133_ImportInfo>*);
inline jule::Bool _1ebd991a8_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215e41aa5_Var>*);
inline jule::Bool _1ebd9d102_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215eb9710_TypeAlias>*);
inline jule::Bool _1ebda1db4_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Bool _1ebda602d_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215dddc1c_Trait>*);
inline jule::Bool _1ebda9ce0_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215de0d62_Enum>*);
inline jule::Bool _1ebdadbb2_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215de245c_TypeEnum>*);
inline jule::Bool _1ebdb2a84_checkImportSelection(_215e2327e_Sema*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215dcd24a_Fn>*);
inline jule::Bool _215e28262_checkImportSelectedSelections(_215e2327e_Sema*, jule::Ptr<_215e1a133_ImportInfo>*);
inline jule::Bool _1ebdb6ec8_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215e41aa5_Var>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _1ebdba52b_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _1ebdbab03_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215dc6cd2_Struct>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _1ebdc0e49_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215dcd24a_Fn>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _1ebdc1532_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215dddc1c_Trait>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _1ebdc41e4_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215de0d62_Enum>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _1ebdc6da6_checkImportsAllSelectionsFromCollection(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215de245c_TypeEnum>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _215e2898d_checkImportAllSelections(_215e2327e_Sema*, jule::Ptr<_215e1a133_ImportInfo>*);
inline jule::Bool _215e28cac_checkImportSelections(_215e2327e_Sema*, jule::Ptr<_215e1a133_ImportInfo>*);
inline jule::Bool _215e290ba_isUseAliasDuplication(_215e2327e_Sema*, jule::Ptr<_215e1a133_ImportInfo>*);
inline jule::Bool _215e293c8_checkImport(_215e2327e_Sema*, jule::Ptr<_215e1a133_ImportInfo>*);
inline void _215e295a4_checkImports(_215e2327e_Sema*);
inline void _215e29780_implFileImpls(jule::Ptr<_215e2327e_Sema>);
inline void _215e2995b_implImpls(jule::Ptr<_215e2327e_Sema>);
inline void _215e29b37_checkEnums(jule::Ptr<_215e2327e_Sema>);
inline _215ec8c6e_typeChecker _215e2a088_typeChecker(jule::Ptr<_215e2327e_Sema>, jule::Trait<_215ed6375_Lookup>, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>, jule::Ptr<_215ec7d8e_referencer>);
inline jule::Ptr<_215eba403_TypeKind> _215e2a583_buildTypeWithRefers(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215daa5e0_TypeDecl>*, jule::Trait<_215ed6375_Lookup>, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>, jule::Ptr<_215ec7d8e_referencer>);
inline jule::Bool _215e2aa7d_checkTypeWithRefers(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215ebe7d1_TypeSymbol>*, jule::Trait<_215ed6375_Lookup>, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>, jule::Ptr<_215ec7d8e_referencer>);
inline jule::Ptr<_215de498c_constraintChecker> _215e2ace2_constraintChecker(jule::Ptr<_215e2327e_Sema>);
inline jule::Bool _215e2b199_checkType(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215ebe7d1_TypeSymbol>*, jule::Trait<_215ed6375_Lookup>);
inline jule::Ptr<_215eba403_TypeKind> _215e2b5ea_buildTypeWithGenerics(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215daa5e0_TypeDecl>*, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>, jule::Ptr<_215dd2969_ReferenceStack>);
inline jule::Ptr<_215eba403_TypeKind> _215e2b908_buildType(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215daa5e0_TypeDecl>*);
inline jule::Ptr<_215eba403_TypeKind> _215e2bc16_selectType(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215daa5e0_TypeDecl>*);
inline jule::Ptr<_215e90ede_Eval> _215e2c167_evalpd(jule::Ptr<_215e2327e_Sema>, jule::Trait<_215ed6375_Lookup>, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e41aa5_Var>);
inline jule::Ptr<_215e90ede_Eval> _215e2c51e_evalp(jule::Ptr<_215e2327e_Sema>, jule::Trait<_215ed6375_Lookup>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Ptr<_215e90ede_Eval> _215e2c82c_eval(jule::Ptr<_215e2327e_Sema>, jule::Trait<_215ed6375_Lookup>);
inline jule::Bool _215e2cd27_checkAssignType(jule::Ptr<_215e2327e_Sema>, jule::Bool, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215e2d278_checkTypeCompatibility(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Ptr<_215eba403_TypeKind> _215e2d6eb_buildNonGenericTypeKind(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215daa5e0_TypeDecl>*, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>*, jule::Slice<jule::Ptr<_215eba403_TypeKind>>*);
inline jule::Bool _215e2dad6_buildFnNonGenericTypeKinds(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcea10_FnIns>*, jule::Slice<jule::Ptr<_215eba403_TypeKind>>*);
inline jule::Ptr<_215dcea10_FnIns> _215e2de05_getTraitCheckFnKind(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcd24a_Fn>*);
inline jule::Bool _215e2e356_checkConstraintsFn(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Bool _215e2e7a7_checkConstraintsStruct(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215dc71ab_StructIns>);
inline jule::Bool _215e2eb5e_fnEnvironment(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcea10_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_215e2327e_Sema>*,jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*)>);
inline void _215e2edd4_checkFnParamKind(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcdb41_ParamIns>*);
inline jule::Bool _215e301e2_reloadFnInsTypes(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcea10_FnIns>);
inline jule::Bool _215e30665_checkRefValidityForInitExpr(jule::Ptr<_215e2327e_Sema>, jule::Bool, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _215e30c3c_checkValidityForInitExpr(jule::Ptr<_215e2327e_Sema>, jule::Bool, jule::Bool, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _215e31105_checkTypeAliasDeclKind(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215eb9710_TypeAlias>*, jule::Trait<_215ed6375_Lookup>);
inline void _215e31424_checkTypeAliasDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215eb9710_TypeAlias>*, jule::Trait<_215ed6375_Lookup>);
inline void _215e31699_checkTypeAliasDeclDup(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215eb9710_TypeAlias>*);
inline jule::Bool _215e3190d_checkTypeAliasDecls(jule::Ptr<_215e2327e_Sema>);
inline void _1ebe668c4_checkEnumItemsDup(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215de036c_EnumItem>>);
inline void _1ebe71bba_checkEnumItemsDup(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>>);
inline void _215e31e08_checkEnumItemsStr(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de0d62_Enum>*);
inline void _1ebe4bc2d_checkEnumItemInt(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215de0d62_Enum>*, jule::Ptr<_215ec0150_Prim>*, jule::Ptr<_215de036c_EnumItem>*, jule::U64*);
inline void _1ebe59b92_checkEnumItemInt(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215de0d62_Enum>*, jule::Ptr<_215ec0150_Prim>*, jule::Ptr<_215de036c_EnumItem>*, jule::I64*);
inline void _1ebe4829b_checkEnumItemsInt1(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215ec0150_Prim>*, jule::Ptr<_215de0d62_Enum>*);
inline void _1ebe53e55_checkEnumItemsInt1(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215ec0150_Prim>*, jule::Ptr<_215de0d62_Enum>*);
inline void _215e329a8_checkEnumItemsInt(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de0d62_Enum>*);
inline void _215e32c2d_checkEnumDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de0d62_Enum>*);
inline void _215e32ea3_checkTypeEnumDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de245c_TypeEnum>*);
inline jule::Bool _215e33217_checkEnumDecls(jule::Ptr<_215e2327e_Sema>);
inline jule::Bool _215e3347b_checkTypeEnumDecls(jule::Ptr<_215e2327e_Sema>);
inline jule::Bool _215e33789_checkDeclGenerics(_215e2327e_Sema*, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>*);
inline jule::Bool _215e33a97_checkFnDeclParamsDup(_215e2327e_Sema*, jule::Ptr<_215dcd24a_Fn>*);
inline jule::Bool _215e33da5_checkFnDeclResultDup(_215e2327e_Sema*, jule::Ptr<_215dcd24a_Fn>*);
inline void _215e3412a_checkFnDeclPrototype(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcd24a_Fn>*);
inline void _215e343a0_checkTraitDeclMethod(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcd24a_Fn>*);
inline void _215e34625_checkTraitDeclMethods(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dddc1c_Trait>*);
inline void _215e3489a_checkTraitDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dddc1c_Trait>*);
inline jule::Bool _215e34b0e_checkTraitDecls(jule::Ptr<_215e2327e_Sema>);
inline jule::Bool _215e34eb6_checkTraitImplMethods(_215e2327e_Sema*, jule::Ptr<_215dddc1c_Trait>*, jule::Ptr<_215de68c3_Impl>*);
inline jule::Bool _215e3536d_implToStruct(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*, jule::Ptr<_215de68c3_Impl>*);
inline void _215e355e3_implTrait(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de68c3_Impl>*);
inline void _215e35868_implStruct(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de68c3_Impl>*);
inline void _215e35add_implImpl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215de68c3_Impl>*);
inline void _215e35e0c_checkVarDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215e41aa5_Var>*, jule::Trait<_215ed6375_Lookup>);
inline void _215e36182_checkGlobalVarDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215e41aa5_Var>*);
inline jule::Bool _215e363e6_checkGlobalDecls(jule::Ptr<_215e2327e_Sema>);
inline jule::Bool _215e3679d_checkStructTraitImpl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*, jule::Ptr<_215dddc1c_Trait>*);
inline jule::Bool _215e36aab_checkStructImpls(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Bool _215e36db9_checkStructFields(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*);
inline void _215e3713e_checkStructDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Bool _215e373a3_checkStructDecls(jule::Ptr<_215e2327e_Sema>);
inline void _215e37628_checkFnDecl(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcd24a_Fn>*);
inline jule::Bool _215e3788c_checkFnDecls(jule::Ptr<_215e2327e_Sema>);
inline void _215e37c55_pushCycleError(_215e2327e_Sema*, jule::Ptr<_215dc6cd2_Struct>*, jule::Ptr<_215dc6cd2_Struct>*, jule::Str*);
inline jule::Bool _215e381a6_checkCrossCycle(_215e2327e_Sema*, jule::Ptr<_215dc6cd2_Struct>*, jule::Ptr<_215dc6cd2_Struct>*, jule::Str*);
inline jule::Bool _215e38629_checkStructDeriveIllegalCycles(_215e2327e_Sema*, jule::Str, jule::Ptr<_215dc6cd2_Struct>*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e3896a_checkStructInsDeriveClone(_215e2327e_Sema*, jule::Ptr<_215dc71ab_StructIns>);
inline void _215e38b57_checkPackageDecls(jule::Ptr<_215e2327e_Sema>);
inline void _215e38e98_checkDataForTypeInference(_215e2327e_Sema*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline void _215e3922e_checkVar(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215e41aa5_Var>*);
inline void _215e3954d_checkTypeVar(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215e41aa5_Var>*, jule::Trait<_215ed6375_Lookup>);
inline void _215e39729_checkGlobalTypes(jule::Ptr<_215e2327e_Sema>);
inline jule::Ptr<_215dcea10_FnIns> _215e39ad1_readyToCheckFn(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_215dcd24a_Fn>*);
inline void _215e39e00_checkTypeMethod(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_215dcd24a_Fn>*);
inline jule::Ptr<_215dcea10_FnIns> _215e3a351_checkStructInsOp(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_215dcd24a_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_215dcd24a_Fn>)>);
inline jule::Bool _215e3a708_checkStructEnv(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215e3aab0_precheckStructIns(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_22e0aa1de_Token>);
inline void _215e3ad35_checkStructIns(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _215e3b0aa_checkTypeStruct(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*);
inline void _215e3b286_checkStructTypes(jule::Ptr<_215e2327e_Sema>);
inline void _215e3b52d_checkStructInsOperators(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc71ab_StructIns>);
inline void _215e3b7b4_precheckStructType(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dc6cd2_Struct>*);
inline void _215e3b990_precheckStructTypes(jule::Ptr<_215e2327e_Sema>);
inline void _215e3bc15_checkRets(_215e2327e_Sema*, jule::Ptr<_215dcea10_FnIns>*);
inline void _215e3c034_checkFnInsSc(_215e2327e_Sema*, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_215e03490_scopeChecker>*);
inline void _215e3c353_checkFnInsCaller(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_22e0aa1de_Token>);
inline void _215e3c5c8_checkFnIns(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcea10_FnIns>*);
inline void _215e3c84d_checkTypeFn(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcd24a_Fn>*);
inline void _215e3cac3_checkTestFn(_215e2327e_Sema*, jule::Ptr<_215dcea10_FnIns>*);
inline void _215e3cd48_precheckTypeFn(jule::Ptr<_215e2327e_Sema>, jule::Ptr<_215dcd24a_Fn>*);
inline void _215e3d024_precheckFnTypes(jule::Ptr<_215e2327e_Sema>);
inline void _215e3d200_checkFnTypes(jule::Ptr<_215e2327e_Sema>);
inline void _215e3d3cb_checkPackageTypes(jule::Ptr<_215e2327e_Sema>);
inline void _215e3d5a7_setFileSemaFields(jule::Ptr<_215e2327e_Sema>);
inline void _215e3d783_setSemaFields(jule::Ptr<_215e2327e_Sema>);
inline void _215e3da08_check(jule::Ptr<_215e2327e_Sema>, jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*);
struct _215e2327e_Sema {
	jule::Slice<_22dbec89d_Log> _field_errors;
	jule::Slice<jule::Ptr<_215e89647_SymbolTable>> _field_files;
	jule::Ptr<_215e89647_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_215e2327e_Sema(void) = default;


};
inline _215e3ddb0_missingRetChecker static__215e3e278_new(void);
inline jule::Bool _215e3e553_checkConditional(_215e3ddb0_missingRetChecker*, jule::Ptr<_215dec489_Conditional>);
inline jule::Bool _215e3e861_checkMatch(_215e3ddb0_missingRetChecker*, jule::Ptr<_215e00679_Match>);
inline jule::Bool _215e3eb6e_checkInfIter(_215e3ddb0_missingRetChecker*, jule::Ptr<_215dec775_InfIter>);
inline jule::Bool _215e3ee7c_checkScope(_215e3ddb0_missingRetChecker*, jule::Ptr<_215deb92d_Scope>);
inline jule::Bool _215e4028a_check(_215e3ddb0_missingRetChecker*, jule::Ptr<_215deb92d_Scope>);
struct _215e3ddb0_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_215e3ddb0_missingRetChecker(void) = default;


};
struct _215e40a60_IterRelation {
	jule::Ptr<_215e41aa5_Var> _field_Range;
	

	_215e40a60_IterRelation(void) = default;

	inline bool operator==(_215e40a60_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_215e40a60_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _215e41e6d_IsInitialized(_215e41aa5_Var*);
inline jule::Bool _215e421d2_IsTypeInferred(_215e41aa5_Var*);
inline jule::Bool _215e42446_untypedConstant(_215e41aa5_Var*);
struct _215e41aa5_Var {
	jule::Ptr<_215deb92d_Scope> _field_Scope;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	jule::Ptr<_215e904e9_Value> _field_Value;
	jule::Ptr<_215dd2969_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_Directives;
	jule::Ptr<_215e40a60_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_Depends;
	

	_215e41aa5_Var(void) = default;


};
inline jule::Bool static__215e42ec4_Dispose(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e4326b_Str(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e435ac_logical(jule::Ptr<_215dcd24a_Fn>*, jule::Str);
inline jule::Bool static__215e43854_Eq(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e43aeb_Gt(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e43d93_GtEq(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e4413a_Lt(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e443d2_LtEq(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e44723_result(jule::Ptr<_215dcd24a_Fn>*, jule::Str);
inline jule::Bool static__215e449ba_Shl(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e44c62_Shr(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e45009_Add(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e452a1_Sub(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e45548_Div(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e457e0_Mul(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e45a87_Mod(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e45d2e_BitAnd(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e460c6_BitOr(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e4636d_BitXor(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e466ae_unary(jule::Ptr<_215dcd24a_Fn>*, jule::Str);
inline jule::Bool static__215e46956_Neg(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e46bed_Pos(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e46e95_BitNot(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e472d6_assign(jule::Ptr<_215dcd24a_Fn>*, jule::Str);
inline jule::Bool static__215e4757d_AddAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e47825_SubAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e47abc_DivAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e47d64_MulAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e4810b_ModAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e483a3_ShlAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e4864a_ShrAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e488e2_BitOrAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e48b89_BitAndAssign(jule::Ptr<_215dcd24a_Fn>);
inline jule::Bool static__215e48e31_BitXorAssign(jule::Ptr<_215dcd24a_Fn>);
struct _215e42853_FuncPattern {
	

	_215e42853_FuncPattern(void) = default;


};
inline void _215e78757_pushErr(_215e7823a_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215e789bb_checkTrait(_215e7823a_typeCompatibilityChecker*);
inline jule::Bool _215e78c30_checkPtr(_215e7823a_typeCompatibilityChecker*);
inline jule::Bool _215e78e94_checkPrim(_215e7823a_typeCompatibilityChecker*);
inline jule::Bool _215e7934b_typeEnum(_215e7823a_typeCompatibilityChecker*, jule::Ptr<_215de245c_TypeEnum>*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e795b0_checkTypeEnum(_215e7823a_typeCompatibilityChecker*);
inline jule::Bool _215e79824_check(_215e7823a_typeCompatibilityChecker*);
struct _215e7823a_typeCompatibilityChecker {
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Ptr<_215eba403_TypeKind> _field_dest;
	jule::Ptr<_215eba403_TypeKind> _field_src;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	

	_215e7823a_typeCompatibilityChecker(void) = default;

	inline bool operator==(_215e7823a_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_215e7823a_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _215e7a2c5_pushErr(_215e79d63_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215e7a539_checkValidity(_215e79d63_assignTypeChecker*);
inline jule::Bool _215e7a79d_checkConst(_215e79d63_assignTypeChecker*);
inline jule::Bool _215e7aa12_isPrim(_215e79d63_assignTypeChecker*);
inline jule::Bool _215e7ac76_checkCompatibility(_215e79d63_assignTypeChecker*);
inline jule::Bool _215e7aeda_check(_215e79d63_assignTypeChecker*);
struct _215e79d63_assignTypeChecker {
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Ptr<_215eba403_TypeKind> _field_dest;
	jule::Ptr<_215e8e471_Data> _field_d;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	

	_215e79d63_assignTypeChecker(void) = default;

	inline bool operator==(_215e79d63_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_215e79d63_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _2098abbbe_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _2098ab3b6_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _2098ad63d_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _2098b3b0a_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7c22d_annotateConstraintMap(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7c53b_annotateConstraintTup(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7c849_annotateConstraintFn(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7cb79_annotateConstraintIdent(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7ce98_annotateConstraint(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline void _215e7d2b7_pushGeneric(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*, jule::I64);
inline jule::Bool _215e7d5c5_annotatePrim(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7d8d3_annotateArr(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7dbe1_annotateSlc(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7e098_checkMapKey(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7e3a6_annotateMap(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7e6b4_annotateFn(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7e9c2_annotatePtr(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e7ecd0_annotateSptr(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e800dd_annotateStruct(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e803eb_annotateAny(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e80709_annotateKind(_215e7b848_dynamicTypeAnnotation*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215e8096d_annotate(_215e7b848_dynamicTypeAnnotation*);
struct _215e7b848_dynamicTypeAnnotation {
	jule::Ptr<_215e90ede_Eval> _field_e;
	jule::Ptr<_215dcea10_FnIns> _field_f;
	jule::Ptr<_215dcdb41_ParamIns> _field_p;
	jule::Ptr<_215e8e471_Data> _field_a;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	jule::Ptr<_215eba403_TypeKind>* _field_k = nullptr;
	jule::Ptr<_215daa5e0_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _field_ignored;
	

	_215e7b848_dynamicTypeAnnotation(void) = default;


};
inline void _215e81760_pushErrToken(_215e81210_fnCallArgChecker*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _215e81a7e_pushErr(_215e81210_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_215dcdb41_ParamIns>> _215e81ce3_getParams(_215e81210_fnCallArgChecker*);
inline jule::Bool _215e82101_checkCounts(_215e81210_fnCallArgChecker*, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>*);
inline jule::Bool _215e82552_checkArg(_215e81210_fnCallArgChecker*, jule::Ptr<_215dcdb41_ParamIns>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Bool _215e82909_push(_215e81210_fnCallArgChecker*, jule::Ptr<_215dcdb41_ParamIns>*, jule::Ptr<_215daeb11_Expr>);
inline jule::Bool _215e82cb1_pushVariadic(_215e81210_fnCallArgChecker*, jule::Ptr<_215dcdb41_ParamIns>*, jule::I64);
inline jule::Bool _215e830be_checkArgs(_215e81210_fnCallArgChecker*, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>*);
inline jule::Bool _215e83355_checkDynamicTypeAnnotation(_215e81210_fnCallArgChecker*);
inline jule::Bool _215e835ca_check(_215e81210_fnCallArgChecker*);
struct _215e81210_fnCallArgChecker {
	jule::Ptr<_215e90ede_Eval> _field_e;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_args;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	jule::Ptr<_215dcea10_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _field_ignored;
	

	_215e81210_fnCallArgChecker(void) = default;


};
inline void _215e84125_pushErr(_215e83b19_structLitChecker*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _215e84444_pushSugggestion(_215e83b19_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _215e8480c_pushMatch(_215e83b19_structLitChecker*, jule::Ptr<_215dc6ebe_FieldIns>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline void _215e84b2b_checkPair(_215e83b19_structLitChecker*, jule::Ptr<_215db4572_FieldExprPair>*, jule::Slice<jule::Ptr<_215daeb11_Expr>>*);
inline jule::Bool _215e84e39_readyExprs(_215e83b19_structLitChecker*, jule::Slice<jule::Ptr<_215daeb11_Expr>>*);
inline void _215e851ae_check(_215e83b19_structLitChecker*, jule::Slice<jule::Ptr<_215daeb11_Expr>>*);
struct _215e83b19_structLitChecker {
	jule::Ptr<_215e90ede_Eval> _field_e;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	jule::Ptr<_215dc71ab_StructIns> _field_s;
	jule::Slice<jule::Ptr<_215dc7ca0_StructArgExprModel>> _field_args;
	

	_215e83b19_structLitChecker(void) = default;


};
inline jule::Ptr<_215e41aa5_Var> _215e85b93_buildVar(_215e856ed_rangeChecker*, jule::Ptr<_215dbd04d_VarDecl>*);
inline void _215e85d6e_setSizeKey(_215e856ed_rangeChecker*);
inline void _215e86237_checkRangeExprValidity(_215e856ed_rangeChecker*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e41aa5_Var>*, jule::Ptr<_215eba403_TypeKind>*);
inline void _215e86413_checkSlice(_215e856ed_rangeChecker*);
inline void _215e865de_checkArray(_215e856ed_rangeChecker*);
inline void _215e867ba_checkMapKeyA(_215e856ed_rangeChecker*);
inline void _215e86996_checkMapKeyB(_215e856ed_rangeChecker*);
inline void _215e86b72_checkMap(_215e856ed_rangeChecker*);
inline void _215e86d4d_checkStr(_215e856ed_rangeChecker*);
inline jule::Bool _215e870b2_check(_215e856ed_rangeChecker*);
struct _215e856ed_rangeChecker {
	jule::Ptr<_215e03490_scopeChecker> _field_sc;
	jule::Ptr<_215dbebcb_RangeKind> _field_rang;
	jule::Ptr<_215ded5cd_RangeIter> _field_Kind;
	jule::Ptr<_215e8e471_Data> _field_d;
	

	_215e856ed_rangeChecker(void) = default;

	inline bool operator==(_215e856ed_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_215e856ed_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _215e87c2d_prepareTypes(_215e87788_retTypeChecker*);
inline void _215e87ea3_prepareExprs(_215e87788_retTypeChecker*, jule::Ptr<_215daeb11_Expr>*);
inline void _215e8817e_checkExprs(_215e87788_retTypeChecker*);
inline jule::Bool _215e8848c_check(_215e87788_retTypeChecker*, jule::Ptr<_215daeb11_Expr>*);
struct _215e87788_retTypeChecker {
	jule::Ptr<_215e03490_scopeChecker> _field_sc;
	jule::Ptr<_215dcea10_FnIns> _field_f;
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _field_exprs;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_215e87788_retTypeChecker(void) = default;


};
inline jule::Ptr<_215e1a133_ImportInfo> _215e89b64_FindPackage(_215e89647_SymbolTable*, jule::Str);
inline jule::Ptr<_215e1a133_ImportInfo> _215e89e72_SelectPackage(_215e89647_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>);
inline jule::Ptr<_215e41aa5_Var> _215e8a329_FindVar(_215e89647_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e8a6d1_FindTypeAlias(_215e89647_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6cd2_Struct> _215e8aa88_FindStruct(_215e89647_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_215dcd24a_Fn> _215e8ae40_FindFn(_215e89647_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_215dddc1c_Trait> _215e8b24d_FindTrait(_215e89647_SymbolTable*, jule::Str);
inline jule::Ptr<_215de0d62_Enum> _215e8b55b_FindEnum(_215e89647_SymbolTable*, jule::Str);
inline jule::Ptr<_215de245c_TypeEnum> _215e8b869_FindTypeEnum(_215e89647_SymbolTable*, jule::Str);
inline jule::Ptr<_215e41aa5_Var> _215e8bddb_findVar(_215e89647_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e8c33c_findTypeAlias(_215e89647_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _215e8c6e4_defByIdent(_215e89647_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _215e8cb45_isDuplicatedIdent(_215e89647_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _215e89647_SymbolTable {
	jule::Ptr<_22e0b0579_File> _field_File;
	jule::Slice<_215dd3c9a_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_215e1a133_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_215dcd24a_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_215dddc1c_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_215de0d62_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_215de245c_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_215de68c3_Impl>> _field_Impls;
	

	_215e89647_SymbolTable(void) = default;


};
inline jule::Bool _215e8e85b_IsNil(_215e8e471_Data*);
inline jule::Bool _215e8eac0_IsVoid(_215e8e471_Data*);
inline jule::Bool _215e8ed34_IsConst(_215e8e471_Data*);
inline jule::Bool _215e90142_GoodOperand(_215e8e471_Data*, jule::Ptr<_215e8e471_Data>*);
struct _215e8e471_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_21470339b_Const> _field_Constant;
	

	_215e8e471_Data(void) = default;

	inline bool operator==(_215e8e471_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_215e8e471_Data _other) { return !this->operator==(_other); }


};
struct _215e904e9_Value {
	jule::Ptr<_215daeb11_Expr> _field_Expr;
	jule::Ptr<_215e8e471_Data> _field_Data;
	

	_215e904e9_Value(void) = default;

	inline bool operator==(_215e904e9_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_215e904e9_Value _other) { return !this->operator==(_other); }


};
inline void _215e914ea_pushErr(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _215e91819_pushSugggestion(_215e90ede_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _215e919e5_allowBuiltin(_215e90ede_Eval*);
inline void _215e91bc1_disallowBuiltin(_215e90ede_Eval*);
inline jule::Bool _215e91e35_isUnsafe(_215e90ede_Eval*);
inline jule::Bool _215e92199_isGlobal(_215e90ede_Eval*);
inline jule::Bool _215e92474_applyNumericPrefix(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _215e926d8_litNil(_215e90ede_Eval*);
inline jule::Ptr<_215e8e471_Data> _215e929e6_litStr(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e92d04_litBool(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e93112_litRune(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e93420_litFloat(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e9372d_litInt(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e93a3b_litNum(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e93d49_evalLit(_215e90ede_Eval*, jule::Ptr<_215db0b45_LitExpr>);
inline jule::Any _215e94157_findBuiltins(_215e90ede_Eval*, jule::Str);
inline jule::Any _215e9450e_getDef(_215e90ede_Eval*, jule::Str, jule::Bool);
inline void _209bed296_pushReference(_215e90ede_Eval*, jule::Ptr<_215dcea10_FnIns>*);
inline void _209c1208a_pushReference(_215e90ede_Eval*, jule::Ptr<_215e41aa5_Var>*);
inline void _209ca73d8_pushReference(_215e90ede_Eval*, jule::Ptr<_215dc71ab_StructIns>*);
inline jule::Ptr<_215e8e471_Data> _215e94a92__evalEnum(_215e90ede_Eval*, jule::Ptr<_215de0d62_Enum>);
inline jule::Ptr<_215e8e471_Data> _215e94e49_evalEnum(_215e90ede_Eval*, jule::Ptr<_215de0d62_Enum>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e95257__evalTypeEnum(_215e90ede_Eval*, jule::Ptr<_215de245c_TypeEnum>);
inline jule::Ptr<_215e8e471_Data> _215e9560e_evalTypeEnum(_215e90ede_Eval*, jule::Ptr<_215de245c_TypeEnum>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e9591c__evalStruct(_215e90ede_Eval*, jule::Ptr<_215dc71ab_StructIns>);
inline jule::Ptr<_215e8e471_Data> _215e95cc4_evalStruct(_215e90ede_Eval*, jule::Ptr<_215dc71ab_StructIns>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e960d2_evalFnIns(_215e90ede_Eval*, jule::Ptr<_215dcea10_FnIns>);
inline void _215e96401_checkDeprecated(_215e90ede_Eval*, jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e967a8_evalFn(_215e90ede_Eval*, jule::Ptr<_215dcd24a_Fn>, jule::Ptr<_22e0aa1de_Token>);
inline void _215e96b71_pushIllegalCycleError(_215e90ede_Eval*, jule::Ptr<_215e41aa5_Var>*, jule::Ptr<_215e41aa5_Var>*, jule::Str*);
inline jule::Bool _215e97028_checkCrossCycle(_215e90ede_Eval*, jule::Ptr<_215e41aa5_Var>*, jule::Str*);
inline jule::Bool _215e973d0_checkIllegalCycles(_215e90ede_Eval*, jule::Ptr<_215e41aa5_Var>*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e97787_evalVar(_215e90ede_Eval*, jule::Ptr<_215e41aa5_Var>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e97b3e_evalTypeAlias(_215e90ede_Eval*, jule::Ptr<_215eb9710_TypeAlias>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e97ee6_evalDef(_215e90ede_Eval*, jule::Any, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215e98304_evalIdent(_215e90ede_Eval*, jule::Ptr<_215db17c2_IdentExpr>);
inline jule::Ptr<_215e8e471_Data> _215e98612_evalUnary(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db1ecb_UnaryExpr>);
inline jule::Ptr<_215e8e471_Data> _215e98920_evalVariadic(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db2383_VariadicExpr>);
inline jule::Ptr<_215e8e471_Data> _215e98c2d_evalUnsafe(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db134e_UnsafeExpr>);
inline jule::Ptr<_215e8e471_Data> _215e9903b_evalArr(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db6200_SliceExpr>);
inline jule::Ptr<_215e8e471_Data> _215e9948c_evalExpSlc(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db6200_SliceExpr>, jule::Ptr<_215eba403_TypeKind>, jule::Any);
inline jule::Ptr<_215e8e471_Data> _215e9979a_evalSliceExpr(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db6200_SliceExpr>);
inline void _215e99adb_checkIntegerIndexingByData(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>);
inline void _215e99eb5_indexingPtr(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline void _215e9a37d_indexingArr(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline void _215e9a746_indexingSlc(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline void _215e9ab0e_indexingMap(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline void _215e9aec7_indexingStr(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline void _215e9b390_toIndexing(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline jule::Bool _215e9b813_pushGenericsFromExprSubIdent(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db3065_SubIdentExpr>*, jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>*, jule::Ptr<_215daeb11_Expr>*);
inline jule::Bool _215e9bbcb_pushGenericsFromData(jule::Ptr<_215e90ede_Eval>, jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>*, jule::Ptr<_215daeb11_Expr>*);
inline void _215e9c01c_evalIdentDeclFromIndexing(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline jule::Bool _215e9c47e_checkGenericFn(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_22e0aa1de_Token>*, jule::Any*);
inline void _215e9c7c0_evalFnGenericFromIndexing(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db6a6e_IndexingExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e9cade_evalIndexing(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db6a6e_IndexingExpr>);
inline __jule_tuple_x_215e8e471_Data__jule_tuple_x_215e8e471_Data _215e9cdec_evalSlicingExprs(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db7179_SlicingExpr>*);
inline void _215e9d172_slicingArr(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*);
inline void _215e9d53a_slicingStr(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline void _215e9d99c_checkSlicing(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215db7179_SlicingExpr>*);
inline jule::Ptr<_215e8e471_Data> _215e9dcaa_evalSlicing(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db7179_SlicingExpr>);
inline void _215e9e173_castPtr(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215e9e53b_castStruct(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215e9e904_castRef(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215e9ecbc_castSlc(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215ea00db_castStr(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215ea04a4_castInt(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215ea086c_castNum(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215ea0c35_castPrim(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline void _215ea1054_castConstant(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215e8e471_Data>*);
inline void _215ea141c_castTypeEnum(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline void _215ea17d5_castTypeEnumT(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Ptr<_215e8e471_Data> _215ea1c36_evalCastByTypeNData(_215e90ede_Eval*, jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea2187_evalCastT(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215daeb11_Expr>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Ptr<_215e8e471_Data> _215ea2495_evalCast(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db273a_CastExpr>);
inline jule::Ptr<_215e8e471_Data> _215ea27a3_evalNsSelection(_215e90ede_Eval*, jule::Ptr<_215db2ae2_NsSelectionExpr>);
inline jule::Ptr<_215e8e471_Data> _215ea2c04_evalStructLitExplicit(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215dc71ab_StructIns>, jule::Slice<jule::Ptr<_215daeb11_Expr>>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea3012_evalStructLit(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db4cc0_StructLit>);
inline _215ec8c6e_typeChecker _215ea3276_typeChecker(_215e90ede_Eval*);
inline jule::Ptr<_215e8e471_Data> _215ea3584_evalType(_215e90ede_Eval*, jule::Ptr<_215daa5e0_TypeDecl>);
inline void _215ea38a3_callTypeFn(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline void _215ea3bc2_callBuiltinFn(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline void _215ea4013_checkFnOfConcurrentCall(_215e90ede_Eval*, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_22e0aa1de_Token>);
inline void _215ea440e_processExceptionalHandler(_215e90ede_Eval*, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline void _215ea473e_callFn(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _215ea4a4c_evalFnCall(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db3ae3_FnCallExpr>);
inline jule::Ptr<_215e8e471_Data> _215ea4e04_evalEnumStatic(_215e90ede_Eval*, jule::Ptr<_215de0d62_Enum>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea52ab_evalTypeEnumStatic(_215e90ede_Eval*, jule::Ptr<_215de245c_TypeEnum>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea5663_evalStructStatic(_215e90ede_Eval*, jule::Ptr<_215dc71ab_StructIns>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea5ab4_evalTraitSubIdent(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_215dddc1c_Trait>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea60ae_evalStructSubIdent(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_215dc71ab_StructIns>, jule::Ptr<_215db3065_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_215e8e471_Data> _215ea6466_evalSliceSubIdent(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea681d_evalArraySubIdent(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea6b2b_evalIntTypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea6e39_evalUintTypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea7247_evalI8TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea7555_evalI16TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea7863_evalI32TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea7b71_evalI64TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea7e7e_evalU8TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea828c_evalU16TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea859a_evalU32TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea88a8_evalU64TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea8bb6_evalF32TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea8ec4_evalF64TypeStatic(_215e90ede_Eval*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea937b_evalPrimStatic(_215e90ede_Eval*, jule::Str, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215e8e471_Data> _215ea9733_evalTypeStatic(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_215db3065_SubIdentExpr>);
inline jule::Ptr<_215e8e471_Data> _215ea9ada_evalObjSubIdent(_215e90ede_Eval*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_215db3065_SubIdentExpr>);
inline jule::Ptr<_215e8e471_Data> _215ea9de8_evalSubIdent(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db3065_SubIdentExpr>);
inline jule::Ptr<_215e8e471_Data> _215eaa206_evalTuple(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db078d_TupleExpr>);
inline jule::Ptr<_215e8e471_Data> _215eaa5ad_evalMap(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215ec58e7_Map>, jule::Ptr<_215db5243_BraceLit>);
inline jule::Ptr<_215e8e471_Data> _215eaa8bb_evalBraceLit(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db5243_BraceLit>);
inline jule::Ptr<_215e8e471_Data> _215eaabc9_evalAnonFn(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215dbc06e_FnDecl>);
inline jule::Ptr<_215e8e471_Data> _215eaaed7_evalBinop(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215db34d8_BinopExpr>);
inline jule::Ptr<_215e8e471_Data> _215eab2e5_evalExprKind(jule::Ptr<_215e90ede_Eval>, jule::Any);
inline jule::Ptr<_215e8e471_Data> _215eab603_eval(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215daeb11_Expr>);
inline jule::Ptr<_215e8e471_Data> _215eab911_evalExpr(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_215daeb11_Expr>);
struct _215e90ede_Eval {
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Trait<_215ed6375_Lookup> _field_lookup;
	jule::Ptr<_215eba403_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_215e41aa5_Var> _field_owner;
	jule::Ptr<_215dc6ebe_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_215e90ede_Eval(void) = default;

	inline bool operator==(_215e90ede_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_215e90ede_Eval _other) { return !this->operator==(_other); }


};
inline _215eabd84_unaryEval static__215eac33a_new(jule::Ptr<_215e90ede_Eval>);
inline void _215eac516_minus(_215eabd84_unaryEval*);
inline void _215eac6e2_plus(_215eabd84_unaryEval*);
inline void _215eac8bd_caret(_215eabd84_unaryEval*);
inline void _215eaca99_excl(_215eabd84_unaryEval*);
inline void _215eacc75_star(_215eabd84_unaryEval*);
inline void _215eace51_amper(_215eabd84_unaryEval*);
inline void _215ead12c_typeDecl(_215eabd84_unaryEval*);
inline void _215ead308_evalData(_215eabd84_unaryEval*);
inline jule::Ptr<_215e8e471_Data> _215ead5d3_eval(_215eabd84_unaryEval*, jule::Ptr<_215db1ecb_UnaryExpr>);
struct _215eabd84_unaryEval {
	jule::Ptr<_215e90ede_Eval> _field_e;
	jule::Ptr<_215e8e471_Data> _field_d;
	jule::Ptr<_215db1ecb_UnaryExpr> _field_u;
	

	_215eabd84_unaryEval(void) = default;

	inline bool operator==(_215eabd84_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_215eabd84_unaryEval _other) { return !this->operator==(_other); }


};
inline _215eadb22_binaryEval static__215eae1e9_newPlain(jule::Ptr<_215e90ede_Eval>);
inline _215eadb22_binaryEval static__215eae53a_new(jule::Ptr<_215e90ede_Eval>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215eae79e_checkTypeCompatibility(_215eadb22_binaryEval*);
inline jule::Bool _215eaea46_checkStructCommonOperatorCompatibility(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eaecdd_evalNil(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb0052_evalEnum(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb02b6_evalTypeEnum(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb052a_evalSptr(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb078e_evalPtr(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb0a03_evalArr(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb0c67_evalSlc(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb0ecb_evalFn(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb1240_evalStruct(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb14a4_evalTrait(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb1718_evalAny(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb197c_evalBool(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb1be1_evalStr(_215eadb22_binaryEval*);
inline void _215eb1dbc_setTypeToGreater(_215eadb22_binaryEval*);
inline void _215eb210e_checkModData(_215eadb22_binaryEval*, jule::Ptr<_215e8e471_Data>*);
inline void _215eb22da_mod(_215eadb22_binaryEval*);
inline jule::Bool _215eb2692_numbersAreCompatibile(_215eadb22_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_215e8e471_Data> _215eb2906_evalFloat(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb2b6a_evalInt(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb2dce_evalPrim(_215eadb22_binaryEval*);
inline void _215eb30aa_checkSpecialCases(_215eadb22_binaryEval*);
inline jule::Ptr<_215e8e471_Data> _215eb331e_evalOp(_215eadb22_binaryEval*);
inline void _215eb3594_evalConst(_215eadb22_binaryEval*, jule::Ptr<_215e8e471_Data>*);
inline void _215eb3819_checkData(_215eadb22_binaryEval*, jule::Ptr<_215e8e471_Data>*);
inline void _215eb39e5_checkDatas(_215eadb22_binaryEval*);
inline void _215eb3c6a_setModel(_215eadb22_binaryEval*, jule::Ptr<_215e8e471_Data>*);
inline void _215eb3ee0_postEval(_215eadb22_binaryEval*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _215eb4397_solveExplicit(_215eadb22_binaryEval*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _215eb46a5_eval(_215eadb22_binaryEval*, jule::Ptr<_215db34d8_BinopExpr>*);
struct _215eadb22_binaryEval {
	jule::Ptr<_215e90ede_Eval> _field_e;
	jule::Ptr<_215e8e471_Data> _field_l;
	jule::Ptr<_215e8e471_Data> _field_r;
	jule::Ptr<_22e0aa1de_Token> _field_op;
	

	_215eadb22_binaryEval(void) = default;

	inline bool operator==(_215eadb22_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_215eadb22_binaryEval _other) { return !this->operator==(_other); }


};
struct _215eb8bc6_InsGeneric {
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _field_Constraint;
	

	_215eb8bc6_InsGeneric(void) = default;


};
struct _215eb9710_TypeAlias {
	jule::Ptr<_215dba578_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_215ebe7d1_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _field_Generics;
	

	_215eb9710_TypeAlias(void) = default;


};
inline jule::Str _215eba7ee_Str(_215eba403_TypeKind*);
inline jule::Bool _215ebab0c_Equal(jule::Ptr<_215eba403_TypeKind>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215ebb0c4_CppLinked(_215eba403_TypeKind*);
inline jule::Bool _215ebb338_IsNil(_215eba403_TypeKind*);
inline jule::Bool _215ebb59c_Void(_215eba403_TypeKind*);
inline jule::Bool _215ebb811_Comparable(_215eba403_TypeKind*);
inline jule::Bool _215ebba75_Mutable(_215eba403_TypeKind*);
inline jule::Bool _215ebbcd9_NilCompatible(_215eba403_TypeKind*);
inline jule::Bool _215ebc04d_PerformsRC(_215eba403_TypeKind*);
inline jule::Bool _215ebc2b2_SupportsCloning(_215eba403_TypeKind*);
inline jule::Bool _215ebc526_Variadicable(_215eba403_TypeKind*);
inline jule::Ptr<_215ec0150_Prim> _215ebc78a_Prim(_215eba403_TypeKind*);
inline jule::Ptr<_215ec38d4_Sptr> _215ebc9ee_Sptr(_215eba403_TypeKind*);
inline jule::Ptr<_215ec6e48_Ptr> _215ebcc63_Ptr(_215eba403_TypeKind*);
inline jule::Ptr<_215de0d62_Enum> _215ebcec7_Enum(_215eba403_TypeKind*);
inline jule::Ptr<_215de245c_TypeEnum> _215ebd23b_TypeEnum(_215eba403_TypeKind*);
inline jule::Ptr<_215ec64db_Arr> _215ebd4a0_Arr(_215eba403_TypeKind*);
inline jule::Ptr<_215ec4341_Slc> _215ebd714_Slc(_215eba403_TypeKind*);
inline jule::Ptr<_215dcea10_FnIns> _215ebd978_Fn(_215eba403_TypeKind*);
inline jule::Ptr<_215dc71ab_StructIns> _215ebdbdc_Struct(_215eba403_TypeKind*);
inline jule::Ptr<_215dddc1c_Trait> _215ebde51_Trait(_215eba403_TypeKind*);
inline jule::Ptr<_215ec58e7_Map> _215ebe1b5_Map(_215eba403_TypeKind*);
inline jule::Ptr<_215ec4dbe_Tuple> _215ebe429_Tup(_215eba403_TypeKind*);
struct _215eba403_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_215eb9ec4_Kind> _field_Kind;
	

	_215eba403_TypeKind(void) = default;

	inline bool operator==(_215eba403_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215eba403_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _215ebeb88_checked(_215ebe7d1_TypeSymbol*);
inline void _215ebed64_removeKind(_215ebe7d1_TypeSymbol*);
struct _215ebe7d1_TypeSymbol {
	jule::Ptr<_215daa5e0_TypeDecl> _field_Decl;
	jule::Ptr<_215eba403_TypeKind> _field_Kind;
	

	_215ebe7d1_TypeSymbol(void) = default;

	inline bool operator==(_215ebe7d1_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215ebe7d1_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _215ec04b3_Str(_215ec0150_Prim*);
inline jule::Bool _215ec07c1_Equal(jule::Ptr<_215ec0150_Prim>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215ec0c44_IsConstraint(_215ec0150_Prim*);
inline jule::Bool _215ec0ea8_IsI8(_215ec0150_Prim*);
inline jule::Bool _215ec121c_IsI16(_215ec0150_Prim*);
inline jule::Bool _215ec1481_IsI32(_215ec0150_Prim*);
inline jule::Bool _215ec16e5_IsI64(_215ec0150_Prim*);
inline jule::Bool _215ec1959_IsU8(_215ec0150_Prim*);
inline jule::Bool _215ec1bbd_IsU16(_215ec0150_Prim*);
inline jule::Bool _215ec1e32_IsU32(_215ec0150_Prim*);
inline jule::Bool _215ec2196_IsU64(_215ec0150_Prim*);
inline jule::Bool _215ec240a_IsF32(_215ec0150_Prim*);
inline jule::Bool _215ec266e_IsF64(_215ec0150_Prim*);
inline jule::Bool _215ec28d3_IsInt(_215ec0150_Prim*);
inline jule::Bool _215ec2b47_IsUint(_215ec0150_Prim*);
inline jule::Bool _215ec2dab_IsUintptr(_215ec0150_Prim*);
inline jule::Bool _215ec3120_IsBool(_215ec0150_Prim*);
inline jule::Bool _215ec3384_IsStr(_215ec0150_Prim*);
inline jule::Bool _215ec35e8_IsAny(_215ec0150_Prim*);
struct _215ec0150_Prim {
	jule::Str _field_Kind;
	

	_215ec0150_Prim(void) = default;

	inline bool operator==(_215ec0150_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_215ec0150_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _215ec3c47_Str(_215ec38d4_Sptr*);
inline jule::Bool _215ec4055_Equal(jule::Ptr<_215ec38d4_Sptr>, jule::Ptr<_215eba403_TypeKind>);
struct _215ec38d4_Sptr {
	jule::Ptr<_215eba403_TypeKind> _field_Elem;
	

	_215ec38d4_Sptr(void) = default;

	inline bool operator==(_215ec38d4_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215ec38d4_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _215ec484c_Str(_215ec4341_Slc*);
inline jule::Bool _215ec4b5a_Equal(jule::Ptr<_215ec4341_Slc>, jule::Ptr<_215eba403_TypeKind>);
struct _215ec4341_Slc {
	jule::Ptr<_215eba403_TypeKind> _field_Elem;
	

	_215ec4341_Slc(void) = default;

	inline bool operator==(_215ec4341_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215ec4341_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _215ec5232_Str(_215ec4dbe_Tuple*);
inline jule::Bool _215ec5540_Equal(jule::Ptr<_215ec4dbe_Tuple>, jule::Ptr<_215eba403_TypeKind>);
struct _215ec4dbe_Tuple {
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _field_Types;
	

	_215ec4dbe_Tuple(void) = default;


};
inline jule::Str _215ec5c5a_Str(_215ec58e7_Map*);
inline jule::Bool _215ec6068_Equal(jule::Ptr<_215ec58e7_Map>, jule::Ptr<_215eba403_TypeKind>);
struct _215ec58e7_Map {
	jule::Ptr<_215eba403_TypeKind> _field_Key;
	jule::Ptr<_215eba403_TypeKind> _field_Val;
	

	_215ec58e7_Map(void) = default;

	inline bool operator==(_215ec58e7_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_215ec58e7_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _215ec684e_Str(_215ec64db_Arr*);
inline jule::Bool _215ec6b5c_Equal(jule::Ptr<_215ec64db_Arr>, jule::Ptr<_215eba403_TypeKind>);
struct _215ec64db_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_215eba403_TypeKind> _field_Elem;
	

	_215ec64db_Arr(void) = default;

	inline bool operator==(_215ec64db_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215ec64db_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _215ec72ab_Str(_215ec6e48_Ptr*);
inline jule::Bool _215ec75b9_Equal(jule::Ptr<_215ec6e48_Ptr>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215ec791b_IsUnsafe(_215ec6e48_Ptr*);
struct _215ec6e48_Ptr {
	jule::Ptr<_215eba403_TypeKind> _field_Elem;
	

	_215ec6e48_Ptr(void) = default;

	inline bool operator==(_215ec6e48_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_215ec6e48_Ptr _other) { return !this->operator==(_other); }


};
struct _215ec7d8e_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_215ec7d8e_referencer(void) = default;

	inline bool operator==(_215ec7d8e_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_215ec7d8e_referencer _other) { return !this->operator==(_other); }


};
inline void _215ec9478_pushErr(_215ec8c6e_typeChecker*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _215ec9654_allowBuiltin(_215ec8c6e_typeChecker*);
inline void _215ec9830_disallowBuiltin(_215ec8c6e_typeChecker*);
inline jule::Ptr<_215ec0150_Prim> _215ec9b3d_buildPrim(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*);
inline void _20a05dc77_pushReference(_215ec8c6e_typeChecker*, jule::Ptr<_215dc71ab_StructIns>*);
inline void _20a061b04_pushReference(_215ec8c6e_typeChecker*, jule::Ptr<_215dddc1c_Trait>*);
inline void _215eca138_pushReferenceByKind(_215ec8c6e_typeChecker*, jule::Ptr<_215eba403_TypeKind>*);
inline void _215eca501_pushCycleError(_215ec8c6e_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _215eca8a8_checkCrossCycle(_215ec8c6e_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _215ecac60_checkIllegalCycles(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_215eb9ec4_Kind> _215ecb117_fromTypeAlias(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Ptr<_215eb9710_TypeAlias>*);
inline jule::Ptr<_215de0d62_Enum> _215ecb4be_fromEnum(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Ptr<_215de0d62_Enum>*);
inline jule::Ptr<_215de245c_TypeEnum> _215ecb876_fromTypeEnum(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Ptr<_215de245c_TypeEnum>*);
inline jule::Ptr<_215dddc1c_Trait> _215ecbc2d_fromTrait(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Ptr<_215dddc1c_Trait>*);
inline jule::Bool _215ecc0d5_checkStructIns(_215ec8c6e_typeChecker*, jule::Ptr<_215dc71ab_StructIns>*, jule::Ptr<_22e0aa1de_Token>*);
inline void _215ecc37c_appendUsedStructReference(_215ec8c6e_typeChecker*, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Ptr<_215dc71ab_StructIns> _215ecc745_buildStructInstance(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Ptr<_215dc71ab_StructIns> _215eccaec_fromStruct(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Trait<_215eb9ec4_Kind> _215ecce0a_getDef(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>*);
inline jule::Trait<_215eb9ec4_Kind> _215ecd218_buildIdent(_215ec8c6e_typeChecker*, jule::Ptr<_215daaba6_IdentTypeDecl>);
inline jule::Trait<_215eb9ec4_Kind> _215ecd526_buildSubIdent(_215ec8c6e_typeChecker*, jule::Ptr<_215dab305_SubIdentTypeDecl>);
inline jule::Ptr<_215ec38d4_Sptr> _215ecd834_buildSptrFromType(_215ec8c6e_typeChecker*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Ptr<_215ec38d4_Sptr> _215ecdb42_buildSptr(_215ec8c6e_typeChecker*, jule::Ptr<_215dab998_SptrTypeDecl>);
inline jule::Ptr<_215ec6e48_Ptr> _215ecde50_buildPtrFromType(_215ec8c6e_typeChecker*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Ptr<_215ec6e48_Ptr> _215ece25d_buildPtr(_215ec8c6e_typeChecker*, jule::Ptr<_215dac46b_PtrTypeDecl>);
inline jule::Ptr<_215ec4341_Slc> _215ece56b_buildSlc(_215ec8c6e_typeChecker*, jule::Ptr<_215dabd94_SlcTypeDecl>);
inline jule::Ptr<_215ec64db_Arr> _215ece879_buildArr(_215ec8c6e_typeChecker*, jule::Ptr<_215dacaed_ArrTypeDecl>);
inline jule::Ptr<_215ec58e7_Map> _215eceb87_buildMap(_215ec8c6e_typeChecker*, jule::Ptr<_215dad34b_MapTypeDecl>);
inline jule::Ptr<_215ec4dbe_Tuple> _215ecee95_buildTuple(_215ec8c6e_typeChecker*, jule::Ptr<_215dac180_TupleTypeDecl>);
inline jule::Bool _215ed02a3_checkFnTypes(_215ec8c6e_typeChecker*, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Ptr<_215dcea10_FnIns> _215ed05b1_buildFn(_215ec8c6e_typeChecker*, jule::Ptr<_215dbc06e_FnDecl>);
inline jule::Trait<_215eb9ec4_Kind> _215ed08be_buildByNamespace(_215ec8c6e_typeChecker*, jule::Ptr<_215dab6ac_NamespaceTypeDecl>);
inline jule::Ptr<_215eba403_TypeKind> _215ed0bcc_build(_215ec8c6e_typeChecker*, jule::Any*);
inline jule::Ptr<_215eba403_TypeKind> _215ed0eda_checkDecl(_215ec8c6e_typeChecker*, jule::Ptr<_215daa5e0_TypeDecl>*);
inline void _215ed1260_check(_215ec8c6e_typeChecker*, jule::Ptr<_215ebe7d1_TypeSymbol>*);
struct _215ec8c6e_typeChecker {
	jule::Ptr<_215e2327e_Sema> _field_s;
	jule::Trait<_215ed6375_Lookup> _field_rootLookup;
	jule::Trait<_215ed6375_Lookup> _field_lookup;
	jule::Ptr<_215ec7d8e_referencer> _field_referencer;
	jule::Ptr<_215dd2969_ReferenceStack> _field_refers;
	jule::Ptr<_22e0aa1de_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_215eba403_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_215eb9710_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_215ec8c6e_typeChecker(void) = default;


};
inline jule::Bool static__215ed18c0_prim(jule::Str*, jule::Ptr<_215ec0150_Prim>);
inline jule::Bool static__215ed1c11_exist(jule::Str*, jule::Ptr<_215eba403_TypeKind>*);
struct _215ed1480_identTypeLookup {
	

	_215ed1480_identTypeLookup(void) = default;

	inline bool operator==(_215ed1480_identTypeLookup _other) { return true; }

	inline bool operator!=(_215ed1480_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e9dbee6c_FileInfo {
	jule::Ptr<_215d761c1_Ast> _field_Ast;
	jule::Slice<_22dbec89d_Log> _field_Errors;
	

	_1e9dbee6c_FileInfo(void) = default;


};
struct _1e9e18a87_stmt {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1e9e18a87_stmt(void) = default;


};
inline void _1e9e19a44_stop(_1e9e193b2_scopeParser*);
inline jule::Bool _1e9e19ca8_stopped(_1e9e193b2_scopeParser*);
inline jule::Bool _1e9e1a01c_finished(_1e9e193b2_scopeParser*);
inline jule::Bool _1e9e1a281_isLastSt(_1e9e193b2_scopeParser*);
inline void _1e9e1a5a0_pushErr(_1e9e193b2_scopeParser*, jule::Ptr<_22e0aa1de_Token>, jule::Str);
inline void _1e9e1a8be_pushSuggestion(_1e9e193b2_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e9e1ab44_insertAsNext(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_1e9e18a87_stmt> _1e9e1ada8_next(_1e9e193b2_scopeParser*);
inline jule::Ptr<_215dba578_ScopeTree> _1e9e1b260_buildScope(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215dbd04d_VarDecl> _1e9e1b56d_buildVarSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dbd405_RetSt> _1e9e1b87b_buildRetSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dbda65_Iter> _1e9e1bb89_buildWhileNextIter(_1e9e193b2_scopeParser*, jule::Ptr<_1e9e18a87_stmt>*);
inline jule::Ptr<_215dbe33a_WhileKind> _1e9e1be97_buildWhileIterKind(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e1c2a5_getRangeKindKeysTokens(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dbd04d_VarDecl> _1e9e1c5b3_buildRangeKindKey(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_215dbd04d_VarDecl>> _1e9e1c8c1_buildRangeKindKeys(_1e9e193b2_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>*);
inline void _1e9e1cc12_setupRangeKindKeysPlain(_1e9e193b2_scopeParser*, jule::Ptr<_215dbebcb_RangeKind>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e1d064_setupRangeKindKeysExplicit(_1e9e193b2_scopeParser*, jule::Ptr<_215dbebcb_RangeKind>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e1d394_setupRangeKindKeys(_1e9e193b2_scopeParser*, jule::Ptr<_215dbebcb_RangeKind>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dbebcb_RangeKind> _1e9e1d7e5_buildRangeIterKind(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Any _1e9e1db9c_buildCommonIterKind(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Ptr<_215dbda65_Iter> _1e9e1deaa_buildCommonIter(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dbda65_Iter> _1e9e1e2b8_buildIterSt(_1e9e193b2_scopeParser*, jule::Ptr<_1e9e18a87_stmt>*);
inline jule::Ptr<_215dc0083_BreakSt> _1e9e1e5c6_buildBreakSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc043a_ContSt> _1e9e1e8d4_buildContSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc08ad_If> _1e9e1ebe2_buildIf(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc0c65_Else> _1e9e20000_buildElse(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc11d8_Conditional> _1e9e2030d_buildIfElseChain(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215daeb11_Expr> _1e9e2061b_buildCoCallSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db8147_GotoSt> _1e9e20929_buildGotoSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db8433_FallSt> _1e9e20c37_buildFallSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc18ae_TypeAliasDecl> _1e9e21045_buildTypeAliasSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e214a7_pushCaseExpr(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Ptr<_22e0aa1de_Token>, jule::Bool, jule::Slice<jule::Ptr<_215daeb11_Expr>>*);
inline jule::Slice<jule::Ptr<_215daeb11_Expr>> _1e9e21908_buildCaseExprs(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>*, jule::Bool);
inline jule::Ptr<_215dba578_ScopeTree> _1e9e21c16_buildCaseScope(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline __jule_tuple_x_215dc1d32_Case__jule_tuple_bool _1e9e220bd_buildCase(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Bool);
inline __jule_tuple_sx_215dc1d32_Case__jule_tuple_x_215dc0c65_Else _1e9e22475_buildCases(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Bool);
inline jule::Ptr<_215dc2508_MatchCase> _1e9e22783_buildMatchCase(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dba578_ScopeTree> _1e9e22a91_buildScopeSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db7c90_LabelSt> _1e9e22d9e_buildLabelSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline __jule_tuple__215db9c3c_StmtData__jule_tuple_bool _1e9e231ac_buildIdSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_1e9e321cc_assignInfo> _1e9e234ba_buildAssignInfo(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db8a3d_AssignLeft> _1e9e237c8_buildAssignL(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_215db8a3d_AssignLeft>> _1e9e23ad6_buildAssignLs(_1e9e193b2_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>*);
inline __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool _1e9e23de4_buildPlainAssign(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool _1e9e24202_buildDeclAssign(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool _1e9e24510_buildAssignSt(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db04a2_UseExpr> _1e9e2481d_buildUseExpr(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e24b2b_buildSt(_1e9e193b2_scopeParser*, jule::Ptr<_1e9e18a87_stmt>*);
inline void _1e9e24e4a_build(_1e9e193b2_scopeParser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_215dba578_ScopeTree>*);
struct _1e9e193b2_scopeParser {
	jule::Ptr<_1e9e35a0a_parser> _field_p;
	jule::Ptr<_215dba578_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1e9e193b2_scopeParser(void) = default;


};
inline void _1e9e2616b_pushErr(_1e9e25896_exprBuilder*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e9e2648a_pushSuggestion(_1e9e25896_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_215db078d_TupleExpr> _1e9e26798_buildTuple(_1e9e25896_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>*);
inline jule::Ptr<_215db0b45_LitExpr> _1e9e26aa6_buildLit(_1e9e25896_exprBuilder*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e26db4_buildPrimitiveType(_1e9e25896_exprBuilder*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Any _1e9e271c2_buildSingle(_1e9e25896_exprBuilder*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215db17c2_IdentExpr> _1e9e274d0_buildCppLinkedIdent(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db1ecb_UnaryExpr> _1e9e277dd_buildUnary(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db3065_SubIdentExpr> _1e9e27aeb_buildObjSubIdent(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db2ae2_NsSelectionExpr> _1e9e27e09_buildNsSubIdent(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e28217_buildType(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e28525_buildSubIdent(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db2383_VariadicExpr> _1e9e28833_buildVariadic(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Any _1e9e28b41_buildOpRight(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215daedec_RangeExpr> _1e9e28e71_buildBetweenParentheses(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db273a_CastExpr> _1e9e29290_tryBuildCast(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e29658_pushArg(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_215daeb11_Expr>>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Slice<jule::Ptr<_215daeb11_Expr>> _1e9e29966_buildArgs(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _1e9e29c74_buildCallGenerics(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db3ae3_FnCallExpr> _1e9e2a1c5_buildFnCall(_1e9e25896_exprBuilder*, jule::Ptr<_22e0aa1de_Token>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e2a4d3_buildParenthesesRange(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db134e_UnsafeExpr> _1e9e2a7e1_buildUnsafeExpr(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dbc06e_FnDecl> _1e9e2aaee_buildAnonFn(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e2ae0c_buildUnsafe(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e2b2c5_pushRangeLitPart(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Ptr<_22e0aa1de_Token>, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e2b605_getBraceRangeLitExprParts(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db4572_FieldExprPair> _1e9e2b924_buildFieldExprPair(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215daeb11_Expr> _1e9e2bc32_buildStructLitExpr(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_215daeb11_Expr>> _1e9e2c040_buildStructLitExprs(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db4cc0_StructLit> _1e9e2c370_buildTypedStructLiteral(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215daeb11_Expr> _1e9e2c68e_buildBraceLitPart(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db5243_BraceLit> _1e9e2c99c_buildBraceLit(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e2ccaa_buildBraceRange(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e2d0b8_getEnumerableParts(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db6200_SliceExpr> _1e9e2d3c6_buildSlice(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db6a6e_IndexingExpr> _1e9e2d827_buildIndexing(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Ptr<_215db7179_SlicingExpr> _1e9e2ddbb_buildSlicing(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_22e0aa1de_Token>);
inline jule::Any _1e9e2e1c9_buildBracketRange(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Any _1e9e2e4d7_buildData(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e2e88e_buildBinop(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64);
inline jule::Any _1e9e2eb9c_build(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e2eeaa_buildKind(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215daeb11_Expr> _1e9e302b8_buildFromTokens(_1e9e25896_exprBuilder*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
struct _1e9e25896_exprBuilder {
	jule::Ptr<_1e9e35a0a_parser> _field_p;
	

	_1e9e25896_exprBuilder(void) = default;

	inline bool operator==(_1e9e25896_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e9e25896_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1e9e321cc_assignInfo {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_l;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_r;
	jule::Ptr<_22e0aa1de_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1e9e321cc_assignInfo(void) = default;


};
inline void _1e9e35d3a_stop(_1e9e35a0a_parser*);
inline jule::Bool _1e9e3609e_stopped(_1e9e35a0a_parser*);
inline void _1e9e36467_pushErr(_1e9e35a0a_parser*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e9e36786_pushSuggestion(_1e9e35a0a_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_215daeb11_Expr> _1e9e36a94_buildExpr(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215d77348_Directive> _1e9e36da2_buildDirective(_1e9e35a0a_parser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e37127_pushDirective(_1e9e35a0a_parser*, jule::Ptr<_215d77348_Directive>);
inline jule::Ptr<_215dba578_ScopeTree> _1e9e374ce_buildScope(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>);
inline __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool _1e9e37930__buildType(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool _1e9e37d81_buildType(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_215dc18ae_TypeAliasDecl> _1e9e3818e_buildTypeAliasDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e384ad_buildVarTypeAndExpr(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_215dbd04d_VarDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e387cc_buildVarCommon(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_215dbd04d_VarDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e38b95_buildVarBegin(_1e9e35a0a_parser*, jule::Ptr<_215dbd04d_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dbd04d_VarDecl> _1e9e38ea3_buildVar(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215db78d8_GenericDecl> _1e9e392b1_buildGeneric(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _1e9e39668_buildGenerics(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Ptr<_22e0aa1de_Token>*);
inline jule::Ptr<_215dbac4e_ParamDecl> _1e9e39976_buildSelfParam(_1e9e35a0a_parser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e39d3e_paramTypeBegin(_1e9e35a0a_parser*, jule::Ptr<_215dbac4e_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e3a15d_buildParamType(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_215dbac4e_ParamDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e3a47c_buildParamBody(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_215dbac4e_ParamDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dbac4e_ParamDecl> _1e9e3a78a_buildParam(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e3aa10_checkParams(_1e9e35a0a_parser*, jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>> _1e9e3adb7_buildParams(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Bool);
inline __jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool _1e9e3b26e_buildMultiRetType(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64*);
inline __jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool _1e9e3b626_buildRetType(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64*);
inline jule::Ptr<_215dbc06e_FnDecl> _1e9e3ba77_buildFnPrototype(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_215dbc06e_FnDecl> _1e9e3bec8_buildFn(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_22e0aa1de_Token>> _1e9e3c2d6_getUseDeclSelectors(_1e9e35a0a_parser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e3c605_buildCppUseDecl(_1e9e35a0a_parser*, jule::Ptr<_215dc2c9a_UseDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e3c924_buildStdUseDecl(_1e9e35a0a_parser*, jule::Ptr<_215dc2c9a_UseDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e3cc43_buildIdentUseDecl(_1e9e35a0a_parser*, jule::Ptr<_215dc2c9a_UseDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline void _1e9e3d062_parseUseDecl(_1e9e35a0a_parser*, jule::Ptr<_215dc2c9a_UseDecl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dc2c9a_UseDecl> _1e9e3d419_buildUseDecl(_1e9e35a0a_parser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>, jule::Bool);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e3d7c1_buildTypeEnumItemKind(jule::Ptr<_1e9e35a0a_parser>, jule::I64*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>> _1e9e3dace_buildTypeEnumItems(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc4d57_TypeEnumDecl> _1e9e3dddc_buildTypeEnumDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215daeb11_Expr> _1e9e3e294_buildEnumItemExpr(jule::Ptr<_1e9e35a0a_parser>, jule::I64*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>> _1e9e3e5a2_buildEnumItems(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc3c46_EnumDecl> _1e9e3e8b0_buildEnumDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Any _1e9e3ebbd_buildNodeEnumDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc5055_FieldDecl> _1e9e3eecb_buildField(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Slice<jule::Ptr<_215dc5055_FieldDecl>> _1e9e402d9_buildStructDeclFields(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dc5808_StructDecl> _1e9e405e7_buildStructDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e4086c_checkMethodReceiver(_1e9e35a0a_parser*, jule::Ptr<_215dbc06e_FnDecl>*);
inline jule::Slice<jule::Ptr<_215dbc06e_FnDecl>> _1e9e40b7a_buildTraitMethods(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dc5e13_TraitDecl> _1e9e40e88_buildTraitDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dbc06e_FnDecl> _1e9e41296_buildCppLinkFn(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dbd04d_VarDecl> _1e9e415a4_buildCppLinkVar(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dc5808_StructDecl> _1e9e418b2_buildCppLinkStruct(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dc18ae_TypeAliasDecl> _1e9e41bc0_buildCppLinkTypeAlias(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215dc2c9a_UseDecl> _1e9e41ecd_buildCppLinkUse(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Any _1e9e422db_buildCppLink(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dbc06e_FnDecl> _1e9e425e9_getMethod(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e42918_parseImplBody(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_215dc651d_Impl>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215dc651d_Impl> _1e9e42c26_buildImpl(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Any _1e9e43034_buildNodeData(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e432a9_applyFnMeta(_1e9e35a0a_parser*, jule::Ptr<_215dbc06e_FnDecl>*);
inline void _1e9e4352e_applyMeta(_1e9e35a0a_parser*, _215d76e4c_Node*);
inline void _1e9e437a4_pushUseDecl(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_215dc2c9a_UseDecl>*);
inline jule::Bool _1e9e43ab2_pushMetaNodes(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline _215d76e4c_Node _1e9e43dc0_parseNode(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e44145_appendNode(jule::Ptr<_1e9e35a0a_parser>, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e445a7_removeRange(_1e9e35a0a_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::I64>*);
inline void _1e9e44970_pushWrongOrderCloseErr(_1e9e35a0a_parser*, jule::Ptr<_22e0aa1de_Token>*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::I64>*);
inline void _1e9e44dd2_pushRangeClose(_1e9e35a0a_parser*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Slice<jule::I64>*);
inline void _1e9e45157_checkRanges(_1e9e35a0a_parser*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline void _1e9e453cc_parse(jule::Ptr<_1e9e35a0a_parser>, jule::Ptr<_22e0b0579_File>*);
struct _1e9e35a0a_parser {
	jule::Ptr<_215d761c1_Ast> _field_ast;
	jule::Slice<jule::Ptr<_215d77348_Directive>> _field_directives;
	jule::Slice<_22dbec89d_Log> _field_errors;
	

	_1e9e35a0a_parser(void) = default;


};
inline void _1e9e46ce6_pushErr(_1e9e4671e_typeBuilder*, jule::Ptr<_22e0aa1de_Token>, jule::Str);
inline void _1e9e47115_pushSuggestion(_1e9e4671e_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e47379_buildPrim(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e475dd_buildNamespace(_1e9e4671e_typeBuilder*);
inline jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _1e9e47852_buildGenerics(_1e9e4671e_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e47ab6_identGenerics(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e47d2a_buildIdent(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e4808e_buildCppLink(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48303_buildFn(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48567_buildPtr(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e487cb_buildSptr(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48a40_buildOp(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48ca4_buildSlc(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e49018_buildArr(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e4927c_buildMap(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e494e1_buildEnumerable(_1e9e4671e_typeBuilder*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e49755_step(_1e9e4671e_typeBuilder*);
inline __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool _1e9e499b9_build(_1e9e4671e_typeBuilder*);
struct _1e9e4671e_typeBuilder {
	jule::Ptr<_1e9e35a0a_parser> _field_p;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1e9e4671e_typeBuilder(void) = default;


};
struct _2161e9038_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_2161e9038_CompileInfo(void) = default;

	inline bool operator==(_2161e9038_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_2161e9038_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _2161ea8db_pushErr(_2161ea38b_directiveEval*, jule::Ptr<_22e0aa1de_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _2161eac93_splitOperans(_2161ea38b_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Bool _2161eb0a1_evalDirectiveIdent(_2161ea38b_directiveEval*, jule::Str);
inline jule::Bool _2161eb3ae_evalDirectivePart(_2161ea38b_directiveEval*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Bool _2161eb623_eval(_2161ea38b_directiveEval*);
struct _2161ea38b_directiveEval {
	jule::Slice<_22dbec89d_Log> _field_logs;
	jule::Ptr<_215d77348_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_2161ea38b_directiveEval(void) = default;


};
inline jule::Ptr<_1e9d3cbcb_JuleImporter> static__22e31dbc2_New(_2161e9038_CompileInfo);
inline jule::Slice<jule::Ptr<_215e1a133_ImportInfo>> _22e330189_AllPackages(_1e9d3cbcb_JuleImporter*);
inline void _22e342ae7_SetModPath(_1e9d3cbcb_JuleImporter*, jule::Str);
inline jule::Str _22e355b2c_GetModPath(_1e9d3cbcb_JuleImporter*);
inline jule::Str _22e364993_ModById(_1e9d3cbcb_JuleImporter*, jule::I64);
inline jule::Ptr<_215e1a133_ImportInfo> _1e9c0d00d_GetImport(_1e9d3cbcb_JuleImporter*, jule::Str);
inline __jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log _1e9c15279_ImportPackage(_1e9d3cbcb_JuleImporter*, jule::Str, jule::Bool);
inline void _1e9c18bea_Imported(_1e9d3cbcb_JuleImporter*, jule::Ptr<_215e1a133_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_22dbec89d_Log _1e9c8355b_isPassBuildDirectives(_1e9d3cbcb_JuleImporter*, jule::Ptr<_215d761c1_Ast>*);
struct _1e9d3cbcb_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_215e1a133_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1e9d3cbcb_JuleImporter(void) = default;


};
struct _22e371917_OrderedDefines {
	jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_Globals;
	

	_22e371917_OrderedDefines(void) = default;


};
inline jule::Bool _20bcc0eb0_isCommonOrdered(jule::Slice<jule::Ptr<_215dc6cd2_Struct>>, jule::Ptr<_215dc6cd2_Struct>);
inline jule::Bool _20bcc5e0a_isCommonOrdered(jule::Slice<jule::Ptr<_215e41aa5_Var>>, jule::Ptr<_215e41aa5_Var>);
inline void _20bcbc682_orderCommon(jule::Slice<jule::Ptr<_215dc6cd2_Struct>>*);
inline void _20bcbddd1_orderCommon(jule::Slice<jule::Ptr<_215e41aa5_Var>>*);
inline void static__22e30a043_orderStructures(jule::Slice<jule::Ptr<_215dc6cd2_Struct>>*);
inline void static__22e33a53a_orderVars(jule::Slice<jule::Ptr<_215e41aa5_Var>>*);
struct _1e9c084ae_defineOrderer {
	

	_1e9c084ae_defineOrderer(void) = default;

	inline bool operator==(_1e9c084ae_defineOrderer _other) { return true; }

	inline bool operator!=(_1e9c084ae_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1ea02a616_liveTable {
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_vars;
	jule::Slice<jule::Ptr<_215dcea10_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_215dc71ab_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_215dddc1c_Trait>> _field_traits;
	

	_1ea02a616_liveTable(void) = default;


};
inline void _1ea0617e5_optimizeChild(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215deb92d_Scope>*);
inline void _1ea061a8c_optimizeBodyChildExceptional(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215deb92d_Scope>*);
inline void _1ea061d23_optimizeBodyChild(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215deb92d_Scope>*);
inline void _1ea062098_optimizeExprModel(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Any*);
inline void _1ea062274_eliminateFollowed(_1ea06131c_scopeDeadCode*);
inline void _1ea0624e9_pushGoto(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215dee458_GotoSt>);
inline void _1ea06276e_pushLabel(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215dee16c_Label>);
inline void _1ea0629e4_optimizeRangeIter(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215ded5cd_RangeIter>);
inline void _1ea062c69_optimizeWhileIter(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215decbe8_WhileIter>);
inline void _1ea062ede_optimizeInfIter(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215dec775_InfIter>);
inline void _1ea063264_optimizeConditional(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215dec489_Conditional>);
inline void _1ea0634d9_optimizeMatch(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215e00679_Match>);
inline void _1ea06375e_optimizeAssign(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215deec83_Assign>);
inline void _1ea0639d4_optimizeMultiAssign(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Ptr<_215e0013a_MultiAssign>);
inline void _1ea063c59_optimizeStmt(jule::Ptr<_1ea06131c_scopeDeadCode>, jule::Any);
inline void _1ea063e35_optimizeStmts(jule::Ptr<_1ea06131c_scopeDeadCode>);
struct _1ea06131c_scopeDeadCode {
	jule::Ptr<_1ea06131c_scopeDeadCode> _field_parent;
	jule::Ptr<_215deb92d_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_215dee16c_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_215dee458_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1ea06131c_scopeDeadCode(void) = default;

	inline bool operator==(_1ea06131c_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1ea06131c_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1ea065277_exprDeadCode static__1ea0658a4_new(jule::Ptr<_1ea06131c_scopeDeadCode>*);
inline void _1ea065b29_binary(_1ea065277_exprDeadCode*, jule::Ptr<_215dc78c6_BinopExprModel>);
inline void _1ea065d9e_unary(_1ea065277_exprDeadCode*, jule::Ptr<_215dc7ab3_UnaryExprModel>);
inline void _1ea066124_structureLit(_1ea065277_exprDeadCode*, jule::Ptr<_215dc7e8c_StructLitExprModel>);
inline void _1ea066399_allocStructure(_1ea065277_exprDeadCode*, jule::Ptr<_215dc8179_AllocStructLitExprModel>);
inline void _1ea06661e_casting(_1ea065277_exprDeadCode*, jule::Ptr<_215dc8366_CastingExprModel>);
inline void _1ea066894_args(_1ea065277_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1ea066b19_funcCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dc8553_FnCallExprModel>);
inline void _1ea066d8e_slice(_1ea065277_exprDeadCode*, jule::Ptr<_215dc8740_SliceExprModel>);
inline void _1ea067114_array(_1ea065277_exprDeadCode*, jule::Ptr<_215dc9bb4_ArrayExprModel>);
inline void _1ea067389_indexing(_1ea065277_exprDeadCode*, jule::Ptr<_215dc892c_IndexingExprModel>);
inline void _1ea06760e_anonFunc(_1ea065277_exprDeadCode*, jule::Ptr<_215dc8b19_AnonFnExprModel>);
inline void _1ea067884_mapExpr(_1ea065277_exprDeadCode*, jule::Ptr<_215dc8ee3_MapExprModel>);
inline void _1ea067b09_slicing(_1ea065277_exprDeadCode*, jule::Ptr<_215dc91d0_SlicingExprModel>);
inline void _1ea067d7e_traitSub(_1ea065277_exprDeadCode*, jule::Ptr<_215dc93bc_TraitSubIdentExprModel>);
inline void _1ea068104_structureSub(_1ea065277_exprDeadCode*, jule::Ptr<_215dc97da_StructSubIdentExprModel>);
inline void _1ea068379_commonSub(_1ea065277_exprDeadCode*, jule::Ptr<_215dca08d_CommonSubIdentExprModel>);
inline void _1ea0685ee_tuple(_1ea065277_exprDeadCode*, jule::Ptr<_215dca27a_TupleExprModel>);
inline void _1ea068874_newCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel>);
inline void _1ea068ae9_outCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dca467_BuiltinOutCallExprModel>);
inline void _1ea068d6e_outlnCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dca654_BuiltinOutlnCallExprModel>);
inline void _1ea0690e4_panicCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel>);
inline void _1ea069369_assertCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcae07_BuiltinAssertCallExprModel>);
inline void _1ea0695de_errorCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel>);
inline void _1ea069864_makeCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>);
inline void _1ea069ad9_appendCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel>);
inline void _1ea069d5e_lenCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel>);
inline void _1ea06a0d4_capCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel>);
inline void _1ea06a359_cloneCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dca841_BuiltinCloneCallExprModel>);
inline void _1ea06a5ce_deleteCall(_1ea065277_exprDeadCode*, jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel>);
inline void _1ea06a854_sizeof(_1ea065277_exprDeadCode*, jule::Ptr<_215dcc1e4_SizeofExprModel>);
inline void _1ea06aac9_alignof(_1ea065277_exprDeadCode*, jule::Ptr<_215dcc3d1_AlignofExprModel>);
inline void _1ea06ad4e_integratedToStr(_1ea065277_exprDeadCode*, jule::Ptr<_215dcc7aa_IntegratedToStrExprModel>);
inline void _1ea06b0c4_free(_1ea065277_exprDeadCode*, jule::Ptr<_215dccb84_FreeExprModel>);
inline void _1ea06b349_backendEmit(_1ea065277_exprDeadCode*, jule::Ptr<_215dcc997_BackendEmitExprModel>);
inline void _1ea06b5be_optimize(_1ea065277_exprDeadCode*, jule::Any*);
struct _1ea065277_exprDeadCode {
	jule::Ptr<_1ea06131c_scopeDeadCode> _field_s;
	

	_1ea065277_exprDeadCode(void) = default;

	inline bool operator==(_1ea065277_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1ea065277_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _21611662b_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_21470339b_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	_21611662b_StrCompExprModel(void) = default;

	inline bool operator==(_21611662b_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_21611662b_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _2161169e4_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_2161169e4_StrAppendExprModel(void) = default;

	inline bool operator==(_2161169e4_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_2161169e4_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _216116cd0_UnsafeBinopExprModel {
	jule::Ptr<_215dc78c6_BinopExprModel> _field_Node;
	

	_216116cd0_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_216116cd0_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_216116cd0_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _216117165_UnsafeIndexingExprModel {
	jule::Ptr<_215dc892c_IndexingExprModel> _field_Node;
	

	_216117165_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_216117165_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_216117165_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _2161174ea_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_215dc8740_SliceExprModel> _field_Elems;
	

	_2161174ea_PushToSliceExprModel(void) = default;

	inline bool operator==(_2161174ea_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_2161174ea_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _216117a39_MutSlicingExprModel {
	jule::Ptr<_22e0aa1de_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_216117a39_MutSlicingExprModel(void) = default;

	inline bool operator==(_216117a39_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_216117a39_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _216117e13_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_216117e13_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_216117e13_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_216117e13_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_216119123_scopeOptimizer> static__216119684_new(jule::Ptr<_215deb92d_Scope>);
inline void _216119909_setCurrentStmt(_216119123_scopeOptimizer*, jule::Any);
inline void _216119b7e_optimizeData(_216119123_scopeOptimizer*, jule::Ptr<_215e8e471_Data>);
inline void _216119e04_optimizeVar(_216119123_scopeOptimizer*, jule::Ptr<_215e41aa5_Var>);
inline void _21611a179_optimizeConditional(_216119123_scopeOptimizer*, jule::Ptr<_215dec489_Conditional>);
inline void _21611a564_buildDefaultConstatTrueCase(_216119123_scopeOptimizer*, jule::Ptr<_215e011c4_Case>, jule::I64*, jule::Ptr<_215e00679_Match>*);
inline void _21611a773_optimizeMatch(_216119123_scopeOptimizer*, jule::Ptr<_215e00679_Match>);
inline void _21611a9e8_optimizeRangeIter(_216119123_scopeOptimizer*, jule::Ptr<_215ded5cd_RangeIter>);
inline void _21611ac6d_optimizeWhileIter(_216119123_scopeOptimizer*, jule::Ptr<_215decbe8_WhileIter>);
inline jule::Bool _21611b07b_substr(_216119123_scopeOptimizer*, jule::Ptr<_215deec83_Assign>);
inline jule::Bool _21611b389_strInsert(_216119123_scopeOptimizer*, jule::Ptr<_215deec83_Assign>);
inline jule::Bool _21611b697_strAppend(_216119123_scopeOptimizer*, jule::Ptr<_215deec83_Assign>);
inline jule::Bool _21611b9a5_strAssign(_216119123_scopeOptimizer*, jule::Ptr<_215deec83_Assign>);
inline void _21611bc2a_optimizeAssign(_216119123_scopeOptimizer*, jule::Ptr<_215deec83_Assign>);
inline void _21611bea0_optimizeMultiAssign(_216119123_scopeOptimizer*, jule::Ptr<_215e0013a_MultiAssign>);
inline void _21611c225_optimizeRet(_216119123_scopeOptimizer*, jule::Ptr<_215e01aed_RetSt>);
inline void _21611c49a_optimizeStmt(_216119123_scopeOptimizer*, jule::Any);
inline void _21611c720_optimizeChild(_216119123_scopeOptimizer*, jule::Ptr<_215deb92d_Scope>);
inline void _21611c8eb_optimize(_216119123_scopeOptimizer*);
struct _216119123_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_215deb92d_Scope> _field_scope;
	

	_216119123_scopeOptimizer(void) = default;

	inline bool operator==(_216119123_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_216119123_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__21612004c_optimize(jule::Any*);
inline jule::Bool _21612035a_strCond(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc78c6_BinopExprModel>);
inline void _2161205d0_binary(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc78c6_BinopExprModel>);
inline void _216120855_unary(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc7ab3_UnaryExprModel>);
inline void _216120aca_structureLit(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc7e8c_StructLitExprModel>);
inline void _216120d50_allocStructure(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc8179_AllocStructLitExprModel>);
inline void _2161210c5_casting(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc8366_CastingExprModel>);
inline void _21612134a_args(_21611ea1e_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _2161215c0_scope(_21611ea1e_exprOptimizer*, jule::Ptr<_215deb92d_Scope>*);
inline void _216121845_funcCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc8553_FnCallExprModel>);
inline void _216121aba_slice(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc8740_SliceExprModel>);
inline void _216121d40_array(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc9bb4_ArrayExprModel>);
inline void _2161220b5_indexing(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc892c_IndexingExprModel>);
inline void _21612233a_anonFunc(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc8b19_AnonFnExprModel>);
inline void _2161225b0_mapExpr(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc8ee3_MapExprModel>);
inline void _216122835_slicing(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc91d0_SlicingExprModel>);
inline void _216122aaa_traitSub(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc93bc_TraitSubIdentExprModel>);
inline void _216122d30_structureSub(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc97da_StructSubIdentExprModel>);
inline void _2161230a5_commonSub(_21611ea1e_exprOptimizer*, jule::Ptr<_215dca08d_CommonSubIdentExprModel>);
inline void _21612332a_tuple(_21611ea1e_exprOptimizer*, jule::Ptr<_215dca27a_TupleExprModel>);
inline void _2161235a0_newCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel>);
inline void _216123825_outCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dca467_BuiltinOutCallExprModel>);
inline void _216123a9a_outlnCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dca654_BuiltinOutlnCallExprModel>);
inline void _216123d20_panicCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel>);
inline void _216124095_assertCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcae07_BuiltinAssertCallExprModel>);
inline void _21612431a_errorCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel>);
inline void _216124590_makeCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>);
inline void _216124815_appendCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel>);
inline void _216124a8a_lenCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel>);
inline void _216124d10_capCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel>);
inline void _216125085_cloneCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dca841_BuiltinCloneCallExprModel>);
inline void _21612530a_deleteCall(_21611ea1e_exprOptimizer*, jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel>);
inline void _216125580_sizeof(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcc1e4_SizeofExprModel>);
inline void _216125805_alignof(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcc3d1_AlignofExprModel>);
inline void _216125a7a_integratedToStr(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcc7aa_IntegratedToStrExprModel>);
inline void _216125d00_free(_21611ea1e_exprOptimizer*, jule::Ptr<_215dccb84_FreeExprModel>);
inline void _216126075_backendEmit(_21611ea1e_exprOptimizer*, jule::Ptr<_215dcc997_BackendEmitExprModel>);
inline void _216126251_do(_21611ea1e_exprOptimizer*);
struct _21611ea1e_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_21611ea1e_exprOptimizer(void) = default;

	inline bool operator==(_21611ea1e_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_21611ea1e_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e9e622d9_Optimizer> static__1e9e819e0_New(jule::Ptr<_22e2caed1_IR>*);
inline void _1e9e8ee60_optimizeGlobal(_1e9e622d9_Optimizer*, jule::Ptr<_215e41aa5_Var>*);
inline void _1e9ebe027_optimizeFunction(_1e9e622d9_Optimizer*, jule::Ptr<_215dcd24a_Fn>*);
inline void _1e9ecd80b_optimizeStruct(_1e9e622d9_Optimizer*, jule::Ptr<_215dc6cd2_Struct>*);
inline void _1e9ed6a12_optimizeGlobals(_1e9e622d9_Optimizer*, jule::Ptr<_215e1d08c_Package>*);
inline void _1e9ee6758_optimizeFunctions(_1e9e622d9_Optimizer*, jule::Ptr<_215e1d08c_Package>*);
inline void _1e9ee7e96_optimizeStructs(_1e9e622d9_Optimizer*, jule::Ptr<_215e1d08c_Package>*);
inline void _1e9e93507_optimizePackage(_1e9e622d9_Optimizer*, jule::Ptr<_215e1d08c_Package>*);
inline void _1e9ec1d60_Optimize(_1e9e622d9_Optimizer*);
struct _1e9e622d9_Optimizer {
	jule::Ptr<_22e2caed1_IR> _field_ir;
	

	_1e9e622d9_Optimizer(void) = default;

	inline bool operator==(_1e9e622d9_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1e9e622d9_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1ea06d36d_Reset(void);
inline void static__1ea06e46d_Print(jule::Str, jule::Str);
struct _1ea06e281_AnsiEscape {
	

	_1ea06e281_AnsiEscape(void) = default;

	inline bool operator==(_1ea06e281_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ea06e281_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1ea070a02_LogFlat(_22dbec89d_Log*);
inline void static__1ea070c11_LogError(_22dbec89d_Log*);
inline void static__1ea070e20_Log(_22dbec89d_Log*);
inline void static__1ea07112e_PrintLogs(jule::Slice<_22dbec89d_Log>*);
struct _1ea07076b_Logger {
	

	_1ea07076b_Logger(void) = default;

	inline bool operator==(_1ea07076b_Logger _other) { return true; }

	inline bool operator!=(_1ea07076b_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1ea71b301_Unix(_1ea71ae49_AbsTime*);
struct _1ea71ae49_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1ea71ae49_AbsTime(void) = default;

	inline bool operator==(_1ea71ae49_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ea71ae49_AbsTime _other) { return !this->operator==(_other); }


};
inline _1ea71b5dc_Time static__1ea71b983_Unix(jule::U64);
inline _1ea71b5dc_Time static__1ea71bb81_Now(void);
inline jule::U64 _1ea71c0d2_Unix(_1ea71b5dc_Time*);
inline jule::U64 _1ea71c346_Day(_1ea71b5dc_Time*);
inline jule::U64 _1ea71c5aa_Month(_1ea71b5dc_Time*);
inline jule::U64 _1ea71c81e_Year(_1ea71b5dc_Time*);
inline jule::U64 _1ea71ca83_Second(_1ea71b5dc_Time*);
inline jule::U64 _1ea71cce7_Minute(_1ea71b5dc_Time*);
inline jule::U64 _1ea71d05b_Hour(_1ea71b5dc_Time*);
inline _1ea71ae49_AbsTime _1ea71d2c0_Abs(_1ea71b5dc_Time*);
struct _1ea71b5dc_Time {
	jule::U64 _field_sec = 0;
	

	_1ea71b5dc_Time(void) = default;

	inline bool operator==(_1ea71b5dc_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ea71b5dc_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea661059_scopeCoder> static__1ea661697_new(jule::Ptr<_1ea723407_ObjectCoder>*);
inline void _20c0423b8_iterHead(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215ded5cd_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1ea661cd5_rangeIndexIter(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215ded5cd_RangeIter>*);
inline void _1ea66205a_rangeHashmapIter(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215ded5cd_RangeIter>*);
inline void _1ea6622d0_ifCase(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215debd29_If>);
inline void _1ea662555_conditional(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dec489_Conditional>);
inline void _1ea6627ca_infIter(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dec775_InfIter>);
inline void _1ea662a50_whileIter(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215decbe8_WhileIter>);
inline void _1ea662cc5_rangeIter(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215ded5cd_RangeIter>);
inline void _1ea66304a_cont(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215ded9c9_ContSt>);
inline void _1ea6632c0_label(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dee16c_Label>);
inline void _1ea663545_gotoSt(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dee458_GotoSt>);
inline void _1ea6637ba_postfix(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dee810_Postfix>);
inline void _1ea663a40_assign(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215deec83_Assign>);
inline void _1ea663cb5_mapLookupAssign(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e0013a_MultiAssign>*);
inline void _1ea66403a_multiAssignTup(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e0013a_MultiAssign>*);
inline void _1ea6642b0_multiAssignFn(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e0013a_MultiAssign>*);
inline void _1ea664535_multiAssign(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e0013a_MultiAssign>);
inline jule::Fn<void(void)> _1ea664843_matchExpr(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e00679_Match>);
inline void _1ea664b62_case(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e00679_Match>, jule::Ptr<_215e011c4_Case>);
inline void _1ea664dd7_matchSt(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e00679_Match>);
inline void _1ea66515c_fallSt(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e01779_FallSt>);
inline void _1ea6653d2_breakSt(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dedd81_BreakSt>);
inline void _1ea665657_setResult(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e01aed_RetSt>);
inline void _1ea6658cc_retSt(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e01aed_RetSt>);
inline void _1ea665b52_var(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215e41aa5_Var>);
inline void _1ea665dc7_strAppend(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_2161169e4_StrAppendExprModel>);
inline void _1ea66614c_st(jule::Ptr<_1ea661059_scopeCoder>, jule::Any);
inline void _1ea6663c2_scopeStmts(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215deb92d_Scope>*);
inline void _1ea666647_scope(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215deb92d_Scope>);
inline void _1ea6668bc_funcScope(jule::Ptr<_1ea661059_scopeCoder>, jule::Ptr<_215dcea10_FnIns>);
struct _1ea661059_scopeCoder {
	jule::Ptr<_1ea723407_ObjectCoder> _field_oc;
	

	_1ea661059_scopeCoder(void) = default;

	inline bool operator==(_1ea661059_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ea661059_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea6694a2_exprCoder> static__1ea66989d_new(jule::Ptr<_1ea723407_ObjectCoder>*);
inline void _1ea669b23_string(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_21470339b_Const>*);
inline void _1ea669d98_boolean(jule::Ptr<_1ea6694a2_exprCoder>, jule::Bool);
inline void _1ea66a074_nilLit(jule::Ptr<_1ea6694a2_exprCoder>);
inline jule::Bool _1ea66a382_ftoaSpecialCases(jule::Ptr<_1ea6694a2_exprCoder>, jule::F64*);
inline void _1ea66a607_float32(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_21470339b_Const>*);
inline void _1ea66a87c_float64(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_21470339b_Const>*);
inline void _1ea66ab02_constant(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_21470339b_Const>);
inline void _1ea66aeba_divByZeroBinary(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_22e0aa1de_Token>*, jule::Ptr<_215dc76d9_OperandExprModel>*, jule::Ptr<_215dc76d9_OperandExprModel>*);
inline void _1ea66b240_unsafeBinary(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc78c6_BinopExprModel>);
inline void _1ea66b4b5_binary(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc78c6_BinopExprModel>);
inline void _1ea66b73a_var(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215e41aa5_Var>);
inline void _1ea66b9b0_structureIns(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc71ab_StructIns>);
inline void _1ea66bc35_unary(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc7ab3_UnaryExprModel>);
inline void _1ea66beaa_structureLit(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc7e8c_StructLitExprModel>);
inline void _1ea66c230_allocStructure(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8179_AllocStructLitExprModel>);
inline void _1ea66c4a5_possibleRefExpr(jule::Ptr<_1ea6694a2_exprCoder>, jule::Any);
inline void _1ea66c72a_casting(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8366_CastingExprModel>);
inline void _1ea66c9a0_models(jule::Ptr<_1ea6694a2_exprCoder>, jule::Slice<jule::Any>);
inline void _1ea66cc25_args(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8553_FnCallExprModel>*);
inline void _1ea66ce9a_modelForCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Any);
inline void _1ea66d220_pushCallInf(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8553_FnCallExprModel>*);
inline jule::Bool _1ea66d52d_isWrapped(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8553_FnCallExprModel>*);
inline void _1ea66d7a3_pureFuncCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8553_FnCallExprModel>*);
inline void _1ea66da28_coFuncCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8553_FnCallExprModel>*);
inline void _1ea66dd47_writeUseExpr(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcea10_FnIns>*, jule::Ptr<_215e8e471_Data>);
inline void _1ea66e0bc_funcCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8553_FnCallExprModel>);
inline void _1ea66e342_slice(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8740_SliceExprModel>);
inline void _1ea66e5b7_indexing(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc892c_IndexingExprModel>);
inline void _1ea66e83c_unsafeIndexing(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_216117165_UnsafeIndexingExprModel>);
inline void _1ea66eab2_anonFunc(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8b19_AnonFnExprModel>);
inline void _1ea66ed37_mapExpr(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc8ee3_MapExprModel>);
inline void _1ea6700ac_slicing(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc91d0_SlicingExprModel>);
inline void _1ea670332_traitSub(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc93bc_TraitSubIdentExprModel>);
inline void _1ea6705a7_structureSub(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc97da_StructSubIdentExprModel>);
inline void _1ea67082c_commonIdent(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc9da1_CommonIdentExprModel>);
inline void _1ea670aa2_commonSub(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dca08d_CommonSubIdentExprModel>);
inline void _1ea670d27_array(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc9bb4_ArrayExprModel>);
inline void _1ea67109c_funcInsCommon(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcea10_FnIns>);
inline void _1ea671322_funcIns(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcea10_FnIns>);
inline void _1ea671597_tuple(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dca27a_TupleExprModel>);
inline void _1ea67181c_newCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel>);
inline void _1ea671a92_outCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dca467_BuiltinOutCallExprModel>);
inline void _1ea671d17_outlnCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dca654_BuiltinOutlnCallExprModel>);
inline void _1ea67208c_panicCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel>);
inline void _1ea672312_assertCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcae07_BuiltinAssertCallExprModel>);
inline void _1ea672587_errorCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel>);
inline void _1ea67280c_copyCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcbd1a_BuiltinCopyCallExprModel>);
inline void _1ea672a82_lenCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel>);
inline void _1ea672d07_capCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel>);
inline void _1ea67307c_deleteCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel>);
inline void _1ea673302_makeCallSlice(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>*);
inline void _1ea673577_makeCallStr(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>*);
inline void _1ea6737ec_makeCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>);
inline void _1ea673a72_pushToSlice(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_2161174ea_PushToSliceExprModel>);
inline void _1ea673ce7_appendCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel>);
inline void _1ea67406c_cloneCall(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dca841_BuiltinCloneCallExprModel>);
inline void _1ea6742e2_sizeof(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcc1e4_SizeofExprModel>);
inline void _1ea674567_alignof(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcc3d1_AlignofExprModel>);
inline jule::Str _1ea674875_runeLit(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcc5bd_RuneExprModel>);
inline void _1ea674aea_structureStatic(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dc99c7_StructStaticIdentExprModel>);
inline void _1ea674d70_integratedToStr(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcc7aa_IntegratedToStrExprModel>);
inline void _1ea6750e5_backendEmit(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dcc997_BackendEmitExprModel>);
inline void _1ea67536a_free(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215dccb84_FreeExprModel>);
inline void _1ea6755e0_mutSlicing(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_216117a39_MutSlicingExprModel>);
inline void _1ea675865_strInsertBegin(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_216117e13_StrInsertBeginExprModel>);
inline void _1ea675ada_strComp(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_21611662b_StrCompExprModel>);
inline void _1ea675d60_model(jule::Ptr<_1ea6694a2_exprCoder>, jule::Any);
inline void _1ea6760d5_initExpr(jule::Ptr<_1ea6694a2_exprCoder>, jule::Ptr<_215eba403_TypeKind>);
struct _1ea6694a2_exprCoder {
	jule::Ptr<_1ea723407_ObjectCoder> _field_oc;
	

	_1ea6694a2_exprCoder(void) = default;

	inline bool operator==(_1ea6694a2_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ea6694a2_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea678879_deriveCoder> static__1ea678c64_new(jule::Ptr<_1ea723407_ObjectCoder>);
inline jule::Str _1ea679072_cloneFuncDecl(_1ea678879_deriveCoder*, jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Str _1ea679380_cloneFuncDef(_1ea678879_deriveCoder*, jule::Ptr<_215dc6cd2_Struct>*);
struct _1ea678879_deriveCoder {
	jule::Ptr<_1ea723407_ObjectCoder> _field_oc;
	

	_1ea678879_deriveCoder(void) = default;

	inline bool operator==(_1ea678879_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ea678879_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea67a260_TestCoder> static__1ea67a6d3_New(jule::Ptr<_1ea723407_ObjectCoder>*);
inline jule::Ptr<_215e1a133_ImportInfo> _1ea67a947_findTestingPackage(jule::Ptr<_1ea67a260_TestCoder>);
inline void _1ea67abbc_appendTest(jule::Ptr<_1ea67a260_TestCoder>, jule::Ptr<_215dcea10_FnIns>);
inline void _1ea67ae42_appendPackageTests(jule::Ptr<_1ea67a260_TestCoder>, jule::Ptr<_215e1d08c_Package>*);
inline jule::Bool _1ea67b1a6_readyTestingPackage(jule::Ptr<_1ea67a260_TestCoder>);
inline void _1ea67b382_callTmReset(jule::Ptr<_1ea67a260_TestCoder>);
inline void _1ea67b55d_callTmFailed(jule::Ptr<_1ea67a260_TestCoder>);
inline void _1ea67b739_callTmSkipped(jule::Ptr<_1ea67a260_TestCoder>);
inline void _1ea67b915_Serialize(jule::Ptr<_1ea67a260_TestCoder>);
struct _1ea67a260_TestCoder {
	jule::Ptr<_215dc71ab_StructIns> _field_t;
	jule::Ptr<_215dcd24a_Fn> _field_tmReset;
	jule::Ptr<_215dcd24a_Fn> _field_tmFailed;
	jule::Ptr<_215dcd24a_Fn> _field_tmSkipped;
	jule::Ptr<_1ea723407_ObjectCoder> _field_oc;
	

	_1ea67a260_TestCoder(void) = default;

	inline bool operator==(_1ea67a260_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ea67a260_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1ea67cd78_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1ea67d263_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1ea67d50a_func(jule::Ptr<_215dcd24a_Fn>*);
inline jule::Str static__1ea67d7a2_funcIns(jule::Ptr<_215dcea10_FnIns>*);
inline jule::Str static__1ea67da49_traitDecl(jule::Ptr<_215dddc1c_Trait>);
inline jule::Str static__1ea67dce1_param(jule::Ptr<_215dcd05d_Param>*);
inline jule::Str static__1ea67e088_structure(jule::Ptr<_215dc6cd2_Struct>*);
inline jule::Str static__1ea67e330_structureIns(jule::Ptr<_215dc71ab_StructIns>*);
inline jule::Str static__1ea67e5c7_field(jule::Ptr<_215d9ad3e_Field>*);
inline jule::Str static__1ea67e86e_var(jule::Ptr<_215e41aa5_Var>);
inline jule::Str static__1ea67eb16_iterBegin(jule::Uintptr);
inline jule::Str static__1ea67edad_iterEnd(jule::Uintptr);
inline jule::Str static__1ea680155_iterNext(jule::Uintptr);
inline jule::Str static__1ea6803ec_label(jule::Str*);
inline jule::Str static__1ea680694_matchEnd(jule::Uintptr);
inline jule::Str static__1ea68093b_caseBegin(jule::Uintptr);
struct _1ea67c7a1_identCoder {
	

	_1ea67c7a1_identCoder(void) = default;

	inline bool operator==(_1ea67c7a1_identCoder _other) { return true; }

	inline bool operator!=(_1ea67c7a1_identCoder _other) { return !this->operator==(_other); }


};
struct _1ea6b0152_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1ea6b0152_SerializationInfo(void) = default;

	inline bool operator==(_1ea6b0152_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ea6b0152_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ea685666_traitHash {
	jule::Ptr<_215dddc1c_Trait> _field_t;
	jule::Ptr<_215dc71ab_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1ea685666_traitHash(void) = default;

	inline bool operator==(_1ea685666_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ea685666_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1ea729243_Str(_1ea728e8a_customType*);
inline jule::Bool _1ea729551_Equal(jule::Ptr<_1ea728e8a_customType>, jule::Ptr<_215eba403_TypeKind>);
struct _1ea728e8a_customType {
	jule::Str _field_kind;
	

	_1ea728e8a_customType(void) = default;

	inline bool operator==(_1ea728e8a_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ea728e8a_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea729908_typeCoder> static__1ea729e47_new(jule::Ptr<_1ea723407_ObjectCoder>*);
inline jule::Str _1ea72a255_toType(_1ea729908_typeCoder*, jule::Str);
inline jule::Str _1ea72a563_prim(_1ea729908_typeCoder*, jule::Ptr<_215ec0150_Prim>);
inline jule::Str _1ea72a871_tuple(_1ea729908_typeCoder*, jule::Ptr<_215ec4dbe_Tuple>);
inline jule::Str _1ea72ab7e_asSptr(_1ea729908_typeCoder*, jule::Str);
inline jule::Str _1ea72ae8c_asPtr(_1ea729908_typeCoder*, jule::Str);
inline jule::Str _1ea72b29a_sptr(_1ea729908_typeCoder*, jule::Ptr<_215ec38d4_Sptr>);
inline jule::Str _1ea72b5a8_ptr(_1ea729908_typeCoder*, jule::Ptr<_215ec6e48_Ptr>);
inline jule::Str _1ea72b8b6_enumDecl(_1ea729908_typeCoder*, jule::Ptr<_215de0d62_Enum>);
inline jule::Str _1ea72bbc4_typeEnumDecl(_1ea729908_typeCoder*, jule::Ptr<_215de245c_TypeEnum>);
inline jule::Str _1ea72bed2_asSlice(_1ea729908_typeCoder*, jule::Ptr<_215eba403_TypeKind>);
inline jule::Str _1ea72c2e0_slice(_1ea729908_typeCoder*, jule::Ptr<_215ec4341_Slc>);
inline jule::Str _1ea72c5ed_mapType(_1ea729908_typeCoder*, jule::Ptr<_215ec58e7_Map>);
inline jule::Str _1ea72c90b_traitIdent(_1ea729908_typeCoder*, jule::Str);
inline jule::Str _1ea72cc19_traitDecl(_1ea729908_typeCoder*, jule::Ptr<_215dddc1c_Trait>);
inline jule::Str _1ea72d027_structure(_1ea729908_typeCoder*, jule::Ptr<_215dc6cd2_Struct>);
inline jule::Str _1ea72d335_structureIns(_1ea729908_typeCoder*, jule::Ptr<_215dc71ab_StructIns>);
inline jule::Str _1ea72d643_array(_1ea729908_typeCoder*, jule::Ptr<_215ec64db_Arr>);
inline jule::Str _1ea72dc5e_paramIns(_1ea729908_typeCoder*, jule::Ptr<_215dcdb41_ParamIns>*);
inline void _1ea72e38b_funcInsResult(_1ea729908_typeCoder*, jule::Str*, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Str _1ea72e699_anonFunc(_1ea729908_typeCoder*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Str _1ea72e9a7_func(_1ea729908_typeCoder*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Str _1ea72ecb5_kind(_1ea729908_typeCoder*, jule::Ptr<_215eba403_TypeKind>);
struct _1ea729908_typeCoder {
	jule::Ptr<_1ea723407_ObjectCoder> _field_oc;
	jule::Ptr<_1ea7321e6_resultCoder> _field_rc;
	

	_1ea729908_typeCoder(void) = default;

	inline bool operator==(_1ea729908_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ea729908_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea7321e6_resultCoder> static__1ea732702_new(jule::Ptr<_1ea729908_typeCoder>*);
inline void _1ea732a21_ptr(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215ec6e48_Ptr>);
inline void _1ea732d40_sptr(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215ec38d4_Sptr>);
inline void _1ea73315e_mapType(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215ec58e7_Map>);
inline void _1ea73347d_slice(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215ec4341_Slc>);
inline void _1ea73379c_arr(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215ec64db_Arr>);
inline void _1ea733abb_func(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215dcea10_FnIns>);
inline void _1ea733dda_tup(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215ec4dbe_Tuple>);
inline void _1ea734209_codeMut(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215eba403_TypeKind>*);
inline void _1ea734528_codeMut1(_1ea7321e6_resultCoder*, jule::Str*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Str _1ea734803_code(_1ea7321e6_resultCoder*, jule::Ptr<_215eba403_TypeKind>*);
struct _1ea7321e6_resultCoder {
	jule::Ptr<_1ea729908_typeCoder> _field_tc;
	

	_1ea7321e6_resultCoder(void) = default;

	inline bool operator==(_1ea7321e6_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1ea7321e6_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _20c3cd479_Name(_20c3cd18d_Flag*);
inline jule::Str _20c3cd5ab_What(_20c3cd18d_Flag*);
inline void _20c3cd6dd_Reset(_20c3cd18d_Flag*);
inline jule::I32 _20c3cd831_Short(_20c3cd18d_Flag*);
struct _20c3cd18d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_20c3cd18d_Flag(void) = default;

	inline bool operator==(_20c3cd18d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20c3cd18d_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20c3d1889_Name(_20c3d1ceb_Flag*);
inline jule::Str _20c3d20d7_What(_20c3d1ceb_Flag*);
inline void _20c3d2219_Reset(_20c3d1ceb_Flag*);
inline jule::I32 _20c3d234b_Short(_20c3d1ceb_Flag*);
struct _20c3d1ceb_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_20c3d1ceb_Flag(void) = default;

	inline bool operator==(_20c3d1ceb_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20c3d1ceb_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20c3d5151_Name(_20c3d55b3_Flag*);
inline jule::Str _20c3d589e_What(_20c3d55b3_Flag*);
inline void _20c3d59d1_Reset(_20c3d55b3_Flag*);
inline jule::I32 _20c3d5b13_Short(_20c3d55b3_Flag*);
struct _20c3d55b3_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_20c3d55b3_Flag(void) = default;

	inline bool operator==(_20c3d55b3_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20c3d55b3_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20c3d895c_Name(_20c3d8dbe_Flag*);
inline jule::Str _20c3d91aa_What(_20c3d8dbe_Flag*);
inline void _20c3d92dc_Reset(_20c3d8dbe_Flag*);
inline jule::I32 _20c3d941e_Short(_20c3d8dbe_Flag*);
struct _20c3d8dbe_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_20c3d8dbe_Flag(void) = default;

	inline bool operator==(_20c3d8dbe_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20c3d8dbe_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _20c3dc224_Name(_20c3dc686_Flag*);
inline jule::Str _20c3dc972_What(_20c3dc686_Flag*);
inline void _20c3dcaa4_Reset(_20c3dc686_Flag*);
inline jule::I32 _20c3dcbd6_Short(_20c3dc686_Flag*);
struct _20c3dc686_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_20c3dc686_Flag(void) = default;

	inline bool operator==(_20c3dc686_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_20c3dc686_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ea77a591_FlagSet> static__1ea77a87c_New(void);
inline jule::Trait<_1ea778b22_CommonFlag> _1ea77ad11_FindFlag(_1ea77a591_FlagSet*, jule::Str);
inline jule::Trait<_1ea778b22_CommonFlag> _1ea77b11e_FindFlagShort(_1ea77a591_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1ea778b22_CommonFlag>> _1ea77b383_Flags(_1ea77a591_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ea77b691_Parse(_1ea77a591_FlagSet*, jule::Slice<jule::Str>);
inline void _1ea77b86c_Reset(_1ea77a591_FlagSet*);
inline jule::Ptr<_20c3dc686_Flag> _20c45cea9_addFlagCommon(_1ea77a591_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_20c3d8dbe_Flag> _20c4667ed_addFlagCommon(_1ea77a591_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _20c45ae41_AddVar(_1ea77a591_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _20c4647b8_AddVar(_1ea77a591_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1ea77a591_FlagSet {
	jule::Slice<jule::Trait<_1ea778b22_CommonFlag>> _field_flags;
	

	_1ea77a591_FlagSet(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _20c4009a7_parseInteger(_1ea77cc69_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _20c408a7b_parseInteger(_1ea77cc69_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1ea77d561_getData(_1ea77cc69_argParser*);
inline jule::VoidExceptional _1ea77d7a3_processFlag(_1ea77cc69_argParser*, jule::Trait<_1ea778b22_CommonFlag>*);
inline jule::VoidExceptional _1ea77da28_singleDash(_1ea77cc69_argParser*, jule::Str*);
inline jule::VoidExceptional _1ea77dc9d_doubleDash(_1ea77cc69_argParser*, jule::Str*);
inline jule::VoidExceptional _1ea77de79_tryArg(_1ea77cc69_argParser*);
inline jule::VoidExceptional _1ea77e155_parse(_1ea77cc69_argParser*);
struct _1ea77cc69_argParser {
	_1ea77a591_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1ea77cc69_argParser(void) = default;


};
inline jule::Ptr<_1ea723407_ObjectCoder> static__1ea684b4e_New(jule::Ptr<_22e2caed1_IR>*, _1ea6b0152_SerializationInfo);
inline void _1ea6a5037_write(jule::Ptr<_1ea723407_ObjectCoder>, jule::Str);
inline void _1ea6e906a_addIndent(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea6e9587_doneIndent(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea6ecada_indent(jule::Ptr<_1ea723407_ObjectCoder>);
inline jule::I64 _1ea703abe_findAnyType(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215eba403_TypeKind>*);
inline jule::I64 _1ea6a9635_pushAnyType(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215eba403_TypeKind>*);
inline void _1ea6a8865_pushResultIns(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dcea10_FnIns>*);
inline void _1ea6eb534_pushResult(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dcd24a_Fn>*);
inline jule::I64 _1ea6853be_findTypeOffset(_1ea723407_ObjectCoder*, jule::Ptr<_215dddc1c_Trait>, jule::Ptr<_215eba403_TypeKind>);
inline void _1ea723a01_locInfo(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_22e0aa1de_Token>*);
inline void _1ea723b33_head(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea723c65_links(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea723d97_prepareStructure(_1ea723407_ObjectCoder*, jule::Ptr<_215dc6cd2_Struct>*);
inline void _1ea723ec9_prepareStructures(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea72410b_iterPackages(jule::Ptr<_1ea723407_ObjectCoder>, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>);
inline void _1ea72423d_buildTraitMap(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea724370_traitDecls(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea7244a2_structurePlainDecl(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc6cd2_Struct>*);
inline void _1ea7245d4_structurePlainDecls(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea724716_fieldDecl(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc6ebe_FieldIns>*);
inline void _1ea724848_structureDestructor(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea72497a_structureDeriveDefsDecls(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea724aac_structureOperatorEq(jule::Ptr<_1ea723407_ObjectCoder>, jule::Str*, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea724bde_structureOperatorNotEq(jule::Ptr<_1ea723407_ObjectCoder>, jule::Str*, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea724d21_structureOperator(jule::Ptr<_1ea723407_ObjectCoder>, jule::Str*, jule::Ptr<_215dcea10_FnIns>*, jule::Str);
inline void _1ea724e53_structureOperators(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea725085_structureInsDecl(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea7251b7_structureDecl(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc6cd2_Struct>*);
inline void _1ea7252e9_structureDecls(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea72542b_paramsDecls(jule::Ptr<_1ea723407_ObjectCoder>, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>*);
inline void _1ea72555d_funcHead(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dcea10_FnIns>*, jule::Bool);
inline void _1ea725690_funcDecl(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dcd24a_Fn>*, jule::Bool);
inline void _1ea7257c2_funcDecls(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea725904_traitDataTypes(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea725a36_paramIns(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dcdb41_ParamIns>*);
inline void _1ea725b68_paramsIns(jule::Ptr<_1ea723407_ObjectCoder>, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>*);
inline void _1ea725c9a_varInitExpr(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215e41aa5_Var>*, jule::Fn<void(void)>);
inline void _1ea725dcc_var(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215e41aa5_Var>);
inline void _1ea72600e_func(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dcd24a_Fn>*);
inline void _1ea726141_traitWrappers(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea726273_traitDatas(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea7263a5_globals(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea7264d7_decls(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea726619_structureMethods(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea72674b_structureDeriveDefs(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea72687d_structureOstream(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea726a48_structureIns(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc71ab_StructIns>*);
inline void _1ea726cbd_structure(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215dc6cd2_Struct>*);
inline void _1ea726e99_structures(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea727175_funcs(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea7273ea_pushInit(jule::Ptr<_1ea723407_ObjectCoder>, jule::Ptr<_215e1d08c_Package>*);
inline void _1ea7275c6_initCaller(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea7277a2_end(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea72797d_serializeHead(jule::Ptr<_1ea723407_ObjectCoder>);
inline void _1ea727b59_Serialize(jule::Ptr<_1ea723407_ObjectCoder>);
struct _1ea723407_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_22e2caed1_IR> _field_ir;
	_1ea6b0152_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ea685666_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1ea6694a2_exprCoder> _field_ec;
	jule::Ptr<_1ea661059_scopeCoder> _field_sc;
	jule::Ptr<_1ea729908_typeCoder> _field_tc;
	jule::Ptr<_1ea678879_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1ea723407_ObjectCoder(void) = default;


};
inline jule::Ptr<_1ea02a913_ObjectDeadCode> static__1ea02addb_new(jule::Ptr<_22e2caed1_IR>*);
inline jule::Bool _20bcec96a_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dddc1c_Trait>*);
inline jule::Bool _20bd026a6_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Bool _20bd0a25d_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dc71ab_StructIns>*);
inline jule::Bool _20bd10c47_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215e41aa5_Var>*);
inline void _20bceccbc_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dddc1c_Trait>);
inline void _20bd0329a_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dcea10_FnIns>);
inline void _20bd09548_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dc71ab_StructIns>);
inline void _20bd11099_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215e41aa5_Var>);
inline void _1ea05d0b6_setReferencesAsLive(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215dd2969_ReferenceStack>*);
inline void _1ea05d33b_inits(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215e1d08c_Package>*);
inline void _1ea05d5b1_collectLivePackage(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215e1d08c_Package>*);
inline void _1ea05d78c_collectLive(jule::Ptr<_1ea02a913_ObjectDeadCode>);
inline void _1ea05da12_removeDeadGlobals(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Slice<jule::Ptr<_215e41aa5_Var>>*);
inline void _1ea05dc87_removeDeadFns(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Slice<jule::Ptr<_215dcd24a_Fn>>*);
inline void _1ea05e00c_removeDeadStructs(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Slice<jule::Ptr<_215dc6cd2_Struct>>*);
inline void _1ea05e282_removeDeadTraits(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Slice<jule::Ptr<_215dddc1c_Trait>>*);
inline void _1ea05e507_removeDeadsFile(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215e89647_SymbolTable>*);
inline void _1ea05e77c_removeDeadsPackage(jule::Ptr<_1ea02a913_ObjectDeadCode>, jule::Ptr<_215e1d08c_Package>*);
inline void _1ea05e958_removeDeads(jule::Ptr<_1ea02a913_ObjectDeadCode>);
inline void _1ea05eb34_elimanate(jule::Ptr<_1ea02a913_ObjectDeadCode>);
struct _1ea02a913_ObjectDeadCode {
	_1ea02a616_liveTable _field_live;
	jule::Ptr<_22e2caed1_IR> _field_ir;
	

	_1ea02a913_ObjectDeadCode(void) = default;


};
inline __jule_tuple_x_22e2caed1_IR__jule_tuple_s_22dbec89d_Log static__1e9c9dec2_Build(jule::Str, jule::I64);
inline void _1e9cc1654_appendStructs(_22e2caed1_IR*, jule::Ptr<_215e1d08c_Package>*, jule::Slice<jule::Ptr<_215dc6cd2_Struct>>*);
inline jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _1e9cd11be_GetAllStructures(_22e2caed1_IR*);
inline void _1e9d1e3d8_appendGlobals(_22e2caed1_IR*, jule::Ptr<_215e1d08c_Package>*, jule::Slice<jule::Ptr<_215e41aa5_Var>>*);
inline jule::Slice<jule::Ptr<_215e41aa5_Var>> _1e9d33265_GetAllGlobals(_22e2caed1_IR*);
inline void _1e9d5c49d_Order(_22e2caed1_IR*);
struct _22e2caed1_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_215e1d08c_Package> _field_Main;
	jule::Slice<jule::Ptr<_215e1a133_ImportInfo>> _field_Used;
	_22e371917_OrderedDefines _field_Ordered;
	

	_22e2caed1_IR(void) = default;


};
inline jule::Str _215d9ca11_Str(_215dc71ab_StructIns*);
inline jule::Bool _215d9db66_Equal(jule::Ptr<_215dc71ab_StructIns>, jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215da0eba_Same(_215dc71ab_StructIns*, jule::Ptr<_215dc71ab_StructIns>);
inline jule::Ptr<_215dcd24a_Fn> _215da22da_FindMethod(_215dc71ab_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6ebe_FieldIns> _215d84256_FindField(_215dc71ab_StructIns*, jule::Str);
inline jule::Ptr<_215e41aa5_Var> _215d90273_FindStatic(_215dc71ab_StructIns*, jule::Str);
struct _215dc71ab_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_215dc6cd2_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_215eb8bc6_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_215dc6ebe_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_215dcd24a_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_215dd2969_ReferenceStack> _field_Refers;
	_215da3484_Operators _field_Operators;
	

	_215dc71ab_StructIns(void) = default;


};
inline jule::Ptr<_22dc83956_Cmd> static__22dc83da7_New(jule::Str);
inline jule::VoidExceptional _22dc84083_Spawn(_22dc83956_Cmd*);
inline jule::VoidExceptional _22dc8425e_Kill(_22dc83956_Cmd*);
inline jule::Exceptional<jule::I64> _22dc844c3_Wait(_22dc83956_Cmd*);
inline jule::VoidExceptional _22dcbc275_spawn(_22dc83956_Cmd*);
inline jule::VoidExceptional _22dcbc451_kill(_22dc83956_Cmd*);
inline jule::Exceptional<jule::I64> _22dcbc6b5_wait(_22dc83956_Cmd*);
struct _22dc83956_Cmd {
	_22dcbb609_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_22dc83956_Cmd(void) = default;


};
inline void _22ca739bc_Free(void*);
inline jule::Str _22ca881eb_BytePtrToStr(jule::U8*);
inline jule::I64 _22bcb9582_GetLastErrno(void);
inline jule::I64 _22caa68ac_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _22caa6bed_Stat(jule::U8*, struct stat*);
inline jule::I64 _22caa70d8_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _22caa7429_Getcwd(jule::U8*, jule::U64);
inline DIR* _22caa7902_Opendir(jule::U8*);
inline struct dirent* _22caa7b99_Readdir(DIR*);
inline jule::I64 _22caa7e41_Closedir(DIR*);
inline jule::I64 _22caa87c1_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _22caa8a68_Rmdir(jule::U8*);
inline jule::I64 _22caa8d10_Unlink(jule::U8*);
inline jule::I64 _22cab9507_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _22cab98e2_Read(jule::I64, void*, jule::U64);
inline jule::I64 _22cab9c66_Close(jule::I64);
inline jule::I64 _22caba151_Write(jule::I64, void*, jule::U64);
inline void _22caba360_Exit(jule::I64);
inline jule::Slice<jule::U8> _22bd10188_Stobs(jule::Str*);
inline void _22bcdde8b_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline jule::I64 _22cb738e1_getLastOsError(void);
inline jule::Slice<jule::Str> _22cb74914_Args(void);
inline jule::Exceptional<jule::Str> _22cb74d87_WorkingDir(void);
inline jule::Exceptional<jule::Str> _22cb7574a_getwd(void);
inline jule::Bool _22da1d416_IsLetter(jule::I32);
inline jule::Bool _22da8ac47_is16(jule::Slice<_22da89185_Range16>, jule::U16);
inline jule::Bool _22da8b088_is32(jule::Slice<_22da89608_Range32>, jule::U32);
inline jule::Bool _22da8b82a_isExcludingLatin(jule::Ptr<_22da89a7b_RangeTable>, jule::I32);
inline jule::Bool _22da8bac2_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _22db4b720_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _22db4ba3e_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _22db4bcd6_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _22db4ca84_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _22db4cdc5_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _22db4d414_RuneCountStr(jule::Str);
inline jule::Bool _22db4d6ab_RuneStart(jule::U8);
inline jule::I64 _22db7ae9c_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _22db7b123_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _22db6a6d9_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _22db6aa2a_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _22db52d86_Repeat(jule::Str, jule::I64);
inline jule::Bool _22db56241_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _22db524c3_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _22db6ab90_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _22db6ae48_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _22db6b333_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _22db6bb6e_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _22db6beb0_FindLast(jule::Str, jule::Str);
inline jule::I64 _22db6d258_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _22db6da94_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _22db6e8a8_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _22db700d4_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _22db70425_Contains(jule::Str, jule::Str);
inline jule::Bool _22db70de8_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _22db71239_Count(jule::Str, jule::Str);
inline jule::Str _22db716bd_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _22db6d731_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _22db72779_TrimLeft(jule::Str, jule::Str);
inline void _22db72a32_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _22db731b4_Trim(jule::Str, jule::Str);
inline jule::Str _22db73505_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _22cbd20ae_Clean(jule::Str);
inline jule::Str _22cc018e7_FromSlash(jule::Str);
inline jule::Str _22cc03e8d_Join(jule::Slice<jule::Str>);
inline jule::Str _22cc05456_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22cbbd6b6_Abs(jule::Str);
inline jule::Str _22cbd9759_Base(jule::Str);
inline jule::Str _22cc079ec_Dir(jule::Str);
inline jule::Str _22cbb2c2c_VolumeName(jule::Str);
inline jule::Bool _22db73846_IsPathSep(jule::U8);
inline jule::Bool _22db73978_IsAbs(jule::Str);
inline jule::I64 _22db73aaa_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22db73bdc_abs(jule::Str);
inline jule::Str _22db73d1e_join(jule::Slice<jule::Str>);
inline jule::I64 _22bce3985_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _22dc85419_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _22dcb91ea_Itoa(jule::I64);
inline jule::Str _22dcb94d6_Utoa(jule::U64);
inline jule::Slice<char*> _22dcbb9a0_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _22dcbbce1_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _22dcbc000_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _22dcbcdad_processErrorFromCode(jule::I64);
inline jule::I64 _22dcbd100_getLastProcessError(void);
inline void _22dcbd8a3_Exit(jule::I64);
inline jule::Str _22dcbdaa1_Executable(void);
inline jule::Bool _22dbe05d8_IsStdHeaderPath(jule::Str);
inline jule::Bool _22dbe0808_IsValidHeaderExt(jule::Str);
inline jule::Bool _22dbe0aa0_IsValidCppExt(jule::Str);
inline jule::Str _22dbeccdd_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _22dbed0c9_argToStr(jule::Any);
inline jule::I64 _22dbed371_findNextFmt(jule::Str);
inline jule::Str _22dbed706_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22dbee77e_IsTopDirective(jule::Str);
inline jule::Bool _22dc00bae_IsWindows(jule::Str);
inline jule::Bool _22dc00e67_IsDarwin(jule::Str);
inline jule::Bool _22dc0120e_IsLinux(jule::Str);
inline jule::Bool _22dc0152d_IsI386(jule::Str);
inline jule::Bool _22dc017c5_IsAmd64(jule::Str);
inline jule::Bool _22dc01a6c_IsArm64(jule::Str);
inline jule::Bool _22dc01d14_IsUnix(jule::Str);
inline jule::Bool _22dc02188_Is32Bit(jule::Str);
inline jule::Bool _22dc02430_Is64Bit(jule::Str);
inline void _22dc5ebb8_init(void);
inline jule::Bool _22e0aa8e8_IsUnaryOp(jule::Str);
inline jule::Bool _22e0aabd4_IsBinOp(jule::Str);
inline jule::Bool _22e0ab29a_IsStr(jule::Str);
inline jule::Bool _22e0ab542_IsRawStr(jule::Str);
inline jule::Bool _22e0ab7d9_IsRune(jule::Str);
inline jule::Bool _22e0abe05_IsBool(jule::Str);
inline jule::Bool _22e0ac19c_IsFloat(jule::Str);
inline jule::Bool _22e0ac444_IsNum(jule::Str);
inline jule::Bool _22e0ac983_IsIgnoreIdent(jule::Str);
inline jule::Bool _22e0acc2a_IsAnonIdent(jule::Str);
inline jule::Bool _22e0ad269_IsSpace(jule::I32);
inline jule::Bool _22e0ad6ba_IsLetter(jule::I32);
inline jule::Bool _22e0adc09_IsDecimal(jule::U8);
inline jule::Bool _22e0adea1_IsBinary(jule::U8);
inline jule::Bool _22e0ae248_IsOctal(jule::U8);
inline jule::Bool _22e0ae4e0_IsHex(jule::U8);
inline jule::Bool _22e0ae787_IsAssign(jule::U64);
inline jule::Bool _22e0aea2e_IsPostfixOp(jule::Str);
inline jule::Bool _22e0aecc6_IsAssignOp(jule::Str);
inline jule::Ptr<_22e0b0579_File> _22e0b1aa8_NewFileSet(jule::Str);
inline _22dbec89d_Log _22e0b334b_makeErr(jule::I64, jule::I64, jule::Ptr<_22e0b0579_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22e0b36d1_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _22e0b3a22_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b3da7_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b41e8_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b4539_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b487a_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b4ccb_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b5073_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _22e0b531a_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _22e0b565b_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _22e0b599c_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _22e0b5cdd_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _22e0b612e_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _22e0b6470_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b68c1_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _22e0b6b68_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _22e0b6ea9_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22e0b7251_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _22e0b751a_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _22e0b76c4_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _22e0b795a_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_22dbec89d_Log> _22e0bc454_Lex(jule::Ptr<_22e0b0579_File>, jule::I64);
inline jule::I64 _2146ad378_LeadingZeros64(jule::U64);
inline jule::I64 _2146ae2ad_TrailingZeros(jule::U64);
inline jule::I64 _2146aeba4_TrailingZeros32(jule::U32);
inline jule::I64 _2146aee4b_TrailingZeros64(jule::U64);
inline jule::I64 _2146b555b_Len32(jule::U32);
inline jule::I64 _2146b5803_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2146b64b3_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _2146b7b46_Mul64(jule::U64, jule::U64);
inline jule::U32 _2145d53b0_F32Bits(jule::F32);
inline jule::F32 _2145d569b_F32FromBits(jule::U32);
inline jule::U64 _2145d5943_F64Bits(jule::F64);
inline jule::F64 _2145d5c62_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _2145d824d_Frexp(jule::F64);
inline jule::F64 _2146bb8e7_NaN(void);
inline jule::Bool _2146bba29_IsNaN(jule::F64);
inline jule::F64 _2146bbb5b_Inf(jule::I64);
inline jule::Bool _2146bbc8d_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _2146bbdc0_normalize(jule::F64);
inline jule::F64 _2146bcc8e_Log(jule::F64);
inline jule::F64 _2146bd3aa_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _2146c215b_Modf(jule::F64);
inline jule::F64 _2146c259b_Log2(jule::F64);
inline jule::Str _2135483ac_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _213540a25_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _21356c337_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2142c7d2d_floatInfo*);
inline jule::Slice<jule::U8> _2141e15d7_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _21454ed63_decimalSlice, jule::I64, jule::U8);
inline void _2142a56ac_roundShortest(_2146ebdcd_decimal*, jule::U64, jule::I64, _2142c7d2d_floatInfo*);
inline jule::Slice<jule::U8> _2142c8d51_fmtE(jule::Slice<jule::U8>, jule::Bool, _21454ed63_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _21435e436_fmtF(jule::Slice<jule::U8>, jule::Bool, _21454ed63_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _2143817dd_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _2142c7d2d_floatInfo*);
inline jule::Slice<jule::U8> _21440cb66_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _2142c7d2d_floatInfo*);
inline jule::I64 _2144cbdde_min(jule::I64, jule::I64);
inline jule::I64 _21451a1c4_max(jule::I64, jule::I64);
inline jule::U8 _21451a504_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__213516d09_ConvError _2145683dc_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _2142cbb23_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _21352bda7_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _213585680_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2143bdb38_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _2143bcc25_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _2143bcd57_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _213519290_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _2146e964a_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2146e977c_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__213516d09_ConvError _2146e98ae_atofHex(jule::Str, _2142c7d2d_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__213516d09_ConvError _2146e9b01_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError _2146e9c33_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError _2146e9d65_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _2146e9e97_ParseFloat(jule::Str, jule::I64);
inline void _2146ea3b5_ryuFtoaFixed32(_21454ed63_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _2146ea4e7_ryuFtoaFixed64(_21454ed63_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _2146ea74a_formatDecimal(_21454ed63_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _2146ea87c_ryuFtoaShortest(_21454ed63_decimalSlice*, jule::U64, jule::I64, _2142c7d2d_floatInfo*);
inline jule::I64 _2146ea9ae_mulByLog2Log10(jule::I64);
inline jule::I64 _2146eaae1_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _2146eac23_computeBounds(jule::U64, jule::I64, _2142c7d2d_floatInfo*);
inline void _2146eae65_ryuDigits(_21454ed63_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _2146eb097_ryuDigits32(_21454ed63_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _2146eb1c9_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _2146eb30b_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _2146eb43d_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _2146eb570_divmod1e9(jule::U64);
inline void _2146ec939_trim(_2146ebdcd_decimal*);
inline void _2146eca6b_rightShift(_2146ebdcd_decimal*, jule::U64);
inline jule::Bool _2146ecb9d_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _2146eccd0_leftShift(_2146ebdcd_decimal*, jule::U64);
inline jule::Bool _2146ece12_shouldRoundUp(_2146ebdcd_decimal*, jule::I64);
inline jule::Str _2146edac2_FmtUint(jule::U64, jule::I64);
inline jule::Str _2146edc04_FmtInt(jule::I64, jule::I64);
inline jule::Str _2146edd36_Itoa(jule::I64);
inline jule::Str _2146ede68_small(jule::I64);
inline jule::Bool _2146ee09a_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _2146ee1cc_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _22e3c8320_RealKindOf(jule::Str);
inline jule::I64 _213336ca0_BitsizeOf(jule::Str);
inline jule::Str _213356451_IntFromBits(jule::I64);
inline jule::Str _2133a0742_UintFromBits(jule::I64);
inline jule::Str _2133aa054_FloatFromBits(jule::I64);
inline jule::Bool _2134c0796_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _2134c9c23_BitsizeOfFloat(jule::F64);
inline jule::I64 _2134ec21d_BitsizeOfInt(jule::I64);
inline jule::I64 _22e50535e_BitsizeOfUint(jule::U64);
inline void _213336596_UpdateTarget(void);
inline void _213377939_init(void);
inline jule::I64 _21470040e_MinI(jule::Str);
inline jule::I64 _214700541_MaxI(jule::Str);
inline jule::U64 _214700673_MaxU(jule::Str);
inline jule::F64 _2147007a5_Min(jule::Str);
inline jule::F64 _2147008d7_Max(jule::Str);
inline jule::Bool _214700be5_IsI8Compatible(jule::Str);
inline jule::Bool _214700d27_IsI16Compatible(jule::Str);
inline jule::Bool _214700e59_IsI32Compatible(jule::Str);
inline jule::Bool _21470108b_IsI64Compatible(jule::Str);
inline jule::Bool _2147011bd_IsU8Compatible(jule::Str);
inline jule::Bool _214701300_IsU16Compatible(jule::Str);
inline jule::Bool _214701432_IsU32Compatible(jule::Str);
inline jule::Bool _214701564_IsU64Compatible(jule::Str);
inline jule::Bool _214701696_IsF32Compatible(jule::Str);
inline jule::Bool _2147017c8_IsF64Compatible(jule::Str);
inline jule::Bool _21470190a_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _214701a3c_IsI16Greater(jule::Str);
inline jule::Bool _214701b6e_IsI32Greater(jule::Str);
inline jule::Bool _214701ca1_IsI64Greater(jule::Str);
inline jule::Bool _214701dd3_IsU16Greater(jule::Str);
inline jule::Bool _214702246_IsU32Greater(jule::Str);
inline jule::Bool _214702378_IsU64Greater(jule::Str);
inline jule::Bool _2147024aa_IsF32Greater(jule::Str);
inline jule::Bool _2147025dc_IsF64Greater(jule::Str);
inline jule::Bool _21470271e_IsGreater(jule::Str, jule::Str);
inline jule::Bool _214702b5e_IsSigInt(jule::Str);
inline jule::Bool _214702c91_IsUnsigInt(jule::Str);
inline jule::Bool _214702dc3_IsInt(jule::Str);
inline jule::Bool _214703005_IsFloat(jule::Str);
inline jule::Bool _214703137_IsNum(jule::Str);
inline jule::Bool _214703269_IsSigNum(jule::Str);
inline void _214707180_lshiftUnsig(_21470339b_Const*, _21470339b_Const*);
inline void _2147072b2_rshiftUnsig(_21470339b_Const*, _21470339b_Const*);
inline jule::Bool _215e5a0eb_IsAscii(jule::I32);
inline jule::I32 _215e5a272_ToRune(jule::Slice<jule::U8>);
inline jule::Str _215e77118_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _215e77415_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _215e776ac_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _215e779ba_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _215e77d0b_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _216103c23_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _2161097c8_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _216109a81_FmtByDefault(jule::Str*, jule::Any*);
inline void _216109e5a_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline void _21610a356_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline jule::Str _21610a664_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _21610ae7d_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215dd1b22_parameterUsesGenerics(jule::Ptr<_215dcdb41_ParamIns>*, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>*);
inline jule::Ptr<_215ebe7d1_TypeSymbol> _215dd40ec_buildType(jule::Ptr<_215daa5e0_TypeDecl>);
inline jule::Ptr<_215e904e9_Value> _215dd43d8_buildExpr(jule::Ptr<_215daeb11_Expr>);
inline jule::Ptr<_215eb9710_TypeAlias> _215dd4680_buildTypeAlias(jule::Ptr<_215dc18ae_TypeAliasDecl>);
inline jule::Ptr<_215d9ad3e_Field> _215dd499e_buildField(jule::Ptr<_215dc5055_FieldDecl>);
inline jule::Slice<jule::Ptr<_215d9ad3e_Field>> _215dd4c46_buildFields(jule::Slice<jule::Ptr<_215dc5055_FieldDecl>>*);
inline jule::Ptr<_215dc6cd2_Struct> _215dd4edd_buildStruct(jule::Ptr<_215dc5808_StructDecl>);
inline jule::Ptr<_215dcd05d_Param> _215dd5285_buildParam(jule::Ptr<_215dbac4e_ParamDecl>);
inline jule::Slice<jule::Ptr<_215dcd05d_Param>> _215dd5609_buildParams(jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>>*);
inline jule::Ptr<_215dccd71_RetType> _215dd58a1_buildRetType(jule::Ptr<_215dad703_RetTypeDecl>);
inline jule::Ptr<_215dcd24a_Fn> _215dd5b48_buildFn(jule::Ptr<_215dbc06e_FnDecl>);
inline jule::Slice<jule::Ptr<_215dcd24a_Fn>> _215dd5de0_buildMethods(jule::Slice<jule::Ptr<_215dbc06e_FnDecl>>*);
inline jule::Ptr<_215dddc1c_Trait> _215dd6187_buildTrait(jule::Ptr<_215dc5e13_TraitDecl>);
inline jule::Ptr<_215de036c_EnumItem> _215dd642e_buildEnumItem(jule::Ptr<_215dc321d_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_215de036c_EnumItem>> _215dd66c6_buildEnumItems(jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>>*);
inline jule::Ptr<_215de0d62_Enum> _215dd696d_buildEnum(jule::Ptr<_215dc3c46_EnumDecl>);
inline jule::Ptr<_215de1d96_TypeEnumItem> _215dd6dbe_buildTypeEnumItem(jule::Ptr<_215dc474c_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>> _215dd7166_buildTypeEnumItems(jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>>*);
inline jule::Ptr<_215de245c_TypeEnum> _215dd740d_buildTypeEnum(jule::Ptr<_215dc4d57_TypeEnumDecl>);
inline jule::Ptr<_215e41aa5_Var> _215dd76a5_buildVar(jule::Ptr<_215dbd04d_VarDecl>);
inline jule::Slice<jule::Ptr<_215e41aa5_Var>> _215dd794c_buildVars(jule::Slice<jule::Ptr<_215dbd04d_VarDecl>>);
inline jule::Ptr<_215de68c3_Impl> _215dd7be4_buildImpl(jule::Ptr<_215dc651d_Impl>);
inline jule::Bool _215de5c68_matchConstraint(jule::Str*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215de6054_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_215e03490_scopeChecker> _215de895d_newScopeCheckerBase(jule::Ptr<_215e2327e_Sema>*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Ptr<_215e03490_scopeChecker> _215de8ce3_newScopeChecker(jule::Ptr<_215e2327e_Sema>*, jule::Ptr<_215dcea10_FnIns>);
inline jule::Ptr<_215e02208_scopeLabel> _215de9134_findLabelParent(jule::Str, jule::Ptr<_215e03490_scopeChecker>);
inline jule::Bool _215de94b9_modelIsGotoScope(jule::Any, jule::Ptr<_215deb92d_Scope>*);
inline jule::Bool _215de980a_stmtIsGotoScope(jule::Any*, jule::Ptr<_215deb92d_Scope>*);
inline jule::I64 _215de9b4b_countMatchType(jule::Ptr<_215e00679_Match>*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Slice<jule::Ptr<_215e8e471_Data>> _215de9de3_getDatasFromTupleData(jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _215dea72e_checkMut(jule::Ptr<_215e2327e_Sema>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215deabb3_checkAssign(jule::Ptr<_215e2327e_Sema>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _215deae5a_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _215deb202_isValidStForNextSt(jule::Any*);
inline jule::Bool _215deb499_stmtIsDef(jule::Any*);
inline jule::Ptr<_215e41aa5_Var> _215e1784a_findVarInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_215eb9710_TypeAlias> _215e17c79_findTypeAliasInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_215dc6cd2_Struct> _215e18164_findStructInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_215dcd24a_Fn> _215e185c6_findFnInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_215dddc1c_Trait> _215e188d4_findTraitInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str);
inline jule::Ptr<_215de0d62_Enum> _215e18c25_findEnumInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str);
inline jule::Ptr<_215de245c_TypeEnum> _215e19066_findTypeEnumInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str);
inline jule::Any _215e19561_defByIdentPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _215e20666_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _215e213c0_isValidModelForRef(jule::Any*);
inline _22dbec89d_Log _215e21865_compilerErr(jule::Ptr<_22e0aa1de_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215e21ba6_impIsLookupable(jule::Ptr<_215e1a133_ImportInfo>*, jule::Str);
inline void _215e21ea3_appendRetVars(jule::Slice<jule::Ptr<_215e41aa5_Var>>*, jule::Ptr<_215dcea10_FnIns>*);
inline void _215e2225b_appendParamVars(jule::Slice<jule::Ptr<_215e41aa5_Var>>*, jule::Ptr<_215dcea10_FnIns>*);
inline void _215e22536_appendGenericTypeAliases(jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Ptr<_215e89647_SymbolTable> _215e22888_findFile(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>*, jule::Ptr<_22e0b0579_File>*);
inline void _215e22cea_pushSugggestion(_22dbec89d_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _215e5a519_traitHasReferenceReceiver(jule::Ptr<_215dddc1c_Trait>*);
inline jule::Bool _215e5a64b_floatAssignable(jule::Str, jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _215e76d82_sigAssignable(jule::Str, jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _215e76eb4_unsigAssignable(jule::Str, jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _215e7805e_intAssignable(jule::Str, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215eba403_TypeKind> _215e886bd_lenKind(void);
inline jule::Ptr<_215d77348_Directive> _215eb4aa1_findDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Str);
inline jule::Any _215eb4e36_findBuiltinsImport(jule::Str, jule::Ptr<_215e1a133_ImportInfo>);
inline void _215eb5145_fitBitsize(jule::Ptr<_215e8e471_Data>*);
inline void _215eb5442_makeStructLitAlloc(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215dc7e8c_StructLitExprModel>*);
inline jule::Ptr<_215e41aa5_Var> _215eb5783_buildErrorVar(jule::Ptr<_215deb92d_Scope>*, jule::Ptr<_215db3ae3_FnCallExpr>*);
inline jule::Any _215eb5ac4_findBuiltinsSema(jule::Str, jule::Ptr<_215e2327e_Sema>);
inline jule::Bool _215eb5d6b_isOkForShifting(jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _215eb6223_isInstancedStruct(jule::Ptr<_215dc71ab_StructIns>);
inline jule::Bool _215eb6586_isPtrArithmeticCompatible(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline void _215eb67c8_applyCastKindModel(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215eba403_TypeKind>*);
inline void _215eb6a81_applyCastKind(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215eba403_TypeKind>*);
inline jule::Ptr<_215e8e471_Data> _215eb6c7e_buildVoidData(void);
inline jule::Str _215eb7048_checkDataForIntegerIndexing(jule::Ptr<_215e8e471_Data>*);
inline void _215eb7312_applyCastModelByEnum(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215de0d62_Enum>);
inline void _215eb75ba_castConstByType(jule::Str*, jule::Ptr<_215e8e471_Data>*);
inline void _215eb7ac6_updateModelToGenericIns(jule::Any*, jule::Ptr<_215dcea10_FnIns>*);
inline jule::Bool _215eb7d18_pushSubIdentFromExpr(jule::Any, jule::Ptr<_215dab305_SubIdentTypeDecl>*);
inline jule::Bool _215ed210c_kindUsesGenerics(jule::Ptr<_215eba403_TypeKind>*, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>*);
inline jule::Bool _215ed2492_hasDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Str);
inline jule::Bool _215ed2739_canGetPtr(jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _215ed2a58_isValidForSptrType(jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215ed2d00_isValidForRef(jule::Ptr<_215eba403_TypeKind>*);
inline jule::Bool _215ed30b9_isBuiltinStrConvertable(jule::Ptr<_215eba403_TypeKind>*);
inline jule::Str _215ed333e_buildLinkPathByTokens(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215ec0150_Prim> _215ed36e6_buildPrimType(jule::Str);
inline jule::Ptr<_215dc6cd2_Struct> _215ed398d_getStructFromKind(jule::Ptr<_215eba403_TypeKind>);
inline jule::Bool _215ed3c35_isPrim(jule::Str);
inline void _215ed3edd_applyImplicitCast(jule::Ptr<_215eba403_TypeKind>*, jule::Ptr<_215e8e471_Data>*);
inline __jule_tuple_x_215e89647_SymbolTable__jule_tuple_s_22dbec89d_Log _215ed7057_buildSymbols(jule::Ptr<_215d761c1_Ast>*, jule::Trait<_215e174b5_Importer>*, jule::Ptr<_215dd8244_symbolBuilder>);
inline __jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log _215ed7486_analyzePackage(jule::Slice<jule::Ptr<_215d761c1_Ast>>*, jule::Trait<_215e174b5_Importer>*, jule::I64*);
inline __jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log _215ed7871_AnalyzePackage(jule::Slice<jule::Ptr<_215d761c1_Ast>>, jule::Trait<_215e174b5_Importer>, jule::I64);
inline jule::Ptr<_215dcea10_FnIns> _21610b643_findBuiltinFn(jule::Str);
inline jule::Ptr<_215eb9710_TypeAlias> _21610b90c_findBuiltinTypeAlias(jule::Str);
inline jule::Any _21610bba4_findBuiltinDef(jule::Str);
inline jule::Any _21610bec3_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _21610c26a_findBuiltinDefStdMem(jule::Str);
inline jule::Any _21610c534_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _21610c853_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_215e8e471_Data> _21610cd70_builtinCallerCommonPlain(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21610d1e4_builtinCallerCommon(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21610d5ce_builtinCallerCommonMut(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21610d920_builtinCallerError(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*);
inline jule::Ptr<_215e8e471_Data> _21610dd0a_builtinCallerOut(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21610e1e5_builtinCallerOutln(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21610e5d0_builtinCallerNew(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21610e9ba_builtinCallerPanic(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161100d6_builtinCallerMake(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161104c1_builtinCallerAppend(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216110955_callerCopySlice(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216110dd9_callerCopyStr(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161112c4_builtinCallerCopy(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216111615_callerLenSlice(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216111956_callerLenMap(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216111c97_callerLenArr(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161120d8_callerLenStr(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161124c3_builtinCallerLen(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216112814_callerCapSlice(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216112b55_callerCapStr(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216113040_builtinCallerCap(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161134c4_callerDeleteMap(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161138ae_builtinCallerDelete(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216113c99_builtinCallerClone(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216114360_builtinCallerAssert(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _2161146c3_builtinCallerStdMemSizeOf(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216114ae1_builtinCallerStdMemAlignOf(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21611500e_builtinCallerStdMemFree(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21611543d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _21611585b_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216115c9b_builtinCallerStdDebugOut(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Ptr<_215e8e471_Data> _216116186_builtinCallerStdDebugOutln(jule::Ptr<_215e90ede_Eval>*, jule::Ptr<_215db3ae3_FnCallExpr>*, jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _21620a401_FindModuleFile(jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>*);
inline jule::Str _21620a533_FindModuleFileDeep(jule::Str);
inline jule::Slice<_22dbec89d_Log> _21620a764_CheckModuleFile(jule::Str);
inline jule::Ptr<_1e9dbee6c_FileInfo> _1e9e169ca_ParseFile(jule::Ptr<_22e0b0579_File>);
inline __jule_tuple_x_215d761c1_Ast__jule_tuple_s_22dbec89d_Log _1e9e1705d_parseFileset(jule::Ptr<_22e0b0579_File>);
inline jule::Ptr<_215dba578_ScopeTree> _1e9e17987_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1e9e17c73_isSt(jule::Ptr<_22e0aa1de_Token>, jule::Ptr<_22e0aa1de_Token>);
inline jule::Bool _1e9e180b4_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1e9e18449_nextStPos(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::I64);
inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool _1e9e1878a_skipSt(jule::I64*, jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _1e9e18e2d_splitStmts(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Bool _1e9e3061a_isTypeOp(jule::Str*);
inline jule::Bool _1e9e30906_isTypeRange(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Slice<jule::Ptr<_22e0aa1de_Token>> _1e9e30b9d_getBlockExpr(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token _1e9e31033_splitDelim(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::U64);
inline jule::I64 _1e9e312ca_findLowestPrecOp(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Ptr<_215db17c2_IdentExpr> _1e9e31572_buildIdentExpr(jule::Ptr<_22e0aa1de_Token>*);
inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_int _1e9e31819_getRangeExprTokens(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Bool _1e9e32573_checkAssignTokens(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline _22dbec89d_Log _1e9e33794_makeErr(jule::I64, jule::I64, jule::Ptr<_22e0b0579_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_22e0aa1de_Token>> _1e9e33c6c_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token _1e9e34014_rangeLast(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline __jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log _1e9e343ee_partsKind(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log _1e9e347d9_parts(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1e9e34a81_getCloseKindOfBrace(jule::Str);
inline _22dbec89d_Log _1e9e34e6b_compilerErr(jule::Ptr<_22e0aa1de_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1e9e3539a_pushSuggestion(_22dbec89d_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e9e35642_tokstoa(jule::Slice<jule::Ptr<_22e0aa1de_Token>>*);
inline jule::Bool _1e9e456a7_isPub(jule::Str*);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e46048_buildVoidType(void);
inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e4628a_buildPrimType(jule::Ptr<_22e0aa1de_Token>);
inline __jule_tuple_bool__jule_tuple_bool _2161d450c_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _2161e59a2_checkArch(jule::Str);
inline jule::Bool _2161ce738_isPassFileAnnotation(jule::Str);
inline void _2161e9346_setOsVars(jule::Slice<jule::Str>*);
inline void _2161e9599_setArchVars(jule::Slice<jule::Str>*);
inline void _2161e9852_initVars(jule::Slice<jule::Str>*, _2161e9038_CompileInfo*);
inline jule::Slice<jule::U8> _22e2c3c32_readBuff(jule::Str);
inline _22dbec89d_Log _22e2c654d_flatCompilerErr(jule::Str);
inline void _1e9d64362_pushPasses(jule::Ptr<_215e1d08c_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1e9d6b204_getAllUniquePasses(jule::Ptr<_215e1d08c_Package>*, jule::Slice<jule::Ptr<_215e1a133_ImportInfo>>);
inline _2161e9038_CompileInfo _1e9dd8d21_buildCompileInfo(void);
inline void _1ea05eded_EliminateDefines(jule::Ptr<_22e2caed1_IR>*);
inline jule::Ptr<_215d77348_Directive> _1ea060283_findDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Str);
inline jule::Bool _1ea0605c4_hasDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Str);
inline void _1ea064221_eliminateDeadCodeOfScope(jule::Ptr<_215deb92d_Scope>);
inline void _1ea0644a7_eliminateScopeFunctions(jule::Slice<jule::Ptr<_215dcd24a_Fn>>*);
inline void _1ea0646e9_eliminateFunctionsScopePackage(jule::Ptr<_215e1d08c_Package>*);
inline void _1ea064991_eliminateScopePackage(jule::Ptr<_215e1d08c_Package>*);
inline void _1ea064ba0_EliminateScopes(jule::Ptr<_22e2caed1_IR>*);
inline jule::Bool _21611cce7_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _21611d105_isConstantValidConditionalCase(jule::Ptr<_215debd29_If>*);
inline jule::Bool _21611d3ad_isUnreachableExpr(jule::Any*);
inline jule::Bool _21611d6ee_isConstantValidMatchCase(jule::Ptr<_215e011c4_Case>*);
inline jule::Bool _21611d996_isUnreachableConditionalCase(jule::Ptr<_215debd29_If>*);
inline jule::Bool _21611dc4e_isUnreachableMatchCase(jule::Ptr<_215e011c4_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _21612664c_checkForBitShiftOpt(jule::Ptr<_215dc76d9_OperandExprModel>*, jule::Ptr<_215dc76d9_OperandExprModel>*);
inline void _21612894b_PushOptLevel(jule::I64);
inline void _1e9ee206c_detectEnabled(void);
inline void _1ea071a58_Throw(jule::Str);
inline jule::U64 _1ea71d578_unix(void);
inline jule::U64 _1ea71d886_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1ea71dc1b_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1ea666c1e_isCopyOptimizable(jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _1ea6670a4_isIterCopyOptimizable(jule::Ptr<_215e8e471_Data>*, jule::Ptr<_215e41aa5_Var>*);
inline jule::Str _1ea676437_decomposeCommonEsq(jule::U8);
inline jule::Str _1ea676723_sbtoa(jule::U8);
inline jule::Str _1ea6769ba_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1ea676cd9_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1ea6770e7_ftoa(jule::F64, jule::I64);
inline jule::Str _1ea67738e_itoa(jule::I64);
inline jule::Str _1ea677636_utoa(jule::U64);
inline jule::Bool _1ea6779dd_isForwarded(jule::Ptr<_215deb92d_Scope>*);
inline jule::Bool _1ea677ca7_isBuiltinCallHasDebuginf(jule::Ptr<_215dc8553_FnCallExprModel>*);
inline jule::Bool _1ea677ed8_isExprComesFromBind(jule::Ptr<_215e8e471_Data>*);
inline jule::Bool _1ea678280_isAny(jule::Ptr<_215eba403_TypeKind>*);
inline void _1ea727ebc_iterFiles(jule::Ptr<_215e1d08c_Package>*, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>);
inline jule::Str _1ea7282a8_concatAllParts(jule::Slice<jule::Ptr<_22e0aa1de_Token>>);
inline jule::Ptr<_215d77348_Directive> _1ea7361d9_findDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Str);
inline jule::Bool _1ea73656e_hasDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>*, jule::Str);
inline jule::Bool _1ea736816_shouldInitialized(jule::Ptr<_215eba403_TypeKind>*);
inline void _22dbceb16_printErrorMessage(jule::Str);
inline void _22dbbd929_help(jule::Slice<jule::Str>*);
inline void _22dbbda5b_version(jule::Slice<jule::Str>*);
inline void _22dbd14ca_toolDistos(void);
inline void _22dbd160c_toolDistarch(void);
inline void _22dbdc3b5_tool(jule::Slice<jule::Str>*);
inline void _22dbdc4e7_julenv(jule::Slice<jule::Str>*);
inline void _22dbe0363_mod(jule::Slice<jule::Str>*);
inline jule::Bool _22dbb6812_processCommand(jule::Slice<jule::Str>*);
inline void _22dbb6944_showInfo(void);
void entry_point(void);
inline void _1ea74deb0_init(void);
inline jule::Ptr<_22cad4b93_File> _1ea75259b_openOutput(jule::Str*);
inline void _1ea75d6d9_clearObjects(void);
inline void _1ea74c1de_compileIr(jule::Str, jule::Str);
inline jule::Bool _1ea76d1ee_isCppSourceFile(jule::Str);
inline void _1ea7722e1_pushCompCmdClang(jule::Str*);
inline void _1ea74a4a6_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1ea750434_genCompileCmd(jule::Str, jule::Ptr<_22e2caed1_IR>*);
inline jule::Str _1ea749a38_getCompilePath(void);
inline void _1ea759509_applyTargetIndependentOptimizations(jule::Ptr<_22e2caed1_IR>*);
inline void _1ea749461_checkCompilerFlag(void);
inline void _1ea74d245_checkTargetArch(jule::Str);
inline void _1ea74d377_checkTargetOs(jule::Str);
inline void _1ea77e375_checkTargetFlag(jule::Str*);
inline void _1ea77e4a7_checkOptFlag(jule::Str*);
inline void _1ea77e81a_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ea77e94c_checkFlags(jule::Slice<jule::Str>*);
inline void _1ea77ea7e_setupSemaFlags(jule::I64*);
inline jule::Ptr<_22e2caed1_IR> _1ea77ebb1_buildIr(jule::Slice<jule::Str>*);
inline void _1ea77ece3_compileCommand(jule::Slice<jule::Str>*);


struct _215e174b5_ImporterMptrData {
	void(*_215e16409_SetModPath)(jule::Trait<_215e174b5_Importer>, jule::Str);
	jule::Str(*_215e16629_GetModPath)(jule::Trait<_215e174b5_Importer>);
	jule::Str(*_215e16937_ModById)(jule::Trait<_215e174b5_Importer>, jule::I64);
	jule::Ptr<_215e1a133_ImportInfo>(*_215e16c45_GetImport)(jule::Trait<_215e174b5_Importer>, jule::Str);
	__jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log(*_215e170ec_ImportPackage)(jule::Trait<_215e174b5_Importer>, jule::Str, jule::Bool);
	void(*_215e17372_Imported)(jule::Trait<_215e174b5_Importer>, jule::Ptr<_215e1a133_ImportInfo>);
};

struct _215eb9ec4_KindMptrData {
	jule::Str(*_215eb9a73_Str)(jule::Trait<_215eb9ec4_Kind>);
	jule::Bool(*_215eb9d81_Equal)(jule::Trait<_215eb9ec4_Kind>, jule::Ptr<_215eba403_TypeKind>);
};

struct _215ed6375_LookupMptrData {
	jule::Ptr<_215e1a133_ImportInfo>(*_215ed452c_FindPackage)(jule::Trait<_215ed6375_Lookup>, jule::Str);
	jule::Ptr<_215e1a133_ImportInfo>(*_215ed483a_SelectPackage)(jule::Trait<_215ed6375_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>);
	jule::Ptr<_215e41aa5_Var>(*_215ed4be2_FindVar)(jule::Trait<_215ed6375_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_215eb9710_TypeAlias>(*_215ed5099_FindTypeAlias)(jule::Trait<_215ed6375_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_215dc6cd2_Struct>(*_215ed5451_FindStruct)(jule::Trait<_215ed6375_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_215dcd24a_Fn>(*_215ed5808_FindFn)(jule::Trait<_215ed6375_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_215dddc1c_Trait>(*_215ed5b16_FindTrait)(jule::Trait<_215ed6375_Lookup>, jule::Str);
	jule::Ptr<_215de0d62_Enum>(*_215ed5e24_FindEnum)(jule::Trait<_215ed6375_Lookup>, jule::Str);
	jule::Ptr<_215de245c_TypeEnum>(*_215ed6232_FindTypeEnum)(jule::Trait<_215ed6375_Lookup>, jule::Str);
};

struct _1ea778b22_CommonFlagMptrData {
	jule::Str(*_1ea748e44_Name)(jule::Trait<_1ea778b22_CommonFlag>);
	jule::I32(*_1ea749076_Short)(jule::Trait<_1ea778b22_CommonFlag>);
	jule::Str(*_1ea7491a8_What)(jule::Trait<_1ea778b22_CommonFlag>);
	void(*_1ea74932e_Reset)(jule::Trait<_1ea778b22_CommonFlag>);
};



inline void _215e16409_SetModPath_0(jule::Trait<_215e174b5_Importer> _self_, jule::Str _1729_path) {
	_22e342ae7_SetModPath(_self_.safe_ptr<_1e9d3cbcb_JuleImporter>(), _1729_path);
}
inline jule::Str _215e16629_GetModPath_0(jule::Trait<_215e174b5_Importer> _self_) {
	return _22e355b2c_GetModPath(_self_.safe_ptr<_1e9d3cbcb_JuleImporter>());
}
inline jule::Str _215e16937_ModById_0(jule::Trait<_215e174b5_Importer> _self_, jule::I64 _2522_id) {
	return _22e364993_ModById(_self_.safe_ptr<_1e9d3cbcb_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215e16c45_GetImport_0(jule::Trait<_215e174b5_Importer> _self_, jule::Str _3128_path) {
	return _1e9c0d00d_GetImport(_self_.safe_ptr<_1e9d3cbcb_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log _215e170ec_ImportPackage_0(jule::Trait<_215e174b5_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1e9c15279_ImportPackage(_self_.safe_ptr<_1e9d3cbcb_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _215e17372_Imported_0(jule::Trait<_215e174b5_Importer> _self_, jule::Ptr<_215e1a133_ImportInfo> _4131__0) {
	_1e9c18bea_Imported(_self_.safe_ptr<_1e9d3cbcb_JuleImporter>(), _4131__0);
}
inline jule::Str _215eb9a73_Str_0(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215d9ca11_Str(_self_.safe_ptr<_215dc71ab_StructIns>());
}
inline jule::Bool _215eb9d81_Equal_0(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215d9db66_Equal(_self_.data.as<_215dc71ab_StructIns>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_1(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215dced40_Str(_self_.safe_ptr<_215dcea10_FnIns>());
}
inline jule::Bool _215eb9d81_Equal_1(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215dd014d_Equal(_self_.data.as<_215dcea10_FnIns>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_2(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215dde118_Str(_self_.safe_ptr<_215dddc1c_Trait>());
}
inline jule::Bool _215eb9d81_Equal_2(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215dde426_Equal(_self_.data.as<_215dddc1c_Trait>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_3(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215de11c5_Str(_self_.safe_ptr<_215de0d62_Enum>());
}
inline jule::Bool _215eb9d81_Equal_3(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215de14d3_Equal(_self_.data.as<_215de0d62_Enum>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_4(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215de278c_Str(_self_.safe_ptr<_215de245c_TypeEnum>());
}
inline jule::Bool _215eb9d81_Equal_4(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215de2a9a_Equal(_self_.data.as<_215de245c_TypeEnum>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_5(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215eba7ee_Str(_self_.safe_ptr<_215eba403_TypeKind>());
}
inline jule::Bool _215eb9d81_Equal_5(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ebab0c_Equal(_self_.data.as<_215eba403_TypeKind>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_6(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec04b3_Str(_self_.safe_ptr<_215ec0150_Prim>());
}
inline jule::Bool _215eb9d81_Equal_6(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec07c1_Equal(_self_.data.as<_215ec0150_Prim>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_7(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec3c47_Str(_self_.safe_ptr<_215ec38d4_Sptr>());
}
inline jule::Bool _215eb9d81_Equal_7(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec4055_Equal(_self_.data.as<_215ec38d4_Sptr>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_8(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec484c_Str(_self_.safe_ptr<_215ec4341_Slc>());
}
inline jule::Bool _215eb9d81_Equal_8(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec4b5a_Equal(_self_.data.as<_215ec4341_Slc>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_9(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec5232_Str(_self_.safe_ptr<_215ec4dbe_Tuple>());
}
inline jule::Bool _215eb9d81_Equal_9(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec5540_Equal(_self_.data.as<_215ec4dbe_Tuple>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_10(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec5c5a_Str(_self_.safe_ptr<_215ec58e7_Map>());
}
inline jule::Bool _215eb9d81_Equal_10(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec6068_Equal(_self_.data.as<_215ec58e7_Map>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_11(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec684e_Str(_self_.safe_ptr<_215ec64db_Arr>());
}
inline jule::Bool _215eb9d81_Equal_11(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec6b5c_Equal(_self_.data.as<_215ec64db_Arr>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_12(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _215ec72ab_Str(_self_.safe_ptr<_215ec6e48_Ptr>());
}
inline jule::Bool _215eb9d81_Equal_12(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _215ec75b9_Equal(_self_.data.as<_215ec6e48_Ptr>(), _5621_other);
}
inline jule::Str _215eb9a73_Str_13(jule::Trait<_215eb9ec4_Kind> _self_) {
	return _1ea729243_Str(_self_.safe_ptr<_1ea728e8a_customType>());
}
inline jule::Bool _215eb9d81_Equal_13(jule::Trait<_215eb9ec4_Kind> _self_, jule::Ptr<_215eba403_TypeKind> _5621_other) {
	return _1ea729551_Equal(_self_.data.as<_1ea728e8a_customType>(), _5621_other);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed452c_FindPackage_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _930_ident) {
	return _215e03924_FindPackage(_self_.safe_ptr<_215e03490_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed483a_SelectPackage_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _1332_selector) {
	return _215e03c32_SelectPackage(_self_.safe_ptr<_215e03490_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_215e41aa5_Var> _215ed4be2_FindVar_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _215e040d9_FindVar(_self_.safe_ptr<_215e03490_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_215eb9710_TypeAlias> _215ed5099_FindTypeAlias_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _215e04491_FindTypeAlias(_self_.safe_ptr<_215e03490_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_215dc6cd2_Struct> _215ed5451_FindStruct_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _215e04848_FindStruct(_self_.safe_ptr<_215e03490_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_215dcd24a_Fn> _215ed5808_FindFn_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _215e04c00_FindFn(_self_.safe_ptr<_215e03490_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_215dddc1c_Trait> _215ed5b16_FindTrait_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3328_ident) {
	return _215e0500d_FindTrait(_self_.safe_ptr<_215e03490_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_215de0d62_Enum> _215ed5e24_FindEnum_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3727_ident) {
	return _215e0531b_FindEnum(_self_.safe_ptr<_215e03490_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_215de245c_TypeEnum> _215ed6232_FindTypeEnum_0(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _4131_ident) {
	return _215e05629_FindTypeEnum(_self_.safe_ptr<_215e03490_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed452c_FindPackage_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _930_ident) {
	return _215e1a650_FindPackage(_self_.safe_ptr<_215e1a133_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed483a_SelectPackage_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _1332_selector) {
	return _215e1a95d_SelectPackage(_self_.safe_ptr<_215e1a133_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_215e41aa5_Var> _215ed4be2_FindVar_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _215e1ad15_FindVar(_self_.safe_ptr<_215e1a133_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_215eb9710_TypeAlias> _215ed5099_FindTypeAlias_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _215e1b1bc_FindTypeAlias(_self_.safe_ptr<_215e1a133_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_215dc6cd2_Struct> _215ed5451_FindStruct_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _215e1b574_FindStruct(_self_.safe_ptr<_215e1a133_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_215dcd24a_Fn> _215ed5808_FindFn_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _215e1b92b_FindFn(_self_.safe_ptr<_215e1a133_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_215dddc1c_Trait> _215ed5b16_FindTrait_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3328_ident) {
	return _215e1bc39_FindTrait(_self_.safe_ptr<_215e1a133_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_215de0d62_Enum> _215ed5e24_FindEnum_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3727_ident) {
	return _215e1c047_FindEnum(_self_.safe_ptr<_215e1a133_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_215de245c_TypeEnum> _215ed6232_FindTypeEnum_1(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _4131_ident) {
	return _215e1c355_FindTypeEnum(_self_.safe_ptr<_215e1a133_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed452c_FindPackage_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _930_ident) {
	return _215e1d565_FindPackage(_self_.safe_ptr<_215e1d08c_Package>(), _930_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed483a_SelectPackage_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _1332_selector) {
	return _215e1d873_SelectPackage(_self_.safe_ptr<_215e1d08c_Package>(), _1332_selector);
}
inline jule::Ptr<_215e41aa5_Var> _215ed4be2_FindVar_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _215e1dc2a_FindVar(_self_.safe_ptr<_215e1d08c_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_215eb9710_TypeAlias> _215ed5099_FindTypeAlias_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _215e1e0d2_FindTypeAlias(_self_.safe_ptr<_215e1d08c_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_215dc6cd2_Struct> _215ed5451_FindStruct_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _215e1e489_FindStruct(_self_.safe_ptr<_215e1d08c_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_215dcd24a_Fn> _215ed5808_FindFn_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _215e1e841_FindFn(_self_.safe_ptr<_215e1d08c_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_215dddc1c_Trait> _215ed5b16_FindTrait_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3328_ident) {
	return _215e1eb4e_FindTrait(_self_.safe_ptr<_215e1d08c_Package>(), _3328_ident);
}
inline jule::Ptr<_215de0d62_Enum> _215ed5e24_FindEnum_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3727_ident) {
	return _215e1ee5c_FindEnum(_self_.safe_ptr<_215e1d08c_Package>(), _3727_ident);
}
inline jule::Ptr<_215de245c_TypeEnum> _215ed6232_FindTypeEnum_2(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _4131_ident) {
	return _215e2026a_FindTypeEnum(_self_.safe_ptr<_215e1d08c_Package>(), _4131_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed452c_FindPackage_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _930_ident) {
	return _215e2379b_FindPackage(_self_.safe_ptr<_215e2327e_Sema>(), _930_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed483a_SelectPackage_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _1332_selector) {
	return _215e23aa9_SelectPackage(_self_.safe_ptr<_215e2327e_Sema>(), _1332_selector);
}
inline jule::Ptr<_215e41aa5_Var> _215ed4be2_FindVar_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _215e23e61_FindVar(_self_.safe_ptr<_215e2327e_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_215eb9710_TypeAlias> _215ed5099_FindTypeAlias_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _215e24318_FindTypeAlias(_self_.safe_ptr<_215e2327e_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_215dc6cd2_Struct> _215ed5451_FindStruct_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _215e246c0_FindStruct(_self_.safe_ptr<_215e2327e_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_215dcd24a_Fn> _215ed5808_FindFn_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _215e24a77_FindFn(_self_.safe_ptr<_215e2327e_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_215dddc1c_Trait> _215ed5b16_FindTrait_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3328_ident) {
	return _215e24d85_FindTrait(_self_.safe_ptr<_215e2327e_Sema>(), _3328_ident);
}
inline jule::Ptr<_215de0d62_Enum> _215ed5e24_FindEnum_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3727_ident) {
	return _215e25193_FindEnum(_self_.safe_ptr<_215e2327e_Sema>(), _3727_ident);
}
inline jule::Ptr<_215de245c_TypeEnum> _215ed6232_FindTypeEnum_3(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _4131_ident) {
	return _215e254a1_FindTypeEnum(_self_.safe_ptr<_215e2327e_Sema>(), _4131_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed452c_FindPackage_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _930_ident) {
	return _215e89b64_FindPackage(_self_.safe_ptr<_215e89647_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_215e1a133_ImportInfo> _215ed483a_SelectPackage_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _1332_selector) {
	return _215e89e72_SelectPackage(_self_.safe_ptr<_215e89647_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_215e41aa5_Var> _215ed4be2_FindVar_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _215e8a329_FindVar(_self_.safe_ptr<_215e89647_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_215eb9710_TypeAlias> _215ed5099_FindTypeAlias_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _215e8a6d1_FindTypeAlias(_self_.safe_ptr<_215e89647_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_215dc6cd2_Struct> _215ed5451_FindStruct_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _215e8aa88_FindStruct(_self_.safe_ptr<_215e89647_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_215dcd24a_Fn> _215ed5808_FindFn_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _215e8ae40_FindFn(_self_.safe_ptr<_215e89647_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_215dddc1c_Trait> _215ed5b16_FindTrait_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3328_ident) {
	return _215e8b24d_FindTrait(_self_.safe_ptr<_215e89647_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_215de0d62_Enum> _215ed5e24_FindEnum_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _3727_ident) {
	return _215e8b55b_FindEnum(_self_.safe_ptr<_215e89647_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_215de245c_TypeEnum> _215ed6232_FindTypeEnum_4(jule::Trait<_215ed6375_Lookup> _self_, jule::Str _4131_ident) {
	return _215e8b869_FindTypeEnum(_self_.safe_ptr<_215e89647_SymbolTable>(), _4131_ident);
}
inline jule::Str _1ea748e44_Name_0(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3cd479_Name(_self_.safe_ptr<_20c3cd18d_Flag>());
}
inline jule::I32 _1ea749076_Short_0(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3cd831_Short(_self_.safe_ptr<_20c3cd18d_Flag>());
}
inline jule::Str _1ea7491a8_What_0(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3cd5ab_What(_self_.safe_ptr<_20c3cd18d_Flag>());
}
inline void _1ea74932e_Reset_0(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	_20c3cd6dd_Reset(_self_.safe_ptr<_20c3cd18d_Flag>());
}
inline jule::Str _1ea748e44_Name_1(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d1889_Name(_self_.safe_ptr<_20c3d1ceb_Flag>());
}
inline jule::I32 _1ea749076_Short_1(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d234b_Short(_self_.safe_ptr<_20c3d1ceb_Flag>());
}
inline jule::Str _1ea7491a8_What_1(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d20d7_What(_self_.safe_ptr<_20c3d1ceb_Flag>());
}
inline void _1ea74932e_Reset_1(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	_20c3d2219_Reset(_self_.safe_ptr<_20c3d1ceb_Flag>());
}
inline jule::Str _1ea748e44_Name_2(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d5151_Name(_self_.safe_ptr<_20c3d55b3_Flag>());
}
inline jule::I32 _1ea749076_Short_2(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d5b13_Short(_self_.safe_ptr<_20c3d55b3_Flag>());
}
inline jule::Str _1ea7491a8_What_2(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d589e_What(_self_.safe_ptr<_20c3d55b3_Flag>());
}
inline void _1ea74932e_Reset_2(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	_20c3d59d1_Reset(_self_.safe_ptr<_20c3d55b3_Flag>());
}
inline jule::Str _1ea748e44_Name_3(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d895c_Name(_self_.safe_ptr<_20c3d8dbe_Flag>());
}
inline jule::I32 _1ea749076_Short_3(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d941e_Short(_self_.safe_ptr<_20c3d8dbe_Flag>());
}
inline jule::Str _1ea7491a8_What_3(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3d91aa_What(_self_.safe_ptr<_20c3d8dbe_Flag>());
}
inline void _1ea74932e_Reset_3(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	_20c3d92dc_Reset(_self_.safe_ptr<_20c3d8dbe_Flag>());
}
inline jule::Str _1ea748e44_Name_4(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3dc224_Name(_self_.safe_ptr<_20c3dc686_Flag>());
}
inline jule::I32 _1ea749076_Short_4(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3dcbd6_Short(_self_.safe_ptr<_20c3dc686_Flag>());
}
inline jule::Str _1ea7491a8_What_4(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	return _20c3dc972_What(_self_.safe_ptr<_20c3dc686_Flag>());
}
inline void _1ea74932e_Reset_4(jule::Trait<_1ea778b22_CommonFlag> _self_) {
	_20c3dcaa4_Reset(_self_.safe_ptr<_20c3dc686_Flag>());
}


static _215e174b5_ImporterMptrData _215e174b5_Importer_mptr_data[] = {
	{
		._215e16409_SetModPath=_215e16409_SetModPath_0,
		._215e16629_GetModPath=_215e16629_GetModPath_0,
		._215e16937_ModById=_215e16937_ModById_0,
		._215e16c45_GetImport=_215e16c45_GetImport_0,
		._215e170ec_ImportPackage=_215e170ec_ImportPackage_0,
		._215e17372_Imported=_215e17372_Imported_0,
	},
};
static _215eb9ec4_KindMptrData _215eb9ec4_Kind_mptr_data[] = {
	{
		._215eb9a73_Str=_215eb9a73_Str_0,
		._215eb9d81_Equal=_215eb9d81_Equal_0,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_1,
		._215eb9d81_Equal=_215eb9d81_Equal_1,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_2,
		._215eb9d81_Equal=_215eb9d81_Equal_2,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_3,
		._215eb9d81_Equal=_215eb9d81_Equal_3,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_4,
		._215eb9d81_Equal=_215eb9d81_Equal_4,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_5,
		._215eb9d81_Equal=_215eb9d81_Equal_5,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_6,
		._215eb9d81_Equal=_215eb9d81_Equal_6,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_7,
		._215eb9d81_Equal=_215eb9d81_Equal_7,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_8,
		._215eb9d81_Equal=_215eb9d81_Equal_8,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_9,
		._215eb9d81_Equal=_215eb9d81_Equal_9,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_10,
		._215eb9d81_Equal=_215eb9d81_Equal_10,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_11,
		._215eb9d81_Equal=_215eb9d81_Equal_11,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_12,
		._215eb9d81_Equal=_215eb9d81_Equal_12,
	},
	{
		._215eb9a73_Str=_215eb9a73_Str_13,
		._215eb9d81_Equal=_215eb9d81_Equal_13,
	},
};
static _215ed6375_LookupMptrData _215ed6375_Lookup_mptr_data[] = {
	{
		._215ed452c_FindPackage=_215ed452c_FindPackage_0,
		._215ed483a_SelectPackage=_215ed483a_SelectPackage_0,
		._215ed4be2_FindVar=_215ed4be2_FindVar_0,
		._215ed5099_FindTypeAlias=_215ed5099_FindTypeAlias_0,
		._215ed5451_FindStruct=_215ed5451_FindStruct_0,
		._215ed5808_FindFn=_215ed5808_FindFn_0,
		._215ed5b16_FindTrait=_215ed5b16_FindTrait_0,
		._215ed5e24_FindEnum=_215ed5e24_FindEnum_0,
		._215ed6232_FindTypeEnum=_215ed6232_FindTypeEnum_0,
	},
	{
		._215ed452c_FindPackage=_215ed452c_FindPackage_1,
		._215ed483a_SelectPackage=_215ed483a_SelectPackage_1,
		._215ed4be2_FindVar=_215ed4be2_FindVar_1,
		._215ed5099_FindTypeAlias=_215ed5099_FindTypeAlias_1,
		._215ed5451_FindStruct=_215ed5451_FindStruct_1,
		._215ed5808_FindFn=_215ed5808_FindFn_1,
		._215ed5b16_FindTrait=_215ed5b16_FindTrait_1,
		._215ed5e24_FindEnum=_215ed5e24_FindEnum_1,
		._215ed6232_FindTypeEnum=_215ed6232_FindTypeEnum_1,
	},
	{
		._215ed452c_FindPackage=_215ed452c_FindPackage_2,
		._215ed483a_SelectPackage=_215ed483a_SelectPackage_2,
		._215ed4be2_FindVar=_215ed4be2_FindVar_2,
		._215ed5099_FindTypeAlias=_215ed5099_FindTypeAlias_2,
		._215ed5451_FindStruct=_215ed5451_FindStruct_2,
		._215ed5808_FindFn=_215ed5808_FindFn_2,
		._215ed5b16_FindTrait=_215ed5b16_FindTrait_2,
		._215ed5e24_FindEnum=_215ed5e24_FindEnum_2,
		._215ed6232_FindTypeEnum=_215ed6232_FindTypeEnum_2,
	},
	{
		._215ed452c_FindPackage=_215ed452c_FindPackage_3,
		._215ed483a_SelectPackage=_215ed483a_SelectPackage_3,
		._215ed4be2_FindVar=_215ed4be2_FindVar_3,
		._215ed5099_FindTypeAlias=_215ed5099_FindTypeAlias_3,
		._215ed5451_FindStruct=_215ed5451_FindStruct_3,
		._215ed5808_FindFn=_215ed5808_FindFn_3,
		._215ed5b16_FindTrait=_215ed5b16_FindTrait_3,
		._215ed5e24_FindEnum=_215ed5e24_FindEnum_3,
		._215ed6232_FindTypeEnum=_215ed6232_FindTypeEnum_3,
	},
	{
		._215ed452c_FindPackage=_215ed452c_FindPackage_4,
		._215ed483a_SelectPackage=_215ed483a_SelectPackage_4,
		._215ed4be2_FindVar=_215ed4be2_FindVar_4,
		._215ed5099_FindTypeAlias=_215ed5099_FindTypeAlias_4,
		._215ed5451_FindStruct=_215ed5451_FindStruct_4,
		._215ed5808_FindFn=_215ed5808_FindFn_4,
		._215ed5b16_FindTrait=_215ed5b16_FindTrait_4,
		._215ed5e24_FindEnum=_215ed5e24_FindEnum_4,
		._215ed6232_FindTypeEnum=_215ed6232_FindTypeEnum_4,
	},
};
static _1ea778b22_CommonFlagMptrData _1ea778b22_CommonFlag_mptr_data[] = {
	{
		._1ea748e44_Name=_1ea748e44_Name_0,
		._1ea749076_Short=_1ea749076_Short_0,
		._1ea7491a8_What=_1ea7491a8_What_0,
		._1ea74932e_Reset=_1ea74932e_Reset_0,
	},
	{
		._1ea748e44_Name=_1ea748e44_Name_1,
		._1ea749076_Short=_1ea749076_Short_1,
		._1ea7491a8_What=_1ea7491a8_What_1,
		._1ea74932e_Reset=_1ea74932e_Reset_1,
	},
	{
		._1ea748e44_Name=_1ea748e44_Name_2,
		._1ea749076_Short=_1ea749076_Short_2,
		._1ea7491a8_What=_1ea7491a8_What_2,
		._1ea74932e_Reset=_1ea74932e_Reset_2,
	},
	{
		._1ea748e44_Name=_1ea748e44_Name_3,
		._1ea749076_Short=_1ea749076_Short_3,
		._1ea7491a8_What=_1ea7491a8_What_3,
		._1ea74932e_Reset=_1ea74932e_Reset_3,
	},
	{
		._1ea748e44_Name=_1ea748e44_Name_4,
		._1ea749076_Short=_1ea749076_Short_4,
		._1ea7491a8_What=_1ea7491a8_What_4,
		._1ea74932e_Reset=_1ea74932e_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcea10_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_215dcea10_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215e41aa5_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_215e41aa5_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc71ab_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_215dc71ab_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dddc1c_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_215dddc1c_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc651d_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_215dc651d_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc18ae_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_215dc18ae_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc5808_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_215dc5808_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dbc06e_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_215dbc06e_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc5e13_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_215dc5e13_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dbd04d_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_215dbd04d_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc3c46_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_215dc3c46_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc4d57_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_215dc4d57_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215daaba6_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_215daaba6_IdentTypeDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dee16c_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_215dee16c_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215deb92d_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_215deb92d_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcc007_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_215dcc007_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215e8e471_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_215e8e471_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcc997_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_215dcc997_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcb2d1_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dca841_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_215dca841_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dca467_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_215dca467_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dca654_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_215dca654_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcac1a_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcae07_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_215dcae07_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcbd1a_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_215dcbd1a_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc95a9_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dccb84_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_215dccb84_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc8553_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_215dc8553_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dec489_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_215dec489_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dec775_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_215dec775_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dbe33a_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_215dbe33a_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215decbe8_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_215decbe8_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dbebcb_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_215dbebcb_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215ded5cd_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_215ded5cd_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215ded9c9_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_215ded9c9_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dee458_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_215dee458_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dee810_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_215dee810_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215deec83_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_215deec83_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc892c_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_215dc892c_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215e0013a_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_215e0013a_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21470339b_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_21470339b_Const> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215e00679_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_215e00679_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215e01779_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_215e01779_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dedd81_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_215dedd81_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215e01aed_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_215e01aed_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dba578_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_215dba578_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215daeb11_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_215daeb11_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc11d8_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_215dc11d8_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dbda65_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_215dbda65_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc043a_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_215dc043a_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db7c90_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_215db7c90_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db8147_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_215db8147_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db907c_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_215db907c_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc2508_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_215dc2508_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db8433_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_215db8433_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc0083_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_215dc0083_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dbd405_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_215dbd405_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db04a2_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_215db04a2_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcd24a_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_215dcd24a_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc6cd2_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_215dc6cd2_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215eb9710_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_215eb9710_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215de0d62_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_215de0d62_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215de245c_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_215de245c_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc93bc_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_215dc93bc_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc97da_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_215dc97da_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc9da1_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_215dc9da1_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dca08d_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_215dca08d_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc7ab3_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_215dc7ab3_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type75_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type75_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=__jule_any_type75_eq, .to_str=__jule_any_type75_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type75 && __jule_any_type75_eq(any.data.alloc, (void*)&other); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dacaed_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_215dacaed_ArrTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dabd94_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_215dabd94_SlcTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dac46b_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_215dac46b_PtrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dab998_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_215dab998_SptrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dad34b_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_215dad34b_MapTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dac180_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_215dac180_TupleTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db2383_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_215db2383_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc8740_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_215dc8740_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db4572_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_215db4572_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db5a18_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_215db5a18_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db17c2_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_215db17c2_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db078d_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_215db078d_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dca27a_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_215dca27a_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcc5bd_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_215dcc5bd_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215eba403_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_215eba403_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc9bb4_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_215dc9bb4_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db3065_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_215db3065_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dab305_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_215dab305_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db1ecb_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_215db1ecb_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215daa5e0_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_215daa5e0_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db2ae2_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_215db2ae2_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dab6ac_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_215dab6ac_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc91d0_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_215dc91d0_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type99_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type99_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=__jule_any_type99_eq, .to_str=__jule_any_type99_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type99 && __jule_any_type99_eq(any.data.alloc, (void*)&other); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc8366_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_215dc8366_CastingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db6200_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_215db6200_SliceExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc7e8c_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_215dc7e8c_StructLitExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc99c7_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_215dc99c7_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc8ee3_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_215dc8ee3_MapExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc8b19_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_215dc8b19_AnonFnExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215daedec_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_215daedec_RangeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db0b45_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_215db0b45_LitExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db134e_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_215db134e_UnsafeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db6a6e_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_215db6a6e_IndexingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db7179_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_215db7179_SlicingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db273a_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_215db273a_CastExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db4cc0_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_215db4cc0_StructLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db3ae3_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_215db3ae3_FnCallExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db5243_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_215db5243_BraceLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215db34d8_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_215db34d8_BinopExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type116_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type116_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=__jule_any_type116_eq, .to_str=__jule_any_type116_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type116 && __jule_any_type116_eq(any.data.alloc, (void*)&other); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc78c6_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_215dc78c6_BinopExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dc8179_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_215dc8179_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcaa2d_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcb0e4_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcb4bd_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcb6aa_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcc1e4_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_215dcc1e4_SizeofExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcc3d1_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_215dcc3d1_AlignofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_215dcc7aa_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_215dcc7aa_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216117a39_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_216117a39_MutSlicingExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216117e13_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_216117e13_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2161169e4_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_2161169e4_StrAppendExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2161174ea_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_2161174ea_PushToSliceExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_21611662b_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_21611662b_StrCompExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216116cd0_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_216116cd0_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_216117165_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_216117165_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
void __jule_any_type140_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type140_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_any_type140_dealloc, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type140_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type140 && __jule_any_type140_eq(any.data.alloc, (void*)&other); }
void __jule_any_type141_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type141_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_any_type141_dealloc, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type141_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type141 && __jule_any_type141_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _22dbce396_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1ea749c7a_OutDir = jule::Str("dist", 4);
jule::Str _1ea74a088_OutName = jule::Str("ir.cpp", 6);
jule::Str _1ea74a1dc_Out = jule::Str();
jule::Str _22bc3185c_Compiler = jule::Str();
jule::Str _22bc31a7c_CompilerPath = jule::Str();
jule::Str _22bc31c9c_CppStd = jule::Str("cpp17", 5);
jule::Bool _22bc31ebc_Shadowing = false;
jule::Bool _22bc321dc_Transpilation = false;
jule::Bool _22bc3240c_Test = false;
jule::Bool _22bc326a4_RC = true;
jule::Bool _22bc32a7d_Safety = true;
jule::Bool _22bc32d47_Production = false;
jule::Ptr<_22da89a7b_RangeTable> _22da2045c__L = jule::new_ptr<_22da89a7b_RangeTable>(_22da89a7b_RangeTable{._field_R16=jule::Slice<_22da89185_Range16>::make({_22da89185_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22da89185_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22da89185_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22da89185_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22da89185_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22da89185_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22da89185_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22da89185_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22da89185_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22da89185_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22da89185_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22da89185_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22da89185_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22da89185_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22da89185_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22da89185_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22da89185_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22da89185_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22da89185_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22da89185_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22da89185_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22da89185_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22da89185_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22da89185_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22da89185_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22da89185_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22da89185_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22da89185_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22da89185_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22da89185_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22da89185_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22da89185_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22da89185_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22da89185_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22da89185_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22da89185_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22da89185_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22da89185_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22da89185_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22da89185_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22da89185_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22da89185_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22da89608_Range32>::make({_22da89608_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22da89608_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22da89608_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22da89608_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22da89608_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22da89608_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22da89608_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22da89608_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22da89608_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22da89608_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22da89608_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22da89608_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22da89608_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22da89608_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22da89608_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22da89608_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22da89608_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22da89608_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22da89608_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22da89608_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22da89608_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22da89608_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22da89608_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22da89608_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_22da89a7b_RangeTable> _22da2144c__LU = jule::new_ptr<_22da89a7b_RangeTable>(_22da89a7b_RangeTable{._field_R16=jule::Slice<_22da89185_Range16>::make({_22da89185_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22da89185_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22da89185_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22da89185_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22da89185_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22da89185_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22da89185_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22da89185_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22da89185_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22da89185_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22da89185_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22da89185_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22da89608_Range32>::make({_22da89608_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22da89608_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22da89608_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22da89608_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22da89608_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22da89608_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _22da834e2__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _22db4a5ed_first = jule::Array<jule::U8,256>({});
jule::Array<_22db4ab81_acceptRange,16> _22db4ae8e_acceptRanges = jule::Array<_22db4ab81_acceptRange,16>({_22db4ab81_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_22db4ab81_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_22db4ab81_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_22db4ab81_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_22db4ab81_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _22bc3b856_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _22dbdd88e_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _22dbe04d9_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _22dc07c1b_PathStdlib = jule::Str();
jule::Str _22dc5d238_PathExec = jule::Str();
jule::Str _22dc5dd71_PathWd = jule::Str();
jule::Str _22dc5e327_PathApi = jule::Str();
jule::Str _22dc82aa9_Os = jule::Str("darwin", 6);
jule::Str _22dc09305_Arch = jule::Str("arm64", 5);
jule::Array<jule::I32,5> _22e00e4d9_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _22e00e709_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _22e00e95c_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _22e0a46e4_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _22e0a49e1_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_22e0b25d1_kindPair,47> _22e0b2a10_keywords = jule::Array<_22e0b25d1_kindPair,47>({_22e0b25d1_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_22e0b25d1_kindPair,39> _22e0b2d51_basicOps = jule::Array<_22e0b25d1_kindPair,39>({_22e0b25d1_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22e0b25d1_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _2146ad983__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _2146ae049__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_2142c7d2d_floatInfo _21352a48d_f32info = _2142c7d2d_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_2142c7d2d_floatInfo _21352a900_f64info = _2142c7d2d_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _2142c9e95_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _21438b298_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _21442da11_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _21444b8db_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _2144ce386_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_2146ebac0_leftCheat> _2145b8959_leftCheats = jule::Slice<_2146ebac0_leftCheat>::make({_2146ebac0_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_2146ebac0_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_2146ebac0_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_2146ebac0_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_2146ebac0_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_2146ebac0_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_2146ebac0_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_2146ebac0_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_2146ebac0_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_2146ebac0_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_2146ebac0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_2146ebac0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_2146ebac0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_2146ebac0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_2146ebac0_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_2146ebac0_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_2146ebac0_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_2146ebac0_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_2146ebac0_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_2146ebac0_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_2146ebac0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_2146ebac0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_2146ebac0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_2146ebac0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_2146ebac0_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_2146ebac0_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_2146ebac0_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_2146ebac0_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_2146ebac0_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_2146ebac0_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_2146ebac0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_2146ebac0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_2146ebac0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_2146ebac0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_2146ebac0_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_2146ebac0_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_2146ebac0_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_2146ebac0_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_2146ebac0_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_2146ebac0_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_2146ebac0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_2146ebac0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_2146ebac0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_2146ebac0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_2146ebac0_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_2146ebac0_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_2146ebac0_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_2146ebac0_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_2146ebac0_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_2146ebac0_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_2146ebac0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_2146ebac0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_2146ebac0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_2146ebac0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_2146ebac0_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_2146ebac0_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_2146ebac0_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_2146ebac0_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_2146ebac0_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_2146ebac0_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_2146ebac0_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _213355e23_BitSize = 0LL;
jule::Str _2134abdd1_SysInt = jule::Str();
jule::Str _22e3ba5a9_SysUint = jule::Str();
jule::Slice<jule::Str> _215de41c8_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _216126d9a_Copy = false;
jule::Bool _2161271a8_Deadcode = false;
jule::Bool _216127472_Append = false;
jule::Bool _216127780_Math = false;
jule::Bool _216127a49_Access = false;
jule::Bool _216127d13_Inline = false;
jule::Bool _2161280cc_Ptr = false;
jule::Bool _2161284a6_Cond = false;
jule::Bool _216128770_Str = false;
jule::Bool _1e9e63b9d_exprEnabled = false;
jule::Bool _1e9e64819_scopeEnabled = false;
jule::Array<jule::U64,12> _1ea71a4cb_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ea66093d_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_22da89a7b_RangeTable> _22da2db52_Upper = _22da2144c__LU;
jule::Ptr<_22da89a7b_RangeTable> _22da275eb_Letter = _22da2045c__L;





std::ostream &operator<<(std::ostream &_Stream, _22da89185_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22da89608_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22da89a7b_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22db4ab81_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22cbb9151_index(_22cbb2a40_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _22cbbb97d_append(_22cbb2a40_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _22cbbd2a9_string(_22cbb2a40_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _22cbb2a40_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22bdc95e8_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>> static__22cb24881_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _22caa7902_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>>(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _22caa7b99_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1eb0998d7;
			};
			jule::Str _2517_name = _22ca881eb_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_22cad505b_Status> _2621_stat = ({
				auto except = static__22bd107e8_Of(_22cc03e8d_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>>(except.error);
				} jule::Ptr<_22cad505b_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_22bdc95e8_DirEntry>(_22bdc95e8_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1eb0998d7:;
	}
	_iter_end_1eb0998d7:;;
	_22caa7e41_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__22cb4e3c2_Create(jule::Str _3922_path) {
	if ((_22caa87c1_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22cb29237_Remove(jule::Str _5122_path) {
	if ((_22caa8a68_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22bcdbd24_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22cad4b93_File>> static__22be1ec15_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _22caa70d8_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22cad4b93_File>>(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_22cad4b93_File>>(jule::Any(), static__22bd129c6_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__22bdc734e_Remove(jule::Str _3022_path) {
	if ((_22caa8d10_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22bcc2c72_Write(_22cad4b93_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22caba151_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _22bcdca06_Read(_22cad4b93_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22cab98e2_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_22cad4b93_File> static__22bd129c6_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_22cad4b93_File>(_22cad4b93_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_22cad4b93_File>> static__22bdc6ae0_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_22cad4b93_File>>(jule::Any(), ({
		auto except = static__22be1ec15_Open(_5622_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_22cad4b93_File>>(except.error);
		} jule::Ptr<_22cad4b93_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__22bdc71a6_Read(jule::Str _6820_path) {
	jule::Ptr<_22cad505b_Status> _6913_s = ({
		auto except = static__22bd107e8_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22cad505b_Status>(nullptr);});
	});;
	if ((!(_22cad5248_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_22cad537a_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_22cad4b93_File> _7917_f = ({
		auto except = static__22be1ec15_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22cad4b93_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _22bcdeb3a_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_22cad537a_Size(_6913_s.ptr())), static_cast<jule::I64>(_22cad537a_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _22bcdca06_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__22bdc7bac_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_22cad4b93_File> _9317_f = ({
		auto except = static__22be1ec15_Open(_9221_path, static_cast<jule::I64>(1537LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_22cad4b93_File>(nullptr);});
	});;
	({
		auto except = _22bcc2c72_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _22bcdeb3a_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22bcdd0bc_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I64 _9947_perm) {
	({
		auto except = static__22bdc7bac_Write(_9924_path, _22bd10188_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22bdc645d_Seek(_22cad4b93_File* _self_, jule::I64 _11123_offset, jule::I64 _11136_origin) {
	jule::I64 _11213_pos = _22cab9507_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I64>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I64> _22bcc17cb_WriteStr(_22cad4b93_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _22bcc2c72_Write(_self_, _22bd10188_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _22bcdeb3a_Close(_22cad4b93_File* _self_) {
	if ((_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22cad4b93_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22cad505b_Status>> static__22bd107e8_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_22cad505b_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _22caa6bed_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22cad505b_Status>>(jule::Any(_22bce3985_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_22cad505b_Status> _2017_stat = jule::new_ptr<_22cad505b_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_22cad505b_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _22bd10991_IsDir(_22cad505b_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _22cad5248_IsReg(_22cad505b_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _22cad537a_Size(_22cad505b_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _22cad505b_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22dcbb609_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22dbec89d_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22e0aa596_Prec(_22e0aa1de_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1eb1982ee:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1eb198365:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1eb197c16:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1eb197c8d:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1eb197d15:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1eb197a18:;
			{
				return 0LLU;;
			}
		}
		_match_end_1eb196e79:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22e0aa1de_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _22e0b0986_IsOk(_22e0b0579_File* _self_) {
	({
		auto except = static__22bd107e8_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_22cad505b_Status>(nullptr);});
	});
	return true;;
}



inline void _22e0b0c0b_Fill(_22e0b0579_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _22e0b0e70_Dir(_22e0b0579_File* _self_) {
	return _22cc079ec_Dir((*(_self_))._field_Path);;
}



inline jule::Str _22e0b11d4_Name(_22e0b0579_File* _self_) {
	return _22cbd9759_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _22e0b1448_Addr(_22e0b0579_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _22e0b1756_GetRow(_22e0b0579_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1eb19cd5e;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1eb19cd5e:;
	}
	_iter_end_1eb19cd5e:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _22e0b0579_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22e0b25d1_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _22e0b86d6_pushErr(_22e0b8142_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_22e0b334b_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _22e0b8a05_pushErrTok(_22e0b8142_lex* _self_, jule::Ptr<_22e0aa1de_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_22e0b334b_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _22e0b8bd1_lex(_22e0b8142_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_22e0babd3_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_22e0aa1de_Token> _47321_token = _22e0bc058_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1eb1d1524:;
	}
	_iter_end_1eb1d1524:;;
}



inline jule::Str _22e0b8ede_id(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_22e0ad6ba_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_22e0adc09_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_22e0ad6ba_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1eb1d47ad:;
	}
	_iter_end_1eb1d47ad:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _22e0b9253_resume(_22e0b8142_lex* _self_) {
	jule::I64 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_22e0ad269_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1eb1d91db:;
						{
							_22e0babd3_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1eb1d8bbe:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1eb1d4725:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1eb1d8a9d:;
				};
				goto _iter_next_1eb1d73d7;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1eb1d7eba;
					};
				}
			_iter_next_1eb1d7eba:;
			}
			_iter_end_1eb1d7eba:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_1eb1d73d7:;
	}
	_iter_end_1eb1d73d7:;;
	return nullptr;;
}



inline void _22e0b94c8_lexLineComment(_22e0b8142_lex* _self_, jule::Ptr<_22e0aa1de_Token>* _53538_token) {
	jule::I64 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1eb1db8b4;
			};
		}
	_iter_next_1eb1db8b4:;
	}
	_iter_end_1eb1db8b4:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _22e0b974d_lexRangeComment(_22e0b8142_lex* _self_, jule::Ptr<_22e0aa1de_Token>* _55039_token) {
	jule::I64 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1eb1debb4;
			};
			if ((_55417_r == '\n')) {
				_22e0babd3_newLine(_self_);
				goto _iter_next_1eb1debb4;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1eb1debb4:;
	}
	_iter_end_1eb1debb4:;;
	_22e0b86d6_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _22e0b9a5b_num(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_22e0b6b68_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_22e0b68c1_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_22e0b531a_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_22e0b5073_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _22e0b9d69_escapeSeq(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1eb1e995a:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1eb1e988e:;
			{
				_60117_seq=_22e0b7251_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1eb1e95c5:;
			{
				_60117_seq=_22e0b751a_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1eb1e963b:;
			{
				_60117_seq=_22e0b76c4_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1eb1e8d66:;
			{
				_60117_seq=_22e0b795a_byteEscape(_60029_txt);
			}
		}
		_match_end_1eb1e94a4:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_22e0b86d6_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _22e0ba221_getRune(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _22e0b9d69_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _22e0ba52e_lexRune(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_1eb20090b;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_22e0b86d6_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_22e0babd3_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _22e0ba221_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_22db4d414_RuneCountStr(_65617_r);
			if (_65617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1eb20090b;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1eb20090b:;
	}
	_iter_end_1eb20090b:;;
	if ((_64217_n == 0LL)) {
		_22e0b86d6_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_22e0b86d6_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _22e0ba793_lexStr(_22e0b8142_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	(_67917_s).append(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1eb207171;
			};
			if ((_68717_ch == '\n')) {
				_22e0babd3_newLine(_self_);
				if ((!(_68213_raw))) {
					_22e0b86d6_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _22e0ba221_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_22db4d414_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1eb207171;
			};
		}
	_iter_next_1eb207171:;
	}
	_iter_end_1eb207171:;;
	return _67917_s;;
}



inline jule::Bool _22e0baa07_isFirstTokenOfLine(_22e0b8142_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _22e0babd3_newLine(_22e0b8142_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _22e0bb1cd_isOp(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_22e0aa1de_Token>* _72066_t) {
	if ((!(_22e0b36d1_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _22e0bb585_lexBasicOps(_22e0b8142_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_22e0aa1de_Token>* _73048_tok) {
	{
		auto expr = &(_22e0b2d51_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb20d474:;
		if (it != expr_end) {
			_22e0b25d1_kindPair *_73116_pair = it;
			{
				if (_22e0bb1cd_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_1eb20d474:;
			++it;
			goto _iter_begin_1eb20d474;
		}
		_iter_end_1eb20d474:;
	};
	return false;;
}



inline jule::Bool _22e0bb93c_lexId(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_22e0aa1de_Token>* _74043_t) {
	jule::Str _74113_lex = _22e0b8ede_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _22e0bbce4_lexNum(_22e0b8142_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_22e0aa1de_Token>* _75044_t) {
	jule::Str _75113_lex = _22e0b9a5b_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_22e0aa1de_Token> _22e0bc058_token(_22e0b8142_lex* _self_) {
	jule::Ptr<_22e0aa1de_Token> _76217_t = jule::new_ptr<_22e0aa1de_Token>(_22e0aa1de_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _22e0b9253_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_22e0bbce4_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1eb21449c:;
			{
				goto _match_end_1eb213897;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1eb214c0b:;
			{
				_76217_t.get()._field_Kind=_22e0ba52e_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1eb214c72:;
			{
				_76217_t.get()._field_Kind=_22e0ba793_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_22e0b36d1_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_1eb214ea3:;
			{
				_22e0b94c8_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_22e0b36d1_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_1eb215019:;
			{
				_22e0b974d_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_22e0bb1cd_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _22e0bb1cd_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _22e0bb1cd_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _22e0bb1cd_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _22e0bb1cd_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _22e0bb1cd_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _22e0bb585_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_1eb215080:;
			{
				goto _match_end_1eb213897;
			}
		}
		else if (_22e0bb93c_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1eb213963:;
			{
				{
					auto expr = &(_22e0b2a10_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1eb21a140:;
					if (it != expr_end) {
						_22e0b25d1_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_1eb21a140;
							};
						}
						_iter_next_1eb21a140:;
						++it;
						goto _iter_begin_1eb21a140;
					}
					_iter_end_1eb21a140:;
				};
			}
		}
		else {
			_case_begin_1eb2138ec:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_22e0b86d6_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1eb213897:;
	};
	(*(_self_))._field_column+=_22db4d414_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _22e0b8142_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2142c7d2d_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21454ed63_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2146ebac0_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2135194e3_set(_2146ebdcd_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1eb744515:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1eb74458c:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1eb7443a0:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1eb7466e3:;
					{
						goto _iter_next_1eb745eb7;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1eb74676a:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1eb745eb7;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1eb7467e2:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1eb745eb7;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1eb745eb7;
					}
				}
				_match_end_1eb7465c2:;
			};
			goto _iter_end_1eb745eb7;
		}
	_iter_next_1eb745eb7:;
	}
	_iter_end_1eb745eb7:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_21451a504_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1eb74de15;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1eb74de15:;
		}
		_iter_end_1eb74de15:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _2146e9194_floatBits(_2146ebdcd_decimal* _self_, _2142c7d2d_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _21438b298_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_21438b298_powtab[(*(_self_))._field_dp];
			};
			_2146ec1ec_shift(_self_, static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1eb7557ac:;
	}
	_iter_end_1eb7557ac:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _21438b298_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_21438b298_powtab[(-((*(_self_))._field_dp))];
			};
			_2146ec1ec_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1eb7567e1:;
	}
	_iter_end_1eb7567e1:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I64 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_2146ec1ec_shift(_self_, static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_2146ec1ec_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_2146ec6c5_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _2146ec0ba_assign(_2146ebdcd_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1eb763c93:;
	}
	_iter_end_1eb763c93:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1eb764711:;
	}
	_iter_end_1eb764711:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_2146ec939_trim(_self_);
}



inline void _2146ec1ec_shift(_2146ebdcd_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1eb7667e0:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1eb766867:;
			{
				while ((_35528_k > 60LL)) {
					{
						_2146eccd0_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1eb7675c1:;
				}
				_iter_end_1eb7675c1:;;
				_2146eccd0_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1eb7668de:;
			{
				while ((_35528_k < -60LL)) {
					{
						_2146eca6b_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1eb767538:;
				}
				_iter_end_1eb767538:;;
				_2146eca6b_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1eb7666be:;
	};
}



inline void _2146ec32e_roundDown(_2146ebdcd_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_2146ec939_trim(_self_);
}



inline void _2146ec461_roundUp(_2146ebdcd_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1eb76b20c:;
	}
	_iter_end_1eb76b20c:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _2146ec593_round(_2146ebdcd_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_2146ece12_shouldRoundUp(_self_, _41124_nd)) {
		_2146ec461_roundUp(_self_, _41124_nd);
	} else {
		_2146ec32e_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _2146ec6c5_roundedInteger(_2146ebdcd_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1eb76dd7a:;
	}
	_iter_end_1eb76dd7a:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1eb770a6e:;
	}
	_iter_end_1eb770a6e:;;
	if (_2146ece12_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _2146ebdcd_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_21470339b_Const> static__214703588_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_21470339b_Const>(_21470339b_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_21470339b_Const> static__2147036ba_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_21470339b_Const>(_21470339b_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_21470339b_Const> static__2147037ec_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_21470339b_Const>(_21470339b_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_21470339b_Const> static__21470392e_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_21470339b_Const>(_21470339b_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_21470339b_Const> static__214703a61_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_21470339b_Const>(_21470339b_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_21470339b_Const> static__214703b93_NewNil(void) {
	return jule::new_ptr<_21470339b_Const>(_21470339b_Const{._field_data=nullptr});;
}



inline jule::I64 _21470408e_ReadI64(_21470339b_Const* _self_) {
	if ((!(_21470527c_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _2147041c1_ReadU64(_21470339b_Const* _self_) {
	if ((!(_2147053ae_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _214704303_ReadBool(_21470339b_Const* _self_) {
	if ((!(_2147054e1_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _214704435_ReadStr(_21470339b_Const* _self_) {
	if ((!(_214705623_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _214704567_ReadF64(_21470339b_Const* _self_) {
	if ((!(_214705755_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _214704699_AsI64(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1eb7ebec4:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1eb7ec03a:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1eb7eb941:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1eb7eb853:;
			{
				return 0LL;;
			}
		}
		_match_end_1eb7eb7ed:;
	};
}



inline jule::U64 _2147047cb_AsU64(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1eb7ed8ee:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1eb7ed965:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1eb7ed46a:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1eb7ec117:;
			{
				return 0LLU;;
			}
		}
		_match_end_1eb7ec0b2:;
	};
}



inline jule::F64 _21470490d_AsF64(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1eb800329:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1eb800390:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1eb7eed95:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1eb7eda42:;
			{
				return 0LL;;
			}
		}
		_match_end_1eb7ed9dc:;
	};
}



inline void _214704a40_SetI64(_21470339b_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _214704b72_SetU64(_21470339b_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _214704ca4_SetBool(_21470339b_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _214704dd6_SetStr(_21470339b_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _214705018_SetF64(_21470339b_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _21470514a_SetNil(_21470339b_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _21470527c_IsI64(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1eb803c45:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb803eba:;
			{
				return false;;
			}
		}
		_match_end_1eb803e65:;
	};
}



inline jule::Bool _2147053ae_IsU64(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1eb80486c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb8041da:;
			{
				return false;;
			}
		}
		_match_end_1eb804097:;
	};
}



inline jule::Bool _2147054e1_IsBool(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1eb804b03:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb8052b8:;
			{
				return false;;
			}
		}
		_match_end_1eb805263:;
	};
}



inline jule::Bool _214705623_IsStr(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1eb8055b5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb805c7a:;
			{
				return false;;
			}
		}
		_match_end_1eb805c25:;
	};
}



inline jule::Bool _214705755_IsF64(_21470339b_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1eb806077:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb80673c:;
			{
				return false;;
			}
		}
		_match_end_1eb8066d7:;
	};
}



inline jule::Bool _214705887_IsNil(_21470339b_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _2147059b9_AreSameTypes(_21470339b_Const* _self_, _21470339b_Const _21327_x) {
	{
		
		if ((_21470527c_IsI64(_self_) == _21470527c_IsI64(&_21327_x))) {
			_case_begin_1eb8082dd:;
			{
				return true;;
			}
		}
		else if ((_2147053ae_IsU64(_self_) == _2147053ae_IsU64(&_21327_x))) {
			_case_begin_1eb807ae5:;
			{
				return true;;
			}
		}
		else if ((_214705755_IsF64(_self_) == _214705755_IsF64(&_21327_x))) {
			_case_begin_1eb807b6c:;
			{
				return true;;
			}
		}
		else if ((_2147054e1_IsBool(_self_) == _2147054e1_IsBool(&_21327_x))) {
			_case_begin_1eb807be4:;
			{
				return true;;
			}
		}
		else if ((_214705623_IsStr(_self_) == _214705623_IsStr(&_21327_x))) {
			_case_begin_1eb807c6b:;
			{
				return true;;
			}
		}
		else if ((_214705887_IsNil(_self_) == _214705887_IsNil(&_21327_x))) {
			_case_begin_1eb807ebe:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb807a6d:;
			{
				return false;;
			}
		}
		_match_end_1eb8079a2:;
	};
}



inline jule::Bool _214705aeb_And(_21470339b_Const* _self_, _21470339b_Const _23818_x) {
	{
		
		if ((_2147054e1_IsBool(_self_) && _2147054e1_IsBool(&_23818_x))) {
			_case_begin_1eb80b4de:;
			{
				return (_214704303_ReadBool(_self_) && _214704303_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1eb80ace6:;
			{
				return false;;
			}
		}
		_match_end_1eb80aae8:;
	};
}



inline jule::Bool _214705c2d_Or(_21470339b_Const* _self_, _21470339b_Const _24917_x) {
	{
		
		if ((_2147054e1_IsBool(_self_) && _2147054e1_IsBool(&_24917_x))) {
			_case_begin_1eb80c853:;
			{
				return (_214704303_ReadBool(_self_) || _214704303_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1eb80c19e:;
			{
				return false;;
			}
		}
		_match_end_1eb80b81e:;
	};
}



inline jule::Bool _214705d60_Eq(_21470339b_Const* _self_, _21470339b_Const _26017_x) {
	{
		
		if (_214705887_IsNil(_self_)) {
			_case_begin_1eb80dc2d:;
			{
				return _214705887_IsNil(&_26017_x);;
			}
		}
		else if (_2147054e1_IsBool(_self_)) {
			_case_begin_1eb80d58a:;
			{
				return (_2147054e1_IsBool(&_26017_x) && (_214704303_ReadBool(_self_) == _214704303_ReadBool(&_26017_x)));;
			}
		}
		else if (_214705623_IsStr(_self_)) {
			_case_begin_1eb80d601:;
			{
				return (_214705623_IsStr(&_26017_x) && (_214704435_ReadStr(_self_) == _214704435_ReadStr(&_26017_x)));;
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb80d678:;
			{
				return (_21470408e_ReadI64(_self_) == _214704699_AsI64(&_26017_x));;
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb80d700:;
			{
				return (_2147041c1_ReadU64(_self_) == _2147047cb_AsU64(&_26017_x));;
			}
		}
		else if (_214705755_IsF64(_self_)) {
			_case_begin_1eb80d931:;
			{
				return (_214704567_ReadF64(_self_) == _21470490d_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1eb80d524:;
			{
				return false;;
			}
		}
		_match_end_1eb80cb72:;
	};
}



inline jule::Bool _214705e92_Lt(_21470339b_Const* _self_, _21470339b_Const _28717_x) {
	{
		
		if (_214705623_IsStr(_self_)) {
			_case_begin_1eb812a23:;
			{
				return (_214705623_IsStr(&_28717_x) && (_214704435_ReadStr(_self_) < _214704435_ReadStr(&_28717_x)));;
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb8123d5:;
			{
				return (_21470408e_ReadI64(_self_) < _214704699_AsI64(&_28717_x));;
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb81244b:;
			{
				return (_2147041c1_ReadU64(_self_) < _2147047cb_AsU64(&_28717_x));;
			}
		}
		else if (_214705755_IsF64(_self_)) {
			_case_begin_1eb8124b2:;
			{
				return (_214704567_ReadF64(_self_) < _21470490d_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1eb80e05d:;
			{
				return false;;
			}
		}
		_match_end_1eb80de92:;
	};
}



inline jule::Bool _2147060c4_LtEq(_21470339b_Const* _self_, _21470339b_Const _31019_x) {
	{
		
		if (_214705623_IsStr(_self_)) {
			_case_begin_1eb815828:;
			{
				return (_214705623_IsStr(&_31019_x) && (_214704435_ReadStr(_self_) <= _214704435_ReadStr(&_31019_x)));;
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb8151da:;
			{
				return (_21470408e_ReadI64(_self_) <= _214704699_AsI64(&_31019_x));;
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb815251:;
			{
				return (_2147041c1_ReadU64(_self_) <= _2147047cb_AsU64(&_31019_x));;
			}
		}
		else if (_214705755_IsF64(_self_)) {
			_case_begin_1eb8152b7:;
			{
				return (_214704567_ReadF64(_self_) <= _21470490d_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1eb812c98:;
			{
				return false;;
			}
		}
		_match_end_1eb812bcc:;
	};
}



inline jule::Bool _214706206_Gt(_21470339b_Const* _self_, _21470339b_Const _33317_x) {
	{
		
		if (_214705623_IsStr(_self_)) {
			_case_begin_1eb81862d:;
			{
				return (_214705623_IsStr(&_33317_x) && (_214704435_ReadStr(_self_) > _214704435_ReadStr(&_33317_x)));;
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb817ee0:;
			{
				return (_21470408e_ReadI64(_self_) > _214704699_AsI64(&_33317_x));;
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb818056:;
			{
				return (_2147041c1_ReadU64(_self_) > _2147047cb_AsU64(&_33317_x));;
			}
		}
		else if (_214705755_IsF64(_self_)) {
			_case_begin_1eb8180bc:;
			{
				return (_214704567_ReadF64(_self_) > _21470490d_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1eb815a9d:;
			{
				return false;;
			}
		}
		_match_end_1eb8159d2:;
	};
}



inline jule::Bool _214706338_GtEq(_21470339b_Const* _self_, _21470339b_Const _35619_x) {
	{
		
		if (_214705623_IsStr(_self_)) {
			_case_begin_1eb81b433:;
			{
				return (_214705623_IsStr(&_35619_x) && (_214704435_ReadStr(_self_) >= _214704435_ReadStr(&_35619_x)));;
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb81ace5:;
			{
				return (_21470408e_ReadI64(_self_) >= _214704699_AsI64(&_35619_x));;
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb81ad5b:;
			{
				return (_2147041c1_ReadU64(_self_) >= _2147047cb_AsU64(&_35619_x));;
			}
		}
		else if (_214705755_IsF64(_self_)) {
			_case_begin_1eb81adc2:;
			{
				return (_214704567_ReadF64(_self_) >= _21470490d_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1eb8188a3:;
			{
				return false;;
			}
		}
		_match_end_1eb8187d7:;
	};
}



inline jule::Bool _21470646a_Add(_21470339b_Const* _self_, _21470339b_Const _37722_x) {
	{
		
		if (_214705623_IsStr(_self_)) {
			_case_begin_1eb81e238:;
			{
				if ((!(_214705623_IsStr(&_37722_x)))) {
					return false;;
				};
				_214704dd6_SetStr(_self_, (_214704435_ReadStr(_self_) + _214704435_ReadStr(&_37722_x)));
			}
		}
		else if (_214705755_IsF64(_self_)) {
			_case_begin_1eb81daea:;
			{
				_214705018_SetF64(_self_, static_cast<jule::F64>((_214704567_ReadF64(_self_) + _21470490d_AsF64(&_37722_x))));
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb81db61:;
			{
				if (_214705755_IsF64(&_37722_x)) {
					_214705018_SetF64(_self_, static_cast<jule::F64>((_21470490d_AsF64(_self_) + _214704567_ReadF64(&_37722_x))));
				} else {
					_214704a40_SetI64(_self_, static_cast<jule::I64>((_21470408e_ReadI64(_self_) + _214704699_AsI64(&_37722_x))));
				};
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb81dbc7:;
			{
				if (_214705755_IsF64(&_37722_x)) {
					_214705018_SetF64(_self_, static_cast<jule::F64>((_21470490d_AsF64(_self_) + _214704567_ReadF64(&_37722_x))));
				} else {
					_214704b72_SetU64(_self_, static_cast<jule::U64>((_2147041c1_ReadU64(_self_) + _2147047cb_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1eb81b6a8:;
			{
				return false;;
			}
		}
		_match_end_1eb81b5dc:;
	};
	return true;;
}



inline jule::Bool _21470659c_Sub(_21470339b_Const* _self_, _21470339b_Const _40622_x) {
	{
		
		if (_214705755_IsF64(_self_)) {
			_case_begin_1eb82466c:;
			{
				_214705018_SetF64(_self_, static_cast<jule::F64>((_214704567_ReadF64(_self_) - _21470490d_AsF64(&_40622_x))));
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb823e96:;
			{
				if (_214705755_IsF64(&_40622_x)) {
					_214705018_SetF64(_self_, static_cast<jule::F64>((_21470490d_AsF64(_self_) - _214704567_ReadF64(&_40622_x))));
				} else {
					_214704a40_SetI64(_self_, static_cast<jule::I64>((_21470408e_ReadI64(_self_) - _214704699_AsI64(&_40622_x))));
				};
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb82400c:;
			{
				if (_214705755_IsF64(&_40622_x)) {
					_214705018_SetF64(_self_, static_cast<jule::F64>((_21470490d_AsF64(_self_) - _214704567_ReadF64(&_40622_x))));
				} else {
					_214704b72_SetU64(_self_, static_cast<jule::U64>((_2147041c1_ReadU64(_self_) - _2147047cb_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1eb823e30:;
			{
				return false;;
			}
		}
		_match_end_1eb82367c:;
	};
	return true;;
}



inline jule::Bool _2147066ce_Mul(_21470339b_Const* _self_, _21470339b_Const _43022_x) {
	{
		
		if (_214705755_IsF64(_self_)) {
			_case_begin_1eb828b05:;
			{
				_214705018_SetF64(_self_, static_cast<jule::F64>((_214704567_ReadF64(_self_) * _21470490d_AsF64(&_43022_x))));
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb82842e:;
			{
				if (_214705755_IsF64(&_43022_x)) {
					_214705018_SetF64(_self_, static_cast<jule::F64>((_21470490d_AsF64(_self_) * _214704567_ReadF64(&_43022_x))));
				} else {
					_214704a40_SetI64(_self_, static_cast<jule::I64>((_21470408e_ReadI64(_self_) * _214704699_AsI64(&_43022_x))));
				};
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb828495:;
			{
				if (_214705755_IsF64(&_43022_x)) {
					_214705018_SetF64(_self_, static_cast<jule::F64>((_21470490d_AsF64(_self_) * _214704567_ReadF64(&_43022_x))));
				} else {
					_214704b72_SetU64(_self_, static_cast<jule::U64>((_2147041c1_ReadU64(_self_) * _2147047cb_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1eb8283b8:;
			{
				return false;;
			}
		}
		_match_end_1eb8279c2:;
	};
	return true;;
}



inline jule::Bool _214706811_Div(_21470339b_Const* _self_, _21470339b_Const _45822_x) {
	{
		
		if (_214705755_IsF64(_self_)) {
			_case_begin_1eb82d08d:;
			{
				jule::F64 _46117_l = _21470490d_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_214705018_SetF64(_self_, static_cast<jule::F64>(jule::div(_214704567_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb82c8b7:;
			{
				jule::F64 _46717_l = _21470490d_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_214705018_SetF64(_self_, static_cast<jule::F64>(jule::div(_21470490d_AsF64(_self_),_46717_l)));
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb82c92d:;
			{
				jule::F64 _47317_l = _21470490d_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_214705018_SetF64(_self_, static_cast<jule::F64>(jule::div(_21470490d_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1eb82c851:;
			{
				return false;;
			}
		}
		_match_end_1eb82be5a:;
	};
	return true;;
}



inline jule::Bool _214706943_Mod(_21470339b_Const* _self_, _21470339b_Const _48722_x) {
	{
		
		if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb832515:;
			{
				jule::I64 _49017_l = _214704699_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_214704a40_SetI64(_self_, static_cast<jule::I64>(jule::mod(_21470408e_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb831d50:;
			{
				jule::U64 _49617_l = _2147047cb_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_214704b72_SetU64(_self_, static_cast<jule::U64>(jule::mod(_2147041c1_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1eb831cd9:;
			{
				return false;;
			}
		}
		_match_end_1eb831c62:;
	};
	return true;;
}



inline jule::Bool _214706a75_BitwiseAnd(_21470339b_Const* _self_, _21470339b_Const _50929_x) {
	{
		
		if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb835639:;
			{
				_214704a40_SetI64(_self_, static_cast<jule::I64>((_21470408e_ReadI64(_self_) & _214704699_AsI64(&_50929_x))));
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb834e74:;
			{
				_214704b72_SetU64(_self_, static_cast<jule::U64>((_2147041c1_ReadU64(_self_) & _2147047cb_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1eb834e0d:;
			{
				return false;;
			}
		}
		_match_end_1eb834d86:;
	};
	return true;;
}



inline jule::Bool _214706ba7_BitwiseOr(_21470339b_Const* _self_, _21470339b_Const _52328_x) {
	{
		
		if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb8376b3:;
			{
				_214704a40_SetI64(_self_, static_cast<jule::I64>((_21470408e_ReadI64(_self_) | _214704699_AsI64(&_52328_x))));
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb836eed:;
			{
				_214704b72_SetU64(_self_, static_cast<jule::U64>((_2147041c1_ReadU64(_self_) | _2147047cb_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1eb836e87:;
			{
				return false;;
			}
		}
		_match_end_1eb836dbb:;
	};
	return true;;
}



inline jule::Bool _214706cd9_Xor(_21470339b_Const* _self_, _21470339b_Const _53722_x) {
	{
		
		if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb83973c:;
			{
				_214704a40_SetI64(_self_, static_cast<jule::I64>((_21470408e_ReadI64(_self_) ^ _214704699_AsI64(&_53722_x))));
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb839077:;
			{
				_214704b72_SetU64(_self_, static_cast<jule::U64>((_2147041c1_ReadU64(_self_) ^ _2147047cb_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1eb839011:;
			{
				return false;;
			}
		}
		_match_end_1eb838e45:;
	};
	return true;;
}



inline jule::Bool _214706e1b_Lshift(_21470339b_Const* _self_, _21470339b_Const _55125_x) {
	{
		
		if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb83b7b6:;
			{
				jule::I64 _55417_l = _214704699_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _2147047cb_AsU64(&_55125_x);;
					_214704a40_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_214707180_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb83b101:;
			{
				_214707180_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1eb83b08a:;
			{
				return false;;
			}
		}
		_match_end_1eb83aebe:;
	};
	return true;;
}



inline jule::Bool _21470704d_Rshift(_21470339b_Const* _self_, _21470339b_Const _57125_x) {
	{
		
		if (_21470527c_IsI64(_self_)) {
			_case_begin_1eb83e126:;
			{
				jule::I64 _57417_l = _214704699_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _2147047cb_AsU64(&_57125_x);;
					_214704a40_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_2147072b2_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_2147053ae_IsU64(_self_)) {
			_case_begin_1eb83d961:;
			{
				_2147072b2_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1eb83d8ea:;
			{
				return false;;
			}
		}
		_match_end_1eb83d82e:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _21470339b_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215d761c1_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215d76e4c_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215d77348_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215daa5e0_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dab019_IsPrim(_215daaba6_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _215daaba6_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dab305_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dab6ac_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dab998_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dabd94_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dac180_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dac7bd_IsUnsafe(_215dac46b_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dac46b_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dacec7_AutoSized(_215dacaed_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dacaed_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dad34b_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dad703_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215daeb11_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215daedec_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db04a2_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db078d_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215db0e97_IsNil(_215db0b45_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _215db0b45_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db134e_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215db1b24_IsSelf(_215db17c2_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _215db17c2_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db1ecb_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db2383_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db273a_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db2ae2_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db3065_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db34d8_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215db3e56_Unhandled(_215db3ae3_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _215db41ba_Ignored(_215db3ae3_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _215db3ae3_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215db48c4_IsTargeted(_215db4572_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215db4572_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db4cc0_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215db5595_IsEmpty(_215db5243_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _215db5243_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db5a18_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215db6530_IsEmpty(_215db6200_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _215db6200_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db6a6e_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db7179_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db7465_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db78d8_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db7c90_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db8147_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db8433_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db8a3d_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db907c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215db9e6d_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dba578_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dbb0b2_IsSelf(_215dbac4e_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _215dbb326_IsRef(_215dbac4e_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbac4e_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dbc3c1_IsAnon(_215dbc06e_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbc06e_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbd04d_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbd405_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dbddb7_IsInf(_215dbda65_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbda65_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dbe68c_IsWhileNext(_215dbe33a_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbe33a_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dbebcb_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc0083_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc043a_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc08ad_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc0c65_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc11d8_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc18ae_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc1d32_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc2508_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc2c9a_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dc3570_AutoExpr(_215dc321d_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc321d_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dc42c9_DefaultTyped(_215dc3c46_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc3c46_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc474c_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc4d57_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc5055_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc5808_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc5e13_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215dc6881_IsTraitImpl(_215dc651d_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _215dc6ae5_IsStructImpl(_215dc651d_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc651d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215dc6ebe_FieldIns> _215d83585_instance(jule::Ptr<_215d9ad3e_Field> _self_) {
	return jule::new_ptr<_215dc6ebe_FieldIns>(_215dc6ebe_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _215d9ad3e_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215da3484_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215dc71ab_StructIns> _215d87358_instance(jule::Ptr<_215dc6cd2_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_215dc71ab_StructIns> _9917_ins = jule::new_ptr<_215dc71ab_StructIns>(_215dc71ab_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_215dc6ebe_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_215e41aa5_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__215dd2bbc_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebae62ce:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_215e41aa5_Var>((*(_10621_s))));;
			}
			_iter_next_1ebae62ce:;
			++it;
			goto _iter_begin_1ebae62ce;
		}
		_iter_end_1ebae62ce:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebae7742:;
		if (it != expr_end) {
			jule::Ptr<_215d9ad3e_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_215d83585_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _215ebba75_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1ebae7742:;
			++it;
			goto _iter_begin_1ebae7742;
		}
		_iter_end_1ebae7742:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_215dcd24a_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebae9ac9:;
			if (it != expr_end) {
				jule::Ptr<_215dcd24a_Fn> _12125_f = *it;
				{
					jule::Ptr<_215dcd24a_Fn> _12225_fins = jule::new_ptr<_215dcd24a_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1ebae9ac9:;
				++it;
				goto _iter_begin_1ebae9ac9;
			}
			_iter_end_1ebae9ac9:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_215dc71ab_StructIns> _215d880b2_appendInstance(_215dc6cd2_Struct* _self_, jule::Ptr<_215dc71ab_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebaebe2d:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _13921_ains = *it;
			{
				if (_215da0eba_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1ebaebe2d:;
			++it;
			goto _iter_begin_1ebaebe2d;
		}
		_iter_end_1ebaebe2d:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_215dcd24a_Fn> _215d8b219_FindMethod(_215dc6cd2_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebaed33b:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1ebaed33b:;
			++it;
			goto _iter_begin_1ebaed33b;
		}
		_iter_end_1ebaed33b:;
	};
	return nullptr;;
}



inline jule::Ptr<_215e41aa5_Var> _215d8a669_FindStatic(_215dc6cd2_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebaee507:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1ebaee507:;
			++it;
			goto _iter_begin_1ebaee507;
		}
		_iter_end_1ebaee507:;
	};
	return nullptr;;
}



inline jule::Ptr<_215d9ad3e_Field> _215d8ca45_FindField(_215dc6cd2_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb003d7:;
		if (it != expr_end) {
			jule::Ptr<_215d9ad3e_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1ebb003d7:;
			++it;
			goto _iter_begin_1ebb003d7;
		}
		_iter_end_1ebb003d7:;
	};
	return nullptr;;
}



inline jule::Bool _215d8bd41_IsImplements(_215dc6cd2_Struct* _self_, jule::Ptr<_215dddc1c_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb012b7:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1ebb012b7:;
			++it;
			goto _iter_begin_1ebb012b7;
		}
		_iter_end_1ebb012b7:;
	};
	return false;;
}



inline jule::Bool _215d90d12_IsDerives(_215dc6cd2_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb01828:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1ebb01828:;
			++it;
			goto _iter_begin_1ebb01828;
		}
		_iter_end_1ebb01828:;
	};
	return false;;
}



inline jule::Bool _215d914c7_IsUses(_215dc6cd2_Struct* _self_, jule::Ptr<_215dc6cd2_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb03eac:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1ebb0470a:;
				}
				_iter_end_1ebb0470a:;;
			}
			_iter_next_1ebb03eac:;
			++it;
			goto _iter_begin_1ebb03eac;
		}
		_iter_end_1ebb03eac:;
	};
	return false;;
}



inline jule::Bool _215d96994_HasRefAccessible(_215dc6cd2_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb048c5:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _215d8d46e_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1ebb048c5:;
			++it;
			goto _iter_begin_1ebb048c5;
		}
		_iter_end_1ebb048c5:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc6cd2_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc6ebe_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc76d9_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc78c6_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc7ab3_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc7ca0_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc7e8c_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8179_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8366_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8553_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8740_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc892c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8b19_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8d06_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc8ee3_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc91d0_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc93bc_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc97da_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc99c7_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc9bb4_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc9da1_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dca08d_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dca27a_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dca467_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dca654_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dca841_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcaa2d_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcac1a_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcae07_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcb0e4_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcb2d1_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcb4bd_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcb6aa_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc95a9_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcbd1a_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcc007_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcc1e4_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcc3d1_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcc5bd_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcc7aa_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcc997_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dccb84_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dccd71_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215dcdb41_ParamIns> _215d85840_instance(jule::Ptr<_215dcd05d_Param> _self_) {
	return jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _215d8baee_IsSelf(_215dcd05d_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _215d8d46e_IsRef(_215dcd05d_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcd05d_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215d7ce64_IsVoid(_215dcd24a_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _215d9c5b0_IsMethod(_215dcd24a_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _215d938a3_IsEntryPoint(_215dcd24a_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _215d7a99a_IsInit(_215dcd24a_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _215d82ac3_IsAnon(_215dcd24a_Fn* _self_) {
	return _22e0acc2a_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _215da0393_AnyVar(_215dcd24a_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_215dcea10_FnIns> _215d95146_instanceForce(jule::Ptr<_215dcd24a_Fn> _self_) {
	jule::Ptr<_215dcea10_FnIns> _10017_ins = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_215deb92d_Scope>(), ._field_Refers=static__215dd2bbc_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb18642:;
		if (it != expr_end) {
			jule::Ptr<_215dcd05d_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_215d85840_instance(_10721_p));;
			}
			_iter_next_1ebb18642:;
			++it;
			goto _iter_begin_1ebb18642;
		}
		_iter_end_1ebb18642:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_215dcea10_FnIns> _215dcd4ae_instance(jule::Ptr<_215dcd24a_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _215d95146_instanceForce(_self_);;
}



inline jule::Ptr<_215dcea10_FnIns> _215dcd789_appendInstance(_215dcd24a_Fn* _self_, jule::Ptr<_215dcea10_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb1c426:;
		if (it != expr_end) {
			jule::Ptr<_215dcea10_FnIns> _14421_ains = *it;
			{
				if (_215dd1418_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1ebb1c426:;
			++it;
			goto _iter_begin_1ebb1c426;
		}
		_iter_end_1ebb1c426:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcd24a_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215dce01a_Str(_215dcdb41_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_215d8baee_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_215d8d46e_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_215eba7ee_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcdb41_ParamIns _Src) {
	_Stream << _215dce01a_Str(&_Src);
	return _Stream;
}



inline jule::Str _215dced40_Str(_215dcea10_FnIns* _self_) {
	;
	return _215dd1726_GetKindStr(_self_, false);;
}



inline jule::Bool _215dd014d_Equal(jule::Ptr<_215dcea10_FnIns> _self_, jule::Ptr<_215eba403_TypeKind> _21721_other) {
	jule::Ptr<_215dcea10_FnIns> _21813_f = _215ebd978_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _215dd05b0_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _215dd05b0_EqualFn(jule::Ptr<_215dcea10_FnIns> _self_, jule::Ptr<_215dcea10_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_215d7ce64_IsVoid(_self_.get()._field_Decl.ptr()) != _215d7ce64_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_215dcdb41_ParamIns>,jule::Ptr<_215dcdb41_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_215dcdb41_ParamIns>,jule::Ptr<_215dcdb41_ParamIns>)>([=](jule::Ptr<_215dcdb41_ParamIns> _23830_p1, jule::Ptr<_215dcdb41_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_215d8baee_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_215d8baee_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_215d8d46e_IsRef(_23830_p1.get()._field_Decl.ptr()) != _215d8d46e_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _215ebab0c_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1ebb2a6a9:;
	}
	_iter_end_1ebb2a6a9:;;
	if ((!(_215d7ce64_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_215ebab0c_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _215dd08bd_equalTrait(jule::Ptr<_215dcea10_FnIns> _self_, jule::Ptr<_215dcea10_FnIns>* _28727_other) {
	if ((!(_215dd05b0_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_215eba403_TypeKind>> _215dd0b32_Types(_215dcea10_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1ebb2daec:;
			{
				return nullptr;;
			}
		}
		else if ((_215ebe429_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1ebb2db63:;
			{
				return jule::Slice<jule::Ptr<_215eba403_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1ebb2da86:;
			{
				return _215ebe429_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1ebb2d9ba:;
	};
}



inline jule::Bool _215dd0d96_IsBuiltin(_215dcea10_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _215dd110a_IsAnon(_215dcea10_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _215d82ac3_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _215dd1418_Same(_215dcea10_FnIns* _self_, jule::Ptr<_215dcea10_FnIns> _32419_f) {
	if ((((*(_self_))._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb323a3:;
		if (it != expr_end) {
			jule::I64 _32913_i = it - expr->begin();
			jule::Ptr<_215eb8bc6_InsGeneric> *_32916_g = it;
			{
				if ((!(_215ebab0c_Equal((*(_32916_g)).get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1ebb323a3:;
			++it;
			_32913_i++;
			goto _iter_begin_1ebb323a3;
		}
		_iter_end_1ebb323a3:;
	};
	return true;;
}



inline jule::Str _215dd1726_GetKindStr(_215dcea10_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34117_s).append("unsafe ", 7);
	};
	(_34117_s).append("fn", 2);
	if ((_34025_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34117_s).append("(", 1);
	jule::I64 _35413_n = (*(_self_))._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebb3ae8e:;
			if (it != expr_end) {
				jule::Ptr<_215dcdb41_ParamIns> *_35620_p = it;
				{
					_34117_s+=_215dce01a_Str((*(_35620_p)).ptr());
					(_34117_s).append(",", 1);
				}
				_iter_next_1ebb3ae8e:;
				++it;
				goto _iter_begin_1ebb3ae8e;
			}
			_iter_end_1ebb3ae8e:;
		};
		(_34117_s).mut_slice(0LL, (_34117_s.len() - 1LL));;
	};
	(_34117_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34117_s).append("!", 1);
	};
	if ((!(_215d7ce64_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34117_s).append(":", 1);
		_34117_s+=_215eba7ee_Str((*(_self_))._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dcea10_FnIns _Src) {
	_Stream << _215dced40_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_215dd2969_ReferenceStack> static__215dd2bbc_new(void) {
	return jule::new_ptr<_215dd2969_ReferenceStack>(_215dd2969_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _215dd3052_Len(_215dd2969_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _215dd3360_At(_215dd2969_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _215dd35d5_Push(_215dd2969_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _209c00908_Exist(_215dd2969_ReferenceStack* _self_, jule::Ptr<_215dcea10_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209c01c17:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_209c01c17:;
			++it;
			goto _iter_begin_209c01c17;
		}
		_iter_end_209c01c17:;
	};
	return false;;
}

inline jule::Bool _209c14664_Exist(_215dd2969_ReferenceStack* _self_, jule::Ptr<_215e41aa5_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209c1592e:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_209c1592e:;
			++it;
			goto _iter_begin_209c1592e;
		}
		_iter_end_209c1592e:;
	};
	return false;;
}

inline jule::Bool _209ca9aa0_Exist(_215dd2969_ReferenceStack* _self_, jule::Ptr<_215dc71ab_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209caadae:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_209caadae:;
			++it;
			goto _iter_begin_209caadae;
		}
		_iter_end_209caadae:;
	};
	return false;;
}

inline jule::Bool _20a063760_Exist(_215dd2969_ReferenceStack* _self_, jule::Ptr<_215dddc1c_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a064992:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_20a064992:;
			++it;
			goto _iter_begin_20a064992;
		}
		_iter_end_20a064992:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dd2969_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dd3c9a_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215dd8244_symbolBuilder> _215dd86ea_getRoot(jule::Ptr<_215dd8244_symbolBuilder> _self_) {
	jule::Ptr<_215dd8244_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1ebb5336e:;
	}
	_iter_end_1ebb5336e:;;
	return _31617_root;;
}



inline void _215dd8ab3_pushErr(_215dd8244_symbolBuilder* _self_, jule::Ptr<_22e0aa1de_Token>* _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_215e21865_compilerErr(_32327_token, true, _32342_fmt, _32355_args));;
}



inline void _215dd8e7b_pushErrText(_215dd8244_symbolBuilder* _self_, jule::Ptr<_22e0aa1de_Token>* _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_215e21865_compilerErr(_32731_token, false, _32746_fmt, _32759_args));;
}



inline void _215dd929a_pushSuggestion(_215dd8244_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_215e22cea_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _33233_fmt, _33246_args);
	};
}



inline jule::Bool _215dd9652_checkCppUseDeclPath(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _22cc05456_Ext(_33655_path);;
	if (((!(_22dbe0808_IsValidHeaderExt(_33713_ext))) && (!(_22dbe0aa0_IsValidCppExt(_33713_ext))))) {
		_215dd8ab3_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22cad505b_Status> _34413_info = ({
		auto except = static__22bd107e8_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_215dd8ab3_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_22cad505b_Status>(nullptr);});
	});;
	if (_22bd10991_IsDir(_34413_info.ptr())) {
		_215dd8ab3_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215dd992c_buildCppHeaderImport(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _35644_decl) {
	jule::Str _35717_path = (*(_35644_decl)).get()._field_LinkPath;;
	if ((!(_22dbe05d8_IsStdHeaderPath((*(_35644_decl)).get()._field_LinkPath)))) {
		_35717_path=_22cc03e8d_Join(jule::Slice<jule::Str>::make({_22e0b0e70_Dir((*(_35644_decl)).get()._field_Token.get()._field_File.ptr()),(*(_35644_decl)).get()._field_LinkPath}));
		jule::Bool _36121_ok = _215dd9652_checkCppUseDeclPath(_self_, _35644_decl, _35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22cbbd6b6_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_215dd8ab3_pushErr(_self_, &((*(_35644_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_35644_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_215e1a133_ImportInfo>(_215e1a133_ImportInfo{._field_Token=(*(_35644_decl)).get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=(*(_35644_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215dd9c3a_buildStdImport(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _38438_decl) {
	jule::Str _38517_path = (*(_38438_decl)).get()._field_LinkPath.slice(5LL);;
	_38517_path=_22db716bd_Replace(_38517_path, jule::Str("::", 2), static_cast<jule::Str>(47LL), -1LL);
	_38517_path=_22cc03e8d_Join(jule::Slice<jule::Str>::make({_22dc07c1b_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22cbbd6b6_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_215dd8ab3_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22cad505b_Status> _39513_info = ({
		auto except = static__22bd107e8_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_215dd8ab3_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_22cad505b_Status>(nullptr);});
	});;
	if ((!(_22bd10991_IsDir(_39513_info.ptr())))) {
		_215dd8ab3_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_22db6beb0_FindLast((*(_38438_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = (*(_38438_decl)).get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_215e1a133_ImportInfo>(_215e1a133_ImportInfo{._field_Token=(*(_38438_decl)).get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=(*(_38438_decl)).get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=(*(_38438_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_38438_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_215e1d08c_Package>(_215e1d08c_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215dda048_buildIdentImport(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215dc2c9a_UseDecl>* _42341_decl) {
	jule::Str _42413_modPath = _215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16629_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_215dd8ab3_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_215dd929a_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = (*(_42341_decl)).get()._field_LinkPath;;
	_43117_path=_22db716bd_Replace(_43117_path, jule::Str("::", 2), static_cast<jule::Str>(47LL), -1LL);
	_43117_path=_22cc03e8d_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22cbbd6b6_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_215dd8ab3_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22cad505b_Status> _44213_info = ({
		auto except = static__22bd107e8_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_215dd8ab3_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_22cad505b_Status>(nullptr);});
	});;
	if ((!(_22bd10991_IsDir(_44213_info.ptr())))) {
		_215dd8ab3_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_22db6beb0_FindLast((*(_42341_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = (*(_42341_decl)).get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_215e1a133_ImportInfo>(_215e1a133_ImportInfo{._field_Token=(*(_42341_decl)).get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=(*(_42341_decl)).get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=(*(_42341_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_42341_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_215e1d08c_Package>(_215e1d08c_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215dda356_buildImport(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215dc2c9a_UseDecl>* _47036_decl) {
	{
		
		if ((*(_47036_decl)).get()._field_CppLinked) {
			_case_begin_1ebb6a892:;
			{
				return _215dd992c_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if ((*(_47036_decl)).get()._field_Std) {
			_case_begin_1ebb6aad4:;
			{
				return _215dd9c3a_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1ebb6a199:;
			{
				return _215dda048_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1ebb6a0cd:;
	};
}



inline jule::Bool _215dda664_checkDuplicateUseDecl(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215e1a133_ImportInfo>* _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215e1a133_ImportInfo> _48313_lpkg = _215e89e72_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>([=](jule::Ptr<_215e1a133_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return ((*(_48141_pkg)).get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_215dd8ab3_pushErr(_self_, &((*(_48141_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_48141_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_215dd929a_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _215dda983_implImportSelections(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215e1a133_ImportInfo>* _49544_imp, jule::Ptr<_215dc2c9a_UseDecl>* _49567_decl) {
	(*(_49544_imp)).get()._field_Selected=(*(_49567_decl)).get()._field_Selected;
	{
		auto expr = &((*(_49544_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb6e467:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> _49716_item = *it;
			{
				{
					auto expr = &((*(_49544_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebb6eba4:;
					if (it != expr_end) {
						jule::Ptr<_22e0aa1de_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1ebb6eba4;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_215dd8ab3_pushErr(_self_, &(_49716_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type5)}));
								_215dd929a_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1ebb6eba4;
							};
						}
						_iter_next_1ebb6eba4:;
						++it;
						goto _iter_begin_1ebb6eba4;
					}
					_iter_end_1ebb6eba4:;
				};
			}
			_iter_next_1ebb6e467:;
			++it;
			goto _iter_begin_1ebb6e467;
		}
		_iter_end_1ebb6e467:;
	};
}



inline jule::Str _215ddac91_getAsLinkPath(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_22db524c3_HasPrefix(_51037_path, _22dc07c1b_PathStdlib)) {
		(_51037_path).mut_slice(_22dc07c1b_PathStdlib.len());;
		return (jule::Str("std", 3) + _22db716bd_Replace(_51037_path, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22cbbd6b6_Abs(_215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16629_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _22db716bd_Replace(_51037_path, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL);;
}



inline void _215ddb159_pushCycleError(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215dd8244_symbolBuilder>* _52435_sb, jule::Str _52455_path, jule::Str* _52471_message) {
	;
	jule::Str _52613_refersTo = _22dbeccdd_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_215ddac91_getAsLinkPath(_self_, _22e0b0e70_Dir((*(_52435_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_215ddac91_getAsLinkPath(_self_, _52455_path), &__jule_any_type5)}));;
	((*(_52471_message))).buffer.insert(0, (((_22db52d86_Repeat(jule::Str(" ", 1), 4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _215ddb522_pushCrossCycleError(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215dd8244_symbolBuilder>* _53340_target, jule::Ptr<_215e1a133_ImportInfo>* _53365_imp, jule::Ptr<_22e0aa1de_Token>* _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_215ddb159_pushCycleError(_self_, &(_self_), (*(_53365_imp)).get()._field_Path, &(_53417_message));
	jule::Ptr<_215dd8244_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_215dd8244_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_215ddb159_pushCycleError(_self_, &(_53917_old.get()._field_owner), _22e0b0e70_Dir(_53917_old.get()._field_table.get()._field_File.ptr()), &(_53417_message));
			if ((_53817_owner.get()._field_owner == (*(_53340_target)))) {
				_215ddb159_pushCycleError(_self_, _53340_target, _22e0b0e70_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()), &(_53417_message));
				goto _iter_end_1ebb7753b;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1ebb7753b:;
	}
	_iter_end_1ebb7753b:;;
	_215dd8ab3_pushErr(_self_.ptr(), _53384_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type5)}));
}



inline jule::Bool _215ddb8c9_checkImportCycles(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215e1a133_ImportInfo> _55637_imp, jule::Ptr<_215dc2c9a_UseDecl>* _55656_decl) {
	if ((_55637_imp.get()._field_Path == _22e0b0e70_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_215dd8ab3_pushErr(_self_.ptr(), &((*(_55656_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_215ddac91_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_22e0b0e70_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_215ddb522_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_215dd8244_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_22e0b0e70_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_215ddb522_pushCrossCycleError(_self_, &(_57117_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _215ddbcb4_checkPackageAccessibility(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _59245_decl, jule::Str* _59262_mod, jule::Str* _59273_path) {
	if (((_215e174b5_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._215e16629_GetModPath((*(_self_))._field_importer) != (*(_59262_mod))) && _22db70425_Contains((*(_59273_path)), jule::Str("internal", 8)))) {
		_215dd8ab3_pushErr(_self_, &((*(_59245_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _215ddc17c_importPackage(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215e1a133_ImportInfo>* _59838_imp, jule::Ptr<_215dc2c9a_UseDecl>* _59861_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_59838_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_215e1a133_ImportInfo> _60317_port = _215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16c45_GetImport(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path);;
	if ((_60317_port != nullptr)) {
		(*(_59838_imp)).get()._field_Package=_60317_port.get()._field_Package;
		(*(_59838_imp)).get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16629_GetModPath(_self_.get()._field_importer);;
		_215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16409_SetModPath(_self_.get()._field_importer, _215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16937_ModById(_self_.get()._field_importer, (*(_59838_imp)).get()._field_ModId));
		_215ddbcb4_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_60817_oldMod), &(_60317_port.get()._field_Path));
		_215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16409_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_215ddb8c9_checkImportCycles(_self_, (*(_59838_imp)), _59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16629_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16409_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if ((*(_59838_imp)).get()._field_Std) {
			_215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e16409_SetModPath(_self_.get()._field_importer, _22dc07c1b_PathStdlib);
		};
		jule::Slice<jule::Ptr<_215d761c1_Ast>> _62222_asts;;
		jule::Slice<_22dbec89d_Log> _62232_errors;;
		({
			__jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log __jule_assign_result = _215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e170ec_ImportPackage(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path, (!((*(_59838_imp)).get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_215ddbcb4_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_61717_oldMod), &((*(_59838_imp)).get()._field_Path));
		{
			auto expr = &(_62222_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebb86429:;
			if (it != expr_end) {
				jule::Ptr<_215d761c1_Ast> _63025_ast = *it;
				{
					jule::Ptr<_215e89647_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_215e89647_SymbolTable__jule_tuple_s_22dbec89d_Log __jule_assign_result = _215ed7057_buildSymbols(&(_63025_ast), &(_self_.get()._field_importer), _self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_59838_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_59838_imp)).get()._field_Package.get()._field_Files,1);(*(_59838_imp)).get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1ebb86429:;
				++it;
				goto _iter_begin_1ebb86429;
			}
			_iter_end_1ebb86429:;
		};
	};
	_215dda983_implImportSelections(_self_.ptr(), _59838_imp, _59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215ddc48a_importUseDecl(jule::Ptr<_215dd8244_symbolBuilder> _self_, jule::Ptr<_215dc2c9a_UseDecl>* _64538_decl) {
	jule::Ptr<_215e1a133_ImportInfo> _64617_imp = _215dda356_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _215dda664_checkDuplicateUseDecl(_self_.ptr(), &(_64617_imp));;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_215ddc17c_importPackage(_self_, &(_64617_imp), _64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_215e174b5_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._215e17372_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _215ddc666_importUseDecls(jule::Ptr<_215dd8244_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb8ab59:;
		if (it != expr_end) {
			jule::Ptr<_215dc2c9a_UseDecl> _66721_decl = *it;
			{
				_215ddc48a_importUseDecl(_self_, &(_66721_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1ebb8ab59;
				};
			}
			_iter_next_1ebb8ab59:;
			++it;
			goto _iter_begin_1ebb8ab59;
		}
		_iter_end_1ebb8ab59:;
	};
}



inline void _215ddc8db_appendNode(_215dd8244_symbolBuilder* _self_, _215d76e4c_Node* _67634_node) {
	{
		auto &_match_expr{ (*(_67634_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ebb8b682:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_215dd7be4_buildImpl((*(_67634_node))._field_Data.cast_ptr<_215dc651d_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ebb8c551:;
			{
				jule::Ptr<_215eb9710_TypeAlias> _68121_ta = _215dd4680_buildTypeAlias((*(_67634_node))._field_Data.cast_ptr<_215dc18ae_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ebb8c5b7:;
			{
				jule::Ptr<_215dc6cd2_Struct> _68421_srct = _215dd4edd_buildStruct((*(_67634_node))._field_Data.cast_ptr<_215dc5808_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ebb8c62d:;
			{
				jule::Ptr<_215dcd24a_Fn> _68721_f = _215dd5b48_buildFn((*(_67634_node))._field_Data.cast_ptr<_215dbc06e_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1ebb8cd6a:;
			{
				jule::Ptr<_215dddc1c_Trait> _69021_t = _215dd6187_buildTrait((*(_67634_node))._field_Data.cast_ptr<_215dc5e13_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ebb8cdd1:;
			{
				jule::Ptr<_215e41aa5_Var> _69321_v = _215dd76a5_buildVar((*(_67634_node))._field_Data.cast_ptr<_215dbd04d_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ebb8ce47:;
			{
				jule::Ptr<_215de0d62_Enum> _69621_e = _215dd696d_buildEnum((*(_67634_node))._field_Data.cast_ptr<_215dc3c46_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1ebb8cead:;
			{
				jule::Ptr<_215de245c_TypeEnum> _69921_e = _215dd740d_buildTypeEnum((*(_67634_node))._field_Data.cast_ptr<_215dc4d57_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1ebb8c441:;
			{
				_215dd8ab3_pushErr(_self_, &((*(_67634_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ebb8c3db:;
	};
}



inline void _215ddcab7_appendNodes(_215dd8244_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb9534a:;
		if (it != expr_end) {
			_215d76e4c_Node _70721_node = *it;
			{
				_215ddc8db_appendNode(_self_, &(_70721_node));
			}
			_iter_next_1ebb9534a:;
			++it;
			goto _iter_begin_1ebb9534a;
		}
		_iter_end_1ebb9534a:;
	};
}



inline void _215ddcd3c_pushDirectivePass(_215dd8244_symbolBuilder* _self_, jule::Ptr<_215d77348_Directive>* _71241_d) {
	if (((*(_71241_d)).get()._field_Args.len() == 0LL)) {
		_215dd8ab3_pushErr(_self_, &((*(_71241_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_71241_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_22e0aa1de_Token> _71717_arg = (*(_71241_d)).get()._field_Args[1LL];;
		_215dd8ab3_pushErr(_self_, &(_71717_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_71241_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_22e0aa1de_Token> _72113_arg = (*(_71241_d)).get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_215dd8ab3_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_215dd8ab3_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_215dd3c9a_Pass{._field_Token=(*(_71241_d)).get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL, (_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _215ddd018_appendTopDirectives(_215dd8244_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb98dcb:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1ebb9c0ee:;
						{
							_215ddcd3c_pushDirectivePass(_self_, &(_73921_d));
						}
					}
					_match_end_1ebb9c077:;
				};
			}
			_iter_next_1ebb98dcb:;
			++it;
			goto _iter_begin_1ebb98dcb;
		}
		_iter_end_1ebb98dcb:;
	};
}



inline void _215ddd1e4_build(jule::Ptr<_215dd8244_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_215e89647_SymbolTable>(_215e89647_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_215ddd018_appendTopDirectives(_self_.ptr());
	_215ddc666_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_215ddcab7_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215dd8244_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215dde118_Str(_215dddc1c_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _215dde426_Equal(jule::Ptr<_215dddc1c_Trait> _self_, jule::Ptr<_215eba403_TypeKind> _2521_other) {
	jule::Ptr<_215dddc1c_Trait> _2613_trt = _215ebde51_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _215dde789_IsBuiltin(_215dddc1c_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_215dcd24a_Fn> _215ddea97_FindMethod(_215dddc1c_Trait* _self_, jule::Str _3929_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebba0d39:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1ebba0d39:;
			++it;
			goto _iter_begin_1ebba0d39;
		}
		_iter_end_1ebba0d39:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dddc1c_Trait _Src) {
	_Stream << _215dde118_Str(&_Src);
	return _Stream;
}



inline jule::Bool _215de0757_AutoExpr(_215de036c_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215de036c_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215de11c5_Str(_215de0d62_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _215de14d3_Equal(jule::Ptr<_215de0d62_Enum> _self_, jule::Ptr<_215eba403_TypeKind> _3821_other) {
	jule::Ptr<_215de0d62_Enum> _3913_enm = _215ebcec7_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_215de036c_EnumItem> _215de1923_FindItem(_215de0d62_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebba348a:;
		if (it != expr_end) {
			jule::Ptr<_215de036c_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1ebba348a:;
			++it;
			goto _iter_begin_1ebba348a;
		}
		_iter_end_1ebba348a:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _215de0d62_Enum _Src) {
	_Stream << _215de11c5_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215de1d96_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215de278c_Str(_215de245c_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _215de2a9a_Equal(jule::Ptr<_215de245c_TypeEnum> _self_, jule::Ptr<_215eba403_TypeKind> _8021_other) {
	jule::Ptr<_215de245c_TypeEnum> _8113_tenm = _215ebd23b_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_215de1d96_TypeEnumItem> _215de2e96_FindItem(_215de245c_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebba5558:;
		if (it != expr_end) {
			jule::Ptr<_215de1d96_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1ebba5558:;
			++it;
			goto _iter_begin_1ebba5558;
		}
		_iter_end_1ebba5558:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _215de245c_TypeEnum _Src) {
	_Stream << _215de278c_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_215e2327e_Sema>*,jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*)> _215de4dbb_readyFn(jule::Ptr<_215de498c_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_215e2327e_Sema>*,jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*)>([=](jule::Ptr<_215e2327e_Sema>* _6321_sema, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebbb27a7:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_215db78d8_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_215eb8bc6_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1ebbb27a7;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_215eba403_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ebbb4776:;
						if (it != expr_end) {
							jule::Ptr<_215daa5e0_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_215eba403_TypeKind> _7229_kind = _215e2a583_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_215ed6375_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type19) {
											_case_begin_1ebbb6976:;
											{
												jule::Ptr<_215daaba6_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_215daaba6_IdentTypeDecl>(&__jule_any_type19);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _215de6054_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1ebbb6921:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1ebbb4776:;
							++it;
							goto _iter_begin_1ebbb4776;
						}
						_iter_end_1ebbb4776:;
					};
				}
				_iter_next_1ebbb27a7:;
				++it;
				_6418_i++;
				goto _iter_begin_1ebbb27a7;
			}
			_iter_end_1ebbb27a7:;
		};
		return true;;
	});;
}



inline jule::Bool _215de5130_readyFi(jule::Ptr<_215de498c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _215e2eb5e_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _215de4dbb_readyFn(_self_)));;
}



inline jule::Bool _215de5394_readySi(jule::Ptr<_215de498c_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _215de4dbb_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _215de5608_ready(jule::Ptr<_215de498c_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _215de5130_readyFi(_self_);;
	};
	return _215de5394_readySi(_self_);;
}



inline jule::Bool _215de586c_check(jule::Ptr<_215de498c_constraintChecker> _self_) {
	if ((!(_215de5608_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebbbd65e:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_215eb8bc6_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1ebbbd65e;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebbbe286:;
					if (it != expr_end) {
						jule::Ptr<_215eba403_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_215ec0150_Prim> _12425_prim = _215ebc78a_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _215ec0c44_IsConstraint(_12425_prim.ptr()))) {
								if (_215de5c68_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1ebbbd65e;
								};
								goto _iter_next_1ebbbe286;
							};
							if (_215ebab0c_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1ebbbd65e;
							};
						}
						_iter_next_1ebbbe286:;
						++it;
						goto _iter_begin_1ebbbe286;
					}
					_iter_end_1ebbbe286:;
				};
				_215e25e41_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1ebbbd65e:;
			++it;
			_11914_i++;
			goto _iter_begin_1ebbbd65e;
		}
		_iter_end_1ebbbd65e:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _215de498c_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215de6cbe_IsTraitImpl(_215de68c3_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _215de7033_IsStructImpl(_215de68c3_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215de68c3_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215deb92d_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215debd29_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dec115_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dec489_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dec775_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215ded08e_IsWhileNext(_215decbe8_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215decbe8_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215ded5cd_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215ded9c9_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dedd81_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dee16c_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dee458_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215dee810_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215deec83_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e0013a_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215e00b85_IsGenericTypeMatch(_215e00679_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _215e00679_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215e0148d_isDefault(_215e011c4_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215e011c4_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e01779_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e01aed_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e02208_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e0267b_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e03924_FindPackage(_215e03490_scopeChecker* _self_, jule::Str _45430_ident) {
	return _215e2379b_FindPackage((*(_self_))._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e03c32_SelectPackage(_215e03490_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _46432_selector) {
	return _215e23aa9_SelectPackage((*(_self_))._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_215e41aa5_Var> _215e040d9_FindVar(_215e03490_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_215e41aa5_Var> _47817_v = _215e8bddb_findVar((*(_self_))._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_215e03490_scopeChecker> _48317_parent = (*(_self_))._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_215e8bddb_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1ebbe804b:;
	}
	_iter_end_1ebbe804b:;;
	return _215e23e61_FindVar((*(_self_))._field_s.ptr(), _47526_ident, _47538_cpp_linked);;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e04491_FindTypeAlias(_215e03490_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_215eb9710_TypeAlias> _50517_ta = _215e8c33c_findTypeAlias((*(_self_))._field_table.ptr(), _50232_ident, _50244_cppLinked, true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_215e03490_scopeChecker> _51017_parent = (*(_self_))._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_215e8c33c_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident, _50244_cppLinked, true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1ebbeaba8:;
	}
	_iter_end_1ebbeaba8:;;
	return _215e24318_FindTypeAlias((*(_self_))._field_s.ptr(), _50232_ident, _50244_cppLinked);;
}



inline jule::Ptr<_215dc6cd2_Struct> _215e04848_FindStruct(_215e03490_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _215e246c0_FindStruct((*(_self_))._field_s.ptr(), _52729_ident, _52741_cppLinked);;
}



inline jule::Ptr<_215dcd24a_Fn> _215e04c00_FindFn(_215e03490_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _215e24a77_FindFn((*(_self_))._field_s.ptr(), _53625_ident, _53637_cppLinked);;
}



inline jule::Ptr<_215dddc1c_Trait> _215e0500d_FindTrait(_215e03490_scopeChecker* _self_, jule::Str _54528_ident) {
	return _215e24d85_FindTrait((*(_self_))._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_215de0d62_Enum> _215e0531b_FindEnum(_215e03490_scopeChecker* _self_, jule::Str _55427_ident) {
	return _215e25193_FindEnum((*(_self_))._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_215de245c_TypeEnum> _215e05629_FindTypeEnum(_215e03490_scopeChecker* _self_, jule::Str _56331_ident) {
	return _215e254a1_FindTypeEnum((*(_self_))._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _215e05959_isUnsafe(jule::Ptr<_215e03490_scopeChecker> _self_) {
	jule::Ptr<_215e03490_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _215e05bbd_isRoot(_215e03490_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _215e05d99_stop(_215e03490_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _215e0610d_stopped(_215e03490_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _215e06372_isDeferred(jule::Ptr<_215e03490_scopeChecker> _self_) {
	jule::Ptr<_215e03490_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_215e03490_scopeChecker> _215e065d6_getRoot(jule::Ptr<_215e03490_scopeChecker> _self_) {
	jule::Ptr<_215e03490_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1ebc05102:;
	}
	_iter_end_1ebc05102:;;
	return _62217_root;;
}



inline jule::Ptr<_215e03490_scopeChecker> _215e0684a_getHardRoot(jule::Ptr<_215e03490_scopeChecker> _self_) {
	jule::Ptr<_215e03490_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1ebc06323:;
	}
	_iter_end_1ebc06323:;;
	return _63217_root;;
}



inline jule::Ptr<_215dee16c_Label> _215e06b58_findLabel(_215e03490_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebc06d5c:;
		if (it != expr_end) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1ebc07874:;
						{
							jule::Ptr<_215dee16c_Label> _64625_label = _64321_st.cast_ptr<_215dee16c_Label>(&__jule_any_type20);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1ebc07775:;
				};
			}
			_iter_next_1ebc06d5c:;
			++it;
			goto _iter_begin_1ebc06d5c;
		}
		_iter_end_1ebc06d5c:;
	};
	return nullptr;;
}



inline jule::Ptr<_215e02208_scopeLabel> _215e06e66_findLabelScope(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_215e02208_scopeLabel> _65917_label = _215e07274_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_215e02208_scopeLabel> _215e07274_findLabelAll(_215e03490_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebc09aa7:;
		if (it != expr_end) {
			jule::Ptr<_215e02208_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1ebc09aa7:;
			++it;
			goto _iter_begin_1ebc09aa7;
		}
		_iter_end_1ebc09aa7:;
	};
	return nullptr;;
}



inline jule::Bool _215e0762b_isDuplicatedIdent(_215e03490_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_215e41aa5_Var> _68313_v = _215e040d9_FindVar(_self_, _68253_ident, false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_215e25803_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_215eb9710_TypeAlias> _69113_ta = _215e04491_FindTypeAlias(_self_, _68253_ident, false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_215e25803_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _215e078a1_checkVarDecl(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dbd04d_VarDecl> _70236_decl) {
	jule::Ptr<_215e41aa5_Var> _70317_v = _215dd76a5_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type8));;
	});;
	if (_215e0762b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)), _70317_v.get()._field_Ident)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_215e05d99_stop(_self_.ptr());
		return;;
	};
	_215e35e0c_checkVarDecl(_self_.get()._field_s, &(_70317_v), jule::Trait<_215ed6375_Lookup>(_self_, 0));
	if (((!(_215e421d2_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_215e3954d_checkTypeVar(_self_.get()._field_s, &(_70317_v), jule::Trait<_215ed6375_Lookup>(_self_, 0));
}



inline void _215e07b26_checkTypeAliasDecl(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc18ae_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_215eb9710_TypeAlias> _72717_ta = _215dd4680_buildTypeAlias(_72642_decl);;
	if (_215e0762b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)), _72717_ta.get()._field_Ident)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_215e05d99_stop(_self_.ptr());
		return;;
	};
	_215e31424_checkTypeAliasDecl(_self_.get()._field_s, &(_72717_ta), jule::Trait<_215ed6375_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_215e05d99_stop(_self_.ptr());
	};
}



inline jule::Ptr<_215deb92d_Scope> _215e07d8a_getChild(_215e03490_scopeChecker* _self_) {
	return jule::new_ptr<_215deb92d_Scope>(_215deb92d_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _215e08253_checkChildSsc(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dba578_ScopeTree>* _75038_tree, jule::Ptr<_215deb92d_Scope>* _75061_s, jule::Ptr<_215e03490_scopeChecker>* _75077_ssc) {
	(*(_75077_ssc)).get()._field_parent=_self_;
	_215e13291_check((*(_75077_ssc)), _75038_tree, _75061_s);
}



inline jule::Ptr<_215deb92d_Scope> _215e0860a_checkChildSc(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dba578_ScopeTree>* _75537_tree, jule::Ptr<_215e03490_scopeChecker>* _75560_ssc) {
	jule::Ptr<_215deb92d_Scope> _75617_s = _215e07d8a_getChild(_self_.ptr());;
	_215e08253_checkChildSsc(_self_, _75537_tree, &(_75617_s), _75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_215deb92d_Scope> _215e08918_checkChild(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dba578_ScopeTree>* _76135_tree) {
	jule::Ptr<_215e03490_scopeChecker> _76217_ssc = _215e13505_newChildChecker(_self_);;
	return _215e0860a_checkChildSc(_self_, _76135_tree, &(_76217_ssc));;
}



inline void _215e08b8d_checkAnonScope(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dba578_ScopeTree> _76638_tree) {
	jule::Ptr<_215deb92d_Scope> _76717_s = _215e08918_checkChild(_self_, &(_76638_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type21));;
}



inline void _215e08eac_processErrorCall(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel>* _77141_m, jule::Ptr<_22e0aa1de_Token> _77172_err) {
	if (_215e06372_isDeferred(_self_)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e03490_scopeChecker> _77617_root = _215e065d6_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77141_m)).get()._field_Func=_77617_root.get()._field_owner;
}



inline void _215e09232_checkExpr(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215daeb11_Expr> _78433_expr) {
	jule::Ptr<_215e90ede_Eval> _78517_eval = _215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_215e8e471_Data> _78717_d = _215eab911_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ebc205e5:;
			{
				jule::Ptr<_215dcc007_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_215dcc007_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_215e08eac_processErrorCall(_self_, &(_79421_m), _78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1ebc20804:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else {
			_case_begin_1ebc20749:;
			{
				_215e25e41_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ebc2055c:;
	};
}



inline jule::Ptr<_215debd29_If> _215e09540_checkIf(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc08ad_If> _81431_i) {
	jule::Ptr<_215deb92d_Scope> _81517_s = _215e08918_checkChild(_self_, &(_81431_i.get()._field_Scope));;
	jule::Ptr<_215e8e471_Data> _81717_d = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215ec0150_Prim> _82217_prim = _215ebc78a_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_215ec3120_IsBool(_82217_prim.ptr()))))) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_215debd29_If>(_215debd29_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_215dec115_Else> _215e0984d_checkElse(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc0c65_Else> _83433_e) {
	return jule::new_ptr<_215dec115_Else>(_215dec115_Else{._field_Scope=_215e08918_checkChild(_self_, &(_83433_e.get()._field_Scope))});;
}



inline void _215e09ac3_checkConditional(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc11d8_Conditional> _84040_conditional) {
	jule::Ptr<_215dec489_Conditional> _84117_c = jule::new_ptr<_215dec489_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type35));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_215debd29_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_215e09540_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto expr = &(_84040_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebc29b93:;
		if (it != expr_end) {
			jule::Ptr<_215dc08ad_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_215e09540_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1ebc29b93:;
			++it;
			goto _iter_begin_1ebc29b93;
		}
		_iter_end_1ebc29b93:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_215e0984d_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _215e0a035_checkIterScopeSsc(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_215dba578_ScopeTree> _85654_tree, jule::Ptr<_215deb92d_Scope>* _85677_s, jule::Ptr<_215e03490_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_215e08253_checkChildSsc(_self_, &(_85654_tree), _85677_s, &(_85692_ssc));
}



inline jule::Ptr<_215deb92d_Scope> _215e0a486_checkIterScopeSc(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_215dba578_ScopeTree> _86153_tree, jule::Ptr<_215e03490_scopeChecker> _86175_ssc) {
	jule::Ptr<_215deb92d_Scope> _86217_scope = _215e07d8a_getChild(_self_.ptr());;
	_215e0a035_checkIterScopeSsc(_self_, _86136_it, _86153_tree, &(_86217_scope), _86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_215deb92d_Scope> _215e0a83d_checkIterScope(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_215dba578_ScopeTree>* _86752_tree) {
	jule::Ptr<_215e03490_scopeChecker> _86817_ssc = _215e13505_newChildChecker(_self_);;
	return _215e0a486_checkIterScopeSc(_self_, _86734_it, (*(_86752_tree)), _86817_ssc);;
}



inline void _215e0aab3_checkInfIter(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dbda65_Iter>* _87237_it) {
	jule::Ptr<_215dec775_InfIter> _87317_kind = jule::new_ptr<_215dec775_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type36));;
	_87317_kind.get()._field_Scope=_215e0a83d_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)), &((*(_87237_it)).get()._field_Scope));
}



inline void _215e0ad38_checkWhileIter(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dbda65_Iter>* _87839_it) {
	jule::Ptr<_215dbe33a_WhileKind> _87917_wh = (*(_87839_it)).get()._field_Kind.cast_ptr<_215dbe33a_WhileKind>(&__jule_any_type37);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_215e0aab3_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_215decbe8_WhileIter> _88517_kind = jule::new_ptr<_215decbe8_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type38));;
	_88517_kind.get()._field_Scope=_215e0a83d_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)), &((*(_87839_it)).get()._field_Scope));
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_215e8e471_Data> _89021_d = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_215ec0150_Prim> _89517_prim = _215ebc78a_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_215ec3120_IsBool(_89517_prim.ptr())))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_215dbe68c_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_215deae5a_isValidAstStForNextSt(&(_87917_wh.get()._field_Next))))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_215e1203c_checkNode(_self_, &(_87917_wh.get()._field_Next));
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91517_n);
			if ((!(_215deb202_isValidStForNextSt(&(_91825_st))))) {
				_215e25e41_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _215e0b0ad_checkRangeIter(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dbda65_Iter>* _92839_it) {
	jule::Ptr<_215dbebcb_RangeKind> _92917_rang = (*(_92839_it)).get()._field_Kind.cast_ptr<_215dbebcb_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_215e8e471_Data> _93117_d = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_215ded5cd_RangeIter> _93617_kind = jule::new_ptr<_215ded5cd_RangeIter>(_215ded5cd_RangeIter{._field_Expr=_93117_d, });;
	_215e856ed_rangeChecker _94017_rc = _215e856ed_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _215e870b2_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type40));;
	jule::Ptr<_215e03490_scopeChecker> _95317_ssc = _215e13505_newChildChecker(_self_);;
	jule::Ptr<_215deb92d_Scope> _95417_scope = _215e07d8a_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_215e25803_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _215e0762b_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_215e25803_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _215e0762b_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_215e0a035_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)), (*(_92839_it)).get()._field_Scope, &(_95417_scope), _95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _215e0b333_checkIter(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dbda65_Iter> _97833_it) {
	if (_215dbddb7_IsInf(_97833_it.ptr())) {
		_215e0aab3_checkInfIter(_self_, &(_97833_it));
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1ebc44ac0:;
			{
				_215e0ad38_checkWhileIter(_self_, &(_97833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1ebc4574c:;
			{
				_215e0b0ad_checkRangeIter(_self_, &(_97833_it));
			}
		}
		else {
			_case_begin_1ebc4499e:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1ebc44949:;
	};
}



inline jule::Bool _215e0b641_checkValidContLabel(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_215e03490_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _215e0b94e_checkValidBreakLabel(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_215e03490_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_215e011c4_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_215ded9c9_ContSt> _215e0bc5c_checkContValidScope(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc043a_ContSt> _103339_c) {
	if (_215e06372_isDeferred(_self_)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_215ded9c9_ContSt>();;
	};
	jule::Ptr<_215e03490_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1ebc4c853:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1ebc4c8ca:;
			{
				return jule::new_ptr<_215ded9c9_ContSt>(_215ded9c9_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1ebc4c798:;
	};
	_215e25e41_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _215e0bed2_checkCont(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc043a_ContSt> _105729_c) {
	jule::Ptr<_215ded9c9_ContSt> _105817_cont = _215e0bc5c_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_215e02208_scopeLabel> _106421_label = _215de9134_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1ebc5456e:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_215dec775_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1ebc55e22:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_215ded5cd_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1ebc55e88:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_215decbe8_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1ebc55c9b:;
					{
						_215e25e41_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1ebc55c46:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_215e0b641_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type41));;
}



inline void _215e0c257_checkLabel(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db7c90_LabelSt> _110434_l) {
	if ((_215e06b58_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_215dee16c_Label> _111017_label = jule::new_ptr<_215dee16c_Label>(_215dee16c_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type20));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_215e02208_scopeLabel>>::make({jule::new_ptr<_215e02208_scopeLabel>(_215e02208_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _215e0c4cc_pushGoto(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db8147_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_215dee458_GotoSt>(_215dee458_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type42));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_215e0267b_scopeGoto>>::make({jule::new_ptr<_215e0267b_scopeGoto>(_215e0267b_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _215e0c752_checkPostfix(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db907c_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215daeb11_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_215e8e471_Data> _114217_d = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_215deabb3_checkAssign(&(_self_.get()._field_s), &(_114217_d), nullptr, _113536_a.get()._field_Setter);
	if ((_215ebcc63_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215ec6e48_Ptr> _115021_ptr = _215ebcc63_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_215ec791b_IsUnsafe(_115021_ptr.ptr())) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_215ebc78a_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_214703137_IsNum(_215ebc78a_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_215dee810_Postfix>(_215dee810_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type43));;
}



inline jule::Bool _215e0ca60_isNewAssignIdent(_215e03490_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_22e0ac983_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_215e8c6e4_defByIdent((*(_self_))._field_table.ptr(), _116835_ident, false) == nullptr);;
}



inline jule::Bool _215e0ceb1_checkStructureAssignOp(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc71ab_StructIns>* _117547_s, jule::Ptr<_215db907c_AssignSt>* _117567_a, jule::Ptr<_215e8e471_Data>* _117586_r) {
	jule::Ptr<_215dcea10_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ (*(_117567_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1ebc67b37:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1ebc68e9b:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1ebc69012:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1ebc69078:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1ebc68077:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1ebc680dd:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1ebc68154:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1ebc681ba:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1ebc69265:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1ebc692cb:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1ebc68011:;
			{
				_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_215d9ca11_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1ebc6797d:;
	};
	if ((_117817_overload == nullptr)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_215d9ca11_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_215dcdb41_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _215e2cd27_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference, &(_121017_p.get()._field_Kind), _117586_r, (*(_117567_a)).get()._field_Setter);;
}



inline void _215e0d236_checkSingleAssign(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db907c_AssignSt>* _121442_a) {
	jule::Ptr<_215e8e471_Data> _121517_l = nullptr;;
	if ((!(_22e0ac983_IsIgnoreIdent((*(_121442_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_215daeb11_Expr> _121821_expr = (*(_121442_a)).get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_215e90ede_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_215e2c51e_evalp(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0), _121517_l.get()._field_Kind);
	} else {
		_122517_eval=_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_215e05959_isUnsafe(_self_);
	jule::Ptr<_215e8e471_Data> _123217_r = _215eab911_evalExpr(_122517_eval, (*(_121442_a)).get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_215ebb59c_Void(_123217_r.get()._field_Kind.ptr())) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type23));;
		return;;
	};
	if ((!(_215deabb3_checkAssign(&(_self_.get()._field_s), &(_121517_l), _123217_r, (*(_121442_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_215ebe429_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215dc76d9_OperandExprModel> _125417_lm = jule::new_ptr<_215dc76d9_OperandExprModel>(_215dc76d9_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_215dc76d9_OperandExprModel> _125817_rm = jule::new_ptr<_215dc76d9_OperandExprModel>(_215dc76d9_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_215deec83_Assign>(_215deec83_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=(*(_121442_a)).get()._field_Setter}), &__jule_any_type44));;
	if ((!(*(_121442_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_215dc71ab_StructIns> _126521_strct = _215ebdbdc_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_215e0ceb1_checkStructureAssignOp(_self_, &(_126521_strct), _121442_a, &(_123217_r));
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind=(*(_121442_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_121442_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_215eadb22_binaryEval _127221_solver = static__215eae53a_new(_122517_eval, (*(_121442_a)).get()._field_Setter);;
		_123217_r=_215eb4397_solveExplicit(&_127221_solver, &(_121517_l), &(_123217_r));
		if ((_123217_r == nullptr)) {
			return;;
		};
		((*(_121442_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_215e79d63_assignTypeChecker _128117_checker = _215e79d63_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=(*(_121442_a)).get()._field_Setter};;
	if (_215e7aeda_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _215e0d764_processEndPartOfMultiAssign(_215e03490_scopeChecker* _self_, jule::Ptr<_215e0013a_MultiAssign>* _129351_st, jule::Ptr<_215db907c_AssignSt>* _129414_a, jule::Ptr<_215db8a3d_AssignLeft>* _129433_lexpr, jule::Ptr<_215e8e471_Data>* _129458_l, jule::Ptr<_215e8e471_Data>* _129473_r) {
	if (((!((*(_129433_lexpr)).get()._field_Reference)) && _22e0ac983_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident))) {
		if (_215ebb59c_Void((*(_129473_r)).get()._field_Kind.ptr())) {
			_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_129414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_129414_a)).get()._field_Declarative && ((*(_129433_lexpr)).get()._field_Reference || _215e0ca60_isNewAssignIdent(_self_, (*(_129433_lexpr)).get()._field_Ident)))) {
		if (_215e0762b_isDuplicatedIdent(_self_, 0LLU, (*(_129433_lexpr)).get()._field_Ident)) {
			_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_215e26260_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_215e05d99_stop(_self_);
			return;;
		};
		if (_22e0ac983_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident)) {
			_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_215e41aa5_Var> _131521_v = jule::new_ptr<_215e41aa5_Var>(_215e41aa5_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_129433_lexpr)).get()._field_Token, ._field_Ident=(*(_129433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_129433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_129433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Expr=(*(_129414_a)).get()._field_Right, ._field_Data=(*(_129473_r))}), });;
		_215e3922e_checkVar((*(_self_))._field_s, &(_131521_v));
		_131521_v.get()._field_Value=nullptr;
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_131521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131521_v.get()._field_Mutable, ._field_Reference=_131521_v.get()._field_Reference, ._field_Lvalue=(!(_131521_v.get()._field_Constant)), ._field_Model=jule::Any(_131521_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_131521_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_131521_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_129433_lexpr)).get()._field_Mutable || (*(_129433_lexpr)).get()._field_Reference)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_215deabb3_checkAssign(&((*(_self_))._field_s), _129458_l, (*(_129473_r)), (*(_129414_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_215e30c3c_checkValidityForInitExpr((*(_self_))._field_s, (*(_129458_l)).get()._field_Mutable, false, &((*(_129458_l)).get()._field_Kind), _129473_r, &((*(_129414_a)).get()._field_Setter));
	_215e79d63_assignTypeChecker _135817_checker = _215e79d63_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_129458_l)).get()._field_Kind, ._field_d=(*(_129473_r)), ._field_errorToken=(*(_129414_a)).get()._field_Setter};;
	_215e7aeda_check(&_135817_checker);
	(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push((*(_129458_l)));;
}



inline void _215e0d9ea_checkMultiAssign(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db907c_AssignSt>* _136841_a) {
	jule::Ptr<_215e8e471_Data> _136917_rd = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), (*(_136841_a)).get()._field_Right);;
	if ((_136917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_215e8e471_Data>> _137317_right = _215de9de3_getDatasFromTupleData(&(_136917_rd));;
	if ((_137317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1ebc89a49:;
				{
					jule::Ptr<_215dc892c_IndexingExprModel> _137725_iem = _137317_right[0LL].get()._field_Model.cast_ptr<_215dc892c_IndexingExprModel>(&__jule_any_type45);;
					if ((_215ebe1b5_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137317_right=jule::Slice<jule::Ptr<_215e8e471_Data>>::make({jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_215ebe1b5_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1ebc899e4:;
		};
	};
	{
		
		if (((*(_136841_a)).get()._field_Left.len() > _137317_right.len())) {
			_case_begin_1ebc89d79:;
			{
				_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_136841_a)).get()._field_Left.len() < _137317_right.len())) {
			_case_begin_1ebc89de0:;
			{
				_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1ebc8bc27:;
	};
	jule::Ptr<_215e0013a_MultiAssign> _139617_st = jule::new_ptr<_215e0013a_MultiAssign>(_215e0013a_MultiAssign{._field_R=_136917_rd.get()._field_Model});;
	{
		auto expr = &((*(_136841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebc8e059:;
		if (it != expr_end) {
			jule::I64 _139913_i = it - expr->begin();
			{
				jule::Ptr<_215db8a3d_AssignLeft> _140021_lexpr = (*(_136841_a)).get()._field_Left[_139913_i];;
				jule::Ptr<_215e8e471_Data> _140121_l = nullptr;;
				if (((!(_22e0ac983_IsIgnoreIdent(_140021_lexpr.get()._field_Ident))) && ((!((*(_136841_a)).get()._field_Declarative)) || (!(_215e0ca60_isNewAssignIdent(_self_.ptr(), _140021_lexpr.get()._field_Ident)))))) {
					_140121_l=_215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _140021_lexpr.get()._field_Expr);
					if ((_140121_l == nullptr)) {
						goto _iter_next_1ebc8e059;
					};
				};
				jule::Ptr<_215e8e471_Data> _140921_r = _137317_right[_139913_i];;
				_215e0d764_processEndPartOfMultiAssign(_self_.ptr(), &(_139617_st), _136841_a, &(_140021_lexpr), &(_140121_l), &(_140921_r));
			}
			_iter_next_1ebc8e059:;
			++it;
			_139913_i++;
			goto _iter_begin_1ebc8e059;
		}
		_iter_end_1ebc8e059:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139617_st, &__jule_any_type46));;
}



inline void _215e0dc70_checkAssignSt(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db907c_AssignSt> _141537_a) {
	{
		
		if (_22e0aea2e_IsPostfixOp(_141537_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1ebc97e42:;
			{
				_215e0c752_checkPostfix(_self_, _141537_a);
			}
		}
		else if (((_141537_a.get()._field_Left.len() == 1LL) && (!(_141537_a.get()._field_Declarative)))) {
			_case_begin_1ebc97b45:;
			{
				_215e0d236_checkSingleAssign(_self_, &(_141537_a));
			}
		}
		else {
			_case_begin_1ebc9755c:;
			{
				_215e0d9ea_checkMultiAssign(_self_, &(_141537_a));
			}
		}
		_match_end_1ebc97491:;
	};
}



inline jule::Ptr<_215deb92d_Scope> _215e0e127_checkCaseScope(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215e011c4_Case>* _142635_c, jule::Ptr<_215dba578_ScopeTree>* _142650_tree) {
	jule::Ptr<_215e03490_scopeChecker> _142717_ssc = _215e13505_newChildChecker(_self_);;
	_142717_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142635_c))));
	return _215e0860a_checkChildSc(_self_, _142650_tree, &(_142717_ssc));;
}



inline jule::Ptr<_215e011c4_Case> _215e0e622_checkCase(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215e00679_Match> _143233_m, jule::I64 _143244_i, jule::Ptr<_215dc1d32_Case> _143256_c, jule::Ptr<_215e8e471_Data> _143275_expr) {
	jule::Ptr<_215e011c4_Case> _143317_case = _143233_m.get()._field_Cases[_143244_i];;
	_143317_case.get()._field_Exprs=jule::Slice<jule::Ptr<_215e8e471_Data>>::alloc(0LL, _143256_c.get()._field_Exprs.len());
	jule::Bool _143517_genericMatched = false;;
	jule::Ptr<_215e90ede_Eval> _143617_eval = _215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0));;
	{
		auto expr = &(_143256_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebc9c908:;
		if (it != expr_end) {
			jule::Ptr<_215daeb11_Expr> _143721_e = *it;
			{
				jule::Ptr<_215e8e471_Data> _143821_d = _215eab2e5_evalExprKind(_143617_eval, _143721_e.get()._field_Kind);;
				if ((_143821_d == nullptr)) {
					goto _iter_next_1ebc9c908;
				};
				if (_143233_m.get()._field_TypeMatch) {
					_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
					if ((_215de9b4b_countMatchType(&(_143233_m), &(_143821_d.get()._field_Kind)) > 1LL)) {
						_215e25e41_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_143821_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_143275_expr.get()._field_Kind.get()._field_Generic) {
						_143517_genericMatched=(_143517_genericMatched || _215ebab0c_Equal(_143275_expr.get()._field_Kind, _143821_d.get()._field_Kind));
					} else {
						if ((_215ebd23b_TypeEnum(_143275_expr.get()._field_Kind.ptr()) != nullptr)) {
							_215e2d278_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
						} else {
							jule::Ptr<_215dddc1c_Trait> _145329_trt = _215ebde51_Trait(_143275_expr.get()._field_Kind.ptr());;
							if ((_145329_trt != nullptr)) {
								_215e2d278_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1ebc9c908;
				};
				if (_143821_d.get()._field_Decl) {
					_215e25e41_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1ebc9c908;
				};
				_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
				_215e79d63_assignTypeChecker _147121_checker = _215e79d63_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_143275_expr.get()._field_Kind, ._field_d=_143821_d, ._field_errorToken=_143721_e.get()._field_Token};;
				_215e7aeda_check(&_147121_checker);
			}
			_iter_next_1ebc9c908:;
			++it;
			goto _iter_begin_1ebc9c908;
		}
		_iter_end_1ebc9c908:;
	};
	if ((((!(_143233_m.get()._field_TypeMatch)) || (!(_143275_expr.get()._field_Kind.get()._field_Generic))) || _143517_genericMatched)) {
		_143317_case.get()._field_Scope=_215e0e127_checkCaseScope(_self_, &(_143317_case), &(_143256_c.get()._field_Scope));
	};
	return _143317_case;;
}



inline void _215e0e9da_checkCases(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc2508_MatchCase>* _148535_m, jule::Ptr<_215e00679_Match> _148554_rm, jule::Ptr<_215e8e471_Data> _148570_expr) {
	_148554_rm.get()._field_Cases=jule::Slice<jule::Ptr<_215e011c4_Case>>::alloc(0LL, (*(_148535_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebca5d1d:;
		if (it != expr_end) {
			jule::I64 _148713_i = it - expr->begin();
			{
				jule::Ptr<_215e011c4_Case> _148821_case = jule::new_ptr<_215e011c4_Case>(_215e011c4_Case{._field_Owner=_148554_rm, });;
				if ((_148713_i > 0LL)) {
					_148554_rm.get()._field_Cases[(_148713_i - 1LL)].get()._field_Next=_148821_case;
				};
				_148554_rm.get()._field_Cases = jule::alloc_for_append(_148554_rm.get()._field_Cases,1);_148554_rm.get()._field_Cases.__push(_148821_case);;
			}
			_iter_next_1ebca5d1d:;
			++it;
			_148713_i++;
			goto _iter_begin_1ebca5d1d;
		}
		_iter_end_1ebca5d1d:;
	};
	if (((_148554_rm.get()._field_Default != nullptr) && ((*(_148535_m)).get()._field_Cases.len() > 0LL))) {
		_148554_rm.get()._field_Cases[(_148554_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148554_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebca92d8:;
		if (it != expr_end) {
			jule::I64 _150114_i = it - expr->begin();
			jule::Ptr<_215dc1d32_Case> _150121_c = *it;
			{
				_215e0e622_checkCase(_self_, _148554_rm, _150114_i, _150121_c, _148570_expr);
			}
			_iter_next_1ebca92d8:;
			++it;
			_150114_i++;
			goto _iter_begin_1ebca92d8;
		}
		_iter_end_1ebca92d8:;
	};
}



inline jule::Ptr<_215e011c4_Case> _215e0ed92_checkDefault(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215e00679_Match> _150636_m, jule::Ptr<_215dc0c65_Else> _150651_d) {
	jule::Ptr<_215e011c4_Case> _150717_def = jule::new_ptr<_215e011c4_Case>(_215e011c4_Case{._field_Owner=_150636_m, });;
	_150717_def.get()._field_Scope=_215e0e127_checkCaseScope(_self_, &(_150717_def), &(_150651_d.get()._field_Scope));
	return _150717_def;;
}



inline void _215e10117_checkComptimePanic(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215deb92d_Scope>* _151439_s) {
	if (((*(_151439_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151913_stmt = (*(_151439_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151913_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ebcac4a6:;
			{
				jule::Ptr<_215e8e471_Data> _152217_d = _151913_stmt.cast_ptr<_215e8e471_Data>(&__jule_any_type23);;
				{
					auto &_match_expr{ _152217_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1ebcad287:;
						{
							jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel> _152521_m = _152217_d.get()._field_Model.cast_ptr<_215dcac1a_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ _152521_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type47) {
									_case_begin_1ebcae222:;
									{
										jule::Ptr<_21470339b_Const> _152825_c = _152521_m.get()._field_Expr.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
										if (_214705623_IsStr(_152825_c.ptr())) {
											jule::Ptr<_215e03490_scopeChecker> _153033_root = _215e0684a_getHardRoot(_self_);;
											_215e25e41_pushErr(_self_.get()._field_s.ptr(), _153033_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_214704435_ReadStr(_152825_c.ptr()), &__jule_any_type5)}));
										};
									}
								}
								_match_end_1ebcae013:;
							};
						}
					}
					_match_end_1ebcacd8b:;
				};
			}
		}
		_match_end_1ebcac451:;
	};
}



inline void _215e10436_pushTypeMatch(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215e00679_Match> _153837_tm, jule::Ptr<_215dc2508_MatchCase>* _153854_m) {
	if (_153837_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto expr = &(_153837_tm.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebcad6b6:;
			if (it != expr_end) {
				jule::Ptr<_215e011c4_Case> _154225_c = *it;
				{
					if ((_154225_c.get()._field_Scope != nullptr)) {
						_215e10117_checkComptimePanic(_self_, &(_154225_c.get()._field_Scope));
						_153837_tm.get()._field_Default=_154225_c;
						_153837_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1ebcad6b6:;
				++it;
				goto _iter_begin_1ebcad6b6;
			}
			_iter_end_1ebcad6b6:;
		};
		if (((*(_153854_m)).get()._field_Default != nullptr)) {
			_153837_tm.get()._field_Cases=nullptr;
			_153837_tm.get()._field_Default=_215e0ed92_checkDefault(_self_, _153837_tm, (*(_153854_m)).get()._field_Default);
			if ((_153837_tm.get()._field_Default != nullptr)) {
				_215e10117_checkComptimePanic(_self_, &(_153837_tm.get()._field_Default.get()._field_Scope));
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153837_tm, &__jule_any_type48));;
}



inline void _215e106ab_checkTypeMatch(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc2508_MatchCase>* _156239_m) {
	jule::Ptr<_215e8e471_Data> _156317_d = _215eab603_eval(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), (*(_156239_m)).get()._field_Expr);;
	if ((_156317_d == nullptr)) {
		return;;
	};
	if (((!(_156317_d.get()._field_Kind.get()._field_Generic)) && (!(((((_215ebc78a_Prim(_156317_d.get()._field_Kind.ptr()) != nullptr) && _215ec35e8_IsAny(_215ebc78a_Prim(_156317_d.get()._field_Kind.ptr()).ptr())) || (_215ebde51_Trait(_156317_d.get()._field_Kind.ptr()) != nullptr)) || (_215ebd23b_TypeEnum(_156317_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_156239_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215e00679_Match> _157417_tm = jule::new_ptr<_215e00679_Match>(_215e00679_Match{._field_Expr=_156317_d, ._field_TypeMatch=true, });;
	if (((!(_157417_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_156239_m)).get()._field_Default != nullptr))) {
		_157417_tm.get()._field_Default=_215e0ed92_checkDefault(_self_, _157417_tm, (*(_156239_m)).get()._field_Default);
	};
	_215e0e9da_checkCases(_self_, _156239_m, _157417_tm, _156317_d);
	_215e10436_pushTypeMatch(_self_, _157417_tm, _156239_m);
}



inline void _215e10931_checkCommonMatch(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc2508_MatchCase>* _158741_m) {
	jule::Ptr<_215e8e471_Data> _158817_d = nullptr;;
	if (((*(_158741_m)).get()._field_Expr == nullptr)) {
		_158817_d=jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__2147037ec_NewBool(true)});
		_158817_d.get()._field_Model=jule::Any(_158817_d.get()._field_Constant, &__jule_any_type47);
	} else {
		_158817_d=_215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), (*(_158741_m)).get()._field_Expr);
		if ((_158817_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_215e00679_Match> _160217_mc = jule::new_ptr<_215e00679_Match>(_215e00679_Match{._field_Expr=_158817_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_160217_mc, &__jule_any_type48));;
	if (((*(_158741_m)).get()._field_Default != nullptr)) {
		_160217_mc.get()._field_Default=_215e0ed92_checkDefault(_self_, _160217_mc, (*(_158741_m)).get()._field_Default);
	};
	_215e0e9da_checkCases(_self_, _158741_m, _160217_mc, _158817_d);
}



inline void _215e10ba6_checkMatch(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc2508_MatchCase> _161434_m) {
	if (_161434_m.get()._field_TypeMatch) {
		_215e106ab_checkTypeMatch(_self_, &(_161434_m));
		return;;
	};
	_215e10931_checkCommonMatch(_self_, &(_161434_m));
}



inline void _215e10e2b_checkFall(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db8433_FallSt> _162229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _215e06372_isDeferred(_self_))) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_215e011c4_Case* _163017_case = ((_215e011c4_Case*)(_self_.get()._field_cse));;
	if ((_163017_case->_field_Next == nullptr)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_215e01779_FallSt>(_215e01779_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_163017_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_215dedd81_BreakSt> _215e11239_checkBreakWithLabel(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc0083_BreakSt> _164239_b) {
	jule::Ptr<_215dedd81_BreakSt> _164317_brk = _215e11547_checkPlainBreak(_self_, _164239_b);;
	if ((_164317_brk == nullptr)) {
		return nullptr;;
	};
	_164317_brk.get()._field_It=0LLU;
	_164317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_215e02208_scopeLabel> _165317_label = _215de9134_findLabelParent(_164239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_165317_label == nullptr)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_165317_label.get()._field_used=true;
	if (((_165317_label.get()._field_pos + 1LL) >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _166613_i = (_165317_label.get()._field_pos + 1LL);;
	if ((_166613_i >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _167021_st = _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166613_i];;
		{
			auto &_match_expr{ _167021_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1ebcc858d:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_215dec775_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1ebcca1b6:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_215ded5cd_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1ebcca22c:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_215decbe8_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1ebcca2a4:;
				{
					_164317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_215e00679_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1ebcca040:;
				{
					_215e25e41_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1ebcc9eda:;
		};
	};
	if ((_164317_brk.get()._field_It != 0LLU)) {
		if ((!(_215e0b94e_checkValidBreakLabel(_self_, _164317_brk.get()._field_It)))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_164317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_215e0b94e_checkValidBreakLabel(_self_, _164317_brk.get()._field_Mtch)))) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _164317_brk;;
}



inline jule::Ptr<_215dedd81_BreakSt> _215e11547_checkPlainBreak(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc0083_BreakSt> _170035_b) {
	if (_215e06372_isDeferred(_self_)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215e03490_scopeChecker> _170617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170617_scope.get()._field_it == 0LLU) && (_170617_scope.get()._field_cse == 0LLU)) && (_170617_scope.get()._field_parent != nullptr)) && (_170617_scope.get()._field_owner == nullptr))) {
			_case_begin_1ebcd12aa:;
			{
				_170617_scope=_170617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170617_scope.get()._field_it != 0LLU)) {
			_case_begin_1ebcd1332:;
			{
				return jule::new_ptr<_215dedd81_BreakSt>(_215dedd81_BreakSt{._field_It=_170617_scope.get()._field_it, });;
			}
		}
		else if ((_170617_scope.get()._field_cse != 0LLU)) {
			_case_begin_1ebcd13a9:;
			{
				return jule::new_ptr<_215dedd81_BreakSt>(_215dedd81_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_215e011c4_Case*)(_170617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1ebcd11de:;
	};
	_215e25e41_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _215e117bc_checkBreak(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dc0083_BreakSt> _172230_b) {
	if ((_172230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_215dedd81_BreakSt> _172421_brk = _215e11239_checkBreakWithLabel(_self_, _172230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_215dedd81_BreakSt> _172917_brk = _215e11547_checkPlainBreak(_self_, _172230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172917_brk, &__jule_any_type50));;
}



inline void _215e11a42_checkRet(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dbd405_RetSt> _173332_r) {
	if (_215e06372_isDeferred(_self_)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _173332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e01aed_RetSt> _173817_rt = jule::new_ptr<_215e01aed_RetSt>(_215e01aed_RetSt{._field_Func=_215e065d6_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173817_rt, &__jule_any_type51));;
	jule::Ptr<_215e87788_retTypeChecker> _174317_rtc = jule::new_ptr<_215e87788_retTypeChecker>(_215e87788_retTypeChecker{._field_sc=_self_, ._field_f=_173817_rt.get()._field_Func, ._field_errorToken=_173332_r.get()._field_Token, });;
	jule::Bool _174813_ok = _215e8848c_check(_174317_rtc.ptr(), &(_173332_r.get()._field_Expr));;
	if ((!(_174813_ok))) {
		return;;
	};
	if ((_173332_r.get()._field_Expr != nullptr)) {
		_173817_rt.get()._field_Expr=_174317_rtc.get()._field_model;
	};
}



inline void _215e11cb7_checkUseExpr(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215db04a2_UseExpr> _175832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_215e06372_isDeferred(_self_)) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_215e25e41_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _215e1203c_checkNode(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Any* _177434_node) {
	{
		auto &_match_expr{ (*(_177434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ebcdd619:;
			{
				_215e08b8d_checkAnonScope(_self_, (*(_177434_node)).cast_ptr<_215dba578_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ebcdd031:;
			{
				_215e078a1_checkVarDecl(_self_, (*(_177434_node)).cast_ptr<_215dbd04d_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ebcdd42c:;
			{
				_215e07b26_checkTypeAliasDecl(_self_, (*(_177434_node)).cast_ptr<_215dc18ae_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ebcdd74b:;
			{
				_215e09232_checkExpr(_self_, (*(_177434_node)).cast_ptr<_215daeb11_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1ebcdd7b2:;
			{
				_215e09ac3_checkConditional(_self_, (*(_177434_node)).cast_ptr<_215dc11d8_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1ebcdd96b:;
			{
				_215e0b333_checkIter(_self_, (*(_177434_node)).cast_ptr<_215dbda65_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1ebcdd9d2:;
			{
				_215e0bed2_checkCont(_self_, (*(_177434_node)).cast_ptr<_215dc043a_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1ebcdda48:;
			{
				_215e0c257_checkLabel(_self_, (*(_177434_node)).cast_ptr<_215db7c90_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ebcddaae:;
			{
				_215e0c4cc_pushGoto(_self_, (*(_177434_node)).cast_ptr<_215db8147_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ebcddb25:;
			{
				_215e0dc70_checkAssignSt(_self_, (*(_177434_node)).cast_ptr<_215db907c_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1ebcddb8b:;
			{
				_215e10ba6_checkMatch(_self_, (*(_177434_node)).cast_ptr<_215dc2508_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1ebcddc02:;
			{
				_215e10e2b_checkFall(_self_, (*(_177434_node)).cast_ptr<_215db8433_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1ebcddc68:;
			{
				_215e117bc_checkBreak(_self_, (*(_177434_node)).cast_ptr<_215dc0083_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1ebcddcce:;
			{
				_215e11a42_checkRet(_self_, (*(_177434_node)).cast_ptr<_215dbd405_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ebcddd45:;
			{
				_215e11cb7_checkUseExpr(_self_, (*(_177434_node)).cast_ptr<_215db04a2_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1ebcdd1a7:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1ebcdd0ca:;
	};
}



inline void _215e12218_checkResult(jule::Ptr<_215e03490_scopeChecker> _self_) {
	_215db9e6d_Stmt _181217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _181217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1ebce7216:;
			{
				jule::Ptr<_215db04a2_UseExpr> _181521_ue = _181217_stmt._field_Data.cast_ptr<_215db04a2_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_215e8e471_Data> _181621_d = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _181521_ue.get()._field_Expr);;
				if ((_181621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181621_d, &__jule_any_type23));;
				jule::Ptr<_215e87788_retTypeChecker> _182121_rtc = jule::new_ptr<_215e87788_retTypeChecker>(_215e87788_retTypeChecker{._field_sc=_self_, ._field_types=_215dd0b32_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181521_ue.get()._field_Expr.get()._field_Token, });;
				_215e8848c_check(_182121_rtc.ptr(), &(_181521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ebce6941:;
			{
				jule::Ptr<_215daeb11_Expr> _182821_expr = _181217_stmt._field_Data.cast_ptr<_215daeb11_Expr>(&__jule_any_type53);;
				jule::Ptr<_215e8e471_Data> _182921_d = _215eab911_evalExpr(_215e2c82c_eval(_self_.get()._field_s, jule::Trait<_215ed6375_Lookup>(_self_, 0)), _182821_expr);;
				if ((_182921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1ebcebb44:;
						{
							jule::Ptr<_215dcc007_BuiltinErrorCallExprModel> _183525_m = _182921_d.get()._field_Model.cast_ptr<_215dcc007_BuiltinErrorCallExprModel>(&__jule_any_type22);;
							_215e08eac_processErrorCall(_self_, &(_183525_m), _182821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182921_d, &__jule_any_type23));;
						}
					}
					else {
						_case_begin_1ebceb737:;
						{
							return;;
						}
					}
					_match_end_1ebceb528:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1ebce69a7:;
			{
				_215e1203c_checkNode(_self_, &(_181217_stmt._field_Data));
			}
		}
		else {
			_case_begin_1ebce68ca:;
			{
				_215e1203c_checkNode(_self_, &(_181217_stmt._field_Data));
				return;;
			}
		}
		_match_end_1ebce6754:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _215e123e4_checkTree(jule::Ptr<_215e03490_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185717_n)--;
	};
	for (; (_self_.get()._field_i < _185717_n); (_self_.get()._field_i)++) {
		{
			_215db9e6d_Stmt _186521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_215e1203c_checkNode(_self_, &(_186521_stmt._field_Data));
			if (_215e0610d_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1ebcee1eb:;
	}
	_iter_end_1ebcee1eb:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_215e12218_checkResult(_self_);
	};
}



inline void _215e12713_checkGoto(_215e03490_scopeChecker* _self_, jule::Ptr<_215e0267b_scopeGoto>* _187633_gt, jule::Ptr<_215e02208_scopeLabel>* _187654_label) {
	jule::Ptr<_215e03490_scopeChecker> _187717_gtsc = (*(_187633_gt)).get()._field_scope;;
	while (((_187717_gtsc.get()._field_childIndex - 1LL) > (*(_187654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_187717_gtsc=_187717_gtsc.get()._field_parent;
		}
	_iter_next_1ebd027d7:;
	}
	_iter_end_1ebd027d7:;;
	jule::I64 _188217_n = 0LL;;
	if ((_187717_gtsc.get()._field_scope == (*(_187654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_187633_gt)).get()._field_pos > (*(_187654_label)).get()._field_pos)) {
			return;;
		};
		_188217_n=(*(_187633_gt)).get()._field_pos;
	};
	jule::I64 _189517_i = ((*(_187654_label)).get()._field_pos - 1LL);;
	if ((_188217_n == 0LL)) {
		{
			auto expr = &((*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebd04d17:;
			if (it != expr_end) {
				jule::I64 _189817_j = it - expr->begin();
				jule::Any _189820_stmt = *it;
				{
					if (_215de980a_stmtIsGotoScope(&(_189820_stmt), &(_187717_gtsc.get()._field_scope))) {
						_188217_n=_189817_j;
						goto _iter_end_1ebd04d17;
					};
				}
				_iter_next_1ebd04d17:;
				++it;
				_189817_j++;
				goto _iter_begin_1ebd04d17;
			}
			_iter_end_1ebd04d17:;
		};
	};
	for (; (_189517_i >= _188217_n); (_189517_i)--) {
		{
			jule::Any _190821_stmt = (*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_189517_i];;
			if (_215deb499_stmtIsDef(&(_190821_stmt))) {
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_187633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_187633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1ebd05c08:;
	}
	_iter_end_1ebd05c08:;;
}



inline void _215e128de_checkGotos(_215e03490_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd05653:;
		if (it != expr_end) {
			jule::Ptr<_215e0267b_scopeGoto> _191721_gt = *it;
			{
				jule::Ptr<_215e02208_scopeLabel> _191821_label = _215e07274_findLabelAll(_self_, _191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191821_label == nullptr)) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), _191721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1ebd05653;
				};
				_191821_label.get()._field_used=true;
				_215e12713_checkGoto(_self_, &(_191721_gt), &(_191821_label));
			}
			_iter_next_1ebd05653:;
			++it;
			goto _iter_begin_1ebd05653;
		}
		_iter_end_1ebd05653:;
	};
}



inline void _215e12aba_checkLabels(_215e03490_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd09cea:;
		if (it != expr_end) {
			jule::Ptr<_215e02208_scopeLabel> _193016_l = *it;
			{
				if ((!(_193016_l.get()._field_used))) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), _193016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ebd09cea:;
			++it;
			goto _iter_begin_1ebd09cea;
		}
		_iter_end_1ebd09cea:;
	};
}



inline void _215e12c96_checkVars(_215e03490_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd0a229:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _193816_v = *it;
			{
				if (((((!(_193816_v.get()._field_Used)) && (!(_22e0ac983_IsIgnoreIdent(_193816_v.get()._field_Ident)))) && (!(_22e0acc2a_IsAnonIdent(_193816_v.get()._field_Ident)))) && (!_193816_v.get()._field_Ident.equal("self", 4)))) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), _193816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ebd0a229:;
			++it;
			goto _iter_begin_1ebd0a229;
		}
		_iter_end_1ebd0a229:;
	};
}



inline void _215e12e72_checkAliases(_215e03490_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd0d24e:;
		if (it != expr_end) {
			jule::Ptr<_215eb9710_TypeAlias> _194616_a = *it;
			{
				if ((((!(_194616_a.get()._field_Used)) && (!(_22e0ac983_IsIgnoreIdent(_194616_a.get()._field_Ident)))) && (!(_22e0acc2a_IsAnonIdent(_194616_a.get()._field_Ident))))) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), _194616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_194616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1ebd0d24e:;
			++it;
			goto _iter_begin_1ebd0d24e;
		}
		_iter_end_1ebd0d24e:;
	};
}



inline void _215e13291_check(jule::Ptr<_215e03490_scopeChecker> _self_, jule::Ptr<_215dba578_ScopeTree>* _195430_tree, jule::Ptr<_215deb92d_Scope>* _195453_s) {
	(*(_195453_s)).get()._field_Deferred=(*(_195430_tree)).get()._field_Deferred;
	(*(_195453_s)).get()._field_Unsafety=(*(_195430_tree)).get()._field_Unsafety;
	jule::I64 _195813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_195430_tree));
	_self_.get()._field_scope=(*(_195453_s));
	_215e123e4_checkTree(_self_);
	if ((_195813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_215e12c96_checkVars(_self_.ptr());
		_215e12e72_checkAliases(_self_.ptr());
		if (_215e05bbd_isRoot(_self_.ptr())) {
			_215e128de_checkGotos(_self_.ptr());
			_215e12aba_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_215e03490_scopeChecker> _215e13505_newChildChecker(jule::Ptr<_215e03490_scopeChecker> _self_) {
	jule::Ptr<_215e03490_scopeChecker> _197817_base = _215de895d_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_197817_base.get()._field_parent=_self_;
	_197817_base.get()._field_labels=_self_.get()._field_labels;
	_197817_base.get()._field_gotos=_self_.get()._field_gotos;
	_197817_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e03490_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _215e144e5_checkCdef(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ebd143a9:;
			{
				if ((*(_self_))._field_o.cast_ptr<_215dcd24a_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_1ebd145da;
				};
				goto _case_begin_1ebd14640;
			}
		}
		else {
			_case_begin_1ebd14640:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd145da:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _215e1476a_checkTypedef(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ebd16a82:;
			{
				if ((*(_self_))._field_o.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1ebd16ca2;
				};
				goto _case_begin_1ebd16d07;
			}
		}
		else {
			_case_begin_1ebd16d07:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd16ca2:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _215e149e0_checkDerive(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ebd1927c:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_1ebd1949c;
				};
				goto _case_begin_1ebd19502;
			}
		}
		else {
			_case_begin_1ebd19502:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ebd1949c:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1ebd1ced9:;
		}
		else {
			_case_begin_1ebd1a190:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd1cb21:;
	};
}



inline void _215e14c65_checkNamespace(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ebd1ce1d:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ebd1e4e6:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_215dcd24a_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ebd1e55c:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_215e41aa5_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ebd1e43b:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd1e3d6:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_22e0aa1de_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ebd27a82:;
			{
				if ((_215eb4aa1_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_215d77348_Directive> _11625_typedef = jule::new_ptr<_215d77348_Directive>(_215d77348_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_215d77348_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1ebd27631:;
	};
}



inline void _215e14eda_checkDeprecated(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1ebd27c2a:;
			{
				if ((*(_self_))._field_o.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ebd29cd7:;
			{
				if ((*(_self_))._field_o.cast_ptr<_215dcd24a_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ebd29d4d:;
			{
				if ((*(_self_))._field_o.cast_ptr<_215e41aa5_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1ebd29699:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd29501:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_22e0aa1de_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _215e15260_checkTest(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1ebd325a3:;
			{
				jule::Ptr<_215dcd24a_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_215dcd24a_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_215d7a99a_IsInit(_16717_f.ptr())))) && (!(_215d938a3_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1ebd32dab;
				};
				if (_215d9c5b0_IsMethod(_16717_f.ptr())) {
					_215e25e41_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1ebd32dab;
				};
				goto _case_begin_1ebd32eee;
			}
		}
		else {
			_case_begin_1ebd32eee:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd32dab:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _215e154d5_checkDirective(_215e140a5_directiveChecker* _self_, jule::Ptr<_215d77348_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1ebd36cd3:;
			{
				_215e144e5_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1ebd36d49:;
			{
				_215e1476a_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1ebd36db0:;
			{
				_215e149e0_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1ebd36e26:;
			{
				_215e14c65_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1ebd37a09:;
			{
				_215e14eda_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1ebd37a70:;
			{
				_215e15260_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1ebd37ad6:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1ebd36c6c:;
			{
				_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1ebd36c17:;
	};
}



inline void _215e156b1_check(_215e140a5_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd3a149:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _20821_d = *it;
			{
				_215e154d5_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1ebd3a149:;
			++it;
			goto _iter_begin_1ebd3a149;
		}
		_iter_end_1ebd3a149:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215e140a5_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e1a650_FindPackage(_215e1a133_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e1a95d_SelectPackage(_215e1a133_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_215e41aa5_Var> _215e1ad15_FindVar(_215e1a133_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_215e1c6eb_isLookupable(_self_, _19226_ident)))) {
		return nullptr;;
	};
	return _215e1784a_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _19226_ident, false);;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e1b1bc_FindTypeAlias(_215e1a133_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_215e1c6eb_isLookupable(_self_, _20432_ident)))) {
		return nullptr;;
	};
	return _215e17c79_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20432_ident, false);;
}



inline jule::Ptr<_215dc6cd2_Struct> _215e1b574_FindStruct(_215e1a133_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_215e1c6eb_isLookupable(_self_, _21629_ident)))) {
		return nullptr;;
	};
	return _215e18164_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21629_ident, false);;
}



inline jule::Ptr<_215dcd24a_Fn> _215e1b92b_FindFn(_215e1a133_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_215e1c6eb_isLookupable(_self_, _22825_ident)))) {
		return nullptr;;
	};
	return _215e185c6_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22825_ident, false);;
}



inline jule::Ptr<_215dddc1c_Trait> _215e1bc39_FindTrait(_215e1a133_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_215e1c6eb_isLookupable(_self_, _23928_ident)))) {
		return nullptr;;
	};
	return _215e188d4_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23928_ident);;
}



inline jule::Ptr<_215de0d62_Enum> _215e1c047_FindEnum(_215e1a133_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_215e1c6eb_isLookupable(_self_, _25027_ident)))) {
		return nullptr;;
	};
	return _215e18c25_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25027_ident);;
}



inline jule::Ptr<_215de245c_TypeEnum> _215e1c355_FindTypeEnum(_215e1a133_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_215e1c6eb_isLookupable(_self_, _26131_ident)))) {
		return nullptr;;
	};
	return _215e19066_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _26131_ident);;
}



inline jule::Bool _215e1c6eb_isLookupable(_215e1a133_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _215e1ca09_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_215e1ca09_existIdent(_self_, _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _215e1ca09_existIdent(_215e1a133_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd50417:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_29116_sident = it;
			{
				if (((*(_29116_sident)).get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1ebd50417:;
			++it;
			goto _iter_begin_1ebd50417;
		}
		_iter_end_1ebd50417:;
	};
	return false;;
}



inline jule::Bool _215e1cc90_isAccessibleViaSelection(_215e1a133_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _215e1ca09_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _215e1a133_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e1d565_FindPackage(_215e1d08c_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e1d873_SelectPackage(_215e1d08c_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_215e41aa5_Var> _215e1dc2a_FindVar(_215e1d08c_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _215e1784a_findVarInPackage(&((*(_self_))._field_Files), _32026_ident, _32038_cpp_linked);;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e1e0d2_FindTypeAlias(_215e1d08c_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _215e17c79_findTypeAliasInPackage(&((*(_self_))._field_Files), _32632_ident, _32644_cpp_linked);;
}



inline jule::Ptr<_215dc6cd2_Struct> _215e1e489_FindStruct(_215e1d08c_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _215e18164_findStructInPackage(&((*(_self_))._field_Files), _33229_ident, _33241_cpp_linked);;
}



inline jule::Ptr<_215dcd24a_Fn> _215e1e841_FindFn(_215e1d08c_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _215e185c6_findFnInPackage(&((*(_self_))._field_Files), _33825_ident, _33837_cpp_linked);;
}



inline jule::Ptr<_215dddc1c_Trait> _215e1eb4e_FindTrait(_215e1d08c_Package* _self_, jule::Str _34428_ident) {
	return _215e188d4_findTraitInPackage(&((*(_self_))._field_Files), _34428_ident);;
}



inline jule::Ptr<_215de0d62_Enum> _215e1ee5c_FindEnum(_215e1d08c_Package* _self_, jule::Str _35027_ident) {
	return _215e18c25_findEnumInPackage(&((*(_self_))._field_Files), _35027_ident);;
}



inline jule::Ptr<_215de245c_TypeEnum> _215e2026a_FindTypeEnum(_215e1d08c_Package* _self_, jule::Str _35631_ident) {
	return _215e19066_findTypeEnumInPackage(&((*(_self_))._field_Files), _35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _215e1d08c_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e2379b_FindPackage(_215e2327e_Sema* _self_, jule::Str _22330_ident) {
	return _215e89b64_FindPackage((*(_self_))._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e23aa9_SelectPackage(_215e2327e_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _23332_selector) {
	return _215e89e72_SelectPackage((*(_self_))._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_215e41aa5_Var> _215e23e61_FindVar(_215e2327e_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_215e41aa5_Var> _24517_v = _215e1784a_findVarInPackage(&((*(_self_))._field_files), _24326_ident, _24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd73094:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _25121_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_25121_imp), _24326_ident)))) {
					goto _iter_next_1ebd73094;
				};
				_24517_v=_215e1ad15_FindVar(_25121_imp.ptr(), _24326_ident, _24338_cpp_linked);
				if (((_24517_v != nullptr) && _215e26617_isAccessibleDefine(_self_, _24517_v.get()._field_Public, _24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1ebd73094:;
			++it;
			goto _iter_begin_1ebd73094;
		}
		_iter_end_1ebd73094:;
	};
	return nullptr;;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e24318_FindTypeAlias(_215e2327e_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_215eb9710_TypeAlias> _27217_ta = _215e17c79_findTypeAliasInPackage(&((*(_self_))._field_files), _27032_ident, _27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd75827:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _27821_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_27821_imp), _27032_ident)))) {
					goto _iter_next_1ebd75827;
				};
				_27217_ta=_215e1b1bc_FindTypeAlias(_27821_imp.ptr(), _27032_ident, _27044_cpp_linked);
				if (((_27217_ta != nullptr) && _215e26617_isAccessibleDefine(_self_, _27217_ta.get()._field_Public, _27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1ebd75827:;
			++it;
			goto _iter_begin_1ebd75827;
		}
		_iter_end_1ebd75827:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dc6cd2_Struct> _215e246c0_FindStruct(_215e2327e_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_215dc6cd2_Struct> _29917_s = _215e18164_findStructInPackage(&((*(_self_))._field_files), _29729_ident, _29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd780aa:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _30421_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_30421_imp), _29729_ident)))) {
					goto _iter_next_1ebd780aa;
				};
				_29917_s=_215e1b574_FindStruct(_30421_imp.ptr(), _29729_ident, _29741_cppLinked);
				if (((_29917_s != nullptr) && _215e26617_isAccessibleDefine(_self_, _29917_s.get()._field_Public, _29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1ebd780aa:;
			++it;
			goto _iter_begin_1ebd780aa;
		}
		_iter_end_1ebd780aa:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dcd24a_Fn> _215e24a77_FindFn(_215e2327e_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_215dcd24a_Fn> _32417_f = _215e185c6_findFnInPackage(&((*(_self_))._field_files), _32225_ident, _32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd7a83d:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _33021_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_33021_imp), _32225_ident)))) {
					goto _iter_next_1ebd7a83d;
				};
				_32417_f=_215e1b92b_FindFn(_33021_imp.ptr(), _32225_ident, _32237_cpp_linked);
				if (((_32417_f != nullptr) && _215e26617_isAccessibleDefine(_self_, _32417_f.get()._field_Public, _32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1ebd7a83d:;
			++it;
			goto _iter_begin_1ebd7a83d;
		}
		_iter_end_1ebd7a83d:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dddc1c_Trait> _215e24d85_FindTrait(_215e2327e_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_215dddc1c_Trait> _35117_t = _215e188d4_findTraitInPackage(&((*(_self_))._field_files), _34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd7d236:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _35721_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_35721_imp), _34928_ident)))) {
					goto _iter_next_1ebd7d236;
				};
				_35117_t=_215e1bc39_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _215e26617_isAccessibleDefine(_self_, _35117_t.get()._field_Public, _35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1ebd7d236:;
			++it;
			goto _iter_begin_1ebd7d236;
		}
		_iter_end_1ebd7d236:;
	};
	return nullptr;;
}



inline jule::Ptr<_215de0d62_Enum> _215e25193_FindEnum(_215e2327e_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_215de0d62_Enum> _37817_e = _215e18c25_findEnumInPackage(&((*(_self_))._field_files), _37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd80766:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _38421_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_38421_imp), _37627_ident)))) {
					goto _iter_next_1ebd80766;
				};
				_37817_e=_215e1c047_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _215e26617_isAccessibleDefine(_self_, _37817_e.get()._field_Public, _37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1ebd80766:;
			++it;
			goto _iter_begin_1ebd80766;
		}
		_iter_end_1ebd80766:;
	};
	return nullptr;;
}



inline jule::Ptr<_215de245c_TypeEnum> _215e254a1_FindTypeEnum(_215e2327e_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_215de245c_TypeEnum> _40517_e = _215e19066_findTypeEnumInPackage(&((*(_self_))._field_files), _40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd82c96:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _41121_imp = *it;
			{
				if ((!(_215e21ba6_impIsLookupable(&(_41121_imp), _40331_ident)))) {
					goto _iter_next_1ebd82c96;
				};
				_40517_e=_215e1c355_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _215e26617_isAccessibleDefine(_self_, _40517_e.get()._field_Public, _40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1ebd82c96:;
			++it;
			goto _iter_begin_1ebd82c96;
		}
		_iter_end_1ebd82c96:;
	};
	return nullptr;;
}



inline jule::Bool _215e25803_isFlag(_215e2327e_Sema* _self_, jule::I64 _42721_flags) {
	return (((*(_self_))._field_flags & _42721_flags) == _42721_flags);;
}



inline void _215e25a78_setCurrentFile(_215e2327e_Sema* _self_, jule::Ptr<_215e89647_SymbolTable> _42937_f) {
	(*(_self_))._field_file=_42937_f;
}



inline void _215e25e41_pushErr(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_215e21865_compilerErr(&(_43126_token), true, _43141_fmt, _43154_args));;
}



inline void _215e26260_pushSugggestion(_215e2327e_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_215e22cea_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _43634_fmt, _43647_args);
	};
}



inline jule::Bool _215e26617_isAccessibleDefine(_215e2327e_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_22e0aa1de_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_22e0b0e70_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _22e0b0e70_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _215e26a68_isDuplicatedIdent(_215e2327e_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd890dd:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> *_44916_f = it;
			{
				if (_215e8cb45_isDuplicatedIdent((*(_44916_f)).ptr(), _44832_itself, _44849_ident, _44861_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_44916_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebd89e46:;
					if (it != expr_end) {
						jule::Ptr<_215e1a133_ImportInfo> *_45420_imp = it;
						{
							{
								auto expr = &((*(_45420_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ebd8a71b:;
								if (it != expr_end) {
									jule::Ptr<_22e0aa1de_Token> *_45524_selected = it;
									{
										if (((*(_45524_selected)).get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1ebd8a71b:;
									++it;
									goto _iter_begin_1ebd8a71b;
								}
								_iter_end_1ebd8a71b:;
							};
						}
						_iter_next_1ebd89e46:;
						++it;
						goto _iter_begin_1ebd89e46;
					}
					_iter_end_1ebd89e46:;
				};
			}
			_iter_next_1ebd890dd:;
			++it;
			goto _iter_begin_1ebd890dd;
		}
		_iter_end_1ebd890dd:;
	};
	return false;;
}



inline void _215e26d87_checkDirectives(jule::Ptr<_215e2327e_Sema> _self_, jule::Slice<jule::Ptr<_215d77348_Directive>>* _46540_d, jule::Any _46566_o) {
	_215e140a5_directiveChecker _46617_dc = _215e140a5_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_215d77348_Directive>>>)((&((*(_46540_d)))))), ._field_o=_46566_o};;
	_215e156b1_check(&_46617_dc);
}



inline jule::Bool _215e272d8_checkGenericQuantity(_215e2327e_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_22e0aa1de_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1ebd8d3de:;
			{
				_215e25e41_pushErr(_self_, _47466_token, jule::Str("define not has generics", 23), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1ebd8cc07:;
			{
				_215e25e41_pushErr(_self_, _47466_token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1ebd8cc6d:;
			{
				_215e25e41_pushErr(_self_, _47466_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1ebd8cce5:;
			{
				_215e25e41_pushErr(_self_, _47466_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ebd8cb91:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ebd8cac5:;
	};
}



inline jule::Bool _215e276b2_isDuplicatedImportSelection(_215e2327e_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd8e6cb:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> *_49416_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_49416_imp))) == _49342_itself)) {
					goto _iter_end_1ebd8e6cb;
				};
				if (_215e1ca09_existIdent((*(_49416_imp)).ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1ebd8e6cb:;
			++it;
			goto _iter_begin_1ebd8e6cb;
		}
		_iter_end_1ebd8e6cb:;
	};
	return false;;
}



inline jule::Any _215e27a7a_getImportDef(_215e2327e_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_215e1a133_ImportInfo>* _50644_imp) {
	if ((_21610c853_findPackageBuiltinDef((*(_50644_imp)).get()._field_LinkPath, _50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_50644_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd92723:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _215e8c6e4_defByIdent(_51021_f.ptr(), _50627_ident, false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1ebd92723:;
			++it;
			goto _iter_begin_1ebd92723;
		}
		_iter_end_1ebd92723:;
	};
	return nullptr;;
}



inline jule::Bool _1ebd991a8_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215e41aa5_Var>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ebd9d102_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215eb9710_TypeAlias>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ebda1db4_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215dc6cd2_Struct>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ebda602d_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215dddc1c_Trait>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ebda9ce0_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215de0d62_Enum>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ebdadbb2_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215de245c_TypeEnum>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1ebdb2a84_checkImportSelection(_215e2327e_Sema* _self_, jule::Ptr<_22e0aa1de_Token>* _52143_ident, jule::Ptr<_215dcd24a_Fn>* _52159_s) {
	if ((!(_215e26617_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_215e19561_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_215e25e41_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _215e28262_checkImportSelectedSelections(_215e2327e_Sema* _self_, jule::Ptr<_215e1a133_ImportInfo>* _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_53553_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd94a55:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> _53716_ident = *it;
			{
				if (_53716_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1ebd94a55;
				};
				if (_215e276b2_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_53553_imp)))), _53716_ident.get()._field_Kind)) {
					_215e25e41_pushErr(_self_, _53716_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
					_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ebd94a55;
				};
				jule::Any _54921_def = _215e27a7a_getImportDef(_self_, _53716_ident.get()._field_Kind, _53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1ebd97c67:;
						{
							goto _iter_next_1ebd94a55;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1ebd9524d:;
						{
							jule::Ptr<_215e41aa5_Var> _55525_v = _54921_def.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
							__jule_func_result=(_1ebd991a8_checkImportSelection(_self_, &(_53716_ident), &(_55525_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1ebd973b5:;
						{
							jule::Ptr<_215eb9710_TypeAlias> _55825_ta = _54921_def.cast_ptr<_215eb9710_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1ebd9d102_checkImportSelection(_self_, &(_53716_ident), &(_55825_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1ebd9742b:;
						{
							jule::Ptr<_215dc6cd2_Struct> _56125_s = _54921_def.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1ebda1db4_checkImportSelection(_self_, &(_53716_ident), &(_56125_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1ebd97e76:;
						{
							jule::Ptr<_215dddc1c_Trait> _56425_t = _54921_def.cast_ptr<_215dddc1c_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1ebda602d_checkImportSelection(_self_, &(_53716_ident), &(_56425_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1ebd97edc:;
						{
							jule::Ptr<_215de0d62_Enum> _56725_e = _54921_def.cast_ptr<_215de0d62_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1ebda9ce0_checkImportSelection(_self_, &(_53716_ident), &(_56725_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1ebd98053:;
						{
							jule::Ptr<_215de245c_TypeEnum> _57025_e = _54921_def.cast_ptr<_215de245c_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1ebdadbb2_checkImportSelection(_self_, &(_53716_ident), &(_57025_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1ebd980b9:;
						{
							jule::Ptr<_215dcd24a_Fn> _57325_f = _54921_def.cast_ptr<_215dcd24a_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1ebdb2a84_checkImportSelection(_self_, &(_53716_ident), &(_57325_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1ebd971a6:;
						{
							_215e25e41_pushErr(_self_, _53716_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1ebd94a55;
						}
					}
					_match_end_1ebd97151:;
				};
			}
			_iter_next_1ebd94a55:;
			++it;
			goto _iter_begin_1ebd94a55;
		}
		_iter_end_1ebd94a55:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ebdb6ec8_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215e41aa5_Var>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdb8b9a:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebd991a8_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdb8b9a:;
			++it;
			goto _iter_begin_1ebdb8b9a;
		}
		_iter_end_1ebdb8b9a:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ebdba52b_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdbb8b2:;
		if (it != expr_end) {
			jule::Ptr<_215eb9710_TypeAlias> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebd9d102_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdbb8b2:;
			++it;
			goto _iter_begin_1ebdbb8b2;
		}
		_iter_end_1ebdbb8b2:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ebdbab03_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215dc6cd2_Struct>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdbe5b8:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebda1db4_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdbe5b8:;
			++it;
			goto _iter_begin_1ebdbe5b8;
		}
		_iter_end_1ebdbe5b8:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ebdc0e49_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215dcd24a_Fn>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdc22e1:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebdb2a84_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdc22e1:;
			++it;
			goto _iter_begin_1ebdc22e1;
		}
		_iter_end_1ebdc22e1:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ebdc1532_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215dddc1c_Trait>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdc4ea3:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebda602d_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdc4ea3:;
			++it;
			goto _iter_begin_1ebdc4ea3;
		}
		_iter_end_1ebdc4ea3:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ebdc41e4_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215de0d62_Enum>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdc7b65:;
		if (it != expr_end) {
			jule::Ptr<_215de0d62_Enum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebda9ce0_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdc7b65:;
			++it;
			goto _iter_begin_1ebdc7b65;
		}
		_iter_end_1ebdc7b65:;
	};
	return _58517_ok;;
}

inline jule::Bool _1ebdc6da6_checkImportsAllSelectionsFromCollection(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215de245c_TypeEnum>>* _58462_s, jule::Ptr<_22e0aa1de_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdca8b0:;
		if (it != expr_end) {
			jule::Ptr<_215de245c_TypeEnum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1ebdadbb2_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1ebdca8b0:;
			++it;
			goto _iter_begin_1ebdca8b0;
		}
		_iter_end_1ebdca8b0:;
	};
	return _58517_ok;;
}



inline jule::Bool _215e2898d_checkImportAllSelections(_215e2327e_Sema* _self_, jule::Ptr<_215e1a133_ImportInfo>* _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_59444_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd982d9:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> *_59616_file = it;
			{
				__jule_func_result=(_1ebdb6ec8_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Vars), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ebdba52b_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeAliases), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ebdbab03_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Structs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ebdc0e49_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Funcs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ebdc1532_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Traits), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ebdc41e4_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Enums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ebdc6da6_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeEnums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1ebd982d9:;
			++it;
			goto _iter_begin_1ebd982d9;
		}
		_iter_end_1ebd982d9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _215e28cac_checkImportSelections(_215e2327e_Sema* _self_, jule::Ptr<_215e1a133_ImportInfo>* _60845_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_60845_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _215e28262_checkImportSelectedSelections(_self_, _60845_imp);
		return __jule_func_result;;
	} else if ((*(_60845_imp)).get()._field_ImportAll) {
		__jule_func_result = _215e2898d_checkImportAllSelections(_self_, _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e290ba_isUseAliasDuplication(_215e2327e_Sema* _self_, jule::Ptr<_215e1a133_ImportInfo>* _61741_imp) {
	if (((*(_61741_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdcd2a8:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == (*(_61741_imp)))) {
					goto _iter_end_1ebdcd2a8;
				};
				if ((_62221_imp2.get()._field_Alias == (*(_61741_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == (*(_61741_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1ebdcd2a8:;
			++it;
			goto _iter_begin_1ebdcd2a8;
		}
		_iter_end_1ebdcd2a8:;
	};
	return false;;
}



inline jule::Bool _215e293c8_checkImport(_215e2327e_Sema* _self_, jule::Ptr<_215e1a133_ImportInfo>* _63735_imp) {
	if (((*(_63735_imp)).get()._field_CppLinked || ((*(_63735_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_215e290ba_isUseAliasDuplication(_self_, _63735_imp)) {
		_215e25e41_pushErr(_self_, (*(_63735_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_63735_imp)).get()._field_Alias, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_63735_imp)).get()._field_Duplicate))) {
		jule::Ptr<_215e2327e_Sema> _64821_sema = jule::new_ptr<_215e2327e_Sema>(_215e2327e_Sema{._field_flags=(*(_self_))._field_flags});;
		_215e3da08_check(_64821_sema, &((*(_63735_imp)).get()._field_Package.get()._field_Files));
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _215e28cac_checkImportSelections(_self_, _63735_imp);;
}



inline void _215e295a4_checkImports(_215e2327e_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdd1b91:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _66221_file = *it;
			{
				_215e25a78_setCurrentFile(_self_, _66221_file);
				{
					auto expr = &(_66221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebdd4754:;
					if (it != expr_end) {
						jule::Ptr<_215e1a133_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _215e293c8_checkImport(_self_, &(_66425_imp));;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1ebdd4754:;
						++it;
						goto _iter_begin_1ebdd4754;
					}
					_iter_end_1ebdd4754:;
				};
			}
			_iter_next_1ebdd1b91:;
			++it;
			goto _iter_begin_1ebdd1b91;
		}
		_iter_end_1ebdd1b91:;
	};
}



inline void _215e29780_implFileImpls(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdd426a:;
		if (it != expr_end) {
			jule::Ptr<_215de68c3_Impl> _67521_imp = *it;
			{
				_215e35add_implImpl(_self_, &(_67521_imp));
			}
			_iter_next_1ebdd426a:;
			++it;
			goto _iter_begin_1ebdd426a;
		}
		_iter_end_1ebdd426a:;
	};
}



inline void _215e2995b_implImpls(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdd6228:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _68121_file = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _68121_file);
				_215e29780_implFileImpls(_self_);
			}
			_iter_next_1ebdd6228:;
			++it;
			goto _iter_begin_1ebdd6228;
		}
		_iter_end_1ebdd6228:;
	};
}



inline void _215e29b37_checkEnums(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebdd7290:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _68821_file = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _68821_file);
				_215e33217_checkEnumDecls(_self_);
			}
			_iter_next_1ebdd7290:;
			++it;
			goto _iter_begin_1ebdd7290;
		}
		_iter_end_1ebdd7290:;
	};
}



inline _215ec8c6e_typeChecker _215e2a088_typeChecker(jule::Ptr<_215e2327e_Sema> _self_, jule::Trait<_215ed6375_Lookup> _69435_l, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _69450_generics, jule::Ptr<_215ec7d8e_referencer> _69513_referencer) {
	_215ec8c6e_typeChecker _69617_tc = _215ec8c6e_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ebdd8bdc:;
			{
				jule::Ptr<_215e03490_scopeChecker> _70521_hard = _215e0684a_getHardRoot(_69435_l.cast_ptr<_215e03490_scopeChecker>(0));;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1ebdd8aee:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1ebdda084:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_215eb9710_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1ebdda02e:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_215eba403_TypeKind> _215e2a583_buildTypeWithRefers(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215daa5e0_TypeDecl>* _72144_t, jule::Trait<_215ed6375_Lookup> _72167_l, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _72213_generics, jule::Ptr<_215ec7d8e_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _215e2a088_typeChecker(_self_, _72167_l, _72213_generics, _72241_referencer); _215ed0eda_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _215e2aa7d_checkTypeWithRefers(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215ebe7d1_TypeSymbol>* _72844_t, jule::Trait<_215ed6375_Lookup> _72864_l, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _72913_generics, jule::Ptr<_215ec7d8e_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_215ebeb88_checked((*(_72844_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_72844_t)).get()._field_Kind=_215e2a583_buildTypeWithRefers(_self_, &((*(_72844_t)).get()._field_Decl), _72864_l, _72913_generics, _72941_referencer);
	__jule_func_result = _215ebeb88_checked((*(_72844_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_215de498c_constraintChecker> _215e2ace2_constraintChecker(jule::Ptr<_215e2327e_Sema> _self_) {
	return jule::new_ptr<_215de498c_constraintChecker>(_215de498c_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _215e2b199_checkType(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215ebe7d1_TypeSymbol>* _74334_t, jule::Trait<_215ed6375_Lookup> _74354_l) {
	return _215e2aa7d_checkTypeWithRefers(_self_, _74334_t, _74354_l, nullptr, nullptr);;
}



inline jule::Ptr<_215eba403_TypeKind> _215e2b5ea_buildTypeWithGenerics(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215daa5e0_TypeDecl>* _74946_t, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _75013_generics, jule::Ptr<_215dd2969_ReferenceStack> _75041_refers) {
	jule::Ptr<_215ec8c6e_typeChecker> _75117_tc = jule::new_ptr<_215ec8c6e_typeChecker>(_215ec8c6e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _215ed0eda_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_215eba403_TypeKind> _215e2b908_buildType(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215daa5e0_TypeDecl>* _76234_t) {
	return _215e2b5ea_buildTypeWithGenerics(_self_, _76234_t, nullptr, nullptr);;
}



inline jule::Ptr<_215eba403_TypeKind> _215e2bc16_selectType(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215daa5e0_TypeDecl>* _76735_t) {
	jule::Ptr<_215ec8c6e_typeChecker> _76817_tc = jule::new_ptr<_215ec8c6e_typeChecker>(_215ec8c6e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_selection=true, });;
	return _215ed0eda_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_215e90ede_Eval> _215e2c167_evalpd(jule::Ptr<_215e2327e_Sema> _self_, jule::Trait<_215ed6375_Lookup> _77930_l, jule::Ptr<_215eba403_TypeKind> _77945_p, jule::Ptr<_215e41aa5_Var> _77963_owner) {
	jule::Ptr<_215e90ede_Eval> _78017_e = jule::new_ptr<_215e90ede_Eval>(_215e90ede_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1ebe03531:;
			{
				_78017_e.get()._field_unsafety=_215e05959_isUnsafe(_77930_l.cast_ptr<_215e03490_scopeChecker>(0));
			}
		}
		_match_end_1ebe034ba:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_215e90ede_Eval> _215e2c51e_evalp(jule::Ptr<_215e2327e_Sema> _self_, jule::Trait<_215ed6375_Lookup> _79429_l, jule::Ptr<_215eba403_TypeKind> _79444_p) {
	return _215e2c167_evalpd(_self_, _79429_l, _79444_p, nullptr);;
}



inline jule::Ptr<_215e90ede_Eval> _215e2c82c_eval(jule::Ptr<_215e2327e_Sema> _self_, jule::Trait<_215ed6375_Lookup> _79928_l) {
	return _215e2c51e_evalp(_self_, _79928_l, nullptr);;
}



inline jule::Bool _215e2cd27_checkAssignType(jule::Ptr<_215e2327e_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_215eba403_TypeKind>* _80357_dest, jule::Ptr<_215e8e471_Data>* _80414_d, jule::Ptr<_22e0aa1de_Token> _80428_errorToken) {
	if ((*(_80414_d)).get()._field_Decl) {
		_215e25e41_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_215ebab0c_Equal((*(_80357_dest)), (*(_80414_d)).get()._field_Kind)))) {
			_215e25e41_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_80357_dest)).ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_80414_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_215e79d63_assignTypeChecker> _81521_atc = jule::new_ptr<_215e79d63_assignTypeChecker>(_215e79d63_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_80357_dest)), ._field_d=(*(_80414_d)), ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _215e7aeda_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_215e8ed34_IsConst((*(_80414_d)).ptr()))) || (_215ebc78a_Prim((*(_80357_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _215ebc78a_Prim((*(_80357_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_214702b5e_IsSigInt(_83117_kind)) {
			_case_begin_1ebe09a98:;
			{
				_214704a40_SetI64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_214702c91_IsUnsigInt(_83117_kind)) {
			_case_begin_1ebe09b20:;
			{
				_214704b72_SetU64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_214703005_IsFloat(_83117_kind)) {
			_case_begin_1ebe09b97:;
			{
				_214705018_SetF64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_21470490d_AsF64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1ebe099cc:;
	};
	return true;;
}



inline jule::Bool _215e2d278_checkTypeCompatibility(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215eba403_TypeKind>* _84547_dest, jule::Ptr<_215eba403_TypeKind>* _84614_src, jule::Ptr<_22e0aa1de_Token>* _84635_errorToken) {
	if (((*(_84614_src)) == nullptr)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_215ebe429_Tup((*(_84614_src)).ptr()) != nullptr)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_215e7823a_typeCompatibilityChecker _86017_tcc = _215e7823a_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_84547_dest)), ._field_src=(*(_84614_src)), ._field_errorToken=(*(_84635_errorToken))};;
	if (_215e79824_check(&_86017_tcc)) {
		return true;;
	};
	_215e25e41_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_215eba403_TypeKind> _215e2d6eb_buildNonGenericTypeKind(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215daa5e0_TypeDecl>* _88148_ast, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>* _88214_generics, jule::Slice<jule::Ptr<_215eba403_TypeKind>>* _88250_ignored) {
	jule::Ptr<_215ec8c6e_typeChecker> _88317_tc = jule::new_ptr<_215ec8c6e_typeChecker>(_215ec8c6e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_88214_generics)), ._field_ignoredGenerics=(&((*(_88250_ignored)))), });;
	return _215ed0eda_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _215e2dad6_buildFnNonGenericTypeKinds(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcea10_FnIns>* _89351_f, jule::Slice<jule::Ptr<_215eba403_TypeKind>>* _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _89517_generics = nullptr;;
	if (_215d9c5b0_IsMethod((*(_89351_f)).get()._field_Decl.ptr())) {
		_89517_generics=jule::append((*(_89351_f)).get()._field_Decl.get()._field_Generics,(*(_89351_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=(*(_89351_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_89351_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe137e9:;
		if (it != expr_end) {
			jule::Ptr<_215dcdb41_ParamIns> _90221_p = *it;
			{
				if ((!(_215d8baee_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_215e2d6eb_buildNonGenericTypeKind(_self_, &(_90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1ebe137e9:;
			++it;
			goto _iter_begin_1ebe137e9;
		}
		_iter_end_1ebe137e9:;
	};
	if ((!(_215d7ce64_IsVoid((*(_89351_f)).get()._field_Decl.ptr())))) {
		(*(_89351_f)).get()._field_Result=_215e2d6eb_buildNonGenericTypeKind(_self_, &((*(_89351_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
		__jule_func_result=(__jule_func_result && ((*(_89351_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_215dcea10_FnIns> _215e2de05_getTraitCheckFnKind(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcd24a_Fn>* _91544_f) {
	if (((*(_91544_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_91544_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_215dcea10_FnIns> _91917_ins = _215d95146_instanceForce((*(_91544_f)));;
	jule::Ptr<_215ec8c6e_typeChecker> _92117_tc = jule::new_ptr<_215ec8c6e_typeChecker>(_215ec8c6e_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_215ed6375_Lookup>(_self_, 3), });;
	{
		auto expr = &(_91917_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe18018:;
		if (it != expr_end) {
			jule::Ptr<_215dcdb41_ParamIns> _92621_p = *it;
			{
				if ((!(_215d8baee_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_215ed0eda_checkDecl(_92117_tc.ptr(), &(_92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1ebe18018:;
			++it;
			goto _iter_begin_1ebe18018;
		}
		_iter_end_1ebe18018:;
	};
	if ((!(_215d7ce64_IsVoid((*(_91544_f)).ptr())))) {
		_91917_ins.get()._field_Result=_215ed0eda_checkDecl(_92117_tc.ptr(), &((*(_91544_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _91917_ins;;
}



inline jule::Bool _215e2e356_checkConstraintsFn(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcea10_FnIns>* _93843_f, jule::Ptr<_22e0aa1de_Token>* _93859_et, jule::Ptr<_215dcea10_FnIns> _93875_exist) {
	jule::Ptr<_215de498c_constraintChecker> _93917_cc = _215e2ace2_constraintChecker(_self_);;
	_93917_cc.get()._field_et=(*(_93859_et));
	_93917_cc.get()._field_fi=(*(_93843_f));
	if ((_93875_exist != nullptr)) {
		{
			auto expr = &(_93875_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebe1b318:;
			if (it != expr_end) {
				jule::I64 _94318_i = it - expr->begin();
				jule::Ptr<_215eb8bc6_InsGeneric> _94325_g = *it;
				{
					(*(_93843_f)).get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1ebe1b318:;
				++it;
				_94318_i++;
				goto _iter_begin_1ebe1b318;
			}
			_iter_end_1ebe1b318:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _215de586c_check(_93917_cc);;
}



inline jule::Bool _215e2e7a7_checkConstraintsStruct(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _95247_s, jule::Ptr<_22e0aa1de_Token>* _95267_et, jule::Ptr<_215dc71ab_StructIns> _95283_exist) {
	jule::Ptr<_215de498c_constraintChecker> _95317_cc = _215e2ace2_constraintChecker(_self_);;
	_95317_cc.get()._field_et=(*(_95267_et));
	_95317_cc.get()._field_si=(*(_95247_s));
	if ((_95283_exist != nullptr)) {
		{
			auto expr = &(_95283_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebe1dc77:;
			if (it != expr_end) {
				jule::I64 _95718_i = it - expr->begin();
				jule::Ptr<_215eb8bc6_InsGeneric> _95725_g = *it;
				{
					(*(_95247_s)).get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1ebe1dc77:;
				++it;
				_95718_i++;
				goto _iter_begin_1ebe1dc77;
			}
			_iter_end_1ebe1dc77:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _215de586c_check(_95317_cc);;
}



inline jule::Bool _215e2eb5e_fnEnvironment(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcea10_FnIns>* _96938_f, jule::Fn<jule::Bool(jule::Ptr<_215e2327e_Sema>*,jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*)> _96949_algo) {
	jule::Ptr<_215e2327e_Sema> _97017_sema = (*(_96938_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_215e89647_SymbolTable> _97117_old = (*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_215e25a78_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_215e89647_SymbolTable> _97317_file = _215e22888_findFile(&((*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_96938_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_97317_file != nullptr)) {
		_215e25a78_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = (*(_96938_f)).get()._field_Generics.len();;
	if ((((*(_96938_f)).get()._field_Decl != nullptr) && ((*(_96938_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=(*(_96938_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>::alloc(0LL, _97817_size);;
	_215e22536_appendGenericTypeAliases(&(_98317_generics), _96938_f);
	jule::Bool _98613_ok = _96949_algo(&(_97017_sema), &(_98317_generics));;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _215e2edd4_checkFnParamKind(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcdb41_ParamIns>* _99641_p) {
	(*(_99641_p)).get()._field_Kind.get()._field_Variadic=(*(_99641_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_99641_p)).get()._field_Decl.get()._field_Reference && (!(_215ed2d00_isValidForRef(&((*(_99641_p)).get()._field_Kind)))))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_99641_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_99641_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _215e301e2_reloadFnInsTypes(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcea10_FnIns> _100340_f) {
	if ((_215dd0d96_IsBuiltin(_100340_f.ptr()) || _215dd110a_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _215e2eb5e_fnEnvironment(_self_, &(_100340_f), jule::Fn<jule::Bool(jule::Ptr<_215e2327e_Sema>*,jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>*)>([=](jule::Ptr<_215e2327e_Sema>* _100743_sema, jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>* _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto expr = &(_100340_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebe29b51:;
			if (it != expr_end) {
				jule::Ptr<_215dcdb41_ParamIns> _100925_p = *it;
				{
					if (_215d8baee_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_215d8d46e_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec38d4_Sptr>(_215ec38d4_Sptr{._field_Elem=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_215e2b5ea_buildTypeWithGenerics((*(_100743_sema)), &(_100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_215e2edd4_checkFnParamKind(_self_, &(_100925_p));
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1ebe29b51:;
				++it;
				goto _iter_begin_1ebe29b51;
			}
			_iter_end_1ebe29b51:;
		};
		if ((!(_215d7ce64_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_215e2b5ea_buildTypeWithGenerics((*(_100743_sema)), &(_100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _215e30665_checkRefValidityForInitExpr(jule::Ptr<_215e2327e_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_215e8e471_Data>* _103967_d, jule::Ptr<_22e0aa1de_Token>* _103982_errorToken) {
	{
		auto &_match_expr{ (*(_103967_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ebe30250:;
			{
				goto _match_end_1ebe2e590;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ebe302b6:;
			{
				jule::Ptr<_215dc93bc_TraitSubIdentExprModel> _104421_model = (*(_103967_d)).get()._field_Model.cast_ptr<_215dc93bc_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_215e213c0_isValidModelForRef(&(_104421_model.get()._field_Expr))))) {
					_215e25e41_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ebe30096:;
			{
				jule::Ptr<_215dc97da_StructSubIdentExprModel> _105021_model = (*(_103967_d)).get()._field_Model.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_215e213c0_isValidModelForRef(&(_105021_model.get()._field_Expr.get()._field_Model))))) {
					_215e25e41_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1ebe3010c:;
			{
				_215e25e41_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ebe30173:;
			{
				jule::Ptr<_215dc7ab3_UnaryExprModel> _106021_unary = (*(_103967_d)).get()._field_Model.cast_ptr<_215dc7ab3_UnaryExprModel>(&__jule_any_type74);;
				if (_106021_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_215e213c0_isValidModelForRef(&((*(_103967_d)).get()._field_Model))))) {
						_215e25e41_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1ebe2e590;
				};
				goto _case_begin_1ebe2e738;
			}
		}
		else {
			_case_begin_1ebe2e738:;
			{
				_215e25e41_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ebe2e590:;
	};
	if ((_103947_leftMut && (!((*(_103967_d)).get()._field_Mutable)))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _215e30c3c_checkValidityForInitExpr(jule::Ptr<_215e2327e_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_215eba403_TypeKind>* _108110_leftKind, jule::Ptr<_215e8e471_Data>* _108136_d, jule::Ptr<_22e0aa1de_Token>* _108151_errorToken) {
	if (((_108044_leftMut && (!((*(_108136_d)).get()._field_Mutable))) && _215ebba75_Mutable((*(_108136_d)).get()._field_Kind.ptr()))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_108151_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_108136_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_215e30665_checkRefValidityForInitExpr(_self_, _108044_leftMut, _108136_d, _108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_215e79d63_assignTypeChecker> _109117_atc = jule::new_ptr<_215e79d63_assignTypeChecker>(_215e79d63_assignTypeChecker{._field_s=_self_, ._field_d=(*(_108136_d)), ._field_errorToken=(*(_108151_errorToken))});;
	return _215e7a539_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _215e31105_checkTypeAliasDeclKind(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215eb9710_TypeAlias>* _109947_ta, jule::Trait<_215ed6375_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215e89647_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_215e25a78_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if (((*(_109947_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_215e89647_SymbolTable> _110521_file = _215e22888_findFile(&(_self_.get()._field_files), &((*(_109947_ta)).get()._field_Token.get()._field_File));;
		if ((_110521_file != nullptr)) {
			_215e25a78_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_215e2aa7d_checkTypeWithRefers(_self_, &((*(_109947_ta)).get()._field_Kind), _109967_l, nullptr, jule::new_ptr<_215ec7d8e_referencer>(_215ec7d8e_referencer{._field_ident=(*(_109947_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_109947_ta)), &__jule_any_type67), ._field_refs=(&((*(_109947_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_215ebd4a0_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _215ebd4a0_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_109947_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _215e31424_checkTypeAliasDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215eb9710_TypeAlias>* _112243_ta, jule::Trait<_215ed6375_Lookup> _112263_l) {
	if (_22e0ac983_IsIgnoreIdent((*(_112243_ta)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_112243_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_215e31105_checkTypeAliasDeclKind(_self_, _112243_ta, _112263_l);
}



inline void _215e31699_checkTypeAliasDeclDup(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215eb9710_TypeAlias>* _113046_ta) {
	if (_22e0ac983_IsIgnoreIdent((*(_113046_ta)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_113046_ta)))), (*(_113046_ta)).get()._field_Ident, (*(_113046_ta)).get()._field_CppLinked)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_113046_ta)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_215e31105_checkTypeAliasDeclKind(_self_, _113046_ta, jule::Trait<_215ed6375_Lookup>(_self_, 3));
}



inline jule::Bool _215e3190d_checkTypeAliasDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe41ad0:;
		if (it != expr_end) {
			jule::Ptr<_215eb9710_TypeAlias> _114321_ta = *it;
			{
				_215e31699_checkTypeAliasDeclDup(_self_, &(_114321_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebe41ad0:;
			++it;
			goto _iter_begin_1ebe41ad0;
		}
		_iter_end_1ebe41ad0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ebe668c4_checkEnumItemsDup(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215de036c_EnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe67b39:;
		if (it != expr_end) {
			jule::Ptr<_215de036c_EnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ebe67b39;
				} else if (_22e0ac983_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_215e25e41_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ebe688b5:;
						if (it != expr_end) {
							jule::Ptr<_215de036c_EnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1ebe688b5;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_215e25e41_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ebe688b5;
								};
							}
							_iter_next_1ebe688b5:;
							++it;
							goto _iter_begin_1ebe688b5;
						}
						_iter_end_1ebe688b5:;
					};
				};
			}
			_iter_next_1ebe67b39:;
			++it;
			goto _iter_begin_1ebe67b39;
		}
		_iter_end_1ebe67b39:;
	};
}

inline void _1ebe71bba_checkEnumItemsDup(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe72e0d:;
		if (it != expr_end) {
			jule::Ptr<_215de1d96_TypeEnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ebe72e0d;
				} else if (_22e0ac983_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_215e25e41_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ebe73b89:;
						if (it != expr_end) {
							jule::Ptr<_215de1d96_TypeEnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1ebe73b89;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_215e25e41_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ebe73b89;
								};
							}
							_iter_next_1ebe73b89:;
							++it;
							goto _iter_begin_1ebe73b89;
						}
						_iter_end_1ebe73b89:;
					};
				};
			}
			_iter_next_1ebe72e0d:;
			++it;
			goto _iter_begin_1ebe72e0d;
		}
		_iter_end_1ebe72e0d:;
	};
}



inline void _215e31e08_checkEnumItemsStr(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de0d62_Enum>* _117442_e) {
	jule::Ptr<_215e90ede_Eval> _117517_eval = _215e2c82c_eval(_self_, jule::Trait<_215ed6375_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_117442_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe4361a:;
		if (it != expr_end) {
			jule::Ptr<_215de036c_EnumItem> _117621_item = *it;
			{
				if (_215de0757_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Data=jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Constant=static__21470392e_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_215e8e471_Data> _118525_d = _215eab911_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1ebe4361a;
					};
					if ((!(_215e8ed34_IsConst(_118525_d.ptr())))) {
						_215e25e41_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_215e2cd27_checkAssignType(_self_, false, &((*(_117442_e)).get()._field_Kind.get()._field_Kind), &(_118525_d), _117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1ebe4361a:;
			++it;
			goto _iter_begin_1ebe4361a;
		}
		_iter_end_1ebe4361a:;
	};
}



inline void _1ebe4bc2d_checkEnumItemInt(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215e90ede_Eval>* _120046_eval, jule::Ptr<_215de0d62_Enum>* _120064_e, jule::Ptr<_215ec0150_Prim>* _120075_prim, jule::Ptr<_215de036c_EnumItem>* _120093_item, jule::U64* _1200115_n) {
	if (_215de0757_AutoExpr((*(_120093_item)).ptr())) {
		(*(_120093_item)).get()._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Data=jule::new_ptr<_215e8e471_Data>()});
		{
			
{
				_case_begin_1ebe4e824:;
				{
					(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2147036ba_NewU64((*(_1200115_n)));
				}
			}
			_match_end_1ebe4e1c5:;
		};
		(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
	} else {
		jule::Ptr<_215e8e471_Data> _121521_d = _215eab911_evalExpr((*(_120046_eval)), (*(_120093_item)).get()._field_Value.get()._field_Expr);;
		if ((_121521_d == nullptr)) {
			return;;
		};
		if ((!(_215e8ed34_IsConst(_121521_d.ptr())))) {
			_215e25e41_pushErr(_self_.ptr(), (*(_120093_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_215e2cd27_checkAssignType(_self_, false, &((*(_120064_e)).get()._field_Kind.get()._field_Kind), &(_121521_d), (*(_120093_item)).get()._field_Token);
		(*(_120093_item)).get()._field_Value.get()._field_Data=_121521_d;
		{
			
{
				_case_begin_1ebe52bce:;
				{
					(*(_1200115_n))=static_cast<jule::U64>(_2147041c1_ReadU64((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ebe5296a:;
		};
	};
}

inline void _1ebe59b92_checkEnumItemInt(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215e90ede_Eval>* _120046_eval, jule::Ptr<_215de0d62_Enum>* _120064_e, jule::Ptr<_215ec0150_Prim>* _120075_prim, jule::Ptr<_215de036c_EnumItem>* _120093_item, jule::I64* _1200115_n) {
	if (_215de0757_AutoExpr((*(_120093_item)).ptr())) {
		(*(_120093_item)).get()._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Data=jule::new_ptr<_215e8e471_Data>()});
		{
			
{
				_case_begin_1ebe5c69a:;
				{
					(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__214703588_NewI64((*(_1200115_n)));
				}
			}
			_match_end_1ebe5c0c3:;
		};
		(*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
	} else {
		jule::Ptr<_215e8e471_Data> _121521_d = _215eab911_evalExpr((*(_120046_eval)), (*(_120093_item)).get()._field_Value.get()._field_Expr);;
		if ((_121521_d == nullptr)) {
			return;;
		};
		if ((!(_215e8ed34_IsConst(_121521_d.ptr())))) {
			_215e25e41_pushErr(_self_.ptr(), (*(_120093_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_215e2cd27_checkAssignType(_self_, false, &((*(_120064_e)).get()._field_Kind.get()._field_Kind), &(_121521_d), (*(_120093_item)).get()._field_Token);
		(*(_120093_item)).get()._field_Value.get()._field_Data=_121521_d;
		{
			
{
				_case_begin_1ebe60c20:;
				{
					(*(_1200115_n))=static_cast<jule::I64>(_21470408e_ReadI64((*(_120093_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ebe60a33:;
		};
	};
}



inline void _1ebe4829b_checkEnumItemsInt1(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215ec0150_Prim>* _123544_prim, jule::Ptr<_215de0d62_Enum>* _123562_e) {
	jule::U64 _123617_max = 0LLU;;
	{
		
{
			_case_begin_1ebe4a08e:;
			{
				_123617_max=static_cast<jule::U64>(_214700673_MaxU(_215ec04b3_Str((*(_123544_prim)).ptr())));
			}
		}
		_match_end_1ebe49d08:;
	};
	jule::Ptr<_215e90ede_Eval> _124617_eval = _215e2c82c_eval(_self_, jule::Trait<_215ed6375_Lookup>(_self_, 3));;
	jule::U64 _124717_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_215de036c_EnumItem> _124817_first = (*(_123562_e)).get()._field_Items[0LL];;
	_1ebe4bc2d_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_124817_first), &(_124717_n));
	if ((_124817_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ebe53471:;
				{
					_124717_n=static_cast<jule::U64>(_2147047cb_AsU64(_124817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ebe4c05d:;
		};
	};
	{
		auto expr = (*(_123562_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ebe52d99:;
		if (it != expr_end) {
			jule::Ptr<_215de036c_EnumItem> _126021_item = *it;
			{
				if (((_215de0757_AutoExpr(_126021_item.ptr()) && (_124717_n > 0LLU)) && ((_123617_max - _124717_n) <= 0LLU))) {
					_215e25e41_pushErr(_self_.ptr(), _126021_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ebe52d99;
				};
				(_124717_n)++;
				_1ebe4bc2d_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_126021_item), &(_124717_n));
			}
			_iter_next_1ebe52d99:;
			++it;
			goto _iter_begin_1ebe52d99;
		}
		_iter_end_1ebe52d99:;
	};
}

inline void _1ebe53e55_checkEnumItemsInt1(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215ec0150_Prim>* _123544_prim, jule::Ptr<_215de0d62_Enum>* _123562_e) {
	jule::I64 _123617_max = 0LL;;
	{
		
{
			_case_begin_1ebe57c7d:;
			{
				_123617_max=static_cast<jule::I64>(_214700541_MaxI(_215ec04b3_Str((*(_123544_prim)).ptr())));
			}
		}
		_match_end_1ebe57aa2:;
	};
	jule::Ptr<_215e90ede_Eval> _124617_eval = _215e2c82c_eval(_self_, jule::Trait<_215ed6375_Lookup>(_self_, 3));;
	jule::I64 _124717_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_215de036c_EnumItem> _124817_first = (*(_123562_e)).get()._field_Items[0LL];;
	_1ebe59b92_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_124817_first), &(_124717_n));
	if ((_124817_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ebe5bd5e:;
				{
					_124717_n=static_cast<jule::I64>(_214704699_AsI64(_124817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ebe59ec2:;
		};
	};
	{
		auto expr = (*(_123562_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ebe6202e:;
		if (it != expr_end) {
			jule::Ptr<_215de036c_EnumItem> _126021_item = *it;
			{
				if (((_215de0757_AutoExpr(_126021_item.ptr()) && (_124717_n > 0LL)) && ((_123617_max - _124717_n) <= 0LL))) {
					_215e25e41_pushErr(_self_.ptr(), _126021_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ebe6202e;
				};
				(_124717_n)++;
				_1ebe59b92_checkEnumItemInt(_self_, &(_124617_eval), _123562_e, _123544_prim, &(_126021_item), &(_124717_n));
			}
			_iter_next_1ebe6202e:;
			++it;
			goto _iter_begin_1ebe6202e;
		}
		_iter_end_1ebe6202e:;
	};
}



inline void _215e329a8_checkEnumItemsInt(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de0d62_Enum>* _127042_e) {
	jule::Ptr<_215ec0150_Prim> _127113_prim = _215ebc78a_Prim((*(_127042_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_214702b5e_IsSigInt(_127113_prim.get()._field_Kind)) {
			_case_begin_1ebe558c4:;
			{
				_1ebe53e55_checkEnumItemsInt1(_self_, &(_127113_prim), _127042_e);
			}
		}
		else {
			_case_begin_1ebe47a4d:;
			{
				_1ebe4829b_checkEnumItemsInt1(_self_, &(_127113_prim), _127042_e);
			}
		}
		_match_end_1ebe479e8:;
	};
}



inline void _215e32c2d_checkEnumDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de0d62_Enum>* _128038_e) {
	if (_22e0ac983_IsIgnoreIdent((*(_128038_e)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_128038_e)))), (*(_128038_e)).get()._field_Ident, false)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_128038_e)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_128038_e)).get()._field_Items.len() == 0LL)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_128038_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ebe668c4_checkEnumItemsDup(_self_.ptr(), (*(_128038_e)).get()._field_Items);
	if (((*(_128038_e)).get()._field_Kind != nullptr)) {
		if ((!(_215e2b199_checkType(_self_, &((*(_128038_e)).get()._field_Kind), jule::Trait<_215ed6375_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_128038_e)).get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_215ec0150_Prim> _130817_t = _215ebc78a_Prim((*(_128038_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_130817_t == nullptr)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_215ec3384_IsStr(_130817_t.ptr())) {
			_case_begin_1ebe6cb50:;
			{
				_215e31e08_checkEnumItemsStr(_self_, _128038_e);
			}
		}
		else if (_214702dc3_IsInt(_215ec04b3_Str(_130817_t.ptr()))) {
			_case_begin_1ebe6c853:;
			{
				_215e329a8_checkEnumItemsInt(_self_, _128038_e);
			}
		}
		else {
			_case_begin_1ebe6bd80:;
			{
				_215e25e41_pushErr(_self_.ptr(), (*(_128038_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ebe6bd2a:;
	};
}



inline void _215e32ea3_checkTypeEnumDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de245c_TypeEnum>* _132542_e) {
	if (_22e0ac983_IsIgnoreIdent((*(_132542_e)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_132542_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_132542_e)))), (*(_132542_e)).get()._field_Ident, false)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_132542_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_132542_e)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_132542_e)).get()._field_Items.len() == 0LL)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_132542_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_132542_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ebe71bba_checkEnumItemsDup(_self_.ptr(), (*(_132542_e)).get()._field_Items);
	{
		auto expr = &((*(_132542_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe6e338:;
		if (it != expr_end) {
			jule::Ptr<_215de1d96_TypeEnumItem> _133921_item = *it;
			{
				if ((_133921_item.get()._field_Kind == nullptr)) {
					_215e25e41_pushErr(_self_.ptr(), _133921_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ebe6e338;
				};
				jule::Bool _134417_ok = _215e2b199_checkType(_self_, &(_133921_item.get()._field_Kind), jule::Trait<_215ed6375_Lookup>(_self_, 3));;
				if ((!(_134417_ok))) {
					goto _iter_next_1ebe6e338;
				};
				jule::Ptr<_215ec0150_Prim> _134817_p = _215ebc78a_Prim(_133921_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_134817_p != nullptr) && _215ec35e8_IsAny(_134817_p.ptr()))) {
					_215e25e41_pushErr(_self_.ptr(), _133921_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ebe6e338:;
			++it;
			goto _iter_begin_1ebe6e338;
		}
		_iter_end_1ebe6e338:;
	};
	if (((*(_132542_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_215de1d96_TypeEnumItem> _135421_item = (*(_132542_e)).get()._field_Items[0LL];;
		_215eba403_TypeKind _135517_tk = _215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>((*(_132542_e)), 4)};;
		if (((_135421_item.get()._field_Kind.get()._field_Kind != nullptr) && _215ebab0c_Equal(_135421_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_215eba403_TypeKind>)((&(_135517_tk))))))) {
			_215e25e41_pushErr(_self_.ptr(), _135421_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_215de278c_Str((*(_132542_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _215e33217_checkEnumDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe7ae05:;
		if (it != expr_end) {
			jule::Ptr<_215de0d62_Enum> _136621_e = *it;
			{
				_215e32c2d_checkEnumDecl(_self_, &(_136621_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebe7ae05:;
			++it;
			goto _iter_begin_1ebe7ae05;
		}
		_iter_end_1ebe7ae05:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e3347b_checkTypeEnumDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe7c324:;
		if (it != expr_end) {
			jule::Ptr<_215de245c_TypeEnum> _137821_e = *it;
			{
				_215e32ea3_checkTypeEnumDecl(_self_, &(_137821_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebe7c324:;
			++it;
			goto _iter_begin_1ebe7c324;
		}
		_iter_end_1ebe7c324:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e33789_checkDeclGenerics(_215e2327e_Sema* _self_, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>* _138837_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _138837_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe7d90d:;
		if (it != expr_end) {
			jule::I64 _139013_i = it - expr->begin();
			jule::Ptr<_215db78d8_GenericDecl> *_139016_g = it;
			{
				if (_22e0ac983_IsIgnoreIdent((*(_139016_g)).get()._field_Ident)) {
					_215e25e41_pushErr(_self_, (*(_139016_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ebe7d90d;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _138837_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe8013a:;
					if (it != expr_end) {
						jule::I64 _139917_j = it - expr->begin();
						jule::Ptr<_215db78d8_GenericDecl> *_139920_ct = it;
						{
							{
								
								if ((_139917_j >= _139013_i)) {
									_case_begin_1ebe8105e:;
									{
										goto _iter_end_1ebe8013a;
									}
								}
								else if (((*(_139016_g)).get()._field_Ident == (*(_139920_ct)).get()._field_Ident)) {
									_case_begin_1ebe810d6:;
									{
										_215e25e41_pushErr(_self_, (*(_139016_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_139016_g)).get()._field_Ident, &__jule_any_type5)}));
										_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ebe8013a;
									}
								}
								_match_end_1ebe80e4e:;
							};
						}
						_iter_next_1ebe8013a:;
						++it;
						_139917_j++;
						goto _iter_begin_1ebe8013a;
					}
					_iter_end_1ebe8013a:;
				};
			}
			_iter_next_1ebe7d90d:;
			++it;
			_139013_i++;
			goto _iter_begin_1ebe7d90d;
		}
		_iter_end_1ebe7d90d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _215e33a97_checkFnDeclParamsDup(_215e2327e_Sema* _self_, jule::Ptr<_215dcd24a_Fn>* _141540_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_141540_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe8336e:;
		if (it != expr_end) {
			jule::I64 _141813_i = it - expr->begin();
			jule::Ptr<_215dcd05d_Param> *_141816_p = it;
			{
				{
					auto expr = &((*(_141540_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe83eeb:;
					if (it != expr_end) {
						jule::Ptr<_215db78d8_GenericDecl> *_142020_g = it;
						{
							if (((*(_141816_p)).get()._field_Ident == (*(_142020_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_215e25e41_pushErr(_self_, (*(_141816_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141816_p)).get()._field_Ident, &__jule_any_type5)}));
								_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ebe8336e;
							};
						}
						_iter_next_1ebe83eeb:;
						++it;
						goto _iter_begin_1ebe83eeb;
					}
					_iter_end_1ebe83eeb:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_141540_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe849e1:;
					if (it != expr_end) {
						jule::I64 _143017_j = it - expr->begin();
						jule::Ptr<_215dcd05d_Param> *_143020_jp = it;
						{
							{
								
								if ((_143017_j >= _141813_i)) {
									_case_begin_1ebe86619:;
									{
										goto _iter_end_1ebe849e1;
									}
								}
								else if (_22e0ac983_IsIgnoreIdent((*(_141816_p)).get()._field_Ident) || _22e0ac983_IsIgnoreIdent((*(_143020_jp)).get()._field_Ident) || _22e0acc2a_IsAnonIdent((*(_141816_p)).get()._field_Ident) || _22e0acc2a_IsAnonIdent((*(_143020_jp)).get()._field_Ident)) {
									_case_begin_1ebe86691:;
									{
										goto _iter_end_1ebe849e1;
									}
								}
								else if (((*(_141816_p)).get()._field_Ident == (*(_143020_jp)).get()._field_Ident)) {
									_case_begin_1ebe86718:;
									{
										__jule_func_result=false;
										_215e25e41_pushErr(_self_, (*(_141816_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141816_p)).get()._field_Ident, &__jule_any_type5)}));
										_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ebe8336e;
									}
								}
								_match_end_1ebe864e8:;
							};
						}
						_iter_next_1ebe849e1:;
						++it;
						_143017_j++;
						goto _iter_begin_1ebe849e1;
					}
					_iter_end_1ebe849e1:;
				};
			}
			_iter_next_1ebe8336e:;
			++it;
			_141813_i++;
			goto _iter_begin_1ebe8336e;
		}
		_iter_end_1ebe8336e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _215e33da5_checkFnDeclResultDup(_215e2327e_Sema* _self_, jule::Ptr<_215dcd24a_Fn>* _145240_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_215d7ce64_IsVoid((*(_145240_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_145240_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe89672:;
		if (it != expr_end) {
			jule::I64 _145913_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> *_145916_v = it;
			{
				if ((_22e0ac983_IsIgnoreIdent((*(_145916_v)).get()._field_Kind) || _22e0acc2a_IsAnonIdent((*(_145916_v)).get()._field_Kind))) {
					goto _iter_next_1ebe89672;
				};
				{
					auto expr = &((*(_145240_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe8abb2:;
					if (it != expr_end) {
						jule::Ptr<_215db78d8_GenericDecl> *_146420_g = it;
						{
							if (((*(_145916_v)).get()._field_Kind == (*(_146420_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ebe8abb2:;
						++it;
						goto _iter_begin_1ebe8abb2;
					}
					_iter_end_1ebe8abb2:;
				};
				{
					auto expr = &((*(_145240_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe8bdc2:;
					if (it != expr_end) {
						jule::Ptr<_215dcd05d_Param> *_147020_p = it;
						{
							if (((*(_145916_v)).get()._field_Kind == (*(_147020_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1ebe8bdc2:;
						++it;
						goto _iter_begin_1ebe8bdc2;
					}
					_iter_end_1ebe8bdc2:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_145240_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe8d0d2:;
					if (it != expr_end) {
						jule::I64 _147817_j = it - expr->begin();
						jule::Ptr<_22e0aa1de_Token> *_147820_jv = it;
						{
							{
								
								if ((_147817_j >= _145913_i)) {
									_case_begin_1ebe8dcd6:;
									{
										goto _iter_end_1ebe8d0d2;
									}
								}
								else if (((*(_147820_jv)).get()._field_Kind == (*(_145916_v)).get()._field_Kind)) {
									_case_begin_1ebe8dd5d:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1ebe8dbc6:;
							};
						}
						_iter_next_1ebe8d0d2:;
						++it;
						_147817_j++;
						goto _iter_begin_1ebe8d0d2;
					}
					_iter_end_1ebe8d0d2:;
				};
				goto _iter_next_1ebe89672;
				_julec_label_exist:;
				_215e25e41_pushErr(_self_, (*(_145916_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_145916_v)).get()._field_Kind, &__jule_any_type5)}));
				_215e26260_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ebe89672:;
			++it;
			_145913_i++;
			goto _iter_begin_1ebe89672;
		}
		_iter_end_1ebe89672:;
	};
	return __jule_func_result;;
}



inline void _215e3412a_checkFnDeclPrototype(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcd24a_Fn>* _149945_f) {
	if (((*(_149945_f)).get()._field_Exceptional && (*(_149945_f)).get()._field_CppLinked)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_149945_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_149945_f)).get()._field_Exceptional) {
		if (_215d938a3_IsEntryPoint((*(_149945_f)).ptr())) {
			_215e25e41_pushErr(_self_.ptr(), (*(_149945_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_215d7a99a_IsInit((*(_149945_f)).ptr())) {
			_215e25e41_pushErr(_self_.ptr(), (*(_149945_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_215e33789_checkDeclGenerics(_self_.ptr(), &((*(_149945_f)).get()._field_Generics))))) {
			_case_begin_1ebe91e3d:;
		}
		else if ((!(_215e33a97_checkFnDeclParamsDup(_self_.ptr(), _149945_f)))) {
			_case_begin_1ebe91ea4:;
		}
		else if ((!(_215e33da5_checkFnDeclResultDup(_self_.ptr(), _149945_f)))) {
			_case_begin_1ebe932d5:;
		}
		_match_end_1ebe91d2d:;
	};
}



inline void _215e343a0_checkTraitDeclMethod(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcd24a_Fn>* _152045_f) {
	if (_22e0ac983_IsIgnoreIdent((*(_152045_f)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_152045_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	(*(_152045_f)).get()._field_sema=_self_;
	_215e3412a_checkFnDeclPrototype(_self_, _152045_f);
	jule::Ptr<_215dcea10_FnIns> _152717_ins = _215dcd4ae_instance((*(_152045_f)));;
	_215e301e2_reloadFnInsTypes(_self_, _152717_ins);
	_152717_ins.get()._field_reloaded=true;
	_215dcd789_appendInstance((*(_152045_f)).ptr(), &(_152717_ins));
}



inline void _215e34625_checkTraitDeclMethods(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dddc1c_Trait>* _153346_t) {
	{
		auto expr = &((*(_153346_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe9667e:;
		if (it != expr_end) {
			jule::I64 _153414_i = it - expr->begin();
			jule::Ptr<_215dcd24a_Fn> _153421_f = *it;
			{
				_215e343a0_checkTraitDeclMethod(_self_, &(_153421_f));
				(*(_153346_t)).get()._field_Mutable=((*(_153346_t)).get()._field_Mutable || _153421_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_153346_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebe9863c:;
					if (it != expr_end) {
						jule::I64 _154517_j = it - expr->begin();
						jule::Ptr<_215dcd24a_Fn> _154520_jf = *it;
						{
							{
								
								if ((_154517_j >= _153414_i)) {
									_case_begin_1ebe993b8:;
									{
										goto _iter_end_1ebe9863c;
									}
								}
								else if ((_153421_f.get()._field_Ident == _154520_jf.get()._field_Ident)) {
									_case_begin_1ebe99440:;
									{
										_215e25e41_pushErr(_self_.ptr(), _153421_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_153421_f.get()._field_Ident, &__jule_any_type5)}));
										_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ebe9863c;
									}
								}
								_match_end_1ebe992a8:;
							};
						}
						_iter_next_1ebe9863c:;
						++it;
						_154517_j++;
						goto _iter_begin_1ebe9863c;
					}
					_iter_end_1ebe9863c:;
				};
			}
			_iter_next_1ebe9667e:;
			++it;
			_153414_i++;
			goto _iter_begin_1ebe9667e;
		}
		_iter_end_1ebe9667e:;
	};
}



inline void _215e3489a_checkTraitDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dddc1c_Trait>* _156439_t) {
	if (_22e0ac983_IsIgnoreIdent((*(_156439_t)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_156439_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_156439_t)))), (*(_156439_t)).get()._field_Ident, false)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_156439_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_156439_t)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_215e34625_checkTraitDeclMethods(_self_, _156439_t);
}



inline jule::Bool _215e34b0e_checkTraitDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe9d246:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> _157721_t = *it;
			{
				_215e3489a_checkTraitDecl(_self_, &(_157721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebe9d246:;
			++it;
			goto _iter_begin_1ebe9d246;
		}
		_iter_end_1ebe9d246:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e34eb6_checkTraitImplMethods(_215e2327e_Sema* _self_, jule::Ptr<_215dddc1c_Trait>* _158745_base, jule::Ptr<_215de68c3_Impl>* _158760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_158760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebe9ebe8:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> *_158916_f = it;
			{
				if ((_215ddea97_FindMethod((*(_158745_base)).ptr(), (*(_158916_f)).get()._field_Ident) == nullptr)) {
					_215e25e41_pushErr(_self_, (*(_158916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_158745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_158916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ebe9ebe8:;
			++it;
			goto _iter_begin_1ebe9ebe8;
		}
		_iter_end_1ebe9ebe8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _215e3536d_implToStruct(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _159837_dest, jule::Ptr<_215de68c3_Impl>* _159857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_159857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebea1e3c:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _160221_f = *it;
			{
				if (((_215d8b219_FindMethod((*(_159837_dest)).ptr(), _160221_f.get()._field_Ident, _160221_f.get()._field_Statically) != nullptr) || (_215d8ca45_FindField((*(_159837_dest)).ptr(), _160221_f.get()._field_Ident) != nullptr))) {
					_215e25e41_pushErr(_self_.ptr(), _160221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_159837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_160221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ebea1e3c;
				};
				if ((((*(_159837_dest)).get()._field_Generics.len() > 0LL) && (_160221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_160221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ebea444a:;
						if (it != expr_end) {
							jule::Ptr<_215db78d8_GenericDecl> _161024_fg = *it;
							{
								{
									auto expr = &((*(_159837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ebea4c31:;
									if (it != expr_end) {
										jule::Ptr<_215db78d8_GenericDecl> _161128_dg = *it;
										{
											if ((_161024_fg.get()._field_Ident == _161128_dg.get()._field_Ident)) {
												_215e25e41_pushErr(_self_.ptr(), _161024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ebea4c31:;
										++it;
										goto _iter_begin_1ebea4c31;
									}
									_iter_end_1ebea4c31:;
								};
							}
							_iter_next_1ebea444a:;
							++it;
							goto _iter_begin_1ebea444a;
						}
						_iter_end_1ebea444a:;
					};
				};
				_215e26d87_checkDirectives(_self_, &(_160221_f.get()._field_Directives), jule::Any(_160221_f, &__jule_any_type65));
				_160221_f.get()._field_sema=_self_;
				_160221_f.get()._field_Owner=(*(_159837_dest));
				(*(_159837_dest)).get()._field_Methods = jule::alloc_for_append((*(_159837_dest)).get()._field_Methods,1);(*(_159837_dest)).get()._field_Methods.__push(_160221_f);;
			}
			_iter_next_1ebea1e3c:;
			++it;
			goto _iter_begin_1ebea1e3c;
		}
		_iter_end_1ebea1e3c:;
	};
	{
		auto expr = &((*(_159857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebea74a3:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _162721_v = *it;
			{
				;
				if (((_215d8b219_FindMethod((*(_159837_dest)).ptr(), _162721_v.get()._field_Ident, true) != nullptr) || (_215d8a669_FindStatic((*(_159837_dest)).ptr(), _162721_v.get()._field_Ident) != nullptr))) {
					_215e25e41_pushErr(_self_.ptr(), _162721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_159837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_162721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ebea74a3;
				};
				(*(_159837_dest)).get()._field_Statics = jule::alloc_for_append((*(_159837_dest)).get()._field_Statics,1);(*(_159837_dest)).get()._field_Statics.__push(_162721_v);;
			}
			_iter_next_1ebea74a3:;
			++it;
			goto _iter_begin_1ebea74a3;
		}
		_iter_end_1ebea74a3:;
	};
	return __jule_func_result;;
}



inline void _215e355e3_implTrait(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de68c3_Impl>* _164034_decl) {
	jule::Ptr<_215eba403_TypeKind> _164117_base_t = _215e2bc16_selectType(_self_, &((*(_164034_decl)).get()._field_Base));;
	if ((_164117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_215dddc1c_Trait> _164517_base = _215ebde51_Trait(_164117_base_t.ptr());;
	if ((_164517_base == nullptr)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_164117_base_t.ptr()), &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215eba403_TypeKind> _165217_destT = _215e2bc16_selectType(_self_, &((*(_164034_decl)).get()._field_Dest));;
	if ((_165217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_215dc71ab_StructIns> _165617_destS = _215ebdbdc_Struct(_165217_destT.ptr());;
	if ((_165617_destS == nullptr)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_165217_destT.ptr()), &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215dc6cd2_Struct> _166317_dest = _165617_destS.get()._field_Decl;;
	if ((_22e0b0e70_Dir(_166317_dest.get()._field_Token.get()._field_File.ptr()) != _22e0b0e70_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_164517_base.get()._field_Implemented = jule::alloc_for_append(_164517_base.get()._field_Implemented,1);_164517_base.get()._field_Implemented.__push(_166317_dest);;
	_166317_dest.get()._field_Implements = jule::alloc_for_append(_166317_dest.get()._field_Implements,1);_166317_dest.get()._field_Implements.__push(_164517_base);;
	if (((*(_164034_decl)).get()._field_Statics.len() > 0LL)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_164034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_215e34eb6_checkTraitImplMethods(_self_.ptr(), &(_164517_base), _164034_decl)))) {
			_case_begin_1ebeb1578:;
			{
				return;;
			}
		}
		else if ((!(_215e3536d_implToStruct(_self_, &(_166317_dest), _164034_decl)))) {
			_case_begin_1ebeb1600:;
			{
				return;;
			}
		}
		_match_end_1ebeae9b6:;
	};
}



inline void _215e35868_implStruct(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de68c3_Impl>* _168535_decl) {
	jule::Ptr<_215eba403_TypeKind> _168617_destT = _215e2bc16_selectType(_self_, &((*(_168535_decl)).get()._field_Dest));;
	if ((_168617_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_215dc71ab_StructIns> _169017_destS = _215ebdbdc_Struct(_168617_destT.ptr());;
	if ((_169017_destS == nullptr)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_168535_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_168617_destT.ptr()), &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215dc6cd2_Struct> _169717_dest = _169017_destS.get()._field_Decl;;
	if ((_22e0b0e70_Dir(_169717_dest.get()._field_Token.get()._field_File.ptr()) != _22e0b0e70_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_168535_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_215e3536d_implToStruct(_self_, &(_169717_dest), _168535_decl)))) {
			_case_begin_1ebeb5c64:;
			{
				return;;
			}
		}
		_match_end_1ebeb35be:;
	};
}



inline void _215e35add_implImpl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215de68c3_Impl>* _171033_decl) {
	{
		
		if (_215de6cbe_IsTraitImpl((*(_171033_decl)).ptr())) {
			_case_begin_1ebeb6858:;
			{
				_215e355e3_implTrait(_self_, _171033_decl);
			}
		}
		else if (_215de7033_IsStructImpl((*(_171033_decl)).ptr())) {
			_case_begin_1ebeb68d0:;
			{
				_215e35868_implStruct(_self_, _171033_decl);
			}
		}
		_match_end_1ebeb6748:;
	};
}



inline void _215e35e0c_checkVarDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215e41aa5_Var>* _172137_decl, jule::Trait<_215ed6375_Lookup> _172153_l) {
	if (_22e0ac983_IsIgnoreIdent((*(_172137_decl)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_215e421d2_IsTypeInferred((*(_172137_decl)).ptr())) {
		if ((!(_215e41e6d_IsInitialized((*(_172137_decl)).ptr())))) {
			_215e25e41_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_215e2b199_checkType(_self_, &((*(_172137_decl)).get()._field_Kind), _172153_l);
	};
	if (((*(_172137_decl)).get()._field_Constant && (*(_172137_decl)).get()._field_Reference)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_215e41e6d_IsInitialized((*(_172137_decl)).ptr())))) {
		if ((*(_172137_decl)).get()._field_Constant) {
			_215e25e41_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_172137_decl)).get()._field_Statically) {
			_215e25e41_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_172137_decl)).get()._field_Reference) {
			_215e25e41_pushErr(_self_.ptr(), (*(_172137_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _215e36182_checkGlobalVarDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215e41aa5_Var>* _175343_decl) {
	if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_175343_decl)))), (*(_175343_decl)).get()._field_Ident, (*(_175343_decl)).get()._field_CppLinked)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_175343_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_175343_decl)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_175343_decl)).get()._field_CppLinked && (*(_175343_decl)).get()._field_Constant)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_175343_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_175343_decl)).get()._field_CppLinked)) && (!((*(_175343_decl)).get()._field_Constant))) && (!((*(_175343_decl)).get()._field_Statically)))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_175343_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_215e26d87_checkDirectives(_self_, &((*(_175343_decl)).get()._field_Directives), jule::Any((*(_175343_decl)), &__jule_any_type8));
	_215e35e0c_checkVarDecl(_self_, _175343_decl, jule::Trait<_215ed6375_Lookup>(_self_, 3));
}



inline jule::Bool _215e363e6_checkGlobalDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebec0db2:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _177121_decl = *it;
			{
				_215e36182_checkGlobalVarDecl(_self_, &(_177121_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebec0db2:;
			++it;
			goto _iter_begin_1ebec0db2;
		}
		_iter_end_1ebec0db2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e3679d_checkStructTraitImpl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _178145_strct, jule::Ptr<_215dddc1c_Trait>* _178166_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_178166_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebec2611:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _178221_tf = *it;
			{
				jule::Bool _178321_exist = false;;
				jule::Ptr<_215dcd24a_Fn> _178421_sf = _215d8b219_FindMethod((*(_178145_strct)).ptr(), _178221_tf.get()._field_Ident, _178221_tf.get()._field_Statically);;
				jule::Ptr<_215dcea10_FnIns> _178517_tfK = _215e2de05_getTraitCheckFnKind(_self_, &(_178221_tf));;
				if ((_178421_sf != nullptr)) {
					jule::Ptr<_215dcea10_FnIns> _178725_sfK = _215e2de05_getTraitCheckFnKind(_self_, &(_178421_sf));;
					_178321_exist=(((_178517_tfK.get()._field_Decl.get()._field_Public == _178725_sfK.get()._field_Decl.get()._field_Public) && (_178517_tfK.get()._field_Decl.get()._field_Ident == _178725_sfK.get()._field_Decl.get()._field_Ident)) && _215dd08bd_equalTrait(_178517_tfK, &(_178725_sfK)));
				};
				if (_178321_exist) {
					jule::Ptr<_215d77348_Directive> _179321_d = _215eb4aa1_findDirective(&(_178421_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_179321_d != nullptr)) {
						_215e25e41_pushErr(_self_.ptr(), _179321_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _180025_s = _215dd1726_GetKindStr(_178517_tfK.ptr(), true);;
					if (_178221_tf.get()._field_Public) {
						(_180025_s).buffer.insert(0, (jule::Str()));;
					};
					_215e25e41_pushErr(_self_.ptr(), (*(_178145_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_178166_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_180025_s, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ebec2611:;
			++it;
			goto _iter_begin_1ebec2611;
		}
		_iter_end_1ebec2611:;
	};
	return __jule_func_result;;
}



inline jule::Bool _215e36aab_checkStructImpls(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _181141_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_181141_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebec8d65:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> _181321_trt = *it;
			{
				__jule_func_result=(_215e3679d_checkStructTraitImpl(_self_, _181141_s, &(_181321_trt)) && __jule_func_result);
			}
			_iter_next_1ebec8d65:;
			++it;
			goto _iter_begin_1ebec8d65;
		}
		_iter_end_1ebec8d65:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _215e36db9_checkStructFields(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _181942_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_181942_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebeca1c9:;
		if (it != expr_end) {
			jule::Ptr<_215d9ad3e_Field> _182121_f = *it;
			{
				_182121_f.get()._field_Owner=(*(_181942_st));
				{
					auto expr = &((*(_181942_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebecac24:;
					if (it != expr_end) {
						jule::Ptr<_215d9ad3e_Field> _182320_cf = *it;
						{
							if ((_182121_f == _182320_cf)) {
								goto _iter_end_1ebecac24;
							} else if ((_182121_f.get()._field_Ident == _182320_cf.get()._field_Ident)) {
								_215e25e41_pushErr(_self_.ptr(), _182121_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_182121_f.get()._field_Ident, &__jule_any_type5)}));
								_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1ebecac24:;
						++it;
						goto _iter_begin_1ebecac24;
					}
					_iter_end_1ebecac24:;
				};
			}
			_iter_next_1ebeca1c9:;
			++it;
			goto _iter_begin_1ebeca1c9;
		}
		_iter_end_1ebeca1c9:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _215e3713e_checkStructDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _183640_s) {
	if (_22e0ac983_IsIgnoreIdent((*(_183640_s)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_183640_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_183640_s)))), (*(_183640_s)).get()._field_Ident, (*(_183640_s)).get()._field_CppLinked)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_183640_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_183640_s)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_215e26d87_checkDirectives(_self_, &((*(_183640_s)).get()._field_Directives), jule::Any((*(_183640_s)), &__jule_any_type66));
	{
		
		if ((!(_215e33789_checkDeclGenerics(_self_.ptr(), &((*(_183640_s)).get()._field_Generics))))) {
			_case_begin_1ebecca8e:;
		}
		else if ((!(_215e36db9_checkStructFields(_self_, _183640_s)))) {
			_case_begin_1ebece8b5:;
		}
		else if ((!(_215e36aab_checkStructImpls(_self_, _183640_s)))) {
			_case_begin_1ebece93c:;
		}
		_match_end_1ebece7a5:;
	};
}



inline jule::Bool _215e373a3_checkStructDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebed0c5c:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _185521_s = *it;
			{
				_215e3713e_checkStructDecl(_self_, &(_185521_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebed0c5c:;
			++it;
			goto _iter_begin_1ebed0c5c;
		}
		_iter_end_1ebed0c5c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _215e37628_checkFnDecl(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcd24a_Fn>* _186536_f) {
	if (_22e0ac983_IsIgnoreIdent((*(_186536_f)).get()._field_Ident)) {
		_215e25e41_pushErr(_self_.ptr(), (*(_186536_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_215e26d87_checkDirectives(_self_, &((*(_186536_f)).get()._field_Directives), jule::Any((*(_186536_f)), &__jule_any_type65));
	(*(_186536_f)).get()._field_sema=_self_;
	_215e3412a_checkFnDeclPrototype(_self_, _186536_f);
	if (_215e26a68_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_186536_f)))), (*(_186536_f)).get()._field_Ident, (*(_186536_f)).get()._field_CppLinked)) {
		if ((*(_186536_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_215dcd24a_Fn> _187721_init = _215e24a77_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_187721_init != nullptr)) {
				return;;
			};
		};
		_215e25e41_pushErr(_self_.ptr(), (*(_186536_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_186536_f)).get()._field_Ident, &__jule_any_type5)}));
		_215e26260_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _215e3788c_checkFnDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebed5965:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _188921_f = *it;
			{
				_215e37628_checkFnDecl(_self_, &(_188921_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebed5965:;
			++it;
			goto _iter_begin_1ebed5965;
		}
		_iter_end_1ebed5965:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _215e37c55_pushCycleError(_215e2327e_Sema* _self_, jule::Ptr<_215dc6cd2_Struct>* _189930_st1, jule::Ptr<_215dc6cd2_Struct>* _189945_st2, jule::Str* _189964_message) {
	;
	jule::Str _190113_refers_to = _22dbeccdd_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_189930_st1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_189945_st2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_189964_message))).buffer.insert(0, (((_22db52d86_Repeat(jule::Str(" ", 1), 4LL) + _190113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _215e381a6_checkCrossCycle(_215e2327e_Sema* _self_, jule::Ptr<_215dc6cd2_Struct>* _190531_st1, jule::Ptr<_215dc6cd2_Struct>* _190546_st2, jule::Str* _190565_message) {
	{
		auto expr = &((*(_190546_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebed8b99:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> *_190616_u = it;
			{
				if (((*(_190616_u)) == (*(_190531_st1)))) {
					_215e37c55_pushCycleError(_self_, _190546_st2, _190616_u, _190565_message);
					return false;;
				};
				if ((!(_215e381a6_checkCrossCycle(_self_, _190531_st1, _190616_u, _190565_message)))) {
					_215e37c55_pushCycleError(_self_, _190546_st2, _190616_u, _190565_message);
					return false;;
				};
			}
			_iter_next_1ebed8b99:;
			++it;
			goto _iter_begin_1ebed8b99;
		}
		_iter_end_1ebed8b99:;
	};
	return true;;
}



inline jule::Bool _215e38629_checkStructDeriveIllegalCycles(_215e2327e_Sema* _self_, jule::Str _192049_derive, jule::Ptr<_215dc6cd2_Struct>* _192063_st1, jule::Ptr<_215eba403_TypeKind>* _192082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215dc6cd2_Struct> _192117_st2 = _215ed398d_getStructFromKind((*(_192082_k)));;
	if ((_192117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_192063_st1)) == _192117_st2)) {
		_215e25e41_pushErr(_self_, (*(_192063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_192049_derive, &__jule_any_type5),jule::Any((*(_192063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _193317_message = jule::Str();;
	if ((!(_215e381a6_checkCrossCycle(_self_, _192063_st1, &(_192117_st2), &(_193317_message))))) {
		jule::Str _193521_errMsg = _193317_message;;
		_193317_message=jule::Str();
		_215e37c55_pushCycleError(_self_, _192063_st1, &(_192117_st2), &(_193317_message));
		_193521_errMsg+=_193317_message;
		_215e25e41_pushErr(_self_, (*(_192063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_192049_derive, &__jule_any_type5),jule::Any(_193521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e3896a_checkStructInsDeriveClone(_215e2327e_Sema* _self_, jule::Ptr<_215dc71ab_StructIns> _194548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_215d90d12_IsDerives(_194548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_194548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebede485:;
		if (it != expr_end) {
			jule::Ptr<_215dc6ebe_FieldIns> _194921_f = *it;
			{
				if ((_194921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1ebede485;
				};
				if ((!(_215ebc2b2_SupportsCloning(_194921_f.get()._field_Kind.ptr())))) {
					_215e25e41_pushErr(_self_, _194548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_194921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_215e38629_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_194548_st.get()._field_Decl), &(_194921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ebede485:;
			++it;
			goto _iter_begin_1ebede485;
		}
		_iter_end_1ebede485:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _215e38b57_checkPackageDecls(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebee2015:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _196721_f = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _196721_f);
				if ((!(_215e3347b_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_215e3190d_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ebee2015:;
			++it;
			goto _iter_begin_1ebee2015;
		}
		_iter_end_1ebee2015:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebee22bd:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _197721_f = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _197721_f);
				if ((!(_215e34b0e_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ebee22bd:;
			++it;
			goto _iter_begin_1ebee22bd;
		}
		_iter_end_1ebee22bd:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebee327a:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _198421_f = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _198421_f);
				if ((!(_215e363e6_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1ebee327a:;
			++it;
			goto _iter_begin_1ebee327a;
		}
		_iter_end_1ebee327a:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebee4ab7:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _199121_f = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _199121_f);
				{
					
					if ((!(_215e3788c_checkFnDecls(_self_)))) {
						_case_begin_1ebee5766:;
					}
					else if ((!(_215e373a3_checkStructDecls(_self_)))) {
						_case_begin_1ebee57cc:;
					}
					else {
						_case_begin_1ebee5700:;
						{
							goto _iter_next_1ebee4ab7;
						}
					}
					_match_end_1ebee5689:;
				};
				return;;
			}
			_iter_next_1ebee4ab7:;
			++it;
			goto _iter_begin_1ebee4ab7;
		}
		_iter_end_1ebee4ab7:;
	};
}



inline void _215e38e98_checkDataForTypeInference(_215e2327e_Sema* _self_, jule::Ptr<_215e8e471_Data>* _200345_d, jule::Ptr<_22e0aa1de_Token>* _200356_err_token) {
	{
		
		if (_215e8e85b_IsNil((*(_200345_d)).ptr())) {
			_case_begin_1ebee6701:;
			{
				_215e25e41_pushErr(_self_, (*(_200356_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_215e8eac0_IsVoid((*(_200345_d)).ptr())) {
			_case_begin_1ebee6778:;
			{
				_215e25e41_pushErr(_self_, (*(_200356_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_200345_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1ebee6800:;
			{
				_215e25e41_pushErr(_self_, (*(_200356_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ebee65d0:;
	};
}



inline void _215e3922e_checkVar(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215e41aa5_Var>* _201433_v) {
	if ((*(_201433_v)).get()._field_CppLinked) {
		return;;
	};
	if (_215e421d2_IsTypeInferred((*(_201433_v)).ptr())) {
		(*(_201433_v)).get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=(*(_201433_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_215e38e98_checkDataForTypeInference(_self_.ptr(), &((*(_201433_v)).get()._field_Value.get()._field_Data), &((*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_215e30c3c_checkValidityForInitExpr(_self_, (*(_201433_v)).get()._field_Mutable, (*(_201433_v)).get()._field_Reference, &((*(_201433_v)).get()._field_Kind.get()._field_Kind), &((*(_201433_v)).get()._field_Value.get()._field_Data), &((*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_215ec64db_Arr> _203121_arr = _215ebd4a0_Arr((*(_201433_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_203121_arr != nullptr)) {
			if (_203121_arr.get()._field_Auto) {
				jule::Ptr<_215ec64db_Arr> _203425_dataArr = _215ebd4a0_Arr((*(_201433_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_203425_dataArr != nullptr)) {
					_203121_arr.get()._field_N=_203425_dataArr.get()._field_N;
				};
			};
		};
		if (_215e2cd27_checkAssignType(_self_, (*(_201433_v)).get()._field_Reference, &((*(_201433_v)).get()._field_Kind.get()._field_Kind), &((*(_201433_v)).get()._field_Value.get()._field_Data), (*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_215e30c3c_checkValidityForInitExpr(_self_, (*(_201433_v)).get()._field_Mutable, (*(_201433_v)).get()._field_Reference, &((*(_201433_v)).get()._field_Kind.get()._field_Kind), &((*(_201433_v)).get()._field_Value.get()._field_Data), &((*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_201433_v)).get()._field_Reference && (!(_215ed2d00_isValidForRef(&((*(_201433_v)).get()._field_Kind.get()._field_Kind)))))) {
		_215e25e41_pushErr(_self_.ptr(), (*(_201433_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_201433_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_201433_v)).get()._field_Constant) {
		if ((!(_215e8ed34_IsConst((*(_201433_v)).get()._field_Value.get()._field_Data.ptr())))) {
			_215e25e41_pushErr(_self_.ptr(), (*(_201433_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*(_201433_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_215ebe429_Tup((*(_201433_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_201433_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _215e3954d_checkTypeVar(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215e41aa5_Var>* _206937_decl, jule::Trait<_215ed6375_Lookup> _206953_l) {
	if (((*(_206937_decl)).get()._field_CppLinked || (!(_215e41e6d_IsInitialized((*(_206937_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_215e90ede_Eval> _207417_eval = nullptr;;
	if (((*(_206937_decl)).get()._field_Kind != nullptr)) {
		_207417_eval=_215e2c167_evalpd(_self_, _206953_l, (*(_206937_decl)).get()._field_Kind.get()._field_Kind, (*(_206937_decl)));
	} else {
		_207417_eval=_215e2c167_evalpd(_self_, _206953_l, nullptr, (*(_206937_decl)));
	};
	_207417_eval.get()._field_immutable=(!((*(_206937_decl)).get()._field_Mutable));
	(*(_206937_decl)).get()._field_Value.get()._field_Data=_215eab911_evalExpr(_207417_eval, (*(_206937_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_206937_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_215e3922e_checkVar(_self_, _206937_decl);
}



inline void _215e39729_checkGlobalTypes(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec0054e0:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _209021_decl = *it;
			{
				if (((_215e41e6d_IsInitialized(_209021_decl.ptr()) && (_209021_decl.get()._field_Value.get()._field_Data == nullptr)) || (_215e421d2_IsTypeInferred(_209021_decl.ptr()) && (_209021_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_215e3954d_checkTypeVar(_self_, &(_209021_decl), jule::Trait<_215ed6375_Lookup>(_self_, 3));
				};
			}
			_iter_next_1ec0054e0:;
			++it;
			goto _iter_begin_1ec0054e0;
		}
		_iter_end_1ec0054e0:;
	};
}



inline jule::Ptr<_215dcea10_FnIns> _215e39ad1_readyToCheckFn(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _210139_s, jule::Ptr<_215dcd24a_Fn>* _210159_f) {
	jule::Ptr<_215dcea10_FnIns> _210217_ins = _215dcd4ae_instance((*(_210159_f)));;
	if (((*(_210159_f)).get()._field_Instances.len() != 0LL)) {
		return _210217_ins;;
	};
	_210217_ins.get()._field_Owner=(*(_210139_s));
	_215dcd789_appendInstance((*(_210159_f)).ptr(), &(_210217_ins));
	_210217_ins.get()._field_reloaded=true;
	if (_215e301e2_reloadFnInsTypes(_self_, _210217_ins)) {
		return _210217_ins;;
	};
	return nullptr;;
}



inline void _215e39e00_checkTypeMethod(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _211540_s, jule::Ptr<_215dcd24a_Fn>* _211560_f) {
	if (((*(_211560_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_215dcea10_FnIns> _212017_ins = (*(_211560_f)).get()._field_Instances[0LL];;
	if ((_212017_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_215e3c5c8_checkFnIns(_self_, &(_212017_ins));
}



inline jule::Ptr<_215dcea10_FnIns> _215e3a351_checkStructInsOp(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _212841_s, jule::Ptr<_215dcd24a_Fn>* _212861_f, jule::Fn<jule::Bool(jule::Ptr<_215dcd24a_Fn>)> _212869_p) {
	if (((((*(_212861_f)) == nullptr) || ((*(_212861_f)).get()._field_Generics.len() > 0LL)) || (!(_212869_p((*(_212861_f))))))) {
		return nullptr;;
	};
	return (*(_212861_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _215e3a708_checkStructEnv(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _213839_s, jule::Ptr<_22e0aa1de_Token> _213858_errorToken) {
	jule::Bool __jule_func_result = false;
	_215ec8c6e_typeChecker _213917_tc = _215ec8c6e_typeChecker{._field_s=(*(_213839_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_215ed6375_Lookup>((*(_213839_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_215ed6375_Lookup>((*(_213839_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_215ec7d8e_referencer>(_215ec7d8e_referencer{._field_ident=(*(_213839_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_213839_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_213839_s)).get()._field_Refers, };;
	if (((*(_213839_s)).get()._field_Generics.len() > 0LL)) {
		_213917_tc._field_useGenerics=jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>::alloc(0LL, (*(_213839_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_213839_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ec00e131:;
			if (it != expr_end) {
				jule::I64 _215218_i = it - expr->begin();
				jule::Ptr<_215eb8bc6_InsGeneric> _215225_g = *it;
				{
					jule::Ptr<_215db78d8_GenericDecl> _215325_decl = (*(_213839_s)).get()._field_Decl.get()._field_Generics[_215218_i];;
					_213917_tc._field_useGenerics = jule::alloc_for_append(_213917_tc._field_useGenerics,1);_213917_tc._field_useGenerics.__push(jule::new_ptr<_215eb9710_TypeAlias>(_215eb9710_TypeAlias{._field_Token=_215325_decl.get()._field_Token, ._field_Ident=_215325_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_215225_g.get()._field_Kind}), }));;
				}
				_iter_next_1ec00e131:;
				++it;
				_215218_i++;
				goto _iter_begin_1ec00e131;
			}
			_iter_end_1ec00e131:;
		};
	};
	jule::Ptr<_215e89647_SymbolTable> _216217_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_215e25a78_setCurrentFile(_self_.ptr(), _216217_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_213839_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_215e89647_SymbolTable> _216621_file = _215e22888_findFile(&(_self_.get()._field_files), &((*(_213839_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_216621_file != nullptr)) {
			_215e25a78_setCurrentFile(_self_.ptr(), _216621_file);
		};
	};
	if (((*(_213839_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_215de498c_constraintChecker> _217321_cc = _215e2ace2_constraintChecker(_self_);;
		_217321_cc.get()._field_et=_213858_errorToken;
		_217321_cc.get()._field_si=(*(_213839_s));
		_217321_cc.get()._field_genericsA=_213917_tc._field_useGenerics;
		_217321_cc.get()._field_uniq=true;
		if ((!(_215de586c_check(_217321_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_213839_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _218621_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_213917_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_213839_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ec016204:;
			if (it != expr_end) {
				jule::Ptr<_215e41aa5_Var> _218825_v = *it;
				{
					_215e35e0c_checkVarDecl(_self_, &(_218825_v), jule::Trait<_215ed6375_Lookup>(_self_, 3));
					_215e3954d_checkTypeVar(_self_, &(_218825_v), jule::Trait<_215ed6375_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _218621_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1ec016204:;
				++it;
				goto _iter_begin_1ec016204;
			}
			_iter_end_1ec016204:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_213917_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_215e90ede_Eval> _219917_eval = _215e2c82c_eval(_self_, jule::Trait<_215ed6375_Lookup>(_self_, 3));;
	(*(_213839_s)).get()._field_Comparable=(!((*(_213839_s)).get()._field_Decl.get()._field_CppLinked));
	{
		auto expr = &((*(_213839_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec018c51:;
		if (it != expr_end) {
			jule::Ptr<_215dc6ebe_FieldIns> _220121_f = *it;
			{
				jule::Ptr<_215eba403_TypeKind> _220221_kind = _215ed0eda_checkDecl(&_213917_tc, &(_220121_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_220221_kind != nullptr) && __jule_func_result);
				if ((_220221_kind == nullptr)) {
					if (((_self_ != (*(_213839_s)).get()._field_Decl.get()._field_sema) && ((*(_213839_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_213839_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_213839_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1ec018c51;
				};
				_220121_f.get()._field_Kind=_220221_kind;
				(*(_213839_s)).get()._field_Mutable=((*(_213839_s)).get()._field_Mutable || ((!(_220121_f.get()._field_Decl.get()._field_Mutable)) && _215ebba75_Mutable(_220121_f.get()._field_Kind.ptr())));
				(*(_213839_s)).get()._field_Comparable=((*(_213839_s)).get()._field_Comparable && _215ebb811_Comparable(_220121_f.get()._field_Kind.ptr()));
				_215e3896a_checkStructInsDeriveClone(_self_.ptr(), (*(_213839_s)));
				if ((_220121_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1ec018c51;
				};
				_219917_eval.get()._field_prefix=_220121_f.get()._field_Kind;
				_219917_eval.get()._field_field=_220121_f;
				_220121_f.get()._field_Default=_215eab911_evalExpr(_219917_eval, _220121_f.get()._field_Decl.get()._field_Default);
				if ((_220121_f.get()._field_Default == nullptr)) {
					goto _iter_next_1ec018c51;
				};
				;
				_215e2cd27_checkAssignType(_self_, false, &(_220121_f.get()._field_Kind), &(_220121_f.get()._field_Default), _220121_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1ec018c51:;
			++it;
			goto _iter_begin_1ec018c51;
		}
		_iter_end_1ec018c51:;
	};
	return __jule_func_result;;
}



inline jule::Bool _215e3aab0_precheckStructIns(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _223642_s, jule::Ptr<_22e0aa1de_Token> _223661_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_215e3a708_checkStructEnv(_self_, _223642_s, _223661_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_223642_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec0210dd:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _224121_f = *it;
			{
				if ((_224121_f.get()._field_Generics.len() == 0LL)) {
					if ((_215e39ad1_readyToCheckFn(_self_, _223642_s, &(_224121_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1ec0210dd:;
			++it;
			goto _iter_begin_1ec0210dd;
		}
		_iter_end_1ec0210dd:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _215e3ad35_checkStructIns(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns>* _225139_s) {
	{
		auto expr = &((*(_225139_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec02293b:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _225221_f = *it;
			{
				_215e39e00_checkTypeMethod(_self_, _225139_s, &(_225221_f));
			}
			_iter_next_1ec02293b:;
			++it;
			goto _iter_begin_1ec02293b;
		}
		_iter_end_1ec02293b:;
	};
}



inline void _215e3b0aa_checkTypeStruct(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _225740_s) {
	if ((*(_225740_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_225740_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_225740_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec024289:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _227021_ins = *it;
			{
				_215e3ad35_checkStructIns(_self_, &(_227021_ins));
			}
			_iter_next_1ec024289:;
			++it;
			goto _iter_begin_1ec024289;
		}
		_iter_end_1ec024289:;
	};
}



inline void _215e3b286_checkStructTypes(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec024d4a:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _227621_s = *it;
			{
				_215e3b0aa_checkTypeStruct(_self_, &(_227621_s));
			}
			_iter_next_1ec024d4a:;
			++it;
			goto _iter_begin_1ec024d4a;
		}
		_iter_end_1ec024d4a:;
	};
}



inline void _215e3b52d_checkStructInsOperators(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc71ab_StructIns> _228147_s) {
	{
		auto expr = &(_228147_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec025b92:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _228221_m = *it;
			{
				{
					auto &_match_expr{ _228221_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1ec0268eb:;
						{
							_228147_s.get()._field_Operators._field_Eq=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e43854_Eq);
							_228147_s.get()._field_Comparable=(_228147_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1ec026962:;
						{
							_228147_s.get()._field_Operators._field_Gt=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e43aeb_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1ec0269c8:;
						{
							_228147_s.get()._field_Operators._field_GtEq=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e43d93_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1ec026a50:;
						{
							_228147_s.get()._field_Operators._field_Lt=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e4413a_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1ec026ac7:;
						{
							_228147_s.get()._field_Operators._field_LtEq=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e443d2_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1ec026b4e:;
						{
							_228147_s.get()._field_Operators._field_Shl=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e449ba_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1ec026bc6:;
						{
							_228147_s.get()._field_Operators._field_Shr=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e44c62_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1ec026c4d:;
						{
							_228147_s.get()._field_Operators._field_Add=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e45009_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1ec026cc5:;
						{
							_228147_s.get()._field_Operators._field_Sub=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e452a1_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1ec026d4c:;
						{
							_228147_s.get()._field_Operators._field_Div=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e45548_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1ec026dc4:;
						{
							_228147_s.get()._field_Operators._field_Mul=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e457e0_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1ec026e4b:;
						{
							_228147_s.get()._field_Operators._field_Mod=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e45a87_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1ec026ec3:;
						{
							_228147_s.get()._field_Operators._field_BitAnd=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e45d2e_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1ec02704a:;
						{
							_228147_s.get()._field_Operators._field_BitOr=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e460c6_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1ec0270c2:;
						{
							_228147_s.get()._field_Operators._field_BitXor=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e4636d_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1ec027149:;
						{
							_228147_s.get()._field_Operators._field_Neg=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e46956_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1ec0271c1:;
						{
							_228147_s.get()._field_Operators._field_Pos=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e46bed_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1ec027248:;
						{
							_228147_s.get()._field_Operators._field_BitNot=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e46e95_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1ec0272c0:;
						{
							_228147_s.get()._field_Operators._field_AddAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e4757d_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1ec027347:;
						{
							_228147_s.get()._field_Operators._field_SubAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e47825_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1ec0273be:;
						{
							_228147_s.get()._field_Operators._field_DivAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e47abc_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1ec027446:;
						{
							_228147_s.get()._field_Operators._field_MulAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e47d64_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1ec0274bd:;
						{
							_228147_s.get()._field_Operators._field_ModAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e4810b_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1ec027545:;
						{
							_228147_s.get()._field_Operators._field_ShlAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e483a3_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1ec0275bc:;
						{
							_228147_s.get()._field_Operators._field_ShrAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e4864a_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1ec027644:;
						{
							_228147_s.get()._field_Operators._field_BitOrAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e488e2_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1ec0276bb:;
						{
							_228147_s.get()._field_Operators._field_BitAndAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e48b89_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1ec027743:;
						{
							_228147_s.get()._field_Operators._field_BitXorAssign=_215e3a351_checkStructInsOp(_self_, &(_228147_s), &(_228221_m), static__215e48e31_BitXorAssign);
						}
					}
					_match_end_1ec0264cd:;
				};
			}
			_iter_next_1ec025b92:;
			++it;
			goto _iter_begin_1ec025b92;
		}
		_iter_end_1ec025b92:;
	};
}



inline void _215e3b7b4_precheckStructType(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dc6cd2_Struct>* _234543_s) {
	if ((*(_234543_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_234543_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_234543_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_215dc71ab_StructIns> _235621_ins = _215d87358_instance((*(_234543_s)));;
		_235621_ins.get()._field_Checked=true;
		_215d880b2_appendInstance((*(_234543_s)).ptr(), &(_235621_ins));
		_215e3aab0_precheckStructIns(_self_, &(_235621_ins), nullptr);
	};
	_215e3b52d_checkStructInsOperators(_self_, (*(_234543_s)).get()._field_Instances[0LL]);
}



inline void _215e3b990_precheckStructTypes(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec039c61:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _236621_s = *it;
			{
				_215e3b7b4_precheckStructType(_self_, &(_236621_s));
			}
			_iter_next_1ec039c61:;
			++it;
			goto _iter_begin_1ec039c61;
		}
		_iter_end_1ec039c61:;
	};
}



inline void _215e3bc15_checkRets(_215e2327e_Sema* _self_, jule::Ptr<_215dcea10_FnIns>* _237133_f) {
	if (_215d7ce64_IsVoid((*(_237133_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_215e3ddb0_missingRetChecker _237513_mrc = static__215e3e278_new();;
	jule::Bool _237613_ok = _215e4028a_check(&_237513_mrc, (*(_237133_f)).get()._field_Scope);;
	if ((!(_237613_ok))) {
		_215e25e41_pushErr(_self_, (*(_237133_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _215e3c034_checkFnInsSc(_215e2327e_Sema* _self_, jule::Ptr<_215dcea10_FnIns>* _238236_f, jule::Ptr<_215e03490_scopeChecker>* _238252_sc) {
	_215e21ea3_appendRetVars(&((*(_238252_sc)).get()._field_table.get()._field_Vars), _238236_f);
	_215e2225b_appendParamVars(&((*(_238252_sc)).get()._field_table.get()._field_Vars), _238236_f);
	_215e22536_appendGenericTypeAliases(&((*(_238252_sc)).get()._field_table.get()._field_TypeAliases), _238236_f);
	_215e13291_check((*(_238252_sc)), &((*(_238236_f)).get()._field_Decl.get()._field_Scope), &((*(_238236_f)).get()._field_Scope));
	if ((!(_215e0610d_stopped((*(_238252_sc)).ptr())))) {
		_215e3bc15_checkRets(_self_, _238236_f);
	};
}



inline void _215e3c353_checkFnInsCaller(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcea10_FnIns>* _239541_f, jule::Ptr<_22e0aa1de_Token> _239556_caller) {
	if ((*(_239541_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_215e89647_SymbolTable> _240017_old = (*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_215e25a78_setCurrentFile((*(_239541_f)).get()._field_Decl.get()._field_sema.ptr(), _240017_old);
	});;
	jule::Ptr<_215e89647_SymbolTable> _240217_file = _215e22888_findFile(&((*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_239541_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_240217_file != nullptr)) {
		_215e25a78_setCurrentFile((*(_239541_f)).get()._field_Decl.get()._field_sema.ptr(), _240217_file);
	};
	jule::Ptr<_215e03490_scopeChecker> _240717_sc = _215de8ce3_newScopeChecker(&((*(_239541_f)).get()._field_Decl.get()._field_sema), (*(_239541_f)));;
	_240717_sc.get()._field_calledFrom=_239556_caller;
	_215e3c034_checkFnInsSc(_self_.ptr(), _239541_f, &(_240717_sc));
	if (((*(_239541_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_239541_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _215e3c5c8_checkFnIns(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcea10_FnIns>* _241735_f) {
	_215e3c353_checkFnInsCaller(_self_, _241735_f, nullptr);
}



inline void _215e3c84d_checkTypeFn(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcd24a_Fn>* _242136_f) {
	if ((*(_242136_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_242136_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_242136_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec045233:;
		if (it != expr_end) {
			jule::Ptr<_215dcea10_FnIns> _243121_ins = *it;
			{
				_215e3c5c8_checkFnIns(_self_, &(_243121_ins));
			}
			_iter_next_1ec045233:;
			++it;
			goto _iter_begin_1ec045233;
		}
		_iter_end_1ec045233:;
	};
}



inline void _215e3cac3_checkTestFn(_215e2327e_Sema* _self_, jule::Ptr<_215dcea10_FnIns>* _243635_f) {
	if ((*(_243635_f)).get()._field_Decl.get()._field_Public) {
		_215e25e41_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_, jule::Str("remove \"pub\" modifier", 21), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_243635_f)).get()._field_Decl.get()._field_Unsafety || (!(_215d7ce64_IsVoid((*(_243635_f)).get()._field_Decl.ptr())))) || ((*(_243635_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_243635_f)).get()._field_Params.len() != 1LL)) || (*(_243635_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_243635_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_215e25e41_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215ec38d4_Sptr> _245417_sptr = _215ebc9ee_Sptr((*(_243635_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_245417_sptr == nullptr)) {
		_215e25e41_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215dc71ab_StructIns> _246113_s = _215ebdbdc_Struct(_245417_sptr.get()._field_Elem.ptr());;
	if (((_246113_s == nullptr) || (!(_215e20666_isStdPackage(_246113_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_215e25e41_pushErr(_self_, (*(_243635_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_215e26260_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _215e3cd48_precheckTypeFn(jule::Ptr<_215e2327e_Sema> _self_, jule::Ptr<_215dcd24a_Fn>* _246939_f) {
	if ((*(_246939_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_246939_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_246939_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_215dcea10_FnIns> _248021_ins = _215d95146_instanceForce((*(_246939_f)));;
		(*(_246939_f)).get()._field_Instances = jule::alloc_for_append((*(_246939_f)).get()._field_Instances,1);(*(_246939_f)).get()._field_Instances.__push(_248021_ins);;
		jule::Bool _248217_ok = _215e301e2_reloadFnInsTypes(_self_, _248021_ins);;
		_248021_ins.get()._field_reloaded=true;
		if ((_248217_ok && _215ed2492_hasDirective(&((*(_246939_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_215e3cac3_checkTestFn(_self_.ptr(), &(_248021_ins));
		};
	};
}



inline void _215e3d024_precheckFnTypes(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec050c44:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> _249321_decl = *it;
			{
				{
					auto expr = &(_249321_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ec0515a2:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _249425_m = *it;
						{
							_215e3cd48_precheckTypeFn(_self_, &(_249425_m));
						}
						_iter_next_1ec0515a2:;
						++it;
						goto _iter_begin_1ec0515a2;
					}
					_iter_end_1ec0515a2:;
				};
			}
			_iter_next_1ec050c44:;
			++it;
			goto _iter_begin_1ec050c44;
		}
		_iter_end_1ec050c44:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec051272:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _249821_decl = *it;
			{
				_215e3cd48_precheckTypeFn(_self_, &(_249821_decl));
			}
			_iter_next_1ec051272:;
			++it;
			goto _iter_begin_1ec051272;
		}
		_iter_end_1ec051272:;
	};
}



inline void _215e3d200_checkFnTypes(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec05287d:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _250521_decl = *it;
			{
				_215e3c84d_checkTypeFn(_self_, &(_250521_decl));
			}
			_iter_next_1ec05287d:;
			++it;
			goto _iter_begin_1ec05287d;
		}
		_iter_end_1ec05287d:;
	};
}



inline void _215e3d3cb_checkPackageTypes(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec053593:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _251321_f = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _251321_f);
				_215e39729_checkGlobalTypes(_self_);
				_215e3d024_precheckFnTypes(_self_);
				_215e3b990_precheckStructTypes(_self_);
			}
			_iter_next_1ec053593:;
			++it;
			goto _iter_begin_1ec053593;
		}
		_iter_end_1ec053593:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec054d69:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _252421_f = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _252421_f);
				_215e3d200_checkFnTypes(_self_);
				_215e3b286_checkStructTypes(_self_);
			}
			_iter_next_1ec054d69:;
			++it;
			goto _iter_begin_1ec054d69;
		}
		_iter_end_1ec054d69:;
	};
}



inline void _215e3d5a7_setFileSemaFields(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec055452:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _253221_f = *it;
			{
				_253221_f.get()._field_sema=_self_;
			}
			_iter_next_1ec055452:;
			++it;
			goto _iter_begin_1ec055452;
		}
		_iter_end_1ec055452:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ec05694d:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _253521_st = *it;
			{
				_253521_st.get()._field_sema=_self_;
			}
			_iter_next_1ec05694d:;
			++it;
			goto _iter_begin_1ec05694d;
		}
		_iter_end_1ec05694d:;
	};
}



inline void _215e3d783_setSemaFields(jule::Ptr<_215e2327e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20982a8a7:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _254121_file = *it;
			{
				_215e25a78_setCurrentFile(_self_.ptr(), _254121_file);
				_215e3d5a7_setFileSemaFields(_self_);
			}
			_iter_next_20982a8a7:;
			++it;
			goto _iter_begin_20982a8a7;
		}
		_iter_end_20982a8a7:;
	};
}



inline void _215e3da08_check(jule::Ptr<_215e2327e_Sema> _self_, jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _254730_files) {
	_self_.get()._field_files=(*(_254730_files));
	_215e295a4_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_215e3d783_setSemaFields(_self_);
	_215e29b37_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_215e2995b_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_215e38b57_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_215e3d3cb_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _215e2327e_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _215e3ddb0_missingRetChecker static__215e3e278_new(void) {
	return _215e3ddb0_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _215e3e553_checkConditional(_215e3ddb0_missingRetChecker* _self_, jule::Ptr<_215dec489_Conditional> _259035_c) {
	{
		auto expr = &(_259035_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2098302c4:;
		if (it != expr_end) {
			jule::Ptr<_215debd29_If> _259121_elif = *it;
			{
				if ((_259121_elif == nullptr)) {
					return false;;
				};
				if ((!(_215e3ee7c_checkScope(_self_, _259121_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_2098302c4:;
			++it;
			goto _iter_begin_2098302c4;
		}
		_iter_end_2098302c4:;
	};
	return ((_259035_c.get()._field_Default != nullptr) && _215e3ee7c_checkScope(_self_, _259035_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _215e3e861_checkMatch(_215e3ddb0_missingRetChecker* _self_, jule::Ptr<_215e00679_Match> _260229_m) {
	{
		auto expr = &(_260229_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209831db9:;
		if (it != expr_end) {
			jule::Ptr<_215e011c4_Case> _260321_c = *it;
			{
				if ((_260321_c == nullptr)) {
					return false;;
				};
				jule::I64 _260717_n = (*(_self_))._field_breaked.len();;
				jule::Bool _260817_ok = _215e3ee7c_checkScope(_self_, _260321_c.get()._field_Scope);;
				{
					
					if ((_260717_n != (*(_self_))._field_breaked.len())) {
						_case_begin_209833a14:;
						{
							return false;;
						}
					}
					else if ((!(_260817_ok))) {
						_case_begin_209833a7a:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_209833b02;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_209833b02:;
						{
							(*(_self_))._field_falled=false;
							if ((_260321_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_209831db9;
						}
					}
					_match_end_2098339ae:;
				};
			}
			_iter_next_209831db9:;
			++it;
			goto _iter_begin_209831db9;
		}
		_iter_end_209831db9:;
	};
	return ((_260229_m.get()._field_Default != nullptr) && _215e3ee7c_checkScope(_self_, _260229_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _215e3eb6e_checkInfIter(_215e3ddb0_missingRetChecker* _self_, jule::Ptr<_215dec775_InfIter> _262831_it) {
	jule::I64 _262913_n = (*(_self_))._field_breaked.len();;
	if (_215e3ee7c_checkScope(_self_, _262831_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _262913_n);
		return true;;
	};
	if ((_262913_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _263517_itaddr = static_cast<jule::Uintptr>(_262831_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_262913_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_20983782b:;
			if (it != expr_end) {
				jule::Uintptr _263620_addr = *it;
				{
					if ((_263517_itaddr == _263620_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _262913_n);
						return false;;
					};
				}
				_iter_next_20983782b:;
				++it;
				goto _iter_begin_20983782b;
			}
			_iter_end_20983782b:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _262913_n);
	};
	return true;;
}



inline jule::Bool _215e3ee7c_checkScope(_215e3ddb0_missingRetChecker* _self_, jule::Ptr<_215deb92d_Scope> _264729_s) {
	if ((_264729_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_264729_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2098393dd:;
		if (it != expr_end) {
			jule::Any _265121_st = *it;
			{
				{
					auto &_match_expr{ _265121_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_209839b2a:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_209839bc4:;
						{
							jule::Uintptr _265721_addr = _265121_st.cast_ptr<_215dedd81_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_265721_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_265721_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_209839c3a:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_209839ca1:;
						{
							if (_215e3eb6e_checkInfIter(_self_, _265121_st.cast_ptr<_215dec775_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_209839d17:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_209839d7d:;
						{
							if (_215e3ee7c_checkScope(_self_, _265121_st.cast_ptr<_215deb92d_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_209839de4:;
						{
							{
								auto &_match_expr{ _265121_st.cast_ptr<_215e8e471_Data>(&__jule_any_type23).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type22) {
									_case_begin_20983d8ed:;
									{
										return true;;
									}
								}
								_match_end_20983d645:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_209839e6b:;
						{
							if (_215e3e553_checkConditional(_self_, _265121_st.cast_ptr<_215dec489_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_209839ee3:;
						{
							if (_215e3e861_checkMatch(_self_, _265121_st.cast_ptr<_215e00679_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_209839982:;
				};
			}
			_iter_next_2098393dd:;
			++it;
			goto _iter_begin_2098393dd;
		}
		_iter_end_2098393dd:;
	};
	return false;;
}



inline jule::Bool _215e4028a_check(_215e3ddb0_missingRetChecker* _self_, jule::Ptr<_215deb92d_Scope> _269324_s) {
	return _215e3ee7c_checkScope(_self_, _269324_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _215e3ddb0_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e40a60_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215e41e6d_IsInitialized(_215e41aa5_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _215e421d2_IsTypeInferred(_215e41aa5_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _215e42446_untypedConstant(_215e41aa5_Var* _self_) {
	return (_215e421d2_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _215e41aa5_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__215e42ec4_Dispose(jule::Ptr<_215dcd24a_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _215d7ce64_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_215d8d46e_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__215e4326b_Str(jule::Ptr<_215dcd24a_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _215d7ce64_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _215d8d46e_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_215dcea10_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_215ec0150_Prim> _3913_prim = _215ebc78a_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _215ec3384_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__215e435ac_logical(jule::Ptr<_215dcd24a_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _215d7ce64_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _215d8d46e_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_215dcea10_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_215ec0150_Prim> _6413_prim = _215ebc78a_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_215ec3120_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _215ebdbdc_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__215e43854_Eq(jule::Ptr<_215dcd24a_Fn> _7218_f) {
	return static__215e435ac_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__215e43aeb_Gt(jule::Ptr<_215dcd24a_Fn> _7718_f) {
	return static__215e435ac_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__215e43d93_GtEq(jule::Ptr<_215dcd24a_Fn> _8220_f) {
	return static__215e435ac_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__215e4413a_Lt(jule::Ptr<_215dcd24a_Fn> _8718_f) {
	return static__215e435ac_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__215e443d2_LtEq(jule::Ptr<_215dcd24a_Fn> _9220_f) {
	return static__215e435ac_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__215e44723_result(jule::Ptr<_215dcd24a_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _215d7ce64_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _215d8d46e_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_215dcea10_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_215ebdbdc_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__215e449ba_Shl(jule::Ptr<_215dcd24a_Fn> _11819_f) {
	return static__215e44723_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__215e44c62_Shr(jule::Ptr<_215dcd24a_Fn> _12319_f) {
	return static__215e44723_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__215e45009_Add(jule::Ptr<_215dcd24a_Fn> _12819_f) {
	return static__215e44723_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__215e452a1_Sub(jule::Ptr<_215dcd24a_Fn> _13319_f) {
	return static__215e44723_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__215e45548_Div(jule::Ptr<_215dcd24a_Fn> _13819_f) {
	return static__215e44723_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__215e457e0_Mul(jule::Ptr<_215dcd24a_Fn> _14319_f) {
	return static__215e44723_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__215e45a87_Mod(jule::Ptr<_215dcd24a_Fn> _14819_f) {
	return static__215e44723_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__215e45d2e_BitAnd(jule::Ptr<_215dcd24a_Fn> _15322_f) {
	return static__215e44723_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__215e460c6_BitOr(jule::Ptr<_215dcd24a_Fn> _15821_f) {
	return static__215e44723_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__215e4636d_BitXor(jule::Ptr<_215dcd24a_Fn> _16322_f) {
	return static__215e44723_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__215e466ae_unary(jule::Ptr<_215dcd24a_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _215d7ce64_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _215d8d46e_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_215dcea10_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_215ebdbdc_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__215e46956_Neg(jule::Ptr<_215dcd24a_Fn> _18719_f) {
	return static__215e466ae_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__215e46bed_Pos(jule::Ptr<_215dcd24a_Fn> _19219_f) {
	return static__215e466ae_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__215e46e95_BitNot(jule::Ptr<_215dcd24a_Fn> _19722_f) {
	return static__215e466ae_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__215e472d6_assign(jule::Ptr<_215dcd24a_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_215d7ce64_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _215d8d46e_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__215e4757d_AddAssign(jule::Ptr<_215dcd24a_Fn> _22125_f) {
	return static__215e472d6_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__215e47825_SubAssign(jule::Ptr<_215dcd24a_Fn> _22625_f) {
	return static__215e472d6_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__215e47abc_DivAssign(jule::Ptr<_215dcd24a_Fn> _23125_f) {
	return static__215e472d6_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__215e47d64_MulAssign(jule::Ptr<_215dcd24a_Fn> _23625_f) {
	return static__215e472d6_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__215e4810b_ModAssign(jule::Ptr<_215dcd24a_Fn> _24125_f) {
	return static__215e472d6_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__215e483a3_ShlAssign(jule::Ptr<_215dcd24a_Fn> _24625_f) {
	return static__215e472d6_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__215e4864a_ShrAssign(jule::Ptr<_215dcd24a_Fn> _25125_f) {
	return static__215e472d6_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__215e488e2_BitOrAssign(jule::Ptr<_215dcd24a_Fn> _25627_f) {
	return static__215e472d6_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__215e48b89_BitAndAssign(jule::Ptr<_215dcd24a_Fn> _26128_f) {
	return static__215e472d6_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__215e48e31_BitXorAssign(jule::Ptr<_215dcd24a_Fn> _26628_f) {
	return static__215e472d6_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _215e42853_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _215e78757_pushErr(_215e7823a_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _215e789bb_checkTrait(_215e7823a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_215ebb338_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_215dddc1c_Trait> _12513_trt = _215ebde51_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_215ebc9ee_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_209876a13:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_215ebc9ee_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_215ebdbdc_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_209876381;
			}
		}
		else if ((_215ebdbdc_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_209876381:;
			{
				jule::Ptr<_215dc71ab_StructIns> _13617_s = _215ebdbdc_Struct((*(_self_))._field_src.ptr());;
				if ((!(_215d8bd41_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _215e5a519_traitHasReferenceReceiver(&(_12513_trt)))) {
					_215e78757_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_215ebde51_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_2098763e7:;
			{
				__jule_func_result = (_12513_trt == _215ebde51_Trait((*(_self_))._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_20987631a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2098762a4:;
	};
}



inline jule::Bool _215e78c30_checkPtr(_215e7823a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_215ebb338_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_215ec6e48_Ptr> _15617_dest = _215ebcc63_Ptr((*(_self_))._field_dest.ptr());;
	if (_215ec791b_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _215ebab0c_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _215e78e94_checkPrim(_215e7823a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_215ec0150_Prim> _16517_prim = _215ebc78a_Prim((*(_self_))._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _215ec35e8_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _215ebab0c_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _215e7934b_typeEnum(_215e7823a_typeCompatibilityChecker* _self_, jule::Ptr<_215de245c_TypeEnum>* _17328_e, jule::Ptr<_215eba403_TypeKind>* _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_17328_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20987d850:;
		if (it != expr_end) {
			jule::Ptr<_215de1d96_TypeEnumItem> _17421_item = *it;
			{
				if (_215ebab0c_Equal(_17421_item.get()._field_Kind.get()._field_Kind, (*(_17347_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_215de245c_TypeEnum> _17821_ke = _215ebd23b_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_20987d850;
				};
				if (_215e7934b_typeEnum(_self_, &(_17821_ke), _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_20987d850:;
			++it;
			goto _iter_begin_20987d850;
		}
		_iter_end_20987d850:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _215e795b0_checkTypeEnum(_215e7823a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_215ebab0c_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_215de245c_TypeEnum> _19317_e = _215ebd23b_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _215e7934b_typeEnum(_self_, &(_19317_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _215e79824_check(_215e7823a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_215ebcc63_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _215e78c30_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_215ebbcd9_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_215ebb338_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_215ebc78a_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_209883437:;
			{
				__jule_func_result = _215e78e94_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_215ebd23b_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_209883822:;
			{
				__jule_func_result = _215e795b0_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_215ebde51_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_209883888:;
			{
				__jule_func_result = _215e789bb_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_209882843:;
			{
				__jule_func_result = _215ebab0c_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_209882535:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215e7823a_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _215e7a2c5_pushErr(_215e79d63_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_215e25e41_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _22926_fmt, _22939_args);
}



inline jule::Bool _215e7a539_checkValidity(_215e79d63_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_215ebd978_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20988654a:;
			{
				jule::Ptr<_215dcea10_FnIns> _23717_f = _215ebd978_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_215dd0d96_IsBuiltin(_23717_f.ptr())) {
						_case_begin_209887abd:;
						{
							_215e7a2c5_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_209887b45:;
						{
							_215e7a2c5_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _215d9c5b0_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_209887bbc:;
						{
							_215e7a2c5_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_209887c44:;
						{
							_215e7a2c5_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_215e26260_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_2098879e1:;
				};
			}
		}
		else if ((_215ebe429_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2098865c2:;
			{
				_215e7a2c5_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_209886490:;
	};
	return _23417_valid;;
}



inline jule::Bool _215e7a79d_checkConst(_215e79d63_assignTypeChecker* _self_) {
	if (((((!(_215e8ed34_IsConst((*(_self_))._field_d.ptr()))) || (_215ebc78a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_214703137_IsNum(_215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type47_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _215ebc78a_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_214703005_IsFloat(_27413_kind)) {
			_case_begin_20989019c:;
			{
				if ((!(_215e5a64b_floatAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_215e7a2c5_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_214702dc3_IsInt(_27413_kind)) {
			_case_begin_20988ea2b:;
			{
				if ((!(_215e7805e_intAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_215e7a2c5_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_20988e9b5:;
			{
				return false;;
			}
		}
		_match_end_20988e94e:;
	};
	return true;;
}



inline jule::Bool _215e7aa12_isPrim(_215e79d63_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_215ebb0c4_CppLinked((*(_self_))._field_dest.ptr()) || _215ebb0c4_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_215ebc78a_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _215e7ac76_checkCompatibility(_215e79d63_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_2098941e5:;
			{
				return false;;
			}
		}
		else if ((!(_215e7a539_checkValidity(_self_)))) {
			_case_begin_20989426c:;
			{
				return false;;
			}
		}
		else if (_215e7a79d_checkConst(_self_)) {
			_case_begin_2098942e4:;
			{
				return true;;
			}
		}
		else if ((_215ebcec7_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20989436b:;
			{
				jule::Ptr<_215eba403_TypeKind> _31821_dkind = (*(_self_))._field_dest;;
				if ((_215ebcec7_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_215ebcec7_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_215ebc78a_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_2098940a2;
				};
				if (_21470190a_TypesAreCompatible(_215ebc78a_Prim(_215ebcec7_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _215ebc78a_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_215e7aa12_isPrim(_self_)) {
			_case_begin_2098943e3:;
			{
				jule::Ptr<_215ec0150_Prim> _32817_dest = _215ebc78a_Prim((*(_self_))._field_dest.ptr());;
				if (_215ec35e8_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_215ec0150_Prim> _33221_src = _215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_21470190a_TypesAreCompatible(_32817_dest.get()._field_Kind, _33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_2098940a2:;
	};
	return _215e2d278_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _215e7aeda_check(_215e79d63_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _215e7ac76_checkCompatibility(_self_);;
	if ((_34113_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_215ed3edd_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e79d63_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _2098abbbe_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_2098ad2ca:;
			{
				jule::Ptr<_215eba403_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_2098ae0de:;
						{
							_36421_elem=_215ebd4a0_Arr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2098adb5a:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dacaed_ArrTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _215e7ce98_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_2098ad220:;
	};
	return false;;
}

inline jule::Bool _2098ab3b6_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_2098b17d9:;
			{
				jule::Ptr<_215eba403_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_2098b2686:;
						{
							_36421_elem=_215ebd714_Slc((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2098b2169:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dabd94_SlcTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _215e7ce98_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_2098b172e:;
	};
	return false;;
}

inline jule::Bool _2098ad63d_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_2098b4db4:;
			{
				jule::Ptr<_215eba403_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_2098b5cc7:;
						{
							_36421_elem=_215ebcc63_Ptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2098b5744:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dac46b_PtrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _215e7ce98_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_2098b4d09:;
	};
	return false;;
}

inline jule::Bool _2098b3b0a_annotateConstraintElem(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_2098b803d:;
			{
				jule::Ptr<_215eba403_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_2098b8ec8:;
						{
							_36421_elem=_215ebc9ee_Sptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_2098b88bd:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dab998_SptrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _215e7ce98_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_2098b7e83:;
	};
	return false;;
}



inline jule::Bool _215e7c22d_annotateConstraintMap(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_20989bb26:;
			{
				jule::Ptr<_215ec58e7_Map> _38421_m = _215ebe1b5_Map((*(_38145_k)).ptr());;
				jule::Ptr<_215dad34b_MapTypeDecl> _38521_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dad34b_MapTypeDecl>(&__jule_any_type80);;
				(*(_self_))._field_c=_38521_m2.get()._field_Key;
				if ((!(_215e7ce98_annotateConstraint(_self_, &(_38421_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _215e7ce98_annotateConstraint(_self_, &(_38421_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_20989ba9e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _215e7c53b_annotateConstraintTup(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_20989e332:;
			{
				jule::Ptr<_215dac180_TupleTypeDecl> _39921_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dac180_TupleTypeDecl>(&__jule_any_type81);;
				jule::Ptr<_215ec4dbe_Tuple> _40021_tup2 = _215ebe429_Tup((*(_39645_k)).ptr());;
				{
					auto expr = &(_40021_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2098a06c9:;
					if (it != expr_end) {
						jule::Ptr<_215eba403_TypeKind> _40125_t2 = *it;
						{
							{
								auto expr = &(_39921_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2098a0e8d:;
								if (it != expr_end) {
									jule::Ptr<_215daa5e0_TypeDecl> _40229_t = *it;
									{
										(*(_self_))._field_c=_40229_t;
										if (_215e7ce98_annotateConstraint(_self_, &(_40125_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_2098a0e8d:;
									++it;
									goto _iter_begin_2098a0e8d;
								}
								_iter_end_2098a0e8d:;
							};
						}
						_iter_next_2098a06c9:;
						++it;
						goto _iter_begin_2098a06c9;
					}
					_iter_end_2098a06c9:;
				};
			}
		}
		_match_end_20989e2cc:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _215e7c849_annotateConstraintFn(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_2098a0ba2:;
			{
				jule::Ptr<_215dbc06e_FnDecl> _41621_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_215dbc06e_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_215dcea10_FnIns> _41721_f = _215ebd978_Fn((*(_41344_k)).ptr());;
				{
					auto expr = &(_41721_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2098a30d3:;
					if (it != expr_end) {
						jule::I64 _41818_i = it - expr->begin();
						jule::Ptr<_215dcdb41_ParamIns> _41825_fp = *it;
						{
							(*(_self_))._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_215e7ce98_annotateConstraint(_self_, &(_41825_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_2098a30d3:;
						++it;
						_41818_i++;
						goto _iter_begin_2098a30d3;
					}
					_iter_end_2098a30d3:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_215e7ce98_annotateConstraint(_self_, &(_41721_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_20989e673:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _215e7cb79_annotateConstraintIdent(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _43447_k) {
	jule::Ptr<_215daaba6_IdentTypeDecl> _43517_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_215daaba6_IdentTypeDecl>(&__jule_any_type19);;
	jule::Ptr<_215dc71ab_StructIns> _43617_s = _215ebdbdc_Struct((*(_43447_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2098a5a53:;
		if (it != expr_end) {
			jule::I64 _43713_i = it - expr->begin();
			jule::Ptr<_215db78d8_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_215eb8bc6_InsGeneric> _43925_fg = (*(_self_))._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_215e7d2b7_pushGeneric(_self_, _43447_k, _43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_2098a5a53;
				};
				jule::Ptr<_215daa5e0_TypeDecl> _44921_c = (*(_self_))._field_c;;
				{
					auto expr = &(_43517_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_2098a7d52:;
					if (it != expr_end) {
						jule::Ptr<_215daa5e0_TypeDecl> _45025_ig = *it;
						{
							(*(_self_))._field_c=_45025_ig;
							{
								auto expr = &(_43617_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_2098a93b4:;
								if (it != expr_end) {
									jule::Ptr<_215eb8bc6_InsGeneric> _45229_sg = *it;
									{
										if (_215e7ce98_annotateConstraint(_self_, &(_45229_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_2098a93b4:;
									++it;
									goto _iter_begin_2098a93b4;
								}
								_iter_end_2098a93b4:;
							};
						}
						_iter_next_2098a7d52:;
						++it;
						goto _iter_begin_2098a7d52;
					}
					_iter_end_2098a7d52:;
				};
				(*(_self_))._field_c=_44921_c;
			}
			_iter_next_2098a5a53:;
			++it;
			_43713_i++;
			goto _iter_begin_2098a5a53;
		}
		_iter_end_2098a5a53:;
	};
	return false;;
}



inline jule::Bool _215e7ce98_annotateConstraint(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _46342_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_2098a9749:;
			{
				return _215e7cb79_annotateConstraintIdent(_self_, _46342_k);;
			}
		}
		_match_end_2098a8ea7:;
	};
	{
		
		if ((_215ebd4a0_Arr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098a69bb:;
			{
				return _2098abbbe_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_215ebd714_Slc((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098aac56:;
			{
				return _2098ab3b6_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_215ebcc63_Ptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098aacbc:;
			{
				return _2098ad63d_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_215ebc9ee_Sptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098aadbb:;
			{
				return _2098b3b0a_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_215ebe1b5_Map((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098aae32:;
			{
				return _215e7c22d_annotateConstraintMap(_self_, _46342_k);;
			}
		}
		else if ((_215ebd978_Fn((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098aa382:;
			{
				return _215e7c849_annotateConstraintFn(_self_, _46342_k);;
			}
		}
		else if ((_215ebe429_Tup((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_2098aa3e8:;
			{
				return _215e7c53b_annotateConstraintTup(_self_, _46342_k);;
			}
		}
		else {
			_case_begin_2098aab8a:;
			{
				return false;;
			}
		}
		_match_end_2098aab35:;
	};
}



inline void _215e7d2b7_pushGeneric(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _48835_k, jule::I64 _48849_i) {
	(*(_self_))._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_215eb8bc6_InsGeneric>(_215eb8bc6_InsGeneric{._field_Kind=(*(_48835_k)), });
	jule::Ptr<_215db78d8_GenericDecl> _49017_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20998a275:;
		if (it != expr_end) {
			jule::Ptr<_215eba403_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _215eba7ee_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=(*(_48835_k)).get()._field_Kind;
				};
			}
			_iter_next_20998a275:;
			++it;
			goto _iter_begin_20998a275;
		}
		_iter_end_20998a275:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_215e7ce98_annotateConstraint(_self_, _48835_k);
}



inline jule::Bool _215e7d5c5_annotatePrim(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _215e803eb_annotateAny(_self_, _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _215e7d8d3_annotateArr(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215ec64db_Arr> _50817_parr = _215ebd4a0_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215ec64db_Arr> _51217_arr = _215ebd4a0_Arr((*(_50742_k)).ptr());;
	(*(_self_))._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _215e80709_annotateKind(_self_, &(_51217_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _215e7dbe1_annotateSlc(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215ec4341_Slc> _51817_pslc = _215ebd714_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215ec4341_Slc> _52217_slc = _215ebd714_Slc((*(_51742_k)).ptr());;
	(*(_self_))._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _215e80709_annotateKind(_self_, &(_52217_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _215e7e098_checkMapKey(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _52741_k, jule::Ptr<_215eba403_TypeKind>* _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215eba403_TypeKind>* _52817_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52741_k;
	__jule_func_result=_215e80709_annotateKind(_self_, _52761_ck);
	(*(_self_))._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _215e7e3a6_annotateMap(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215ec58e7_Map> _53617_pmap = _215ebe1b5_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215ec58e7_Map> _54017_m = _215ebe1b5_Map((*(_53542_k)).ptr());;
	__jule_func_result = (_215e7e098_checkMapKey(_self_, (&(_53617_pmap.get()._field_Key)), &(_54017_m.get()._field_Key)) && _215e7e098_checkMapKey(_self_, (&(_53617_pmap.get()._field_Val)), &(_54017_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _215e7e6b4_annotateFn(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215dcea10_FnIns> _54617_pf = _215ebd978_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215dcea10_FnIns> _55017_f = _215ebd978_Fn((*(_54541_k)).ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_20999636e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_215d7ce64_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _215d7ce64_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_2099963e6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_2099962e7:;
	};
	__jule_func_result=true;
	jule::Ptr<_215eba403_TypeKind>* _55917_old = (*(_self_))._field_k;;
	{
		auto expr = &(_55017_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209997b67:;
		if (it != expr_end) {
			jule::I64 _56014_i = it - expr->begin();
			jule::Ptr<_215dcdb41_ParamIns> _56021_fp = *it;
			{
				(*(_self_))._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_215e80709_annotateKind(_self_, &(_56021_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_209997b67:;
			++it;
			_56014_i++;
			goto _iter_begin_209997b67;
		}
		_iter_end_209997b67:;
	};
	if ((!(_215d7ce64_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_215e80709_annotateKind(_self_, &(_55017_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _215e7e9c2_annotatePtr(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215ec6e48_Ptr> _57517_pptr = _215ebcc63_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215ec6e48_Ptr> _57917_ptr = _215ebcc63_Ptr((*(_57442_k)).ptr());;
	(*(_self_))._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _215e80709_annotateKind(_self_, &(_57917_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _215e7ecd0_annotateSptr(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215ec38d4_Sptr> _58517_ssptr = _215ebc9ee_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215ec38d4_Sptr> _58917_sptr = _215ebc9ee_Sptr((*(_58443_k)).ptr());;
	(*(_self_))._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _215e80709_annotateKind(_self_, &(_58917_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _215e800dd_annotateStruct(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215dc71ab_StructIns> _59517_s = _215ebdbdc_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215dc71ab_StructIns> _59917_s2 = _215ebdbdc_Struct((*(_59445_k)).ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_59517_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209ae2ac5:;
		if (it != expr_end) {
			jule::I64 _60314_i = it - expr->begin();
			jule::Ptr<_215eb8bc6_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_215eb8bc6_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_215ebab0c_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_209ae2ac5;
				};
				(*(_self_))._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_215e80709_annotateKind(_self_, &(_60421_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_209ae2ac5:;
			++it;
			_60314_i++;
			goto _iter_begin_209ae2ac5;
		}
		_iter_end_209ae2ac5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e803eb_annotateAny(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _215eba7ee_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209ae5974:;
		if (it != expr_end) {
			jule::I64 _61813_i = it - expr->begin();
			jule::Ptr<_215db78d8_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_209ae5974;
				};
				jule::Ptr<_215eb8bc6_InsGeneric> _62217_t = (*(_self_))._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_209ae7602:;
						{
							_215e7d2b7_pushGeneric(_self_, _61642_k, _61813_i);
						}
					}
					else if ((!(_215ebab0c_Equal(_62217_t.get()._field_Kind, (*(_61642_k)))))) {
						_case_begin_209ae7668:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_209ae74ae:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_61642_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_209ae5974:;
			++it;
			_61813_i++;
			goto _iter_begin_209ae5974;
		}
		_iter_end_209ae5974:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _215e80709_annotateKind(_215e7b848_dynamicTypeAnnotation* _self_, jule::Ptr<_215eba403_TypeKind>* _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_215e803eb_annotateAny(_self_, _63743_k)) {
			_case_begin_209ae9b10:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_215ebc78a_Prim((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209ae9b76:;
			{
				__jule_func_result = _215e7d5c5_annotatePrim(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebd4a0_Arr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209ae9bdc:;
			{
				__jule_func_result = _215e7d8d3_annotateArr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebd714_Slc((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209ae9c53:;
			{
				__jule_func_result = _215e7dbe1_annotateSlc(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebe1b5_Map((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209ae9ec8:;
			{
				__jule_func_result = _215e7e3a6_annotateMap(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebd978_Fn((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209aea03e:;
			{
				__jule_func_result = _215e7e6b4_annotateFn(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebcc63_Ptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209aea0a5:;
			{
				__jule_func_result = _215e7e9c2_annotatePtr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebc9ee_Sptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209aea11b:;
			{
				__jule_func_result = _215e7ecd0_annotateSptr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_215ebdbdc_Struct((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_209aea36e:;
			{
				__jule_func_result = _215e800dd_annotateStruct(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_209ae9a99:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_209ae9a44:;
	};
}



inline jule::Bool _215e8096d_annotate(_215e7b848_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _215e80709_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e7b848_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _215e81760_pushErrToken(_215e81210_fnCallArgChecker* _self_, jule::Ptr<_22e0aa1de_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_215e25e41_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _68231_token, _68246_fmt, _68259_args);
}



inline void _215e81a7e_pushErr(_215e81210_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_215e81760_pushErrToken(_self_, (*(_self_))._field_errorToken, _68626_fmt, _68639_args);
}



inline jule::Slice<jule::Ptr<_215dcdb41_ParamIns>> _215e81ce3_getParams(_215e81210_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _215d8baee_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _215e82101_checkCounts(_215e81210_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>* _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = (*(_69931_params)).len();;
	if (((_70017_n > 0LL) && _215d8baee_IsSelf((*(_69931_params))[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*(_self_))._field_args.len());;
	jule::Str _70617_log = jule::Str();;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_209b05c09:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && (*(_69931_params))[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_209b064ce:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > (*(_69931_params)).len()))) {
			_case_begin_209b06105:;
			{
				_70617_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_209b0608e:;
			{
				_70617_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_209b06028:;
	};
	jule::Str _71717_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_71717_err).append("\n       wanted (", 16);
	{
		auto expr = _69931_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b04246:;
		if (it != expr_end) {
			jule::I64 _71913_i = it - expr->begin();
			jule::Ptr<_215dcdb41_ParamIns> *_71916_p = it;
			{
				_71717_err+=_215eba7ee_Str((*(_71916_p)).get()._field_Kind.ptr());
				if ((((*(_69931_params)).len() - _71913_i) > 1LL)) {
					(_71717_err).append(", ", 2);
				};
			}
			_iter_next_209b04246:;
			++it;
			_71913_i++;
			goto _iter_begin_209b04246;
		}
		_iter_end_209b04246:;
	};
	(_71717_err).append(")", 1);
	_215e81a7e_pushErr(_self_, _70617_log, jule::Slice<jule::Any>::make({jule::Any(_71717_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _215e82552_checkArg(_215e81210_fnCallArgChecker* _self_, jule::Ptr<_215dcdb41_ParamIns>* _73032_p, jule::Ptr<_215e8e471_Data>* _73051_arg, jule::Ptr<_22e0aa1de_Token>* _73068_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _215dd1b22_parameterUsesGenerics(_73032_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_73032_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_215e7b848_dynamicTypeAnnotation _73425_dta = _215e7b848_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_73032_p)), ._field_a=(*(_73051_arg)), ._field_errorToken=(*(_73068_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_215e8096d_annotate(&_73425_dta);
		};
		if ((!(__jule_func_result))) {
			_215e81760_pushErrToken(_self_, (*(_73068_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_215e30c3c_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_73032_p)).get()._field_Decl.get()._field_Mutable, (*(_73032_p)).get()._field_Decl.get()._field_Reference, &((*(_73032_p)).get()._field_Kind), _73051_arg, _73068_errorToken)) {
		_215e2cd27_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_73032_p)).get()._field_Decl.get()._field_Reference, &((*(_73032_p)).get()._field_Kind), _73051_arg, (*(_73068_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e82909_push(_215e81210_fnCallArgChecker* _self_, jule::Ptr<_215dcdb41_ParamIns>* _75828_p, jule::Ptr<_215daeb11_Expr> _75846_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215eba403_TypeKind> _75917_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _76013_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_75828_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_75828_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_75828_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_215e8e471_Data> _76817_d = _215eab2e5_evalExprKind((*(_self_))._field_e, _75846_arg.get()._field_Kind);;
	(*(_self_))._field_e.get()._field_prefix=_75917_old;
	(*(_self_))._field_e.get()._field_immutable=_76013_oldImmut;
	if ((_76817_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_215e82552_checkArg(_self_, _75828_p, &(_76817_d), &(_75846_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_76817_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _215e82cb1_pushVariadic(_215e81210_fnCallArgChecker* _self_, jule::Ptr<_215dcdb41_ParamIns>* _78236_p, jule::I64 _78254_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78417_variadiced = false;;
	jule::Bool _78513_more = ((_78254_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_215dc8740_SliceExprModel> _78617_model = jule::new_ptr<_215dc8740_SliceExprModel>(_215dc8740_SliceExprModel{._field_ElemKind=(*(_78236_p)).get()._field_Kind, });;
	jule::Ptr<_215eba403_TypeKind> _79017_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _79513_variadic = (*(_78236_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_78236_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_78236_p)).get()._field_Kind.get()._field_Variadic=_79513_variadic;
	});;
	for (; (_78254_i < (*(_self_))._field_args.len()); (_78254_i)++) {
		{
			jule::Ptr<_215daeb11_Expr> _80221_arg = (*(_self_))._field_args[_78254_i];;
			{
				auto &_match_expr{ _80221_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_209b168b8:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec4341_Slc>(_215ec4341_Slc{._field_Elem=(*(_78236_p)).get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_209b1719e:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_78236_p)).get()._field_Kind;
					}
				}
				_match_end_209b17149:;
			};
			jule::Ptr<_215e8e471_Data> _81521_d = _215eab603_eval((*(_self_))._field_e, _80221_arg);;
			if ((_81521_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_209b15d29;
			};
			if (_81521_d.get()._field_Kind.get()._field_Variadic) {
				_78417_variadiced=true;
				(*(_78236_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _215e82552_checkArg(_self_, _78236_p, &(_81521_d), &(_80221_arg.get()._field_Token)));
				{
					auto &_match_expr{ _81521_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_209b1937c:;
						{
							_78617_model=_81521_d.get()._field_Model.cast_ptr<_215dc8740_SliceExprModel>(&__jule_any_type83);
							_78617_model.get()._field_ElemKind=(*(_78236_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_209b1a108:;
						{
							_78617_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_81521_d.get()._field_Model);;
						}
					}
					_match_end_209b1a1e6:;
				};
				(_78254_i)++;
				goto _iter_end_209b15d29;
			};
			__jule_func_result=(__jule_func_result && _215e82552_checkArg(_self_, _78236_p, &(_81521_d), &(_80221_arg.get()._field_Token)));
			_78617_model.get()._field_Elems = jule::alloc_for_append(_78617_model.get()._field_Elems,1);_78617_model.get()._field_Elems.__push(_81521_d.get()._field_Model);;
		}
	_iter_next_209b15d29:;
	}
	_iter_end_209b15d29:;;
	(*(_self_))._field_e.get()._field_prefix=_79017_old;
	if ((_78417_variadiced && _78513_more)) {
		_215e81760_pushErrToken(_self_, (*(_self_))._field_args[_78254_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78617_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_78617_model, &__jule_any_type83));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _215e830be_checkArgs(_215e81210_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>* _85833_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85913_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _86317_i = 0LL;;
	if ((((*(_85833_params)).len() > 0LL) && _215d8baee_IsSelf((*(_85833_params))[0LL].get()._field_Decl.ptr()))) {
		(_86317_i)++;
	};
	_julec_label_iter:;
	while ((_86317_i < (*(_85833_params)).len())) {
		{
			jule::Ptr<_215dcdb41_ParamIns> _87021_p = (*(_85833_params))[_86317_i];;
			{
				
				if (_87021_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_209b21494:;
					{
						__jule_func_result=(_215e82cb1_pushVariadic(_self_, &(_87021_p), _86317_i) && __jule_func_result);
						goto _iter_end_209b1ea47;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86317_i)) {
					_case_begin_209b20bbe:;
					{
						__jule_func_result=false;
						goto _iter_end_209b1ea47;
					}
				}
				else {
					_case_begin_209b210ed:;
					{
						__jule_func_result=(_215e82909_push(_self_, &(_87021_p), (*(_self_))._field_args[_86317_i]) && __jule_func_result);
					}
				}
				_match_end_209b21087:;
			};
			(_86317_i)++;
		}
	_iter_next_209b1ea47:;
	}
	_iter_end_209b1ea47:;;
	(*(_self_))._field_e.get()._field_arg=_85913_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _215e83355_checkDynamicTypeAnnotation(_215e81210_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b2341e:;
		if (it != expr_end) {
			jule::Ptr<_215eb8bc6_InsGeneric> _89016_g = *it;
			{
				if ((_89016_g == nullptr)) {
					_215e81a7e_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_209b2341e:;
			++it;
			goto _iter_begin_209b2341e;
		}
		_iter_end_209b2341e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _215e835ca_check(_215e81210_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_215dcdb41_ParamIns>> _90017_params = _215e81ce3_getParams(_self_);;
	__jule_func_result=_215e82101_checkCounts(_self_, &(_90017_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_215e830be_checkArgs(_self_, &(_90017_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_215e83355_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e81210_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _215e84125_pushErr(_215e83b19_structLitChecker* _self_, jule::Ptr<_22e0aa1de_Token> _92126_token, jule::Str _92141_fmt, jule::Slice<jule::Any> _92154_args) {
	_215e914ea_pushErr((*(_self_))._field_e.ptr(), _92126_token, _92141_fmt, _92154_args);
}



inline void _215e84444_pushSugggestion(_215e83b19_structLitChecker* _self_, jule::Str _92634_fmt, jule::Slice<jule::Any> _92647_args) {
	_215e91819_pushSugggestion((*(_self_))._field_e.ptr(), _92634_fmt, _92647_args);
}



inline void _215e8480c_pushMatch(_215e83b19_structLitChecker* _self_, jule::Ptr<_215dc6ebe_FieldIns>* _93033_f, jule::Ptr<_215e8e471_Data>* _93052_d, jule::Ptr<_22e0aa1de_Token>* _93067_errorToken) {
	;
	if (_215e30c3c_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_93033_f)).get()._field_Kind), _93052_d, _93067_errorToken)) {
		_215e2cd27_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_93033_f)).get()._field_Kind), _93052_d, (*(_93067_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_215dc7ca0_StructArgExprModel>(_215dc7ca0_StructArgExprModel{._field_Field=(*(_93033_f)), ._field_Expr=(*(_93052_d)).get()._field_Model}));;
}



inline void _215e84b2b_checkPair(_215e83b19_structLitChecker* _self_, jule::Ptr<_215db4572_FieldExprPair>* _94333_pair, jule::Slice<jule::Ptr<_215daeb11_Expr>>* _94360_exprs) {
	jule::Ptr<_215dc6ebe_FieldIns> _94517_f = _215d84256_FindField((*(_self_))._field_s.ptr(), (*(_94333_pair)).get()._field_Field.get()._field_Kind);;
	if ((_94517_f == nullptr)) {
		_215e84125_pushErr(_self_, (*(_94333_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_94333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _94517_f.get()._field_Decl.get()._field_Public, _94517_f.get()._field_Decl.get()._field_Token)))) {
		_215e84125_pushErr(_self_, (*(_94333_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_94333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_215e84444_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _94360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b2cb10:;
		if (it != expr_end) {
			jule::Ptr<_215daeb11_Expr> _95721_expr = *it;
			{
				{
					auto &_match_expr{ _95721_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_209b2d47e:;
						{
							jule::Ptr<_215db4572_FieldExprPair> _96025_dpair = _95721_expr.get()._field_Kind.cast_ptr<_215db4572_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_94333_pair)) == _96025_dpair)) {
									_case_begin_209b2e42a:;
									{
										goto _iter_end_209b2cb10;
									}
								}
								else if (((*(_94333_pair)).get()._field_Field.get()._field_Kind == _96025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_209b2e4a2:;
									{
										_215e84125_pushErr(_self_, (*(_94333_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_94333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_209b2cb10;
									}
								}
								_match_end_209b2e370:;
							};
						}
					}
					_match_end_209b2d2c5:;
				};
			}
			_iter_next_209b2cb10:;
			++it;
			goto _iter_begin_209b2cb10;
		}
		_iter_end_209b2cb10:;
	};
	jule::Ptr<_215eba403_TypeKind> _97117_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_97117_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_94517_f.get()._field_Kind;
	jule::Ptr<_215e8e471_Data> _97517_d = _215eab2e5_evalExprKind((*(_self_))._field_e, (*(_94333_pair)).get()._field_Expr.get()._field_Kind);;
	if ((_97517_d == nullptr)) {
		return;;
	};
	_215e8480c_pushMatch(_self_, &(_94517_f), &(_97517_d), &((*(_94333_pair)).get()._field_Field));
}



inline jule::Bool _215e84e39_readyExprs(_215e83b19_structLitChecker* _self_, jule::Slice<jule::Ptr<_215daeb11_Expr>>* _98234_exprs) {
	jule::Bool _98317_ok = true;;
	{
		auto expr = _98234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b32bae:;
		if (it != expr_end) {
			jule::I64 _98414_i = it - expr->begin();
			jule::Ptr<_215daeb11_Expr> _98421_expr = *it;
			{
				{
					auto &_match_expr{ _98421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_209b33907:;
						{
							jule::Ptr<_215db5a18_KeyValPair> _98725_pair = _98421_expr.get()._field_Kind.cast_ptr<_215db5a18_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _98725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_209b35464:;
									{
										goto _match_end_209b346c7;
									}
								}
								else {
									_case_begin_209b3494c:;
									{
										_215e84125_pushErr(_self_, _98725_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_98317_ok=false;
										goto _iter_next_209b32bae;
									}
								}
								_match_end_209b346c7:;
							};
							(*(_98234_exprs))[_98414_i].get()._field_Kind=jule::Any(jule::new_ptr<_215db4572_FieldExprPair>(_215db4572_FieldExprPair{._field_Field=_98725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98725_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_209b3374d:;
				};
			}
			_iter_next_209b32bae:;
			++it;
			_98414_i++;
			goto _iter_begin_209b32bae;
		}
		_iter_end_209b32bae:;
	};
	return _98317_ok;;
}



inline void _215e851ae_check(_215e83b19_structLitChecker* _self_, jule::Slice<jule::Ptr<_215daeb11_Expr>>* _100629_exprs) {
	if (((*(_100629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_215e84e39_readyExprs(_self_, _100629_exprs)))) {
		return;;
	};
	jule::Bool _101317_paired = false;;
	{
		auto expr = _100629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b33693:;
		if (it != expr_end) {
			jule::I64 _101414_i = it - expr->begin();
			jule::Ptr<_215daeb11_Expr> _101421_expr = *it;
			{
				{
					auto &_match_expr{ _101421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_209b3c12a:;
						{
							jule::Ptr<_215db4572_FieldExprPair> _101725_pair = _101421_expr.get()._field_Kind.cast_ptr<_215db4572_FieldExprPair>(&__jule_any_type84);;
							if (((_101414_i > 0LL) && (!(_101317_paired)))) {
								_215e84125_pushErr(_self_, _101725_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_101317_paired=true;
							_215e84b2b_checkPair(_self_, &(_101725_pair), _100629_exprs);
						}
					}
					else {
						_case_begin_209b37994:;
						{
							if (_101317_paired) {
								_215e84125_pushErr(_self_, _101421_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_101414_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_215e84125_pushErr(_self_, _101421_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_209b33693;
							};
							jule::Ptr<_215dc6ebe_FieldIns> _103225_field = (*(_self_))._field_s.get()._field_Fields[_101414_i];;
							if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _103225_field.get()._field_Decl.get()._field_Public, _103225_field.get()._field_Decl.get()._field_Token)))) {
								_215e84125_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_215e84444_pushSugggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_215eba403_TypeKind> _104025_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_104025_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_103225_field.get()._field_Kind;
							jule::Ptr<_215e8e471_Data> _104425_d = _215eab2e5_evalExprKind((*(_self_))._field_e, _101421_expr.get()._field_Kind);;
							if ((_104425_d == nullptr)) {
								goto _iter_next_209b33693;
							};
							_215e8480c_pushMatch(_self_, &(_103225_field), &(_104425_d), &(_101421_expr.get()._field_Token));
						}
					}
					_match_end_209b3781d:;
				};
			}
			_iter_next_209b33693:;
			++it;
			_101414_i++;
			goto _iter_begin_209b33693;
		}
		_iter_end_209b33693:;
	};
	if ((!(_101317_paired))) {
		jule::I64 _105517_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _105621_diff = (_105517_n - (*(_100629_exprs)).len());;
		{
			
			if ((_105621_diff <= 0LL)) {
				_case_begin_209b3eeda:;
				{
					return;;
				}
			}
			_match_end_209b3edb9:;
		};
		jule::Str _106221_idents = jule::Str();;
		for (; (_105621_diff > 0LL); (_105621_diff)--) {
			{
				_106221_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_105517_n - _105621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_209b408d1:;
		}
		_iter_end_209b408d1:;;
		(_106221_idents).mut_slice(2LL);;
		_215e84125_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_106221_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215e83b19_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215e41aa5_Var> _215e85b93_buildVar(_215e856ed_rangeChecker* _self_, jule::Ptr<_215dbd04d_VarDecl>* _108128_decl) {
	jule::Ptr<_215e41aa5_Var> _108217_v = _215dd76a5_buildVar((*(_108128_decl)));;
	return _108217_v;;
}



inline void _215e85d6e_setSizeKey(_215e856ed_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _22e0ac983_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_215e85b93_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_209b443b8:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_215e40a60_IterRelation>(_215e40a60_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8)});
			}
		}
		_match_end_209b44363:;
	};
}



inline void _215e86237_checkRangeExprValidity(_215e856ed_rangeChecker* _self_, jule::Ptr<_215e8e471_Data>* _111246_d, jule::Ptr<_215e41aa5_Var>* _111257_key, jule::Ptr<_215eba403_TypeKind>* _111273_k) {
	jule::Bool _111317__mut = (*(_111257_key)).get()._field_Mutable;;
	if ((_111317__mut && (!(_215ebba75_Mutable((*(_111273_k)).ptr()))))) {
		_111317__mut=false;
	};
	_215e30c3c_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _111317__mut, (*(_111257_key)).get()._field_Reference, &((*(_111257_key)).get()._field_Kind.get()._field_Kind), _111246_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _215e86413_checkSlice(_215e856ed_rangeChecker* _self_) {
	_215e85d6e_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22e0ac983_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_215ec4341_Slc> _113117_slc = _215ebd714_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_215e85b93_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_113117_slc.get()._field_Elem});
	_215e86237_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_113117_slc.get()._field_Elem));
}



inline void _215e865de_checkArray(_215e856ed_rangeChecker* _self_) {
	_215e85d6e_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22e0ac983_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_215ec64db_Arr> _114417_arr = _215ebd4a0_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_215e85b93_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_114417_arr.get()._field_Elem});
	_215e86237_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_114417_arr.get()._field_Elem));
}



inline void _215e867ba_checkMapKeyA(_215e856ed_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _22e0ac983_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_215ec58e7_Map> _115617_m = _215ebe1b5_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_215e85b93_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_115617_m.get()._field_Key});
	jule::Ptr<_215e8e471_Data> _116017_d = jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d)));;
	_116017_d.get()._field_Kind=_115617_m.get()._field_Key;
	_215e86237_checkRangeExprValidity(_self_, &(_116017_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_115617_m.get()._field_Key));
}



inline void _215e86996_checkMapKeyB(_215e856ed_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22e0ac983_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_215ec58e7_Map> _117117_m = _215ebe1b5_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_215e85b93_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_117117_m.get()._field_Val});
	jule::Ptr<_215e8e471_Data> _117517_d = jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d)));;
	_117517_d.get()._field_Kind=_117117_m.get()._field_Val;
	_215e86237_checkRangeExprValidity(_self_, &(_117517_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_117117_m.get()._field_Val));
}



inline void _215e86b72_checkMap(_215e856ed_rangeChecker* _self_) {
	_215e867ba_checkMapKeyA(_self_);
	_215e86996_checkMapKeyB(_self_);
}



inline void _215e86d4d_checkStr(_215e856ed_rangeChecker* _self_) {
	_215e85d6e_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22e0ac983_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_215e85b93_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _215e870b2_check(_215e856ed_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_209b57123:;
		}
		else if ((_215ebd714_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209b56a18:;
			{
				_215e86413_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_215ebd4a0_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209b56a7e:;
			{
				_215e865de_checkArray(_self_);
				return true;;
			}
		}
		else if ((_215ebe1b5_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209b56ae5:;
			{
				_215e86b72_checkMap(_self_);
				return true;;
			}
		}
		else {
			_case_begin_209b569a2:;
			{
				jule::Ptr<_215ec0150_Prim> _121317_prim = _215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_121317_prim != nullptr) && _215ec3384_IsStr(_121317_prim.ptr()))) {
					_215e86d4d_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_209b568d6:;
	};
	_215e25e41_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e856ed_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _215e87c2d_prepareTypes(_215e87788_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_215dd0b32_Types((*(_self_))._field_f.ptr());
	};
}



inline void _215e87ea3_prepareExprs(_215e87788_retTypeChecker* _self_, jule::Ptr<_215daeb11_Expr>* _124136_e) {
	if (((*(_124136_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_124136_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_209b5c14a:;
			{
				(*(_self_))._field_exprs=(*(_124136_e)).get()._field_Kind.cast_ptr<_215db078d_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_209b5c348:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_124136_e)));;
			}
		}
		_match_end_209b5be80:;
	};
}



inline void _215e8817e_checkExprs(_215e87788_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_215e8e471_Data>> _125717_datas = jule::Slice<jule::Ptr<_215e8e471_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b5dcea:;
		if (it != expr_end) {
			jule::I64 _125814_i = it - expr->begin();
			jule::Ptr<_215daeb11_Expr> _125821_expr = *it;
			{
				if ((_125814_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_209b5dcea;
				};
				jule::Ptr<_215eba403_TypeKind> _126321_t = (*(_self_))._field_types[_125814_i];;
				jule::Ptr<_215e8e471_Data> _126521_d = _215eab911_evalExpr(_215e2c51e_evalp((*(_self_))._field_sc.get()._field_s, jule::Trait<_215ed6375_Lookup>((*(_self_))._field_sc, 0), _126321_t), _125821_expr);;
				if ((_126521_d == nullptr)) {
					goto _iter_next_209b5dcea;
				};
				_125717_datas = jule::alloc_for_append(_125717_datas,1);_125717_datas.__push(_126521_d);;
				if (((!(_126521_d.get()._field_Mutable)) && _215ebba75_Mutable(_126521_d.get()._field_Kind.ptr()))) {
					_215e25e41_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_215e79d63_assignTypeChecker _127721_ac = _215e79d63_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_126321_t, ._field_d=_126521_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_215e7aeda_check(&_127721_ac);
			}
			_iter_next_209b5dcea:;
			++it;
			_125814_i++;
			goto _iter_begin_209b5dcea;
		}
		_iter_end_209b5dcea:;
	};
	if ((_125717_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_215dca27a_TupleExprModel>(_215dca27a_TupleExprModel{._field_Datas=_125717_datas}), &__jule_any_type88);
	} else if ((_125717_datas.len() == 1LL)) {
		(*(_self_))._field_model=_125717_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _215e8848c_check(_215e87788_retTypeChecker* _self_, jule::Ptr<_215daeb11_Expr>* _129629_e) {
	_215e87c2d_prepareTypes(_self_);
	_215e87ea3_prepareExprs(_self_, _129629_e);
	jule::I64 _130013_n = (*(_self_))._field_exprs.len();;
	if (((_130013_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_215da0393_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_215e25e41_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_130013_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _215d7ce64_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_215e25e41_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_130013_n > (*(_self_))._field_types.len())) {
		_215e25e41_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_130013_n < (*(_self_))._field_types.len())) {
		_215e25e41_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_215e8817e_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e87788_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e89b64_FindPackage(_215e89647_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b6a06a:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_209b6a06a:;
			++it;
			goto _iter_begin_209b6a06a;
		}
		_iter_end_209b6a06a:;
	};
	return nullptr;;
}



inline jule::Ptr<_215e1a133_ImportInfo> _215e89e72_SelectPackage(_215e89647_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b6b0e3:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_209b6b0e3:;
			++it;
			goto _iter_begin_209b6b0e3;
		}
		_iter_end_209b6b0e3:;
	};
	return nullptr;;
}



inline jule::Ptr<_215e41aa5_Var> _215e8a329_FindVar(_215e89647_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _215e8bddb_findVar(_self_, _5226_ident, _5238_cppLinked, false);;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e8a6d1_FindTypeAlias(_215e89647_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _215e8c33c_findTypeAlias(_self_, _5832_ident, _5844_cppLinked, false);;
}



inline jule::Ptr<_215dc6cd2_Struct> _215e8aa88_FindStruct(_215e89647_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b6d821:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_209b6d821:;
			++it;
			goto _iter_begin_209b6d821;
		}
		_iter_end_209b6d821:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dcd24a_Fn> _215e8ae40_FindFn(_215e89647_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b6ec1d:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_209b6ec1d:;
			++it;
			goto _iter_begin_209b6ec1d;
		}
		_iter_end_209b6ec1d:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dddc1c_Trait> _215e8b24d_FindTrait(_215e89647_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b70dd9:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_209b70dd9:;
			++it;
			goto _iter_begin_209b70dd9;
		}
		_iter_end_209b70dd9:;
	};
	return nullptr;;
}



inline jule::Ptr<_215de0d62_Enum> _215e8b55b_FindEnum(_215e89647_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b71cb9:;
		if (it != expr_end) {
			jule::Ptr<_215de0d62_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_209b71cb9:;
			++it;
			goto _iter_begin_209b71cb9;
		}
		_iter_end_209b71cb9:;
	};
	return nullptr;;
}



inline jule::Ptr<_215de245c_TypeEnum> _215e8b869_FindTypeEnum(_215e89647_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b72b99:;
		if (it != expr_end) {
			jule::Ptr<_215de245c_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_209b72b99:;
			++it;
			goto _iter_begin_209b72b99;
		}
		_iter_end_209b72b99:;
	};
	return nullptr;;
}



inline jule::Ptr<_215e41aa5_Var> _215e8bddb_findVar(_215e89647_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_215e41aa5_Var> _12325_v = (*(_self_))._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_209b74b68:;
		}
		_iter_end_209b74b68:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_209b746d4:;
			if (it != expr_end) {
				jule::Ptr<_215e41aa5_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_209b746d4:;
				++it;
				goto _iter_begin_209b746d4;
			}
			_iter_end_209b746d4:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e8c33c_findTypeAlias(_215e89647_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_215eb9710_TypeAlias> _14225_ta = (*(_self_))._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_209b77c8c:;
		}
		_iter_end_209b77c8c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_209b77808:;
			if (it != expr_end) {
				jule::Ptr<_215eb9710_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_209b77808:;
				++it;
				goto _iter_begin_209b77808;
			}
			_iter_end_209b77808:;
		};
	};
	return nullptr;;
}



inline jule::Any _215e8c6e4_defByIdent(_215e89647_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b7a047:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type8);;
				};
			}
			_iter_next_209b7a047:;
			++it;
			goto _iter_begin_209b7a047;
		}
		_iter_end_209b7a047:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b795a7:;
		if (it != expr_end) {
			jule::Ptr<_215eb9710_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type67);;
				};
			}
			_iter_next_209b795a7:;
			++it;
			goto _iter_begin_209b795a7;
		}
		_iter_end_209b795a7:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b7ade4:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type66);;
				};
			}
			_iter_next_209b7ade4:;
			++it;
			goto _iter_begin_209b7ade4;
		}
		_iter_end_209b7ade4:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b7c5cc:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type65);;
				};
			}
			_iter_next_209b7c5cc:;
			++it;
			goto _iter_begin_209b7c5cc;
		}
		_iter_end_209b7c5cc:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b7da40:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type10);;
				};
			}
			_iter_next_209b7da40:;
			++it;
			goto _iter_begin_209b7da40;
		}
		_iter_end_209b7da40:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b7e7bb:;
		if (it != expr_end) {
			jule::Ptr<_215de0d62_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type68);;
				};
			}
			_iter_next_209b7e7bb:;
			++it;
			goto _iter_begin_209b7e7bb;
		}
		_iter_end_209b7e7bb:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b8016d:;
		if (it != expr_end) {
			jule::Ptr<_215de245c_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type69);;
				};
			}
			_iter_next_209b8016d:;
			++it;
			goto _iter_begin_209b8016d;
		}
		_iter_end_209b8016d:;
	};
	return nullptr;;
}



inline jule::Bool _215e8cb45_isDuplicatedIdent(_215e89647_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b80de9:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> *_21316_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21316_v))) != _21232_itself) && ((*(_21316_v)).get()._field_Ident == _21249_ident)) && ((*(_21316_v)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_209b80de9:;
			++it;
			goto _iter_begin_209b80de9;
		}
		_iter_end_209b80de9:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b80da5:;
		if (it != expr_end) {
			jule::Ptr<_215eb9710_TypeAlias> *_21916_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21916_ta))) != _21232_itself) && ((*(_21916_ta)).get()._field_Ident == _21249_ident)) && ((*(_21916_ta)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_209b80da5:;
			++it;
			goto _iter_begin_209b80da5;
		}
		_iter_end_209b80da5:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b81db7:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> *_22516_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22516_s))) != _21232_itself) && ((*(_22516_s)).get()._field_Ident == _21249_ident)) && ((*(_22516_s)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_209b81db7:;
			++it;
			goto _iter_begin_209b81db7;
		}
		_iter_end_209b81db7:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b83517:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> *_23116_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_23116_f))) != _21232_itself) && ((*(_23116_f)).get()._field_Ident == _21249_ident)) && ((*(_23116_f)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_209b83517:;
			++it;
			goto _iter_begin_209b83517;
		}
		_iter_end_209b83517:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b8597b:;
		if (it != expr_end) {
			jule::Ptr<_215dddc1c_Trait> *_24116_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24116_t))) != _21232_itself) && ((*(_24116_t)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_209b8597b:;
			++it;
			goto _iter_begin_209b8597b;
		}
		_iter_end_209b8597b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b86053:;
		if (it != expr_end) {
			jule::Ptr<_215de0d62_Enum> *_24716_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24716_e))) != _21232_itself) && ((*(_24716_e)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_209b86053:;
			++it;
			goto _iter_begin_209b86053;
		}
		_iter_end_209b86053:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b87252:;
		if (it != expr_end) {
			jule::Ptr<_215de245c_TypeEnum> *_25316_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25316_te))) != _21232_itself) && ((*(_25316_te)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_209b87252:;
			++it;
			goto _iter_begin_209b87252;
		}
		_iter_end_209b87252:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _215e89647_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _215e8e85b_IsNil(_215e8e471_Data* _self_) {
	return _215ebb338_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _215e8eac0_IsVoid(_215e8e471_Data* _self_) {
	return _215ebb59c_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _215e8ed34_IsConst(_215e8e471_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _215e90142_GoodOperand(_215e8e471_Data* _self_, jule::Ptr<_215e8e471_Data>* _10031_other) {
	if ((_215ebd23b_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_215ebc78a_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_215ec35e8_IsAny(_215ebc78a_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_215ebde51_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_215ebb338_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _215e8e471_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215e904e9_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _215e914ea_pushErr(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_215e25e41_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _215e91819_pushSugggestion(_215e90ede_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_215e26260_pushSugggestion((*(_self_))._field_s.ptr(), _13634_fmt, _13647_args);
}



inline void _215e919e5_allowBuiltin(_215e90ede_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _215e91bc1_disallowBuiltin(_215e90ede_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _215e91e35_isUnsafe(_215e90ede_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _215e92199_isGlobal(_215e90ede_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_209bb6d64:;
			{
				return true;;
			}
		}
		else {
			_case_begin_209bb6270:;
			{
				return false;;
			}
		}
		_match_end_209bb67e2:;
	};
}



inline jule::Bool _215e92474_applyNumericPrefix(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_215e8ed34_IsConst((*(_16342_d)).ptr())))) || (_215ebc78a_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_215ec0150_Prim> _17013_prim = _215ebc78a_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_214703005_IsFloat(_215ec04b3_Str(_17013_prim.ptr()))) {
			_case_begin_209bb9075:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>((*((*(_self_))._field_prefix)));
				_214705018_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_21470490d_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_214702b5e_IsSigInt(_215ec04b3_Str(_17013_prim.ptr()))) {
			_case_begin_209bb90db:;
			{
				if ((!(_215e76d82_sigAssignable(_215ec04b3_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>((*((*(_self_))._field_prefix)));
				_214704a40_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_214702c91_IsUnsigInt(_215ec04b3_Str(_17013_prim.ptr()))) {
			_case_begin_209bb9152:;
			{
				if ((!(_215e76eb4_unsigAssignable(_215ec04b3_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>((*((*(_self_))._field_prefix)));
				_214704b72_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_209bb8d55:;
	};
	return true;;
}



inline jule::Ptr<_215e8e471_Data> _215e926d8_litNil(_215e90ede_Eval* _self_) {
	jule::Ptr<_21470339b_Const> _20217_constant = static__214703b93_NewNil();;
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type47), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_215e8e471_Data> _215e929e6_litStr(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_22e0ab542_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_215e77118_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_215e77415_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_21470339b_Const> _21817_constant = static__21470392e_NewStr(_21217_s);;
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type47), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_215e8e471_Data> _215e92d04_litBool(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr>* _23023_l) {
	jule::Ptr<_21470339b_Const> _23117_constant = static__2147037ec_NewBool((*(_23023_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type47), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_215e8e471_Data> _215e93112_litRune(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _215e5a272_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_215e8e471_Data> _24917_data = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Constant=static__214703588_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _215e5a0eb_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_215dcc5bd_RuneExprModel>(_215dcc5bd_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type89);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_215e8e471_Data> _215e93420_litFloat(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _2146e9e97_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_21470339b_Const> _27417_constant = static__214703a61_NewF64(_27313_f);;
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type47), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_215e8e471_Data> _215e9372d_litInt(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I64 _29017_base = 0LL;;
	{
		
		if (_22db524c3_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_209bca96b:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_22db524c3_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_209bca9d2:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_22db524c3_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_209bca680:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_209bca6e6:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_209bca619:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_209bca5a3:;
	};
	jule::Ptr<_215e8e471_Data> _31017_d = jule::new_ptr<_215e8e471_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _21352bda7_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__214703588_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _2142cbb23_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_215e914ea_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_215e91819_pushSugggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__2147036ba_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type47);
	if ((!(_215e92474_applyNumericPrefix(_self_, &(_31017_d))))) {
		_215eb5145_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_215e8e471_Data> _215e93a3b_litNum(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr>* _34626_l) {
	{
		
		if (_22e0ac19c_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_209bd3ab7:;
			{
				return _215e93420_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_209bd33be:;
			{
				return _215e9372d_litInt(_self_, _34626_l);;
			}
		}
		_match_end_209bd3303:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215e93d49_evalLit(_215e90ede_Eval* _self_, jule::Ptr<_215db0b45_LitExpr> _35526_lit) {
	{
		
		if (_215db0e97_IsNil(_35526_lit.ptr())) {
			_case_begin_209bd4bc8:;
			{
				return _215e926d8_litNil(_self_);;
			}
		}
		else if (_22e0ab29a_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_209bd4601:;
			{
				return _215e929e6_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_22e0abe05_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_209bd4678:;
			{
				return _215e92d04_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_22e0ab7d9_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_209bd4700:;
			{
				return _215e93112_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_22e0ac444_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_209bd48ed:;
			{
				return _215e93a3b_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_209bd4117:;
			{
				return nullptr;;
			}
		}
		_match_end_209bd404b:;
	};
}



inline jule::Any _215e94157_findBuiltins(_215e90ede_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_209bd6b42:;
			{
				jule::Any _37521_def = _215eb4e36_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_215e1a133_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_209bd70a4:;
			{
				jule::Any _38021_def = _215eb5ac4_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_215e2327e_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_209bd711a:;
			{
				jule::Any _38521_def = _215eb5ac4_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_209bd63a0:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _21610bba4_findBuiltinDef(_37231_ident);;
}



inline jule::Any _215e9450e_getDef(_215e90ede_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_215e41aa5_Var> _40117_v = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed4be2_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_215eb9710_TypeAlias> _40617_ta = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5099_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_215de0d62_Enum> _41221_enm = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5e24_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_215de245c_TypeEnum> _41721_tenm = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed6232_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_215dcd24a_Fn> _42317_f = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5808_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_215dc6cd2_Struct> _42817_s = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5451_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _215e94157_findBuiltins(_self_, _39625_ident);;
}



inline void _209bed296_pushReference(_215e90ede_Eval* _self_, jule::Ptr<_215dcea10_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_209c029d7:;
			{
				jule::Ptr<_215e03490_scopeChecker> _43921_sc = _215e0684a_getHardRoot((*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0));;
				if ((!(_209c00908_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_215dd35d5_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_209bee64e:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_209c00908_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_215dd35d5_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_209bee5e9:;
	};
}

inline void _209c1208a_pushReference(_215e90ede_Eval* _self_, jule::Ptr<_215e41aa5_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_209c1659a:;
			{
				jule::Ptr<_215e03490_scopeChecker> _43921_sc = _215e0684a_getHardRoot((*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0));;
				if ((!(_209c14664_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_215dd35d5_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_209c133aa:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_209c14664_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_215dd35d5_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_209c13355:;
	};
}

inline void _209ca73d8_pushReference(_215e90ede_Eval* _self_, jule::Ptr<_215dc71ab_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_209ca8571:;
			{
				jule::Ptr<_215e03490_scopeChecker> _43921_sc = _215e0684a_getHardRoot((*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0));;
				if ((!(_209ca9aa0_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_215dd35d5_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_209ca87e6:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_209ca9aa0_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_215dd35d5_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_209ca8791:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215e94a92__evalEnum(_215e90ede_Eval* _self_, jule::Ptr<_215de0d62_Enum> _45028_enm) {
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_45028_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_215e8e471_Data> _215e94e49_evalEnum(_215e90ede_Eval* _self_, jule::Ptr<_215de0d62_Enum> _45931_enm, jule::Ptr<_22e0aa1de_Token> _45943_errorToken) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _45931_enm.get()._field_Public, _45931_enm.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _45943_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_45931_enm.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _215e94a92__evalEnum(_self_, _45931_enm);;
}



inline jule::Ptr<_215e8e471_Data> _215e95257__evalTypeEnum(_215e90ede_Eval* _self_, jule::Ptr<_215de245c_TypeEnum> _46832_enm) {
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_46832_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_215e8e471_Data> _215e9560e_evalTypeEnum(_215e90ede_Eval* _self_, jule::Ptr<_215de245c_TypeEnum> _47735_enm, jule::Ptr<_22e0aa1de_Token> _47751_errorToken) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _47735_enm.get()._field_Public, _47735_enm.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _47751_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_47735_enm.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _215e95257__evalTypeEnum(_self_, _47735_enm);;
}



inline jule::Ptr<_215e8e471_Data> _215e9591c__evalStruct(_215e90ede_Eval* _self_, jule::Ptr<_215dc71ab_StructIns> _48630_s) {
	jule::Ptr<_215e8e471_Data> _48717_d = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_48630_s, 0)}), ._field_Model=jule::Any(_48630_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48630_s.get()._field_Decl != nullptr) && _48630_s.get()._field_Decl.get()._field_CppLinked)) {
		_48717_d.get()._field_Kind.get()._field_CppIdent=_48630_s.get()._field_Decl.get()._field_Ident;
	};
	return _48717_d;;
}



inline jule::Ptr<_215e8e471_Data> _215e95cc4_evalStruct(_215e90ede_Eval* _self_, jule::Ptr<_215dc71ab_StructIns> _50033_s, jule::Ptr<_22e0aa1de_Token> _50048_errorToken) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _50033_s.get()._field_Decl.get()._field_Public, _50033_s.get()._field_Decl.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _50048_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50033_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_215e96401_checkDeprecated(_self_, &(_50033_s.get()._field_Decl.get()._field_Directives), _50048_errorToken);
	return _215e9591c__evalStruct(_self_, _50033_s);;
}



inline jule::Ptr<_215e8e471_Data> _215e960d2_evalFnIns(_215e90ede_Eval* _self_, jule::Ptr<_215dcea10_FnIns> _51028_f) {
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_51028_f, 1)}), ._field_Model=jule::Any(_51028_f, &__jule_any_type7), });;
}



inline void _215e96401_checkDeprecated(_215e90ede_Eval* _self_, jule::Slice<jule::Ptr<_215d77348_Directive>>* _51939_directives, jule::Ptr<_22e0aa1de_Token> _51970_tok) {
	if (_215e91e35_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_215d77348_Directive> _52413_d = _215eb4aa1_findDirective(_51939_directives, jule::Str("deprecated", 10));;
	if ((_52413_d != nullptr)) {
		if ((_52413_d.get()._field_Args.len() == 0LL)) {
			_215e914ea_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_215e914ea_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52413_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_215e91819_pushSugggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_215e8e471_Data> _215e967a8_evalFn(_215e90ede_Eval* _self_, jule::Ptr<_215dcd24a_Fn> _53529_f, jule::Ptr<_22e0aa1de_Token> _53537_errorToken) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _53529_f.get()._field_Public, _53529_f.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _53537_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53529_f.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_215e96401_checkDeprecated(_self_, &(_53529_f.get()._field_Directives), _53537_errorToken);
	jule::Ptr<_215dcea10_FnIns> _54417_ins = _215dcd4ae_instance(_53529_f);;
	_209bed296_pushReference(_self_, &(_54417_ins));
	return _215e960d2_evalFnIns(_self_, _54417_ins);;
}



inline void _215e96b71_pushIllegalCycleError(_215e90ede_Eval* _self_, jule::Ptr<_215e41aa5_Var>* _54941_v1, jule::Ptr<_215e41aa5_Var>* _54952_v2, jule::Str* _54967_message) {
	;
	jule::Str _55113_refers_to = _22dbeccdd_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_54941_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_54952_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_54967_message))).buffer.insert(0, (((_22db52d86_Repeat(jule::Str(" ", 1), 4LL) + _55113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _215e97028_checkCrossCycle(_215e90ede_Eval* _self_, jule::Ptr<_215e41aa5_Var>* _55535_v, jule::Str* _55549_message) {
	{
		auto expr = &((*(_55535_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209c05a0c:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> *_55616_d = it;
			{
				if (((*(_55616_d)) == (*(_self_))._field_owner)) {
					_215e96b71_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
				if ((!(_215e97028_checkCrossCycle(_self_, _55616_d, _55549_message)))) {
					_215e96b71_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
			}
			_iter_next_209c05a0c:;
			++it;
			goto _iter_begin_209c05a0c;
		}
		_iter_end_209c05a0c:;
	};
	return true;;
}



inline jule::Bool _215e973d0_checkIllegalCycles(_215e90ede_Eval* _self_, jule::Ptr<_215e41aa5_Var>* _57442_v, jule::Ptr<_22e0aa1de_Token> _57451_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57442_v)))) {
		_215e914ea_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58617_message = jule::Str();;
	if ((!(_215e97028_checkCrossCycle(_self_, _57442_v, &(_58617_message))))) {
		jule::Str _58921_errMsg = _58617_message;;
		_58617_message=jule::Str();
		_215e96b71_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57442_v, &(_58617_message));
		_58921_errMsg+=_58617_message;
		_215e914ea_pushErr(_self_, _57451_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_58921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57442_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_215e8e471_Data> _215e97787_evalVar(_215e90ede_Eval* _self_, jule::Ptr<_215e41aa5_Var> _60130_v, jule::Ptr<_22e0aa1de_Token> _60139_errorToken) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _60130_v.get()._field_Public, _60130_v.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _60139_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_215e96401_checkDeprecated(_self_, &(_60130_v.get()._field_Directives), _60139_errorToken);
	_60130_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_209c0cd44:;
			{
				jule::Bool _61517_ok = _215e973d0_checkIllegalCycles(_self_, &(_60130_v), _60139_errorToken);;
				if ((!(_61517_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_209c0cdee:;
			{
				if (((!(_60130_v.get()._field_Reference)) || _215e91e35_isUnsafe(_self_))) {
					goto _match_end_209c0ccde;
				};
				jule::Ptr<_215e03490_scopeChecker> _62321_s = (*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0);;
				while (((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr))) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_209c10011:;
				}
				_iter_end_209c10011:;;
				if ((((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_Anon) && (_60130_v.get()._field_Scope != _62321_s.get()._field_owner.get()._field_Scope))) {
					_215e914ea_pushErr(_self_, _60139_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_209c0ccde:;
	};
	if ((_60130_v.get()._field_Scope == nullptr)) {
		_209c1208a_pushReference(_self_, &(_60130_v));
	};
	if (((!(_60130_v.get()._field_CppLinked)) && ((_60130_v.get()._field_Value == nullptr) || (_60130_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60130_v.get()._field_Constant) {
			_215e3954d_checkTypeVar((*(_self_))._field_s, &(_60130_v), jule::Trait<_215ed6375_Lookup>((*(_self_))._field_s, 3));
			if ((_60130_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60130_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_215e3954d_checkTypeVar((*(_self_))._field_s, &(_60130_v), (*(_self_))._field_lookup);
		if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_215e8e471_Data> _66617_d = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_60130_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60130_v.get()._field_Mutable, ._field_Reference=_60130_v.get()._field_Reference, ._field_Lvalue=(!(_60130_v.get()._field_Constant)), ._field_Model=jule::Any(_60130_v, &__jule_any_type8), });;
	if ((((!(_60130_v.get()._field_CppLinked)) && _215e41e6d_IsInitialized(_60130_v.ptr())) && (_60130_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66617_d.get()._field_IsRune=_60130_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60130_v.get()._field_Constant && (_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66617_d.get()._field_Constant=jule::new_ptr<_21470339b_Const>((*(_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66617_d.get()._field_Model=jule::Any(_66617_d.get()._field_Constant, &__jule_any_type47);
		if (_215e42446_untypedConstant(_60130_v.ptr())) {
			_215e92474_applyNumericPrefix(_self_, &(_66617_d));
			_66617_d.get()._field_untyped=true;
		};
	};
	return _66617_d;;
}



inline jule::Ptr<_215e8e471_Data> _215e97b3e_evalTypeAlias(_215e90ede_Eval* _self_, jule::Ptr<_215eb9710_TypeAlias> _69036_ta, jule::Ptr<_22e0aa1de_Token> _69052_errorToken) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _69036_ta.get()._field_Public, _69036_ta.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _69052_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69036_ta.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69036_ta.get()._field_Used=true;
	jule::Trait<_215eb9ec4_Kind> _69917_kind = _69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_215e8e471_Data> _70017_d = nullptr;;
	{
		auto &_match_expr{ _69917_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_209c231ab:;
			{
				_70017_d=_215e9591c__evalStruct(_self_, _69917_kind.cast_ptr<_215dc71ab_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_209c21c8c:;
			{
				_70017_d=_215e94a92__evalEnum(_self_, _69917_kind.cast_ptr<_215de0d62_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_209c21d03:;
			{
				_70017_d=_215e95257__evalTypeEnum(_self_, _69917_kind.cast_ptr<_215de245c_TypeEnum>(4));
			}
		}
		else {
			_case_begin_209c21b6b:;
			{
				_70017_d=jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69036_ta.get()._field_CppLinked) {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Ident;
				} else {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70017_d.get()._field_Model=jule::Any(_70017_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_209c21b16:;
	};
	_70017_d.get()._field_Kind.get()._field_Generic=_69036_ta.get()._field_Generic;
	return _70017_d;;
}



inline jule::Ptr<_215e8e471_Data> _215e97ee6_evalDef(_215e90ede_Eval* _self_, jule::Any _72630_def, jule::Ptr<_22e0aa1de_Token> _72640_ident) {
	{
		auto &_match_expr{ _72630_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_209c25ac6:;
			{
				return _215e97787_evalVar(_self_, _72630_def.cast_ptr<_215e41aa5_Var>(&__jule_any_type8), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_209c25b3c:;
			{
				return _215e94e49_evalEnum(_self_, _72630_def.cast_ptr<_215de0d62_Enum>(&__jule_any_type68), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_209c25ba3:;
			{
				return _215e9560e_evalTypeEnum(_self_, _72630_def.cast_ptr<_215de245c_TypeEnum>(&__jule_any_type69), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_209c25c2a:;
			{
				return _215e95cc4_evalStruct(_self_, _215d87358_instance(_72630_def.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66)), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_209c25c91:;
			{
				jule::Ptr<_215dcd24a_Fn> _73721_f = _72630_def.cast_ptr<_215dcd24a_Fn>(&__jule_any_type65);;
				if ((!_73721_f.get()._field_Ident.equal("init", 4))) {
					return _215e967a8_evalFn(_self_, _73721_f, _72640_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_209c25d18:;
			{
				return _215e960d2_evalFnIns(_self_, _72630_def.cast_ptr<_215dcea10_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_209c25d90:;
			{
				return _215e97b3e_evalTypeAlias(_self_, _72630_def.cast_ptr<_215eb9710_TypeAlias>(&__jule_any_type67), _72640_ident);;
			}
		}
		_match_end_209c259d8:;
	};
	_215e914ea_pushErr(_self_, _72640_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_72640_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_215e8e471_Data> _215e98304_evalIdent(_215e90ede_Eval* _self_, jule::Ptr<_215db17c2_IdentExpr> _75028_ident) {
	jule::Any _75117_def = _215e9450e_getDef(_self_, _75028_ident.get()._field_Ident, _75028_ident.get()._field_CppLinked);;
	return _215e97ee6_evalDef(_self_, _75117_def, _75028_ident.get()._field_Token);;
}



inline jule::Ptr<_215e8e471_Data> _215e98612_evalUnary(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db1ecb_UnaryExpr> _75533_u) {
	_215eabd84_unaryEval _75617_unary = static__215eac33a_new(_self_);;
	return _215ead5d3_eval(&_75617_unary, _75533_u);;
}



inline jule::Ptr<_215e8e471_Data> _215e98920_evalVariadic(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db2383_VariadicExpr> _76036_v) {
	if ((_76036_v.get()._field_Expr == nullptr)) {
		_215e914ea_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215eba403_TypeKind> _76617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76617_prefix;
	});;
	jule::Ptr<_215e8e471_Data> _77017_d = _215eab2e5_evalExprKind(_self_, _76036_v.get()._field_Expr.get()._field_Kind);;
	if ((_77017_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_215ebc526_Variadicable(_77017_d.get()._field_Kind.ptr())))) {
		_215e914ea_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_77017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_215ec4341_Slc> _78013_slc = _215ebd714_Slc(_77017_d.get()._field_Kind.ptr());;
	_77017_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_CppIdent=_78013_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78013_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78013_slc.get()._field_Elem.get()._field_Kind});
	return _77017_d;;
}



inline jule::Ptr<_215e8e471_Data> _215e98c2d_evalUnsafe(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db134e_UnsafeExpr> _79034_u) {
	jule::Bool _79113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_215e8e471_Data> _79317_d = _215eab2e5_evalExprKind(_self_, _79034_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79113_unsafety;
	return _79317_d;;
}



inline jule::Ptr<_215e8e471_Data> _215e9903b_evalArr(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db6200_SliceExpr> _79831_s) {
	jule::Ptr<_215ec64db_Arr> _80017_pt = _215ebd4a0_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_215ec64db_Arr> _80217_arr = jule::new_ptr<_215ec64db_Arr>(_215ec64db_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80017_pt.get()._field_Elem});;
	jule::Bool _80817_filled = false;;
	if ((_79831_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79831_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_209c34a91:;
				{
					if ((_79831_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_215db2383_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_209c34a3b;
					};
					if (_80017_pt.get()._field_Auto) {
						_215e914ea_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80817_filled=true;
					_79831_s.get()._field_Exprs=_79831_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_209c34a3b:;
		};
	};
	_80217_arr.get()._field_N=static_cast<jule::I64>(_79831_s.get()._field_Exprs.len());
	if ((!(_80017_pt.get()._field_Auto))) {
		if ((_80217_arr.get()._field_N > _80017_pt.get()._field_N)) {
			_215e914ea_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80217_arr.get()._field_N < _80017_pt.get()._field_N)) {
			_80217_arr.get()._field_N=_80017_pt.get()._field_N;
		};
	};
	jule::Ptr<_215dc9bb4_ArrayExprModel> _83717_model = jule::new_ptr<_215dc9bb4_ArrayExprModel>(_215dc9bb4_ArrayExprModel{._field_Kind=_80217_arr, });;
	if (_80817_filled) {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79831_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_215eba403_TypeKind> _84617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80217_arr.get()._field_Elem;
	{
		auto expr = &(_79831_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209c39c2d:;
		if (it != expr_end) {
			jule::Ptr<_215daeb11_Expr> _84821_elem = *it;
			{
				jule::Ptr<_215e8e471_Data> _84921_d = _215eab2e5_evalExprKind(_self_, _84821_elem.get()._field_Kind);;
				if ((_84921_d == nullptr)) {
					goto _iter_next_209c39c2d;
				};
				_215e2cd27_checkAssignType(_self_.get()._field_s, false, &(_80217_arr.get()._field_Elem), &(_84921_d), _79831_s.get()._field_Token);
				_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(_84921_d.get()._field_Model);;
			}
			_iter_next_209c39c2d:;
			++it;
			goto _iter_begin_209c39c2d;
		}
		_iter_end_209c39c2d:;
	};
	_self_.get()._field_prefix=_84617_prefix;
	if (_80817_filled) {
		_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_80217_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83717_model, &__jule_any_type91), });;
}



inline jule::Ptr<_215e8e471_Data> _215e9948c_evalExpSlc(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db6200_SliceExpr> _87334_s, jule::Ptr<_215eba403_TypeKind> _87353_t, jule::Any _87371_first) {
	jule::Ptr<_215ec4341_Slc> _87417_slc = jule::new_ptr<_215ec4341_Slc>(_215ec4341_Slc{._field_Elem=_87353_t});;
	jule::I64 _87817_i = 0LL;;
	jule::Ptr<_215dc8740_SliceExprModel> _87917_model = jule::new_ptr<_215dc8740_SliceExprModel>(_215dc8740_SliceExprModel{._field_ElemKind=_87353_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87334_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87371_first != nullptr)) {
		_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_87371_first);;
		_87817_i=1LL;
	};
	jule::Ptr<_215eba403_TypeKind> _88817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87417_slc.get()._field_Elem;
	{
		auto expr = _87334_s.get()._field_Exprs.slice(_87817_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_209c402c7:;
		if (it != expr_end) {
			jule::Ptr<_215daeb11_Expr> _89021_elem = *it;
			{
				jule::Ptr<_215e8e471_Data> _89121_d = _215eab2e5_evalExprKind(_self_, _89021_elem.get()._field_Kind);;
				if ((_89121_d == nullptr)) {
					goto _iter_next_209c402c7;
				};
				_215e2cd27_checkAssignType(_self_.get()._field_s, false, &(_87417_slc.get()._field_Elem), &(_89121_d), _87334_s.get()._field_Token);
				_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_89121_d.get()._field_Model);;
			}
			_iter_next_209c402c7:;
			++it;
			goto _iter_begin_209c402c7;
		}
		_iter_end_209c402c7:;
	};
	_self_.get()._field_prefix=_88817_prefix;
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_87417_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87917_model, &__jule_any_type83), });;
}



inline jule::Ptr<_215e8e471_Data> _215e9979a_evalSliceExpr(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db6200_SliceExpr> _90937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_215ebd4a0_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_209c42e12:;
				{
					return _215e9903b_evalArr(_self_, _90937_s);;
				}
			}
			else if ((_215ebd714_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_209c42e89:;
				{
					jule::Ptr<_215ec4341_Slc> _91525_pt = _215ebd714_Slc(_self_.get()._field_prefix.ptr());;
					return _215e9948c_evalExpSlc(_self_, _90937_s, _91525_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_209c42d02:;
		};
	};
	jule::Ptr<_215eba403_TypeKind> _92017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90937_s.get()._field_Exprs.len() == 0LL)) {
		_215e914ea_pushErr(_self_.ptr(), _90937_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _92817_firstElem = _215eab2e5_evalExprKind(_self_, _90937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92817_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _93317_d = _215e9948c_evalExpSlc(_self_, _90937_s, _92817_firstElem.get()._field_Kind, _92817_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92017_prefix;
	return _93317_d;;
}



inline void _215e99adb_checkIntegerIndexingByData(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _93950_d, jule::Ptr<_22e0aa1de_Token> _93960_token) {
	jule::Str _94013_err_key = _215eb7048_checkDataForIntegerIndexing(_93950_d);;
	{
		auto &_match_expr{ _94013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_209c4cbdb:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_209c4d1c5:;
			{
				_215e914ea_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_93950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_209c4d060:;
			{
				_215e914ea_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_209c4ce83:;
	};
}



inline void _215e99eb5_indexingPtr(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _95135_d, jule::Ptr<_215e8e471_Data>* _95150_index, jule::Ptr<_215db6a6e_IndexingExpr>* _95165_i) {
	_215e99adb_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	jule::Ptr<_215ec6e48_Ptr> _95417_ptr = _215ebcc63_Ptr((*(_95135_d)).get()._field_Kind.ptr());;
	{
		
		if (_215ec791b_IsUnsafe(_95417_ptr.ptr())) {
			_case_begin_209c50859:;
			{
				_215e914ea_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_215e91e35_isUnsafe(_self_)))) {
			_case_begin_209c508c0:;
			{
				_215e914ea_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_209c50738:;
	};
	(*(_95135_d)).get()._field_Kind=_95417_ptr.get()._field_Elem;
}



inline void _215e9a37d_indexingArr(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _96635_d, jule::Ptr<_215e8e471_Data>* _96650_index, jule::Ptr<_215db6a6e_IndexingExpr>* _96665_i) {
	jule::Ptr<_215ec64db_Arr> _96717_arr = _215ebd4a0_Arr((*(_96635_d)).get()._field_Kind.ptr());;
	(*(_96635_d)).get()._field_Kind=_96717_arr.get()._field_Elem;
	_215e99adb_checkIntegerIndexingByData(_self_, _96650_index, (*(_96665_i)).get()._field_Token);
	if ((_215e8ed34_IsConst((*(_96650_index)).ptr()) && (_21470490d_AsF64((*(_96650_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96717_arr.get()._field_N)))) {
		_215e914ea_pushErr(_self_, (*(_96665_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _215e9a746_indexingSlc(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _97535_d, jule::Ptr<_215e8e471_Data>* _97550_index, jule::Ptr<_215db6a6e_IndexingExpr>* _97565_i) {
	jule::Ptr<_215ec4341_Slc> _97617_slc = _215ebd714_Slc((*(_97535_d)).get()._field_Kind.ptr());;
	(*(_97535_d)).get()._field_Kind=_97617_slc.get()._field_Elem;
	_215e99adb_checkIntegerIndexingByData(_self_, _97550_index, (*(_97565_i)).get()._field_Token);
	if ((!(_215e8ed34_IsConst((*(_97550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97535_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_209c5608a:;
			{
				jule::Ptr<_215dc8740_SliceExprModel> _98621_m = (*(_97535_d)).get()._field_Model.cast_ptr<_215dc8740_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _98717_indx = _21470490d_AsF64((*(_97550_index)).get()._field_Constant.ptr());;
				if ((_98717_indx >= static_cast<jule::F64>(_98621_m.get()._field_Elems.len()))) {
					_215e914ea_pushErr(_self_, (*(_97565_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97535_d)).get()._field_Model=_98621_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_98717_indx))];
					(*(_97535_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_209c56002:;
	};
}



inline void _215e9ab0e_indexingMap(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _99735_d, jule::Ptr<_215e8e471_Data>* _99750_index, jule::Ptr<_215db6a6e_IndexingExpr>* _99769_i) {
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_215ec58e7_Map> _100117_m = _215ebe1b5_Map((*(_99735_d)).get()._field_Kind.ptr());;
	_215e79d63_assignTypeChecker _100217_atc = _215e79d63_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100117_m.get()._field_Key, ._field_d=(*(_99750_index)), ._field_errorToken=(*(_99769_i)).get()._field_Token};;
	_215e7aeda_check(&_100217_atc);
	(*(_99735_d)).get()._field_Kind=_100117_m.get()._field_Val;
}



inline void _215e9aec7_indexingStr(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _101235_d, jule::Ptr<_215e8e471_Data>* _101250_index, jule::Ptr<_215db6a6e_IndexingExpr>* _101265_i) {
	;
	(*(_101235_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u8", 2)), 6)});
	if (((*(_101250_index)) == nullptr)) {
		return;;
	};
	_215e99adb_checkIntegerIndexingByData(_self_, _101250_index, (*(_101265_i)).get()._field_Token);
	if ((!(_215e8ed34_IsConst((*(_101250_index)).ptr())))) {
		(*(_101235_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_215e8ed34_IsConst((*(_101235_d)).ptr())) {
		jule::Ptr<_22e0aa1de_Token> _102817_errorToken = (*(_101265_i)).get()._field_Token;;
		jule::I64 _102917_j = _214704699_AsI64((*(_101250_index)).get()._field_Constant.ptr());;
		jule::Str _103017_s = _214704435_ReadStr((*(_101235_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102917_j) >= _103017_s.len())) {
			_215e914ea_pushErr(_self_, _102817_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_214704b72_SetU64((*(_101235_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103017_s[_102917_j])));
		};
	};
}



inline void _215e9b390_toIndexing(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _103934_d, jule::Ptr<_215e8e471_Data>* _103949_index, jule::Ptr<_215db6a6e_IndexingExpr>* _103968_i) {
	{
		
		if ((_215ebcc63_Ptr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c60a01:;
			{
				_215e99eb5_indexingPtr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_215ebd4a0_Arr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c60a78:;
			{
				_215e9a37d_indexingArr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_215ebd714_Slc((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c60b00:;
			{
				_215e9a746_indexingSlc(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_215ebe1b5_Map((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c60b77:;
			{
				_215e9ab0e_indexingMap(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_215ebc78a_Prim((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c60bee:;
			{
				jule::Ptr<_215ec0150_Prim> _105417_prim = _215ebc78a_Prim((*(_103934_d)).get()._field_Kind.ptr());;
				{
					
					if (_215ec3384_IsStr(_105417_prim.ptr())) {
						_case_begin_209c64b37:;
						{
							_215e9aec7_indexingStr(_self_, _103934_d, _103949_index, _103968_i);
							return;;
						}
					}
					_match_end_209c64a8d:;
				};
			}
		}
		_match_end_209c608ad:;
	};
	_215e914ea_pushErr(_self_, (*(_103968_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_103934_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _215e9b813_pushGenericsFromExprSubIdent(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db3065_SubIdentExpr>* _106453_sexpr, jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>* _106514_generics, jule::Ptr<_215daeb11_Expr>* _106542_expr) {
	jule::Ptr<_215dab305_SubIdentTypeDecl> _106617_t = jule::new_ptr<_215dab305_SubIdentTypeDecl>();;
	if ((!(_215eb7d18_pushSubIdentFromExpr(jule::Any((*(_106453_sexpr)), &__jule_any_type92), &(_106617_t))))) {
		_215e914ea_pushErr(_self_.ptr(), (*(_106542_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106514_generics)) = jule::alloc_for_append((*(_106514_generics)),1);(*(_106514_generics)).__push(jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Kind=jule::Any(_106617_t, &__jule_any_type93)}));;
	return true;;
}



inline jule::Bool _215e9bbcb_pushGenericsFromData(jule::Ptr<_215e90ede_Eval> _self_, jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>* _107545_generics, jule::Ptr<_215daeb11_Expr>* _107573_expr) {
	{
		auto &_match_expr{ (*(_107573_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_209c68971:;
			{
				jule::Ptr<_215db1ecb_UnaryExpr> _107821_u = (*(_107573_expr)).get()._field_Kind.cast_ptr<_215db1ecb_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _107821_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_209c6917a:;
						{
							jule::Ptr<_215dac46b_PtrTypeDecl> _108125_kind = jule::new_ptr<_215dac46b_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _108225__generics = jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, 1LL);;
							_215e9bbcb_pushGenericsFromData(_self_, &(_108225__generics), &(_107821_u.get()._field_Expr));
							_108125_kind.get()._field_Elem=_108225__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_108125_kind, &__jule_any_type78)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_209c6a2be:;
						{
							jule::Ptr<_215dab998_SptrTypeDecl> _109025_kind = jule::new_ptr<_215dab998_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _109125__generics = jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, 1LL);;
							_215e9bbcb_pushGenericsFromData(_self_, &(_109125__generics), &(_107821_u.get()._field_Expr));
							_109025_kind.get()._field_Elem=_109125__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_109025_kind, &__jule_any_type79)}));;
						}
					}
					else {
						_case_begin_209c69873:;
						{
							_215e914ea_pushErr(_self_.ptr(), _107821_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_209c695ed:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_209c689d7:;
			{
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push((*(_107573_expr)).get()._field_Kind.cast_ptr<_215daa5e0_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_209c687b7:;
			{
				jule::Ptr<_215db3065_SubIdentExpr> _110521_sexpr = (*(_107573_expr)).get()._field_Kind.cast_ptr<_215db3065_SubIdentExpr>(&__jule_any_type92);;
				return _215e9b813_pushGenericsFromExprSubIdent(_self_, &(_110521_sexpr), _107545_generics, _107573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_209c6882d:;
			{
				jule::Ptr<_215db17c2_IdentExpr> _110821_ident = (*(_107573_expr)).get()._field_Kind.cast_ptr<_215db17c2_IdentExpr>(&__jule_any_type86);;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_110821_ident.get()._field_Token, ._field_Ident=_110821_ident.get()._field_Ident, ._field_CppLinked=_110821_ident.get()._field_CppLinked, }), &__jule_any_type19)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_209c68894:;
			{
				{
					auto expr = &((*(_107573_expr)).get()._field_Kind.cast_ptr<_215db078d_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_209c70527:;
					if (it != expr_end) {
						jule::Ptr<_215daeb11_Expr> _111725_texpr = *it;
						{
							if ((!(_215e9bbcb_pushGenericsFromData(_self_, _107545_generics, &(_111725_texpr))))) {
								return false;;
							};
						}
						_iter_next_209c70527:;
						++it;
						goto _iter_begin_209c70527;
					}
					_iter_end_209c70527:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_209c67e48:;
			{
				jule::Ptr<_215db2ae2_NsSelectionExpr> _112321_ns = (*(_107573_expr)).get()._field_Kind.cast_ptr<_215db2ae2_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_215daaba6_IdentTypeDecl> _112421_decl = jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_112321_ns.get()._field_Ident, ._field_Ident=_112321_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_215dab6ac_NamespaceTypeDecl>(_215dab6ac_NamespaceTypeDecl{._field_Idents=_112321_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(_112421_decl, &__jule_any_type19)})}), &__jule_any_type97)}));;
			}
		}
		else {
			_case_begin_209c67dc1:;
			{
				_215e914ea_pushErr(_self_.ptr(), (*(_107573_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_209c67d6b:;
	};
	return true;;
}



inline void _215e9c01c_evalIdentDeclFromIndexing(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215e8e471_Data>* _114550_d, jule::Ptr<_215db6a6e_IndexingExpr>* _114565_i) {
	jule::Ptr<_215dc71ab_StructIns> _114617_s = _215ebdbdc_Struct((*(_114550_d)).get()._field_Kind.ptr());;
	if ((_114617_s == nullptr)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Expr.get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_114550_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114550_d))=nullptr;
		return;;
	};
	jule::Ptr<_215daaba6_IdentTypeDecl> _115317_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114565_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_209c7587e:;
			{
				jule::Ptr<_215db17c2_IdentExpr> _115621_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_215db17c2_IdentExpr>(&__jule_any_type86);;
				_115317_decl=jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_115621_expr.get()._field_Token, ._field_Ident=_115621_expr.get()._field_Ident, ._field_CppLinked=_115621_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_209c768e6:;
			{
				jule::Ptr<_215db2ae2_NsSelectionExpr> _116321_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_215db2ae2_NsSelectionExpr>(&__jule_any_type96);;
				_115317_decl=jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_116321_expr.get()._field_Ident, ._field_Ident=_116321_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_209c75c7a:;
			{
				_215e914ea_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114550_d))=nullptr;
				return;;
			}
		}
		_match_end_209c75c25:;
	};
	if ((!(_215e9bbcb_pushGenericsFromData(_self_, &(_115317_decl.get()._field_Generics), &((*(_114565_i)).get()._field_Index))))) {
		(*(_114550_d))=nullptr;
		return;;
	};
	_114617_s=({ auto _wrap_copy = _215ea3276_typeChecker(_self_.ptr()); _215eccaec_fromStruct(&_wrap_copy, &(_115317_decl), &(_114617_s.get()._field_Decl)); });
	if ((_114617_s == nullptr)) {
		(*(_114550_d))=nullptr;
		return;;
	};
	(*(_114550_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_215eb9ec4_Kind>(_114617_s, 0);
}



inline jule::Bool _215e9c47e_checkGenericFn(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215dcea10_FnIns>* _118839_f, jule::Ptr<_22e0aa1de_Token>* _118855_et, jule::Any* _118872_model) {
	jule::Bool _118913_ok = _215e301e2_reloadFnInsTypes(_self_.get()._field_s, (*(_118839_f)));;
	(*(_118839_f)).get()._field_reloaded=true;
	if ((!(_118913_ok))) {
		return false;;
	};
	jule::Ptr<_215dcea10_FnIns> _119417_existInstance = _215dcd789_appendInstance((*(_118839_f)).get()._field_Decl.ptr(), _118839_f);;
	if ((!(_215e2e356_checkConstraintsFn(_self_.get()._field_s, _118839_f, _118855_et, _119417_existInstance)))) {
		return false;;
	};
	if ((_119417_existInstance != nullptr)) {
		(*(_118839_f))=_119417_existInstance;
		_215eb7ac6_updateModelToGenericIns(_118872_model, &(_119417_existInstance));
	} else {
		_215e3c353_checkFnInsCaller(_self_.get()._field_s, _118839_f, (*(_118855_et)));
	};
	return true;;
}



inline void _215e9c7c0_evalFnGenericFromIndexing(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215e8e471_Data>* _121350_d, jule::Ptr<_215db6a6e_IndexingExpr>* _121365_i) {
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _121417_generics = jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_215e9bbcb_pushGenericsFromData(_self_, &(_121417_generics), &((*(_121365_i)).get()._field_Index))))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	jule::Ptr<_215dcea10_FnIns> _122017_f = _215ebd978_Fn((*(_121350_d)).get()._field_Kind.ptr());;
	jule::I64 _122117_genericsLen = 0LL;;
	if ((_122017_f.get()._field_Decl != nullptr)) {
		_122117_genericsLen=static_cast<jule::I64>(_122017_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_215e272d8_checkGenericQuantity(_self_.get()._field_s.ptr(), _122117_genericsLen, static_cast<jule::I64>(_121417_generics.len()), (*(_121365_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	_122017_f.get()._field_Generics=jule::Slice<jule::Ptr<_215eb8bc6_InsGeneric>>::alloc(0LL, _122017_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121417_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209c818ce:;
		if (it != expr_end) {
			jule::Ptr<_215daa5e0_TypeDecl> _123221_g = *it;
			{
				jule::Ptr<_215e8e471_Data> _123321_k = _215ea3584_evalType(_self_.ptr(), _123221_g);;
				if ((_123321_k == nullptr)) {
					(*(_121350_d))=nullptr;
					return;;
				};
				_122017_f.get()._field_Generics = jule::alloc_for_append(_122017_f.get()._field_Generics,1);_122017_f.get()._field_Generics.__push(jule::new_ptr<_215eb8bc6_InsGeneric>(_215eb8bc6_InsGeneric{._field_Kind=_123321_k.get()._field_Kind, }));;
			}
			_iter_next_209c818ce:;
			++it;
			goto _iter_begin_209c818ce;
		}
		_iter_end_209c818ce:;
	};
	if (_215dd0d96_IsBuiltin(_122017_f.ptr())) {
		return;;
	};
	if (_215e9c47e_checkGenericFn(_self_, &(_122017_f), &((*(_121365_i)).get()._field_Expr.get()._field_Token), &((*(_121350_d)).get()._field_Model))) {
		(*(_121350_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_215eb9ec4_Kind>(_122017_f, 1);
	} else {
		(*(_121350_d))=nullptr;
	};
}



inline jule::Ptr<_215e8e471_Data> _215e9cade_evalIndexing(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db6a6e_IndexingExpr> _125236_i) {
	jule::Ptr<_215eba403_TypeKind> _125317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125317_prefix;
	});;
	jule::Ptr<_215e8e471_Data> _125717_d = _215eab2e5_evalExprKind(_self_, _125236_i.get()._field_Expr.get()._field_Kind);;
	if ((_125717_d == nullptr)) {
		return nullptr;;
	};
	if (_125717_d.get()._field_Decl) {
		_215e9c01c_evalIdentDeclFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	if ((_215ebd978_Fn(_125717_d.get()._field_Kind.ptr()) != nullptr)) {
		_215e9c7c0_evalFnGenericFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	_215e8e471_Data _127317_old_d = (*(_125717_d));;
	jule::Ptr<_215e8e471_Data> _127517_index = _215eab2e5_evalExprKind(_self_, _125236_i.get()._field_Index.get()._field_Kind);;
	if ((_127517_index == nullptr)) {
		return nullptr;;
	};
	_125717_d.get()._field_Decl=false;
	_215e9b390_toIndexing(_self_.ptr(), &(_125717_d), &(_127517_index), &(_125236_i));
	if (_215e8ed34_IsConst(_125717_d.ptr())) {
		_125717_d.get()._field_Decl=false;
		_125717_d.get()._field_Model=jule::Any(_125717_d.get()._field_Constant, &__jule_any_type47);
	} else if (_125717_d.get()._field_Decl) {
		_125717_d.get()._field_Decl=false;
	} else {
		_125717_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc892c_IndexingExprModel>(_215dc892c_IndexingExprModel{._field_Token=_125236_i.get()._field_Token, ._field_Expr=jule::new_ptr<_215e8e471_Data>(_127317_old_d), ._field_Index=_127517_index}), &__jule_any_type45);
	};
	return _125717_d;;
}



inline __jule_tuple_x_215e8e471_Data__jule_tuple_x_215e8e471_Data _215e9cdec_evalSlicingExprs(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db7179_SlicingExpr>* _130641_s) {
	__jule_tuple_x_215e8e471_Data__jule_tuple_x_215e8e471_Data __jule_func_result;
	jule::Ptr<_215eba403_TypeKind> _130717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130717_prefix;
	});;
	jule::Ptr<_215e8e471_Data> _131117_l = nullptr;;
	jule::Ptr<_215e8e471_Data> _131217_r = nullptr;;
	if (((*(_130641_s)).get()._field_Start != nullptr)) {
		_131117_l=_215eab2e5_evalExprKind(_self_, (*(_130641_s)).get()._field_Start.get()._field_Kind);
		if ((_131117_l != nullptr)) {
			_215e99adb_checkIntegerIndexingByData(_self_.ptr(), &(_131117_l), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131117_l=jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__214703588_NewI64(0LL)});
		_131117_l.get()._field_Model=jule::Any(_131117_l.get()._field_Constant, &__jule_any_type47);
	};
	if (((*(_130641_s)).get()._field_To != nullptr)) {
		_131217_r=_215eab2e5_evalExprKind(_self_, (*(_130641_s)).get()._field_To.get()._field_Kind);
		if ((_131217_r != nullptr)) {
			_215e99adb_checkIntegerIndexingByData(_self_.ptr(), &(_131217_r), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131117_l;
	__jule_func_result.__jule_result_arg1 = _131217_r;
	return __jule_func_result;;
}



inline void _215e9d172_slicingArr(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _134130_d) {
	jule::Ptr<_215eba403_TypeKind> _134217_elemType = _215ebd4a0_Arr((*(_134130_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134130_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec4341_Slc>(_215ec4341_Slc{._field_Elem=_134217_elemType}), 8)});
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=((*(_134130_d)).get()._field_Mutable || (!(_215ebba75_Mutable(_134217_elemType.ptr()))));
}



inline void _215e9d53a_slicingStr(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _135630_d, jule::Ptr<_215e8e471_Data>* _135641_l, jule::Ptr<_215e8e471_Data>* _135652_r) {
	(*(_135630_d)).get()._field_Lvalue=false;
	(*(_135630_d)).get()._field_Mutable=true;
	if ((!(_215e8ed34_IsConst((*(_135630_d)).ptr())))) {
		return;;
	};
	if ((((*(_135641_l)) == nullptr) || ((*(_135652_r)) == nullptr))) {
		(*(_135630_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_215e8ed34_IsConst((*(_135641_l)).ptr()) && _215e8ed34_IsConst((*(_135652_r)).ptr()))) {
		jule::I64 _136917_left = _214704699_AsI64((*(_135641_l)).get()._field_Constant.ptr());;
		if ((_136917_left < 0LL)) {
			return;;
		};
		jule::Str _137417_s = _214704435_ReadStr((*(_135630_d)).get()._field_Constant.ptr());;
		jule::I64 _137521_right = 0LL;;
		if (((*(_135652_r)) == nullptr)) {
			_137521_right=static_cast<jule::I64>(static_cast<jule::I64>(_137417_s.len()));
		} else {
			_137521_right=static_cast<jule::I64>(_214704699_AsI64((*(_135652_r)).get()._field_Constant.ptr()));
		};
		if ((_136917_left > _137521_right)) {
			return;;
		};
		_214704dd6_SetStr((*(_135630_d)).get()._field_Constant.ptr(), _137417_s.slice(_136917_left, _137521_right));
		(*(_135630_d)).get()._field_Decl=true;
	} else {
		(*(_135630_d)).get()._field_Constant=nullptr;
	};
}



inline void _215e9d99c_checkSlicing(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data>* _139236_d, jule::Ptr<_215e8e471_Data>* _139247_l, jule::Ptr<_215e8e471_Data>* _139258_r, jule::Ptr<_215db7179_SlicingExpr>* _139269_s) {
	{
		
		if ((_215ebd4a0_Arr((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c97609:;
			{
				_215e9d172_slicingArr(_self_, _139236_d);
				return;;
			}
		}
		else if ((_215ebd714_Slc((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c97681:;
			{
				return;;
			}
		}
		else if ((_215ebc78a_Prim((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209c97708:;
			{
				jule::Ptr<_215ec0150_Prim> _140017_prim = _215ebc78a_Prim((*(_139236_d)).get()._field_Kind.ptr());;
				{
					
					if (_215ec3384_IsStr(_140017_prim.ptr())) {
						_case_begin_209c99ae5:;
						{
							_215e9d53a_slicingStr(_self_, _139236_d, _139247_l, _139258_r);
							return;;
						}
					}
					_match_end_209c99a4b:;
				};
			}
		}
		_match_end_209c974d8:;
	};
	_215e914ea_pushErr(_self_, (*(_139269_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_139236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_215e8e471_Data> _215e9dcaa_evalSlicing(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db7179_SlicingExpr> _141135_s) {
	jule::Ptr<_215e8e471_Data> _141217_d = _215eab2e5_evalExprKind(_self_, _141135_s.get()._field_Expr.get()._field_Kind);;
	if ((_141217_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _141718_l;;
	jule::Ptr<_215e8e471_Data> _141725_r;;
	({
		__jule_tuple_x_215e8e471_Data__jule_tuple_x_215e8e471_Data __jule_assign_result = _215e9cdec_evalSlicingExprs(_self_, &(_141135_s));
		_141718_l = __jule_assign_result.__jule_result_arg0;
		_141725_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141718_l == nullptr)) {
		return _141217_d;;
	};
	_141217_d.get()._field_Decl=false;
	_215e9d99c_checkSlicing(_self_.ptr(), &(_141217_d), &(_141718_l), &(_141725_r), &(_141135_s));
	if (_215e8ed34_IsConst(_141217_d.ptr())) {
		_141217_d.get()._field_Decl=false;
		_141217_d.get()._field_Model=jule::Any(_141217_d.get()._field_Constant, &__jule_any_type47);
	} else if (_141217_d.get()._field_Decl) {
		_141217_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_215dc91d0_SlicingExprModel> _143521_model = jule::new_ptr<_215dc91d0_SlicingExprModel>(_215dc91d0_SlicingExprModel{._field_Token=_141135_s.get()._field_Token, ._field_Expr=_141217_d.get()._field_Model, ._field_Left=_141718_l.get()._field_Model, });;
		if ((_141725_r != nullptr)) {
			_143521_model.get()._field_Right=_141725_r.get()._field_Model;
		};
		_141217_d.get()._field_Model=jule::Any(_143521_model, &__jule_any_type98);
	};
	return _141217_d;;
}



inline void _215e9e173_castPtr(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _144830_t, jule::Ptr<_215e8e471_Data> _144848_d, jule::Ptr<_22e0aa1de_Token> _144858_errorToken) {
	_144848_d.get()._field_Constant=nullptr;
	jule::Ptr<_215ec38d4_Sptr> _145013_sptr = _215ebc9ee_Sptr(_144848_d.get()._field_Kind.ptr());;
	if ((_145013_sptr != nullptr)) {
		if ((!(_215ebab0c_Equal(_215ebcc63_Ptr(_144830_t.ptr()).get()._field_Elem, _145013_sptr.get()._field_Elem)))) {
			_215e914ea_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_144830_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_215e91e35_isUnsafe(_self_)))) {
		_215e914ea_pushErr(_self_, _144858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215ec0150_Prim> _146313_prim = _215ebc78a_Prim(_144848_d.get()._field_Kind.ptr());;
	if (((_215ebcc63_Ptr(_144848_d.get()._field_Kind.ptr()) == nullptr) && ((_146313_prim == nullptr) || (!(_214702dc3_IsInt(_215ec04b3_Str(_146313_prim.ptr()))))))) {
		_215e914ea_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_144830_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _215e9e53b_castStruct(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _146933_t, jule::Ptr<_215e8e471_Data> _146951_d, jule::Ptr<_22e0aa1de_Token> _146961_errorToken) {
	_146951_d.get()._field_Constant=nullptr;
	jule::Ptr<_215dddc1c_Trait> _147117_tr = _215ebde51_Trait(_146951_d.get()._field_Kind.ptr());;
	if ((_147117_tr == nullptr)) {
		_215e914ea_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_146933_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_215dc71ab_StructIns> _147717_s = _215ebdbdc_Struct(_146933_t.ptr());;
	_209ca73d8_pushReference(_self_, &(_147717_s));
	if ((!(_215d8bd41_IsImplements(_147717_s.get()._field_Decl.ptr(), _147117_tr)))) {
		_215e914ea_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_146933_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _215e9e904_castRef(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _148530_t, jule::Ptr<_215e8e471_Data> _148548_d, jule::Ptr<_22e0aa1de_Token> _148558_errorToken) {
	_148548_d.get()._field_Constant=nullptr;
	jule::Ptr<_215ec38d4_Sptr> _148717_sptr = _215ebc9ee_Sptr(_148530_t.ptr());;
	jule::Ptr<_215ec6e48_Ptr> _148917_ptr = _215ebcc63_Ptr(_148548_d.get()._field_Kind.ptr());;
	if (((_148917_ptr != nullptr) && _215ebab0c_Equal(_148717_sptr.get()._field_Elem, _148917_ptr.get()._field_Elem))) {
		if ((!(_215e91e35_isUnsafe(_self_)))) {
			_215e914ea_pushErr(_self_, _148558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_215ebdbdc_Struct(_148717_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_215e9e53b_castStruct(_self_, _148717_sptr.get()._field_Elem, _148548_d, _148558_errorToken);
		return;;
	};
	_215e914ea_pushErr(_self_, _148558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_148548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_148530_t.ptr()), &__jule_any_type5)}));
}



inline void _215e9ecbc_castSlc(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _150730_t, jule::Ptr<_215e8e471_Data> _150748_d, jule::Ptr<_22e0aa1de_Token> _150758_errorToken) {
	_150748_d.get()._field_Constant=nullptr;
	if ((_215ebcec7_Enum(_150748_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_215ebc78a_Prim(_215ebcec7_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_215ec3384_IsStr(_215ebc78a_Prim(_215ebcec7_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_215e914ea_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_150730_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_215ebc78a_Prim(_150748_d.get()._field_Kind.ptr()) == nullptr) || (!(_215ec3384_IsStr(_215ebc78a_Prim(_150748_d.get()._field_Kind.ptr()).ptr()))))) {
		_215e914ea_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_150730_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_150730_t=_215ebd714_Slc(_150730_t.ptr()).get()._field_Elem;
	jule::Ptr<_215ec0150_Prim> _152013_prim = _215ebc78a_Prim(_150730_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_215ec1959_IsU8(_152013_prim.ptr()))) && (!(_215ec1481_IsI32(_152013_prim.ptr())))))) {
		_215e914ea_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_150730_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _215ea00db_castStr(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _152630_d, jule::Ptr<_22e0aa1de_Token> _152640_errorToken) {
	_152630_d.get()._field_Constant=nullptr;
	if ((_215ebcec7_Enum(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215de0d62_Enum> _152921_e = _215ebcec7_Enum(_152630_d.get()._field_Kind.ptr());;
		if (((_215ebc78a_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _215ec3384_IsStr(_215ebc78a_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_215ebc78a_Prim(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215ec0150_Prim> _153617_prim = _215ebc78a_Prim(_152630_d.get()._field_Kind.ptr());;
		if (((!(_215ec1959_IsU8(_153617_prim.ptr()))) && (!(_215ec1481_IsI32(_153617_prim.ptr()))))) {
			_215e914ea_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_215eba7ee_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_215ebd714_Slc(_152630_d.get()._field_Kind.ptr()) == nullptr)) {
		_215e914ea_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_215eba7ee_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_215eba403_TypeKind> _154817_t = _215ebd714_Slc(_152630_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_215ec0150_Prim> _154913_prim = _215ebc78a_Prim(_154817_t.ptr());;
	if (((_154913_prim == nullptr) || ((!(_215ec1959_IsU8(_154913_prim.ptr()))) && (!(_215ec1481_IsI32(_154913_prim.ptr())))))) {
		_215e914ea_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_215eba7ee_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _215ea04a4_castInt(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _155530_t, jule::Ptr<_215e8e471_Data> _155548_d, jule::Ptr<_22e0aa1de_Token> _155558_errorToken) {
	if (_215e8ed34_IsConst(_155548_d.ptr())) {
		jule::Ptr<_215ec0150_Prim> _155717_prim = _215ebc78a_Prim(_155530_t.ptr());;
		{
			
			if (_214702b5e_IsSigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_209cc1b94:;
				{
					_214704a40_SetI64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			else if (_214702c91_IsUnsigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_209cc1c1b:;
				{
					_214704b72_SetU64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_209cc1ad9:;
		};
	} else {
		_155548_d.get()._field_Constant=nullptr;
	};
	if ((_215ebcec7_Enum(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215de0d62_Enum> _156917_e = _215ebcec7_Enum(_155548_d.get()._field_Kind.ptr());;
		if (_214703137_IsNum(_215eba7ee_Str(_156917_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_215ebc9ee_Sptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215ec0150_Prim> _157617_prim = _215ebc78a_Prim(_155530_t.ptr());;
		if ((!(_215ec2dab_IsUintptr(_157617_prim.ptr())))) {
			_215e914ea_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_155530_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_215ebcc63_Ptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215ec0150_Prim> _158317_prim = _215ebc78a_Prim(_155530_t.ptr());;
		if (_215ec2dab_IsUintptr(_158317_prim.ptr())) {
		} else if ((!(_215e91e35_isUnsafe(_self_)))) {
			_215e914ea_pushErr(_self_, _155558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_215ec0150_Prim> _159213_prim = _215ebc78a_Prim(_155548_d.get()._field_Kind.ptr());;
	if (((_159213_prim != nullptr) && _214703137_IsNum(_215ec04b3_Str(_159213_prim.ptr())))) {
		return;;
	};
	_215e914ea_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_155530_t.ptr()), &__jule_any_type5)}));
}



inline void _215ea086c_castNum(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _160030_t, jule::Ptr<_215e8e471_Data> _160048_d, jule::Ptr<_22e0aa1de_Token> _160058_errorToken) {
	if (_215e8ed34_IsConst(_160048_d.ptr())) {
		jule::Ptr<_215ec0150_Prim> _160217_prim = _215ebc78a_Prim(_160030_t.ptr());;
		{
			
			if (_214703005_IsFloat(_160217_prim.get()._field_Kind)) {
				_case_begin_209cca719:;
				{
					_214705018_SetF64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_21470490d_AsF64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_214702b5e_IsSigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_209cca791:;
				{
					_214704a40_SetI64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_214702c91_IsUnsigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_209cca818:;
				{
					_214704b72_SetU64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_209cca64d:;
		};
	} else {
		_160048_d.get()._field_Constant=nullptr;
	};
	if ((_215ebcec7_Enum(_160048_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215de0d62_Enum> _161617_e = _215ebcec7_Enum(_160048_d.get()._field_Kind.ptr());;
		if (_214703137_IsNum(_215eba7ee_Str(_161617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_215ec0150_Prim> _162213_prim = _215ebc78a_Prim(_160048_d.get()._field_Kind.ptr());;
	if (((_162213_prim != nullptr) && _214703137_IsNum(_215ec04b3_Str(_162213_prim.ptr())))) {
		return;;
	};
	_215e914ea_pushErr(_self_, _160058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_160048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_160030_t.ptr()), &__jule_any_type5)}));
}



inline void _215ea0c35_castPrim(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _163031_t, jule::Ptr<_215e8e471_Data> _163049_d, jule::Ptr<_22e0aa1de_Token> _163059_errorToken) {
	jule::Ptr<_215ec0150_Prim> _163113_prim = _215ebc78a_Prim(_163031_t.ptr());;
	{
		
		if (_215ec35e8_IsAny(_163113_prim.ptr())) {
			_case_begin_209cd1269:;
			{
				_163049_d.get()._field_Constant=nullptr;
			}
		}
		else if (_215ec3384_IsStr(_163113_prim.ptr())) {
			_case_begin_209cd17ca:;
			{
				_215ea00db_castStr(_self_, _163049_d, _163059_errorToken);
			}
		}
		else if (_214702dc3_IsInt(_215ec04b3_Str(_163113_prim.ptr()))) {
			_case_begin_209cd1841:;
			{
				_215ea04a4_castInt(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else if (_214703137_IsNum(_215ec04b3_Str(_163113_prim.ptr()))) {
			_case_begin_209cd18b8:;
			{
				_215ea086c_castNum(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else {
			_case_begin_209cd1764:;
			{
				_215e914ea_pushErr(_self_, _163059_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_163031_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_209cd16ed:;
	};
}



inline void _215ea1054_castConstant(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind>* _164736_t, jule::Ptr<_215e8e471_Data>* _164755_d) {
	if ((((*(_164755_d)) == nullptr) || (!(_215e8ed34_IsConst((*(_164755_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_215ec0150_Prim> _165113_prim = _215ebc78a_Prim((*(_164736_t)).ptr());;
	_215eb75ba_castConstByType(&(_165113_prim.get()._field_Kind), _164755_d);
	(*(_164755_d)).get()._field_Model=jule::Any((*(_164755_d)).get()._field_Constant, &__jule_any_type47);
}



inline void _215ea141c_castTypeEnum(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind>* _165636_t, jule::Ptr<_215e8e471_Data>* _165655_d, jule::Ptr<_22e0aa1de_Token>* _165670_errorToken) {
	jule::I64 _165713_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_215e2d278_checkTypeCompatibility((*(_self_))._field_s, &((*(_165655_d)).get()._field_Kind), _165636_t, _165670_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _165713_n);
		_215e914ea_pushErr(_self_, (*(_165670_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_165655_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_165636_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_165655_d)).get()._field_Constant=nullptr;
}



inline void _215ea17d5_castTypeEnumT(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind>* _166537_t, jule::Ptr<_215e8e471_Data>* _166556_d, jule::Ptr<_22e0aa1de_Token>* _166571_errorToken) {
	jule::I64 _166613_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_215e2d278_checkTypeCompatibility((*(_self_))._field_s, _166537_t, &((*(_166556_d)).get()._field_Kind), _166571_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166613_n);
		_215e914ea_pushErr(_self_, (*(_166571_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_166556_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_166537_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166556_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_215e8e471_Data> _215ea1c36_evalCastByTypeNData(_215e90ede_Eval* _self_, jule::Ptr<_215eba403_TypeKind> _167442_t, jule::Ptr<_215e8e471_Data> _167460_d, jule::Ptr<_22e0aa1de_Token> _167474_errorToken) {
	if (((_167460_d != nullptr) && _167460_d.get()._field_Decl)) {
		_215e914ea_pushErr(_self_, _167474_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_215e8e85b_IsNil(_167460_d.ptr())) {
			_case_begin_209cdca8e:;
			{
				if ((!(_215ebbcd9_NilCompatible(_167442_t.ptr())))) {
					_215e914ea_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_215eba7ee_Str(_167442_t.ptr()), &__jule_any_type5)}));
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_215ebc78a_Prim(_167460_d.get()._field_Kind.ptr()) != nullptr) && _215ec35e8_IsAny(_215ebc78a_Prim(_167460_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_209cdc231:;
			{
				if ((_215ebcec7_Enum(_167442_t.ptr()) != nullptr)) {
					_215e914ea_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_215e91819_pushSugggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_215ebd23b_TypeEnum(_167442_t.ptr()) != nullptr)) {
					_215e914ea_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_215ebd23b_TypeEnum(_167460_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209cdbeab:;
			{
				_215ea141c_castTypeEnum(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_215ebd23b_TypeEnum(_167442_t.ptr()) != nullptr)) {
			_case_begin_209cdc022:;
			{
				_215ea17d5_castTypeEnumT(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_215ebcc63_Ptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_209cdc088:;
			{
				_215e9e173_castPtr(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_215ebc9ee_Sptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_209cdcbd2:;
			{
				_215e9e904_castRef(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_215ebd714_Slc(_167442_t.ptr()) != nullptr)) {
			_case_begin_209cdcc48:;
			{
				_215e9ecbc_castSlc(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_215ebdbdc_Struct(_167442_t.ptr()) != nullptr)) {
			_case_begin_209cdccae:;
			{
				_215e9e53b_castStruct(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_215ebc78a_Prim(_167442_t.ptr()) != nullptr)) {
			_case_begin_209cdcd36:;
			{
				_215ea0c35_castPrim(_self_, _167442_t, _167460_d, _167474_errorToken);
				_215ea1054_castConstant(_self_, &(_167442_t), &(_167460_d));
			}
		}
		else {
			_case_begin_209cdbd8a:;
			{
				_215e914ea_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_167442_t.ptr()), &__jule_any_type5)}));
				_167460_d=nullptr;
			}
		}
		_match_end_209cdbd35:;
	};
	if ((_167460_d == nullptr)) {
		return nullptr;;
	};
	_167460_d.get()._field_Mutable=(_167460_d.get()._field_Mutable || ((!(_215ebba75_Mutable(_167460_d.get()._field_Kind.ptr()))) && _215ebba75_Mutable(_167442_t.ptr())));
	_167460_d.get()._field_Lvalue=false;
	_167460_d.get()._field_Decl=false;
	if (((_215ebcec7_Enum(_167460_d.get()._field_Kind.ptr()) == nullptr) || (!(_215ebab0c_Equal(_215ebcec7_Enum(_167460_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167442_t))))) {
		_215eb6a81_applyCastKind(&(_167460_d), &(_167442_t));
		_167460_d.get()._field_Model.cast_ptr<_215dc8366_CastingExprModel>(&__jule_any_type100).get()._field_Token=_167474_errorToken;
	} else {
		_167460_d.get()._field_Kind=_167442_t;
	};
	_167460_d.get()._field_untyped=false;
	if (_215e8ed34_IsConst(_167460_d.ptr())) {
		_167460_d.get()._field_Constant.get()._field_Kind=_215ebc78a_Prim(_167442_t.ptr()).get()._field_Kind;
	};
	return _167460_d;;
}



inline jule::Ptr<_215e8e471_Data> _215ea2187_evalCastT(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215eba403_TypeKind>* _173934_t, jule::Ptr<_215daeb11_Expr>* _173953_e, jule::Ptr<_22e0aa1de_Token>* _173968_et) {
	jule::Ptr<_215eba403_TypeKind> _174017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174017_prefix;
	});;
	if ((_215ebd714_Slc((*(_173934_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_173953_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_209cea827:;
				{
					_self_.get()._field_prefix=(*(_173934_t));
				}
			}
			_match_end_209cea77d:;
		};
	};
	jule::Ptr<_215e8e471_Data> _174917_d = _215eab2e5_evalExprKind(_self_, (*(_173953_e)).get()._field_Kind);;
	if (((_174917_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174917_d;;
	};
	return _215ea1c36_evalCastByTypeNData(_self_.ptr(), (*(_173934_t)), _174917_d, (*(_173968_et)));;
}



inline jule::Ptr<_215e8e471_Data> _215ea2495_evalCast(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db273a_CastExpr> _175632_c) {
	jule::Ptr<_215ebe7d1_TypeSymbol> _175717_t = _215dd40ec_buildType(_175632_c.get()._field_Kind);;
	jule::Bool _175813_ok = _215e2b199_checkType(_self_.get()._field_s, &(_175717_t), _self_.get()._field_lookup);;
	if ((!(_175813_ok))) {
		return nullptr;;
	};
	return _215ea2187_evalCastT(_self_, &(_175717_t.get()._field_Kind), &(_175632_c.get()._field_Expr), &(_175632_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_215e8e471_Data> _215ea27a3_evalNsSelection(_215e90ede_Eval* _self_, jule::Ptr<_215db2ae2_NsSelectionExpr> _176534_s) {
	jule::Str _176613_path = _215ed333e_buildLinkPathByTokens(&(_176534_s.get()._field_Ns));;
	jule::Ptr<_215e1a133_ImportInfo> _176717_imp = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed483a_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>([=](jule::Ptr<_215e1a133_ImportInfo> _176752_imp) mutable -> jule::Bool {
		if (((_176534_s.get()._field_Ns.len() == 1LL) && (_176752_imp.get()._field_Alias == _176613_path))) {
			return true;;
		};
		return ((_176752_imp.get()._field_LinkPath == _176613_path) && _215e1cc90_isAccessibleViaSelection(_176752_imp.ptr()));;
	}));;
	if ((_176717_imp == nullptr)) {
		_215e914ea_pushErr(_self_, _176534_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_176613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_215ed6375_Lookup> _177917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_215ed6375_Lookup>(_176717_imp, 1);
	;
	_215e91bc1_disallowBuiltin(_self_);
	jule::Any _178417_def = _215e9450e_getDef(_self_, _176534_s.get()._field_Ident.get()._field_Kind, false);;
	_215e919e5_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_177917_lookup;
	jule::Ptr<_215e8e471_Data> _178717_d = _215e97ee6_evalDef(_self_, _178417_def, _176534_s.get()._field_Ident);;
	return _178717_d;;
}



inline jule::Ptr<_215e8e471_Data> _215ea2c04_evalStructLitExplicit(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215dc71ab_StructIns> _179145_s, jule::Slice<jule::Ptr<_215daeb11_Expr>> _179213_exprs, jule::Ptr<_22e0aa1de_Token> _179233_errorToken) {
	jule::Bool _179313_ok = _215e272d8_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_179145_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_179145_s.get()._field_Generics.len()), _179233_errorToken);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179145_s.get()._field_Decl))) {
		_215e914ea_pushErr(_self_.ptr(), _179233_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179145_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_209ca73d8_pushReference(_self_.ptr(), &(_179145_s));
	_215e96401_checkDeprecated(_self_.ptr(), &(_179145_s.get()._field_Decl.get()._field_Directives), _179233_errorToken);
	_215e83b19_structLitChecker _180617_slc = _215e83b19_structLitChecker{._field_e=_self_, ._field_errorToken=_179233_errorToken, ._field_s=_179145_s, };;
	_215e851ae_check(&_180617_slc, &(_179213_exprs));
	jule::Ptr<_215e8e471_Data> _181317_d = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_179145_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_215dc7e8c_StructLitExprModel>(_215dc7e8c_StructLitExprModel{._field_Strct=_179145_s, ._field_Args=_180617_slc._field_args}), &__jule_any_type102), });;
	if (_179145_s.get()._field_Decl.get()._field_CppLinked) {
		_181317_d.get()._field_Kind.get()._field_CppIdent=_179145_s.get()._field_Decl.get()._field_Ident;
	};
	return _181317_d;;
}



inline jule::Ptr<_215e8e471_Data> _215ea3012_evalStructLit(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db4cc0_StructLit> _182937_lit) {
	jule::Ptr<_215ebe7d1_TypeSymbol> _183017_t = _215dd40ec_buildType(_182937_lit.get()._field_Kind);;
	jule::Bool _183113_ok = _215e2b199_checkType(_self_.get()._field_s, &(_183017_t), _self_.get()._field_lookup);;
	if ((!(_183113_ok))) {
		return nullptr;;
	};
	jule::Ptr<_215dc71ab_StructIns> _183617_s = _215ebdbdc_Struct(_183017_t.get()._field_Kind.ptr());;
	if ((_183617_s == nullptr)) {
		if ((_215ebc9ee_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
			_183617_s=_215ebdbdc_Struct(_215ebc9ee_Sptr(_183017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183617_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_215e914ea_pushErr(_self_.ptr(), _182937_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_215e8e471_Data> _184917_d = _215ea2c04_evalStructLitExplicit(_self_, _183617_s, _182937_lit.get()._field_Exprs, _182937_lit.get()._field_Kind.get()._field_Token);;
	if ((_215ebc9ee_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_215dc7e8c_StructLitExprModel> _185121_model = _184917_d.get()._field_Model.cast_ptr<_215dc7e8c_StructLitExprModel>(&__jule_any_type102);;
		_215eb5442_makeStructLitAlloc(&(_184917_d), &(_185121_model));
	};
	return _184917_d;;
}



inline _215ec8c6e_typeChecker _215ea3276_typeChecker(_215e90ede_Eval* _self_) {
	return _215e2a088_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_215e8e471_Data> _215ea3584_evalType(_215e90ede_Eval* _self_, jule::Ptr<_215daa5e0_TypeDecl> _186131_t) {
	jule::Ptr<_215ebe7d1_TypeSymbol> _186217_tk = _215dd40ec_buildType(_186131_t);;
	jule::Bool _186313_ok = _215e2b199_checkType((*(_self_))._field_s, &(_186217_tk), (*(_self_))._field_lookup);;
	if ((!(_186313_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_186217_tk.get()._field_Kind, ._field_Model=jule::Any(_186217_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _215ea38a3_callTypeFn(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db3ae3_FnCallExpr>* _187435_fc, jule::Ptr<_215e8e471_Data>* _187457_d) {
	if (((*(_187435_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187435_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_187457_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_187435_fc)).get()._field_IsCo) {
		_215e914ea_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	} else if (((*(_187435_fc)).get()._field_Exception != nullptr)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	};
	if (((*(_187435_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_215daeb11_Expr> _189021_arg = (*(_187435_fc)).get()._field_Args[0LL];;
		(*(_187457_d))=_215ea2187_evalCastT(_self_, &((*(_187457_d)).get()._field_Kind), &(_189021_arg), &(_189021_arg.get()._field_Token));
		return;;
	};
	if (((*(_187457_d)) != nullptr)) {
		(*(_187457_d)).get()._field_Decl=false;
	};
}



inline void _215ea3bc2_callBuiltinFn(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db3ae3_FnCallExpr>* _190038_fc, jule::Ptr<_215e8e471_Data>* _190060_d) {
	(*(_190060_d))=_215ebd978_Fn((*(_190060_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190038_fc, _190060_d);
	if (((*(_190060_d)) == nullptr)) {
		return;;
	};
	(*(_190060_d)).get()._field_Mutable=true;
}



inline void _215ea4013_checkFnOfConcurrentCall(_215e90ede_Eval* _self_, jule::Ptr<_215dcea10_FnIns>* _190843_f, jule::Ptr<_22e0aa1de_Token> _190854_errorToken) {
	if (_215e91e35_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_190843_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209d1a32a:;
		if (it != expr_end) {
			jule::Ptr<_215dcdb41_ParamIns> *_191216_p = it;
			{
				if (_215d8baee_IsSelf((*(_191216_p)).get()._field_Decl.ptr())) {
					if ((!(_215d8d46e_IsRef((*(_191216_p)).get()._field_Decl.ptr())))) {
						_215e914ea_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_215e91819_pushSugggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191216_p)).get()._field_Decl.get()._field_Reference) {
					_215e914ea_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_215e91819_pushSugggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_209d1a32a:;
			++it;
			goto _iter_begin_209d1a32a;
		}
		_iter_end_209d1a32a:;
	};
}



inline void _215ea440e_processExceptionalHandler(_215e90ede_Eval* _self_, jule::Ptr<_215dcea10_FnIns>* _192749_f, jule::Ptr<_215db3ae3_FnCallExpr>* _192765_fc, jule::Ptr<_215e8e471_Data>* _192787_d) {
	jule::Bool _192813_resultNeeded = ((!(_215d7ce64_IsVoid((*(_192749_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_215e03490_scopeChecker> _192917_csc = nullptr;;
	jule::Ptr<_215deb92d_Scope> _193017_ch = nullptr;;
	jule::Ptr<_215dc8553_FnCallExprModel> _193217_model = (*(_192787_d)).get()._field_Model.cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_215e03490_scopeChecker> _193617_sc = (*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0);;
	_192917_csc=_215e13505_newChildChecker(_193617_sc);
	if (_192813_resultNeeded) {
		_192917_csc.get()._field_result=(*(_192749_f));
	};
	_193017_ch=_215e07d8a_getChild(_193617_sc.ptr());
	(*(_192765_fc)).get()._field_Exception.get()._field_Parent=_193617_sc.get()._field_tree;
	_192917_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192917_csc.get()._field_table.get()._field_Vars,1);_192917_csc.get()._field_table.get()._field_Vars.__push(_215eb5783_buildErrorVar(&(_193017_ch), _192765_fc));;
	_215e08253_checkChildSsc(_193617_sc, &((*(_192765_fc)).get()._field_Exception), &(_193017_ch), &(_192917_csc));
	_193217_model.get()._field_Assigned=_192813_resultNeeded;
	_193217_model.get()._field_Except=_193017_ch;
	if ((_192813_resultNeeded && (_192917_csc.get()._field_result != nullptr))) {
		_215e914ea_pushErr(_self_, (*(_192765_fc)).get()._field_Token, jule::Str("assignments requires expression", 31), jule::Slice<jule::Any>());
	};
}



inline void _215ea473e_callFn(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db3ae3_FnCallExpr>* _195431_fc, jule::Ptr<_215e8e471_Data>* _195453_d) {
	jule::Ptr<_215dcea10_FnIns> _195517_f = _215ebd978_Fn((*(_195453_d)).get()._field_Kind.ptr());;
	if (_215dd0d96_IsBuiltin(_195517_f.ptr())) {
		_215ea3bc2_callBuiltinFn(_self_, _195431_fc, _195453_d);
		return;;
	};
	if ((_215e92199_isGlobal(_self_.ptr()) && _195517_f.get()._field_Decl.get()._field_Exceptional)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_215e91819_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((!(_215d9c5b0_IsMethod(_195517_f.get()._field_Decl.ptr()))) && _215ed2492_hasDirective(&(_195517_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_215e914ea_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((((!((*(_195453_d)).get()._field_Mutable)) && _215d9c5b0_IsMethod(_195517_f.get()._field_Decl.ptr())) && (!(_195517_f.get()._field_Decl.get()._field_Statically))) && _195517_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_215e91e35_isUnsafe(_self_.ptr()))) && _195517_f.get()._field_Decl.get()._field_Unsafety)) {
		_215e914ea_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _197917_dynamicAnnotation = (((_195517_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195517_f.get()._field_Generics.len() == 0LL)) && (_195517_f.get()._field_Params.len() > 0LL));;
	if (_197917_dynamicAnnotation) {
		_195517_f.get()._field_Generics=jule::Slice<jule::Ptr<_215eb8bc6_InsGeneric>>::alloc(_195517_f.get()._field_Decl.get()._field_Generics.len(), _195517_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195517_f.get()._field_Generics.len() != _195517_f.get()._field_Decl.get()._field_Generics.len())) {
		_215e272d8_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195517_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_195517_f.get()._field_Generics.len()), (*(_195431_fc)).get()._field_Token);
		(*(_195453_d))=nullptr;
		return;;
	};
	jule::Ptr<_215e2327e_Sema> _198817_old = _self_.get()._field_s;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195517_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198817_old != _self_.get()._field_s)) {
			_198817_old.get()._field_errors=jule::append(_198817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198817_old;
	});;
	_215e81210_fnCallArgChecker _200117_fcac = _215e81210_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195431_fc)).get()._field_Args, ._field_errorToken=(*(_195431_fc)).get()._field_Token, ._field_dynamicAnnotation=_197917_dynamicAnnotation, };;
	if ((!(_197917_dynamicAnnotation))) {
		if ((!(_195517_f.get()._field_reloaded))) {
			jule::Bool _201021_ok = _215e301e2_reloadFnInsTypes(_self_.get()._field_s, _195517_f);;
			_195517_f.get()._field_reloaded=true;
			if ((!(_201021_ok))) {
				(*(_195453_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_215dcea10_FnIns> _201721_existInstance = _215dcd789_appendInstance(_195517_f.get()._field_Decl.ptr(), &(_195517_f));;
		if ((_201721_existInstance != nullptr)) {
			_195517_f=_201721_existInstance;
		};
	} else if ((!(_215e2dad6_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195517_f), &(_200117_fcac._field_ignored))))) {
		(*(_195453_d))=nullptr;
		return;;
	};
	_200117_fcac._field_f=_195517_f;
	jule::Bool _202817_ok = false;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_215e2327e_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_215e2327e_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202817_ok=_215e835ca_check(&_200117_fcac);
		({
			jule::Ptr<_215e2327e_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_215e2327e_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202817_ok=_215e835ca_check(&_200117_fcac);
	};
	if (_197917_dynamicAnnotation) {
		if ((!(_202817_ok))) {
			(*(_195453_d))=nullptr;
			return;;
		};
		if ((!(_215e9c47e_checkGenericFn(_self_, &(_195517_f), &((*(_195431_fc)).get()._field_Token), &((*(_195453_d)).get()._field_Model))))) {
			(*(_195453_d))=nullptr;
			return;;
		};
	};
	jule::Any _204817_callModel = (*(_195453_d)).get()._field_Model;;
	if (_215d7ce64_IsVoid(_195517_f.get()._field_Decl.ptr())) {
		(*(_195453_d))=_215eb6c7e_buildVoidData();
	} else {
		(*(_195453_d)).get()._field_Kind=_195517_f.get()._field_Result;
		(*(_195453_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_215dc8553_FnCallExprModel> _205717_model = jule::new_ptr<_215dc8553_FnCallExprModel>(_215dc8553_FnCallExprModel{._field_Token=(*(_195431_fc)).get()._field_Token, ._field_Func=_195517_f, ._field_IsCo=(*(_195431_fc)).get()._field_IsCo, ._field_Expr=_204817_callModel, ._field_Args=_200117_fcac._field_argModels, });;
	(*(_195453_d)).get()._field_Model=jule::Any(_205717_model, &__jule_any_type34);
	(*(_195453_d)).get()._field_Mutable=true;
	if (_195517_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195431_fc)).get()._field_IsCo) {
			_215e25e41_pushErr(_self_.get()._field_s.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_215e26260_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_215db3e56_Unhandled((*(_195431_fc)).ptr())) {
				_case_begin_209d37cc6:;
				{
					_215e914ea_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_215e91819_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_215db41ba_Ignored((*(_195431_fc)).ptr())) {
				_case_begin_209d37864:;
				{
					goto _match_end_209d36940;
				}
			}
			else {
				_case_begin_209d369a6:;
				{
					_215ea440e_processExceptionalHandler(_self_.ptr(), &(_195517_f), _195431_fc, _195453_d);
				}
			}
			_match_end_209d36940:;
		};
	} else if ((!(_215db3e56_Unhandled((*(_195431_fc)).ptr())))) {
		_215e914ea_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195431_fc)).get()._field_IsCo) {
		_215ea4013_checkFnOfConcurrentCall(_self_.ptr(), &(_205717_model.get()._field_Func), (*(_195431_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea4a4c_evalFnCall(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db3ae3_FnCallExpr> _209234_fc) {
	jule::Ptr<_215eba403_TypeKind> _209317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209317_prefix;
	});;
	{
		auto &_match_expr{ _209234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_209d3a812:;
			{
				if (_209234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _21610d920_builtinCallerError(&(_self_), &(_209234_fc));;
				};
			}
		}
		_match_end_209d3a7ac:;
	};
	jule::Ptr<_215e8e471_Data> _210617_d = _215eab2e5_evalExprKind(_self_, _209234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210617_d == nullptr)) {
		return nullptr;;
	};
	if (_210617_d.get()._field_Decl) {
		_215ea38a3_callTypeFn(_self_, &(_209234_fc), &(_210617_d));
		return _210617_d;;
	};
	if ((_215ebd978_Fn(_210617_d.get()._field_Kind.ptr()) == nullptr)) {
		_215e914ea_pushErr(_self_.ptr(), _209234_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_215ea473e_callFn(_self_, &(_209234_fc), &(_210617_d));
	return _210617_d;;
}



inline jule::Ptr<_215e8e471_Data> _215ea4e04_evalEnumStatic(_215e90ede_Eval* _self_, jule::Ptr<_215de0d62_Enum> _212537_enm, jule::Ptr<_22e0aa1de_Token> _212549_ident) {
	jule::Ptr<_215e8e471_Data> _212617_d = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_212537_enm, 3)}), });;
	jule::Ptr<_215de036c_EnumItem> _213217_item = _215de1923_FindItem(_212537_enm.ptr(), _212549_ident.get()._field_Kind);;
	if ((_213217_item == nullptr)) {
		_215e914ea_pushErr(_self_, _212549_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212537_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212549_ident.get()._field_Kind, &__jule_any_type5)}));
	} else {
		_212617_d.get()._field_Constant=jule::new_ptr<_21470339b_Const>((*(_213217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212617_d.get()._field_Model=jule::Any(_212617_d.get()._field_Constant, &__jule_any_type47);
		_215eb7312_applyCastModelByEnum(&(_212617_d), _212537_enm);
	};
	return _212617_d;;
}



inline jule::Ptr<_215e8e471_Data> _215ea52ab_evalTypeEnumStatic(_215e90ede_Eval* _self_, jule::Ptr<_215de245c_TypeEnum> _214441_enm, jule::Ptr<_22e0aa1de_Token> _214457_ident) {
	jule::Ptr<_215de1d96_TypeEnumItem> _214517_item = _215de2e96_FindItem(_214441_enm.ptr(), _214457_ident.get()._field_Kind);;
	if ((_214517_item == nullptr)) {
		_215e914ea_pushErr(_self_, _214457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_214441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_214457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_215ebcec7_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ebde3598:;
			{
				return _215e94a92__evalEnum(_self_, _215ebcec7_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_215ebd23b_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ebde3c3b:;
			{
				return _215e95257__evalTypeEnum(_self_, _215ebd23b_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_215ebdbdc_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ebde30c0:;
			{
				return _215e9591c__evalStruct(_self_, _215ebdbdc_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1ebde1e15:;
			{
				jule::Ptr<_215e8e471_Data> _215821_d = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_214517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215821_d.get()._field_Model=jule::Any(_215821_d.get()._field_Kind, &__jule_any_type90);
				return _215821_d;;
			}
		}
		_match_end_1ebde3059:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea5663_evalStructStatic(_215e90ede_Eval* _self_, jule::Ptr<_215dc71ab_StructIns> _216739_s, jule::Ptr<_22e0aa1de_Token> _216754_ident) {
	jule::Ptr<_215e8e471_Data> _216817_d = jule::new_ptr<_215e8e471_Data>();;
	;
	jule::Ptr<_215dcd24a_Fn> _217217_method = _215da22da_FindMethod(_216739_s.ptr(), _216754_ident.get()._field_Kind, true);;
	if ((_217217_method != nullptr)) {
		if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _217217_method.get()._field_Public, _217217_method.get()._field_Token)))) {
			_215e914ea_pushErr(_self_, _216754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
			_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_215dcea10_FnIns> _217921_ins = _215dcd4ae_instance(_217217_method);;
		_217921_ins.get()._field_Owner=_216739_s;
		_209bed296_pushReference(_self_, &(_217921_ins));
		_216817_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc99c7_StructStaticIdentExprModel>(_215dc99c7_StructStaticIdentExprModel{._field_Structure=_216739_s, ._field_Expr=_216817_d.get()._field_Model, ._field_Method=_217921_ins}), &__jule_any_type103);
		_216817_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_217921_ins, 1)});
		return _216817_d;;
	};
	jule::Ptr<_215e41aa5_Var> _219317_sttc = _215d90273_FindStatic(_216739_s.ptr(), _216754_ident.get()._field_Kind);;
	if ((_219317_sttc != nullptr)) {
		return _215e97787_evalVar(_self_, _219317_sttc, _216754_ident);;
	};
	_215e914ea_pushErr(_self_, _216754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_215e8e471_Data> _215ea5ab4_evalTraitSubIdent(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _220240_d, jule::Ptr<_215dddc1c_Trait> _220254_trt, jule::Ptr<_22e0aa1de_Token> _220271_ident) {
	jule::Ptr<_215dcd24a_Fn> _220317_f = _215ddea97_FindMethod(_220254_trt.ptr(), _220271_ident.get()._field_Kind);;
	if ((_220317_f == nullptr)) {
		_215e914ea_pushErr(_self_, _220271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_220271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215dcd4ae_instance(_220317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_215dc93bc_TraitSubIdentExprModel>(_215dc93bc_TraitSubIdentExprModel{._field_Token=_220271_ident, ._field_Expr=_220240_d.get()._field_Model, ._field_Method=_220317_f, ._field_Trt=_220254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_215e8e471_Data> _215ea60ae_evalStructSubIdent(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _222141_d, jule::Ptr<_215dc71ab_StructIns> _222155_s, jule::Ptr<_215db3065_SubIdentExpr> _222174_si, jule::Bool _222193_ref) {
	jule::Ptr<_215dc6ebe_FieldIns> _222217_f = _215d84256_FindField(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind);;
	if ((_222217_f != nullptr)) {
		if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_f.get()._field_Decl.get()._field_Public, _222217_f.get()._field_Decl.get()._field_Token)))) {
			_215e914ea_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_222217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_215dc97da_StructSubIdentExprModel> _222921_model = jule::new_ptr<_215dc97da_StructSubIdentExprModel>(_215dc97da_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_215e8e471_Data>((*(_222141_d))), ._field_Field=_222217_f, ._field_Owner=_222155_s});;
		_222141_d.get()._field_Model=jule::Any(_222921_model, &__jule_any_type71);
		_222141_d.get()._field_Kind=_222217_f.get()._field_Kind;
		_222141_d.get()._field_Lvalue=true;
		if ((_222217_f.get()._field_Decl.get()._field_Mutable && (!(_222141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*(_self_))._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_209db1228:;
					{
						jule::Ptr<_215e03490_scopeChecker> _224325_scope = _215e065d6_getRoot((*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0));;
						_222141_d.get()._field_Mutable=((_224325_scope.get()._field_owner != nullptr) && (_224325_scope.get()._field_owner.get()._field_Owner == _222155_s));
					}
				}
				_match_end_209db11c3:;
			};
		};
		return _222141_d;;
	};
	;
	jule::Ptr<_215dcd24a_Fn> _225217_m = _215da22da_FindMethod(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_225217_m == nullptr)) {
		_215e914ea_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_222155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_222174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), _225217_m.get()._field_Public, _225217_m.get()._field_Token)))) {
		_215e914ea_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_225217_m.get()._field_Ident, &__jule_any_type5)}));
		_215e91819_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	if ((_215d8d46e_IsRef(_225217_m.get()._field_Params[0LL].ptr()) && (!(_222193_ref)))) {
		_215e914ea_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_215e96401_checkDeprecated(_self_, &(_225217_m.get()._field_Directives), _222174_si.get()._field_Ident);
	jule::Ptr<_215dcea10_FnIns> _226817_ins = _215dcd4ae_instance(_225217_m);;
	_226817_ins.get()._field_Owner=_222155_s;
	_209bed296_pushReference(_self_, &(_226817_ins));
	jule::Ptr<_215e8e471_Data> _227117_model = jule::new_ptr<_215e8e471_Data>((*(_222141_d)));;
	_222141_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc97da_StructSubIdentExprModel>(_215dc97da_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=_227117_model, ._field_Method=_226817_ins, ._field_Owner=_222155_s}), &__jule_any_type71);
	_222141_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_226817_ins, 1)});
	return _222141_d;;
}



inline jule::Ptr<_215e8e471_Data> _215ea6466_evalSliceSubIdent(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _228240_d, jule::Ptr<_22e0aa1de_Token> _228254_ident) {
	{
		auto &_match_expr{ _228254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_209db9341:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_Params=jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>::make({jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610d5ce_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_215dca08d_CommonSubIdentExprModel>(_215dca08d_CommonSubIdentExprModel{._field_ExprKind=_228240_d.get()._field_Kind, ._field_Expr=_228240_d.get()._field_Model, ._field_Token=_228254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_209db961b:;
			{
				_215e914ea_pushErr(_self_, _228254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_228240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_228254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_209db93c9:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea681d_evalArraySubIdent(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _231940_d, jule::Ptr<_22e0aa1de_Token> _231954_ident) {
	{
		auto &_match_expr{ _231954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_209dba881:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_Params=jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>::make({jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610d5ce_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_215dca08d_CommonSubIdentExprModel>(_215dca08d_CommonSubIdentExprModel{._field_ExprKind=_231940_d.get()._field_Kind, ._field_Expr=_231940_d.get()._field_Model, ._field_Token=_231954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_209dbc8c7:;
			{
				_215e914ea_pushErr(_self_, _231954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_231940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_209dbc82d:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea6b2b_evalIntTypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _235636_ident) {
	;
	{
		auto &_match_expr{ _235636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_209dc1b62:;
			{
				jule::Ptr<_21470339b_Const> _236021_c = static__214703588_NewI64(static_cast<jule::I64>(_214700541_MaxI(jule::Str("int", 3))));;
				_236021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236021_c, &__jule_any_type47), ._field_Constant=_236021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_209dc1bc8:;
			{
				jule::Ptr<_21470339b_Const> _236821_c = static__214703588_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2147007a5_Min(jule::Str("int", 3)))));;
				_236821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236821_c, &__jule_any_type47), ._field_Constant=_236821_c});;
			}
		}
		else {
			_case_begin_209dc0e19:;
			{
				_215e914ea_pushErr(_self_, _235636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_235636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_209dc0c71:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea6e39_evalUintTypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ _238137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_209dc1c83:;
			{
				jule::Ptr<_21470339b_Const> _238521_c = static__2147036ba_NewU64(static_cast<jule::U64>(_214700673_MaxU(jule::Str("uint", 4))));;
				_238521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238521_c, &__jule_any_type47), ._field_Constant=_238521_c});;
			}
		}
		else {
			_case_begin_209dc4978:;
			{
				_215e914ea_pushErr(_self_, _238137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_238137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_209dc47d0:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea7247_evalI8TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _239835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_209dc6a9b:;
			{
				jule::Ptr<_21470339b_Const> _240421_c = static__214703588_NewI64(127LL);;
				_240421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240421_c, &__jule_any_type47), ._field_Constant=_240421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_209dc8608:;
			{
				jule::Ptr<_21470339b_Const> _241221_c = static__214703588_NewI64(-128LL);;
				_241221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241221_c, &__jule_any_type47), ._field_Constant=_241221_c});;
			}
		}
		else {
			_case_begin_209dc7849:;
			{
				_215e914ea_pushErr(_self_, _239835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_209dc655c:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea7555_evalI16TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _242536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_209dcc552:;
			{
				jule::Ptr<_21470339b_Const> _243121_c = static__214703588_NewI64(32767LL);;
				_243121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243121_c, &__jule_any_type47), ._field_Constant=_243121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_209dcc5b8:;
			{
				jule::Ptr<_21470339b_Const> _243921_c = static__214703588_NewI64(-32768LL);;
				_243921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243921_c, &__jule_any_type47), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_209dcb892:;
			{
				_215e914ea_pushErr(_self_, _242536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_242536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_209dcb793:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea7863_evalI32TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _245236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_20999a153:;
			{
				jule::Ptr<_21470339b_Const> _245821_c = static__214703588_NewI64(2147483647LL);;
				_245821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245821_c, &__jule_any_type47), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2099a04aa:;
			{
				jule::Ptr<_21470339b_Const> _246621_c = static__214703588_NewI64(-2147483648LL);;
				_246621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246621_c, &__jule_any_type47), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_209988262:;
			{
				_215e914ea_pushErr(_self_, _245236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_245236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_20999eda0:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea7b71_evalI64TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_214728338:;
			{
				jule::Ptr<_21470339b_Const> _248521_c = static__214703588_NewI64(jule::MAX_I64);;
				_248521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248521_c, &__jule_any_type47), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_2147285e1:;
			{
				jule::Ptr<_21470339b_Const> _249321_c = static__214703588_NewI64(jule::MIN_I64);;
				_249321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249321_c, &__jule_any_type47), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_214727ea3:;
			{
				_215e914ea_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_21476b1c2:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea7e7e_evalU8TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _250635_ident) {
	;
	;
	{
		auto &_match_expr{ _250635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_2147288bb:;
			{
				jule::Ptr<_21470339b_Const> _251121_c = static__2147036ba_NewU64(255LLU);;
				_251121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_251121_c, &__jule_any_type47), ._field_Constant=_251121_c});;
			}
		}
		else {
			_case_begin_214728723:;
			{
				_215e914ea_pushErr(_self_, _250635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_250635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214774670:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea828c_evalU16TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _252436_ident) {
	;
	;
	{
		auto &_match_expr{ _252436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21472a318:;
			{
				jule::Ptr<_21470339b_Const> _252921_c = static__2147036ba_NewU64(65535LLU);;
				_252921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252921_c, &__jule_any_type47), ._field_Constant=_252921_c});;
			}
		}
		else {
			_case_begin_214729e83:;
			{
				_215e914ea_pushErr(_self_, _252436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_252436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_21487a07d:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea859a_evalU32TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _254236_ident) {
	;
	;
	{
		auto &_match_expr{ _254236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21472a69d:;
			{
				jule::Ptr<_21470339b_Const> _254721_c = static__2147036ba_NewU64(4294967295LLU);;
				_254721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254721_c, &__jule_any_type47), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_21472a538:;
			{
				_215e914ea_pushErr(_self_, _254236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_254236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214a5c1d8:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea88a8_evalU64TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _256036_ident) {
	;
	;
	{
		auto &_match_expr{ _256036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21472a9de:;
			{
				jule::Ptr<_21470339b_Const> _256521_c = static__2147036ba_NewU64(jule::MAX_U64);;
				_256521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256521_c, &__jule_any_type47), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_21472a846:;
			{
				_215e914ea_pushErr(_self_, _256036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_256036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214ab4d45:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea8bb6_evalF32TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _257836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21472b0d8:;
			{
				jule::Ptr<_21470339b_Const> _258521_c = static__214703a61_NewF64(340282346638528860000000000000000000000.0);;
				_258521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258521_c, &__jule_any_type47), ._field_Constant=_258521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_21472b281:;
			{
				jule::Ptr<_21470339b_Const> _259321_c = static__214703a61_NewF64(-340282346638528860000000000000000000000.0);;
				_259321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259321_c, &__jule_any_type47), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_21472b429:;
			{
				jule::Ptr<_21470339b_Const> _260121_c = static__214703a61_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_260121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_260121_c, &__jule_any_type47), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_21472ae40:;
			{
				_215e914ea_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type99),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214bb1925:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea8ec4_evalF64TypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_22e0aa1de_Token> _261436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_21472b76a:;
			{
				jule::Ptr<_21470339b_Const> _262121_c = static__214703a61_NewF64(jule::MAX_F64);;
				_262121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262121_c, &__jule_any_type47), ._field_Constant=_262121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_21472b913:;
			{
				jule::Ptr<_21470339b_Const> _262921_c = static__214703a61_NewF64(jule::MIN_F64);;
				_262921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262921_c, &__jule_any_type47), ._field_Constant=_262921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_21472be0d:;
			{
				jule::Ptr<_21470339b_Const> _263721_c = static__214703a61_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263721_c, &__jule_any_type47), ._field_Constant=_263721_c});;
			}
		}
		else {
			_case_begin_21472b5c2:;
			{
				_215e914ea_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type99),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214e53029:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea937b_evalPrimStatic(_215e90ede_Eval* _self_, jule::Str _265033_kind, jule::Ptr<_22e0aa1de_Token> _265044_ident) {
	{
		auto &_match_expr{ _265033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_21472c24e:;
			{
				return _215ea6b2b_evalIntTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_21472c3e7:;
			{
				return _215ea6e39_evalUintTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_21472c590:;
			{
				return _215ea7247_evalI8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_21472c738:;
			{
				return _215ea7555_evalI16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_21472c8d1:;
			{
				return _215ea7863_evalI32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_21472ca79:;
			{
				return _215ea7b71_evalI64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_21472cc22:;
			{
				return _215ea7e7e_evalU8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_21472cdba:;
			{
				return _215ea828c_evalU16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_21472d063:;
			{
				return _215ea859a_evalU32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_21472d20b:;
			{
				return _215ea88a8_evalU64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_2147299ee:;
			{
				return _215ea8bb6_evalF32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_214729d84:;
			{
				return _215ea8ec4_evalF64TypeStatic(_self_, _265044_ident);;
			}
		}
		else {
			_case_begin_21472c0a6:;
			{
				_215e914ea_pushErr(_self_, _265044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_265033_kind, &__jule_any_type5),jule::Any(_265044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214ed2053:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea9733_evalTypeStatic(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _268237_d, jule::Ptr<_215db3065_SubIdentExpr> _268251_si) {
	{
		
		if ((_215ebc78a_Prim(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472d6a1:;
			{
				return _215ea937b_evalPrimStatic(_self_, _215ec04b3_Str(_215ebc78a_Prim(_268237_d.get()._field_Kind.ptr()).ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_215ebcec7_Enum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472d7d3:;
			{
				return _215ea4e04_evalEnumStatic(_self_, _215ebcec7_Enum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_215ebd23b_TypeEnum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472d9e2:;
			{
				return _215ea52ab_evalTypeEnumStatic(_self_, _215ebd23b_TypeEnum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_215ebdbdc_Struct(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472e020:;
			{
				return _215ea5663_evalStructStatic(_self_, _215ebdbdc_Struct(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_21472d53b:;
			{
				_215e914ea_pushErr(_self_, _268251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_268237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2152cb87a:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ea9ada_evalObjSubIdent(_215e90ede_Eval* _self_, jule::Ptr<_215e8e471_Data> _269838_d, jule::Ptr<_215db3065_SubIdentExpr> _269852_si) {
	if (_22e0ac983_IsIgnoreIdent(_269852_si.get()._field_Ident.get()._field_Kind)) {
		_215e914ea_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215eba403_TypeKind> _270417_kind = _269838_d.get()._field_Kind;;
	{
		
		if ((_215ebcc63_Ptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472e152:;
			{
				jule::Ptr<_215ec6e48_Ptr> _270717_ptr = _215ebcc63_Ptr(_269838_d.get()._field_Kind.ptr());;
				if (_215ec791b_IsUnsafe(_270717_ptr.ptr())) {
					goto _match_end_2158b555c;
				};
				if (((!(_269852_si.get()._field_IsSelf)) && (!(_215e91e35_isUnsafe(_self_))))) {
					_215e914ea_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_270417_kind=_215ebcc63_Ptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_215ebc9ee_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472e284:;
			{
				_270417_kind=_215ebc9ee_Sptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_2158b555c:;
	};
	{
		
		if ((_215ebde51_Trait(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21472e493:;
			{
				return _215ea5ab4_evalTraitSubIdent(_self_, _269838_d, _215ebde51_Trait(_269838_d.get()._field_Kind.ptr()), _269852_si.get()._field_Ident);;
			}
		}
		else if ((_215ebdbdc_Struct(_270417_kind.ptr()) != nullptr)) {
			_case_begin_21472e6a2:;
			{
				jule::Ptr<_215dc71ab_StructIns> _272317_s = _215ebdbdc_Struct(_270417_kind.ptr());;
				if (_215eb6223_isInstancedStruct(_272317_s)) {
					jule::Bool _272525_usedReferenceElem = (_215ebc9ee_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr);;
					return _215ea60ae_evalStructSubIdent(_self_, _269838_d, _215ebdbdc_Struct(_270417_kind.ptr()), _269852_si, _272525_usedReferenceElem);;
				};
			}
		}
		else if ((_215ebd714_Slc(_270417_kind.ptr()) != nullptr)) {
			_case_begin_21472e8b1:;
			{
				return _215ea6466_evalSliceSubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		else if ((_215ebd4a0_Arr(_270417_kind.ptr()) != nullptr)) {
			_case_begin_21472989a:;
			{
				return _215ea681d_evalArraySubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		_match_end_215b194a3:;
	};
	_215e914ea_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_269838_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_215e8e471_Data> _215ea9de8_evalSubIdent(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db3065_SubIdentExpr> _273736_si) {
	jule::Ptr<_215eba403_TypeKind> _273817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273817_prefix;
	});;
	jule::Ptr<_215e8e471_Data> _274217_d = _215eab2e5_evalExprKind(_self_, _273736_si.get()._field_Expr.get()._field_Kind);;
	if ((_274217_d == nullptr)) {
		return nullptr;;
	};
	if (_274217_d.get()._field_Decl) {
		return _215ea9733_evalTypeStatic(_self_.ptr(), _274217_d, _273736_si);;
	};
	return _215ea9ada_evalObjSubIdent(_self_.ptr(), _274217_d, _273736_si);;
}



inline jule::Ptr<_215e8e471_Data> _215eaa206_evalTuple(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db078d_TupleExpr> _275433_tup) {
	jule::Ptr<_215ec4dbe_Tuple> _275517_tupT = jule::new_ptr<_215ec4dbe_Tuple>();;
	_275517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_215eba403_TypeKind>>::alloc(0LL, _275433_tup.get()._field_Expr.len());
	jule::Ptr<_215dca27a_TupleExprModel> _275817_model = jule::new_ptr<_215dca27a_TupleExprModel>(_215dca27a_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_215e8e471_Data>>::alloc(0LL, _275433_tup.get()._field_Expr.len())});;
	jule::Bool _276217_ok = true;;
	{
		auto expr = &(_275433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_215039451:;
		if (it != expr_end) {
			jule::Ptr<_215daeb11_Expr> _276321_expr = *it;
			{
				jule::Ptr<_215e8e471_Data> _276421_d = _215eab2e5_evalExprKind(_self_, _276321_expr.get()._field_Kind);;
				if ((_276421_d == nullptr)) {
					_276217_ok=false;
					goto _iter_next_215039451;
				};
				_275517_tupT.get()._field_Types = jule::alloc_for_append(_275517_tupT.get()._field_Types,1);_275517_tupT.get()._field_Types.__push(_276421_d.get()._field_Kind);;
				_275817_model.get()._field_Datas = jule::alloc_for_append(_275817_model.get()._field_Datas,1);_275817_model.get()._field_Datas.__push(_276421_d);;
			}
			_iter_next_215039451:;
			++it;
			goto _iter_begin_215039451;
		}
		_iter_end_215039451:;
	};
	if ((!(_276217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_275517_tupT, 9)}), ._field_Model=jule::Any(_275817_model, &__jule_any_type88), });;
}



inline jule::Ptr<_215e8e471_Data> _215eaa5ad_evalMap(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215ec58e7_Map> _278331_m, jule::Ptr<_215db5243_BraceLit> _278344_lit) {
	jule::Ptr<_215dc8ee3_MapExprModel> _278417_model = jule::new_ptr<_215dc8ee3_MapExprModel>(_215dc8ee3_MapExprModel{._field_KeyKind=_278331_m.get()._field_Key, ._field_ValKind=_278331_m.get()._field_Val, });;
	{
		auto expr = &(_278344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2150d4b4a:;
		if (it != expr_end) {
			jule::Ptr<_215daeb11_Expr> _278921_expr = *it;
			{
				{
					auto &_match_expr{ _278921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_214a8b118:;
						{
							goto _match_end_214a5e2c8;
						}
					}
					else {
						_case_begin_214a8397e:;
						{
							_215e914ea_pushErr(_self_.ptr(), _278344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_214a5e2c8:;
				};
				jule::Ptr<_215db5a18_KeyValPair> _279921_pair = _278921_expr.get()._field_Kind.cast_ptr<_215db5a18_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_215e8e471_Data> _280121_key = _215eab2e5_evalExprKind(_self_, _279921_pair.get()._field_Key.get()._field_Kind);;
				if ((_280121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_215e8e471_Data> _280621_val = _215eab2e5_evalExprKind(_self_, _279921_pair.get()._field_Val.get()._field_Kind);;
				if ((_280621_val == nullptr)) {
					return nullptr;;
				};
				_215e2cd27_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Key), &(_280121_key), _279921_pair.get()._field_Colon);
				_215e2cd27_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Val), &(_280621_val), _279921_pair.get()._field_Colon);
				_278417_model.get()._field_Entries = jule::alloc_for_append(_278417_model.get()._field_Entries,1);_278417_model.get()._field_Entries.__push(jule::new_ptr<_215dc8d06_KeyValPairExprModel>(_215dc8d06_KeyValPairExprModel{._field_Key=_280121_key.get()._field_Model, ._field_Val=_280621_val.get()._field_Model}));;
			}
			_iter_next_2150d4b4a:;
			++it;
			goto _iter_begin_2150d4b4a;
		}
		_iter_end_2150d4b4a:;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_278331_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278417_model, &__jule_any_type104), });;
}



inline jule::Ptr<_215e8e471_Data> _215eaa8bb_evalBraceLit(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db5243_BraceLit> _282736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_215103ae2:;
			{
				_215e914ea_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_215ebe1b5_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_21510375c:;
			{
				return _215eaa5ad_evalMap(_self_, _215ebe1b5_Map(_self_.get()._field_prefix.ptr()), _282736_lit);;
			}
		}
		else if ((_215ebdbdc_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_215103d9a:;
			{
				return _215ea2c04_evalStructLitExplicit(_self_, _215ebdbdc_Struct(_self_.get()._field_prefix.ptr()), _282736_lit.get()._field_Exprs, _282736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_214e86d82:;
			{
				_215e914ea_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_214c59d86:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eaabc9_evalAnonFn(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215dbc06e_FnDecl> _284234_decl) {
	_215ec8c6e_typeChecker _284317_tc = _215ec8c6e_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_215dcea10_FnIns> _284817_ins = _215ed05b1_buildFn(&_284317_tc, _284234_decl);;
	if ((_284817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_21568db0a:;
			{
				jule::Ptr<_215e03490_scopeChecker> _285421_sc = _self_.get()._field_lookup.cast_ptr<_215e03490_scopeChecker>(0);;
				jule::Ptr<_215e03490_scopeChecker> _285521_scc = _215e13505_newChildChecker(_285421_sc);;
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_215e02208_scopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_215e0267b_scopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_childIndex=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284817_ins;
				_215e3c034_checkFnInsSc(_self_.get()._field_s.ptr(), &(_284817_ins), &(_285521_scc));
			}
		}
		else {
			_case_begin_215649ce7:;
			{
				_215e3c5c8_checkFnIns(_self_.get()._field_s, &(_284817_ins));
			}
		}
		_match_end_21564571b:;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_284817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_215dc8b19_AnonFnExprModel>(_215dc8b19_AnonFnExprModel{._field_Func=_284817_ins, ._field_Global=_215e92199_isGlobal(_self_.ptr())}), &__jule_any_type105), });;
}



inline jule::Ptr<_215e8e471_Data> _215eaaed7_evalBinop(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215db34d8_BinopExpr> _287733_op) {
	_215eadb22_binaryEval _287817_bs = static__215eae1e9_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_215ec0150_Prim> _288117_prim = _215ebc78a_Prim(_self_.get()._field_prefix.ptr());;
		if (((_288117_prim == nullptr) || (!(_214703137_IsNum(_215ec04b3_Str(_288117_prim.ptr())))))) {
			jule::Ptr<_215eba403_TypeKind> _288325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288325_prefix;
			});;
			return _215eb46a5_eval(&_287817_bs, &(_287733_op));;
		};
	};
	return _215eb46a5_eval(&_287817_bs, &(_287733_op));;
}



inline jule::Ptr<_215e8e471_Data> _215eab2e5_evalExprKind(jule::Ptr<_215e90ede_Eval> _self_, jule::Any _289236_kind) {
	{
		auto &_match_expr{ _289236_kind };
		
		if (_match_expr.type == &__jule_any_type106) {
			_case_begin_2148e3129:;
			{
				jule::Ptr<_215daedec_RangeExpr> _289521_e = _289236_kind.cast_ptr<_215daedec_RangeExpr>(&__jule_any_type106);;
				return _215eab2e5_evalExprKind(_self_, _289521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_2148e2315:;
			{
				return _215e93d49_evalLit(_self_.ptr(), _289236_kind.cast_ptr<_215db0b45_LitExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_2148e5b87:;
			{
				return _215e98304_evalIdent(_self_.ptr(), _289236_kind.cast_ptr<_215db17c2_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_2148e6902:;
			{
				return _215e98612_evalUnary(_self_, _289236_kind.cast_ptr<_215db1ecb_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_2149151d4:;
			{
				return _215e98920_evalVariadic(_self_, _289236_kind.cast_ptr<_215db2383_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_2149153c1:;
			{
				return _215e98c2d_evalUnsafe(_self_, _289236_kind.cast_ptr<_215db134e_UnsafeExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_21492193d:;
			{
				return _215e9979a_evalSliceExpr(_self_, _289236_kind.cast_ptr<_215db6200_SliceExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_214933422:;
			{
				return _215e9cade_evalIndexing(_self_, _289236_kind.cast_ptr<_215db6a6e_IndexingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_214933664:;
			{
				return _215e9dcaa_evalSlicing(_self_, _289236_kind.cast_ptr<_215db7179_SlicingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_214934368:;
			{
				return _215ea2495_evalCast(_self_, _289236_kind.cast_ptr<_215db273a_CastExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_214a71131:;
			{
				return _215ea27a3_evalNsSelection(_self_.ptr(), _289236_kind.cast_ptr<_215db2ae2_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_214a8383b:;
			{
				return _215ea3012_evalStructLit(_self_, _289236_kind.cast_ptr<_215db4cc0_StructLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_214a85b3a:;
			{
				return _215ea3584_evalType(_self_.ptr(), _289236_kind.cast_ptr<_215daa5e0_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_214a87378:;
			{
				return _215ea4a4c_evalFnCall(_self_, _289236_kind.cast_ptr<_215db3ae3_FnCallExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_214a87ea0:;
			{
				return _215ea9de8_evalSubIdent(_self_, _289236_kind.cast_ptr<_215db3065_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_214a89600:;
			{
				return _215eaa206_evalTuple(_self_, _289236_kind.cast_ptr<_215db078d_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_214a8ae5e:;
			{
				return _215eaa8bb_evalBraceLit(_self_, _289236_kind.cast_ptr<_215db5243_BraceLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_214a8c2a1:;
			{
				return _215eaabc9_evalAnonFn(_self_, _289236_kind.cast_ptr<_215dbc06e_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_214a989e9:;
			{
				return _215eaaed7_evalBinop(_self_, _289236_kind.cast_ptr<_215db34d8_BinopExpr>(&__jule_any_type115));;
			}
		}
		else {
			_case_begin_2148d74c5:;
			{
				return nullptr;;
			}
		}
		_match_end_2148d5eeb:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eab603_eval(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215daeb11_Expr> _294028_expr) {
	jule::Ptr<_215e8e471_Data> _294117_d = _215eab2e5_evalExprKind(_self_, _294028_expr.get()._field_Kind);;
	if (((_294117_d == nullptr) || (_294117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_215ebd978_Fn(_294117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_214e26eba:;
			{
				jule::Ptr<_215dcea10_FnIns> _294821_f = _215ebd978_Fn(_294117_d.get()._field_Kind.ptr());;
				if (_215dd0d96_IsBuiltin(_294821_f.ptr())) {
					goto _match_end_21512b71e;
				};
				if ((_294821_f.get()._field_Generics.len() != _294821_f.get()._field_Decl.get()._field_Generics.len())) {
					_215e25e41_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				};
				if (((!(_294821_f.get()._field_Decl.get()._field_Statically)) && _215d9c5b0_IsMethod(_294821_f.get()._field_Decl.ptr()))) {
					_215e25e41_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_21512b71e:;
	};
	return _294117_d;;
}



inline jule::Ptr<_215e8e471_Data> _215eab911_evalExpr(jule::Ptr<_215e90ede_Eval> _self_, jule::Ptr<_215daeb11_Expr> _296632_expr) {
	jule::Ptr<_215e8e471_Data> _296717_d = _215eab603_eval(_self_, _296632_expr);;
	{
		
		if ((_296717_d == nullptr)) {
			_case_begin_21569312b:;
			{
				return nullptr;;
			}
		}
		else if (_296717_d.get()._field_Decl) {
			_case_begin_21568ba92:;
			{
				_215e914ea_pushErr(_self_.ptr(), _296632_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_215687c25:;
			{
				return _296717_d;;
			}
		}
		_match_end_215684da9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215e90ede_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _215eabd84_unaryEval static__215eac33a_new(jule::Ptr<_215e90ede_Eval> _298723_e) {
	return _215eabd84_unaryEval{._field_e=_298723_e, };;
}



inline void _215eac516_minus(_215eabd84_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_215a98ba2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_215ac633e:;
			{
				if ((!(_214703137_IsNum(_215eba7ee_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_215ebdbdc_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_215ac89a1:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_215a96331:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2159332de:;
	};
	if (_215e8ed34_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_214705755_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_215d3a691:;
				{
					_214705018_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_214704567_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21470527c_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_215c99a2e:;
				{
					_214704a40_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_21470408e_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2147053ae_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_215ee4718:;
				{
					_214704a40_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_214704699_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_215ae5094:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _215eac6e2_plus(_215eabd84_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_215c95563:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_215c95057:;
			{
				if ((!(_214703137_IsNum(_215eba7ee_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_215ebdbdc_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_215ce03b0:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_215c939a1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_215c8e4d5:;
	};
	if (_215e8ed34_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_214705755_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_215c7958b:;
				{
					_214705018_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_214704567_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_21470527c_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_215ee09bc:;
				{
					_214704a40_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_21470408e_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2147053ae_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_216006bae:;
				{
					_214704a40_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_214704699_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_215a96de2:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _215eac8bd_caret(_215eabd84_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_2148e45e2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_214a77313:;
			{
				if ((!(_214702dc3_IsInt(_215eba7ee_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_215ebdbdc_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_214a77379:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_2148ae469:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_2148a60dc:;
	};
	if (_215e8ed34_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_21470527c_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_214ea1c7b:;
				{
					_214704a40_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_21470408e_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2147053ae_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_214ead3a3:;
				{
					_214704b72_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_2147041c1_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_214e7d098:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _215eaca99_excl(_215eabd84_unaryEval* _self_) {
	jule::Ptr<_215ec0150_Prim> _310613_t = _215ebc78a_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_310613_t == nullptr) || (!(_215ec3120_IsBool(_310613_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_215e8ed34_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2147054e1_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_215a9d613:;
				{
					_214704ca4_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_214704303_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_214a7a855:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _215eacc75_star(_215eabd84_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_215ebcc63_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_21485382b:;
			{
				if ((!(_215e91e35_isUnsafe((*(_self_))._field_e.ptr())))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_215ec6e48_Ptr> _313821_t = _215ebcc63_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_215ec791b_IsUnsafe(_313821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_313821_t.get()._field_Elem;
			}
		}
		else if ((_215ebc9ee_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_214853892:;
			{
				(*(_self_))._field_d.get()._field_Kind=_215ebc9ee_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_2147bb079:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_215ad7691:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _215eace51_amper(_215eabd84_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_214b58dea:;
			{
				jule::Ptr<_215dc7e8c_StructLitExprModel> _315821_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_215dc7e8c_StructLitExprModel>(&__jule_any_type102);;
				_215eb5442_makeStructLitAlloc(&((*(_self_))._field_d), &(_315821_lit));
			}
		}
		else {
			_case_begin_214a83d8b:;
			{
				{
					
					if (_215ed2739_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_214a74a2a:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec6e48_Ptr>(_215ec6e48_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 12)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_214a88346:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_214a861ce:;
				};
			}
		}
		_match_end_214a78b72:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _215ead12c_typeDecl(_215eabd84_unaryEval* _self_) {
	_215ec8c6e_typeChecker _318217_tc = _215ec8c6e_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_214c3cb8d:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ecde50_buildPtrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_214e82ab4:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ecd834_buildSptrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 7)});
			}
		}
		else {
			_case_begin_214e2248d:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_214e0ae9e:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _215ead308_evalData(_215eabd84_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_2150be492:;
			{
				jule::Ptr<_215eba403_TypeKind> _320521_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_215eab2e5_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
				(*(_self_))._field_e.get()._field_prefix=_320521_prefix;
			}
		}
		else {
			_case_begin_2150d463e:;
			{
				(*(_self_))._field_d=_215eab2e5_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_2150ce42a:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215ead5d3_eval(_215eabd84_unaryEval* _self_, jule::Ptr<_215db1ecb_UnaryExpr> _321427_u) {
	(*(_self_))._field_u=_321427_u;
	_215ead308_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_215ead12c_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_215eba403_TypeKind> _322513_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_2152ea701:;
			{
				_215eac516_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_2152eb49e:;
			{
				_215eac6e2_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2152eb515:;
			{
				_215eac8bd_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_21530471b:;
			{
				_215eaca99_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_215304782:;
			{
				_215eacc75_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_215301b14:;
			{
				_215eace51_amper(_self_);
			}
		}
		else {
			_case_begin_2152b1101:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_2152b109b:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_21589298a:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str(_322513_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_215e8ed34_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_21530e55b:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type47);
			}
		}
		_match_end_215892924:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _215eabd84_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _215eadb22_binaryEval static__215eae1e9_newPlain(jule::Ptr<_215e90ede_Eval> _326328_e) {
	return _215eadb22_binaryEval{._field_e=_326328_e, };;
}



inline _215eadb22_binaryEval static__215eae53a_new(jule::Ptr<_215e90ede_Eval> _326923_e, jule::Ptr<_22e0aa1de_Token> _326937_op) {
	return _215eadb22_binaryEval{._field_e=_326923_e, ._field_op=_326937_op};;
}



inline jule::Bool _215eae79e_checkTypeCompatibility(_215eadb22_binaryEval* _self_) {
	return _215e2d278_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _215eaea46_checkStructCommonOperatorCompatibility(_215eadb22_binaryEval* _self_) {
	jule::Ptr<_215dcea10_FnIns> _328317_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_21590eb4a:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_215ac9a07:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_215ac9a6d:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_215aca222:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_215aca288:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_215aca93c:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_215aca9a3:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_215acb157:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_215acb1bd:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_215acb872:;
			{
				_328317_overload=_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_215a9de3d:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_215a9792b:;
	};
	if ((_328317_overload == nullptr)) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_215dcdb41_ParamIns> _331517_p = _328317_overload.get()._field_Params[1LL];;
	return _215e2cd27_checkAssignType((*(_self_))._field_e.get()._field_s, _331517_p.get()._field_Decl.get()._field_Reference, &(_331517_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_215e8e471_Data> _215eaecdd_evalNil(_215eadb22_binaryEval* _self_) {
	if ((!(_215ebbcd9_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type116),jule::Any(_215eba7ee_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2150c57c8:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_214ee200d:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type116)}));
				return nullptr;;
			}
		}
		_match_end_214ee1ea8:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb0052_evalEnum(_215eadb22_binaryEval* _self_) {
	jule::Ptr<_215de0d62_Enum> _334017_enm = _215ebcec7_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_21567760a:;
			{
				jule::Ptr<_215eba403_TypeKind> _334421_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_215ebcec7_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334421_rkind=_215ebcec7_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_215e2d278_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_334017_enm.get()._field_Kind.get()._field_Kind), &(_334421_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_2156573dc:;
	};
	if (((_215ebcec7_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_334017_enm != _215ebcec7_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_215248ad3:;
			{
				if ((!(_214703137_IsNum(_215eba7ee_Str(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_21473e0da:;
			{
				jule::Ptr<_215de036c_EnumItem> _337817_first = _334017_enm.get()._field_Items[0LL];;
				{
					
					if (_21470527c_IsI64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_215a9d833:;
						{
							if ((_21470408e_ReadI64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_2147053ae_IsU64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_215689b28:;
						{
							if ((_2147041c1_ReadU64(_337817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_215972185:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3391:17"));;
						}
					}
					_match_end_21597211e:;
				};
				_julec_label_err:;
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_215e91819_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_21473e151;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_21473e151:;
			{
				if (((_215ebc78a_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_214702dc3_IsInt(_215ec04b3_Str(_215ebc78a_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_215ee55c6:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_215ee5571:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb02b6_evalTypeEnum(_215eadb22_binaryEval* _self_) {
	jule::Ptr<_215de245c_TypeEnum> _341117_enm = _215ebd23b_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_21491614c:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_215ae720b:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215de278c_Str(_341117_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214774cd0:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb052a_evalSptr(_215eadb22_binaryEval* _self_) {
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_21523e326:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_214c51146:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_214c48270:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb078e_evalPtr(_215eadb22_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_21532046d:;
			{
				if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_214abe877:;
			{
				if ((_215ebcc63_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_215ec791b_IsUnsafe(_215ebcc63_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_215eb6586_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2152899c0:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_21528996a:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb0a03_evalArr(_215eadb22_binaryEval* _self_) {
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_214e83730:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_2151068b4:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_21510685e:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb0c67_evalSlc(_215eadb22_binaryEval* _self_) {
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_214e56a33:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_215922e7c:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_215922e27:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb0ecb_evalFn(_215eadb22_binaryEval* _self_) {
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_215b555ee:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_21502d1ae:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_216007363:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb1240_evalStruct(_215eadb22_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_21603c145:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_216020b0c:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_216020b73:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_216020bea:;
			{
				if ((_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_216020c72:;
			{
				if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_2156493bd:;
	};
	if ((!(_215eaea46_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_215e8e471_Data> _215eb14a4_evalTrait(_215eadb22_binaryEval* _self_) {
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_21603e7c9:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_21603e8ea:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_21603e620:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb1718_evalAny(_215eadb22_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_2160415cd:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_21604104a:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_21603eb09:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb197c_evalBool(_215eadb22_binaryEval* _self_) {
	if ((!(_215eae79e_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_21604337c:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2160429b9:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_216042964:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb1be1_evalStr(_215eadb22_binaryEval* _self_) {
	jule::Str _365317_rk = _215eba7ee_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_365317_rk.equal("str", 3))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_365317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_216046803:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_21604744c:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_216044dea:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_21604643a:;
	};
}



inline void _215eb1dbc_setTypeToGreater(_215eadb22_binaryEval* _self_) {
	jule::Ptr<_215ec0150_Prim> _368013_lp = _215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_215ec0150_Prim> _368113_rp = _215ebc78a_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_215e8ed34_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_215e8ed34_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_215e8ed34_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_368013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_215e8ed34_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_21470271e_IsGreater(_368113_rp.get()._field_Kind, _368013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_215e8ed34_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_368113_rp.get()._field_Kind;
		};
	};
}



inline void _215eb210e_checkModData(_215eadb22_binaryEval* _self_, jule::Ptr<_215e8e471_Data>* _371336_d) {
	if ((!(_215e8ed34_IsConst((*(_371336_d)).ptr())))) {
		if (((_215ebc78a_Prim((*(_371336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_214702dc3_IsInt(_215ebc78a_Prim((*(_371336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_215e76d82_sigAssignable(jule::Str("i64", 3), _371336_d)) {
			_case_begin_216051ac7:;
			{
				_214704a40_SetI64((*(_371336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64((*(_371336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_215e76eb4_unsigAssignable(jule::Str("u64", 3), _371336_d)) {
			_case_begin_2160517a8:;
			{
				_214704b72_SetU64((*(_371336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64((*(_371336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_216051742:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_21605019c:;
	};
}



inline void _215eb22da_mod(_215eadb22_binaryEval* _self_) {
	_215eb210e_checkModData(_self_, &((*(_self_))._field_l));
	_215eb210e_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _215eb2692_numbersAreCompatibile(_215eadb22_binaryEval* _self_, jule::Str* _373537_lk, jule::Str* _373547_rk) {
	if ((!(_214703137_IsNum((*(_373547_rk)))))) {
		return false;;
	};
	if ((_215e8ed34_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_373537_lk)).equal("f32", 3)) {
		if ((_215e8ed34_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_373547_rk)).equal("f32", 3);;
	};
	if ((*(_373537_lk)).equal("f64", 3)) {
		if ((_215e8ed34_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_373547_rk)).equal("f64", 3);;
	};
	if ((_215e8ed34_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_373537_lk)) == (*(_373547_rk)));;
}



inline jule::Ptr<_215e8e471_Data> _215eb2906_evalFloat(_215eadb22_binaryEval* _self_) {
	jule::Str _376113_lk = _215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _376213_rk = _215ebc78a_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_215eb2692_numbersAreCompatibile(_self_, &(_376113_lk), &(_376213_rk))))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_216059a8b:;
			{
				if (((!(_215e8ed34_IsConst((*(_self_))._field_l.ptr()))) || (!(_215e7805e_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_215e8ed34_IsConst((*(_self_))._field_r.ptr()))) || (!(_215e7805e_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_214704a40_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_214704b72_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_215eb5d6b_isOkForShifting(&((*(_self_))._field_r))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_216058ea8:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_21605e541:;
			{
				_215eb1dbc_setTypeToGreater(_self_);
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_21605e1de:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_216058caa:;
			{
				_215eb1dbc_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_216061631:;
			{
				if ((!(_214702dc3_IsInt(_376213_rk)))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_376113_lk, &__jule_any_type5),jule::Any(_376213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_215eb22da_mod(_self_);
				_215eb1dbc_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_2160604ed:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_21606008b:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb2b6a_evalInt(_215eadb22_binaryEval* _self_) {
	jule::Str _382713_lk = _215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _382813_rk = _215ebc78a_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_216061b1a:;
			{
				if (((!(_214702dc3_IsInt(_382713_lk))) || (!(_214702dc3_IsInt(_382813_rk))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382713_lk, &__jule_any_type5),jule::Any(_382813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_215eb5d6b_isOkForShifting(&((*(_self_))._field_r))))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_216064733:;
	};
	if ((!(_215eb2692_numbersAreCompatibile(_self_, &(_382713_lk), &(_382813_rk))))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_382713_lk, &__jule_any_type5),jule::Any(_382813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_216067615:;
			{
				return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_21606757c:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_216064865:;
			{
				_215eb1dbc_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_21606956d:;
			{
				_215eb22da_mod(_self_);
				_215eb1dbc_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_2160683d5:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_2160682e7:;
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb2dce_evalPrim(_215eadb22_binaryEval* _self_) {
	jule::Ptr<_215ec0150_Prim> _388613_prim = _215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_215ec3120_IsBool(_388613_prim.ptr())) {
			_case_begin_21606b55e:;
			{
				return _215eb197c_evalBool(_self_);;
			}
		}
		else if (_215ec3384_IsStr(_388613_prim.ptr())) {
			_case_begin_21606b5d6:;
			{
				return _215eb1be1_evalStr(_self_);;
			}
		}
		_match_end_21606b4a4:;
	};
	if ((_215ebc78a_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215ec04b3_Str(_388613_prim.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_214703005_IsFloat(_388613_prim.get()._field_Kind)) {
			_case_begin_21606dcc0:;
			{
				return _215eb2906_evalFloat(_self_);;
			}
		}
		else if (_214702dc3_IsInt(_388613_prim.get()._field_Kind)) {
			_case_begin_21606d693:;
			{
				return _215eb2b6a_evalInt(_self_);;
			}
		}
		else {
			_case_begin_21606d62c:;
			{
				return nullptr;;
			}
		}
		_match_end_21606bb69:;
	};
}



inline void _215eb30aa_checkSpecialCases(_215eadb22_binaryEval* _self_) {
	if (((!(_215ebb811_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_215ebb338_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_215ebb811_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_215ebb338_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_215e8e471_Data> _215eb331e_evalOp(_215eadb22_binaryEval* _self_) {
	_215eb30aa_checkSpecialCases(_self_);
	{
		
		if (_215ebb59c_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_216072576:;
			{
				_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (((_215ebc78a_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _215ec35e8_IsAny(_215ebc78a_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_216073203:;
			{
				({
					jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_216073269;
			}
		}
		else if (((_215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _215ec35e8_IsAny(_215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_216073269:;
			{
				return _215eb1718_evalAny(_self_);;
			}
		}
		else if ((_215ebd23b_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216072b5e:;
			{
				({
					jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_216072bd6;
			}
		}
		else if ((_215ebd23b_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216072bd6:;
			{
				return _215eb02b6_evalTypeEnum(_self_);;
			}
		}
		else if (_215ebb338_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_216072c5d:;
			{
				return _215eaecdd_evalNil(_self_);;
			}
		}
		else if ((_215ebcec7_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216072cd5:;
			{
				({
					jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2160732e1;
			}
		}
		else if ((_215ebcec7_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2160732e1:;
			{
				return _215eb0052_evalEnum(_self_);;
			}
		}
		else if ((_215ebc9ee_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216073368:;
			{
				({
					jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2160733e0;
			}
		}
		else if ((_215ebc9ee_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2160733e0:;
			{
				return _215eb052a_evalSptr(_self_);;
			}
		}
		else if ((_215ebcc63_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216073467:;
			{
				({
					jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_2160734de;
			}
		}
		else if ((_215ebcc63_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2160734de:;
			{
				return _215eb078e_evalPtr(_self_);;
			}
		}
		else if ((_215ebd4a0_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216073566:;
			{
				return _215eb0a03_evalArr(_self_);;
			}
		}
		else if ((_215ebd714_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2160735dd:;
			{
				return _215eb0c67_evalSlc(_self_);;
			}
		}
		else if ((_215ebd978_Fn((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216073665:;
			{
				return _215eb0ecb_evalFn(_self_);;
			}
		}
		else if ((_215ebde51_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2160736dc:;
			{
				({
					jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_216073764;
			}
		}
		else if ((_215ebde51_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216073764:;
			{
				return _215eb14a4_evalTrait(_self_);;
			}
		}
		else if ((_215ebdbdc_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_2160737db:;
			{
				return _215eb1240_evalStruct(_self_);;
			}
		}
		else if ((_215ebc78a_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_216073863:;
			{
				return _215eb2dce_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_216072ad7:;
			{
				return nullptr;;
			}
		}
		_match_end_216072a71:;
	};
}



inline void _215eb3594_evalConst(_215eadb22_binaryEval* _self_, jule::Ptr<_215e8e471_Data>* _397033_d) {
	{
		
		if (((*(_397033_d)) == nullptr)) {
			_case_begin_216082a92:;
			{
				return;;
			}
		}
		else if ((!(_215e8ed34_IsConst((*(_self_))._field_l.ptr()))) || (!(_215e8ed34_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_216082b08:;
			{
				(*(_397033_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_216082410:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_216084126:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_214705d60_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_21608418c:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool((!(_214705d60_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_216084203:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_214705c2d_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_216084269:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_214705aeb_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_2160842d0:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_214706206_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_216084346:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_214705e92_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_2160843ac:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_214706338_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_216084423:;
			{
				(*(_397033_d)).get()._field_Constant=static__2147037ec_NewBool(_2147060c4_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_216084489:;
			{
				_21470646a_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_216084500:;
			{
				_21470659c_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_216084566:;
			{
				_2147066ce_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_2160845cc:;
			{
				jule::Bool _400717_ok = _214706811_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_400717_ok)) && (_21470490d_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_215ec0150_Prim> _401221_prim = _215ebc78a_Prim((*(_397033_d)).get()._field_Kind.ptr());;
				{
					
					if (_214702b5e_IsSigInt(_401221_prim.get()._field_Kind)) {
						_case_begin_216090c48:;
						{
							_214704a40_SetI64((*(_397033_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64((*(_397033_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_214702c91_IsUnsigInt(_401221_prim.get()._field_Kind)) {
						_case_begin_216090cc0:;
						{
							_214704b72_SetU64((*(_397033_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64((*(_397033_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_216090b8d:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_216084654:;
			{
				jule::Bool _402017_ok = _214706943_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_402017_ok)) && (_21470490d_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_2160846cb:;
			{
				_214706ba7_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_216084753:;
			{
				_214706a75_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_2160847ca:;
			{
				_214706cd9_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_216084852:;
			{
				_214706e1b_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_2160848c9:;
			{
				_21470704d_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_397033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_2160838d9:;
	};
	(*(_397033_d)).get()._field_Model=jule::Any((*(_397033_d)).get()._field_Constant, &__jule_any_type47);
	_215eb7312_applyCastModelByEnum(_397033_d, _215ebcec7_Enum((*(_397033_d)).get()._field_Kind.ptr()));
}



inline void _215eb3819_checkData(_215eadb22_binaryEval* _self_, jule::Ptr<_215e8e471_Data>* _404533_d) {
	jule::Ptr<_215dcea10_FnIns> _404613_f = _215ebd978_Fn((*(_404533_d)).get()._field_Kind.ptr());;
	if ((((_404613_f != nullptr) && (_404613_f.get()._field_Decl != nullptr)) && _215d9c5b0_IsMethod(_404613_f.get()._field_Decl.ptr()))) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _215eb39e5_checkDatas(_215eadb22_binaryEval* _self_) {
	_215eb3819_checkData(_self_, &((*(_self_))._field_l));
	_215eb3819_checkData(_self_, &((*(_self_))._field_r));
}



inline void _215eb3c6a_setModel(_215eadb22_binaryEval* _self_, jule::Ptr<_215e8e471_Data>* _405732_d) {
	if (_215e8ed34_IsConst((*(_405732_d)).ptr())) {
		if ((_215e8ed34_IsConst((*(_self_))._field_l.ptr()) && _215e8ed34_IsConst((*(_self_))._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_215e8e471_Data> _406518_l;;
	jule::Ptr<_215e8e471_Data> _406525_r;;
	({
		jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_406518_l = ___jule_assign_arg;
		_406525_r = _1___jule_assign_arg;
	});
	if ((!(_215e90142_GoodOperand(_406518_l.ptr(), &(_406525_r))))) {
		({
			jule::Ptr<_215e8e471_Data> ___jule_assign_arg = _406525_r;
			jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = _406518_l;
			_406518_l = ___jule_assign_arg;
			_406525_r = _1___jule_assign_arg;
		});
	};
	(*(_405732_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dc78c6_BinopExprModel>(_215dc78c6_BinopExprModel{._field_Left=jule::new_ptr<_215dc76d9_OperandExprModel>(_215dc76d9_OperandExprModel{._field_Kind=_406518_l.get()._field_Kind, ._field_Model=_406518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_215dc76d9_OperandExprModel>(_215dc76d9_OperandExprModel{._field_Kind=_406525_r.get()._field_Kind, ._field_Model=_406525_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type117);
}



inline void _215eb3ee0_postEval(_215eadb22_binaryEval* _self_, jule::Ptr<_215e8e471_Data>* _408332_d) {
	(*(_408332_d)).get()._field_Lvalue=false;
	_215eb3c6a_setModel(_self_, _408332_d);
}



inline jule::Ptr<_215e8e471_Data> _215eb4397_solveExplicit(_215eadb22_binaryEval* _self_, jule::Ptr<_215e8e471_Data>* _408837_l, jule::Ptr<_215e8e471_Data>* _408852_r) {
	({
		jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_408837_l));
		jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_408852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_215eb39e5_checkDatas(_self_);
	jule::Ptr<_215e8e471_Data> _409317_d = _215eb331e_evalOp(_self_);;
	({
		jule::Ptr<_215e8e471_Data> ___jule_assign_arg = (*(_408837_l));
		jule::Ptr<_215e8e471_Data> _1___jule_assign_arg = (*(_408852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_215eb3594_evalConst(_self_, &(_409317_d));
	if ((_409317_d != nullptr)) {
		_409317_d.get()._field_Mutable=true;
		_215eb3ee0_postEval(_self_, &(_409317_d));
	};
	return _409317_d;;
}



inline jule::Ptr<_215e8e471_Data> _215eb46a5_eval(_215eadb22_binaryEval* _self_, jule::Ptr<_215db34d8_BinopExpr>* _410828_op) {
	if ((*(_410828_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_215e914ea_pushErr((*(_self_))._field_e.ptr(), (*(_410828_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_215e91819_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _411517_l = _215eab2e5_evalExprKind((*(_self_))._field_e, (*(_410828_op)).get()._field_Left.get()._field_Kind);;
	if (((_411517_l == nullptr) || (_411517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_215eba403_TypeKind> _412017_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_411517_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_412017_prefix;
	});;
	jule::Ptr<_215e8e471_Data> _412317_r = _215eab2e5_evalExprKind((*(_self_))._field_e, (*(_410828_op)).get()._field_Right.get()._field_Kind);;
	if (((_412317_r == nullptr) || (_412317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_410828_op)).get()._field_Op;
	jule::Ptr<_215e8e471_Data> _413017_d = _215eb4397_solveExplicit(_self_, &(_411517_l), &(_412317_r));;
	if ((((_413017_d != nullptr) && _411517_l.get()._field_IsRune) && _412317_r.get()._field_IsRune)) {
		_413017_d.get()._field_IsRune=true;
	};
	return _413017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _215eadb22_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215eb8bc6_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215eb9710_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215eba7ee_Str(_215eba403_TypeKind* _self_) {
	if (_215ebb338_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_215ebb0c4_CppLinked(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_215eb9ec4_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._215eb9a73_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _215ebab0c_Equal(jule::Ptr<_215eba403_TypeKind> _self_, jule::Ptr<_215eba403_TypeKind> _9021_other) {
	if (_215ebb338_IsNil(_self_.ptr())) {
		return _215ebb338_IsNil(_9021_other.ptr());;
	};
	if (_215ebb0c4_CppLinked(_self_.ptr())) {
		return (_215ebb0c4_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _215eb9ec4_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._215eb9d81_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _215ebb0c4_CppLinked(_215eba403_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _215ebb338_IsNil(_215eba403_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _215ebb59c_Void(_215eba403_TypeKind* _self_) {
	jule::Ptr<_215ec0150_Prim> _11113_prim = _215ebc78a_Prim(_self_);;
	return ((_11113_prim != nullptr) && _11113_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _215ebb811_Comparable(_215eba403_TypeKind* _self_) {
	{
		_215eba403_TypeKind* _11821__self = (&((*(_self_))));;
		if ((_215ebdbdc_Struct(_11821__self) != nullptr)) {
			return _215ebdbdc_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_215ebe1b5_Map(_11821__self) == nullptr) && (_215ebd714_Slc(_11821__self) == nullptr)) && (_215ebd978_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _215ebba75_Mutable(_215eba403_TypeKind* _self_) {
	{
		_215eba403_TypeKind* _12921__self = (&((*(_self_))));;
		if ((_215ebdbdc_Struct(_12921__self) != nullptr)) {
			return _215ebdbdc_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_215ebde51_Trait(_12921__self) != nullptr)) {
			return _215ebde51_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_215ebc78a_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_215ec0150_Prim> _13721_p = _215ebc78a_Prim(_12921__self);;
			return _215ec35e8_IsAny(_13721_p.ptr());;
		};
		if ((_215ebd4a0_Arr(_12921__self) != nullptr)) {
			return _215ebba75_Mutable(_215ebd4a0_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_215ebd714_Slc(_12921__self) != nullptr) || (_215ebcc63_Ptr(_12921__self) != nullptr)) || (_215ebc9ee_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _215ebbcd9_NilCompatible(_215eba403_TypeKind* _self_) {
	{
		_215eba403_TypeKind* _15221__self = (&((*(_self_))));;
		jule::Ptr<_215ec0150_Prim> _15417_prim = _215ebc78a_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _215ec35e8_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_215ebb338_IsNil(_15221__self) || (_215ebd978_Fn(_15221__self) != nullptr)) || (_215ebc9ee_Sptr(_15221__self) != nullptr)) || (_215ebcc63_Ptr(_15221__self) != nullptr)) || (_215ebde51_Trait(_15221__self) != nullptr)) || (_215ebd714_Slc(_15221__self) != nullptr)) || (_215ebe1b5_Map(_15221__self) != nullptr)) || (_215ebd23b_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _215ebc04d_PerformsRC(_215eba403_TypeKind* _self_) {
	{
		_215eba403_TypeKind* _17321__self = (&((*(_self_))));;
		jule::Ptr<_215ec0150_Prim> _17417_prim = _215ebc78a_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _215ec35e8_IsAny(_17417_prim.ptr());;
		};
		return (((_215ebc9ee_Sptr(_17321__self) != nullptr) || (_215ebd714_Slc(_17321__self) != nullptr)) || (_215ebde51_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _215ebc2b2_SupportsCloning(_215eba403_TypeKind* _self_) {
	{
		_215eba403_TypeKind* _18521__self = (&((*(_self_))));;
		{
			
			if ((_215ebc78a_Prim(_18521__self) != nullptr)) {
				_case_begin_20a02a12d:;
				{
					return (!(_215ec35e8_IsAny(_215ebc78a_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_215ebcec7_Enum(_18521__self) != nullptr)) {
				_case_begin_20a02c196:;
				{
					return true;;
				}
			}
			else if ((_215ebd978_Fn(_18521__self) != nullptr)) {
				_case_begin_20a02c20c:;
				{
					return true;;
				}
			}
			else if ((_215ebcc63_Ptr(_18521__self) != nullptr)) {
				_case_begin_20a02c273:;
				{
					return true;;
				}
			}
			else if ((_215ebd714_Slc(_18521__self) != nullptr)) {
				_case_begin_20a02bcbc:;
				{
					return _215ebc2b2_SupportsCloning(_215ebd714_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_215ebe1b5_Map(_18521__self) != nullptr)) {
				_case_begin_20a02bd33:;
				{
					jule::Ptr<_215ec58e7_Map> _19821_m = _215ebe1b5_Map(_18521__self);;
					return (_215ebc2b2_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _215ebc2b2_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_215ebd4a0_Arr(_18521__self) != nullptr)) {
				_case_begin_20a02bd99:;
				{
					return _215ebc2b2_SupportsCloning(_215ebd4a0_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_215ebc9ee_Sptr(_18521__self) != nullptr)) {
				_case_begin_20a02be10:;
				{
					return _215ebc2b2_SupportsCloning(_215ebc9ee_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_215ebdbdc_Struct(_18521__self) != nullptr)) {
				_case_begin_20a02c4a4:;
				{
					jule::Ptr<_215dc71ab_StructIns> _20525_s = _215ebdbdc_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _215d90d12_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_20a02bc56:;
				{
					return false;;
				}
			}
			_match_end_20a02bbe0:;
		};
	};
}



inline jule::Bool _215ebc526_Variadicable(_215eba403_TypeKind* _self_) {
	{
		_215eba403_TypeKind* _21821__self = (&((*(_self_))));;
		return (_215ebd714_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_215ec0150_Prim> _215ebc78a_Prim(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_20a02a43b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec0150_Prim>(6);;
			}
		}
		else {
			_case_begin_20a02b580:;
			{
				return nullptr;;
			}
		}
		_match_end_20a02b52a:;
	};
}



inline jule::Ptr<_215ec38d4_Sptr> _215ebc9ee_Sptr(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_20a02b618:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec38d4_Sptr>(7);;
			}
		}
		else {
			_case_begin_20a034d19:;
			{
				return nullptr;;
			}
		}
		_match_end_20a035248:;
	};
}



inline jule::Ptr<_215ec6e48_Ptr> _215ebcc63_Ptr(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_20a034dc4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec6e48_Ptr>(12);;
			}
		}
		else {
			_case_begin_20a035a73:;
			{
				return nullptr;;
			}
		}
		_match_end_20a035a1d:;
	};
}



inline jule::Ptr<_215de0d62_Enum> _215ebcec7_Enum(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_20a035b0b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215de0d62_Enum>(3);;
			}
		}
		else {
			_case_begin_20a0366cd:;
			{
				return nullptr;;
			}
		}
		_match_end_20a036b0c:;
	};
}



inline jule::Ptr<_215de245c_TypeEnum> _215ebd23b_TypeEnum(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_20a036788:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215de245c_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_20a037437:;
			{
				return nullptr;;
			}
		}
		_match_end_20a0373d2:;
	};
}



inline jule::Ptr<_215ec64db_Arr> _215ebd4a0_Arr(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_20a0374c0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec64db_Arr>(11);;
			}
		}
		else {
			_case_begin_20a03812a:;
			{
				return nullptr;;
			}
		}
		_match_end_20a0380c5:;
	};
}



inline jule::Ptr<_215ec4341_Slc> _215ebd714_Slc(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_20a0381b3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec4341_Slc>(8);;
			}
		}
		else {
			_case_begin_20a038d1d:;
			{
				return nullptr;;
			}
		}
		_match_end_20a038cb8:;
	};
}



inline jule::Ptr<_215dcea10_FnIns> _215ebd978_Fn(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_20a038da6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215dcea10_FnIns>(1);;
			}
		}
		else {
			_case_begin_20a039a11:;
			{
				return nullptr;;
			}
		}
		_match_end_20a0399ab:;
	};
}



inline jule::Ptr<_215dc71ab_StructIns> _215ebdbdc_Struct(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20a039a99:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215dc71ab_StructIns>(0);;
			}
		}
		else {
			_case_begin_20a03a66b:;
			{
				return nullptr;;
			}
		}
		_match_end_20a03aa9a:;
	};
}



inline jule::Ptr<_215dddc1c_Trait> _215ebde51_Trait(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_20a03a726:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215dddc1c_Trait>(2);;
			}
		}
		else {
			_case_begin_20a03b3c5:;
			{
				return nullptr;;
			}
		}
		_match_end_20a03b370:;
	};
}



inline jule::Ptr<_215ec58e7_Map> _215ebe1b5_Map(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_20a03b45d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec58e7_Map>(10);;
			}
		}
		else {
			_case_begin_20a03c0b8:;
			{
				return nullptr;;
			}
		}
		_match_end_20a03c063:;
	};
}



inline jule::Ptr<_215ec4dbe_Tuple> _215ebe429_Tup(_215eba403_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_20a03c151:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_215ec4dbe_Tuple>(9);;
			}
		}
		else {
			_case_begin_20a03ccab:;
			{
				return nullptr;;
			}
		}
		_match_end_20a03cc56:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215eba403_TypeKind _Src) {
	_Stream << _215eba7ee_Str(&_Src);
	return _Stream;
}



inline jule::Bool _215ebeb88_checked(_215ebe7d1_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _215ebed64_removeKind(_215ebe7d1_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _215ebe7d1_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215ec04b3_Str(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _215ec07c1_Equal(jule::Ptr<_215ec0150_Prim> _self_, jule::Ptr<_215eba403_TypeKind> _37121_other) {
	jule::Ptr<_215ec0150_Prim> _37213_prim = _215ebc78a_Prim(_37121_other.ptr());;
	if ((_37213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37213_prim.get()._field_Kind);;
}



inline jule::Bool _215ec0c44_IsConstraint(_215ec0150_Prim* _self_) {
	return ((((!(_215ec3384_IsStr(_self_))) && (!(_215ec35e8_IsAny(_self_)))) && (!(_215ec3120_IsBool(_self_)))) && (!(_214703137_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _215ec0ea8_IsI8(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _215ec121c_IsI16(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _215ec1481_IsI32(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _215ec16e5_IsI64(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _215ec1959_IsU8(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _215ec1bbd_IsU16(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _215ec1e32_IsU32(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _215ec2196_IsU64(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _215ec240a_IsF32(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _215ec266e_IsF64(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _215ec28d3_IsInt(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _215ec2b47_IsUint(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _215ec2dab_IsUintptr(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _215ec3120_IsBool(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _215ec3384_IsStr(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _215ec35e8_IsAny(_215ec0150_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec0150_Prim _Src) {
	_Stream << _215ec04b3_Str(&_Src);
	return _Stream;
}



inline jule::Str _215ec3c47_Str(_215ec38d4_Sptr* _self_) {
	return (jule::Str("&", 1) + _215eba7ee_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _215ec4055_Equal(jule::Ptr<_215ec38d4_Sptr> _self_, jule::Ptr<_215eba403_TypeKind> _44821_other) {
	jule::Ptr<_215ec38d4_Sptr> _44913_sptr = _215ebc9ee_Sptr(_44821_other.ptr());;
	if ((_44913_sptr == nullptr)) {
		return false;;
	};
	return _215ebab0c_Equal(_self_.get()._field_Elem, _44913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec38d4_Sptr _Src) {
	_Stream << _215ec3c47_Str(&_Src);
	return _Stream;
}



inline jule::Str _215ec484c_Str(_215ec4341_Slc* _self_) {
	return (jule::Str("[]", 2) + _215eba7ee_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _215ec4b5a_Equal(jule::Ptr<_215ec4341_Slc> _self_, jule::Ptr<_215eba403_TypeKind> _46721_other) {
	jule::Ptr<_215ec4341_Slc> _46813_slc = _215ebd714_Slc(_46721_other.ptr());;
	if ((_46813_slc == nullptr)) {
		return false;;
	};
	return _215ebab0c_Equal(_self_.get()._field_Elem, _46813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec4341_Slc _Src) {
	_Stream << _215ec484c_Str(&_Src);
	return _Stream;
}



inline jule::Str _215ec5232_Str(_215ec4dbe_Tuple* _self_) {
	jule::Str _48417_s = jule::Str("(", 1);;
	_48417_s+=_215eba7ee_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20a04c161:;
		if (it != expr_end) {
			jule::Ptr<_215eba403_TypeKind> *_48616_t = it;
			{
				(_48417_s).append(",", 1);
				_48417_s+=_215eba7ee_Str((*(_48616_t)).ptr());
			}
			_iter_next_20a04c161:;
			++it;
			goto _iter_begin_20a04c161;
		}
		_iter_end_20a04c161:;
	};
	(_48417_s).append(")", 1);
	return _48417_s;;
}



inline jule::Bool _215ec5540_Equal(jule::Ptr<_215ec4dbe_Tuple> _self_, jule::Ptr<_215eba403_TypeKind> _49521_other) {
	jule::Ptr<_215ec4dbe_Tuple> _49613_tup = _215ebe429_Tup(_49521_other.ptr());;
	if ((_49613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50317_i = 0LL;;
	for (; (_50317_i < _self_.get()._field_Types.len()); (_50317_i)++) {
		{
			if ((!(_215ebab0c_Equal(_self_.get()._field_Types[_50317_i], _49613_tup.get()._field_Types[_50317_i])))) {
				return false;;
			};
		}
	_iter_next_20a04eb7a:;
	}
	_iter_end_20a04eb7a:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec4dbe_Tuple _Src) {
	_Stream << _215ec5232_Str(&_Src);
	return _Stream;
}



inline jule::Str _215ec5c5a_Str(_215ec58e7_Map* _self_) {
	jule::Str _52317_s = jule::Str("[", 1);;
	_52317_s+=_215eba7ee_Str((*(_self_))._field_Key.ptr());
	(_52317_s).append(":", 1);
	_52317_s+=_215eba7ee_Str((*(_self_))._field_Val.ptr());
	(_52317_s).append("]", 1);
	return _52317_s;;
}



inline jule::Bool _215ec6068_Equal(jule::Ptr<_215ec58e7_Map> _self_, jule::Ptr<_215eba403_TypeKind> _53221_other) {
	jule::Ptr<_215ec58e7_Map> _53313_m = _215ebe1b5_Map(_53221_other.ptr());;
	if ((_53313_m == nullptr)) {
		return false;;
	};
	return (_215ebab0c_Equal(_self_.get()._field_Key, _53313_m.get()._field_Key) && _215ebab0c_Equal(_self_.get()._field_Val, _53313_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec58e7_Map _Src) {
	_Stream << _215ec5c5a_Str(&_Src);
	return _Stream;
}



inline jule::Str _215ec684e_Str(_215ec64db_Arr* _self_) {
	jule::Str _55117_s = jule::Str("[", 1);;
	_55117_s+=_2146edd36_Itoa((*(_self_))._field_N);
	(_55117_s).append("]", 1);
	_55117_s+=_215eba7ee_Str((*(_self_))._field_Elem.ptr());
	return _55117_s;;
}



inline jule::Bool _215ec6b5c_Equal(jule::Ptr<_215ec64db_Arr> _self_, jule::Ptr<_215eba403_TypeKind> _55921_other) {
	jule::Ptr<_215ec64db_Arr> _56013_arr = _215ebd4a0_Arr(_55921_other.ptr());;
	if ((_56013_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56013_arr.get()._field_N) && _215ebab0c_Equal(_self_.get()._field_Elem, _56013_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec64db_Arr _Src) {
	_Stream << _215ec684e_Str(&_Src);
	return _Stream;
}



inline jule::Str _215ec72ab_Str(_215ec6e48_Ptr* _self_) {
	if (_215ec791b_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _215eba7ee_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _215ec75b9_Equal(jule::Ptr<_215ec6e48_Ptr> _self_, jule::Ptr<_215eba403_TypeKind> _58321_other) {
	jule::Ptr<_215ec6e48_Ptr> _58413_ptr = _215ebcc63_Ptr(_58321_other.ptr());;
	if ((_58413_ptr == nullptr)) {
		return false;;
	};
	return _215ebab0c_Equal(_self_.get()._field_Elem, _58413_ptr.get()._field_Elem);;
}



inline jule::Bool _215ec791b_IsUnsafe(_215ec6e48_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec6e48_Ptr _Src) {
	_Stream << _215ec72ab_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec7d8e_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _215ec9478_pushErr(_215ec8c6e_typeChecker* _self_, jule::Ptr<_22e0aa1de_Token> _66926_token, jule::Str _66941_fmt, jule::Slice<jule::Any> _66954_args) {
	_215e25e41_pushErr((*(_self_))._field_s.ptr(), _66926_token, _66941_fmt, _66954_args);
}



inline void _215ec9654_allowBuiltin(_215ec8c6e_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _215ec9830_disallowBuiltin(_215ec8c6e_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_215ec0150_Prim> _215ec9b3d_buildPrim(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _68129_decl) {
	if ((!(_215ed3c35_isPrim((*(_68129_decl)).get()._field_Ident)))) {
		_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_68129_decl)).get()._field_Generics.len() > 0LL)) {
		_215ec9478_pushErr(_self_, (*(_68129_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_68129_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _215ed36e6_buildPrimType((*(_68129_decl)).get()._field_Ident);;
}



inline void _20a05dc77_pushReference(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dc71ab_StructIns>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_209ca9aa0_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_215dd35d5_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type9));
}

inline void _20a061b04_pushReference(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dddc1c_Trait>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_20a063760_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_215dd35d5_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type10));
}



inline void _215eca138_pushReferenceByKind(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215eba403_TypeKind>* _70543_k) {
	{
		
		if ((_215ebdbdc_Struct((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_20a05c935:;
			{
				jule::Ptr<_215dc71ab_StructIns> _70821_t = _215ebdbdc_Struct((*(_70543_k)).ptr());;
				_20a05dc77_pushReference(_self_, &(_70821_t));
			}
		}
		else if ((_215ebde51_Trait((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_20a05c9ac:;
			{
				jule::Ptr<_215dddc1c_Trait> _71121_t = _215ebde51_Trait((*(_70543_k)).ptr());;
				_20a061b04_pushReference(_self_, &(_71121_t));
			}
		}
		_match_end_20a05c825:;
	};
}



inline void _215eca501_pushCycleError(_215ec8c6e_typeChecker* _self_, jule::Any _71629_def1, jule::Any _71640_def2, jule::Str* _71656_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _71813_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _71828_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_71828_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_20a066c80:;
				{
					return (*(_71828_def)).cast_ptr<_215eb9710_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_20a066ce6:;
				{
					return (*(_71828_def)).cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_20a066642:;
				{
					return jule::Str();;
				}
			}
			_match_end_20a066565:;
		};
	});;
	jule::Str _72813_def1Ident = _71813_getIdent(&(_71629_def1));;
	jule::Str _72913_def2Ident = _71813_getIdent(&(_71640_def2));;
	jule::Str _73013_refersTo = _22dbeccdd_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_72813_def1Ident, &__jule_any_type5),jule::Any(_72913_def2Ident, &__jule_any_type5)}));;
	((*(_71656_message))).buffer.insert(0, (((_22db52d86_Repeat(jule::Str(" ", 1), 4LL) + _73013_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _215eca8a8_checkCrossCycle(_215ec8c6e_typeChecker* _self_, jule::Any _73430_decl, jule::Str* _73446_message) {
	{
		auto &_match_expr{ _73430_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_20a068e3b:;
			{
				jule::Ptr<_215eb9710_TypeAlias> _73717_ta = _73430_decl.cast_ptr<_215eb9710_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_73717_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20a0698ed:;
					if (it != expr_end) {
						jule::Any *_73820_d = it;
						{
							{
								
								if (((*(_73820_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_20a06a5e1:;
									{
										_215eca501_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								else if ((!(_215eca8a8_checkCrossCycle(_self_, (*(_73820_d)), _73446_message)))) {
									_case_begin_20a06a668:;
									{
										_215eca501_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								_match_end_20a06a4d1:;
							};
						}
						_iter_next_20a0698ed:;
						++it;
						goto _iter_begin_20a0698ed;
					}
					_iter_end_20a0698ed:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_20a068ea2:;
			{
				jule::Ptr<_215dc6cd2_Struct> _74917_s = _73430_decl.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_74917_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20a06add8:;
					if (it != expr_end) {
						jule::Ptr<_215dc6cd2_Struct> *_75020_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_75020_d))))) {
									_case_begin_20a06c8bd:;
									{
										_215eca501_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								else if ((!(_215eca8a8_checkCrossCycle(_self_, jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message)))) {
									_case_begin_20a06c945:;
									{
										_215eca501_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								_match_end_20a06c7ad:;
							};
						}
						_iter_next_20a06add8:;
						++it;
						goto _iter_begin_20a06add8;
					}
					_iter_end_20a06add8:;
				};
			}
		}
		_match_end_20a068d4d:;
	};
	return true;;
}



inline jule::Bool _215ecac60_checkIllegalCycles(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _76838_ident, jule::Any _76865_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _76865_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_20a06c57c:;
			{
				if (((*(_self_))._field_notPlain || _76865_decl.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_20a06e7e3:;
			{
				if (_76865_decl.cast_ptr<_215eb9710_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_20a06c428:;
	};
	if ((_76865_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_215ec9478_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79117_message = jule::Str();;
	if ((!(_215eca8a8_checkCrossCycle(_self_, _76865_decl, &(_79117_message))))) {
		jule::Str _79421_errMsg = _79117_message;;
		_79117_message=jule::Str();
		_215eca501_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _76865_decl, &(_79117_message));
		_79421_errMsg+=_79117_message;
		_215ec9478_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_79421_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_2099a070d:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_76865_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_20999e883:;
			{
				{
					auto &_match_expr{ _76865_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_2099a1db3:;
						{
							jule::Ptr<_215dc6cd2_Struct> _81025_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66);;
							_81025_s.get()._field_Depends = jule::alloc_for_append(_81025_s.get()._field_Depends,1);_81025_s.get()._field_Depends.__push(_76865_decl.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_2099a1cc5:;
				};
			}
		}
		_match_end_2099a06a8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_215eb9ec4_Kind> _215ecb117_fromTypeAlias(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _81833_decl, jule::Ptr<_215eb9710_TypeAlias>* _81860_ta) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_81860_ta)).get()._field_Public, (*(_81860_ta)).get()._field_Token)))) {
		_215ec9478_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_81860_ta)).get()._field_Used=true;
	if (((*(_81833_decl)).get()._field_Generics.len() > 0LL)) {
		_215ec9478_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2099a6813:;
			if (it != expr_end) {
				jule::Ptr<_215eb9710_TypeAlias> _83520_bg = *it;
				{
					if (((_83520_bg == (*(_81860_ta))) || (((*(_81860_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _215ebab0c_Equal((*(_81860_ta)).get()._field_Kind.get()._field_Kind, _83520_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_2099a6813;
					};
				}
				_iter_next_2099a6813:;
				++it;
				goto _iter_begin_2099a6813;
			}
			_iter_end_2099a6813:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_2099a7160:;
			if (it != expr_end) {
				jule::Ptr<_215eb9710_TypeAlias> _84620_bg = *it;
				{
					if ((_84620_bg == (*(_81860_ta)))) {
						_215ec9478_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_81860_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_2099a923e:;
						if (it != expr_end) {
							jule::Ptr<_215eb9710_TypeAlias> _85124_dg = *it;
							{
								if ((_84620_bg == _85124_dg)) {
									_215ec9478_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_2099a923e:;
							++it;
							goto _iter_begin_2099a923e;
						}
						_iter_end_2099a923e:;
					};
				}
				_iter_next_2099a7160:;
				++it;
				goto _iter_begin_2099a7160;
			}
			_iter_end_2099a7160:;
		};
	};
	jule::Bool _86017_ok = _215ecac60_checkIllegalCycles(_self_, _81833_decl, jule::Any((*(_81860_ta)), &__jule_any_type67));;
	if ((!(_86017_ok))) {
		return nullptr;;
	};
	if (((*(_81860_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_86017_ok=_215e31105_checkTypeAliasDeclKind((*(_self_))._field_s, _81860_ta, (*(_self_))._field_lookup);
		if ((!(_86017_ok))) {
			return nullptr;;
		};
	};
	if (((*(_81860_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_81860_ta)));;
	};
	jule::Ptr<_215eba403_TypeKind> _87917_tk = jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Generic=(*(_81860_ta)).get()._field_Generic, ._field_Kind=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_215eca138_pushReferenceByKind(_self_, &(_87917_tk));
	if ((*(_81860_ta)).get()._field_CppLinked) {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Ident;
	} else {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_215eb9ec4_Kind>(_87917_tk, 5);;
}



inline jule::Ptr<_215de0d62_Enum> _215ecb4be_fromEnum(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _89228_decl, jule::Ptr<_215de0d62_Enum>* _89255_e) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_89255_e)).get()._field_Public, (*(_89255_e)).get()._field_Token)))) {
		_215ec9478_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89228_decl)).get()._field_Generics.len() > 0LL)) {
		_215ec9478_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_89255_e));;
}



inline jule::Ptr<_215de245c_TypeEnum> _215ecb876_fromTypeEnum(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _90432_decl, jule::Ptr<_215de245c_TypeEnum>* _90459_e) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_90459_e)).get()._field_Public, (*(_90459_e)).get()._field_Token)))) {
		_215ec9478_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90432_decl)).get()._field_Generics.len() > 0LL)) {
		_215ec9478_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_90459_e));;
}



inline jule::Ptr<_215dddc1c_Trait> _215ecbc2d_fromTrait(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _91629_decl, jule::Ptr<_215dddc1c_Trait>* _91656_t) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_91656_t)).get()._field_Public, (*(_91656_t)).get()._field_Token)))) {
		_215ec9478_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91629_decl)).get()._field_Generics.len() > 0LL)) {
		_215ec9478_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_20a061b04_pushReference(_self_, _91656_t);
	return (*(_91656_t));;
}



inline jule::Bool _215ecc0d5_checkStructIns(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dc71ab_StructIns>* _92938_ins, jule::Ptr<_22e0aa1de_Token>* _92960_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_92938_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_92938_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_92938_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_215e3aab0_precheckStructIns((*(_self_))._field_s, _92938_ins, (*(_92960_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_92938_ins)).get()._field_Generics.len() > 0LL)) {
		_215e3b52d_checkStructInsOperators((*(_self_))._field_s, (*(_92938_ins)));
		_215e3ad35_checkStructIns((*(_self_))._field_s, _92938_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _215ecc37c_appendUsedStructReference(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dc6cd2_Struct>* _95049_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_2099b9c11:;
			{
				jule::Ptr<_215dc6cd2_Struct> _95621_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_215dc6cd2_Struct>(&__jule_any_type66);;
				if ((!(_215d914c7_IsUses(_95621_refS.ptr(), (*(_95049_s)))))) {
					_95621_refS.get()._field_Uses = jule::alloc_for_append(_95621_refS.get()._field_Uses,1);_95621_refS.get()._field_Uses.__push((*(_95049_s)));;
				};
			}
		}
		_match_end_2099b9bab:;
	};
}



inline jule::Ptr<_215dc71ab_StructIns> _215ecc745_buildStructInstance(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _96343_decl, jule::Ptr<_215dc6cd2_Struct>* _96370_s) {
	jule::Ptr<_215ec7d8e_referencer> _96517_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_215eb9710_TypeAlias>> _96717_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_2099bc7d5:;
				{
					jule::Ptr<_215e03490_scopeChecker> _97425_sc = (*(_self_))._field_lookup.cast_ptr<_215e03490_scopeChecker>(0);;
					jule::Ptr<_215e03490_scopeChecker> _97525_hard = _215e0684a_getHardRoot(_97425_sc);;
					if (((_97525_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97525_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_96370_s))))) {
						goto _match_end_2099bc780;
					};
					jule::I64 _97921_n = (_97525_hard.get()._field_owner.get()._field_Generics.len() + _97525_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_97525_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _97921_n);
				}
			}
			_match_end_2099bc780:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_215ed6375_Lookup> _98917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_215dc71ab_StructIns> _99317_ins = _215d87358_instance((*(_96370_s)));;
	_99317_ins.get()._field_Generics=jule::Slice<jule::Ptr<_215eb8bc6_InsGeneric>>::alloc(0LL, (*(_96343_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_96343_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2099c1b2a:;
		if (it != expr_end) {
			jule::Ptr<_215daa5e0_TypeDecl> _99521_g = *it;
			{
				jule::Ptr<_215eba403_TypeKind> _99621_kind = _215ed0bcc_build(_self_, &(_99521_g.get()._field_Kind));;
				if ((_99621_kind == nullptr)) {
					return nullptr;;
				};
				_99317_ins.get()._field_Generics = jule::alloc_for_append(_99317_ins.get()._field_Generics,1);_99317_ins.get()._field_Generics.__push(jule::new_ptr<_215eb8bc6_InsGeneric>(_215eb8bc6_InsGeneric{._field_Kind=_99621_kind, }));;
			}
			_iter_next_2099c1b2a:;
			++it;
			goto _iter_begin_2099c1b2a;
		}
		_iter_end_2099c1b2a:;
	};
	(*(_self_))._field_lookup=_98917_lookup;
	(*(_self_))._field_bannedGenerics=_96717_bannedGenerics;
	(*(_self_))._field_referencer=_96517_referencer;
	return _99317_ins;;
}



inline jule::Ptr<_215dc71ab_StructIns> _215eccaec_fromStruct(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _101134_decl, jule::Ptr<_215dc6cd2_Struct>* _101161_s) {
	if ((!(_215e26617_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_101161_s)).get()._field_Public, (*(_101161_s)).get()._field_Token)))) {
		_215ec9478_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_101134_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_101134_decl)).get()._field_Generics.len() > 0LL)) {
			_215ec9478_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_215dc71ab_StructIns>(_215dc71ab_StructIns{._field_Decl=(*(_101161_s)), });;
	};
	jule::Bool _102917_ok = ((*(_self_))._field_notPlain || _215ecac60_checkIllegalCycles(_self_, _101134_decl, jule::Any((*(_101161_s)), &__jule_any_type66)));;
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	_215ecc37c_appendUsedStructReference(_self_, _101161_s);
	jule::Ptr<_215dc71ab_StructIns> _103517_ins = _215ecc745_buildStructInstance(_self_, _101134_decl, _101161_s);;
	if ((_103517_ins == nullptr)) {
		return nullptr;;
	};
	_102917_ok=_215e272d8_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_103517_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_103517_ins.get()._field_Generics.len()), (*(_101134_decl)).get()._field_Token);
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	jule::Ptr<_215dc71ab_StructIns> _104517_existInstance = _215d880b2_appendInstance((*(_101161_s)).ptr(), &(_103517_ins));;
	if ((_104517_existInstance != nullptr)) {
		if ((!(_215e2e7a7_checkConstraintsStruct((*(_self_))._field_s, &(_103517_ins), &((*(_101134_decl)).get()._field_Token), _104517_existInstance)))) {
			return nullptr;;
		};
		_20a05dc77_pushReference(_self_, &(_104517_existInstance));
		return _104517_existInstance;;
	};
	if ((!(_215ecc0d5_checkStructIns(_self_, &(_103517_ins), &((*(_101134_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_20a05dc77_pushReference(_self_, &(_103517_ins));
	return _103517_ins;;
}



inline jule::Trait<_215eb9ec4_Kind> _215ecce0a_getDef(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl>* _106930_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2099cb0b8:;
		if (it != expr_end) {
			jule::Ptr<_215db78d8_GenericDecl> _107016_g = *it;
			{
				if ((_107016_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					return jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(_107016_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_2099cb0b8:;
			++it;
			goto _iter_begin_2099cb0b8;
		}
		_iter_end_2099cb0b8:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2099cb250:;
		if (it != expr_end) {
			jule::Ptr<_215eb9710_TypeAlias> _107621_g = *it;
			{
				if ((_107621_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					if (((*(_106930_decl)).get()._field_Generics.len() > 0LL)) {
						_215ec9478_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_215dc71ab_StructIns> _108225_st = _215ebdbdc_Struct(_107621_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108225_st != nullptr)) {
						jule::Bool _108425_ok = _215ecac60_checkIllegalCycles(_self_, _106930_decl, jule::Any(_108225_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_108425_ok))) {
							return nullptr;;
						};
					};
					return _107621_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_2099cb250:;
			++it;
			goto _iter_begin_2099cb250;
		}
		_iter_end_2099cb250:;
	};
	if ((!((*(_106930_decl)).get()._field_CppLinked))) {
		jule::Ptr<_215de0d62_Enum> _109421_e = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5e24_FindEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109421_e != nullptr)) {
			return jule::Trait<_215eb9ec4_Kind>(_215ecb4be_fromEnum(_self_, _106930_decl, &(_109421_e)), 3);;
		};
		jule::Ptr<_215de245c_TypeEnum> _109921_te = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed6232_FindTypeEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109921_te != nullptr)) {
			return jule::Trait<_215eb9ec4_Kind>(_215ecb876_fromTypeEnum(_self_, _106930_decl, &(_109921_te)), 4);;
		};
		jule::Ptr<_215dddc1c_Trait> _110421_t = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5b16_FindTrait((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_110421_t != nullptr)) {
			return jule::Trait<_215eb9ec4_Kind>(_215ecbc2d_fromTrait(_self_, _106930_decl, &(_110421_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_215ec9478_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dc6cd2_Struct> _111317_s = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5451_FindStruct((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if ((_111317_s != nullptr)) {
		return jule::Trait<_215eb9ec4_Kind>(_215eccaec_fromStruct(_self_, _106930_decl, &(_111317_s)), 0);;
	};
	jule::Ptr<_215eb9710_TypeAlias> _111817_ta = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed5099_FindTypeAlias((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if (((_111817_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_111817_ta=_21610b90c_findBuiltinTypeAlias((*(_106930_decl)).get()._field_Ident);
	};
	if ((_111817_ta != nullptr)) {
		return _215ecb117_fromTypeAlias(_self_, _106930_decl, &(_111817_ta));;
	};
	_215ec9478_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_215eb9ec4_Kind> _215ecd218_buildIdent(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daaba6_IdentTypeDecl> _113033_decl) {
	{
		
		if (_215ed3c35_isPrim(_113033_decl.get()._field_Ident)) {
			_case_begin_2099d6dd7:;
			{
				return jule::Trait<_215eb9ec4_Kind>(_215ec9b3d_buildPrim(_self_, &(_113033_decl)), 6);;
			}
		}
		else {
			_case_begin_2099d66de:;
			{
				return _215ecce0a_getDef(_self_, &(_113033_decl));;
			}
		}
		_match_end_2099d6623:;
	};
}



inline jule::Trait<_215eb9ec4_Kind> _215ecd526_buildSubIdent(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dab305_SubIdentTypeDecl> _113936_decl) {
	jule::Trait<_215eb9ec4_Kind> _114017_ident = _215ecd218_buildIdent(_self_, _113936_decl.get()._field_Idents[0LL]);;
	if ((_114017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114017_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_2099d86ad:;
			{
				goto _match_end_2099d85c0;
			}
		}
		else {
			_case_begin_2099d848d:;
			{
				_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2099d85c0:;
	};
	jule::Ptr<_215de245c_TypeEnum> _115117_t = _114017_ident.cast_ptr<_215de245c_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_215daaba6_IdentTypeDecl>> _115217_idents = _113936_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_115217_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2099d82c3:;
		if (it != expr_end) {
			jule::I64 _115313_i = it - expr->begin();
			jule::Ptr<_215daaba6_IdentTypeDecl> _115316_id = *it;
			{
				jule::Ptr<_215de1d96_TypeEnumItem> _115421_item = _215de2e96_FindItem(_115117_t.ptr(), _115316_id.get()._field_Ident);;
				if ((_115421_item == nullptr)) {
					_215ec9478_pushErr(_self_, _115316_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_115117_t.get()._field_Ident, &__jule_any_type5),jule::Any(_115316_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_115217_idents.len() - _115313_i) == 1LL)) {
					_215eca138_pushReferenceByKind(_self_, &(_115421_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_215eb9ec4_Kind>(_115421_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115117_t=_215ebd23b_TypeEnum(_115421_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115117_t == nullptr)) {
					_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_2099d82c3:;
			++it;
			_115313_i++;
			goto _iter_begin_2099d82c3;
		}
		_iter_end_2099d82c3:;
	};
	return nullptr;;
}



inline jule::Ptr<_215ec38d4_Sptr> _215ecd834_buildSptrFromType(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215eba403_TypeKind>* _117341_elem) {
	{
		
		if (((*(_117341_elem)) == nullptr)) {
			_case_begin_2099dd817:;
			{
				return nullptr;;
			}
		}
		else if ((_215ebdbdc_Struct((*(_117341_elem)).ptr()) != nullptr)) {
			_case_begin_2099dd88e:;
			{
				jule::Ptr<_215dc71ab_StructIns> _117917_s = _215ebdbdc_Struct((*(_117341_elem)).ptr());;
				if (((_117917_s.get()._field_Decl != nullptr) && _117917_s.get()._field_Decl.get()._field_CppLinked)) {
					_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_215ebd4a0_Arr((*(_117341_elem)).ptr()) != nullptr) && _215ebd4a0_Arr((*(_117341_elem)).ptr()).get()._field_Auto)) {
			_case_begin_2099dd916:;
			{
				_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2099dce87:;
	};
	return jule::new_ptr<_215ec38d4_Sptr>(_215ec38d4_Sptr{._field_Elem=(*(_117341_elem))});;
}



inline jule::Ptr<_215ec38d4_Sptr> _215ecdb42_buildSptr(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dab998_SptrTypeDecl> _119332_decl) {
	jule::Bool _119413_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_119413_notPlain;
	});;
	jule::Ptr<_215eba403_TypeKind> _119817_elem = _215ed0eda_checkDecl(_self_, &(_119332_decl.get()._field_Elem));;
	return _215ecd834_buildSptrFromType(_self_, &(_119817_elem));;
}



inline jule::Ptr<_215ec6e48_Ptr> _215ecde50_buildPtrFromType(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215eba403_TypeKind>* _120240_elem) {
	{
		
		if (((*(_120240_elem)) == nullptr)) {
			_case_begin_2099e35ec:;
			{
				return nullptr;;
			}
		}
		else if (((_215ebd4a0_Arr((*(_120240_elem)).ptr()) != nullptr) && _215ebd4a0_Arr((*(_120240_elem)).ptr()).get()._field_Auto)) {
			_case_begin_2099e3674:;
			{
				_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_215ec6e48_Ptr>();;
			}
		}
		_match_end_2099e34dc:;
	};
	return jule::new_ptr<_215ec6e48_Ptr>(_215ec6e48_Ptr{._field_Elem=(*(_120240_elem))});;
}



inline jule::Ptr<_215ec6e48_Ptr> _215ece25d_buildPtr(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dac46b_PtrTypeDecl> _121731_decl) {
	jule::Bool _121813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_121813_notPlain;
	});;
	jule::Ptr<_215eba403_TypeKind> _122217_elem = nullptr;;
	if ((!(_215dac7bd_IsUnsafe(_121731_decl.ptr())))) {
		_122217_elem=_215ed0eda_checkDecl(_self_, &(_121731_decl.get()._field_Elem));
		return _215ecde50_buildPtrFromType(_self_, &(_122217_elem));;
	};
	return jule::new_ptr<_215ec6e48_Ptr>(_215ec6e48_Ptr{._field_Elem=_122217_elem});;
}



inline jule::Ptr<_215ec4341_Slc> _215ece56b_buildSlc(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dabd94_SlcTypeDecl> _123431_decl) {
	jule::Bool _123513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_123513_notPlain;
	});;
	jule::Ptr<_215eba403_TypeKind> _123917_elem = _215ed0eda_checkDecl(_self_, &(_123431_decl.get()._field_Elem));;
	{
		
		if ((_123917_elem == nullptr)) {
			_case_begin_2099e85ad:;
			{
				return nullptr;;
			}
		}
		else if (((_215ebd4a0_Arr(_123917_elem.ptr()) != nullptr) && _215ebd4a0_Arr(_123917_elem.ptr()).get()._field_Auto)) {
			_case_begin_2099e8635:;
			{
				_215ec9478_pushErr(_self_, _123431_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_2099e8503:;
	};
	return jule::new_ptr<_215ec4341_Slc>(_215ec4341_Slc{._field_Elem=_123917_elem});;
}



inline jule::Ptr<_215ec64db_Arr> _215ece879_buildArr(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dacaed_ArrTypeDecl> _125531_decl) {
	jule::Bool _125613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_125613_notPlain;
	});;
	jule::I64 _126017_n = 0LL;;
	if ((!(_215dacec7_AutoSized(_125531_decl.ptr())))) {
		jule::Ptr<_215e8e471_Data> _126321_size = _215eab911_evalExpr(_215e2c82c_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _125531_decl.get()._field_Size);;
		if ((_126321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_215e8ed34_IsConst(_126321_size.ptr())))) {
			_215ec9478_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_215ebc78a_Prim(_126321_size.get()._field_Kind.ptr()) == nullptr) || (!(_214702dc3_IsInt(_215ebc78a_Prim(_126321_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_215ec9478_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126017_n=static_cast<jule::I64>(static_cast<jule::I64>(_214704699_AsI64(_126321_size.get()._field_Constant.ptr())));
		if ((_126017_n < 0LL)) {
			_215ec9478_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_213355e23_BitSize != 64LL) && (static_cast<jule::F64>(_126017_n) > _2147008d7_Max(jule::Str("int", 3))))) {
			_215ec9478_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_215eba403_TypeKind> _128617_elem = _215ed0eda_checkDecl(_self_, &(_125531_decl.get()._field_Elem));;
	{
		
		if ((_128617_elem == nullptr)) {
			_case_begin_209a01b7c:;
			{
				return nullptr;;
			}
		}
		else if (((_215ebd4a0_Arr(_128617_elem.ptr()) != nullptr) && _215ebd4a0_Arr(_128617_elem.ptr()).get()._field_Auto)) {
			_case_begin_209a01be3:;
			{
				_215ec9478_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209a0197e:;
	};
	return jule::new_ptr<_215ec64db_Arr>(_215ec64db_Arr{._field_Auto=_215dacec7_AutoSized(_125531_decl.ptr()), ._field_N=_126017_n, ._field_Elem=_128617_elem});;
}



inline jule::Ptr<_215ec58e7_Map> _215eceb87_buildMap(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dad34b_MapTypeDecl> _130431_decl) {
	jule::Bool _130513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_130513_notPlain;
	});;
	jule::Ptr<_215eba403_TypeKind> _130917_key = _215ed0eda_checkDecl(_self_, &(_130431_decl.get()._field_Key));;
	if ((_130917_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215eba403_TypeKind> _131417_val = _215ed0eda_checkDecl(_self_, &(_130431_decl.get()._field_Val));;
	if ((_131417_val == nullptr)) {
		return nullptr;;
	};
	if ((_215ebcec7_Enum(_131417_val.ptr()) != nullptr)) {
		_215ec9478_pushErr(_self_, _130431_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_215ec58e7_Map>(_215ec58e7_Map{._field_Key=_130917_key, ._field_Val=_131417_val});;
}



inline jule::Ptr<_215ec4dbe_Tuple> _215ecee95_buildTuple(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dac180_TupleTypeDecl> _132833_decl) {
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _132917_types = jule::Slice<jule::Ptr<_215eba403_TypeKind>>::alloc(0LL, _132833_decl.get()._field_Types.len());;
	{
		auto expr = &(_132833_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209a07611:;
		if (it != expr_end) {
			jule::Ptr<_215daa5e0_TypeDecl> _133021_t = *it;
			{
				jule::Ptr<_215eba403_TypeKind> _133121_kind = _215ed0eda_checkDecl(_self_, &(_133021_t));;
				if ((_133121_kind == nullptr)) {
					return nullptr;;
				};
				_132917_types = jule::alloc_for_append(_132917_types,1);_132917_types.__push(_133121_kind);;
			}
			_iter_next_209a07611:;
			++it;
			goto _iter_begin_209a07611;
		}
		_iter_end_209a07611:;
	};
	return jule::new_ptr<_215ec4dbe_Tuple>(_215ec4dbe_Tuple{._field_Types=_132917_types});;
}



inline jule::Bool _215ed02a3_checkFnTypes(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dcea10_FnIns>* _134136_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_134136_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209a0902a:;
		if (it != expr_end) {
			jule::Ptr<_215dcdb41_ParamIns> _134221_p = *it;
			{
				_134221_p.get()._field_Kind=_215ed0bcc_build(_self_, &(_134221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_134221_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_215e2edd4_checkFnParamKind((*(_self_))._field_s, &(_134221_p));
			}
			_iter_next_209a0902a:;
			++it;
			goto _iter_begin_209a0902a;
		}
		_iter_end_209a0902a:;
	};
	if ((!(_215d7ce64_IsVoid((*(_134136_f)).get()._field_Decl.ptr())))) {
		(*(_134136_f)).get()._field_Result=_215ed0bcc_build(_self_, &((*(_134136_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_134136_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_215dcea10_FnIns> _215ed05b1_buildFn(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dbc06e_FnDecl> _135930_decl) {
	if ((_135930_decl.get()._field_Generics.len() > 0LL)) {
		_215ec9478_pushErr(_self_, _135930_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dcd24a_Fn> _136517_f = _215dd5b48_buildFn(_135930_decl);;
	jule::I64 _136713_n = (*(_self_))._field_s.get()._field_errors.len();;
	_215e37628_checkFnDecl((*(_self_))._field_s, &(_136517_f));
	if ((_136713_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_215dcea10_FnIns> _137317_ins = _215d95146_instanceForce(_136517_f);;
	_137317_ins.get()._field_Anon=true;
	jule::Bool _137613_ok = _215ed02a3_checkFnTypes(_self_, &(_137317_ins));;
	if ((!(_137613_ok))) {
		return nullptr;;
	};
	return _137317_ins;;
}



inline jule::Trait<_215eb9ec4_Kind> _215ed08be_buildByNamespace(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215dab6ac_NamespaceTypeDecl> _138439_decl) {
	jule::Str _138513_path = _215ed333e_buildLinkPathByTokens(&(_138439_decl.get()._field_Idents));;
	jule::Ptr<_215e1a133_ImportInfo> _138617_imp = _215ed6375_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._215ed483a_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_215e1a133_ImportInfo>)>([=](jule::Ptr<_215e1a133_ImportInfo> _138652_imp) mutable -> jule::Bool {
		if (((_138439_decl.get()._field_Idents.len() == 1LL) && (_138652_imp.get()._field_Alias == _138513_path))) {
			return true;;
		};
		return ((_138652_imp.get()._field_LinkPath == _138513_path) && _215e1cc90_isAccessibleViaSelection(_138652_imp.ptr()));;
	}));;
	if (((_138617_imp == nullptr) || (!(_215e1c6eb_isLookupable(_138617_imp.ptr(), jule::Str("self", 4)))))) {
		_215ec9478_pushErr(_self_, _138439_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_138513_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_215ec9830_disallowBuiltin(_self_);
	jule::Trait<_215ed6375_Lookup> _139917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_215ed6375_Lookup>(_138617_imp, 1);
	jule::Ptr<_215eba403_TypeKind> _140117_kind = _215ed0eda_checkDecl(_self_, &(_138439_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_139917_lookup;
	_215ec9654_allowBuiltin(_self_);
	return jule::Trait<_215eb9ec4_Kind>(_140117_kind, 5);;
}



inline jule::Ptr<_215eba403_TypeKind> _215ed0bcc_build(_215ec8c6e_typeChecker* _self_, jule::Any* _140729_declKind) {
	jule::Trait<_215eb9ec4_Kind> _140817_kind = nullptr;;
	{
		auto &_match_expr{ (*(_140729_declKind)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_209a15a5e:;
			{
				jule::Trait<_215eb9ec4_Kind> _141121_t = _215ecd218_buildIdent(_self_, (*(_140729_declKind)).cast_ptr<_215daaba6_IdentTypeDecl>(&__jule_any_type19));;
				if ((_141121_t != nullptr)) {
					_140817_kind=_141121_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_209a1680c:;
			{
				jule::Trait<_215eb9ec4_Kind> _141621_t = _215ecd526_buildSubIdent(_self_, (*(_140729_declKind)).cast_ptr<_215dab305_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_141621_t != nullptr)) {
					_140817_kind=_141621_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_209a16873:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215ec38d4_Sptr> _142221_t = _215ecdb42_buildSptr(_self_, (*(_140729_declKind)).cast_ptr<_215dab998_SptrTypeDecl>(&__jule_any_type79));;
				if ((_142221_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_142221_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_209a16015:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215ec6e48_Ptr> _142821_t = _215ece25d_buildPtr(_self_, (*(_140729_declKind)).cast_ptr<_215dac46b_PtrTypeDecl>(&__jule_any_type78));;
				if ((_142821_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_142821_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_209a1607b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215ec4341_Slc> _143421_t = _215ece56b_buildSlc(_self_, (*(_140729_declKind)).cast_ptr<_215dabd94_SlcTypeDecl>(&__jule_any_type77));;
				if ((_143421_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_143421_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_209a160e2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215ec64db_Arr> _144021_t = _215ece879_buildArr(_self_, (*(_140729_declKind)).cast_ptr<_215dacaed_ArrTypeDecl>(&__jule_any_type76));;
				if ((_144021_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_144021_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_209a16158:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215ec58e7_Map> _144621_t = _215eceb87_buildMap(_self_, (*(_140729_declKind)).cast_ptr<_215dad34b_MapTypeDecl>(&__jule_any_type80));;
				if ((_144621_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_144621_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_209a16a3d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215ec4dbe_Tuple> _145221_t = _215ecee95_buildTuple(_self_, (*(_140729_declKind)).cast_ptr<_215dac180_TupleTypeDecl>(&__jule_any_type81));;
				if ((_145221_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_145221_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_209a16aa4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_215dcea10_FnIns> _145821_t = _215ed05b1_buildFn(_self_, (*(_140729_declKind)).cast_ptr<_215dbc06e_FnDecl>(&__jule_any_type14));;
				if ((_145821_t != nullptr)) {
					_140817_kind=jule::Trait<_215eb9ec4_Kind>(_145821_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_209a16b1a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_215eb9ec4_Kind> _146421_t = _215ed08be_buildByNamespace(_self_, (*(_140729_declKind)).cast_ptr<_215dab6ac_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_146421_t != nullptr)) {
					_140817_kind=_146421_t;
				};
			}
		}
		else {
			_case_begin_209a15db1:;
			{
				_215ec9478_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209a15cc3:;
	};
	if ((_140817_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _140817_kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_209a22395:;
			{
				return _140817_kind.cast_ptr<_215eba403_TypeKind>(5);;
			}
		}
		else {
			_case_begin_209a22c7a:;
			{
				jule::Ptr<_215eba403_TypeKind> _147921_tk = jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=_140817_kind});;
				{
					auto &_match_expr{ _140817_kind };
					
					if (_match_expr.type_is(true, 6)) {
						_case_begin_209a236b5:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_215eba403_TypeKind>>::make({_147921_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_209a2373c:;
						{
							jule::Ptr<_215dc71ab_StructIns> _148621_s = _140817_kind.cast_ptr<_215dc71ab_StructIns>(0);;
							if (((_148621_s.get()._field_Decl != nullptr) && _148621_s.get()._field_Decl.get()._field_CppLinked)) {
								_147921_tk.get()._field_CppIdent=_148621_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_209a235a5:;
				};
				return _147921_tk;;
			}
		}
		_match_end_209a22c25:;
	};
}



inline jule::Ptr<_215eba403_TypeKind> _215ed0eda_checkDecl(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215daa5e0_TypeDecl>* _149533_decl) {
	jule::Ptr<_22e0aa1de_Token> _149717_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_149533_decl)).get()._field_Token;
	jule::Ptr<_215eba403_TypeKind> _150017_kind = _215ed0bcc_build(_self_, &((*(_149533_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_149717_errorToken;
	return _150017_kind;;
}



inline void _215ed1260_check(_215ec8c6e_typeChecker* _self_, jule::Ptr<_215ebe7d1_TypeSymbol>* _150629_t) {
	if (((*(_150629_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_215eba403_TypeKind> _151017_kind = _215ed0eda_checkDecl(_self_, &((*(_150629_t)).get()._field_Decl));;
	if ((_151017_kind == nullptr)) {
		_215ebed64_removeKind((*(_150629_t)).ptr());
		return;;
	};
	(*(_150629_t)).get()._field_Kind=_151017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _215ec8c6e_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__215ed18c0_prim(jule::Str* _152221_ident, jule::Ptr<_215ec0150_Prim> _152233_t) {
	return (_152233_t.get()._field_Kind == (*(_152221_ident)));;
}



inline jule::Bool static__215ed1c11_exist(jule::Str* _152622_ident, jule::Ptr<_215eba403_TypeKind>* _152639_k) {
	{
		
		if ((_215ebc78a_Prim((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a294ce:;
			{
				return static__215ed18c0_prim(_152622_ident, _215ebc78a_Prim((*(_152639_k)).ptr()));;
			}
		}
		else if ((_215ebc9ee_Sptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a29545:;
			{
				jule::Ptr<_215ec38d4_Sptr> _153121_sptr = _215ebc9ee_Sptr((*(_152639_k)).ptr());;
				return static__215ed1c11_exist(_152622_ident, &(_153121_sptr.get()._field_Elem));;
			}
		}
		else if ((_215ebcc63_Ptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a295ab:;
			{
				jule::Ptr<_215ec6e48_Ptr> _153421_ptr = _215ebcc63_Ptr((*(_152639_k)).ptr());;
				return static__215ed1c11_exist(_152622_ident, &(_153421_ptr.get()._field_Elem));;
			}
		}
		else if ((_215ebd714_Slc((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a29622:;
			{
				jule::Ptr<_215ec4341_Slc> _153721_slc = _215ebd714_Slc((*(_152639_k)).ptr());;
				return static__215ed1c11_exist(_152622_ident, &(_153721_slc.get()._field_Elem));;
			}
		}
		else if ((_215ebd4a0_Arr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a298a8:;
			{
				jule::Ptr<_215ec64db_Arr> _154021_arr = _215ebd4a0_Arr((*(_152639_k)).ptr());;
				return static__215ed1c11_exist(_152622_ident, &(_154021_arr.get()._field_Elem));;
			}
		}
		else if ((_215ebe1b5_Map((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a2991e:;
			{
				jule::Ptr<_215ec58e7_Map> _154321_m = _215ebe1b5_Map((*(_152639_k)).ptr());;
				return (static__215ed1c11_exist(_152622_ident, &(_154321_m.get()._field_Key)) || static__215ed1c11_exist(_152622_ident, &(_154321_m.get()._field_Val)));;
			}
		}
		else if ((_215ebdbdc_Struct((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a29985:;
			{
				jule::Ptr<_215dc71ab_StructIns> _154721_s = _215ebdbdc_Struct((*(_152639_k)).ptr());;
				{
					auto expr = &(_154721_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_209a3098b:;
					if (it != expr_end) {
						jule::Ptr<_215eb8bc6_InsGeneric> _154825_g = *it;
						{
							if (static__215ed1c11_exist(_152622_ident, &(_154825_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_209a3098b:;
						++it;
						goto _iter_begin_209a3098b;
					}
					_iter_end_209a3098b:;
				};
				return false;;
			}
		}
		else if ((_215ebd978_Fn((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a299eb:;
			{
				jule::Ptr<_215dcea10_FnIns> _155521_f = _215ebd978_Fn((*(_152639_k)).ptr());;
				{
					auto expr = &(_155521_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_209a322b7:;
					if (it != expr_end) {
						jule::Ptr<_215dcdb41_ParamIns> _155625_p = *it;
						{
							if (_215d8baee_IsSelf(_155625_p.get()._field_Decl.ptr())) {
								goto _iter_next_209a322b7;
							};
							if (static__215ed1c11_exist(_152622_ident, &(_155625_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_209a322b7:;
						++it;
						goto _iter_begin_209a322b7;
					}
					_iter_end_209a322b7:;
				};
				if ((_155521_f.get()._field_Result != nullptr)) {
					return static__215ed1c11_exist(_152622_ident, &(_155521_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_215ebe429_Tup((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_209a29c4e:;
			{
				jule::Ptr<_215ec4dbe_Tuple> _156921_tup = _215ebe429_Tup((*(_152639_k)).ptr());;
				{
					auto expr = &(_156921_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_209a343eb:;
					if (it != expr_end) {
						jule::Ptr<_215eba403_TypeKind> _157025_t = *it;
						{
							if (static__215ed1c11_exist(_152622_ident, &(_157025_t))) {
								return true;;
							};
						}
						_iter_next_209a343eb:;
						++it;
						goto _iter_begin_209a343eb;
					}
					_iter_end_209a343eb:;
				};
				return false;;
			}
		}
		else {
			_case_begin_209a29468:;
			{
				return false;;
			}
		}
		_match_end_209a2939c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _215ed1480_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9dbee6c_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e18a87_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e9e19a44_stop(_1e9e193b2_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1e9e19ca8_stopped(_1e9e193b2_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1e9e1a01c_finished(_1e9e193b2_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1e9e1a281_isLastSt(_1e9e193b2_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1e9e1a5a0_pushErr(_1e9e193b2_scopeParser* _self_, jule::Ptr<_22e0aa1de_Token> _19126_token, jule::Str _19141_fmt) {
	_1e9e36467_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1e9e1a8be_pushSuggestion(_1e9e193b2_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1e9e36786_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1e9e1ab44_insertAsNext(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1e9e18a87_stmt>(_1e9e18a87_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1e9e18a87_stmt> _1e9e1ada8_next(_1e9e193b2_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_215dba578_ScopeTree> _1e9e1b260_buildScope(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _21034_tokens, jule::Ptr<_22e0aa1de_Token> _21056_end) {
	jule::Ptr<_215dba578_ScopeTree> _21117_s = _1e9e17987_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1e9e193b2_scopeParser _21417_ssp = _1e9e193b2_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1e9e24e4a_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_215dbd04d_VarDecl> _1e9e1b56d_buildVarSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _22134_tokens) {
	jule::Ptr<_215dbd04d_VarDecl> _22217_v = _1e9e38ea3_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_215dbd405_RetSt> _1e9e1b87b_buildRetSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _22733_tokens) {
	jule::Ptr<_215dbd405_RetSt> _22817_st = jule::new_ptr<_215dbd405_RetSt>(_215dbd405_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_215dbda65_Iter> _1e9e1bb89_buildWhileNextIter(_1e9e193b2_scopeParser* _self_, jule::Ptr<_1e9e18a87_stmt>* _23842_s) {
	jule::Ptr<_215dbda65_Iter> _23917_it = jule::new_ptr<_215dbda65_Iter>(_215dbda65_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_215dbe33a_WhileKind> _24317_kind = jule::new_ptr<_215dbe33a_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1e9e1a281_isLastSt(_self_)) {
		_1e9e1a5a0_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1e9e1ada8_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _25517_stTokens = _1e9e30b9d_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1e9e18a87_stmt> _25721_stmt = jule::new_ptr<_1e9e18a87_stmt>(_1e9e18a87_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1e9e24b2b_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _26617_blockTokens = _1e9e33c6c_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1e9e19a44_stop(_self_);
		_1e9e1a5a0_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1e9e1a5a0_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1e9e1b260_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type37);
	return _23917_it;;
}



inline jule::Ptr<_215dbe33a_WhileKind> _1e9e1be97_buildWhileIterKind(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _28342_tokens) {
	return jule::new_ptr<_215dbe33a_WhileKind>(_215dbe33a_WhileKind{._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e1c2a5_getRangeKindKeysTokens(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _29018_vars;;
	jule::Slice<_22dbec89d_Log> _29024_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(_28946_toks, static_cast<jule::U64>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_215dbd04d_VarDecl> _1e9e1c5b3_buildRangeKindKey(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_215dbd04d_VarDecl> _29917_key = jule::new_ptr<_215dbd04d_VarDecl>(_215dbd04d_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1e9e1a5a0_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1e9e1a5a0_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e1a5a0_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_215dbd04d_VarDecl>> _1e9e1c8c1_buildRangeKindKeys(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_215dbd04d_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a239cdd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1e9e1c5b3_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_20a239cdd:;
			++it;
			goto _iter_begin_20a239cdd;
		}
		_iter_end_20a239cdd:;
	};
	return _32117_keys;;
}



inline void _1e9e1cc12_setupRangeKindKeysPlain(_1e9e193b2_scopeParser* _self_, jule::Ptr<_215dbebcb_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _32917_keyTokens = _1e9e1c2a5_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1e9e1a5a0_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_215dbd04d_VarDecl>> _33617_keys = _1e9e1c8c1_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1e9e1d064_setupRangeKindKeysExplicit(_1e9e193b2_scopeParser* _self_, jule::Ptr<_215dbebcb_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _34517_rang = _1e9e33c6c_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1e9e1a5a0_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1e9e1cc12_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1e9e1d394_setupRangeKindKeys(_1e9e193b2_scopeParser* _self_, jule::Ptr<_215dbebcb_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1e9e1a5a0_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1e9e1d064_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1e9e1cc12_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_215dbebcb_RangeKind> _1e9e1d7e5_buildRangeIterKind(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _36514_exprTokens, jule::Ptr<_22e0aa1de_Token>* _36541_inToken) {
	jule::Ptr<_215dbebcb_RangeKind> _36617_rng = jule::new_ptr<_215dbebcb_RangeKind>(_215dbebcb_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1e9e1a5a0_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1e9e1d394_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1e9e1db9c_buildCommonIterKind(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _38043_tokens, jule::Ptr<_22e0aa1de_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a24547a:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a246a64:;
							{
								(_38117_braceN)++;
								goto _iter_next_20a24547a;
							}
						}
						else {
							_case_begin_20a246668:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_20a246459:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_20a24547a;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_20a246b0d:;
						{
							jule::Slice<jule::Ptr<_22e0aa1de_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_22e0aa1de_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1e9e1d7e5_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type39);;
						}
					}
					_match_end_20a2473c2:;
				};
			}
			_iter_next_20a24547a:;
			++it;
			_38214_i++;
			goto _iter_begin_20a24547a;
		}
		_iter_end_20a24547a:;
	};
	return jule::Any(_1e9e1be97_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_215dbda65_Iter> _1e9e1deaa_buildCommonIter(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _40738_tokens) {
	jule::Ptr<_215dbda65_Iter> _40817_it = jule::new_ptr<_215dbda65_Iter>(_215dbda65_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1e9e19a44_stop(_self_);
		_1e9e1a5a0_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _41817_exprTokens = _1e9e30b9d_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1e9e1db9c_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _42317_scopeTokens = _1e9e33c6c_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1e9e19a44_stop(_self_);
		_1e9e1a5a0_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1e9e1a5a0_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1e9e1b260_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_215dbda65_Iter> _1e9e1e2b8_buildIterSt(_1e9e193b2_scopeParser* _self_, jule::Ptr<_1e9e18a87_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1e9e1bb89_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1e9e1deaa_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_215dc0083_BreakSt> _1e9e1e5c6_buildBreakSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _44436_tokens) {
	jule::Ptr<_215dc0083_BreakSt> _44517_brk = jule::new_ptr<_215dc0083_BreakSt>(_215dc0083_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e9e1a5a0_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1e9e1a8be_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1e9e1a5a0_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_215dc043a_ContSt> _1e9e1e8d4_buildContSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _46235_tokens) {
	jule::Ptr<_215dc043a_ContSt> _46317_cont = jule::new_ptr<_215dc043a_ContSt>(_215dc043a_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e9e1a5a0_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1e9e1a8be_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1e9e1a5a0_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_215dc08ad_If> _1e9e1ebe2_buildIf(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _48031_tokens) {
	jule::Ptr<_215dc08ad_If> _48117_model = jule::new_ptr<_215dc08ad_If>(_215dc08ad_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _48517_exprTokens = _1e9e30b9d_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1e9e1a5a0_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _49217_scopeTokens = _1e9e33c6c_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1e9e19a44_stop(_self_);
		_1e9e1a5a0_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22e0aa1de_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1e9e1a5a0_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1e9e1b260_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_215dc0c65_Else> _1e9e20000_buildElse(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _51333_tokens) {
	jule::Ptr<_215dc0c65_Else> _51417_els = jule::new_ptr<_215dc0c65_Else>(_215dc0c65_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _51917_scopeTokens = _1e9e33c6c_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1e9e1a5a0_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1e9e19a44_stop(_self_);
			_1e9e1a5a0_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1e9e1a8be_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1e9e1a5a0_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1e9e1b260_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_215dc11d8_Conditional> _1e9e2030d_buildIfElseChain(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _53739_tokens) {
	jule::Ptr<_215dc11d8_Conditional> _53817_chain = jule::new_ptr<_215dc11d8_Conditional>(_215dc11d8_Conditional{._field_Head=_1e9e1ebe2_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_20a2622ee;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_215dc08ad_If> _55025_elif = _1e9e1ebe2_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_20a2622ee;
			};
			_53817_chain.get()._field_Default=_1e9e20000_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_20a2622ee;
		}
	_iter_next_20a2622ee:;
	}
	_iter_end_20a2622ee:;;
	return _53817_chain;;
}



inline jule::Ptr<_215daeb11_Expr> _1e9e2061b_buildCoCallSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _56036_tokens) {
	jule::Ptr<_22e0aa1de_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_215daeb11_Expr> _56317_e = _1e9e36a94_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_20a265e7e:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_215db3ae3_FnCallExpr>(&__jule_any_type113).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_20a26639c:;
			{
				_1e9e1a5a0_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_20a26606c:;
	};
	return _56317_e;;
}



inline jule::Ptr<_215db8147_GotoSt> _1e9e20929_buildGotoSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _57635_tokens) {
	jule::Ptr<_215db8147_GotoSt> _57717_gt = jule::new_ptr<_215db8147_GotoSt>(_215db8147_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1e9e1a5a0_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1e9e1a5a0_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_22e0aa1de_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e1a5a0_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_215db8433_FallSt> _1e9e20c37_buildFallSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _59635_tokens) {
	jule::Ptr<_215db8433_FallSt> _59717_fll = jule::new_ptr<_215db8433_FallSt>(_215db8433_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1e9e1a5a0_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_215dc18ae_TypeAliasDecl> _1e9e21045_buildTypeAliasSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _60640_tokens) {
	jule::Ptr<_215dc18ae_TypeAliasDecl> _60717_tad = _1e9e3818e_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1e9e214a7_pushCaseExpr(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _61235_tokens, jule::Ptr<_22e0aa1de_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_215daeb11_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_215daa5e0_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_215daeb11_Expr>(_215daeb11_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type95)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1e9e1a5a0_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1e9e36a94_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_215daeb11_Expr>> _1e9e21908_buildCaseExprs(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _63638_tokens, jule::Ptr<_22e0aa1de_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_215daeb11_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a27241e:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_20a27483e:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_20a274443:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_20a274234:;
					};
					goto _iter_next_20a27241e;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_20a27241e;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_20a275136:;
						{
							jule::Slice<jule::Ptr<_22e0aa1de_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1e9e1a5a0_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1e9e214a7_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_20a27519c:;
						{
							(*(_63661_colon))=_64121_tok;
							_1e9e214a7_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_20a274ba2:;
				};
			}
			_iter_next_20a27241e:;
			++it;
			_64114_i++;
			goto _iter_begin_20a27241e;
		}
		_iter_end_20a27241e:;
	};
	_1e9e1a5a0_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_215dba578_ScopeTree> _1e9e21c16_buildCaseScope(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _68022_next;;
			({
				__jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool __jule_assign_result = _1e9e1878a_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_20a278a41;
			};
			jule::Ptr<_22e0aa1de_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_20a278a41;
			};
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_215dba578_ScopeTree> _69021_scope = _1e9e1b260_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_20a278a41:;
	}
	_iter_end_20a278a41:;;
	jule::Ptr<_22e0aa1de_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_215dba578_ScopeTree> _69817_scope = _1e9e1b260_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_215dc1d32_Case__jule_tuple_bool _1e9e220bd_buildCase(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_215dc1d32_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_215dc1d32_Case> _70417_c = jule::new_ptr<_215dc1d32_Case>(_215dc1d32_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_22e0aa1de_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1e9e21908_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1e9e21c16_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_215dc1d32_Case__jule_tuple_x_215dc0c65_Else _1e9e22475_buildCases(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_215dc1d32_Case__jule_tuple_x_215dc0c65_Else __jule_func_result;
	jule::Slice<jule::Ptr<_215dc1d32_Case>> _71917_cases = nullptr;;
	jule::Ptr<_215dc0c65_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_22e0aa1de_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1e9e1a5a0_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_20a282231;
			};
			jule::Ptr<_215dc1d32_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_215dc1d32_Case__jule_tuple_bool __jule_assign_result = _1e9e220bd_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_215dc0c65_Else>(_215dc0c65_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1e9e1a5a0_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_20a282231:;
	}
	_iter_end_20a282231:;;
	if (_72117_defNotLast) {
		_1e9e1a5a0_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_215dc2508_MatchCase> _1e9e22783_buildMatchCase(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _75237_tokens) {
	jule::Ptr<_215dc2508_MatchCase> _75317_m = jule::new_ptr<_215dc2508_MatchCase>(_215dc2508_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _76317_exprTokens = _1e9e30b9d_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1e9e1a5a0_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _77117_blockToks = _1e9e33c6c_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1e9e19a44_stop(_self_);
		_1e9e1a5a0_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1e9e1a8be_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1e9e1a5a0_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_215dc1d32_Case__jule_tuple_x_215dc0c65_Else __jule_assign_result = _1e9e22475_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_215dba578_ScopeTree> _1e9e22a91_buildScopeSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_22e0aa1de_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1e9e1a5a0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1e9e1a5a0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1e9e1a5a0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _81517_scopeTokens = _1e9e33c6c_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1e9e1a5a0_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1e9e1a5a0_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_215dba578_ScopeTree> _82217_scope = _1e9e1b260_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_215db7c90_LabelSt> _1e9e22d9e_buildLabelSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _82836_tokens) {
	jule::Ptr<_215db7c90_LabelSt> _82917_lbl = jule::new_ptr<_215db7c90_LabelSt>(_215db7c90_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1e9e1ab44_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__215db9c3c_StmtData__jule_tuple_bool _1e9e231ac_buildIdSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _84333_tokens) {
	__jule_tuple__215db9c3c_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_22e0aa1de_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_20a298137:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1e9e22d9e_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_20a2980d2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e9e321cc_assignInfo> _1e9e234ba_buildAssignInfo(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _85739_tokens) {
	jule::Ptr<_1e9e321cc_assignInfo> _85817_info = jule::new_ptr<_1e9e321cc_assignInfo>(_1e9e321cc_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a299897:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a29aea3:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_20a29aaa7:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_20a29a898:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_20a29b28e:;
						{
							goto _iter_next_20a299897;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_20a29b305:;
						{
							goto _iter_next_20a299897;
						}
					}
					else if ((!(_22e0aecc6_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_20a29b37c:;
						{
							goto _iter_next_20a299897;
						}
					}
					_match_end_20a29b04c:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_22e0aea2e_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_20a299897;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_22e0aea2e_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1e9e1a5a0_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_20a299897;
			}
			_iter_next_20a299897:;
			++it;
			_86214_i++;
			goto _iter_begin_20a299897;
		}
		_iter_end_20a299897:;
	};
	return _85817_info;;
}



inline jule::Ptr<_215db8a3d_AssignLeft> _1e9e237c8_buildAssignL(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _90536_tokens) {
	jule::Ptr<_215db8a3d_AssignLeft> _90617_l = jule::new_ptr<_215db8a3d_AssignLeft>(_215db8a3d_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_215db8a3d_AssignLeft>> _1e9e23ad6_buildAssignLs(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_215db8a3d_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2a2d89:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _91821_part = *it;
			{
				jule::Ptr<_215db8a3d_AssignLeft> _91921_l = _1e9e237c8_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_20a2a2d89:;
			++it;
			goto _iter_begin_20a2a2d89;
		}
		_iter_end_20a2a2d89:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool _1e9e23de4_buildPlainAssign(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _92640_tokens) {
	__jule_tuple_x_215db907c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e9e321cc_assignInfo> _92717_info = _1e9e234ba_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215db907c_AssignSt> _93217_assign = jule::new_ptr<_215db907c_AssignSt>(_215db907c_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _93618_parts;;
	jule::Slice<_22dbec89d_Log> _93625_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1e9e23ad6_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool _1e9e24202_buildDeclAssign(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _95038_tokens) {
	__jule_tuple_x_215db907c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_22e0aa1de_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_215db907c_AssignSt> _96117_assign = jule::new_ptr<_215db907c_AssignSt>(_215db907c_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _96617_rang = _1e9e33c6c_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1e9e1a5a0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_22e0aa1de_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _97818_parts;;
	jule::Slice<_22dbec89d_Log> _97825_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_96617_rang), static_cast<jule::U64>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2add0c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1e9e1a5a0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_20a2add0c;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1e9e1a5a0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_20a2add0c;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1e9e1a5a0_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_20a2add0c;
				};
				jule::Ptr<_215db8a3d_AssignLeft> _101421_l = _1e9e237c8_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_20a2add0c:;
			++it;
			goto _iter_begin_20a2add0c;
		}
		_iter_end_20a2add0c:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_215db907c_AssignSt__jule_tuple_bool _1e9e24510_buildAssignSt(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _102337_tokens) {
	__jule_tuple_x_215db907c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1e9e32573_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_20a2b7178:;
			{
				({
					__jule_tuple_x_215db907c_AssignSt__jule_tuple_bool __jule_assign_result = _1e9e24202_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_20a2b6c6b:;
			{
				({
					__jule_tuple_x_215db907c_AssignSt__jule_tuple_bool __jule_assign_result = _1e9e23de4_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_20a2b6c16:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_215db04a2_UseExpr> _1e9e2481d_buildUseExpr(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1e9e1a5a0_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_215db04a2_UseExpr> _104317_ue = jule::new_ptr<_215db04a2_UseExpr>(_215db04a2_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1e9e36a94_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1e9e24b2b_buildSt(_1e9e193b2_scopeParser* _self_, jule::Ptr<_1e9e18a87_stmt>* _105131_st) {
	jule::Ptr<_22e0aa1de_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__215db9c3c_StmtData__jule_tuple_bool __jule_assign_result = _1e9e231ac_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_215db907c_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_215db907c_AssignSt__jule_tuple_bool __jule_assign_result = _1e9e24510_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_20a2bc117:;
			{
				return jule::Any(_1e9e2481d_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_20a2bc26b:;
			{
				return jule::Any(_1e9e1b56d_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_20a2bc2d2:;
			{
				return jule::Any(_1e9e1b87b_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_20a2bc39d:;
			{
				return jule::Any(_1e9e1e2b8_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_20a2bc414:;
			{
				return jule::Any(_1e9e1e5c6_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_20a2bc47a:;
			{
				return jule::Any(_1e9e1e8d4_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_20a2bc4e1:;
			{
				return jule::Any(_1e9e2030d_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_20a2bc557:;
			{
				return jule::Any(_1e9e2061b_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_20a2bc5bd:;
			{
				return jule::Any(_1e9e20929_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_20a2bc634:;
			{
				return jule::Any(_1e9e20c37_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_20a2bc69a:;
			{
				return jule::Any(_1e9e21045_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_20a2bc711:;
			{
				return jule::Any(_1e9e22783_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_20a2bc777:;
			{
				return jule::Any(_1e9e22a91_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20a2bc7ee:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1e9e22a91_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_20a2bbec4:;
	};
	jule::Ptr<_215daeb11_Expr> _110117_expr = _1e9e36a94_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1e9e1a5a0_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1e9e24e4a_build(_1e9e193b2_scopeParser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _110929_tokens, jule::Ptr<_215dba578_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1e9e18e2d_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1e9e1a281_isLastSt(_self_))) && (!(_1e9e1a01c_finished(_self_))))) {
		{
			jule::Ptr<_1e9e18a87_stmt> _111721_st = _1e9e1ada8_next(_self_);;
			jule::Any _111821_data = _1e9e24b2b_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_215db9e6d_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1e9e19ca8_stopped(_self_)) {
				goto _iter_end_20a2ca532;
			};
		}
	_iter_next_20a2ca532:;
	}
	_iter_end_20a2ca532:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e193b2_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1e9e2616b_pushErr(_1e9e25896_exprBuilder* _self_, jule::Ptr<_22e0aa1de_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1e9e36467_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1e9e2648a_pushSuggestion(_1e9e25896_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1e9e36786_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_215db078d_TupleExpr> _1e9e26798_buildTuple(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>* _5334_parts) {
	jule::Ptr<_215db078d_TupleExpr> _5417_tuple = jule::new_ptr<_215db078d_TupleExpr>(_215db078d_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_215daeb11_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2ea200:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1e9e302b8_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_20a2ea200:;
			++it;
			goto _iter_begin_20a2ea200;
		}
		_iter_end_20a2ea200:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_215db0b45_LitExpr> _1e9e26aa6_buildLit(_1e9e25896_exprBuilder* _self_, jule::Ptr<_22e0aa1de_Token> _6327_token) {
	return jule::new_ptr<_215db0b45_LitExpr>(_215db0b45_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e26db4_buildPrimitiveType(_1e9e25896_exprBuilder* _self_, jule::Ptr<_22e0aa1de_Token>* _7038_token) {
	return _1e9e4628a_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1e9e271c2_buildSingle(_1e9e25896_exprBuilder* _self_, jule::Ptr<_22e0aa1de_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_20a2ebb91:;
			{
				return jule::Any(_1e9e26aa6_buildLit(_self_, _7434_token), &__jule_any_type107);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20a2ebc07:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_215db2383_VariadicExpr>(_215db2383_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type82);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_20a2ebc7e:;
			{
				return jule::Any(_1e9e31572_buildIdentExpr(&(_7434_token)), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_20a2ebd06:;
			{
				return jule::Any(_1e9e26db4_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type95);;
			}
		}
		_match_end_20a2eb83e:;
	};
	_1e9e2616b_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_215db17c2_IdentExpr> _1e9e274d0_buildCppLinkedIdent(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1e9e2616b_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22e0aa1de_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e2616b_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215db17c2_IdentExpr> _10917_expr = _1e9e31572_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_215db1ecb_UnaryExpr> _1e9e277dd_buildUnary(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _11433_tokens) {
	jule::Ptr<_22e0aa1de_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1e9e2616b_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_22e0aa8e8_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1e9e2616b_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_215db1ecb_UnaryExpr>(_215db1ecb_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1e9e302b8_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_215db3065_SubIdentExpr> _1e9e27aeb_buildObjSubIdent(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_22e0aa1de_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_215db3065_SubIdentExpr>(_215db3065_SubIdentExpr{._field_Expr=_1e9e302b8_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_215db2ae2_NsSelectionExpr> _1e9e27e09_buildNsSubIdent(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _15039_tokens) {
	jule::Ptr<_215db2ae2_NsSelectionExpr> _15117_ns = jule::new_ptr<_215db2ae2_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a307d01:;
		if (it != expr_end) {
			jule::I64 _15214_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1e9e2616b_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e9e2648a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e9e2616b_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e9e2648a_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_20a307d01:;
			++it;
			_15214_i++;
			goto _iter_begin_20a307d01;
		}
		_iter_end_20a307d01:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e28217_buildType(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_215daa5e0_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1e9e2616b_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_1e9e2616b_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1e9e28525_buildSubIdent(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _18337_tokens) {
	jule::I64 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_22e0aa1de_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_20a30ed6e:;
			{
				return jule::Any(_1e9e27aeb_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_20a310369:;
			{
				return jule::Any(_1e9e27e09_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20a3103d0:;
			{
				if (_18513_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1e9e28217_buildType(_self_, _18337_tokens), &__jule_any_type95);;
				};
			}
		}
		_match_end_20a310204:;
	};
	_1e9e2616b_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_215db2383_VariadicExpr> _1e9e28833_buildVariadic(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _20136_tokens) {
	jule::Ptr<_22e0aa1de_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_215db2383_VariadicExpr>(_215db2383_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1e9e302b8_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _1e9e28b41_buildOpRight(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _21036_tokens) {
	jule::Ptr<_22e0aa1de_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_20a3142a2:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _1e9e2eb9c_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_20a315869:;
						{
							_21521_d.cast_ptr<_215db3ae3_FnCallExpr>(&__jule_any_type113).get()._field_Exception=jule::new_ptr<_215dba578_ScopeTree>(_215dba578_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_20a31599b:;
				};
			}
		}
		_match_end_20a3140e8:;
	};
	_1e9e2616b_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_215daedec_RangeExpr> _1e9e28e71_buildBetweenParentheses(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1e9e2616b_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_215daedec_RangeExpr>(_215daedec_RangeExpr{._field_Expr=_1e9e302b8_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_215db273a_CastExpr> _1e9e29290_tryBuildCast(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a318b8b:;
		if (it != expr_end) {
			jule::I64 _24513_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a31a253:;
							{
								(_24417_rangeN)++;
								goto _iter_next_20a318b8b;
							}
						}
						else {
							_case_begin_20a319d57:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_20a319b48:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_20a318b8b;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_22e0aa1de_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_27217_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_215db273a_CastExpr> _27721_cast = jule::new_ptr<_215db273a_CastExpr>(_215db273a_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1e9e2616b_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1e9e2648a_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1e9e2616b_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1e9e2648a_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_215daa5e0_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1e9e2616b_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1e9e33c6c_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_1e9e302b8_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_20a318b8b:;
			++it;
			_24513_i++;
			goto _iter_begin_20a318b8b;
		}
		_iter_end_20a318b8b:;
	};
	return nullptr;;
}



inline void _1e9e29658_pushArg(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_215daeb11_Expr>>* _31731_args, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _31750_tokens, jule::Ptr<_22e0aa1de_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_1e9e302b8_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_215daeb11_Expr>> _1e9e29966_buildArgs(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a327727:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a328ea9:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_20a328aad:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_20a32889e:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_20a327727;
				};
				_1e9e29658_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_20a327727:;
			++it;
			_33613_i++;
			goto _iter_begin_20a327727;
		}
		_iter_end_20a327727:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1e9e29658_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_1e9e29658_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _1e9e29c74_buildCallGenerics(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _37418_parts;;
	jule::Slice<_22dbec89d_Log> _37425_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_36840_tokens), static_cast<jule::U64>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a32da5d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_20a32da5d;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_215daa5e0_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1e9e2616b_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_20a32da5d:;
			++it;
			goto _iter_begin_20a32da5d;
		}
		_iter_end_20a32da5d:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_215db3ae3_FnCallExpr> _1e9e2a1c5_buildFnCall(_1e9e25896_exprBuilder* _self_, jule::Ptr<_22e0aa1de_Token>* _39235_token, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _39255_expr, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _39276_args) {
	return jule::new_ptr<_215db3ae3_FnCallExpr>(_215db3ae3_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_1e9e302b8_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_1e9e29966_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _1e9e2a4d3_buildParenthesesRange(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _40045_tokens) {
	jule::Ptr<_22e0aa1de_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20a332c2c:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_20a33359b:;
						{
							jule::Ptr<_215db273a_CastExpr> _40625_expr = _1e9e29290_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type111);;
							};
						}
					}
					_match_end_20a3333d1:;
				};
			}
		}
		_match_end_20a332a73:;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_assign_result = _1e9e34014_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1e9e28e71_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type106);;
	};
	return jule::Any(_1e9e2a1c5_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type113);;
}



inline jule::Ptr<_215db134e_UnsafeExpr> _1e9e2a7e1_buildUnsafeExpr(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _42138_tokens) {
	jule::Ptr<_22e0aa1de_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _42517_rangeTokens = _1e9e33c6c_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_215db134e_UnsafeExpr>(_215db134e_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1e9e302b8_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_215dbc06e_FnDecl> _1e9e2aaee_buildAnonFn(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _43635_tokens) {
	jule::Ptr<_215dbc06e_FnDecl> _43717_f = _1e9e3bec8_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_215dbc3c1_IsAnon(_43717_f.ptr())))) {
		_1e9e2616b_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1e9e2ae0c_buildUnsafe(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_20a33955d:;
			{
				return jule::Any(_1e9e2aaee_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_20a339a36:;
			{
				return jule::Any(_1e9e2a7e1_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type108);;
			}
		}
		_match_end_20a3399ae:;
	};
}



inline void _1e9e2b2c5_pushRangeLitPart(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _45539_part, jule::Ptr<_22e0aa1de_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e2b605_getBraceRangeLitExprParts(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a33db7d:;
		if (it != expr_end) {
			jule::I64 _47713_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a340410:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_20a340014:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_20a33ed05:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_20a33db7d;
				};
				_1e9e2b2c5_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_20a33db7d:;
			++it;
			_47713_i++;
			goto _iter_begin_20a33db7d;
		}
		_iter_end_20a33db7d:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1e9e2b2c5_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_1e9e2b2c5_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_215db4572_FieldExprPair> _1e9e2b924_buildFieldExprPair(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1e9e2616b_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215db4572_FieldExprPair> _51317_pair = jule::new_ptr<_215db4572_FieldExprPair>(_215db4572_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1e9e302b8_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_215daeb11_Expr> _1e9e2bc32_buildStructLitExpr(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _52142_tokens) {
	jule::Ptr<_22e0aa1de_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_215daeb11_Expr>(_215daeb11_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1e9e2b924_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1e9e302b8_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_215daeb11_Expr>> _1e9e2c040_buildStructLitExprs(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _53717_parts = _1e9e2b605_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_215daeb11_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_215daeb11_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a348292:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1e9e2bc32_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_20a348292:;
			++it;
			goto _iter_begin_20a348292;
		}
		_iter_end_20a348292:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_215db4cc0_StructLit> _1e9e2c370_buildTypedStructLiteral(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_215daa5e0_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1e9e2616b_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_22e0aa1de_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_56013_token.get()._field_Kind.equal("{", 1)))) {
		_1e9e2616b_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_215db4cc0_StructLit>(_215db4cc0_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1e9e2c040_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_215daeb11_Expr> _1e9e2c68e_buildBraceLitPart(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _57425_r;;
	({
		__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_assign_result = _1e9e31033_splitDelim(_57341_tokens, static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_215daeb11_Expr>(_215daeb11_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_215db5a18_KeyValPair>(_215db5a18_KeyValPair{._field_Key=_1e9e302b8_buildFromTokens(_self_, _57418_l), ._field_Val=_1e9e302b8_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type85)});;
	};
	return _1e9e302b8_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_215db5243_BraceLit> _1e9e2c99c_buildBraceLit(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _59037_tokens) {
	jule::Ptr<_215db5243_BraceLit> _59117_lit = jule::new_ptr<_215db5243_BraceLit>(_215db5243_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _59617_parts = _1e9e2b605_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_215daeb11_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a352ad7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1e9e2c68e_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_20a352ad7:;
			++it;
			goto _iter_begin_20a352ad7;
		}
		_iter_end_20a352ad7:;
	};
	return _59117_lit;;
}



inline jule::Any _1e9e2ccaa_buildBraceRange(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_22e0aa1de_Token__jule_tuple_int __jule_assign_result = _1e9e31819_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_20a354512:;
			{
				return jule::Any(_1e9e2c99c_buildBraceLit(_self_, _60939_tokens), &__jule_any_type114);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_20a354589:;
			{
				_1e9e2616b_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20a3534ab:;
	};
	jule::Ptr<_22e0aa1de_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1e9e2eb9c_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_20a357603:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_22e0aa1de_Token>> _63225_rangeTokens = _1e9e33c6c_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_215db3ae3_FnCallExpr> _63325_model = _62421_d.cast_ptr<_215db3ae3_FnCallExpr>(&__jule_any_type113);;
					if (_215db41ba_Ignored(_63325_model.ptr())) {
						_1e9e2616b_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e9e2648a_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1e9e374ce_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_20a357801:;
				{
					_1e9e2616b_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_20a357735:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_20a35c1da:;
			{
				return _1e9e2ae0c_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_20a35c251:;
			{
				return jule::Any(_1e9e2aaee_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_20a35c042:;
			{
				return jule::Any(_1e9e2c370_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type112);;
			}
		}
		else {
			_case_begin_20a359aab:;
			{
				_1e9e2616b_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20a35b393:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e2d0b8_getEnumerableParts(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _66318_parts;;
	jule::Slice<_22dbec89d_Log> _66325_errors;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_66141_tokens), static_cast<jule::U64>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_215db6200_SliceExpr> _1e9e2d3c6_buildSlice(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _66833_tokens) {
	jule::Ptr<_215db6200_SliceExpr> _66917_slc = jule::new_ptr<_215db6200_SliceExpr>(_215db6200_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _67417_parts = _1e9e2d0b8_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_215daeb11_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a36161d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_20a36161d;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1e9e302b8_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_20a36161d:;
			++it;
			goto _iter_begin_20a36161d;
		}
		_iter_end_20a36161d:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_215db6a6e_IndexingExpr> _1e9e2d827_buildIndexing(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _69113_tokens, jule::Ptr<_22e0aa1de_Token> _69135_errorToken) {
	jule::Ptr<_22e0aa1de_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215daeb11_Expr> _69817_expr = _1e9e302b8_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215daeb11_Expr> _70217_index = _1e9e302b8_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_215db6a6e_IndexingExpr>(_215db6a6e_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_215db7179_SlicingExpr> _1e9e2ddbb_buildSlicing(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _71463_start, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _71514_to, jule::Ptr<_22e0aa1de_Token>* _71533_errorToken, jule::Ptr<_22e0aa1de_Token> _71557_end) {
	jule::Ptr<_215db7179_SlicingExpr> _71617_slc = jule::new_ptr<_215db7179_SlicingExpr>(_215db7179_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_1e9e302b8_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_1e9e302b8_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_1e9e302b8_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _1e9e2e1c9_buildBracketRange(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _73040_tokens) {
	jule::Ptr<_22e0aa1de_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_22e0aa1de_Token__jule_tuple_int __jule_assign_result = _1e9e31819_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1e9e2d3c6_buildSlice(_self_, _73040_tokens), &__jule_any_type101);;
	} else if ((_73230_rangeN > 0LL)) {
		_1e9e2616b_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _74829_to;;
	({
		__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_assign_result = _1e9e31033_splitDelim(&(_74717_splitTokens), static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1e9e2ddbb_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type110);;
	};
	return jule::Any(_1e9e2d827_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type109);;
}



inline jule::Any _1e9e2e4d7_buildData(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_20a36d372:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_20a36d40a:;
			{
				return _1e9e271c2_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_20a36d471:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1e9e274d0_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_20a36d174:;
	};
	jule::Ptr<_22e0aa1de_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && _76717_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1e9e28833_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type82);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20a37161c:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && _76717_token.get()._field_Kind.equal("*", 1))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1e9e28217_buildType(_self_, _75533_tokens), &__jule_any_type95);;
					};
				};
				return jule::Any(_1e9e277dd_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20a371694:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_20a371540;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_22e0aa1de_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && _78921_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_20a371540;
					};
				};
				jule::Ptr<_22e0aa1de_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_79517_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_20a371540;
				};
				return jule::Any(_1e9e28217_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		_match_end_20a371540:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_20a371ba0:;
			{
				return _1e9e28525_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_20a377106:;
			{
				return jule::Any(_1e9e28217_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20a37716c:;
			{
				return _1e9e28b41_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20a3771d3:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20a378932:;
						{
							return _1e9e2a4d3_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_20a3789a9:;
						{
							return _1e9e2ccaa_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20a378a31:;
						{
							return _1e9e2e1c9_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_20a378437:;
				};
			}
		}
		_match_end_20a371b4a:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1e9e28217_buildType(_self_, _75533_tokens), &__jule_any_type95);;
	};
	_1e9e2616b_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e9e2e88e_buildBinop(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_22e0aa1de_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_1e9e3061a_isTypeOp(&(_83217_op.get()._field_Kind)) && _1e9e30906_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_1e9e28217_buildType(_self_, _83134_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1e9e2616b_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e2648a_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_215db34d8_BinopExpr>(_215db34d8_BinopExpr{._field_Left=_1e9e302b8_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_1e9e302b8_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type115);;
}



inline jule::Any _1e9e2eb9c_build(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _85629_tokens) {
	jule::I64 _85713_i = _1e9e312ca_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1e9e2e4d7_buildData(_self_, _85629_tokens);;
	};
	return _1e9e2e88e_buildBinop(_self_, _85629_tokens, _85713_i);;
}



inline jule::Any _1e9e2eeaa_buildKind(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _86518_parts;;
	jule::Slice<_22dbec89d_Log> _86525_errors;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(_86433_tokens, static_cast<jule::U64>(8LLU), true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1e9e26798_buildTuple(_self_, &(_86518_parts)), &__jule_any_type87);;
	};
	return _1e9e2eb9c_build(_self_, _86433_tokens);;
}



inline jule::Ptr<_215daeb11_Expr> _1e9e302b8_buildFromTokens(_1e9e25896_exprBuilder* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_215daeb11_Expr>(_215daeb11_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1e9e2eeaa_buildKind(_self_, &(_87538_tokens))});;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e25896_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e321cc_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e9e35d3a_stop(_1e9e35a0a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1e9e3609e_stopped(_1e9e35a0a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1e9e36467_pushErr(_1e9e35a0a_parser* _self_, jule::Ptr<_22e0aa1de_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1e9e34e6b_compilerErr(&(_28126_token), &(_28141_fmt), _28154_args));;
}



inline void _1e9e36786_pushSuggestion(_1e9e35a0a_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1e9e3539a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28633_fmt, _28646_args);
	};
}



inline jule::Ptr<_215daeb11_Expr> _1e9e36a94_buildExpr(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _29034_tokens) {
	jule::Ptr<_1e9e25896_exprBuilder> _29117_ep = jule::new_ptr<_1e9e25896_exprBuilder>(_1e9e25896_exprBuilder{._field_p=_self_});;
	jule::Ptr<_215daeb11_Expr> _29417_expr = _1e9e302b8_buildFromTokens(_29117_ep.ptr(), (*(_29034_tokens)));;
	return _29417_expr;;
}



inline jule::Ptr<_215d77348_Directive> _1e9e36da2_buildDirective(_1e9e35a0a_parser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1e9e36467_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1e9e36467_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_215d77348_Directive>(_215d77348_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1e9e37127_pushDirective(_1e9e35a0a_parser* _self_, jule::Ptr<_215d77348_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a3ab756:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_20a3ab756:;
			++it;
			goto _iter_begin_20a3ab756;
		}
		_iter_end_20a3ab756:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_215dba578_ScopeTree> _1e9e374ce_buildScope(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _32635_tokens, jule::Ptr<_22e0aa1de_Token> _32657_end) {
	jule::Ptr<_215dba578_ScopeTree> _32717_s = _1e9e17987_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1e9e193b2_scopeParser _32917_sp = _1e9e193b2_scopeParser{._field_p=_self_, };;
	_1e9e24e4a_build(&_32917_sp, _32635_tokens, &(_32717_s));
	return _32717_s;;
}



inline __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool _1e9e37930__buildType(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1e9e4671e_typeBuilder _33817_tb = _1e9e4671e_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33642_tokens)), ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_215daa5e0_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e499b9_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool _1e9e37d81_buildType(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_22e0aa1de_Token> _35113_token = (*(_34941_tokens))[(*(_35013_i))];;
	jule::Ptr<_215daa5e0_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37930__buildType(_self_, _34941_tokens, _35013_i, _35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1e9e36467_pushErr(_self_.ptr(), _35113_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_215dc18ae_TypeAliasDecl> _1e9e3818e_buildTypeAliasDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dc18ae_TypeAliasDecl> _36517_tad = jule::new_ptr<_215dc18ae_TypeAliasDecl>(_215dc18ae_TypeAliasDecl{._field_Token=(*(_35943_tokens))[1LL], ._field_Ident=(*(_35943_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_22e0aa1de_Token> _36917_token = (*(_35943_tokens))[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _36917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=(*(_35943_tokens))[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_215daa5e0_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, _35943_tokens, (&(_36017_i)), true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < (*(_35943_tokens)).len()))) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_35943_tokens))[_36017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1e9e456a7_isPub(&(_36517_tad.get()._field_Ident));
	return _36517_tad;;
}



inline void _1e9e384ad_buildVarTypeAndExpr(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_215dbd04d_VarDecl>* _39944_v, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_22e0aa1de_Token> _40117_tok = (*(_39962_tokens))[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= (*(_39962_tokens)).len()) || (((*(_39962_tokens))[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && (*(_39962_tokens))[_40017_i].get()._field_Kind.equal("=", 1)))) {
			_1e9e36467_pushErr(_self_.ptr(), _40117_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_215daa5e0_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, _39962_tokens, (&(_40017_i)), true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			(*(_39944_v)).get()._field_Kind=_40922_t;
			if ((_40017_i >= (*(_39962_tokens)).len())) {
				return;;
			};
			_40117_tok=(*(_39962_tokens))[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((!_40117_tok.get()._field_Kind.equal("=", 1))) {
			_1e9e36467_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_22e0aa1de_Token>> _42421_exprTokens = (*(_39962_tokens)).slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1e9e36467_pushErr(_self_.ptr(), _40117_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39944_v)).get()._field_Expr=_1e9e36a94_buildExpr(_self_, &(_42421_exprTokens));
	} else {
		_1e9e36467_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e9e387cc_buildVarCommon(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_215dbd04d_VarDecl>* _43539_v, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _43556_tokens) {
	(*(_43539_v)).get()._field_Token=_43556_tokens[0LL];
	if (((*(_43539_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_43539_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43539_v)).get()._field_Ident=(*(_43539_v)).get()._field_Token.get()._field_Kind;
	(*(_43539_v)).get()._field_Public=_1e9e456a7_isPub(&((*(_43539_v)).get()._field_Ident));
	(*(_43539_v)).get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1e9e384ad_buildVarTypeAndExpr(_self_, _43539_v, &(_43556_tokens));
	};
}



inline void _1e9e38b95_buildVarBegin(_1e9e35a0a_parser* _self_, jule::Ptr<_215dbd04d_VarDecl>* _45137_v, jule::I64* _45155_i, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _45164_tokens) {
	jule::Ptr<_22e0aa1de_Token> _45213_tok = (*(_45164_tokens))[(*(_45155_i))];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_20a3c5dbe:;
			{
				(*(_45137_v)).get()._field_Statically=true;
				goto _case_begin_20a3c55e9;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_20a3c55e9:;
			{
				((*(_45155_i)))++;
				if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
					_1e9e36467_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_45164_tokens))[(*(_45155_i))].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					(*(_45137_v)).get()._field_Mutable=true;
					((*(_45155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_20a3c5660:;
			{
				((*(_45155_i)))++;
				(*(_45137_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_20a3c553e:;
			{
				_1e9e36467_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_20a3c53b8:;
	};
	if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
		_1e9e36467_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_215dbd04d_VarDecl> _1e9e38ea3_buildVar(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_215dbd04d_VarDecl> _48317_v = jule::new_ptr<_215dbd04d_VarDecl>(_215dbd04d_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1e9e38b95_buildVarBegin(_self_.ptr(), &(_48317_v), &(_48217_i), &(_48132_tokens));
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && _48132_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1e9e387cc_buildVarCommon(_self_, &(_48317_v), _48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_215db78d8_GenericDecl> _1e9e392b1_buildGeneric(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _50337_tokens) {
	jule::Ptr<_215db78d8_GenericDecl> _50417_g = jule::new_ptr<_215db78d8_GenericDecl>(_215db78d8_GenericDecl{._field_Token=(*(_50337_tokens))[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _50417_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if (((*(_50337_tokens)).len() > 1LL)) {
		if (((*(_50337_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1e9e36467_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50337_tokens)).len() == 2LL)) {
			_1e9e36467_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_22e0aa1de_Token>> _52121_constraintTokens = (*(_50337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _52222_parts;;
		jule::Slice<_22dbec89d_Log> _52229_errors;;
		({
			__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e343ee_partsKind(&(_52121_constraintTokens), jule::Str("|", 1), true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_215db7465_Constraint>(_215db7465_Constraint{._field_Mask=jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto expr = &(_52222_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20a3d2b12:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_215daa5e0_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, &(_52825_part), (&(_52925_i)), true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1e9e36467_pushErr(_self_.ptr(), _52825_part[_52925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_20a3d2b12:;
				++it;
				goto _iter_begin_20a3d2b12;
			}
			_iter_end_20a3d2b12:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _1e9e39668_buildGenerics(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _54038_tokens, jule::Ptr<_22e0aa1de_Token>* _54057_errorToken) {
	if (((*(_54038_tokens)).len() == 0LL)) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_54057_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _54618_parts;;
	jule::Slice<_22dbec89d_Log> _54625_errors;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(_54038_tokens, static_cast<jule::U64>(8LLU), true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_215db78d8_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto expr = &(_54618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a3d6c04:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1e9e392b1_buildGeneric(_self_, &(_55321_part)));;
			}
			_iter_next_20a3d6c04:;
			++it;
			goto _iter_begin_20a3d6c04;
		}
		_iter_end_20a3d6c04:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_215dbac4e_ParamDecl> _1e9e39976_buildSelfParam(_1e9e35a0a_parser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_215dbac4e_ParamDecl> _56517_param = jule::new_ptr<_215dbac4e_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1e9e36467_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_56037_tokens[_56817_i].get()._field_Kind.equal("&", 1)) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1e9e36467_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		(_56517_param.get()._field_Ident).append("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1e9e36467_pushErr(_self_, _56037_tokens[_56817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1e9e39d3e_paramTypeBegin(_1e9e35a0a_parser* _self_, jule::Ptr<_215dbac4e_ParamDecl>* _59938_param, jule::I64* _59962_i, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _59971_tokens) {
	for (; ((*(_59962_i)) < (*(_59971_tokens)).len()); ((*(_59962_i)))++) {
		{
			jule::Ptr<_22e0aa1de_Token> _60117_token = (*(_59971_tokens))[(*(_59962_i))];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((!_60117_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59938_param)).get()._field_Variadic) {
				_1e9e36467_pushErr(_self_, _60117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_20a3ddaeb;
			};
			(*(_59938_param)).get()._field_Variadic=true;
		}
	_iter_next_20a3ddaeb:;
	}
	_iter_end_20a3ddaeb:;;
}



inline void _1e9e3a15d_buildParamType(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_215dbac4e_ParamDecl>* _61639_param, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1e9e39d3e_paramTypeBegin(_self_.ptr(), _61639_param, &(_61717_i), _61663_tokens);
	if ((_61717_i >= (*(_61663_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, _61663_tokens, (&(_61717_i)), true);
		(*(_61639_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < (*(_61663_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_61663_tokens))[_61717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e9e3a47c_buildParamBody(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_215dbac4e_ParamDecl>* _62939_param, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _62962_tokens) {
	jule::Ptr<_22e0aa1de_Token> _63017_tok = _62962_tokens[0LL];;
	if ((_62962_tokens.len() == 1LL)) {
		(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _63017_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		(*(_62939_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e9e3a15d_buildParamType(_self_, _62939_param, &(_62962_tokens));
		return;;
	};
	(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
	_62962_tokens=_62962_tokens.slice(2LL);
	_1e9e3a15d_buildParamType(_self_, _62939_param, &(_62962_tokens));
}



inline jule::Ptr<_215dbac4e_ParamDecl> _1e9e3a78a_buildParam(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _64934_tokens) {
	jule::Ptr<_215dbac4e_ParamDecl> _65017_param = jule::new_ptr<_215dbac4e_ParamDecl>(_215dbac4e_ParamDecl{._field_Token=_64934_tokens[0LL], });;
	if ((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_65017_param.get()._field_Mutable=true;
		if ((_64934_tokens.len() == 1LL)) {
			_1e9e36467_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64934_tokens=_64934_tokens.slice(1LL);
		_65017_param.get()._field_Token=_64934_tokens[0LL];
	};
	if ((_64934_tokens.len() >= 3LL)) {
		if (((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && _65017_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64934_tokens.len() == 1LL)) {
				_1e9e36467_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64934_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64934_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65017_param.get()._field_Reference=true;
				_64934_tokens=_64934_tokens.slice(1LL);
				_65017_param.get()._field_Token=_64934_tokens[0LL];
			};
		};
	};
	if ((_65017_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65017_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e9e3a15d_buildParamType(_self_, &(_65017_param), &(_64934_tokens));
	} else {
		_1e9e3a47c_buildParamBody(_self_, &(_65017_param), _64934_tokens);
	};
	return _65017_param;;
}



inline void _1e9e3aa10_checkParams(_1e9e35a0a_parser* _self_, jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>>* _69235_params) {
	{
		auto expr = _69235_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a3ed1c1:;
		if (it != expr_end) {
			jule::Ptr<_215dbac4e_ParamDecl> _69321_param = *it;
			{
				if ((_215dbb0b2_IsSelf(_69321_param.ptr()) || (_69321_param.get()._field_Kind != nullptr))) {
					goto _iter_next_20a3ed1c1;
				};
				if ((_69321_param.get()._field_Token == nullptr)) {
					_1e9e36467_pushErr(_self_, _69321_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69321_param.get()._field_Kind=jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Ident=_69321_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type19)});
					_69321_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_20a3ed1c1:;
			++it;
			goto _iter_begin_20a3ed1c1;
		}
		_iter_end_20a3ed1c1:;
	};
}



inline jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>> _1e9e3adb7_buildParams(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _71236_tokens, jule::Bool _71254_method) {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _71318_parts;;
	jule::Slice<_22dbec89d_Log> _71325_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(_71236_tokens, static_cast<jule::U64>(8LLU), true);
		_71318_parts = __jule_assign_result.__jule_result_arg0;
		_71325_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71325_errs);
	if ((_71318_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>> _71917_params = nullptr;;
	if ((_71254_method && (_71318_parts.len() > 0LL))) {
		jule::Ptr<_215dbac4e_ParamDecl> _72121_param = _1e9e39976_buildSelfParam(_self_.ptr(), _71318_parts[0LL]);;
		if (((_72121_param != nullptr) && _215dbb0b2_IsSelf(_72121_param.ptr()))) {
			_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72121_param);;
			_71318_parts=_71318_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a402802:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _72821_part = *it;
			{
				jule::Ptr<_215dbac4e_ParamDecl> _72921_param = _1e9e3a78a_buildParam(_self_, _72821_part);;
				if ((_72921_param != nullptr)) {
					_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72921_param);;
				};
			}
			_iter_next_20a402802:;
			++it;
			goto _iter_begin_20a402802;
		}
		_iter_end_20a402802:;
	};
	_1e9e3aa10_checkParams(_self_.ptr(), &(_71917_params));
	return _71917_params;;
}



inline __jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool _1e9e3b26e_buildMultiRetType(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _73942_tokens, jule::I64* _73965_i) {
	__jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_215dad703_RetTypeDecl>();
	((*(_73965_i)))++;
	if (((*(_73965_i)) >= (*(_73942_tokens)).len())) {
		((*(_73965_i)))--;
		({
			__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, _73942_tokens, (&((*(_73965_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73965_i)))--;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _74917_rangeTokens = _1e9e33c6c_range(_73965_i, jule::Str("(", 1), jule::Str(")", 1), _73942_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _75118_parts;;
	jule::Slice<_22dbec89d_Log> _75125_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_74917_rangeTokens), static_cast<jule::U64>(8LLU), true);
		_75118_parts = __jule_assign_result.__jule_result_arg0;
		_75125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75125_errs);
	if ((_75118_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _75717_types = jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, _75118_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_22e0aa1de_Token>>::alloc(0LL, _75118_parts.len());
	{
		auto expr = &(_75118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a408aa0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _75921_part = *it;
			{
				jule::Ptr<_22e0aa1de_Token> _76021_token = _75921_part[0LL];;
				jule::I64 _76121_offset = 0LL;;
				if ((_75921_part.len() > 1LL)) {
					_76021_token=_75921_part[1LL];
					if ((_76021_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76121_offset=2LL;
						if ((_75921_part.len() < 3LL)) {
							_1e9e36467_pushErr(_self_.ptr(), _76021_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_20a408aa0;
						};
					};
				};
				_76021_token=_75921_part[0LL];
				if ((_76121_offset != 2LL)) {
					jule::Ptr<_22e0aa1de_Token> _77725_newToken = jule::new_ptr<_22e0aa1de_Token>((*(_76021_token)));;
					_77725_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77725_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_76021_token);;
				};
				jule::Ptr<_215daa5e0_TypeDecl> _78422_tk;;
				({
					__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, &(_75921_part), (&(_76121_offset)), true);
					_78422_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_76121_offset < _75921_part.len())) {
					_1e9e36467_pushErr(_self_.ptr(), _75921_part[_76121_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75717_types = jule::alloc_for_append(_75717_types,1);_75717_types.__push(_78422_tk);;
			}
			_iter_next_20a408aa0:;
			++it;
			goto _iter_begin_20a408aa0;
		}
		_iter_end_20a408aa0:;
	};
	if ((_75717_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=(*(_73942_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_215dac180_TupleTypeDecl>(_215dac180_TupleTypeDecl{._field_Types=_75717_types}), &__jule_any_type81)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75717_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool _1e9e3b626_buildRetType(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _80737_tokens, jule::I64* _80760_i) {
	__jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_215dad703_RetTypeDecl>();
	if (((*(_80760_i)) >= (*(_80737_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_22e0aa1de_Token> _81317_token = (*(_80737_tokens))[(*(_80760_i))];;
	{
		auto &_match_expr{ _81317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20a41215d:;
			{
				if (_81317_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20a4121c4:;
			{
				if (_81317_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_20a41223a:;
			{
				if ((((*(_80760_i)) + 1LL) >= (*(_80737_tokens)).len())) {
					_1e9e36467_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80760_i)))++;
				_81317_token=(*(_80737_tokens))[(*(_80760_i))];
				if ((_81317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81317_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_20a414a67:;
							{
								({
									__jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e9e3b26e_buildMultiRetType(_self_, _80737_tokens, _80760_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_20a414acd:;
							{
								_1e9e36467_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_20a4149ac:;
					};
				};
				({
					__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, _80737_tokens, (&((*(_80760_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_20a41205e:;
	};
	((*(_80760_i)))++;
	_1e9e36467_pushErr(_self_.ptr(), _81317_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_215dbc06e_FnDecl> _1e9e3ba77_buildFnPrototype(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _85241_tokens, jule::I64* _85264_i, jule::Bool _85272_method) {
	jule::Ptr<_215dbc06e_FnDecl> _85317_f = jule::new_ptr<_215dbc06e_FnDecl>(_215dbc06e_FnDecl{._field_Token=(*(_85241_tokens))[(*(_85264_i))], });;
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85317_f.get()._field_Statically=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85317_f.get()._field_Unsafety=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	((*(_85264_i)))++;
	if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22e0aa1de_Token> _88613_tok = (*(_85241_tokens))[(*(_85264_i))];;
	if ((_88613_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Ident=_88613_tok.get()._field_Kind;
	} else {
		_85317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_22e0aa1de_Token> _89813_errorToken = (*(_85241_tokens))[(*(_85264_i))];;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _89917_genericsTokens = _1e9e33c6c_range(_85264_i, jule::Str("[", 1), jule::Str("]", 1), _85241_tokens);;
	if ((_89917_genericsTokens != nullptr)) {
		_85317_f.get()._field_Generics=_1e9e39668_buildGenerics(_self_, &(_89917_genericsTokens), &(_89813_errorToken));
	};
	if ((!(*(_85241_tokens))[(*(_85264_i))].get()._field_Kind.equal("(", 1))) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_85241_tokens))[(*(_85264_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _90917_paramsToks = _1e9e33c6c_range(_85264_i, jule::Str("(", 1), jule::Str(")", 1), _85241_tokens);;
	if ((_90917_paramsToks.len() > 0LL)) {
		_85317_f.get()._field_Params=_1e9e3adb7_buildParams(_self_, &(_90917_paramsToks), _85272_method);
	};
	if (((*(_85264_i)) < (*(_85241_tokens)).len())) {
		jule::Ptr<_22e0aa1de_Token> _91517_token = (*(_85241_tokens))[(*(_85264_i))];;
		if (((_91517_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && _91517_token.get()._field_Kind.equal("!", 1))) {
			_85317_f.get()._field_Exceptional=true;
			((*(_85264_i)))++;
		};
	};
	_85317_f.get()._field_Public=_1e9e456a7_isPub(&(_85317_f.get()._field_Ident));
	({
		__jule_tuple_x_215dad703_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e9e3b626_buildRetType(_self_, _85241_tokens, _85264_i);
		_85317_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85317_f;;
}



inline jule::Ptr<_215dbc06e_FnDecl> _1e9e3bec8_buildFn(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _92932_tokens, jule::Bool _92950_method, jule::Bool _92964_prototype) {
	jule::I64 _93017_i = 0LL;;
	jule::Ptr<_215dbc06e_FnDecl> _93117_f = _1e9e3ba77_buildFnPrototype(_self_, _92932_tokens, &(_93017_i), _92950_method);;
	if (_92964_prototype) {
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), (*(_92932_tokens))[(_93017_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _93117_f;;
	} else if ((_93117_f == nullptr)) {
		return _93117_f;;
	};
	if ((_93017_i >= (*(_92932_tokens)).len())) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _94717_blockTokens = _1e9e33c6c_range(&(_93017_i), jule::Str("{", 1), jule::Str("}", 1), _92932_tokens);;
	if ((_94717_blockTokens != nullptr)) {
		_93117_f.get()._field_Scope=_1e9e374ce_buildScope(_self_, &(_94717_blockTokens), (*(_92932_tokens))[(_93017_i - 1LL)]);
		_93117_f.get()._field_Scope.get()._field_Unsafety=_93117_f.get()._field_Unsafety;
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), (*(_92932_tokens))[_93017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _93117_f;;
}



inline jule::Slice<jule::Ptr<_22e0aa1de_Token>> _1e9e3c2d6_getUseDeclSelectors(_1e9e35a0a_parser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _96342_tokens) {
	jule::I64 _96417_i = 0LL;;
	_96342_tokens=_1e9e33c6c_range(&(_96417_i), jule::Str("{", 1), jule::Str("}", 1), &(_96342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _96618_parts;;
	jule::Slice<_22dbec89d_Log> _96625_errs;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_96342_tokens), static_cast<jule::U64>(8LLU), true);
		_96618_parts = __jule_assign_result.__jule_result_arg0;
		_96625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96625_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96625_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _97217_selectors = jule::Slice<jule::Ptr<_22e0aa1de_Token>>::alloc(0LL, _96618_parts.len());;
	{
		auto expr = &(_96618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a42a94b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _97321_part = *it;
			{
				if ((_97321_part.len() > 1LL)) {
					_1e9e36467_pushErr(_self_, _97321_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_22e0aa1de_Token> _97721_tok = _97321_part[0LL];;
				if (((_97721_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97721_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1e9e36467_pushErr(_self_, _97721_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e9e36786_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_20a42a94b;
				};
				_97217_selectors = jule::alloc_for_append(_97217_selectors,1);_97217_selectors.__push(_97721_tok);;
			}
			_iter_next_20a42a94b:;
			++it;
			goto _iter_begin_20a42a94b;
		}
		_iter_end_20a42a94b:;
	};
	return _97217_selectors;;
}



inline void _1e9e3c605_buildCppUseDecl(_1e9e35a0a_parser* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _98839_decl, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _98856_tokens) {
	if (((*(_98856_tokens)).len() > 1LL)) {
		_1e9e36467_pushErr(_self_, (*(_98856_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_22e0aa1de_Token> _99213_token = (*(_98856_tokens))[0LL];;
	if (((_99213_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99213_token.get()._field_Kind[0LL] != '`') && (_99213_token.get()._field_Kind[0LL] != '\"')))) {
		_1e9e36467_pushErr(_self_, _99213_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98839_decl)).get()._field_CppLinked=true;
	(*(_98839_decl)).get()._field_LinkPath=_99213_token.get()._field_Kind.slice(1LL, (_99213_token.get()._field_Kind.len() - 1LL));
}



inline void _1e9e3c924_buildStdUseDecl(_1e9e35a0a_parser* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _100139_decl, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _100159_tokens) {
	(*(_100139_decl)).get()._field_Std=true;
	jule::Ptr<_22e0aa1de_Token> _100417_token = _100159_tokens[0LL];;
	if ((_100159_tokens.len() < 3LL)) {
		_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_100159_tokens=_100159_tokens.slice(2LL);
	_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_20bb4ee60:;
			{
				_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20bb4eed7:;
			{
				if ((!_100417_token.get()._field_Kind.equal("}", 1))) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _102121_selectors = nullptr;;
				({
					__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_assign_result = _1e9e34014_rangeLast(&(_100159_tokens));
					_100159_tokens = __jule_assign_result.__jule_result_arg0;
					_102121_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_100139_decl)).get()._field_Selected=_1e9e3c2d6_getUseDeclSelectors(_self_, _102121_selectors);
				if ((_100159_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20bb5005e:;
			{
				if ((!_100417_token.get()._field_Kind.equal("*", 1))) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_100139_decl)).get()._field_Full=true;
			}
		}
		_match_end_20bb4edd8:;
	};
	(*(_100139_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1e9e35642_tokstoa(&(_100159_tokens)));
}



inline void _1e9e3cc43_buildIdentUseDecl(_1e9e35a0a_parser* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _106341_decl, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _106361_tokens) {
	(*(_106341_decl)).get()._field_Std=false;
	jule::Ptr<_22e0aa1de_Token> _106617_token = _106361_tokens[(_106361_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_20bb59552:;
			{
				_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20bb59b29:;
			{
				if ((!_106617_token.get()._field_Kind.equal("}", 1))) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _107721_selectors = nullptr;;
				({
					__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_assign_result = _1e9e34014_rangeLast(&(_106361_tokens));
					_106361_tokens = __jule_assign_result.__jule_result_arg0;
					_107721_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106341_decl)).get()._field_Selected=_1e9e3c2d6_getUseDeclSelectors(_self_, _107721_selectors);
				if ((_106361_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20bb59cc2:;
			{
				if ((!_106617_token.get()._field_Kind.equal("*", 1))) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1e9e36467_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106341_decl)).get()._field_Full=true;
			}
		}
		_match_end_20bb59ac4:;
	};
	(*(_106341_decl)).get()._field_LinkPath=_1e9e35642_tokstoa(&(_106361_tokens));
}



inline void _1e9e3d062_parseUseDecl(_1e9e35a0a_parser* _self_, jule::Ptr<_215dc2c9a_UseDecl>* _112636_decl, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _112656_tokens) {
	if ((*(_112636_decl)).get()._field_CppLinked) {
		_1e9e3c605_buildCppUseDecl(_self_, _112636_decl, &(_112656_tokens));
		return;;
	};
	jule::Ptr<_22e0aa1de_Token> _113217_token = _112656_tokens[0LL];;
	if ((_113217_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112656_tokens.len() > 2LL) && (_112656_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		(*(_112636_decl)).get()._field_Alias=_113217_token.get()._field_Kind;
		if ((_112656_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1e9e36467_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1e9e36786_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112656_tokens=_112656_tokens.slice(2LL);
		_113217_token=_112656_tokens[0LL];
	};
	;
	{
		
		if (_113217_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_20bb65dcc:;
			{
				_1e9e3c924_buildStdUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		else {
			_case_begin_20bb67e9a:;
			{
				_1e9e3cc43_buildIdentUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		_match_end_20bb67e34:;
	};
}



inline jule::Ptr<_215dc2c9a_UseDecl> _1e9e3d419_buildUseDecl(_1e9e35a0a_parser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _116035_tokens, jule::Bool _116053_cpp_linked) {
	jule::Ptr<_215dc2c9a_UseDecl> _116117_decl = jule::new_ptr<_215dc2c9a_UseDecl>(_215dc2c9a_UseDecl{._field_Token=_116035_tokens[0LL], ._field_CppLinked=_116053_cpp_linked, });;
	if ((_116035_tokens.len() < 2LL)) {
		_1e9e36467_pushErr(_self_, _116117_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_116035_tokens=_116035_tokens.slice(1LL);
	_1e9e3d062_parseUseDecl(_self_, &(_116117_decl), _116035_tokens);
	return _116117_decl;;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e3d7c1_buildTypeEnumItemKind(jule::Ptr<_1e9e35a0a_parser> _self_, jule::I64* _117446_i, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _117459_tokens) {
	jule::I64 _117517_braceN = 0LL;;
	jule::I64 _117613_exprStart = (*(_117446_i));;
	for (; ((*(_117446_i)) < (*(_117459_tokens)).len()); ((*(_117446_i)))++) {
		{
			jule::Ptr<_22e0aa1de_Token> _117817_t = (*(_117459_tokens))[(*(_117446_i))];;
			if ((_117817_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117817_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_20bb6d05a:;
						{
							(_117517_braceN)++;
							goto _iter_next_20bb6bac5;
						}
					}
					else {
						_case_begin_20bb6cb5e:;
						{
							(_117517_braceN)--;
						}
					}
					_match_end_20bb6c950:;
				};
			};
			if ((_117517_braceN > 0LL)) {
				goto _iter_next_20bb6bac5;
			};
			if (((_117817_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_117446_i)) + 1LL) >= (*(_117459_tokens)).len()))) {
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _119425_kindTokens = nullptr;;
				if ((_117817_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart, (*(_117446_i)));
				} else {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart);
				};
				jule::I64 _120025_j = 0LL;;
				jule::Ptr<_215daa5e0_TypeDecl> _120126_kind;;
				({
					__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, &(_119425_kindTokens), (&(_120025_j)), true);
					_120126_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_120025_j < _119425_kindTokens.len())) {
					_1e9e36467_pushErr(_self_.ptr(), _119425_kindTokens[_120025_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _120126_kind;;
			};
		}
	_iter_next_20bb6bac5:;
	}
	_iter_end_20bb6bac5:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>> _1e9e3dace_buildTypeEnumItems(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _121143_tokens) {
	jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>> _121217_items = jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121317_i = 0LL;;
	for (; (_121317_i < (*(_121143_tokens)).len()); (_121317_i)++) {
		{
			jule::Ptr<_22e0aa1de_Token> _121521_t = (*(_121143_tokens))[_121317_i];;
			jule::Ptr<_215dc474c_TypeEnumItemDecl> _121621_item = jule::new_ptr<_215dc474c_TypeEnumItemDecl>();;
			_121621_item.get()._field_Token=_121521_t;
			if (((_121621_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (((*(_121143_tokens)).len() - _121317_i) > 2LL))) {
				_121621_item.get()._field_Ident=_121621_item.get()._field_Token.get()._field_Kind;
				_121521_t=(*(_121143_tokens))[(_121317_i + 1LL)];
				if ((_121521_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121317_i+=2LL;
					if (((_121317_i >= (*(_121143_tokens)).len()) || ((*(_121143_tokens))[_121317_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1e9e36467_pushErr(_self_.ptr(), _121521_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_20bb72812;
					};
				};
			};
			_121621_item.get()._field_Kind=_1e9e3d7c1_buildTypeEnumItemKind(_self_, &(_121317_i), _121143_tokens);
			_121217_items = jule::alloc_for_append(_121217_items,1);_121217_items.__push(_121621_item);;
		}
	_iter_next_20bb72812:;
	}
	_iter_end_20bb72812:;;
	return _121217_items;;
}



inline jule::Ptr<_215dc4d57_TypeEnumDecl> _1e9e3dddc_buildTypeEnumDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _123542_tokens) {
	jule::I64 _123617_i = 1LL;;
	jule::Ptr<_215dc4d57_TypeEnumDecl> _123717_e = jule::new_ptr<_215dc4d57_TypeEnumDecl>(_215dc4d57_TypeEnumDecl{._field_Token=(*(_123542_tokens))[_123617_i], });;
	if ((_123717_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Ident=_123717_e.get()._field_Token.get()._field_Kind;
	_123617_i+=3LL;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _124717_itemTokens = _1e9e33c6c_range(&(_123617_i), jule::Str("{", 1), jule::Str("}", 1), _123542_tokens);;
	if ((_124717_itemTokens == nullptr)) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123717_e;;
	} else if ((_123617_i < (*(_123542_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_123542_tokens))[_123617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Public=_1e9e456a7_isPub(&(_123717_e.get()._field_Ident));
	_123717_e.get()._field_End=(*(_123542_tokens))[(_123617_i - 1LL)];
	_123717_e.get()._field_Items=_1e9e3dace_buildTypeEnumItems(_self_, &(_124717_itemTokens));
	return _123717_e;;
}



inline jule::Ptr<_215daeb11_Expr> _1e9e3e294_buildEnumItemExpr(jule::Ptr<_1e9e35a0a_parser> _self_, jule::I64* _126242_i, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _126255_tokens) {
	jule::I64 _126317_braceN = 0LL;;
	jule::I64 _126413_exprStart = (*(_126242_i));;
	for (; ((*(_126242_i)) < (*(_126255_tokens)).len()); ((*(_126242_i)))++) {
		{
			jule::Ptr<_22e0aa1de_Token> _126617_t = (*(_126255_tokens))[(*(_126242_i))];;
			if ((_126617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_20bb7dce6:;
						{
							(_126317_braceN)++;
							goto _iter_next_20bb7c861;
						}
					}
					else {
						_case_begin_20bb7d8ea:;
						{
							(_126317_braceN)--;
						}
					}
					_match_end_20bb7d6db:;
				};
			};
			if ((_126317_braceN > 0LL)) {
				goto _iter_next_20bb7c861;
			};
			if (((_126617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_126242_i)) + 1LL) >= (*(_126255_tokens)).len()))) {
				jule::Slice<jule::Ptr<_22e0aa1de_Token>> _128225_exprTokens = nullptr;;
				if ((_126617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart, (*(_126242_i)));
				} else {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart);
				};
				return _1e9e36a94_buildExpr(_self_, &(_128225_exprTokens));;
			};
		}
	_iter_next_20bb7c861:;
	}
	_iter_end_20bb7c861:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>> _1e9e3e5a2_buildEnumItems(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _129439_tokens) {
	jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>> _129517_items = jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129617_i = 0LL;;
	for (; (_129617_i < (*(_129439_tokens)).len()); (_129617_i)++) {
		{
			jule::Ptr<_22e0aa1de_Token> _129821_t = (*(_129439_tokens))[_129617_i];;
			jule::Ptr<_215dc321d_EnumItemDecl> _129921_item = jule::new_ptr<_215dc321d_EnumItemDecl>();;
			_129921_item.get()._field_Token=_129821_t;
			if ((_129921_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1e9e36467_pushErr(_self_.ptr(), _129921_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129921_item.get()._field_Ident=_129921_item.get()._field_Token.get()._field_Kind;
			if ((((_129617_i + 1LL) >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[(_129617_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129617_i + 1LL) < (*(_129439_tokens)).len())) {
					(_129617_i)++;
				};
				_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
				goto _iter_next_20bb82228;
			};
			(_129617_i)++;
			_129821_t=(*(_129439_tokens))[_129617_i];
			(_129617_i)++;
			if ((_129821_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1e9e36467_pushErr(_self_.ptr(), _129821_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_20bb82228;
			};
			if (((_129617_i >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[_129617_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1e9e36467_pushErr(_self_.ptr(), _129821_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_20bb82228;
			};
			_129921_item.get()._field_Expr=_1e9e3e294_buildEnumItemExpr(_self_, &(_129617_i), _129439_tokens);
			_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
		}
	_iter_next_20bb82228:;
	}
	_iter_end_20bb82228:;;
	return _129517_items;;
}



inline jule::Ptr<_215dc3c46_EnumDecl> _1e9e3e8b0_buildEnumDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _133138_tokens) {
	if (((*(_133138_tokens)).len() < 3LL)) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_133138_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dc3c46_EnumDecl> _133617_e = jule::new_ptr<_215dc3c46_EnumDecl>(_215dc3c46_EnumDecl{._field_Token=(*(_133138_tokens))[1LL], });;
	if ((_133617_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Ident=_133617_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134417_i = 2LL;;
	if (((*(_133138_tokens))[_134417_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134417_i)++;
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), (*(_133138_tokens))[(_134417_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133617_e;;
		};
		({
			__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, _133138_tokens, (&(_134417_i)), true);
			_133617_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1e9e35d3a_stop(_self_.ptr());
			_1e9e36467_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133617_e;;
		};
	} else {
		_133617_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _136117_itemTokens = _1e9e33c6c_range(&(_134417_i), jule::Str("{", 1), jule::Str("}", 1), _133138_tokens);;
	if ((_136117_itemTokens == nullptr)) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133617_e;;
	} else if ((_134417_i < (*(_133138_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_133138_tokens))[_134417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Public=_1e9e456a7_isPub(&(_133617_e.get()._field_Ident));
	_133617_e.get()._field_End=(*(_133138_tokens))[(_134417_i - 1LL)];
	_133617_e.get()._field_Items=_1e9e3e5a2_buildEnumItems(_self_, &(_136117_itemTokens));
	return _133617_e;;
}



inline jule::Any _1e9e3ebbd_buildNodeEnumDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _137642_tokens) {
	if ((((*(_137642_tokens)).len() > 3LL) && ((*(_137642_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if (((*(_137642_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1e9e3dddc_buildTypeEnumDecl(_self_, _137642_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1e9e3e8b0_buildEnumDecl(_self_, _137642_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_215dc5055_FieldDecl> _1e9e3eecb_buildField(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _138534_tokens) {
	jule::Ptr<_215dc5055_FieldDecl> _138617_f = jule::new_ptr<_215dc5055_FieldDecl>();;
	_138617_f.get()._field_Mutable=(_138534_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138617_f.get()._field_Mutable) {
		if ((_138534_tokens.len() == 1LL)) {
			_1e9e36467_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(1LL);
	};
	_138617_f.get()._field_Token=_138534_tokens[0LL];
	if ((_138617_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _138617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138617_f.get()._field_Ident=_138617_f.get()._field_Token.get()._field_Kind;
	if ((_138534_tokens.len() == 1LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138534_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _138534_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138534_tokens=_138534_tokens.slice(2LL);
	jule::I64 _141417_i = 0LL;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, &(_138534_tokens), (&(_141417_i)), true);
		_138617_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141417_i < _138534_tokens.len())) {
		jule::Ptr<_22e0aa1de_Token> _141717_token = _138534_tokens[_141417_i];;
		if (((_141717_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (!_141717_token.get()._field_Kind.equal("=", 1)))) {
			_1e9e36467_pushErr(_self_.ptr(), _138534_tokens[_141417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141417_i)++;
		if ((_141417_i >= _138534_tokens.len())) {
			_1e9e36467_pushErr(_self_.ptr(), _141717_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(_141417_i);
		_138617_f.get()._field_Default=_1e9e36a94_buildExpr(_self_, &(_138534_tokens));
	};
	_138617_f.get()._field_Public=_1e9e456a7_isPub(&(_138617_f.get()._field_Ident));
	return _138617_f;;
}



inline jule::Slice<jule::Ptr<_215dc5055_FieldDecl>> _1e9e402d9_buildStructDeclFields(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _143445_tokens) {
	jule::Slice<jule::Ptr<_215dc5055_FieldDecl>> _143517_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _143617_stmts = _1e9e18e2d_splitStmts(&(_143445_tokens));;
	{
		auto expr = &(_143617_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bb9d6a6:;
		if (it != expr_end) {
			jule::Ptr<_1e9e18a87_stmt> _143721_stmt = *it;
			{
				_143445_tokens=_143721_stmt.get()._field_tokens;
				jule::Ptr<_215dc5055_FieldDecl> _143921_f = _1e9e3eecb_buildField(_self_, _143445_tokens);;
				_143517_fields = jule::alloc_for_append(_143517_fields,1);_143517_fields.__push(_143921_f);;
			}
			_iter_next_20bb9d6a6:;
			++it;
			goto _iter_begin_20bb9d6a6;
		}
		_iter_end_20bb9d6a6:;
	};
	return _143517_fields;;
}



inline jule::Ptr<_215dc5808_StructDecl> _1e9e405e7_buildStructDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _144540_tokens) {
	if (((*(_144540_tokens)).len() < 3LL)) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_144540_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _145117_i = 1LL;;
	jule::Ptr<_215dc5808_StructDecl> _145217_s = jule::new_ptr<_215dc5808_StructDecl>(_215dc5808_StructDecl{._field_Token=(*(_144540_tokens))[_145117_i], });;
	if ((_145217_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_145117_i)++;
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	_145217_s.get()._field_Ident=_145217_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_22e0aa1de_Token> _146613_errorToken = (*(_144540_tokens))[_145117_i];;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _146717_genericsTokens = _1e9e33c6c_range(&(_145117_i), jule::Str("[", 1), jule::Str("]", 1), _144540_tokens);;
	if ((_146717_genericsTokens != nullptr)) {
		_145217_s.get()._field_Generics=_1e9e39668_buildGenerics(_self_, &(_146717_genericsTokens), &(_146613_errorToken));
	};
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_144540_tokens))[(_145117_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _147717_bodyTokens = _1e9e33c6c_range(&(_145117_i), jule::Str("{", 1), jule::Str("}", 1), _144540_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	if ((_145117_i < (*(_144540_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145217_s.get()._field_Public=_1e9e456a7_isPub(&(_145217_s.get()._field_Ident));
	_145217_s.get()._field_Fields=_1e9e402d9_buildStructDeclFields(_self_, _147717_bodyTokens);
	_145217_s.get()._field_End=(*(_144540_tokens))[(_145117_i - 1LL)];
	return _145217_s;;
}



inline void _1e9e4086c_checkMethodReceiver(_1e9e35a0a_parser* _self_, jule::Ptr<_215dbc06e_FnDecl>* _149339_f) {
	if ((*(_149339_f)).get()._field_Statically) {
		if ((((*(_149339_f)).get()._field_Params.len() > 0LL) && _215dbb0b2_IsSelf((*(_149339_f)).get()._field_Params[0LL].ptr()))) {
			_1e9e36467_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149339_f)).get()._field_Params.len() == 0LL)) {
		_1e9e36467_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_215dbac4e_ParamDecl> _150513_param = (*(_149339_f)).get()._field_Params[0LL];;
	if ((!(_215dbb0b2_IsSelf(_150513_param.ptr())))) {
		_1e9e36467_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_215dbc06e_FnDecl>> _1e9e40b7a_buildTraitMethods(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _151241_tokens) {
	jule::Slice<jule::Ptr<_215dbc06e_FnDecl>> _151317_methods = nullptr;;
	jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _151417_stmts = _1e9e18e2d_splitStmts(&(_151241_tokens));;
	{
		auto expr = &(_151417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bbac50b:;
		if (it != expr_end) {
			jule::Ptr<_1e9e18a87_stmt> _151521_stmt = *it;
			{
				_151241_tokens=_151521_stmt.get()._field_tokens;
				if ((_151241_tokens.len() == 0LL)) {
					goto _iter_next_20bbac50b;
				};
				jule::Ptr<_215dbc06e_FnDecl> _152021_f = _1e9e3bec8_buildFn(_self_, &(_151241_tokens), true, true);;
				if ((_152021_f != nullptr)) {
					if (_215dbc3c1_IsAnon(_152021_f.ptr())) {
						_1e9e36467_pushErr(_self_.ptr(), _152021_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
					_1e9e4086c_checkMethodReceiver(_self_.ptr(), &(_152021_f));
					if ((_152021_f.get()._field_Generics.len() > 0LL)) {
						_1e9e36467_pushErr(_self_.ptr(), _152021_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
					};
					_151317_methods = jule::alloc_for_append(_151317_methods,1);_151317_methods.__push(_152021_f);;
				};
			}
			_iter_next_20bbac50b:;
			++it;
			goto _iter_begin_20bbac50b;
		}
		_iter_end_20bbac50b:;
	};
	return _151317_methods;;
}



inline jule::Ptr<_215dc5e13_TraitDecl> _1e9e40e88_buildTraitDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _153539_tokens) {
	if (((*(_153539_tokens)).len() < 3LL)) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_153539_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dc5e13_TraitDecl> _154017_t = jule::new_ptr<_215dc5e13_TraitDecl>(_215dc5e13_TraitDecl{._field_Token=(*(_153539_tokens))[1LL], });;
	if ((_154017_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _154017_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154017_t.get()._field_Ident=_154017_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154817_i = 2LL;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _154917_bodyTokens = _1e9e33c6c_range(&(_154817_i), jule::Str("{", 1), jule::Str("}", 1), _153539_tokens);;
	if ((_154917_bodyTokens == nullptr)) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _154017_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154817_i < (*(_153539_tokens)).len())) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_153539_tokens))[_154817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154017_t.get()._field_Public=_1e9e456a7_isPub(&(_154017_t.get()._field_Ident));
	_154017_t.get()._field_Methods=_1e9e40b7a_buildTraitMethods(_self_, _154917_bodyTokens);
	_154017_t.get()._field_End=(*(_153539_tokens))[(_154817_i - 1LL)];
	return _154017_t;;
}



inline jule::Ptr<_215dbc06e_FnDecl> _1e9e41296_buildCppLinkFn(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _156538_tokens) {
	_156538_tokens=_156538_tokens.slice(1LL);
	jule::Ptr<_215dbc06e_FnDecl> _156717_f = _1e9e3bec8_buildFn(_self_, &(_156538_tokens), false, true);;
	if ((_156717_f != nullptr)) {
		if (_215dbc3c1_IsAnon(_156717_f.ptr())) {
			_1e9e36467_pushErr(_self_.ptr(), _156717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		_156717_f.get()._field_Public=false;
		_156717_f.get()._field_CppLinked=true;
	};
	return _156717_f;;
}



inline jule::Ptr<_215dbd04d_VarDecl> _1e9e415a4_buildCppLinkVar(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _157839_tokens) {
	_157839_tokens=_157839_tokens.slice(1LL);
	jule::Ptr<_215dbd04d_VarDecl> _158017_v = _1e9e38ea3_buildVar(_self_, _157839_tokens);;
	if ((_158017_v != nullptr)) {
		_158017_v.get()._field_Public=false;
		_158017_v.get()._field_CppLinked=true;
		if ((_158017_v.get()._field_Expr != nullptr)) {
			_1e9e36467_pushErr(_self_.ptr(), _158017_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _158017_v;;
}



inline jule::Ptr<_215dc5808_StructDecl> _1e9e418b2_buildCppLinkStruct(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _159142_tokens) {
	_159142_tokens=_159142_tokens.slice(1LL);
	jule::Ptr<_215dc5808_StructDecl> _159317_s = _1e9e405e7_buildStructDecl(_self_, &(_159142_tokens));;
	if ((_159317_s != nullptr)) {
		_159317_s.get()._field_Public=false;
		{
			auto expr = &(_159317_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20bbbb9e3:;
			if (it != expr_end) {
				jule::Ptr<_215dc5055_FieldDecl> _159625_f = *it;
				{
					_159625_f.get()._field_Public=true;
				}
				_iter_next_20bbbb9e3:;
				++it;
				goto _iter_begin_20bbbb9e3;
			}
			_iter_end_20bbbb9e3:;
		};
		_159317_s.get()._field_CppLinked=true;
	};
	return _159317_s;;
}



inline jule::Ptr<_215dc18ae_TypeAliasDecl> _1e9e41bc0_buildCppLinkTypeAlias(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _160545_tokens) {
	_160545_tokens=_160545_tokens.slice(1LL);
	jule::Ptr<_215dc18ae_TypeAliasDecl> _160717_t = _1e9e3818e_buildTypeAliasDecl(_self_, &(_160545_tokens));;
	if ((_160717_t != nullptr)) {
		_160717_t.get()._field_Public=false;
		_160717_t.get()._field_CppLinked=true;
	};
	return _160717_t;;
}



inline jule::Ptr<_215dc2c9a_UseDecl> _1e9e41ecd_buildCppLinkUse(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _161539_tokens) {
	if ((_161539_tokens.len() == 1LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _161539_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161539_tokens=_161539_tokens.slice(1LL);
	;
	return _1e9e3d419_buildUseDecl(_self_.ptr(), _161539_tokens, true);;
}



inline jule::Any _1e9e422db_buildCppLink(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _162637_tokens) {
	jule::Ptr<_22e0aa1de_Token> _162717_token = (*(_162637_tokens))[0LL];;
	if (((*(_162637_tokens)).len() == 1LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _162717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162717_token=(*(_162637_tokens))[1LL];
	{
		auto &_match_expr{ _162717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_20bbc15ca:;
			{
				return jule::Any(_1e9e41296_buildCppLinkFn(_self_, (*(_162637_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_20bbc2279:;
			{
				return jule::Any(_1e9e415a4_buildCppLinkVar(_self_, (*(_162637_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_20bbc22e0:;
			{
				return jule::Any(_1e9e418b2_buildCppLinkStruct(_self_, (*(_162637_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_20bbc2356:;
			{
				return jule::Any(_1e9e41bc0_buildCppLinkTypeAlias(_self_, (*(_162637_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_20bbc2125:;
			{
				_1e9e36467_pushErr(_self_.ptr(), _162717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_20bbc2213:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dbc06e_FnDecl> _1e9e425e9_getMethod(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _165034_tokens) {
	jule::I64 _165117_i = 0LL;;
	jule::Ptr<_22e0aa1de_Token> _165217_token = (*(_165034_tokens))[_165117_i];;
	if ((_165217_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_165117_i + 1LL) >= (*(_165034_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165117_i)++;
		_165217_token=(*(_165034_tokens))[_165117_i];
	};
	if ((_165217_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_165117_i + 1LL) >= (*(_165034_tokens)).len())) {
			_1e9e36467_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165117_i)++;
		_165217_token=(*(_165034_tokens))[_165117_i];
	};
	if ((_165217_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1e9e36467_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dbc06e_FnDecl> _167617_f = _1e9e3bec8_buildFn(_self_, _165034_tokens, true, false);;
	if (((_167617_f != nullptr) && _215dbc3c1_IsAnon(_167617_f.ptr()))) {
		_1e9e36467_pushErr(_self_.ptr(), _167617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _167617_f;;
}



inline void _1e9e42918_parseImplBody(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_215dc651d_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _168417_stmts = _1e9e18e2d_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bbca13e:;
		if (it != expr_end) {
			jule::Ptr<_1e9e18a87_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_22e0aa1de_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_20bbca78d:;
						{
							_1e9e37127_pushDirective(_self_.ptr(), _1e9e36da2_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_20bbca13e;
						}
					}
					_match_end_20bbcb272:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_20bbcb3c6:;
						{
							jule::Ptr<_215dbd04d_VarDecl> _169625_v = _1e9e38ea3_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								(*(_168338_ipl)).get()._field_Statics = jule::alloc_for_append((*(_168338_ipl)).get()._field_Statics,1);(*(_168338_ipl)).get()._field_Statics.__push(_169625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_20bbcb7a0:;
						{
							jule::Ptr<_215dbc06e_FnDecl> _170325_f = _1e9e425e9_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_1e9e4086c_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_1e9e432a9_applyFnMeta(_self_.ptr(), &(_170325_f));
								(*(_168338_ipl)).get()._field_Methods = jule::alloc_for_append((*(_168338_ipl)).get()._field_Methods,1);(*(_168338_ipl)).get()._field_Methods.__push(_170325_f);;
							};
						}
					}
					else {
						_case_begin_20bbcb739:;
						{
							_1e9e36467_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_20bbca13e;
						}
					}
					_match_end_20bbcbe65:;
				};
			}
			_iter_next_20bbca13e:;
			++it;
			goto _iter_begin_20bbca13e;
		}
		_iter_end_20bbca13e:;
	};
}



inline jule::Ptr<_215dc651d_Impl> _1e9e42c26_buildImpl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _171633_tokens) {
	jule::Ptr<_22e0aa1de_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172317_i = 1LL;;
	jule::Ptr<_215daa5e0_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1e9e36467_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dc651d_Impl> _173417_ipl = jule::new_ptr<_215dc651d_Impl>(_215dc651d_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_215daa5e0_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_215daa5e0_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _177217_bodyTokens = _1e9e33c6c_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_1e9e35d3a_stop(_self_.ptr());
		_1e9e36467_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_1e9e36467_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_1e9e42918_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _1e9e43034_buildNodeData(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _178738_tokens) {
	jule::Ptr<_22e0aa1de_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_20bbdb78d:;
			{
				jule::Ptr<_215dbc06e_FnDecl> _179221_f = _1e9e3bec8_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
					if (_215dbc3c1_IsAnon(_179221_f.ptr())) {
						_1e9e36467_pushErr(_self_.ptr(), _179221_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_20bbdc6c3:;
			{
				return jule::Any(_1e9e38ea3_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_20bbdc739:;
			{
				return jule::Any(_1e9e3818e_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_20bbdc7a0:;
			{
				return _1e9e3ebbd_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_20bbdbe0e:;
			{
				return jule::Any(_1e9e405e7_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_20bbdbe75:;
			{
				return jule::Any(_1e9e40e88_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_20bbdbedb:;
			{
				return jule::Any(_1e9e42c26_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_20bbdc052:;
			{
				return _1e9e422db_buildCppLink(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_20bbdbd76:;
			{
				_1e9e36467_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_20bbdbbcd:;
	};
}



inline void _1e9e432a9_applyFnMeta(_1e9e35a0a_parser* _self_, jule::Ptr<_215dbc06e_FnDecl>* _182335_f) {
	(*(_182335_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1e9e4352e_applyMeta(_1e9e35a0a_parser* _self_, _215d76e4c_Node* _182833_node) {
	{
		auto &_match_expr{ (*(_182833_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_20bbe30e1:;
			{
				jule::Ptr<_215dbd04d_VarDecl> _183121_v = (*(_182833_node))._field_Data.cast_ptr<_215dbd04d_VarDecl>(&__jule_any_type16);;
				if ((_183121_v == nullptr)) {
					return;;
				};
				_183121_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_20bbe3157:;
			{
				jule::Ptr<_215dbc06e_FnDecl> _183821_f = (*(_182833_node))._field_Data.cast_ptr<_215dbc06e_FnDecl>(&__jule_any_type14);;
				if ((_183821_f == nullptr)) {
					return;;
				};
				_1e9e432a9_applyFnMeta(_self_, &(_183821_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_20bbe31bd:;
			{
				jule::Ptr<_215dc5808_StructDecl> _184421_sd = (*(_182833_node))._field_Data.cast_ptr<_215dc5808_StructDecl>(&__jule_any_type13);;
				if ((_184421_sd == nullptr)) {
					return;;
				};
				_184421_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_20bbe2dd2:;
	};
}



inline void _1e9e437a4_pushUseDecl(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_215dc2c9a_UseDecl>* _185336_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_185336_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1e9e36467_pushErr(_self_.ptr(), (*(_185336_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1e9e36786_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1e9e43ab2_pushMetaNodes(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _186138_tokens) {
	{
		auto &_match_expr{ (*(_186138_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_20bbe8a86:;
			{
				;
				jule::Ptr<_215dc2c9a_UseDecl> _186521_decl = _1e9e3d419_buildUseDecl(_self_.ptr(), (*(_186138_tokens)), false);;
				_1e9e437a4_pushUseDecl(_self_, &(_186521_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_20bbe8b0d:;
			{
				if ((((*(_186138_tokens)).len() > 1LL) && ((*(_186138_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_215dc2c9a_UseDecl> _187025_decl = _1e9e41ecd_buildCppLinkUse(_self_, (*(_186138_tokens)));;
					_1e9e437a4_pushUseDecl(_self_, &(_187025_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_20bbe8b85:;
			{
				_1e9e37127_pushDirective(_self_.ptr(), _1e9e36da2_buildDirective(_self_.ptr(), (*(_186138_tokens))));
				return true;;
			}
		}
		_match_end_20bbe89a9:;
	};
	return false;;
}



inline _215d76e4c_Node _1e9e43dc0_parseNode(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _188134_st) {
	_215d76e4c_Node _188217_node = _215d76e4c_Node{._field_Token=(*(_188134_st))[0LL], };;
	if (_1e9e43ab2_pushMetaNodes(_self_, _188134_st)) {
		return _188217_node;;
	};
	jule::Any _189017_data = _1e9e43034_buildNodeData(_self_, _188134_st);;
	if ((_189017_data == nullptr)) {
		return _188217_node;;
	};
	_188217_node._field_Data=_189017_data;
	_1e9e4352e_applyMeta(_self_.ptr(), &(_188217_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188217_node;;
}



inline void _1e9e44145_appendNode(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _190535_st) {
	if (((*(_190535_st)).len() == 0LL)) {
		return;;
	};
	_215d76e4c_Node _190917_node = _1e9e43dc0_parseNode(_self_, _190535_st);;
	if (((_190917_node._field_Data == nullptr) || _1e9e3609e_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190917_node);;
}



inline void _1e9e445a7_removeRange(_1e9e35a0a_parser* _self_, jule::I64 _191630_i, jule::Str _191638_kind, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _191650_tokens, jule::Slice<jule::I64>* _191673_ranges) {
	jule::Str _191713_close = _1e9e34a81_getCloseKindOfBrace(_191638_kind);;
	for (; (_191630_i >= 0LL); (_191630_i)--) {
		{
			jule::Ptr<_22e0aa1de_Token> _191917_tok = (*(_191650_tokens))[(*(_191673_ranges))[_191630_i]];;
			if ((_191917_tok.get()._field_Kind != _191713_close)) {
				goto _iter_next_20bc0308a;
			};
			(*(_191673_ranges))=jule::append((*(_191673_ranges)).slice(0LL, _191630_i),(*(_191673_ranges)).slice((_191630_i + 1LL)));
			goto _iter_end_20bc0308a;
		}
	_iter_next_20bc0308a:;
	}
	_iter_end_20bc0308a:;;
}



inline void _1e9e44970_pushWrongOrderCloseErr(_1e9e35a0a_parser* _self_, jule::Ptr<_22e0aa1de_Token>* _192842_t, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _192854_tokens, jule::Slice<jule::I64>* _192873_ranges) {
	{
		auto &_match_expr{ (*(_192854_tokens))[(*(_192873_ranges))[((*(_192873_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_20bc05125:;
			{
				_1e9e36467_pushErr(_self_, (*(_192842_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_20bc0519c:;
			{
				_1e9e36467_pushErr(_self_, (*(_192842_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_20bc05224:;
			{
				_1e9e36467_pushErr(_self_, (*(_192842_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_20bc05004:;
	};
}



inline void _1e9e44dd2_pushRangeClose(_1e9e35a0a_parser* _self_, jule::Ptr<_22e0aa1de_Token> _193933_t, jule::Str _193944_left, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _193956_tokens, jule::Slice<jule::I64>* _193979_ranges) {
	jule::I64 _194013_n = (*(_193979_ranges)).len();;
	if ((_194013_n == 0LL)) {
		{
			auto &_match_expr{ _193933_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_20bc07c0a:;
				{
					_1e9e36467_pushErr(_self_, _193933_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_20bc07c82:;
				{
					_1e9e36467_pushErr(_self_, _193933_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_20bc07d09:;
				{
					_1e9e36467_pushErr(_self_, _193933_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_20bc079c9:;
		};
		return;;
	} else if (((*(_193956_tokens))[(*(_193979_ranges))[(_194013_n - 1LL)]].get()._field_Kind != _193944_left)) {
		_1e9e44970_pushWrongOrderCloseErr(_self_, &(_193933_t), _193956_tokens, _193979_ranges);
	};
	_1e9e445a7_removeRange(_self_, static_cast<jule::I64>((_194013_n - 1LL)), _193933_t.get()._field_Kind, _193956_tokens, _193979_ranges);
}



inline void _1e9e45157_checkRanges(_1e9e35a0a_parser* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _195731_tokens) {
	jule::Slice<jule::I64> _195817_ranges = nullptr;;
	{
		auto expr = _195731_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc0ad0c:;
		if (it != expr_end) {
			jule::I64 _196013_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> *_196016_token = it;
			{
				if (((*(_196016_token)).get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_20bc0ad0c;
				};
				{
					auto &_match_expr{ (*(_196016_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_20bc0c072:;
						{
							_195817_ranges = jule::alloc_for_append(_195817_ranges,1);_195817_ranges.__push(_196013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20bc0c11b:;
						{
							_1e9e44dd2_pushRangeClose(_self_, (*(_196016_token)), jule::Str("(", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_20bc0c182:;
						{
							_1e9e44dd2_pushRangeClose(_self_, (*(_196016_token)), jule::Str("{", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20bc0c1e8:;
						{
							_1e9e44dd2_pushRangeClose(_self_, (*(_196016_token)), jule::Str("[", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					_match_end_20bc0baee:;
				};
			}
			_iter_next_20bc0ad0c:;
			++it;
			_196013_i++;
			goto _iter_begin_20bc0ad0c;
		}
		_iter_end_20bc0ad0c:;
	};
	{
		auto expr = &(_195817_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc0aa98:;
		if (it != expr_end) {
			jule::I64 _197816_i = *it;
			{
				jule::Ptr<_22e0aa1de_Token> _197917_token = (*(_195731_tokens))[_197816_i];;
				{
					auto &_match_expr{ _197917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_20bc0e77d:;
						{
							_1e9e36467_pushErr(_self_, _197917_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_20bc0e7e4:;
						{
							_1e9e36467_pushErr(_self_, _197917_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_20bc0e85a:;
						{
							_1e9e36467_pushErr(_self_, _197917_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_20bc0e54c:;
				};
			}
			_iter_next_20bc0aa98:;
			++it;
			goto _iter_begin_20bc0aa98;
		}
		_iter_end_20bc0aa98:;
	};
}



inline void _1e9e453cc_parse(jule::Ptr<_1e9e35a0a_parser> _self_, jule::Ptr<_22e0b0579_File>* _199130_f) {
	_self_.get()._field_ast=jule::new_ptr<_215d761c1_Ast>(_215d761c1_Ast{._field_File=(*(_199130_f)), });
	_1e9e45157_checkRanges(_self_.ptr(), &((*(_199130_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _200117_stmts = _1e9e18e2d_splitStmts(&((*(_199130_f)).get()._field_Tokens));;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1e9e18a87_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_20bc1272b;
			};
			if ((!(_22dbee77e_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_20bc1272b;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1e9e36da2_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_20bc1272b:;
	}
	_iter_end_20bc1272b:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1e9e18a87_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1e9e44145_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_1e9e3609e_stopped(_self_.ptr())) {
				goto _iter_end_20bc1175d;
			};
		}
	_iter_next_20bc1175d:;
	}
	_iter_end_20bc1175d:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e9e36467_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e35a0a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1e9e46ce6_pushErr(_1e9e4671e_typeBuilder* _self_, jule::Ptr<_22e0aa1de_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1e9e36467_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1e9e47115_pushSuggestion(_1e9e4671e_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1e9e36786_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e47379_buildPrim(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_215daa5e0_TypeDecl> _5517_t = _1e9e4628a_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e475dd_buildNamespace(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_215daa5e0_TypeDecl> _6117_t = jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_215dab6ac_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_215dab6ac_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_22e0aa1de_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1e9e46ce6_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_1e9e47115_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_20bc1b16e;
			};
			(_6617_n)++;
		}
	_iter_next_20bc1b16e:;
	}
	_iter_end_20bc1b16e:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_1e9e47d2a_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type97);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _1e9e47852_buildGenerics(_1e9e4671e_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_22e0aa1de_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_9413_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _9917_parts = _1e9e47ab6_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_1e9e46ce6_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_215daa5e0_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc2384c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_215daa5e0_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1e9e46ce6_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_20bc2384c:;
			++it;
			goto _iter_begin_20bc2384c;
		}
		_iter_end_20bc2384c:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _1e9e47ab6_identGenerics(_1e9e4671e_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*(_self_))._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_22e0aa1de_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_20bc27301:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_20bc27378:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_20bc270d1:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_20bc26014;
			};
		}
	_iter_next_20bc26014:;
	}
	_iter_end_20bc26014:;;
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _13618_parts;;
	jule::Slice<_22dbec89d_Log> _13625_errors;;
	({
		__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e347d9_parts(&(_13517_tokens), static_cast<jule::U64>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e47d2a_buildIdent(_1e9e4671e_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1e9e475dd_buildNamespace(_self_);;
	};
	jule::Ptr<_22e0aa1de_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_215daaba6_IdentTypeDecl> _14917_it = jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_215daa5e0_TypeDecl> _15517_itd = jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type19)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1e9e47852_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1e9e46ce6_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1e9e46ce6_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_215dab305_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_215dab305_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_215daa5e0_TypeDecl> _17417_ident = _1e9e47d2a_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_20bc3200e:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_215daaba6_IdentTypeDecl>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_20bc320db:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_215dab305_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);
			}
		}
		_match_end_20bc31e54:;
	};
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e4808e_buildCppLink(_1e9e4671e_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1e9e46ce6_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_215daa5e0_TypeDecl> _19317_t = _1e9e47d2a_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_215daaba6_IdentTypeDecl>(&__jule_any_type19).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48303_buildFn(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_215dbc06e_FnDecl> _20017_f = _1e9e3ba77_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_215dbc3c1_IsAnon(_20017_f.ptr())))) {
		_1e9e46ce6_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48567_buildPtr(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e9e46ce6_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_215dac46b_PtrTypeDecl>(_215dac46b_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type78)});;
	};
	jule::Ptr<_215daa5e0_TypeDecl> _23117_elem = _1e9e49755_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_215dac46b_PtrTypeDecl>(_215dac46b_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e487cb_buildSptr(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1e9e46ce6_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_215daa5e0_TypeDecl> _25217_elem = _1e9e49755_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_215dab998_SptrTypeDecl>(_215dab998_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48a40_buildOp(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_20bc3e69d:;
			{
				return _1e9e48567_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_20bc4077b:;
			{
				return _1e9e487cb_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_20bc407e2:;
			{
				return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_215dab998_SptrTypeDecl>(_215dab998_SptrTypeDecl{._field_Elem=_1e9e487cb_buildSptr(_self_)}), &__jule_any_type79)});;
			}
		}
		else {
			_case_begin_20bc3ed30:;
			{
				_1e9e46ce6_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_20bc3eba9:;
	};
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e48ca4_buildSlc(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_215daa5e0_TypeDecl> _28717_elem = _1e9e49755_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_215dabd94_SlcTypeDecl>(_215dabd94_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e49018_buildArr(_1e9e4671e_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _30017_exprTokens = _1e9e33c6c_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e9e46ce6_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_215daa5e0_TypeDecl> _30617_elem = _1e9e49755_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215dacaed_ArrTypeDecl> _31117_arrt = jule::new_ptr<_215dacaed_ArrTypeDecl>(_215dacaed_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_22e0aa1de_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && _31517_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_31117_arrt.get()._field_Size=_1e9e36a94_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type76)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e4927c_buildMap(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e9e46ce6_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _33717_keyTokens = _1e9e33c6c_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1e9e46ce6_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1e9e46ce6_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_215dad34b_MapTypeDecl> _34617_mapt = jule::new_ptr<_215dad34b_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_215daa5e0_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1e9e46ce6_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_215daa5e0_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_assign_result = _1e9e37d81_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type80)});;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e494e1_buildEnumerable(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (!_36817_token.get()._field_Kind.equal("[", 1)))) {
		_1e9e46ce6_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && _36817_token.get()._field_Kind.equal("]", 1))) {
		return _1e9e48ca4_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1e9e49018_buildArr(_self_);;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e49755_step(_1e9e4671e_typeBuilder* _self_) {
	jule::Ptr<_22e0aa1de_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_20bc53b8a:;
			{
				return _1e9e47379_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_20bc5352a:;
			{
				return _1e9e47d2a_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_20bc53591:;
			{
				return _1e9e4808e_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_20bc53607:;
			{
				return _1e9e48303_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_20bc53ecb:;
			{
				return _1e9e48a40_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_20bc54042:;
			{
				return _1e9e494e1_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_20bc540a8:;
			{
				return _1e9e4927c_buildMap(_self_);;
			}
		}
		else {
			_case_begin_20bc5342b:;
			{
				((*((*(_self_))._field_i)))++;
				_1e9e46ce6_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_20bc532a5:;
	};
}



inline __jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool _1e9e499b9_build(_1e9e4671e_typeBuilder* _self_) {
	__jule_tuple_x_215daa5e0_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_215daa5e0_TypeDecl> _41117_root = _1e9e49755_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1e9e46048_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e4671e_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2161e9038_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _2161ea8db_pushErr(_2161ea38b_directiveEval* _self_, jule::Ptr<_22e0aa1de_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_22dbec89d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_22dbeccdd_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _2161eac93_splitOperans(_2161ea38b_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_22e0aa1de_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_20bc78e79:;
						{
							(_3717_rangeN)++;
							goto _iter_next_20bc7710e;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_20bc78ee0:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_20bc78c59:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_20bc7710e;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_20bc7710e:;
	}
	_iter_end_20bc7710e:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_2161ea8db_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _2161eb0a1_evalDirectiveIdent(_2161ea38b_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc7be8d:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_20bc7be8d:;
			++it;
			goto _iter_begin_20bc7be8d;
		}
		_iter_end_20bc7be8d:;
	};
	return false;;
}



inline jule::Bool _2161eb3ae_evalDirectivePart(_2161ea38b_directiveEval* _self_, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_2161ea8db_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _2161eb0a1_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _2161eb623_eval(_2161ea38b_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_2161ea8db_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _11317_logicalOrParts = _2161eac93_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc832c4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _12021_logicalAndParts = _2161eac93_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bc844c3:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_22e0aa1de_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_22e0aa1de_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_22e0aa1de_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_2161ea8db_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _2161eb3ae_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_20bc844c3:;
						++it;
						goto _iter_begin_20bc844c3;
					}
					_iter_end_20bc844c3:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_20bc832c4:;
			++it;
			goto _iter_begin_20bc832c4;
		}
		_iter_end_20bc832c4:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _2161ea38b_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e9d3cbcb_JuleImporter> static__22e31dbc2_New(_2161e9038_CompileInfo _5819_info) {
	jule::Ptr<_1e9d3cbcb_JuleImporter> _5917_imp = jule::new_ptr<_1e9d3cbcb_JuleImporter>(_1e9d3cbcb_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_22dc07c1b_PathStdlib}), });;
	_2161e9852_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_215e1a133_ImportInfo>> _22e330189_AllPackages(_1e9d3cbcb_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _22e342ae7_SetModPath(_1e9d3cbcb_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _22e355b2c_GetModPath(_1e9d3cbcb_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _22e364993_ModById(_1e9d3cbcb_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_215e1a133_ImportInfo> _1e9c0d00d_GetImport(_1e9d3cbcb_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc8b640:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_20bc8b640:;
			++it;
			goto _iter_begin_20bc8b640;
		}
		_iter_end_20bc8b640:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log _1e9c15279_ImportPackage(_1e9d3cbcb_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>> _9717_dirents = ({
		auto except = static__22cb24881_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_22dbec89d_Log>::make({_22e2c654d_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _21620a533_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_22dbec89d_Log> _10525_errs = _21620a764_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_215d761c1_Ast>> _11217_asts = jule::Slice<jule::Ptr<_215d761c1_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc90677:;
		if (it != expr_end) {
			jule::Ptr<_22bdc95e8_DirEntry> _11316_dirent = *it;
			{
				if ((_22bd10991_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_22db6ae48_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_20bc90677;
				};
				jule::Str _11917__path = _22cc03e8d_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_22e0b0579_File> _12021_file = _22e0b1aa8_NewFileSet(_11917__path);;
				_22e0b0c0b_Fill(_12021_file.ptr(), _22e2c3c32_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_22dbec89d_Log> _12221_errors = _22e0bc454_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1e9dbee6c_FileInfo> _12721_finfo = _1e9e169ca_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_2161ce738_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_20bc90677;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_22dbec89d_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9c8355b_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_20bc90677;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_20bc90677:;
			++it;
			goto _iter_begin_20bc90677;
		}
		_iter_end_20bc90677:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e9c18bea_Imported(_1e9d3cbcb_JuleImporter* _self_, jule::Ptr<_215e1a133_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc95b88:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_20bc95b88:;
			++it;
			goto _iter_begin_20bc95b88;
		}
		_iter_end_20bc95b88:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20bc9745e:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_20bc9745e:;
				++it;
				_16217_i++;
				goto _iter_begin_20bc9745e;
			}
			_iter_end_20bc9745e:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_22dbec89d_Log _1e9c8355b_isPassBuildDirectives(_1e9d3cbcb_JuleImporter* _self_, jule::Ptr<_215d761c1_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_22dbec89d_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bc9a583:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_20bc9a583;
				};
				_2161ea38b_directiveEval _18421_de = _2161ea38b_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _2161eb623_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_20bc9a583:;
			++it;
			goto _iter_begin_20bc9a583;
		}
		_iter_end_20bc9a583:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e9d3cbcb_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22e371917_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _20bcc0eb0_isCommonOrdered(jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _1834_s, jule::Ptr<_215dc6cd2_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcc205a:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bcc2874:;
					if (it != expr_end) {
						jule::Ptr<_215dc6cd2_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_20bcc2874:;
						++it;
						goto _iter_begin_20bcc2874;
					}
					_iter_end_20bcc2874:;
				};
			}
			_iter_next_20bcc205a:;
			++it;
			goto _iter_begin_20bcc205a;
		}
		_iter_end_20bcc205a:;
	};
	return true;;
}

inline jule::Bool _20bcc5e0a_isCommonOrdered(jule::Slice<jule::Ptr<_215e41aa5_Var>> _1834_s, jule::Ptr<_215e41aa5_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcc6e61:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bcc777a:;
					if (it != expr_end) {
						jule::Ptr<_215e41aa5_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_20bcc777a:;
						++it;
						goto _iter_begin_20bcc777a;
					}
					_iter_end_20bcc777a:;
				};
			}
			_iter_next_20bcc6e61:;
			++it;
			goto _iter_begin_20bcc6e61;
		}
		_iter_end_20bcc6e61:;
	};
	return true;;
}



inline void _20bcbc682_orderCommon(jule::Slice<jule::Ptr<_215dc6cd2_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcbdbd3:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_20bcc0eb0_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_20bcbea19:;
				}
				_iter_end_20bcbea19:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_20bcbdbd3;
				};
				(_3217_n)--;
			}
			_iter_next_20bcbdbd3:;
			++it;
			goto _iter_begin_20bcbdbd3;
		}
		_iter_end_20bcbdbd3:;
	};
}

inline void _20bcbddd1_orderCommon(jule::Slice<jule::Ptr<_215e41aa5_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcc3b2d:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_20bcc5e0a_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_20bcc4964:;
				}
				_iter_end_20bcc4964:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_20bcc3b2d;
				};
				(_3217_n)--;
			}
			_iter_next_20bcc3b2d:;
			++it;
			goto _iter_begin_20bcc3b2d;
		}
		_iter_end_20bcc3b2d:;
	};
}



inline void static__22e30a043_orderStructures(jule::Slice<jule::Ptr<_215dc6cd2_Struct>>* _5136_structs) {
	_20bcbc682_orderCommon(_5136_structs);
}



inline void static__22e33a53a_orderVars(jule::Slice<jule::Ptr<_215e41aa5_Var>>* _5730_vars) {
	_20bcbddd1_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1e9c084ae_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea02a616_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1ea0617e5_optimizeChild(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215deb92d_Scope>* _3938_s) {
	jule::Ptr<_1ea06131c_scopeDeadCode> _4017_sdc = jule::new_ptr<_1ea06131c_scopeDeadCode>(_1ea06131c_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ea063e35_optimizeStmts(_4017_sdc);
	};
}



inline void _1ea061a8c_optimizeBodyChildExceptional(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215deb92d_Scope>* _5053_s) {
	jule::Ptr<_1ea06131c_scopeDeadCode> _5117_sdc = jule::new_ptr<_1ea06131c_scopeDeadCode>(_1ea06131c_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1ea063e35_optimizeStmts(_5117_sdc);
	};
}



inline void _1ea061d23_optimizeBodyChild(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215deb92d_Scope>* _6142_s) {
	jule::Ptr<_1ea06131c_scopeDeadCode> _6217_sdc = jule::new_ptr<_1ea06131c_scopeDeadCode>(_1ea06131c_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ea063e35_optimizeStmts(_6217_sdc);
	};
}



inline void _1ea062098_optimizeExprModel(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1ea065277_exprDeadCode _7213_edc = static__1ea0658a4_new(&(_self_));;
	_1ea06b5be_optimize(&_7213_edc, _7142_model);
}



inline void _1ea062274_eliminateFollowed(_1ea06131c_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1ea06131c_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_20bd42a37:;
	}
	_iter_end_20bd42a37:;;
}



inline void _1ea0624e9_pushGoto(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215dee458_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_20bd4541e:;
	}
	_iter_end_20bd4541e:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_215dee458_GotoSt>>::make({_9232_gt}));
}



inline void _1ea06276e_pushLabel(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215dee16c_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_20bd46b7e;
			};
			(_10317_i)++;
		}
	_iter_next_20bd46b7e:;
	}
	_iter_end_20bd46b7e:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_215dee16c_Label>>::make({_10233_l}));
}



inline void _1ea0629e4_optimizeRangeIter(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215ded5cd_RangeIter> _11541_it) {
	_1ea062098_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1ea061d23_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1ea062c69_optimizeWhileIter(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215decbe8_WhileIter> _12041_it) {
	_1ea062098_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1ea063c59_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1ea061d23_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1ea062ede_optimizeInfIter(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215dec775_InfIter> _12839_it) {
	_1ea061d23_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1ea063264_optimizeConditional(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215dec489_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd4cbc9:;
		if (it != expr_end) {
			jule::Ptr<_215debd29_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1ea062098_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1ea061d23_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_20bd4cbc9:;
			++it;
			goto _iter_begin_20bd4cbc9;
		}
		_iter_end_20bd4cbc9:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1ea0617e5_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1ea061d23_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1ea0634d9_optimizeMatch(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215e00679_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd50759:;
		if (it != expr_end) {
			jule::Ptr<_215e011c4_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bd51073:;
					if (it != expr_end) {
						jule::Ptr<_215e8e471_Data> _15225_expr = *it;
						{
							_1ea062098_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_20bd51073:;
						++it;
						goto _iter_begin_20bd51073;
					}
					_iter_end_20bd51073:;
				};
				_1ea061d23_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_20bd50759:;
			++it;
			goto _iter_begin_20bd50759;
		}
		_iter_end_20bd50759:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1ea0617e5_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1ea061d23_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1ea06375e_optimizeAssign(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215deec83_Assign> _16838_assign) {
	_1ea062098_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1ea062098_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1ea0639d4_optimizeMultiAssign(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Ptr<_215e0013a_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd5440b:;
		if (it != expr_end) {
			jule::Ptr<_215e8e471_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1ea062098_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_20bd5440b:;
			++it;
			goto _iter_begin_20bd5440b;
		}
		_iter_end_20bd5440b:;
	};
	_1ea062098_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1ea063c59_optimizeStmt(jule::Ptr<_1ea06131c_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_20bd55a8e:;
			{
				jule::Ptr<_215deb92d_Scope> _18521_scope = _18236_st.cast_ptr<_215deb92d_Scope>(&__jule_any_type21);;
				if (_18521_scope.get()._field_Deferred) {
					_1ea064221_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1ea0617e5_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_20bd55c15:;
			{
				_1ea0629e4_optimizeRangeIter(_self_, _18236_st.cast_ptr<_215ded5cd_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_20bd55c7b:;
			{
				_1ea062c69_optimizeWhileIter(_self_, _18236_st.cast_ptr<_215decbe8_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_20bd55ce2:;
			{
				_1ea062ede_optimizeInfIter(_self_, _18236_st.cast_ptr<_215dec775_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20bd55d69:;
			{
				_1ea063264_optimizeConditional(_self_, _18236_st.cast_ptr<_215dec489_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_20bd55de1:;
			{
				_1ea0634d9_optimizeMatch(_self_, _18236_st.cast_ptr<_215e00679_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_20bd55e68:;
			{
				_1ea06375e_optimizeAssign(_self_, _18236_st.cast_ptr<_215deec83_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_20bd55ee0:;
			{
				_1ea0639d4_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_215e0013a_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_20bd56067:;
			{
				jule::Ptr<_215e8e471_Data> _20621_d = _18236_st.cast_ptr<_215e8e471_Data>(&__jule_any_type23);;
				if (_self_.get()._field_except) {
					goto _match_end_20bd55b9e;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type29) {
						_case_begin_20bd5a4cd:;
						{
							_1ea062274_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_20bd5b424:;
						{
							_1ea062098_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_20bd5b3be:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_20bd560de:;
			{
				_1ea062274_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_20bd56166:;
			{
				_1ea0624e9_pushGoto(_self_, _18236_st.cast_ptr<_215dee458_GotoSt>(&__jule_any_type42));
				_1ea062274_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_20bd561dd:;
			{
				_1ea06276e_pushLabel(_self_, _18236_st.cast_ptr<_215dee16c_Label>(&__jule_any_type20));
			}
		}
		_match_end_20bd55b9e:;
	};
}



inline void _1ea063e35_optimizeStmts(jule::Ptr<_1ea06131c_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1ea063c59_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_20bd5d822:;
	}
	_iter_end_20bd5d822:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea06131c_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1ea065277_exprDeadCode static__1ea0658a4_new(jule::Ptr<_1ea06131c_scopeDeadCode>* _5024_s) {
	return _1ea065277_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1ea065b29_binary(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc78c6_BinopExprModel> _5625_m) {
	_1ea06b5be_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1ea06b5be_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1ea065d9e_unary(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc7ab3_UnaryExprModel> _6124_m) {
	_1ea06b5be_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1ea066124_structureLit(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc7e8c_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd61957:;
		if (it != expr_end) {
			jule::Ptr<_215dc7ca0_StructArgExprModel> _6621_arg = *it;
			{
				_1ea06b5be_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_20bd61957:;
			++it;
			goto _iter_begin_20bd61957;
		}
		_iter_end_20bd61957:;
	};
}



inline void _1ea066399_allocStructure(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc8179_AllocStructLitExprModel> _7133_m) {
	_1ea066124_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1ea06661e_casting(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc8366_CastingExprModel> _7526_m) {
	_1ea06b5be_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1ea066894_args(_1ea065277_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd63b46:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1ea06b5be_optimize(_self_, &(_8021_arg));
			}
			_iter_next_20bd63b46:;
			++it;
			goto _iter_begin_20bd63b46;
		}
		_iter_end_20bd63b46:;
	};
}



inline void _1ea066b19_funcCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc8553_FnCallExprModel> _8527_m) {
	_1ea06b5be_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1ea066894_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1ea061a8c_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1ea066d8e_slice(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc8740_SliceExprModel> _9324_m) {
	_1ea066894_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1ea067114_array(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc9bb4_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1ea06b5be_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1ea066894_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1ea067389_indexing(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc892c_IndexingExprModel> _10427_m) {
	_1ea06b5be_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1ea06b5be_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1ea06760e_anonFunc(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc8b19_AnonFnExprModel> _10927_m) {
	_1ea064221_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1ea067884_mapExpr(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc8ee3_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd6993d:;
		if (it != expr_end) {
			jule::Ptr<_215dc8d06_KeyValPairExprModel> _11421_pair = *it;
			{
				_1ea06b5be_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1ea06b5be_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_20bd6993d:;
			++it;
			goto _iter_begin_20bd6993d;
		}
		_iter_end_20bd6993d:;
	};
}



inline void _1ea067b09_slicing(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc91d0_SlicingExprModel> _12026_m) {
	_1ea06b5be_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1ea06b5be_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1ea06b5be_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1ea067d7e_traitSub(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc93bc_TraitSubIdentExprModel> _12827_m) {
	_1ea06b5be_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1ea068104_structureSub(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc97da_StructSubIdentExprModel> _13231_m) {
	_1ea06b5be_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1ea068379_commonSub(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dca08d_CommonSubIdentExprModel> _13628_m) {
	_1ea06b5be_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1ea0685ee_tuple(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dca27a_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd6dcd8:;
		if (it != expr_end) {
			jule::Ptr<_215e8e471_Data> _14121_d = *it;
			{
				_1ea06b5be_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_20bd6dcd8:;
			++it;
			goto _iter_begin_20bd6dcd8;
		}
		_iter_end_20bd6dcd8:;
	};
}



inline void _1ea068874_newCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1ea06b5be_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1ea068ae9_outCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dca467_BuiltinOutCallExprModel> _15226_m) {
	_1ea06b5be_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1ea068d6e_outlnCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dca654_BuiltinOutlnCallExprModel> _15628_m) {
	_1ea06b5be_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1ea0690e4_panicCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel> _16028_m) {
	_1ea06b5be_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1ea069369_assertCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcae07_BuiltinAssertCallExprModel> _16429_m) {
	_1ea06b5be_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1ea0695de_errorCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel> _16828_m) {
	_1ea06b5be_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1ea069864_makeCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1ea06b5be_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1ea06b5be_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1ea069ad9_appendCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel> _18129_m) {
	_1ea06b5be_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1ea06b5be_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1ea069d5e_lenCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel> _18626_m) {
	_1ea06b5be_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1ea06a0d4_capCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel> _19026_m) {
	_1ea06b5be_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1ea06a359_cloneCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dca841_BuiltinCloneCallExprModel> _19428_m) {
	_1ea06b5be_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1ea06a5ce_deleteCall(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel> _19829_m) {
	_1ea06b5be_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1ea06b5be_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1ea06a854_sizeof(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcc1e4_SizeofExprModel> _20525_m) {
	_1ea06b5be_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1ea06aac9_alignof(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcc3d1_AlignofExprModel> _20926_m) {
	_1ea06b5be_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1ea06ad4e_integratedToStr(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcc7aa_IntegratedToStrExprModel> _21334_m) {
	_1ea06b5be_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1ea06b0c4_free(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dccb84_FreeExprModel> _21723_m) {
	_1ea06b5be_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1ea06b349_backendEmit(_1ea065277_exprDeadCode* _self_, jule::Ptr<_215dcc997_BackendEmitExprModel> _22130_m) {
	_1ea066894_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1ea06b5be_optimize(_1ea065277_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_20bd7b532:;
			{
				_1ea065b29_binary(_self_, (*(_22528_model)).cast_ptr<_215dc78c6_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_20bd7b5a9:;
			{
				_1ea065d9e_unary(_self_, (*(_22528_model)).cast_ptr<_215dc7ab3_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_20bd7b631:;
			{
				_1ea066124_structureLit(_self_, (*(_22528_model)).cast_ptr<_215dc7e8c_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_20bd7ba0a:;
			{
				_1ea066399_allocStructure(_self_, (*(_22528_model)).cast_ptr<_215dc8179_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_20bd7ba71:;
			{
				_1ea06661e_casting(_self_, (*(_22528_model)).cast_ptr<_215dc8366_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20bd7bae8:;
			{
				_1ea066b19_funcCall(_self_, (*(_22528_model)).cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_20bd7bb70:;
			{
				_1ea066d8e_slice(_self_, (*(_22528_model)).cast_ptr<_215dc8740_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_20bd7bbe7:;
			{
				_1ea067114_array(_self_, (*(_22528_model)).cast_ptr<_215dc9bb4_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_20bd7bc6e:;
			{
				_1ea067389_indexing(_self_, (*(_22528_model)).cast_ptr<_215dc892c_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_20bd7bce6:;
			{
				_1ea06760e_anonFunc(_self_, (*(_22528_model)).cast_ptr<_215dc8b19_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_20bd7bd6d:;
			{
				_1ea067884_mapExpr(_self_, (*(_22528_model)).cast_ptr<_215dc8ee3_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20bd7bde5:;
			{
				_1ea067b09_slicing(_self_, (*(_22528_model)).cast_ptr<_215dc91d0_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_20bd7be6c:;
			{
				_1ea067d7e_traitSub(_self_, (*(_22528_model)).cast_ptr<_215dc93bc_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20bd7bee4:;
			{
				_1ea068104_structureSub(_self_, (*(_22528_model)).cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_20bd7c06b:;
			{
				_1ea068379_commonSub(_self_, (*(_22528_model)).cast_ptr<_215dca08d_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_20bd7c0e3:;
			{
				_1ea0685ee_tuple(_self_, (*(_22528_model)).cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_20bd7c16a:;
			{
				_1ea068ae9_outCall(_self_, (*(_22528_model)).cast_ptr<_215dca467_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_20bd7c1e2:;
			{
				_1ea068d6e_outlnCall(_self_, (*(_22528_model)).cast_ptr<_215dca654_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_20bd7c269:;
			{
				_1ea068874_newCall(_self_, (*(_22528_model)).cast_ptr<_215dcaa2d_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_20bd7c2e1:;
			{
				_1ea0690e4_panicCall(_self_, (*(_22528_model)).cast_ptr<_215dcac1a_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_20bd7c368:;
			{
				_1ea069369_assertCall(_self_, (*(_22528_model)).cast_ptr<_215dcae07_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_20bd7c3e0:;
			{
				_1ea0695de_errorCall(_self_, (*(_22528_model)).cast_ptr<_215dcc007_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_20bd7c467:;
			{
				_1ea069864_makeCall(_self_, (*(_22528_model)).cast_ptr<_215dcb0e4_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_20bd7c4de:;
			{
				_1ea069ad9_appendCall(_self_, (*(_22528_model)).cast_ptr<_215dcb2d1_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_20bd7c566:;
			{
				_1ea069d5e_lenCall(_self_, (*(_22528_model)).cast_ptr<_215dcb4bd_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_20bd7c5dd:;
			{
				_1ea06a0d4_capCall(_self_, (*(_22528_model)).cast_ptr<_215dcb6aa_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_20bd7c665:;
			{
				_1ea06a359_cloneCall(_self_, (*(_22528_model)).cast_ptr<_215dca841_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_20bd7c6dc:;
			{
				_1ea06a5ce_deleteCall(_self_, (*(_22528_model)).cast_ptr<_215dc95a9_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_20bd7c764:;
			{
				_1ea06a854_sizeof(_self_, (*(_22528_model)).cast_ptr<_215dcc1e4_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_20bd7c7db:;
			{
				_1ea06aac9_alignof(_self_, (*(_22528_model)).cast_ptr<_215dcc3d1_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_20bd7c863:;
			{
				_1ea06ad4e_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_215dcc7aa_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_20bd7c8da:;
			{
				_1ea06b0c4_free(_self_, (*(_22528_model)).cast_ptr<_215dccb84_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20bd7c962:;
			{
				_1ea06b349_backendEmit(_self_, (*(_22528_model)).cast_ptr<_215dcc997_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_20bd7b730:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ea065277_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21611662b_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2161169e4_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _216116cd0_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _216117165_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2161174ea_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _216117a39_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _216117e13_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_216119123_scopeOptimizer> static__216119684_new(jule::Ptr<_215deb92d_Scope> _4623_scope) {
	return jule::new_ptr<_216119123_scopeOptimizer>(_216119123_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _216119909_setCurrentStmt(_216119123_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _216119b7e_optimizeData(_216119123_scopeOptimizer* _self_, jule::Ptr<_215e8e471_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20bdb8a36:;
			{
				jule::Ptr<_215dc8553_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34);;
				if (_22bc32d47_Production) {
					if (((!(_215dd0d96_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _21611cce7_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_216119909_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_20bdb8827:;
	};
	static__21612004c_optimize(&(_5635_d.get()._field_Model));
}



inline void _216119e04_optimizeVar(_216119123_scopeOptimizer* _self_, jule::Ptr<_215e41aa5_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__21612004c_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _21611a179_optimizeConditional(_216119123_scopeOptimizer* _self_, jule::Ptr<_215dec489_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdbba17:;
		if (it != expr_end) {
			jule::Ptr<_215debd29_If> _7821_elif = *it;
			{
				static__21612004c_optimize(&(_7821_elif.get()._field_Expr));
				_21611c720_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_20bdbba17:;
			++it;
			goto _iter_begin_20bdbba17;
		}
		_iter_end_20bdbba17:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_21611c720_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_2161284a6_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdbd81b:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_215debd29_If> _9321_elif = *it;
			{
				if ((!(_21611d105_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_20bdbd81b;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_215dec115_Else>(_215dec115_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_20bdbd81b;
			}
			_iter_next_20bdbd81b:;
			++it;
			_9314_i++;
			goto _iter_begin_20bdbd81b;
		}
		_iter_end_20bdbd81b:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_215debd29_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_215debd29_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_21611d996_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_20bdc19a6:;
	}
	_iter_end_20bdc19a6:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdc3106:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_215debd29_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_20bdc3106:;
			++it;
			_13013_j++;
			goto _iter_begin_20bdc3106;
		}
		_iter_end_20bdc3106:;
	};
	if ((_12917_only != -1LL)) {
		_216119909_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _21611a564_buildDefaultConstatTrueCase(_216119123_scopeOptimizer* _self_, jule::Ptr<_215e011c4_Case> _14650_case, jule::I64* _14668_i, jule::Ptr<_215e00679_Match>* _14681_m) {
	_14650_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14668_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14650_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_20bdc5a76;
			};
			jule::Any *_15422_stmt = &(_14650_case.get()._field_Scope.get()._field_Stmts[(_14650_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_20bdc6082:;
					{
						((*(_14668_i)))++;
						if (((*(_14668_i)) >= (*(_14681_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14681_m)).get()._field_Default.get()._field_Scope, &__jule_any_type21);
							goto _iter_end_20bdc5a76;
						};
						_14650_case=(*(_14681_m)).get()._field_Cases[(*(_14668_i))];
						(*(_15422_stmt))=jule::Any(_14650_case.get()._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_20bdc75b1:;
					{
						goto _iter_end_20bdc5a76;
					}
				}
				_match_end_20bdc74c3:;
			};
		}
	_iter_next_20bdc5a76:;
	}
	_iter_end_20bdc5a76:;;
	(*(_14681_m)).get()._field_Default=(*(_14681_m)).get()._field_Cases[_14813_start];
	(*(_14681_m)).get()._field_Cases=(*(_14681_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _21611a773_optimizeMatch(_216119123_scopeOptimizer* _self_, jule::Ptr<_215e00679_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdc9618:;
		if (it != expr_end) {
			jule::Ptr<_215e011c4_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bdc9e54:;
					if (it != expr_end) {
						jule::Ptr<_215e8e471_Data> _17425_expr = *it;
						{
							static__21612004c_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_20bdc9e54:;
						++it;
						goto _iter_begin_20bdc9e54;
					}
					_iter_end_20bdc9e54:;
				};
				_21611c720_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_20bdc9618:;
			++it;
			goto _iter_begin_20bdc9618;
		}
		_iter_end_20bdc9618:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_21611c720_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_2161284a6_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdcba5a:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_215e011c4_Case> _19025_case = *it;
			{
				if ((!(_21611d6ee_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_20bdcba5a;
				};
				_18717_constCase=true;
				_21611a564_buildDefaultConstatTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_20bdcba5a;
			}
			_iter_next_20bdcba5a:;
			++it;
			_19018_i++;
			goto _iter_begin_20bdcba5a;
		}
		_iter_end_20bdcba5a:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_215e011c4_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_215e011c4_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_21611dc4e_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_20bdce70b:;
	}
	_iter_end_20bdce70b:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdd07b7:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_215e011c4_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_20bdd07b7:;
			++it;
			_22013_j++;
			goto _iter_begin_20bdd07b7;
		}
		_iter_end_20bdd07b7:;
	};
	if ((_21917_only != -1LL)) {
		_216119909_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _21611a9e8_optimizeRangeIter(_216119123_scopeOptimizer* _self_, jule::Ptr<_215ded5cd_RangeIter> _23640_it) {
	static__21612004c_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_21611c720_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _21611ac6d_optimizeWhileIter(_216119123_scopeOptimizer* _self_, jule::Ptr<_215decbe8_WhileIter> _24140_it) {
	static__21612004c_optimize(&(_24140_it.get()._field_Expr));
	_21611c49a_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_21611c720_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _21611b07b_substr(_216119123_scopeOptimizer* _self_, jule::Ptr<_215deec83_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20bdd4e1a:;
			{
				jule::Ptr<_215dc91d0_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_215dc91d0_SlicingExprModel>(&__jule_any_type98);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_216119909_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216117a39_MutSlicingExprModel>(_216117a39_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type126));
					return true;;
				};
			}
		}
		_match_end_20bdd4d93:;
	};
	return false;;
}



inline jule::Bool _21611b389_strInsert(_216119123_scopeOptimizer* _self_, jule::Ptr<_215deec83_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_20bdd7857:;
			{
				jule::Ptr<_215dc78c6_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_215dc78c6_BinopExprModel>(&__jule_any_type117);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_216119909_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_216117e13_StrInsertBeginExprModel>(_216117e13_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_20bdd77d0:;
	};
	return false;;
}



inline jule::Bool _21611b697_strAppend(_216119123_scopeOptimizer* _self_, jule::Ptr<_215deec83_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20bdda294:;
			{
				_216119909_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2161169e4_StrAppendExprModel>(_2161169e4_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type128));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_20bdda30a:;
			{
				jule::Ptr<_215dc8366_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_215dc8366_CastingExprModel>(&__jule_any_type100);;
				jule::Ptr<_215ec0150_Prim> _30121_prim = _215ebc78a_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_215ebd714_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_215ebc78a_Prim(_215ebd714_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_215ec1959_IsU8(_30121_prim.ptr()))) && (!(_215ec1481_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_20bdda21c;
				};
				_216119909_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2161169e4_StrAppendExprModel>(_2161169e4_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type128));
				return true;;
			}
		}
		_match_end_20bdda21c:;
	};
	return false;;
}



inline jule::Bool _21611b9a5_strAssign(_216119123_scopeOptimizer* _self_, jule::Ptr<_215deec83_Assign> _31732_a) {
	if ((!(_216128770_Str))) {
		return false;;
	};
	jule::Ptr<_215ec0150_Prim> _32113_lp = _215ebc78a_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_215ec3384_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_21611b07b_substr(_self_, _31732_a) || _21611b389_strInsert(_self_, _31732_a) || _21611b697_strAppend(_self_, _31732_a)) {
			_case_begin_20bde0e6a:;
			{
				return true;;
			}
		}
		_match_end_20bde0dc1:;
	};
	return false;;
}



inline void _21611bc2a_optimizeAssign(_216119123_scopeOptimizer* _self_, jule::Ptr<_215deec83_Assign> _33437_assign) {
	if (_21611b9a5_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__21612004c_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__21612004c_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_20bde2e5b:;
			{
				if ((_216127780_Math && (_215ebdbdc_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_215dc78c6_BinopExprModel>(_215dc78c6_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type117);;
					static__21612004c_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type117) {
							_case_begin_20bde5326:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_215dc76d9_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_20bde50c3:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_20bde2d4b:;
	};
	if (_216127472_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_20bde6db6:;
				{
					jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_215dcb2d1_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_20bde7e2d:;
							{
								{
									auto &_match_expr{ _36825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_20bde86ae:;
										{
											_216119909_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_2161174ea_PushToSliceExprModel>(_2161174ea_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_215dc8740_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type129));
										}
									}
									_match_end_20bde8659:;
								};
							}
						}
						_match_end_20bde7c1e:;
					};
				}
			}
			_match_end_20bde3a3e:;
		};
	};
}



inline void _21611bea0_optimizeMultiAssign(_216119123_scopeOptimizer* _self_, jule::Ptr<_215e0013a_MultiAssign> _38442_assign) {
	{
		auto expr = &(_38442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bde72c3:;
		if (it != expr_end) {
			jule::Ptr<_215e8e471_Data> _38521_l = *it;
			{
				if ((_38521_l != nullptr)) {
					static__21612004c_optimize(&(_38521_l.get()._field_Model));
				};
			}
			_iter_next_20bde72c3:;
			++it;
			goto _iter_begin_20bde72c3;
		}
		_iter_end_20bde72c3:;
	};
	static__21612004c_optimize(&(_38442_assign.get()._field_R));
}



inline void _21611c225_optimizeRet(_216119123_scopeOptimizer* _self_, jule::Ptr<_215e01aed_RetSt> _39334_r) {
	static__21612004c_optimize(&(_39334_r.get()._field_Expr));
}



inline void _21611c49a_optimizeStmt(_216119123_scopeOptimizer* _self_, jule::Any _39735_stmt) {
	{
		auto &_match_expr{ _39735_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_20bdeaace:;
			{
				_21611c720_optimizeChild(_self_, _39735_stmt.cast_ptr<_215deb92d_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_20bdeab56:;
			{
				_216119b7e_optimizeData(_self_, _39735_stmt.cast_ptr<_215e8e471_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20bdeabcd:;
			{
				_216119e04_optimizeVar(_self_, _39735_stmt.cast_ptr<_215e41aa5_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20bdeac55:;
			{
				_21611a179_optimizeConditional(_self_, _39735_stmt.cast_ptr<_215dec489_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_20bdeaccc:;
			{
				_21611a9e8_optimizeRangeIter(_self_, _39735_stmt.cast_ptr<_215ded5cd_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_20bdead54:;
			{
				_21611ac6d_optimizeWhileIter(_self_, _39735_stmt.cast_ptr<_215decbe8_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_20bdeadcb:;
			{
				_21611c720_optimizeChild(_self_, _39735_stmt.cast_ptr<_215dec775_InfIter>(&__jule_any_type36).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_20bdeae53:;
			{
				_21611bc2a_optimizeAssign(_self_, _39735_stmt.cast_ptr<_215deec83_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_20bdeaeca:;
			{
				_21611bea0_optimizeMultiAssign(_self_, _39735_stmt.cast_ptr<_215e0013a_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_20bdeb052:;
			{
				_21611a773_optimizeMatch(_self_, _39735_stmt.cast_ptr<_215e00679_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_20bdeb0c9:;
			{
				_21611c225_optimizeRet(_self_, _39735_stmt.cast_ptr<_215e01aed_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_20bdea925:;
	};
}



inline void _21611c720_optimizeChild(_216119123_scopeOptimizer* _self_, jule::Ptr<_215deb92d_Scope> _42436_child) {
	jule::Ptr<_216119123_scopeOptimizer> _42517_so = static__216119684_new(_42436_child);;
	_21611c8eb_optimize(_42517_so.ptr());
}



inline void _21611c8eb_optimize(_216119123_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be021ac:;
		if (it != expr_end) {
			jule::I64 _43114_i = it - expr->begin();
			jule::Any _43121_stmt = *it;
			{
				(*(_self_))._field_i=_43114_i;
				_21611c49a_optimizeStmt(_self_, _43121_stmt);
			}
			_iter_next_20be021ac:;
			++it;
			_43114_i++;
			goto _iter_begin_20be021ac;
		}
		_iter_end_20be021ac:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _216119123_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__21612004c_optimize(jule::Any* _5829_model) {
	if (_1e9e63b9d_exprEnabled) {
		jule::Ptr<_21611ea1e_exprOptimizer> _6121_exop = jule::new_ptr<_21611ea1e_exprOptimizer>(_21611ea1e_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_216126251_do(_6121_exop.ptr());
	};
}



inline jule::Bool _21612035a_strCond(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc78c6_BinopExprModel> _6826_m) {
	jule::Ptr<_215ec0150_Prim> _6913_lp = _215ebc78a_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_215ec3384_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20be0aa9a:;
			{
				({
					jule::Ptr<_215dc76d9_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_215dc76d9_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_20be0aa45:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20be0a319:;
			{
				goto _match_end_20be0b590;
			}
		}
		else {
			_case_begin_20be0bb34:;
			{
				return true;;
			}
		}
		_match_end_20be0b590:;
	};
	_julec_label_opt:;
	jule::Ptr<_21470339b_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_20be0cc01:;
			{
				if (_214704435_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_215dca08d_CommonSubIdentExprModel>(_215dca08d_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_20be0cb9b;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_21611662b_StrCompExprModel>(_21611662b_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_20be0cc67:;
			{
				if (_214704435_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_22e0aa1de_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_215dc7ab3_UnaryExprModel>(_215dc7ab3_UnaryExprModel{._field_Expr=jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Model=jule::Any(jule::new_ptr<_215dca08d_CommonSubIdentExprModel>(_215dca08d_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_20be0cb9b;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_21611662b_StrCompExprModel>(_21611662b_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_20be0cb9b:;
	};
	return true;;
}



inline void _2161205d0_binary(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc78c6_BinopExprModel> _13125_m) {
	static__21612004c_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__21612004c_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20be19658:;
			{
				goto _match_end_20be1915d;
			}
		}
		else {
			_case_begin_20be19218:;
			{
				return;;
			}
		}
		_match_end_20be1915d:;
	};
	if ((_2161284a6_Cond && _21612035a_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_216127780_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_20be1a22a:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _21612664c_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_21470339b_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
					_214704b72_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_20be1a2a2:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _21612664c_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_21470339b_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
					_214704b72_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_20be1a329:;
			{
				jule::Ptr<_21470339b_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
				jule::F64 _16817_d = _21470490d_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_214704a40_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_20be1a1a3:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_216116cd0_UnsafeBinopExprModel>(_216116cd0_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _216120855_unary(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc7ab3_UnaryExprModel> _17824_m) {
	static__21612004c_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_2161280cc_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_20be220de:;
				{
					jule::Ptr<_215dc7ab3_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_215dc7ab3_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_20be22089:;
		};
	};
}



inline void _216120aca_structureLit(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc7e8c_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be23b07:;
		if (it != expr_end) {
			jule::Ptr<_215dc7ca0_StructArgExprModel> _19221_arg = *it;
			{
				static__21612004c_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_20be23b07:;
			++it;
			goto _iter_begin_20be23b07;
		}
		_iter_end_20be23b07:;
	};
}



inline void _216120d50_allocStructure(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc8179_AllocStructLitExprModel> _19733_m) {
	_216120aca_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _2161210c5_casting(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc8366_CastingExprModel> _20126_m) {
	static__21612004c_optimize(&(_20126_m.get()._field_Expr));
}



inline void _21612134a_args(_21611ea1e_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be255a9:;
		if (it != expr_end) {
			jule::I64 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__21612004c_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_20be255a9:;
			++it;
			_20614_i++;
			goto _iter_begin_20be255a9;
		}
		_iter_end_20be255a9:;
	};
}



inline void _2161215c0_scope(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215deb92d_Scope>* _21225_s) {
	jule::Ptr<_216119123_scopeOptimizer> _21317_scopt = static__216119684_new((*(_21225_s)));;
	_21611c8eb_optimize(_21317_scopt.ptr());
}



inline void _216121845_funcCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc8553_FnCallExprModel> _21727_m) {
	static__21612004c_optimize(&(_21727_m.get()._field_Expr));
	_21612134a_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_2161215c0_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _216121aba_slice(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc8740_SliceExprModel> _22524_m) {
	_21612134a_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _216121d40_array(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc9bb4_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__21612004c_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_21612134a_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _2161220b5_indexing(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc892c_IndexingExprModel> _23827_m) {
	static__21612004c_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__21612004c_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_216127a49_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_215ebd4a0_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _215e8ed34_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_216117165_UnsafeIndexingExprModel>(_216117165_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20be2dc99:;
			{
				jule::Ptr<_215e41aa5_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_20be2db45;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_20be30509:;
						{
							jule::Ptr<_215e41aa5_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_216117165_UnsafeIndexingExprModel>(_216117165_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_20be304a4:;
				};
			}
		}
		_match_end_20be2db45:;
	};
}



inline void _21612233a_anonFunc(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc8b19_AnonFnExprModel> _26927_m) {
	_2161215c0_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _2161225b0_mapExpr(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc8ee3_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be32ac2:;
		if (it != expr_end) {
			jule::Ptr<_215dc8d06_KeyValPairExprModel> _27421_pair = *it;
			{
				static__21612004c_optimize(&(_27421_pair.get()._field_Key));
				static__21612004c_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_20be32ac2:;
			++it;
			goto _iter_begin_20be32ac2;
		}
		_iter_end_20be32ac2:;
	};
}



inline void _216122835_slicing(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc91d0_SlicingExprModel> _28026_m) {
	static__21612004c_optimize(&(_28026_m.get()._field_Expr));
	static__21612004c_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__21612004c_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _216122aaa_traitSub(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc93bc_TraitSubIdentExprModel> _28827_m) {
	static__21612004c_optimize(&(_28827_m.get()._field_Expr));
}



inline void _216122d30_structureSub(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc97da_StructSubIdentExprModel> _29231_m) {
	static__21612004c_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _2161230a5_commonSub(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dca08d_CommonSubIdentExprModel> _29628_m) {
	static__21612004c_optimize(&(_29628_m.get()._field_Expr));
}



inline void _21612332a_tuple(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dca27a_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be35dd3:;
		if (it != expr_end) {
			jule::Ptr<_215e8e471_Data> _30121_d = *it;
			{
				static__21612004c_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_20be35dd3:;
			++it;
			goto _iter_begin_20be35dd3;
		}
		_iter_end_20be35dd3:;
	};
}



inline void _2161235a0_newCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__21612004c_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _216123825_outCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dca467_BuiltinOutCallExprModel> _31226_m) {
	static__21612004c_optimize(&(_31226_m.get()._field_Expr));
}



inline void _216123a9a_outlnCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dca654_BuiltinOutlnCallExprModel> _31628_m) {
	static__21612004c_optimize(&(_31628_m.get()._field_Expr));
}



inline void _216123d20_panicCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel> _32028_m) {
	static__21612004c_optimize(&(_32028_m.get()._field_Expr));
}



inline void _216124095_assertCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcae07_BuiltinAssertCallExprModel> _32429_m) {
	static__21612004c_optimize(&(_32429_m.get()._field_Expr));
}



inline void _21612431a_errorCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel> _32828_m) {
	static__21612004c_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _216124590_makeCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__21612004c_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__21612004c_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _216124815_appendCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel> _34129_m) {
	static__21612004c_optimize(&(_34129_m.get()._field_Dest));
	static__21612004c_optimize(&(_34129_m.get()._field_Elements));
}



inline void _216124a8a_lenCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel> _34626_m) {
	static__21612004c_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _216124d10_capCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel> _35026_m) {
	static__21612004c_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _216125085_cloneCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dca841_BuiltinCloneCallExprModel> _35428_m) {
	static__21612004c_optimize(&(_35428_m.get()._field_Expr));
}



inline void _21612530a_deleteCall(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel> _35829_m) {
	static__21612004c_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__21612004c_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _216125580_sizeof(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcc1e4_SizeofExprModel> _36525_m) {
	static__21612004c_optimize(&(_36525_m.get()._field_Expr));
}



inline void _216125805_alignof(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcc3d1_AlignofExprModel> _36926_m) {
	static__21612004c_optimize(&(_36926_m.get()._field_Expr));
}



inline void _216125a7a_integratedToStr(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcc7aa_IntegratedToStrExprModel> _37334_m) {
	static__21612004c_optimize(&(_37334_m.get()._field_Expr));
}



inline void _216125d00_free(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dccb84_FreeExprModel> _37723_m) {
	static__21612004c_optimize(&(_37723_m.get()._field_Expr));
}



inline void _216126075_backendEmit(_21611ea1e_exprOptimizer* _self_, jule::Ptr<_215dcc997_BackendEmitExprModel> _38130_m) {
	_21612134a_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _216126251_do(_21611ea1e_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_20be401ea:;
			{
				_2161205d0_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc78c6_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_20be404e7:;
			{
				_216120855_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc7ab3_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_20be4055d:;
			{
				_216120aca_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc7e8c_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_20be405c4:;
			{
				_216120d50_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc8179_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_20be4063a:;
			{
				_2161210c5_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc8366_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20be406b2:;
			{
				_216121845_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_20be40739:;
			{
				_216121aba_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc8740_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_20be407b1:;
			{
				_216121d40_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc9bb4_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_20be40838:;
			{
				_2161220b5_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc892c_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_20be408b0:;
			{
				_21612233a_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc8b19_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_20be40937:;
			{
				_2161225b0_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc8ee3_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20be409ae:;
			{
				_216122835_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc91d0_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_20be40a36:;
			{
				_216122aaa_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc93bc_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20be40aad:;
			{
				_216122d30_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_20be40b35:;
			{
				_2161230a5_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dca08d_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_20be40bac:;
			{
				_21612332a_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_20be40c34:;
			{
				_216123825_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dca467_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_20be40cab:;
			{
				_216123a9a_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dca654_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_20be40d33:;
			{
				_2161235a0_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcaa2d_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_20be40daa:;
			{
				_216123d20_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcac1a_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_20be40e32:;
			{
				_216124095_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcae07_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_20be40ea9:;
			{
				_21612431a_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcc007_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_20be41031:;
			{
				_216124590_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcb0e4_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_20be410a8:;
			{
				_216124815_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcb2d1_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_20be41130:;
			{
				_216124a8a_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcb4bd_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_20be411a7:;
			{
				_216124d10_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcb6aa_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_20be4122e:;
			{
				_216125085_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dca841_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_20be412a6:;
			{
				_21612530a_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dc95a9_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_20be4132d:;
			{
				_216125580_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcc1e4_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_20be413a5:;
			{
				_216125805_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcc3d1_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_20be4142c:;
			{
				_216125a7a_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcc7aa_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_20be414a4:;
			{
				_216125d00_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dccb84_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20be4152b:;
			{
				_216126075_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_215dcc997_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_20be40195:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _21611ea1e_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e9e622d9_Optimizer> static__1e9e819e0_New(jule::Ptr<_22e2caed1_IR>* _2524_ir) {
	return jule::new_ptr<_1e9e622d9_Optimizer>(_1e9e622d9_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1e9e8ee60_optimizeGlobal(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215e41aa5_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__21612004c_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1e9ebe027_optimizeFunction(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215dcd24a_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be587a7:;
		if (it != expr_end) {
			jule::Ptr<_215dcea10_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_216119123_scopeOptimizer> _4221_so = static__216119684_new(_4121_ins.get()._field_Scope);;
				_21611c8eb_optimize(_4221_so.ptr());
			}
			_iter_next_20be587a7:;
			++it;
			goto _iter_begin_20be587a7;
		}
		_iter_end_20be587a7:;
	};
}



inline void _1e9ecd80b_optimizeStruct(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215dc6cd2_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be59c81:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20be5a479:;
					if (it != expr_end) {
						jule::Ptr<_215dc6ebe_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__21612004c_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_20be5a479:;
						++it;
						goto _iter_begin_20be5a479;
					}
					_iter_end_20be5a479:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20be5aea2:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _5725_m = *it;
						{
							_1e9ebe027_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_20be5aea2:;
						++it;
						goto _iter_begin_20be5aea2;
					}
					_iter_end_20be5aea2:;
				};
			}
			_iter_next_20be59c81:;
			++it;
			goto _iter_begin_20be59c81;
		}
		_iter_end_20be59c81:;
	};
}



inline void _1e9ed6a12_optimizeGlobals(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215e1d08c_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be5b887:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20be5c57a:;
					if (it != expr_end) {
						jule::Ptr<_215e41aa5_Var> _6525_v = *it;
						{
							_1e9e8ee60_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_20be5c57a:;
						++it;
						goto _iter_begin_20be5c57a;
					}
					_iter_end_20be5c57a:;
				};
			}
			_iter_next_20be5b887:;
			++it;
			goto _iter_begin_20be5b887;
		}
		_iter_end_20be5b887:;
	};
}



inline void _1e9ee6758_optimizeFunctions(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215e1d08c_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be5cb0d:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20be5d845:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _7325_func = *it;
						{
							_1e9ebe027_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_20be5d845:;
						++it;
						goto _iter_begin_20be5d845;
					}
					_iter_end_20be5d845:;
				};
			}
			_iter_next_20be5cb0d:;
			++it;
			goto _iter_begin_20be5cb0d;
		}
		_iter_end_20be5cb0d:;
	};
}



inline void _1e9ee7e96_optimizeStructs(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215e1d08c_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be5ddc8:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20be5eb10:;
					if (it != expr_end) {
						jule::Ptr<_215dc6cd2_Struct> _8125_s = *it;
						{
							_1e9ecd80b_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_20be5eb10:;
						++it;
						goto _iter_begin_20be5eb10;
					}
					_iter_end_20be5eb10:;
				};
			}
			_iter_next_20be5ddc8:;
			++it;
			goto _iter_begin_20be5ddc8;
		}
		_iter_end_20be5ddc8:;
	};
}



inline void _1e9e93507_optimizePackage(_1e9e622d9_Optimizer* _self_, jule::Ptr<_215e1d08c_Package>* _8739_p) {
	_1e9ed6a12_optimizeGlobals(_self_, _8739_p);
	_1e9ee6758_optimizeFunctions(_self_, _8739_p);
	_1e9ee7e96_optimizeStructs(_self_, _8739_p);
}



inline void _1e9ec1d60_Optimize(_1e9e622d9_Optimizer* _self_) {
	_1e9ee206c_detectEnabled();
	if (_2161271a8_Deadcode) {
		_1ea05eded_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1e9e64819_scopeEnabled || _1e9e63b9d_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20be61da9:;
			if (it != expr_end) {
				jule::Ptr<_215e1a133_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1e9e93507_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_20be61da9:;
				++it;
				goto _iter_begin_20be61da9;
			}
			_iter_end_20be61da9:;
		};
		_1e9e93507_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_2161271a8_Deadcode) {
		_1ea064ba0_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e9e622d9_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ea06d36d_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ea06e46d_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ea06d36d_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1ea06e281_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ea070a02_LogFlat(_22dbec89d_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1ea070c11_LogError(_22dbec89d_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1ea06d36d_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_2146edd36_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_2146edd36_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _22db72779_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_22db72779_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _2146edd36_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_22db52d86_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_22db52d86_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_22db52d86_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ea06e46d_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ea070e20_Log(_22dbec89d_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_20be71902:;
			{
				static__1ea070a02_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_20be71968:;
			{
				static__1ea070c11_LogError(_6520_l);
			}
		}
		_match_end_20be7179d:;
	};
}



inline void static__1ea07112e_PrintLogs(jule::Slice<_22dbec89d_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20be728c0:;
		if (it != expr_end) {
			_22dbec89d_Log *_7616_l = it;
			{
				static__1ea070e20_Log(_7616_l);
			}
			_iter_next_20be728c0:;
			++it;
			goto _iter_begin_20be728c0;
		}
		_iter_end_20be728c0:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_2146edd36_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1ea07076b_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1ea71b301_Unix(_1ea71ae49_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1ea71d886_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1ea71dc1b_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea71ae49_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ea71b5dc_Time static__1ea71b983_Unix(jule::U64 _9120_sec) {
	return _1ea71b5dc_Time{._field_sec=_9120_sec};;
}



inline _1ea71b5dc_Time static__1ea71bb81_Now(void) {
	return static__1ea71b983_Unix(static_cast<jule::U64>(_1ea71d578_unix()));;
}



inline jule::U64 _1ea71c0d2_Unix(_1ea71b5dc_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1ea71c346_Day(_1ea71b5dc_Time* _self_) {
	return _1ea71d2c0_Abs(_self_)._field_Day;;
}



inline jule::U64 _1ea71c5aa_Month(_1ea71b5dc_Time* _self_) {
	return _1ea71d2c0_Abs(_self_)._field_Month;;
}



inline jule::U64 _1ea71c81e_Year(_1ea71b5dc_Time* _self_) {
	return _1ea71d2c0_Abs(_self_)._field_Year;;
}



inline jule::U64 _1ea71ca83_Second(_1ea71b5dc_Time* _self_) {
	return _1ea71d2c0_Abs(_self_)._field_Second;;
}



inline jule::U64 _1ea71cce7_Minute(_1ea71b5dc_Time* _self_) {
	return _1ea71d2c0_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1ea71d05b_Hour(_1ea71b5dc_Time* _self_) {
	return _1ea71d2c0_Abs(_self_)._field_Hour;;
}



inline _1ea71ae49_AbsTime _1ea71d2c0_Abs(_1ea71b5dc_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1ea71a4cb_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1ea71a4cb_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_20bea23a0:;
	}
	_iter_end_20bea23a0:;;
	_1ea71ae49_AbsTime _17417_t = _1ea71ae49_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea71b5dc_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea661059_scopeCoder> static__1ea661697_new(jule::Ptr<_1ea723407_ObjectCoder>* _6424_oc) {
	return jule::new_ptr<_1ea661059_scopeCoder>(_1ea661059_scopeCoder{._field_oc=(*(_6424_oc))});;
}



inline void _20c0423b8_iterHead(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215ded5cd_RangeIter>* _7132_it, jule::Bool* _7144_ref, jule::Str* _7156_begin) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_216126d9a_Copy && _1ea666c1e_isCopyOptimizable(&((*(_7132_it)).get()._field_Expr)))) {
		(*(_7144_ref))=true;
		{
			auto &_match_expr{ (*(_7132_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_20c043c5a:;
				{
					jule::Ptr<_215e41aa5_Var> _8021_v = (*(_7132_it)).get()._field_Expr.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_1ea675d60_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_20c0457a6;
					};
					goto _case_begin_20c04580b;
				}
			}
			else {
				_case_begin_20c04580b:;
				{
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1ea675d60_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_20c0457a6:;
		};
	} else {
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7144_ref))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7144_ref))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, (*(_7156_begin)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
}



inline void _1ea661cd5_rangeIndexIter(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215ded5cd_RangeIter>* _12039_it) {
	jule::Str _12113_begin = static__1ea67eb16_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Str _12213_next = static__1ea680155_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Bool _12417_ref = false;;
	_20c0423b8_iterHead(_self_, _12039_it, &(_12417_ref), &(_12113_begin));
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1ea725c9a_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12417_ref) {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ea6ecada_indent(_self_.get()._field_oc);
	};
	if (((*(_12039_it)).get()._field_KeyB != nullptr)) {
		(*(_12039_it)).get()._field_KeyB.get()._field_Reference=(_216126d9a_Copy && _1ea6670a4_isIterCopyOptimizable(&((*(_12039_it)).get()._field_Expr), &((*(_12039_it)).get()._field_KeyB)));
		_1ea725c9a_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12039_it)).get()._field_KeyB.get()._field_Reference) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ea6ecada_indent(_self_.get()._field_oc);
	};
	_1ea666647_scope(_self_, (*(_12039_it)).get()._field_Scope);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, _12213_next);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ea6ecada_indent(_self_.get()._field_oc);
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e86e_var((*(_12039_it)).get()._field_KeyA));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1ea6ecada_indent(_self_.get()._field_oc);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ea6a5037_write(_self_.get()._field_oc, _12113_begin);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67edad_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it))))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ea66205a_rangeHashmapIter(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215ded5cd_RangeIter>* _18341_it) {
	jule::Str _18413_begin = static__1ea67eb16_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Str _18513_next = static__1ea680155_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Bool _18717_ref = false;;
	_20c0423b8_iterHead(_self_, _18341_it, &(_18717_ref), &(_18413_begin));
	if (((*(_18341_it)).get()._field_KeyA != nullptr)) {
		_1ea725c9a_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ea6ecada_indent(_self_.get()._field_oc);
	};
	if (((*(_18341_it)).get()._field_KeyB != nullptr)) {
		_1ea725c9a_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ea6ecada_indent(_self_.get()._field_oc);
	};
	_1ea666647_scope(_self_, (*(_18341_it)).get()._field_Scope);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, _18513_next);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ea6a5037_write(_self_.get()._field_oc, _18413_begin);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67edad_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it))))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ea6622d0_ifCase(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215debd29_If> _22630_i) {
	if ((_22630_i.get()._field_Expr != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22630_i.get()._field_Expr);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1ea666647_scope(_self_, _22630_i.get()._field_Scope);
}



inline void _1ea662555_conditional(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dec489_Conditional> _23535_c) {
	jule::Bool _23617_writed = false;;
	{
		auto expr = &(_23535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c0686a8:;
		if (it != expr_end) {
			jule::Ptr<_215debd29_If> _23721_elif = *it;
			{
				if ((_23721_elif == nullptr)) {
					goto _iter_next_20c0686a8;
				};
				if (_23617_writed) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23617_writed=true;
				_1ea6622d0_ifCase(_self_, _23721_elif);
			}
			_iter_next_20c0686a8:;
			++it;
			goto _iter_begin_20c0686a8;
		}
		_iter_end_20c0686a8:;
	};
	if ((_23535_c.get()._field_Default != nullptr)) {
		if (_23617_writed) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1ea666647_scope(_self_, _23535_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1ea6627ca_infIter(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dec775_InfIter> _25531_it) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea666647_scope(_self_, _25531_it.get()._field_Scope);
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea680155_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67edad_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ea662a50_whileIter(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215decbe8_WhileIter> _27233_it) {
	if (((_27233_it.get()._field_Expr != nullptr) && (_27233_it.get()._field_Next == nullptr))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27233_it.get()._field_Expr != nullptr)) {
			_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27233_it.get()._field_Next != nullptr)) {
			_1ea66614c_st(_self_, _27233_it.get()._field_Next);
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea666647_scope(_self_, _27233_it.get()._field_Scope);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea680155_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67edad_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1ea662cc5_rangeIter(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215ded5cd_RangeIter> _30533_it) {
	{
		
		if ((_215ebd714_Slc(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c07d49d:;
			{
				_1ea661cd5_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_215ebd4a0_Arr(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c07d16d:;
			{
				_1ea661cd5_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_215ebe1b5_Map(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c07d1d4:;
			{
				_1ea66205a_rangeHashmapIter(_self_, &(_30533_it));
			}
		}
		else {
			_case_begin_20c07d107:;
			{
				_1ea661cd5_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		_match_end_20c07d03b:;
	};
}



inline void _1ea66304a_cont(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215ded9c9_ContSt> _31824_c) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea680155_iterNext(_31824_c.get()._field_It));
}



inline void _1ea6632c0_label(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dee16c_Label> _32325_l) {
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea6803ec_label(&(_32325_l.get()._field_Ident)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1ea663545_gotoSt(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dee458_GotoSt> _32826_gt) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea6803ec_label(&(_32826_gt.get()._field_Ident)));
}



inline void _1ea6637ba_postfix(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dee810_Postfix> _33331_p) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33331_p.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1ea6a5037_write(_self_.get()._field_oc, _33331_p.get()._field_Op);
}



inline void _1ea663a40_assign(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215deec83_Assign> _34030_a) {
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_L.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, _34030_a.get()._field_Op.get()._field_Kind);
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_R.get()._field_Model);
}



inline void _1ea663cb5_mapLookupAssign(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e0013a_MultiAssign>* _34640_a) {
	jule::Ptr<_215dc892c_IndexingExprModel> _34717_iem = (*(_34640_a)).get()._field_R.cast_ptr<_215dc892c_IndexingExprModel>(&__jule_any_type45);;
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Expr.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Index.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34640_a)).get()._field_L[0LL] != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[0LL].get()._field_Model);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34640_a)).get()._field_L[1LL] != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[1LL].get()._field_Model);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea66403a_multiAssignTup(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e0013a_MultiAssign>* _36939_a) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	jule::Ptr<_215dca27a_TupleExprModel> _37317_tup = (*(_36939_a)).get()._field_R.cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_37317_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c08d876:;
		if (it != expr_end) {
			jule::I64 _37514_i = it - expr->begin();
			jule::Ptr<_215e8e471_Data> _37521_r = *it;
			{
				_1ea6ecada_indent(_self_.get()._field_oc);
				jule::Ptr<_215e8e471_Data> _37721_l = (*(_36939_a)).get()._field_L[_37514_i];;
				if ((_37721_l != nullptr)) {
					{
						auto &_match_expr{ _37721_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_20c09123b:;
							{
								jule::Ptr<_215e41aa5_Var> _38129_v = _37721_l.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
								if ((_38129_v.get()._field_Reference && (!(_215e41e6d_IsInitialized(_38129_v.ptr()))))) {
									_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e86e_var(_38129_v));
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36939_a)).get()._field_L[_37514_i]=nullptr;
									goto _iter_next_20c08d876;
								};
							}
						}
						_match_end_20c0911d6:;
					};
					_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37721_l.get()._field_Kind));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1ea6a5037_write(_self_.get()._field_oc, static__1ea67cd78_toOut(&(_1ea66093d_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37514_i))));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20c08d876:;
			++it;
			_37514_i++;
			goto _iter_begin_20c08d876;
		}
		_iter_end_20c08d876:;
	};
	{
		auto expr = &((*(_36939_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c095be1:;
		if (it != expr_end) {
			jule::I64 _40214_i = it - expr->begin();
			jule::Ptr<_215e8e471_Data> _40221_l = *it;
			{
				if ((_40221_l == nullptr)) {
					goto _iter_next_20c095be1;
				};
				_1ea6ecada_indent(_self_.get()._field_oc);
				_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40221_l.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ea6a5037_write(_self_.get()._field_oc, static__1ea67cd78_toOut(&(_1ea66093d_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40214_i))));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20c095be1:;
			++it;
			_40214_i++;
			goto _iter_begin_20c095be1;
		}
		_iter_end_20c095be1:;
	};
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ea6642b0_multiAssignFn(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e0013a_MultiAssign>* _41838_a) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	jule::Ptr<_215dc8553_FnCallExprModel> _42317_f = (*(_41838_a)).get()._field_R.cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34);;
	_1ea734528_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42317_f.get()._field_Func.get()._field_Result));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41838_a)).get()._field_R);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41838_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c09c0e3:;
		if (it != expr_end) {
			jule::I64 _42914_i = it - expr->begin();
			jule::Ptr<_215e8e471_Data> _42921_l = *it;
			{
				if ((_42921_l != nullptr)) {
					_1ea6ecada_indent(_self_.get()._field_oc);
					_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42921_l.get()._field_Model);
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_42914_i));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_20c09c0e3:;
			++it;
			_42914_i++;
			goto _iter_begin_20c09c0e3;
		}
		_iter_end_20c09c0e3:;
	};
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ea664535_multiAssign(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e0013a_MultiAssign> _44435_a) {
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_20c0a0866:;
			{
				_1ea663cb5_mapLookupAssign(_self_, &(_44435_a));
				return;;
			}
		}
		_match_end_20c0a0657:;
	};
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_20c0a058b:;
			{
				_1ea66403a_multiAssignTup(_self_, &(_44435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20c0a16d0:;
			{
				_1ea6642b0_multiAssignFn(_self_, &(_44435_a));
			}
		}
		else {
			_case_begin_20c0a0beb:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:458:13"));;
			}
		}
		_match_end_20c0a1306:;
	};
}



inline jule::Fn<void(void)> _1ea664843_matchExpr(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e00679_Match> _46233_m) {
	if ((!(_215e8ed34_IsConst(_46233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_2147054e1_IsBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_214704303_ReadBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1ea664b62_case(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e00679_Match> _47228_m, jule::Ptr<_215e011c4_Case> _47243_c) {
	if (((_47243_c.get()._field_Exprs.len() != 0LL) && (!(_215e00b85_IsGenericTypeMatch(_47228_m.ptr()))))) {
		if (((_47228_m.get()._field_Cases.len() > 0LL) && (_47228_m.get()._field_Cases[0LL] == _47243_c))) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47243_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c0a6b47:;
			if (it != expr_end) {
				jule::I64 _47918_i = it - expr->begin();
				jule::Ptr<_215e8e471_Data> _47925_expr = *it;
				{
					{
						
						if ((!(_47228_m.get()._field_TypeMatch))) {
							_case_begin_20c0acee4:;
							{
								jule::Fn<void(void)> _48225_caseExpr = _1ea664843_matchExpr(_self_, _47228_m);;
								if (_215e90142_GoodOperand(_47228_m.get()._field_Expr.ptr(), &(_47925_expr))) {
									if ((_48225_caseExpr != nullptr)) {
										_48225_caseExpr();
										_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
								} else {
									_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
									if ((_48225_caseExpr != nullptr)) {
										_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_20c0a7d79:;
							{
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_215eba403_TypeKind> _49829_tk = _47925_expr.get()._field_Model.cast_ptr<_215eba403_TypeKind>(&__jule_any_type90);;
								if ((_215ebde51_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1ea669d98_boolean(_self_.get()._field_oc.get()._field_ec, (_215ebc9ee_Sptr(_47925_expr.get()._field_Kind.ptr()) != nullptr));
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(static_cast<jule::I64>(_1ea6853be_findTypeOffset(_self_.get()._field_oc.ptr(), _215ebde51_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()), _47925_expr.get()._field_Kind))));
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50629_j = _1ea6a9635_pushAnyType(_self_.get()._field_oc, &(_49829_tk));;
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_50629_j));
								};
							}
						}
						_match_end_20c0a7cad:;
					};
					if (((_47243_c.get()._field_Exprs.len() - _47918_i) > 1LL)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_20c0a6b47:;
				++it;
				_47918_i++;
				goto _iter_begin_20c0a6b47;
			}
			_iter_end_20c0a6b47:;
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47228_m.get()._field_Default == _47243_c) && (_47228_m.get()._field_Cases.len() != 0LL))) {
		_1ea6ecada_indent(_self_.get()._field_oc);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea68093b_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47243_c))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1ea6ecada_indent(_self_.get()._field_oc);
		_1ea666647_scope(_self_, _47243_c.get()._field_Scope);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ea664dd7_matchSt(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e00679_Match> _54031_m) {
	if (((_54031_m.get()._field_Cases.len() == 0LL) && (_54031_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _54513_genericTypeMatch = _215e00b85_IsGenericTypeMatch(_54031_m.ptr());;
	if ((_54513_genericTypeMatch && ((_54031_m.get()._field_Default == nullptr) || (_54031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	if (((!(_54513_genericTypeMatch)) && (!(_215e8ed34_IsConst(_54031_m.get()._field_Expr.ptr()))))) {
		if ((_216126d9a_Copy && _1ea666c1e_isCopyOptimizable(&(_54031_m.get()._field_Expr)))) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54031_m.get()._field_Expr.get()._field_Model);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1ea6ecada_indent(_self_.get()._field_oc);
	};
	if ((_54031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54031_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c0bba80:;
			if (it != expr_end) {
				jule::Ptr<_215e011c4_Case> _56925_c = *it;
				{
					if ((_56925_c == nullptr)) {
						goto _iter_next_20c0bba80;
					};
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1ea6ecada_indent(_self_.get()._field_oc);
					_1ea664b62_case(_self_, _54031_m, _56925_c);
				}
				_iter_next_20c0bba80:;
				++it;
				goto _iter_begin_20c0bba80;
			}
			_iter_end_20c0bba80:;
		};
	};
	if ((_54031_m.get()._field_Default != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1ea664b62_case(_self_, _54031_m, _54031_m.get()._field_Default);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea680694_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54031_m))));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ea66515c_fallSt(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e01779_FallSt> _59626_f) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea68093b_caseBegin(_59626_f.get()._field_DestCase));
}



inline void _1ea6653d2_breakSt(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dedd81_BreakSt> _60127_b) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60127_b.get()._field_It != 0LLU)) {
		_1ea6a5037_write(_self_.get()._field_oc, static__1ea67edad_iterEnd(_60127_b.get()._field_It));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, static__1ea680694_matchEnd(_60127_b.get()._field_Mtch));
	};
}



inline void _1ea665657_setResult(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e01aed_RetSt> _61033_r) {
	if ((_61033_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61033_r.get()._field_Expr);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1ea6ecada_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_215e8e471_Data>> _61817_datas = _61033_r.get()._field_Expr.cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_61817_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c0c6a24:;
		if (it != expr_end) {
			jule::I64 _61913_i = it - expr->begin();
			jule::Ptr<_215e8e471_Data> _61916_data = *it;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_61913_i));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61916_data.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1ea6ecada_indent(_self_.get()._field_oc);
			}
			_iter_next_20c0c6a24:;
			++it;
			_61913_i++;
			goto _iter_begin_20c0c6a24;
		}
		_iter_end_20c0c6a24:;
	};
}



inline void _1ea6658cc_retSt(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e01aed_RetSt> _62929_r) {
	if (_215d7ce64_IsVoid(_62929_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62929_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62929_r.get()._field_Func.get()._field_Result));
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62929_r.get()._field_Expr);
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62929_r.get()._field_Expr);
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62929_r.get()._field_Expr != nullptr)) {
		_1ea665657_setResult(_self_, _62929_r);
	};
	if (_62929_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1ea734528_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62929_r.get()._field_Func.get()._field_Result));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1ea665b52_var(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215e41aa5_Var> _66527_v) {
	if ((!(_66527_v.get()._field_Constant))) {
		_1ea725dcc_var(_self_.get()._field_oc, _66527_v);
	};
}



inline void _1ea665dc7_strAppend(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_2161169e4_StrAppendExprModel> _67133_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67133_m.get()._field_Str);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67133_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20c0d29a8:;
			{
				jule::Ptr<_21470339b_Const> _67717_c = _67133_m.get()._field_Expr.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
				jule::Slice<jule::U8> _67817_bytes = static_cast<jule::Slice<jule::U8>>(_214704435_ReadStr(_67717_c.ptr()));;
				_1ea6a5037_write(_self_.get()._field_oc, _1ea676cd9_cstrLit(_67817_bytes));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edc04_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67817_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_20c0d3bb8:;
			{
				_1ea66c4a5_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67133_m.get()._field_Expr);
			}
		}
		_match_end_20c0d3b52:;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea66614c_st(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Any _68926_st) {
	if ((_68926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68926_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_20c0d779e:;
			{
				_1ea666647_scope(_self_, _68926_st.cast_ptr<_215deb92d_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c0d743b:;
			{
				_1ea665b52_var(_self_, _68926_st.cast_ptr<_215e41aa5_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_20c0d7d54:;
			{
				_1ea675d60_model(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_215e8e471_Data>(&__jule_any_type23).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_20c0d7dba:;
			{
				_1ea662555_conditional(_self_, _68926_st.cast_ptr<_215dec489_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_20c0d7e31:;
			{
				_1ea6627ca_infIter(_self_, _68926_st.cast_ptr<_215dec775_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_20c0d7e97:;
			{
				_1ea662a50_whileIter(_self_, _68926_st.cast_ptr<_215decbe8_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_20c0d800d:;
			{
				_1ea662cc5_rangeIter(_self_, _68926_st.cast_ptr<_215ded5cd_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_20c0d8074:;
			{
				_1ea66304a_cont(_self_, _68926_st.cast_ptr<_215ded9c9_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_20c0d80eb:;
			{
				_1ea6632c0_label(_self_, _68926_st.cast_ptr<_215dee16c_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_20c0d8173:;
			{
				_1ea663545_gotoSt(_self_, _68926_st.cast_ptr<_215dee458_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_20c0d81ea:;
			{
				_1ea6637ba_postfix(_self_, _68926_st.cast_ptr<_215dee810_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_20c0d8272:;
			{
				_1ea663a40_assign(_self_, _68926_st.cast_ptr<_215deec83_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_20c0d82e9:;
			{
				_1ea664535_multiAssign(_self_, _68926_st.cast_ptr<_215e0013a_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_20c0d8371:;
			{
				_1ea664dd7_matchSt(_self_, _68926_st.cast_ptr<_215e00679_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_20c0d83e8:;
			{
				_1ea66515c_fallSt(_self_, _68926_st.cast_ptr<_215e01779_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_20c0d8470:;
			{
				_1ea6653d2_breakSt(_self_, _68926_st.cast_ptr<_215dedd81_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_20c0d84e7:;
			{
				_1ea6658cc_retSt(_self_, _68926_st.cast_ptr<_215e01aed_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_20c0d856e:;
			{
				_1ea673a72_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_2161174ea_PushToSliceExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_20c0d85e6:;
			{
				_1ea6755e0_mutSlicing(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_216117a39_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_20c0d866d:;
			{
				_1ea675865_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _68926_st.cast_ptr<_216117e13_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_20c0d86e5:;
			{
				_1ea665dc7_strAppend(_self_, _68926_st.cast_ptr<_2161169e4_StrAppendExprModel>(&__jule_any_type128));
			}
		}
		else {
			_case_begin_20c0d721b:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_20c0d71b6:;
	};
}



inline void _1ea6663c2_scopeStmts(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215deb92d_Scope>* _74135_s) {
	{
		auto expr = &((*(_74135_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c0e3931:;
		if (it != expr_end) {
			jule::Any _74221_st = *it;
			{
				_1ea6ecada_indent(_self_.get()._field_oc);
				_1ea66614c_st(_self_, _74221_st);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_20c0e3931:;
			++it;
			goto _iter_begin_20c0e3931;
		}
		_iter_end_20c0e3931:;
	};
}



inline void _1ea666647_scope(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215deb92d_Scope> _75029_s) {
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	if (_75029_s.get()._field_Deferred) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ea6663c2_scopeStmts(_self_, &(_75029_s));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75029_s.get()._field_Deferred) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1ea6668bc_funcScope(jule::Ptr<_1ea661059_scopeCoder> _self_, jule::Ptr<_215dcea10_FnIns> _76633_f) {
	if ((_76633_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	if ((!(_215d7ce64_IsVoid(_76633_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_215ec4dbe_Tuple> _77321_tup = _215ebe429_Tup(_76633_f.get()._field_Result.ptr());;
		if ((_77321_tup != nullptr)) {
			_1ea6ecada_indent(_self_.get()._field_oc);
			_1ea733dda_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77321_tup);
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77321_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c0e9a14:;
				if (it != expr_end) {
					jule::I64 _77822_i = it - expr->begin();
					jule::Ptr<_215eba403_TypeKind> _77829_t = *it;
					{
						if (_1ea736816_shouldInitialized(&(_77829_t))) {
							_1ea6ecada_indent(_self_.get()._field_oc);
							_1ea6a5037_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_77822_i));
							_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1ea6760d5_initExpr(_self_.get()._field_oc.get()._field_ec, _77829_t);
							_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_20c0e9a14:;
					++it;
					_77822_i++;
					goto _iter_begin_20c0e9a14;
				}
				_iter_end_20c0e9a14:;
			};
		} else if ((_76633_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1ea6ecada_indent(_self_.get()._field_oc);
			_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76633_f.get()._field_Result));
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1ea736816_shouldInitialized(&(_76633_f.get()._field_Result))) {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ea6760d5_initExpr(_self_.get()._field_oc.get()._field_ec, _76633_f.get()._field_Result);
			};
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1ea6663c2_scopeStmts(_self_, &(_76633_f.get()._field_Scope));
	if ((_76633_f.get()._field_Decl.get()._field_Exceptional && _215d7ce64_IsVoid(_76633_f.get()._field_Decl.ptr()))) {
		_1ea6ecada_indent(_self_.get()._field_oc);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1ea661059_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea6694a2_exprCoder> static__1ea66989d_new(jule::Ptr<_1ea723407_ObjectCoder>* _10824_oc) {
	return jule::new_ptr<_1ea6694a2_exprCoder>(_1ea6694a2_exprCoder{._field_oc=(*(_10824_oc))});;
}



inline void _1ea669b23_string(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_21470339b_Const>* _11427_c) {
	jule::Str _11513_content = _214704435_ReadStr((*(_11427_c)).ptr());;
	if ((_11513_content.len() == 0LL)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12013_bytes = static_cast<jule::Slice<jule::U8>>(_11513_content);;
	jule::Str _12113_len = _2146edc04_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12013_bytes.len())), 10LL);;
	jule::Str _12213_lit = _1ea676cd9_cstrLit(_12013_bytes);;
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea6a5037_write(_self_.get()._field_oc, _12213_lit);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ea6a5037_write(_self_.get()._field_oc, _12113_len);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea669d98_boolean(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Bool _13127_b) {
	if (_13127_b) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1ea66a074_nilLit(jule::Ptr<_1ea6694a2_exprCoder> _self_) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1ea66a382_ftoaSpecialCases(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::F64* _14337_x) {
	{
		
		if (_2146bba29_IsNaN((*(_14337_x)))) {
			_case_begin_20c11d461:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_2146bbc8d_IsInf((*(_14337_x)), 1LL)) {
			_case_begin_20c11cc8a:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_2146bbc8d_IsInf((*(_14337_x)), -1LL)) {
			_case_begin_20c11cd01:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_20c11cc24:;
			{
				return false;;
			}
		}
		_match_end_20c11cb58:;
	};
	return true;;
}



inline void _1ea66a607_float32(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_21470339b_Const>* _15728_c) {
	jule::F64 _15813_x = _21470490d_AsF64((*(_15728_c)).ptr());;
	if (_1ea66a382_ftoaSpecialCases(_self_, &(_15813_x))) {
		return;;
	};
	{
		
		if ((_15813_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_20c120c5a:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15813_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_20c12096e:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_20c120908:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea6770e7_ftoa(_15813_x, 32LL));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_20c1207d7:;
	};
}



inline void _1ea66a87c_float64(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_21470339b_Const>* _17628_c) {
	jule::F64 _17713_x = _21470490d_AsF64((*(_17628_c)).ptr());;
	if (_1ea66a382_ftoaSpecialCases(_self_, &(_17713_x))) {
		return;;
	};
	{
		
		if ((_17713_x == jule::MAX_F64)) {
			_case_begin_20c123b5e:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17713_x == jule::MIN_F64)) {
			_case_begin_20c124346:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_20c12380c:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea6770e7_ftoa(_17713_x, 64LL));
			}
		}
		_match_end_20c1236db:;
	};
}



inline void _1ea66ab02_constant(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_21470339b_Const> _19432_c) {
	{
		
		if (_214705623_IsStr(_19432_c.ptr())) {
			_case_begin_20c125897:;
			{
				_1ea669b23_string(_self_, &(_19432_c));
			}
		}
		else if (_2147054e1_IsBool(_19432_c.ptr())) {
			_case_begin_20c12590d:;
			{
				_1ea669d98_boolean(_self_, _214704303_ReadBool(_19432_c.ptr()));
			}
		}
		else if (_214705755_IsF64(_19432_c.ptr())) {
			_case_begin_20c125974:;
			{
				{
					
					if (_19432_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_20c127c51:;
						{
							_1ea66a607_float32(_self_, &(_19432_c));
						}
					}
					else {
						_case_begin_20c1278aa:;
						{
							_1ea66a87c_float64(_self_, &(_19432_c));
						}
					}
					_match_end_20c1277de:;
				};
			}
		}
		else if (_21470527c_IsI64(_19432_c.ptr())) {
			_case_begin_20c1259da:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea67738e_itoa(static_cast<jule::I64>(_21470408e_ReadI64(_19432_c.ptr()))));
			}
		}
		else if (_2147053ae_IsU64(_19432_c.ptr())) {
			_case_begin_20c126315:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea677636_utoa(static_cast<jule::U64>(_2147041c1_ReadU64(_19432_c.ptr()))));
			}
		}
		else if (_214705887_IsNil(_19432_c.ptr())) {
			_case_begin_20c12637b:;
			{
				_1ea66a074_nilLit(_self_);
			}
		}
		else {
			_case_begin_20c125831:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_20c125765:;
	};
}



inline void _1ea66aeba_divByZeroBinary(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_22e0aa1de_Token>* _21836_op, jule::Ptr<_215dc76d9_OperandExprModel>* _21853_l, jule::Ptr<_215dc76d9_OperandExprModel>* _21880_r) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21836_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_20c12ae41:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_20c12aeb8:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_20c12adca:;
	};
	if ((!(_22bc32d47_Production))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ea723a01_locInfo(_self_.get()._field_oc, _21836_op);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1ea66c4a5_possibleRefExpr(_self_, (*(_21853_l)).get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ea66c4a5_possibleRefExpr(_self_, (*(_21880_r)).get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea66b240_unsafeBinary(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc78c6_BinopExprModel> _24036_m) {
	if ((_24036_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24036_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_1ea678280_isAny(&(_24036_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_215ebb338_IsNil(_24036_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1ea678280_isAny(&(_24036_m.get()._field_Right.get()._field_Kind)))))) {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24036_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _25025_i = _1ea6a9635_pushAnyType(_self_.get()._field_oc, &(_24036_m.get()._field_Right.get()._field_Kind));;
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_25025_i));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1ea66c4a5_possibleRefExpr(_self_, _24036_m.get()._field_Left.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ea66c4a5_possibleRefExpr(_self_, _24036_m.get()._field_Right.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea66c4a5_possibleRefExpr(_self_, _24036_m.get()._field_Left.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ea6a5037_write(_self_.get()._field_oc, _24036_m.get()._field_Op.get()._field_Kind);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ea66c4a5_possibleRefExpr(_self_, _24036_m.get()._field_Right.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea66b4b5_binary(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc78c6_BinopExprModel> _27130_m) {
	{
		auto &_match_expr{ _27130_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_20c137645:;
			{
				if ((_215ebdbdc_Struct(_27130_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1ea66aeba_divByZeroBinary(_self_, &(_27130_m.get()._field_Op), &(_27130_m.get()._field_Left), &(_27130_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_20c1375bd:;
	};
	_1ea66b240_unsafeBinary(_self_, _27130_m);
}



inline void _1ea66b73a_var(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215e41aa5_Var> _28327_m) {
	if (_28327_m.get()._field_CppLinked) {
		jule::Ptr<_215d77348_Directive> _28517_d = _1ea7361d9_findDirective(&(_28327_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28517_d != nullptr)) {
			_1ea6a5037_write(_self_.get()._field_oc, _1ea7282a8_concatAllParts(_28517_d.get()._field_Args));
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e86e_var(_28327_m));
}



inline void _1ea66b9b0_structureIns(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc71ab_StructIns> _29436_m) {
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72d335_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29436_m));
}



inline void _1ea66bc35_unary(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc7ab3_UnaryExprModel> _29829_m) {
	{
		auto &_match_expr{ _29829_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_20c13c24e:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1ea66c4a5_possibleRefExpr(_self_, _29829_m.get()._field_Expr.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_20c13c2c6:;
			{
				if ((_22bc32d47_Production || (_215ebc9ee_Sptr(_29829_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_20c13c1b6;
				};
				_1ea66c4a5_possibleRefExpr(_self_, _29829_m.get()._field_Expr.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1ea723a01_locInfo(_self_.get()._field_oc, &(_29829_m.get()._field_Op));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_20c13c1b6:;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea6a5037_write(_self_.get()._field_oc, _29829_m.get()._field_Op.get()._field_Kind);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea66c4a5_possibleRefExpr(_self_, _29829_m.get()._field_Expr.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1ea66beaa_structureLit(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc7e8c_StructLitExprModel> _32236_m) {
	if (_32236_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e330_structureIns(&(_32236_m.get()._field_Strct)));
	if (_32236_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32236_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32236_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c1445ca:;
			if (it != expr_end) {
				jule::I64 _33517_i = it - expr->begin();
				jule::Ptr<_215dc6ebe_FieldIns> _33520_f = *it;
				{
					{
						auto expr = &(_32236_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20c145114:;
						if (it != expr_end) {
							jule::Ptr<_215dc7ca0_StructArgExprModel> _33629_arg = *it;
							{
								if ((_33629_arg.get()._field_Field == _33520_f)) {
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e5c7_field(&(_33629_arg.get()._field_Field.get()._field_Decl)));
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1ea66c4a5_possibleRefExpr(_self_, _33629_arg.get()._field_Expr);
									if (((_32236_m.get()._field_Strct.get()._field_Fields.len() - _33517_i) > 1LL)) {
										_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_20c1445ca;
								};
							}
							_iter_next_20c145114:;
							++it;
							goto _iter_begin_20c145114;
						}
						_iter_end_20c145114:;
					};
				}
				_iter_next_20c1445ca:;
				++it;
				_33517_i++;
				goto _iter_begin_20c1445ca;
			}
			_iter_end_20c1445ca:;
		};
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ea66c230_allocStructure(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8179_AllocStructLitExprModel> _35338_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e330_structureIns(&(_35338_m.get()._field_Lit.get()._field_Strct)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1ea66beaa_structureLit(_self_, _35338_m.get()._field_Lit);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea66c4a5_possibleRefExpr(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Any _36135_expr) {
	{
		auto &_match_expr{ _36135_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c14a8bc:;
			{
				jule::Ptr<_215e41aa5_Var> _36417_v = _36135_expr.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
				if (_36417_v.get()._field_Reference) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1ea675d60_model(_self_, _36135_expr);
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_20c14a7bd:;
	};
	_1ea675d60_model(_self_, _36135_expr);
}



inline void _1ea66c72a_casting(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8366_CastingExprModel> _38131_m) {
	{
		
		if (_1ea678280_isAny(&(_38131_m.get()._field_Kind))) {
			_case_begin_20c14cb44:;
			{
				if (_215ebb338_IsNil(_38131_m.get()._field_ExprKind.ptr())) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_215ebd23b_TypeEnum(_38131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
					return;;
				};
				jule::I64 _39217_i = _1ea6a9635_pushAnyType(_self_.get()._field_oc, &(_38131_m.get()._field_ExprKind));;
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _38131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_20c1514e9:;
						{
							jule::Ptr<_215ec0150_Prim> _39621_prim = _215ebc78a_Prim(_38131_m.get()._field_ExprKind.ptr());;
							if (((_39621_prim != nullptr) && _214702dc3_IsInt(_39621_prim.get()._field_Kind))) {
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1ea6a5037_write(_self_.get()._field_oc, _1ea72a563_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _39621_prim));
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_20c1523c9;
							};
							goto _case_begin_20c15242e;
						}
					}
					else {
						_case_begin_20c15242e:;
						{
							_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
						}
					}
					_match_end_20c1523c9:;
				};
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_39217_i));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if (_1ea678280_isAny(&(_38131_m.get()._field_ExprKind))) {
			_case_begin_20c14cbaa:;
			{
				_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_215ebc9ee_Sptr(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _215ebc9ee_Sptr(_38131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				};
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_22bc32d47_Production))) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ea723a01_locInfo(_self_.get()._field_oc, &(_38131_m.get()._field_Token));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(static_cast<jule::I64>(_1ea6a9635_pushAnyType(_self_.get()._field_oc, &(_38131_m.get()._field_Kind)))));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_215ebcc63_Ptr(_38131_m.get()._field_ExprKind.ptr()) != nullptr) || (_215ebcc63_Ptr(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c14cc21:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if ((_215ebde51_Trait(_38131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_20c14cc87:;
			{
				_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_215ebc9ee_Sptr(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _215ebc9ee_Sptr(_38131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				};
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_22bc32d47_Production))) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ea723a01_locInfo(_self_.get()._field_oc, &(_38131_m.get()._field_Token));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(static_cast<jule::I64>(_1ea6853be_findTypeOffset(_self_.get()._field_oc.ptr(), _215ebde51_Trait(_38131_m.get()._field_ExprKind.ptr()), _38131_m.get()._field_Kind))));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_215ebde51_Trait(_38131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c14eb79:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(static_cast<jule::I64>(_1ea6853be_findTypeOffset(_self_.get()._field_oc.ptr(), _215ebde51_Trait(_38131_m.get()._field_Kind.ptr()), _38131_m.get()._field_ExprKind))));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_20c14cacd:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38131_m.get()._field_Kind));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1ea66c4a5_possibleRefExpr(_self_, _38131_m.get()._field_Expr);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_20c14ca12:;
	};
}



inline void _1ea66c9a0_models(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Slice<jule::Any> _47230_args) {
	if ((_47230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_47230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c167e5b:;
		if (it != expr_end) {
			jule::I64 _47614_i = it - expr->begin();
			jule::Any _47621_a = *it;
			{
				_1ea66c4a5_possibleRefExpr(_self_, _47621_a);
				if (((_47230_args.len() - _47614_i) > 1LL)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_20c167e5b:;
			++it;
			_47614_i++;
			goto _iter_begin_20c167e5b;
		}
		_iter_end_20c167e5b:;
	};
}



inline void _1ea66cc25_args(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8553_FnCallExprModel>* _48429_m) {
	jule::I64 _48517_j = 0LL;;
	if ((((*(_48429_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_48429_m)).get()._field_Func.get()._field_Decl.get()._field_Statically)))) {
		(_48517_j)++;
	};
	{
		auto expr = &((*(_48429_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c16ac3e:;
		if (it != expr_end) {
			jule::I64 _48913_i = it - expr->begin();
			jule::Any _48916_arg = *it;
			{
				jule::Ptr<_215dcdb41_ParamIns> _49017_p = (*(_48429_m)).get()._field_Func.get()._field_Params[_48517_j];;
				if (((_49017_p.get()._field_Decl != nullptr) && _49017_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _48916_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_20c16c504:;
							{
								jule::Ptr<_215e41aa5_Var> _49425_v = _48916_arg.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
								if (_49425_v.get()._field_Reference) {
									_1ea675d60_model(_self_, _48916_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_20c16c416:;
					};
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1ea675d60_model(_self_, _48916_arg);
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1ea66c4a5_possibleRefExpr(_self_, _48916_arg);
				_julec_label_end:;
				if ((((*(_48429_m)).get()._field_Args.len() - _48913_i) > 1LL)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_48517_j)++;
			}
			_iter_next_20c16ac3e:;
			++it;
			_48913_i++;
			goto _iter_begin_20c16ac3e;
		}
		_iter_end_20c16ac3e:;
	};
}



inline void _1ea66ce9a_modelForCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Any _51436_expr) {
	{
		auto &_match_expr{ _51436_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_20c171739:;
			{
				_1ea671322_funcIns(_self_, _51436_expr.cast_ptr<_215dcea10_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20c1717b1:;
			{
				jule::Ptr<_215dc97da_StructSubIdentExprModel> _52021_ssie = _51436_expr.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_52021_ssie.get()._field_Method != nullptr)) {
					_1ea671322_funcIns(_self_, _52021_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_20c171629:;
	};
	_1ea66c4a5_possibleRefExpr(_self_, _51436_expr);
}



inline void _1ea66d220_pushCallInf(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8553_FnCallExprModel>* _52932_m) {
	if ((_22bc32d47_Production || ((!((*(_52932_m)).get()._field_Func.get()._field_Anon)) && (!(_1ea677ca7_isBuiltinCallHasDebuginf(_52932_m)))))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_52932_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_52932_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_20c17495c:;
				{
					if ((*(_52932_m)).get()._field_Expr.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_20c174b38;
				}
			}
			else {
				_case_begin_20c174b38:;
				{
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_20c174a06:;
		};
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1ea723a01_locInfo(_self_.get()._field_oc, &((*(_52932_m)).get()._field_Token));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_52932_m)).get()._field_Args.len() != 0LL)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1ea66d52d_isWrapped(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8553_FnCallExprModel>* _55434_m) {
	if ((((!(_215dd0d96_IsBuiltin((*(_55434_m)).get()._field_Func.ptr()))) && ((*(_55434_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _215d8baee_IsSelf((*(_55434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_55434_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_20c178587:;
				{
					jule::Ptr<_215dc97da_StructSubIdentExprModel> _55825_ssie = (*(_55434_m)).get()._field_Expr.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_215d8d46e_IsRef((*(_55434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_215ebc9ee_Sptr(_55825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_20c178d5c:;
							{
								goto _match_end_20c179401;
							}
						}
						else {
							_case_begin_20c179467:;
							{
								if ((_215ebdbdc_Struct(_55825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_55825_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1ea6a5037_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1ea675d60_model(_self_, _55825_ssie.get()._field_Expr.get()._field_Model);
										_1ea6a5037_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_20c179401:;
					};
				}
			}
			_match_end_20c178378:;
		};
	};
	return false;;
}



inline void _1ea66d7a3_pureFuncCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8553_FnCallExprModel>* _57837_m) {
	jule::Bool _57913_wrapped = _1ea66d52d_isWrapped(_self_, _57837_m);;
	_1ea66ce9a_modelForCall(_self_, (*(_57837_m)).get()._field_Expr);
	if ((!(_215dd0d96_IsBuiltin((*(_57837_m)).get()._field_Func.ptr())))) {
		if (((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_57837_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1ea73656e_hasDirective(&((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_57837_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20c17ed52:;
					if (it != expr_end) {
						jule::I64 _58526_i = it - expr->begin();
						jule::Ptr<_215eb8bc6_InsGeneric> _58533_g = *it;
						{
							_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _58533_g.get()._field_Kind));
							if ((((*(_57837_m)).get()._field_Func.get()._field_Generics.len() - _58526_i) > 1LL)) {
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_20c17ed52:;
						++it;
						_58526_i++;
						goto _iter_begin_20c17ed52;
					}
					_iter_end_20c17ed52:;
				};
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1ea66d220_pushCallInf(_self_, _57837_m);
	jule::Bool _59617_locinfo = false;;
	if ((((!(_215dd0d96_IsBuiltin((*(_57837_m)).get()._field_Func.ptr()))) && ((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _215d8baee_IsSelf((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_57837_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_20c1837b2:;
				{
					jule::Ptr<_215dc97da_StructSubIdentExprModel> _60025_ssie = (*(_57837_m)).get()._field_Expr.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_215d8d46e_IsRef((*(_57837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_20c187365:;
							{
								_1ea66c4a5_possibleRefExpr(_self_, _60025_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_215ebc9ee_Sptr(_60025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_20c1873cb:;
							{
								_1ea66c4a5_possibleRefExpr(_self_, _60025_ssie.get()._field_Expr.get()._field_Model);
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_22bc32d47_Production))) {
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1ea723a01_locInfo(_self_.get()._field_oc, &((*(_57837_m)).get()._field_Token));
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_20c18472a:;
							{
								if ((_215ebdbdc_Struct(_60025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _60025_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_20c184120:;
											{
												jule::Ptr<_215e41aa5_Var> _61733_v = _60025_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
												if (_61733_v.get()._field_Reference) {
													goto _match_end_20c185297;
												};
												goto _case_begin_20c1852ec;
											}
										}
										else {
											_case_begin_20c1852ec:;
											{
												_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_20c185297:;
									};
								};
								if (_57913_wrapped) {
									_1ea6a5037_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1ea675d60_model(_self_, _60025_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_20c1846b4:;
					};
					if (((*(_57837_m)).get()._field_Args.len() > 0LL)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_20c183828:;
				{
					_1ea66c4a5_possibleRefExpr(_self_, (*(_57837_m)).get()._field_Expr.cast_ptr<_215dc93bc_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_22bc32d47_Production))) {
						_59617_locinfo=true;
					};
					if (((*(_57837_m)).get()._field_Args.len() > 0LL)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_20c1835a3:;
		};
	};
	_1ea66cc25_args(_self_, _57837_m);
	if (_59617_locinfo) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1ea723a01_locInfo(_self_.get()._field_oc, &((*(_57837_m)).get()._field_Token));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_57913_wrapped) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1ea66da28_coFuncCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8553_FnCallExprModel>* _65935_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	jule::Str _66217_head = jule::Str("std::thread([", 13);;
	if (((*(_65935_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_66217_head).append("_self_", 6);
		if (((*(_65935_m)).get()._field_Args.len() > 0LL)) {
			(_66217_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_65935_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c191b66:;
		if (it != expr_end) {
			jule::I64 _66913_i = it - expr->begin();
			jule::Any _66916_arg = *it;
			{
				if ((_66913_i > 0LL)) {
					(_66217_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _66916_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_20c193a69:;
						{
							jule::Ptr<_215e41aa5_Var> _67525_v = _66916_arg.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
							_66217_head+=static__1ea67e86e_var(_67525_v);
							goto _iter_next_20c191b66;
						}
					}
					_match_end_20c19331b:;
				};
				jule::Str _67917_name = (jule::Str("_co_arg_", 8) + _2146edd36_Itoa(_66913_i));;
				_66217_head+=_67917_name;
				_1ea6ecada_indent(_self_.get()._field_oc);
				_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_65935_m)).get()._field_Func.get()._field_Params[_66913_i].get()._field_Kind));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_65935_m)).get()._field_Func.get()._field_Params[_66913_i].get()._field_Decl.get()._field_Reference) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1ea6a5037_write(_self_.get()._field_oc, _67917_name);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1ea66c4a5_possibleRefExpr(_self_, _66916_arg);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _69117_argS = jule::Any(_67917_name, &__jule_any_type5);;
				(*(_65935_m)).get()._field_Args[_66913_i]=(*(((jule::Any*)((&(_69117_argS))))));
			}
			_iter_next_20c191b66:;
			++it;
			_66913_i++;
			goto _iter_begin_20c191b66;
		}
		_iter_end_20c191b66:;
	};
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, _66217_head);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea66d7a3_pureFuncCall(_self_, _65935_m);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1ea66dd47_writeUseExpr(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcea10_FnIns>* _70937_f, jule::Ptr<_215e8e471_Data> _70952_d) {
	if ((_215ebe429_Tup(_70952_d.get()._field_Kind.ptr()) == nullptr)) {
		_1ea66c4a5_possibleRefExpr(_self_, _70952_d.get()._field_Model);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_215dca27a_TupleExprModel> _71517_tup = _70952_d.get()._field_Model.cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88);;
	_1ea733dda_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _215ebe429_Tup((*(_70937_f)).get()._field_Result.ptr()));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_71517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c19e954:;
		if (it != expr_end) {
			jule::I64 _71813_i = it - expr->begin();
			jule::Ptr<_215e8e471_Data> _71816_data = *it;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_71813_i));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1ea66c4a5_possibleRefExpr(_self_, _71816_data.get()._field_Model);
				if (((_71517_tup.get()._field_Datas.len() - _71813_i) > 1LL)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_20c19e954:;
			++it;
			_71813_i++;
			goto _iter_begin_20c19e954;
		}
		_iter_end_20c19e954:;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1ea66e0bc_funcCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8553_FnCallExprModel> _73032_m) {
	if (_73032_m.get()._field_IsCo) {
		_1ea66da28_coFuncCall(_self_, &(_73032_m));
		return;;
	};
	if (((_215dd0d96_IsBuiltin(_73032_m.get()._field_Func.ptr()) || (!(_73032_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_73032_m.get()._field_Except != nullptr) && (_73032_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1ea66d7a3_pureFuncCall(_self_, &(_73032_m));
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1ea66d7a3_pureFuncCall(_self_, &(_73032_m));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	if ((_73032_m.get()._field_Except != nullptr)) {
		if (((_73032_m.get()._field_Func.get()._field_Result == nullptr) || (!(_73032_m.get()._field_Assigned)))) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1ea666647_scope(_self_.get()._field_oc.get()._field_sc, _73032_m.get()._field_Except);
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _75621_forwarded = _1ea6779dd_isForwarded(&(_73032_m.get()._field_Except));;
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_75621_forwarded) {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _76125_stmt = _73032_m.get()._field_Except.get()._field_Stmts[(_73032_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _76125_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_20c1a9134:;
					{
						_73032_m.get()._field_Except.get()._field_Stmts=_73032_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_73032_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1ea6e906a_addIndent(_self_.get()._field_oc);
						_1ea6663c2_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_73032_m.get()._field_Except));
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1ea6ecada_indent(_self_.get()._field_oc);
						_1ea66dd47_writeUseExpr(_self_, &(_73032_m.get()._field_Func), _76125_stmt.cast_ptr<_215e8e471_Data>(&__jule_any_type23));
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1ea6e9587_doneIndent(_self_.get()._field_oc);
						_1ea6ecada_indent(_self_.get()._field_oc);
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_20c1aa014:;
					{
						_1ea666647_scope(_self_.get()._field_oc.get()._field_sc, _73032_m.get()._field_Except);
					}
				}
				_match_end_20c1a9eae:;
			};
			if (_75621_forwarded) {
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1ea6760d5_initExpr(_self_, _73032_m.get()._field_Func.get()._field_Result);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1ea6e9587_doneIndent(_self_.get()._field_oc);
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ea723a01_locInfo(_self_.get()._field_oc, &(_73032_m.get()._field_Token));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_215d7ce64_IsVoid(_73032_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1ea6ecada_indent(_self_.get()._field_oc);
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1ea6e9587_doneIndent(_self_.get()._field_oc);
	};
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ea66e342_slice(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8740_SliceExprModel> _80129_m) {
	if ((_80129_m.get()._field_Elems.len() == 0LL)) {
		_1ea6a5037_write(_self_.get()._field_oc, _1ea72bed2_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _80129_m.get()._field_ElemKind));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72bed2_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _80129_m.get()._field_ElemKind));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1ea66c9a0_models(_self_, _80129_m.get()._field_Elems);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ea66e5b7_indexing(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc892c_IndexingExprModel> _81332_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _81332_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_22bc32d47_Production || (_215ebcc63_Ptr(_81332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_215ebe1b5_Map(_81332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1ea677ed8_isExprComesFromBind(&(_81332_m.get()._field_Expr))) {
			_case_begin_20c1b675c:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ea66c4a5_possibleRefExpr(_self_, _81332_m.get()._field_Index.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_20c1b6ecc:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1ea723a01_locInfo(_self_.get()._field_oc, &(_81332_m.get()._field_Token));
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1ea66c4a5_possibleRefExpr(_self_, _81332_m.get()._field_Index.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_20c1b6e66:;
	};
}



inline void _1ea66e83c_unsafeIndexing(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_216117165_UnsafeIndexingExprModel> _83338_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _83338_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_22bc32d47_Production || (_215ebcc63_Ptr(_83338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_215ebe1b5_Map(_83338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_20c1bace4:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1ea66c4a5_possibleRefExpr(_self_, _83338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_20c1bb5db:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1ea66c4a5_possibleRefExpr(_self_, _83338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_20c1bb575:;
	};
}



inline void _1ea66eab2_anonFunc(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8b19_AnonFnExprModel> _85032_m) {
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72e9a7_func(_self_.get()._field_oc.get()._field_tc.ptr(), _85032_m.get()._field_Func));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1ea725b68_paramsIns(_self_.get()._field_oc, &(_85032_m.get()._field_Func.get()._field_Params));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1ea72e38b_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_85032_m.get()._field_Func));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1ea6668bc_funcScope(_self_.get()._field_oc.get()._field_sc, _85032_m.get()._field_Func);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea66ed37_mapExpr(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc8ee3_MapExprModel> _86131_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _86131_m.get()._field_KeyKind));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _86131_m.get()._field_ValKind));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_86131_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_86131_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c1ca386:;
			if (it != expr_end) {
				jule::I64 _86818_i = it - expr->begin();
				jule::Ptr<_215dc8d06_KeyValPairExprModel> _86825_pair = *it;
				{
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1ea66c4a5_possibleRefExpr(_self_, _86825_pair.get()._field_Key);
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1ea66c4a5_possibleRefExpr(_self_, _86825_pair.get()._field_Val);
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_86131_m.get()._field_Entries.len() - _86818_i) > 1LL)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_20c1ca386:;
				++it;
				_86818_i++;
				goto _iter_begin_20c1ca386;
			}
			_iter_end_20c1ca386:;
		};
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ea6700ac_slicing(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc91d0_SlicingExprModel> _88231_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _88231_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_22bc32d47_Production))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ea723a01_locInfo(_self_.get()._field_oc, &(_88231_m.get()._field_Token));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1ea66c4a5_possibleRefExpr(_self_, _88231_m.get()._field_Left);
	if ((_88231_m.get()._field_Right != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ea66c4a5_possibleRefExpr(_self_, _88231_m.get()._field_Right);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea670332_traitSub(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc93bc_TraitSubIdentExprModel> _89832_m) {
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67da49_traitDecl(_89832_m.get()._field_Trt));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1ea66c4a5_possibleRefExpr(_self_, _89832_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d50a_func(&(_89832_m.get()._field_Method)));
}



inline void _1ea6705a7_structureSub(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc97da_StructSubIdentExprModel> _90736_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _90736_m.get()._field_Expr.get()._field_Model);
	if ((_90736_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_215ebcc63_Ptr(_90736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_215ebc9ee_Sptr(_90736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_22bc32d47_Production))) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1ea723a01_locInfo(_self_.get()._field_oc, &(_90736_m.get()._field_Token));
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67e5c7_field(&(_90736_m.get()._field_Field.get()._field_Decl)));
}



inline void _1ea67082c_commonIdent(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc9da1_CommonIdentExprModel> _92831_m) {
	_1ea6a5037_write(_self_.get()._field_oc, _92831_m.get()._field_Ident);
}



inline void _1ea670aa2_commonSub(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dca08d_CommonSubIdentExprModel> _93233_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _93233_m.get()._field_Expr);
	{
		
		if ((_215ebcc63_Ptr(_93233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_20c1d9472:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_215ebc9ee_Sptr(_93233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_20c1d9b7b:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_22bc32d47_Production))) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1ea723a01_locInfo(_self_.get()._field_oc, &(_93233_m.get()._field_Token));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_20c1d9b15:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_20c1d9a9e:;
	};
	_1ea6a5037_write(_self_.get()._field_oc, _93233_m.get()._field_Ident);
}



inline void _1ea670d27_array(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc9bb4_ArrayExprModel> _95129_m) {
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72d643_array(_self_.get()._field_oc.get()._field_tc.ptr(), _95129_m.get()._field_Kind));
	if ((_95129_m.get()._field_Elems.len() == 0LL)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_95129_m.get()._field_Elems.len() == 2LL) && (_95129_m.get()._field_Elems[1LL] == nullptr))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ea66c4a5_possibleRefExpr(_self_, _95129_m.get()._field_Elems[0LL]);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1ea66c9a0_models(_self_, _95129_m.get()._field_Elems);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1ea67109c_funcInsCommon(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcea10_FnIns> _97437_m) {
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72e9a7_func(_self_.get()._field_oc.get()._field_tc.ptr(), _97437_m));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea671322_funcIns(_self_, _97437_m);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea671322_funcIns(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcea10_FnIns> _98131_m) {
	if (((_98131_m.get()._field_Decl != nullptr) && _98131_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_215d77348_Directive> _98317_d = _1ea7361d9_findDirective(&(_98131_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_98317_d != nullptr)) {
			_1ea6a5037_write(_self_.get()._field_oc, _1ea7282a8_concatAllParts(_98317_d.get()._field_Args));
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d7a2_funcIns(&(_98131_m)));
}



inline void _1ea671597_tuple(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dca27a_TupleExprModel> _99229_m) {
	{
		auto expr = &(_99229_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c1e6e74:;
		if (it != expr_end) {
			jule::I64 _99314_i = it - expr->begin();
			jule::Ptr<_215e8e471_Data> _99321_d = *it;
			{
				_1ea66c4a5_possibleRefExpr(_self_, _99321_d.get()._field_Model);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_99229_m.get()._field_Datas.len() - _99314_i) > 1LL)) {
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1ea6ecada_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_20c1e6e74:;
			++it;
			_99314_i++;
			goto _iter_begin_20c1e6e74;
		}
		_iter_end_20c1e6e74:;
	};
}



inline void _1ea67181c_newCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcaa2d_BuiltinNewCallExprModel> _100331_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _100331_m.get()._field_Kind));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_100331_m.get()._field_Init != nullptr)) {
		_1ea66c4a5_possibleRefExpr(_self_, _100331_m.get()._field_Init);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea671a92_outCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dca467_BuiltinOutCallExprModel> _101331_m) {
	if ((_101331_m.get()._field_Debug && _22bc32d47_Production)) {
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1ea66c4a5_possibleRefExpr(_self_, _101331_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea671d17_outlnCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dca654_BuiltinOutlnCallExprModel> _102233_m) {
	if ((_102233_m.get()._field_Debug && _22bc32d47_Production)) {
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ea66c4a5_possibleRefExpr(_self_, _102233_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea67208c_panicCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcac1a_BuiltinPanicCallExprModel> _103133_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1ea66c4a5_possibleRefExpr(_self_, _103133_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1ea723a01_locInfo(_self_.get()._field_oc, &(_103133_m.get()._field_Token));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ea672312_assertCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcae07_BuiltinAssertCallExprModel> _103934_m) {
	if (_22bc32d47_Production) {
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1ea66c4a5_possibleRefExpr(_self_, _103934_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea676cd9_cstrLit(static_cast<jule::Slice<jule::U8>>(_103934_m.get()._field_Log)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1ea723a01_locInfo(_self_.get()._field_oc, &(_103934_m.get()._field_Token));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1ea672587_errorCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcc007_BuiltinErrorCallExprModel> _105233_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_215d7ce64_IsVoid(_105233_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _105233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_20c204b96:;
				{
					jule::Ptr<_215e41aa5_Var> _105721_v = _105233_m.get()._field_Err.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
					if (_105721_v.get()._field_Ident.equal("error", 5)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_20c204b41:;
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1ea734528_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_105233_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _105233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_20c207979:;
				{
					jule::Ptr<_215e41aa5_Var> _106921_v = _105233_m.get()._field_Err.get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
					if (_106921_v.get()._field_Ident.equal("error", 5)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_20c2078be:;
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1ea66c4a5_possibleRefExpr(_self_, _105233_m.get()._field_Err.get()._field_Model);
	jule::I64 _107813_i = _1ea6a9635_pushAnyType(_self_.get()._field_oc, &(_105233_m.get()._field_Err.get()._field_Kind));;
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_107813_i));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1ea67280c_copyCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcbd1a_BuiltinCopyCallExprModel> _108432_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1ea66c4a5_possibleRefExpr(_self_, _108432_m.get()._field_Dest.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_215ebc78a_Prim(_108432_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1ea66c4a5_possibleRefExpr(_self_, _108432_m.get()._field_Src.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_215ebc78a_Prim(_108432_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea672a82_lenCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcb4bd_BuiltinLenCallExprModel> _110031_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _110031_m.get()._field_Expr.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1ea672d07_capCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcb6aa_BuiltinCapCallExprModel> _110531_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _110531_m.get()._field_Expr.get()._field_Model);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1ea67307c_deleteCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel> _111034_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _111034_m.get()._field_Dest.get()._field_Model);
	if ((_111034_m.get()._field_Key != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1ea66c4a5_possibleRefExpr(_self_, _111034_m.get()._field_Key.get()._field_Model);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1ea673302_makeCallSlice(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>* _112138_m) {
	jule::Ptr<_215ec4341_Slc> _112217_slice = _215ebd714_Slc((*(_112138_m)).get()._field_Kind.ptr());;
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_112138_m)).get()._field_Kind));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1ea66c4a5_possibleRefExpr(_self_, (*(_112138_m)).get()._field_Len);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_112138_m)).get()._field_Cap != nullptr)) {
		_1ea66c4a5_possibleRefExpr(_self_, (*(_112138_m)).get()._field_Cap);
	} else {
		_1ea66c4a5_possibleRefExpr(_self_, (*(_112138_m)).get()._field_Len);
	};
	if (_1ea736816_shouldInitialized(&(_112217_slice.get()._field_Elem))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ea6760d5_initExpr(_self_, _112217_slice.get()._field_Elem);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea673577_makeCallStr(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel>* _113936_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1ea66c4a5_possibleRefExpr(_self_, (*(_113936_m)).get()._field_Len);
	if (((*(_113936_m)).get()._field_Cap != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ea66c4a5_possibleRefExpr(_self_, (*(_113936_m)).get()._field_Cap);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea6737ec_makeCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel> _115032_m) {
	if ((_215ebd714_Slc(_115032_m.get()._field_Kind.ptr()) != nullptr)) {
		_1ea673302_makeCallSlice(_self_, &(_115032_m));
		return;;
	};
	_1ea673577_makeCallStr(_self_, &(_115032_m));
}



inline void _1ea673a72_pushToSlice(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_2161174ea_PushToSliceExprModel> _115835_m) {
	jule::I64 _115913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1ea66c4a5_possibleRefExpr(_self_, _115835_m.get()._field_Dest);
	jule::Str _116113_dest = _self_.get()._field_oc.get()._field_Obj.slice(_115913_n);;
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1ea6a5037_write(_self_.get()._field_oc, _116113_dest);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(static_cast<jule::I64>(_115835_m.get()._field_Elems.get()._field_Elems.len())));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_115835_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c21e63e:;
		if (it != expr_end) {
			jule::Any _116821_e = *it;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _116113_dest);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1ea66c4a5_possibleRefExpr(_self_, _116821_e);
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_20c21e63e:;
			++it;
			goto _iter_begin_20c21e63e;
		}
		_iter_end_20c21e63e:;
	};
}



inline void _1ea673ce7_appendCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcb2d1_BuiltinAppendCallExprModel> _117734_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1ea66c4a5_possibleRefExpr(_self_, _117734_m.get()._field_Dest);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1ea66c4a5_possibleRefExpr(_self_, _117734_m.get()._field_Elements);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea67406c_cloneCall(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dca841_BuiltinCloneCallExprModel> _118533_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1ea66c4a5_possibleRefExpr(_self_, _118533_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea6742e2_sizeof(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcc1e4_SizeofExprModel> _119130_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1ea66c4a5_possibleRefExpr(_self_, _119130_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea674567_alignof(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcc3d1_AlignofExprModel> _119731_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1ea66c4a5_possibleRefExpr(_self_, _119731_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1ea674875_runeLit(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcc5bd_RuneExprModel> _120327_m) {
	if ((_120327_m.get()._field_Code <= 127LL)) {
		jule::Str _120521_b = _1ea676723_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_120327_m.get()._field_Code)));;
		if (_120521_b.equal("'", 1)) {
			_120521_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _120521_b) + jule::Str("'", 1));;
	};
	return _1ea67738e_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_120327_m.get()._field_Code)));;
}



inline void _1ea674aea_structureStatic(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dc99c7_StructStaticIdentExprModel> _121439_m) {
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d7a2_funcIns(&(_121439_m.get()._field_Method)));
}



inline void _1ea674d70_integratedToStr(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcc7aa_IntegratedToStrExprModel> _121839_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1ea66c4a5_possibleRefExpr(_self_, _121839_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1ea6750e5_backendEmit(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dcc997_BackendEmitExprModel> _122435_m) {
	if ((_122435_m.get()._field_Exprs.len() == 0LL)) {
		_1ea6a5037_write(_self_.get()._field_oc, _122435_m.get()._field_Code);
		return;;
	};
	jule::I64 _122913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _123017_args = jule::Slice<jule::Any>::alloc(_122435_m.get()._field_Exprs.len(), _122435_m.get()._field_Exprs.len());;
	{
		auto expr = &(_122435_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c22a0b7:;
		if (it != expr_end) {
			jule::I64 _123114_i = it - expr->begin();
			jule::Any _123121_expr = *it;
			{
				_1ea66c4a5_possibleRefExpr(_self_, _123121_expr);
				_123017_args[_123114_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_122913_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _122913_n);
			}
			_iter_next_20c22a0b7:;
			++it;
			_123114_i++;
			goto _iter_begin_20c22a0b7;
		}
		_iter_end_20c22a0b7:;
	};
	_1ea6a5037_write(_self_.get()._field_oc, _21610ae7d_Format(_122435_m.get()._field_Code, _123017_args));
}



inline void _1ea67536a_free(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215dccb84_FreeExprModel> _123928_m) {
	_1ea66c4a5_possibleRefExpr(_self_, _123928_m.get()._field_Expr);
	if (_22bc326a4_RC) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1ea6755e0_mutSlicing(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_216117a39_MutSlicingExprModel> _124834_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea66c4a5_possibleRefExpr(_self_, _124834_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_22bc32d47_Production))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1ea723a01_locInfo(_self_.get()._field_oc, &(_124834_m.get()._field_Token));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1ea66c4a5_possibleRefExpr(_self_, _124834_m.get()._field_Left);
	if ((_124834_m.get()._field_Right != nullptr)) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1ea66c4a5_possibleRefExpr(_self_, _124834_m.get()._field_Right);
	};
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1ea675865_strInsertBegin(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_216117e13_StrInsertBeginExprModel> _126538_m) {
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1ea66c4a5_possibleRefExpr(_self_, _126538_m.get()._field_Dest);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1ea66c4a5_possibleRefExpr(_self_, _126538_m.get()._field_Expr);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1ea675ada_strComp(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_21611662b_StrCompExprModel> _127331_m) {
	if (_127331_m.get()._field_NotEq) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _127713_bytes = static_cast<jule::Slice<jule::U8>>(_214704435_ReadStr(_127331_m.get()._field_Right.ptr()));;
	_1ea66c4a5_possibleRefExpr(_self_, _127331_m.get()._field_Left);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea676cd9_cstrLit(_127713_bytes));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(static_cast<jule::I64>(_127713_bytes.len())));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_127331_m.get()._field_NotEq) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1ea675d60_model(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Any _128929_m) {
	{
		auto &_match_expr{ _128929_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_20c239170:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _128929_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_20c23944a:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _128929_m.cast_ptr<_215eba403_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20c2394b1:;
			{
				_1ea66ab02_constant(_self_, _128929_m.cast_ptr<_21470339b_Const>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c239527:;
			{
				_1ea66b73a_var(_self_, _128929_m.cast_ptr<_215e41aa5_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_20c23958d:;
			{
				_1ea66b9b0_structureIns(_self_, _128929_m.cast_ptr<_215dc71ab_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_20c23a0a5:;
			{
				_1ea67109c_funcInsCommon(_self_, _128929_m.cast_ptr<_215dcea10_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_20c23a11b:;
			{
				_1ea66b240_unsafeBinary(_self_, _128929_m.cast_ptr<_216116cd0_UnsafeBinopExprModel>(&__jule_any_type131).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_20c23a182:;
			{
				_1ea66b4b5_binary(_self_, _128929_m.cast_ptr<_215dc78c6_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_20c23a1e8:;
			{
				_1ea66bc35_unary(_self_, _128929_m.cast_ptr<_215dc7ab3_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_20c23a25e:;
			{
				_1ea66beaa_structureLit(_self_, _128929_m.cast_ptr<_215dc7e8c_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_20c23a2c5:;
			{
				_1ea66c230_allocStructure(_self_, _128929_m.cast_ptr<_215dc8179_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_20c23a33b:;
			{
				_1ea66c72a_casting(_self_, _128929_m.cast_ptr<_215dc8366_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_20c23a3a2:;
			{
				_1ea66e0bc_funcCall(_self_, _128929_m.cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_20c23a418:;
			{
				_1ea66e342_slice(_self_, _128929_m.cast_ptr<_215dc8740_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_20c23a47e:;
			{
				_1ea670d27_array(_self_, _128929_m.cast_ptr<_215dc9bb4_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_20c23a4e5:;
			{
				_1ea66e83c_unsafeIndexing(_self_, _128929_m.cast_ptr<_216117165_UnsafeIndexingExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_20c23a55b:;
			{
				_1ea66e5b7_indexing(_self_, _128929_m.cast_ptr<_215dc892c_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_20c23a5d3:;
			{
				_1ea66eab2_anonFunc(_self_, _128929_m.cast_ptr<_215dc8b19_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_20c23a65a:;
			{
				_1ea66ed37_mapExpr(_self_, _128929_m.cast_ptr<_215dc8ee3_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20c23a6d2:;
			{
				_1ea6700ac_slicing(_self_, _128929_m.cast_ptr<_215dc91d0_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_20c23a759:;
			{
				_1ea670332_traitSub(_self_, _128929_m.cast_ptr<_215dc93bc_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20c23a7d1:;
			{
				_1ea6705a7_structureSub(_self_, _128929_m.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_20c23a858:;
			{
				_1ea67082c_commonIdent(_self_, _128929_m.cast_ptr<_215dc9da1_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_20c23a8d0:;
			{
				_1ea670aa2_commonSub(_self_, _128929_m.cast_ptr<_215dca08d_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_20c23a957:;
			{
				_1ea671597_tuple(_self_, _128929_m.cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_20c23a9ce:;
			{
				_1ea671a92_outCall(_self_, _128929_m.cast_ptr<_215dca467_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_20c23aa56:;
			{
				_1ea671d17_outlnCall(_self_, _128929_m.cast_ptr<_215dca654_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_20c23aacd:;
			{
				_1ea67181c_newCall(_self_, _128929_m.cast_ptr<_215dcaa2d_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_20c23ab55:;
			{
				_1ea67208c_panicCall(_self_, _128929_m.cast_ptr<_215dcac1a_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_20c23abcc:;
			{
				_1ea672312_assertCall(_self_, _128929_m.cast_ptr<_215dcae07_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_20c23ac54:;
			{
				_1ea672587_errorCall(_self_, _128929_m.cast_ptr<_215dcc007_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_20c23accb:;
			{
				_1ea6737ec_makeCall(_self_, _128929_m.cast_ptr<_215dcb0e4_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_20c23ad53:;
			{
				_1ea673ce7_appendCall(_self_, _128929_m.cast_ptr<_215dcb2d1_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_20c23adca:;
			{
				_1ea67406c_cloneCall(_self_, _128929_m.cast_ptr<_215dca841_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_20c23ae52:;
			{
				_1ea67280c_copyCall(_self_, _128929_m.cast_ptr<_215dcbd1a_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_20c23aec9:;
			{
				_1ea672a82_lenCall(_self_, _128929_m.cast_ptr<_215dcb4bd_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_20c23b051:;
			{
				_1ea672d07_capCall(_self_, _128929_m.cast_ptr<_215dcb6aa_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_20c23b0c8:;
			{
				_1ea67307c_deleteCall(_self_, _128929_m.cast_ptr<_215dc95a9_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_20c23b150:;
			{
				_1ea6742e2_sizeof(_self_, _128929_m.cast_ptr<_215dcc1e4_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_20c23b1c7:;
			{
				_1ea674567_alignof(_self_, _128929_m.cast_ptr<_215dcc3d1_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_20c23b24e:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, _1ea674875_runeLit(_self_, _128929_m.cast_ptr<_215dcc5bd_RuneExprModel>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_20c23b2c6:;
			{
				_1ea674aea_structureStatic(_self_, _128929_m.cast_ptr<_215dc99c7_StructStaticIdentExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_20c23b34d:;
			{
				_1ea674d70_integratedToStr(_self_, _128929_m.cast_ptr<_215dcc7aa_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_20c23b3c5:;
			{
				_1ea6750e5_backendEmit(_self_, _128929_m.cast_ptr<_215dcc997_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_20c23b44c:;
			{
				_1ea67536a_free(_self_, _128929_m.cast_ptr<_215dccb84_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_20c23b4c4:;
			{
				_1ea6755e0_mutSlicing(_self_, _128929_m.cast_ptr<_216117a39_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_20c23b54b:;
			{
				_1ea675865_strInsertBegin(_self_, _128929_m.cast_ptr<_216117e13_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_20c23b5c3:;
			{
				_1ea675ada_strComp(_self_, _128929_m.cast_ptr<_21611662b_StrCompExprModel>(&__jule_any_type130));
			}
		}
		else {
			_case_begin_20c2392e6:;
			{
				_1ea6a5037_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_20c239219:;
	};
}



inline void _1ea6760d5_initExpr(jule::Ptr<_1ea6694a2_exprCoder> _self_, jule::Ptr<_215eba403_TypeKind> _139232_t) {
	if (_215ebbcd9_NilCompatible(_139232_t.ptr())) {
		if ((_215ebcc63_Ptr(_139232_t.ptr()) != nullptr)) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_215ec4dbe_Tuple> _140217_tup = _215ebe429_Tup(_139232_t.ptr());;
	if ((_140217_tup != nullptr)) {
		_1ea733dda_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _140217_tup);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_140217_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c256b60:;
			if (it != expr_end) {
				jule::I64 _140618_i = it - expr->begin();
				jule::Ptr<_215eba403_TypeKind> _140625_tt = *it;
				{
					if ((!(_1ea736816_shouldInitialized(&(_140625_tt))))) {
						goto _iter_next_20c256b60;
					};
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1ea6a5037_write(_self_.get()._field_oc, _2146edd36_Itoa(_140618_i));
					_1ea6a5037_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1ea6760d5_initExpr(_self_, _140625_tt);
					if (((_140217_tup.get()._field_Types.len() - _140618_i) > 1LL)) {
						_1ea6a5037_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_20c256b60:;
				++it;
				_140618_i++;
				goto _iter_begin_20c256b60;
			}
			_iter_end_20c256b60:;
		};
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_215de0d62_Enum> _142117_enm = _215ebcec7_Enum(_139232_t.ptr());;
	if ((_142117_enm != nullptr)) {
		_1ea675d60_model(_self_, _142117_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_215ec0150_Prim> _142613_prim = _215ebc78a_Prim(_139232_t.ptr());;
	if ((_142613_prim != nullptr)) {
		if (_214703137_IsNum(_142613_prim.get()._field_Kind)) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_215ec3120_IsBool(_142613_prim.ptr())) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_215ec3384_IsStr(_142613_prim.ptr())) {
			_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_215ebd4a0_Arr(_139232_t.ptr()) != nullptr)) {
		jule::Ptr<_215ec64db_Arr> _143821_arr = _215ebd4a0_Arr(_139232_t.ptr());;
		_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ea6760d5_initExpr(_self_, _143821_arr.get()._field_Elem);
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_215dc71ab_StructIns> _144517_s = _215ebdbdc_Struct(_139232_t.ptr());;
	if ((((_144517_s != nullptr) && _144517_s.get()._field_Decl.get()._field_CppLinked) && (_1ea7361d9_findDirective(&(_144517_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72ecb5_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _139232_t));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ea6694a2_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea678879_deriveCoder> static__1ea678c64_new(jule::Ptr<_1ea723407_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1ea678879_deriveCoder>(_1ea678879_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1ea679072_cloneFuncDecl(_1ea678879_deriveCoder* _self_, jule::Ptr<_215dc6cd2_Struct>* _1633_s) {
	jule::Str _1717_obj = _1ea72d027_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1ea679380_cloneFuncDef(_1ea678879_deriveCoder* _self_, jule::Ptr<_215dc6cd2_Struct>* _2232_s) {
	jule::Str _2317_obj = _1ea72d027_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea678879_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea67a260_TestCoder> static__1ea67a6d3_New(jule::Ptr<_1ea723407_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1ea67a260_TestCoder>(_1ea67a260_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_215e1a133_ImportInfo> _1ea67a947_findTestingPackage(jule::Ptr<_1ea67a260_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c265861:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_20c265861:;
			++it;
			goto _iter_begin_20c265861;
		}
		_iter_end_20c265861:;
	};
	return nullptr;;
}



inline void _1ea67abbc_appendTest(jule::Ptr<_1ea67a260_TestCoder> _self_, jule::Ptr<_215dcea10_FnIns> _4334_f) {
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea67b382_callTmReset(_self_);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea676cd9_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d7a2_funcIns(&(_4334_f)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1ea67ae42_appendPackageTests(jule::Ptr<_1ea67a260_TestCoder> _self_, jule::Ptr<_215e1d08c_Package>* _6043_p) {
	{
		auto expr = &((*(_6043_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c26b03c:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _6121_file = *it;
			{
				{
					auto expr = &(_6121_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20c26b878:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _6225_f = *it;
						{
							if (_1ea73656e_hasDirective(&(_6225_f.get()._field_Directives), jule::Str("test", 4))) {
								_1ea67abbc_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_20c26b878:;
						++it;
						goto _iter_begin_20c26b878;
					}
					_iter_end_20c26b878:;
				};
			}
			_iter_next_20c26b03c:;
			++it;
			goto _iter_begin_20c26b03c;
		}
		_iter_end_20c26b03c:;
	};
}



inline jule::Bool _1ea67b1a6_readyTestingPackage(jule::Ptr<_1ea67a260_TestCoder> _self_) {
	jule::Ptr<_215e1a133_ImportInfo> _7117_p = _1ea67a947_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_215e1b574_FindStruct(_7117_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_215da22da_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_215da22da_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_215da22da_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1ea67b382_callTmReset(jule::Ptr<_1ea67a260_TestCoder> _self_) {
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d50a_func(&(_self_.get()._field_tmReset)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ea67b55d_callTmFailed(jule::Ptr<_1ea67a260_TestCoder> _self_) {
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d50a_func(&(_self_.get()._field_tmFailed)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ea67b739_callTmSkipped(jule::Ptr<_1ea67a260_TestCoder> _self_) {
	_1ea6a5037_write(_self_.get()._field_oc, static__1ea67d50a_func(&(_self_.get()._field_tmSkipped)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1ea67b915_Serialize(jule::Ptr<_1ea67a260_TestCoder> _self_) {
	_1ea72797d_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1ea7277a2_end(_self_.get()._field_oc);
	});;
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	if ((!(_1ea67b1a6_readyTestingPackage(_self_)))) {
		_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1ea6e9587_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72ab7e_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1ea72d335_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1ea6a5037_write(_self_.get()._field_oc, _1ea72d335_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1ea6e906a_addIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1ea67b55d_callTmFailed(_self_);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1ea67b739_callTmSkipped(_self_);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1ea67ae42_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1ea6e9587_doneIndent(_self_.get()._field_oc);
	_1ea6ecada_indent(_self_.get()._field_oc);
	_1ea6a5037_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1ea67a260_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1ea67cd78_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1ea67d263_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_2146edd36_Itoa(_5423_row);
	_5517_obj+=_2146edd36_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1ea67d50a_func(jule::Ptr<_215dcd24a_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_20c283eab:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_20c284022:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_215d9c5b0_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_20c2833b7:;
			{
				jule::Str _7221_obj = static__1ea67cd78_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_20c283351:;
			{
				return static__1ea67cd78_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_20c2832a7:;
	};
}



inline jule::Str static__1ea67d7a2_funcIns(jule::Ptr<_215dcea10_FnIns>* _8424_f) {
	if (_215dd0d96_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1ea67d50a_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1ea67cd78_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1ea67da49_traitDecl(jule::Ptr<_215dddc1c_Trait> _9525_t) {
	if (_215dde789_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1ea67cd78_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1ea67dce1_param(jule::Ptr<_215dcd05d_Param>* _10322_p) {
	if ((_22e0acc2a_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _22e0ac983_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_215d8baee_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1ea67d263_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1ea67d263_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1ea67e088_structure(jule::Ptr<_215dc6cd2_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_1ea73656e_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1ea67cd78_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1ea67e330_structureIns(jule::Ptr<_215dc71ab_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1ea67e088_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1ea67cd78_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1ea67e5c7_field(jule::Ptr<_215d9ad3e_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1ea67e86e_var(jule::Ptr<_215e41aa5_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_20c28daa9:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_20c28ce3d:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_20c28cea4:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_20c28d01a:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_20c28d081:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _2146edd36_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_20c28d317:;
			{
				return static__1ea67d263_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_20c28cdc7:;
			{
				return static__1ea67cd78_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_20c28c7cd:;
	};
}



inline jule::Str static__1ea67eb16_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1ea67edad_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1ea680155_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1ea6803ec_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1ea680694_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1ea68093b_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea67c7a1_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea6b0152_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea685666_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ea729243_Str(_1ea728e8a_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ea729551_Equal(jule::Ptr<_1ea728e8a_customType> _self_, jule::Ptr<_215eba403_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea728e8a_customType _Src) {
	_Stream << _1ea729243_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ea729908_typeCoder> static__1ea729e47_new(jule::Ptr<_1ea723407_ObjectCoder>* _6224_oc) {
	jule::Ptr<_1ea729908_typeCoder> _6317_tc = jule::new_ptr<_1ea729908_typeCoder>(_1ea729908_typeCoder{._field_oc=(*(_6224_oc)), });;
	_6317_tc.get()._field_rc=static__1ea732702_new(&(_6317_tc));
	return _6317_tc;;
}



inline jule::Str _1ea72a255_toType(_1ea729908_typeCoder* _self_, jule::Str _6929_id) {
	if ((!_6929_id.equal("uintptr", 7))) {
		_6929_id=_22e3c8320_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _1ea72a563_prim(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec0150_Prim> _8023_p) {
	return _1ea72a255_toType(_self_, _215ec04b3_Str(_8023_p.ptr()));;
}



inline jule::Str _1ea72a871_tuple(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec4dbe_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8528_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c392c57:;
		if (it != expr_end) {
			jule::Ptr<_215eba403_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_1ea72ecb5_kind(_self_, _8721_tk);
				(_8617_obj).append(",", 1);
			}
			_iter_next_20c392c57:;
			++it;
			goto _iter_begin_20c392c57;
		}
		_iter_end_20c392c57:;
	};
	(_8617_obj).mut_slice(0LL, (_8617_obj.len() - 1LL));;
	(_8617_obj).append(">", 1);
	return _8617_obj;;
}



inline jule::Str _1ea72ab7e_asSptr(_1ea729908_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	(_9817_obj).append(">", 1);
	return _9817_obj;;
}



inline jule::Str _1ea72ae8c_asPtr(_1ea729908_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _1ea72b29a_sptr(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec38d4_Sptr> _11027_sptr) {
	return _1ea72ab7e_asSptr(_self_, _1ea72ecb5_kind(_self_, _11027_sptr.get()._field_Elem));;
}



inline jule::Str _1ea72b5a8_ptr(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec6e48_Ptr> _11526_p) {
	;
	if (_215ec791b_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _1ea72ecb5_kind(_self_, _11526_p.get()._field_Elem);;
	(_12017_elem).append("*", 1);
	return _12017_elem;;
}



inline jule::Str _1ea72b8b6_enumDecl(_1ea729908_typeCoder* _self_, jule::Ptr<_215de0d62_Enum> _12631_e) {
	return _1ea72ecb5_kind(_self_, _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1ea72bbc4_typeEnumDecl(_1ea729908_typeCoder* _self_, jule::Ptr<_215de245c_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1ea72bed2_asSlice(_1ea729908_typeCoder* _self_, jule::Ptr<_215eba403_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_1ea72ecb5_kind(_self_, _13530_elem);
	(_13617_obj).append(">", 1);
	return _13617_obj;;
}



inline jule::Str _1ea72c2e0_slice(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec4341_Slc> _14328_s) {
	return _1ea72bed2_asSlice(_self_, _14328_s.get()._field_Elem);;
}



inline jule::Str _1ea72c5ed_mapType(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec58e7_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_1ea72ecb5_kind(_self_, _14830_m.get()._field_Key);
	(_14917_obj).append(",", 1);
	_14917_obj+=_1ea72ecb5_kind(_self_, _14830_m.get()._field_Val);
	(_14917_obj).append(">", 1);
	return _14917_obj;;
}



inline jule::Str _1ea72c90b_traitIdent(_1ea729908_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	(_15817_obj).append(">", 1);
	return _15817_obj;;
}



inline jule::Str _1ea72cc19_traitDecl(_1ea729908_typeCoder* _self_, jule::Ptr<_215dddc1c_Trait> _16528_t) {
	return _1ea72c90b_traitIdent(_self_, static__1ea67da49_traitDecl(_16528_t));;
}



inline jule::Str _1ea72d027_structure(_1ea729908_typeCoder* _self_, jule::Ptr<_215dc6cd2_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_1ea73656e_hasDirective(&(_17028_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17117_rep).append("struct ", 7);
	};
	_17117_rep+=static__1ea67e088_structure(&(_17028_s));
	return _17117_rep;;
}



inline jule::Str _1ea72d335_structureIns(_1ea729908_typeCoder* _self_, jule::Ptr<_215dc71ab_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__1ea67e330_structureIns(&(_18035_s));;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			(_18221_ident).append("<", 1);
			{
				auto expr = &(_18035_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c39e1c5:;
				if (it != expr_end) {
					jule::Ptr<_215eb8bc6_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_1ea72ecb5_kind(_self_, _18529_g.get()._field_Kind);
						(_18221_ident).append(",", 1);
					}
					_iter_next_20c39e1c5:;
					++it;
					goto _iter_begin_20c39e1c5;
				}
				_iter_end_20c39e1c5:;
			};
			(_18221_ident).mut_slice(0LL, (_18221_ident.len() - 1LL));;
			(_18221_ident).append(">", 1);
		};
		jule::Ptr<_215d77348_Directive> _19217_d = _1ea7361d9_findDirective(&(_18035_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_1ea7282a8_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__1ea67e330_structureIns(&(_18035_s));;
}



inline jule::Str _1ea72d643_array(_1ea729908_typeCoder* _self_, jule::Ptr<_215ec64db_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_1ea72ecb5_kind(_self_, _20228_a.get()._field_Elem);
	(_20317_obj).append(",", 1);
	_20317_obj+=_2146edd36_Itoa(_20228_a.get()._field_N);
	(_20317_obj).append(">", 1);
	return _20317_obj;;
}



inline jule::Str _1ea72dc5e_paramIns(_1ea729908_typeCoder* _self_, jule::Ptr<_215dcdb41_ParamIns>* _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if ((*(_22832_p)).get()._field_Decl.get()._field_Variadic) {
		(_22917_obj).append("jule::Slice<", 12);
		_22917_obj+=_1ea72ecb5_kind(_self_, (*(_22832_p)).get()._field_Kind);
		(_22917_obj).append(">", 1);
	} else {
		_22917_obj+=_1ea72ecb5_kind(_self_, (*(_22832_p)).get()._field_Kind);
	};
	if ((*(_22832_p)).get()._field_Decl.get()._field_Reference) {
		(_22917_obj).append("*", 1);
	};
	return _22917_obj;;
}



inline void _1ea72e38b_funcInsResult(_1ea729908_typeCoder* _self_, jule::Str* _25837_s, jule::Ptr<_215dcea10_FnIns>* _25850_f) {
	if (_215d7ce64_IsVoid((*(_25850_f)).get()._field_Decl.ptr())) {
		if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25837_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25837_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25837_s))).append("jule::Exceptional<", 18);
		_1ea734528_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
		((*(_25837_s))).append(">", 1);
		return;;
	};
	_1ea734528_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
}



inline jule::Str _1ea72e699_anonFunc(_1ea729908_typeCoder* _self_, jule::Ptr<_215dcea10_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_215ebe429_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_1ea6a8865_pushResultIns((*(_self_))._field_oc, &(_27631_f));
	};
	jule::Str _28017_decl = jule::Str();;
	_1ea72e38b_funcInsResult(_self_, &(_28017_decl), &(_27631_f));
	(_28017_decl).append("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27631_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c3ad2e4:;
			if (it != expr_end) {
				jule::Ptr<_215dcdb41_ParamIns> _28425_param = *it;
				{
					if (_215d8baee_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_20c3ad2e4;
					};
					_28017_decl+=_1ea72dc5e_paramIns(_self_, &(_28425_param));
					(_28017_decl).append(",", 1);
				}
				_iter_next_20c3ad2e4:;
				++it;
				goto _iter_begin_20c3ad2e4;
			}
			_iter_end_20c3ad2e4:;
		};
		(_28017_decl).mut_slice(0LL, (_28017_decl.len() - 1LL));;
	} else {
		(_28017_decl).append("void", 4);
	};
	(_28017_decl).append(")", 1);
	return _28017_decl;;
}



inline jule::Str _1ea72e9a7_func(_1ea729908_typeCoder* _self_, jule::Ptr<_215dcea10_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_1ea72e699_anonFunc(_self_, _30027_f);
	(_30117_obj).append(">", 1);
	return _30117_obj;;
}



inline jule::Str _1ea72ecb5_kind(_1ea729908_typeCoder* _self_, jule::Ptr<_215eba403_TypeKind> _30827_k) {
	{
		
		if ((_215ebdbdc_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1490:;
			{
				return _1ea72d335_structureIns(_self_, _215ebdbdc_Struct(_30827_k.ptr()));;
			}
		}
		else if (_215ebb0c4_CppLinked(_30827_k.ptr())) {
			_case_begin_20c3b1517:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_215ebc78a_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b158e:;
			{
				return _1ea72a563_prim(_self_, _215ebc78a_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_215ebe429_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1616:;
			{
				return _1ea72a871_tuple(_self_, _215ebe429_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_215ebc9ee_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b168d:;
			{
				return _1ea72b29a_sptr(_self_, _215ebc9ee_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_215ebcc63_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1715:;
			{
				return _1ea72b5a8_ptr(_self_, _215ebcc63_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_215ebcec7_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b178c:;
			{
				return _1ea72b8b6_enumDecl(_self_, _215ebcec7_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_215ebd23b_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1814:;
			{
				return _1ea72bbc4_typeEnumDecl(_self_, _215ebd23b_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_215ebd714_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b188b:;
			{
				return _1ea72c2e0_slice(_self_, _215ebd714_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_215ebe1b5_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1913:;
			{
				return _1ea72c5ed_mapType(_self_, _215ebe1b5_Map(_30827_k.ptr()));;
			}
		}
		else if ((_215ebde51_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b198a:;
			{
				return _1ea72cc19_traitDecl(_self_, _215ebde51_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_215ebd4a0_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1a12:;
			{
				return _1ea72d643_array(_self_, _215ebd4a0_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_215ebd978_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_20c3b1a89:;
			{
				return _1ea72e9a7_func(_self_, _215ebd978_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_20c3b12b4:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_20c3b1b44:;
			{
				return _30827_k.get()._field_Kind.cast_ptr<_1ea728e8a_customType>(13).get()._field_kind;;
			}
		}
		else {
			_case_begin_20c3b8b29:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_20c3b8640:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ea729908_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea7321e6_resultCoder> static__1ea732702_new(jule::Ptr<_1ea729908_typeCoder>* _36224_tc) {
	return jule::new_ptr<_1ea7321e6_resultCoder>(_1ea7321e6_resultCoder{._field_tc=(*(_36224_tc))});;
}



inline void _1ea732a21_ptr(_1ea7321e6_resultCoder* _self_, jule::Str* _36627_s, jule::Ptr<_215ec6e48_Ptr> _36639_p) {
	((*(_36627_s))).append("p", 1);
	_1ea734209_codeMut(_self_, _36627_s, &(_36639_p.get()._field_Elem));
}



inline void _1ea732d40_sptr(_1ea7321e6_resultCoder* _self_, jule::Str* _37128_s, jule::Ptr<_215ec38d4_Sptr> _37140_p) {
	((*(_37128_s))).append("x", 1);
	_1ea734209_codeMut(_self_, _37128_s, &(_37140_p.get()._field_Elem));
}



inline void _1ea73315e_mapType(_1ea7321e6_resultCoder* _self_, jule::Str* _37631_s, jule::Ptr<_215ec58e7_Map> _37643_p) {
	((*(_37631_s))).append("m", 1);
	_1ea734209_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Key));
	_1ea734209_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Val));
}



inline void _1ea73347d_slice(_1ea7321e6_resultCoder* _self_, jule::Str* _38229_s, jule::Ptr<_215ec4341_Slc> _38241_slc) {
	((*(_38229_s))).append("s", 1);
	_1ea734209_codeMut(_self_, _38229_s, &(_38241_slc.get()._field_Elem));
}



inline void _1ea73379c_arr(_1ea7321e6_resultCoder* _self_, jule::Str* _38727_s, jule::Ptr<_215ec64db_Arr> _38739_arr) {
	((*(_38727_s))).append("a", 1);
	(*(_38727_s))+=_2146edc04_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)), 16LL);
	_1ea734209_codeMut(_self_, _38727_s, &(_38739_arr.get()._field_Elem));
}



inline void _1ea733abb_func(_1ea7321e6_resultCoder* _self_, jule::Str* _39328_s, jule::Ptr<_215dcea10_FnIns> _39340_f) {
	((*(_39328_s))).append("f", 1);
	{
		auto expr = &(_39340_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3bed94:;
		if (it != expr_end) {
			jule::Ptr<_215dcdb41_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					((*(_39328_s))).append("r", 1);
				};
				_1ea734209_codeMut(_self_, _39328_s, &(_39521_p.get()._field_Kind));
			}
			_iter_next_20c3bed94:;
			++it;
			goto _iter_begin_20c3bed94;
		}
		_iter_end_20c3bed94:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_1ea734209_codeMut(_self_, _39328_s, &(_39340_f.get()._field_Result));
	};
}



inline void _1ea733dda_tup(_1ea7321e6_resultCoder* _self_, jule::Str* _40627_s, jule::Ptr<_215ec4dbe_Tuple> _40639_tup) {
	{
		auto expr = &(_40639_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3c19de:;
		if (it != expr_end) {
			jule::Ptr<_215eba403_TypeKind> _40721_t = *it;
			{
				((*(_40627_s))).append("__jule_tuple_", 13);
				_1ea734209_codeMut(_self_, _40627_s, &(_40721_t));
			}
			_iter_next_20c3c19de:;
			++it;
			goto _iter_begin_20c3c19de;
		}
		_iter_end_20c3c19de:;
	};
}



inline void _1ea734209_codeMut(_1ea7321e6_resultCoder* _self_, jule::Str* _41331_s, jule::Ptr<_215eba403_TypeKind>* _41344_t) {
	{
		auto &_match_expr{ (*(_41344_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_20c3c2b22:;
			{
				_1ea732a21_ptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215ec6e48_Ptr>(12));
			}
		}
		else if (_match_expr.type_is(true, 7)) {
			_case_begin_20c3c2dca:;
			{
				_1ea732d40_sptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215ec38d4_Sptr>(7));
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_20c3c2e41:;
			{
				_1ea73315e_mapType(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215ec58e7_Map>(10));
			}
		}
		else if (_match_expr.type_is(true, 8)) {
			_case_begin_20c3c2ea7:;
			{
				_1ea73347d_slice(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215ec4341_Slc>(8));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_20c3c301d:;
			{
				_1ea73379c_arr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215ec64db_Arr>(11));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_20c3c35a1:;
			{
				_1ea733abb_func(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215dcea10_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_20c3c3617:;
			{
				jule::Ptr<_215de0d62_Enum> _42817_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_215de0d62_Enum>(3);;
				(*(_41331_s))+=static__1ea67cd78_toOut(&(_42817_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_20c3c367d:;
			{
				jule::Ptr<_215de245c_TypeEnum> _43117_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_215de245c_TypeEnum>(4);;
				(*(_41331_s))+=static__1ea67cd78_toOut(&(_43117_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_20c3c36e4:;
			{
				jule::Ptr<_215dc71ab_StructIns> _43421_si = (*(_41344_t)).get()._field_Kind.cast_ptr<_215dc71ab_StructIns>(0);;
				(*(_41331_s))+=static__1ea67e330_structureIns(&(_43421_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_20c3c375a:;
			{
				jule::Ptr<_215dddc1c_Trait> _43721_trt = (*(_41344_t)).get()._field_Kind.cast_ptr<_215dddc1c_Trait>(2);;
				(*(_41331_s))+=static__1ea67da49_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is(true, 6)) {
			_case_begin_20c3c37c1:;
			{
				(*(_41331_s))+=(*(_41344_t)).get()._field_Kind.cast_ptr<_215ec0150_Prim>(6).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 9)) {
			_case_begin_20c3c3837:;
			{
				_1ea733dda_tup(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_215ec4dbe_Tuple>(9));
			}
		}
		else {
			_case_begin_20c3c2d53:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_20c3c2baa:;
	};
}



inline void _1ea734528_codeMut1(_1ea7321e6_resultCoder* _self_, jule::Str* _44832_s, jule::Ptr<_215eba403_TypeKind>* _44845_t) {
	jule::Ptr<_215ec4dbe_Tuple> _44917_tup = _215ebe429_Tup((*(_44845_t)).ptr());;
	if ((_44917_tup != nullptr)) {
		_1ea733dda_tup(_self_, _44832_s, _44917_tup);
	} else {
		(*(_44832_s))+=_1ea72ecb5_kind((*(_self_))._field_tc.ptr(), (*(_44845_t)));
	};
}



inline jule::Str _1ea734803_code(_1ea7321e6_resultCoder* _self_, jule::Ptr<_215eba403_TypeKind>* _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_1ea734209_codeMut(_self_, &(_45817_s), _45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea7321e6_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _20c3cd479_Name(_20c3cd18d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20c3cd5ab_What(_20c3cd18d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20c3cd6dd_Reset(_20c3cd18d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20c3cd831_Short(_20c3cd18d_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20c3cd18d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20c3d1889_Name(_20c3d1ceb_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20c3d20d7_What(_20c3d1ceb_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20c3d2219_Reset(_20c3d1ceb_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20c3d234b_Short(_20c3d1ceb_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20c3d1ceb_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20c3d5151_Name(_20c3d55b3_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20c3d589e_What(_20c3d55b3_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20c3d59d1_Reset(_20c3d55b3_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20c3d5b13_Short(_20c3d55b3_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20c3d55b3_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20c3d895c_Name(_20c3d8dbe_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20c3d91aa_What(_20c3d8dbe_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20c3d92dc_Reset(_20c3d8dbe_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20c3d941e_Short(_20c3d8dbe_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20c3d8dbe_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _20c3dc224_Name(_20c3dc686_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _20c3dc972_What(_20c3dc686_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _20c3dcaa4_Reset(_20c3dc686_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _20c3dcbd6_Short(_20c3dc686_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _20c3dc686_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea77a591_FlagSet> static__1ea77a87c_New(void) {
	return jule::new_ptr<_1ea77a591_FlagSet>(_1ea77a591_FlagSet{._field_flags=jule::Slice<jule::Trait<_1ea778b22_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1ea778b22_CommonFlag> _1ea77ad11_FindFlag(_1ea77a591_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3e796b:;
		if (it != expr_end) {
			jule::Trait<_1ea778b22_CommonFlag> _7221_flag = *it;
			{
				if ((_1ea778b22_CommonFlag_mptr_data[(_7221_flag).type_offset]._1ea748e44_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_20c3e796b:;
			++it;
			goto _iter_begin_20c3e796b;
		}
		_iter_end_20c3e796b:;
	};
	return nullptr;;
}



inline jule::Trait<_1ea778b22_CommonFlag> _1ea77b11e_FindFlagShort(_1ea77a591_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3e8098:;
		if (it != expr_end) {
			jule::Trait<_1ea778b22_CommonFlag> _8221_flag = *it;
			{
				if ((_1ea778b22_CommonFlag_mptr_data[(_8221_flag).type_offset]._1ea749076_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_20c3e8098:;
			++it;
			goto _iter_begin_20c3e8098;
		}
		_iter_end_20c3e8098:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1ea778b22_CommonFlag>> _1ea77b383_Flags(_1ea77a591_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ea77b691_Parse(_1ea77a591_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ea77cc69_argParser _11617_ap = _1ea77cc69_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1ea77e155_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1ea77b86c_Reset(_1ea77a591_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3e9d58:;
		if (it != expr_end) {
			jule::Trait<_1ea778b22_CommonFlag> _12616_f = *it;
			{
				_1ea778b22_CommonFlag_mptr_data[(_12616_f).type_offset]._1ea74932e_Reset(_12616_f);
			}
			_iter_next_20c3e9d58:;
			++it;
			goto _iter_begin_20c3e9d58;
		}
		_iter_end_20c3e9d58:;
	};
}



inline jule::Ptr<_20c3dc686_Flag> _20c45cea9_addFlagCommon(_1ea77a591_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_20c45e5e8:;
			{
				goto _match_end_20c45e593;
			}
		}
		_match_end_20c45e593:;
	};
	if ((_1ea77ad11_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ea77b11e_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_20c3dc686_Flag> _14817_flag = jule::new_ptr<_20c3dc686_Flag>(_20c3dc686_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1ea778b22_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_20c3d8dbe_Flag> _20c4667ed_addFlagCommon(_1ea77a591_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_20c467dd7:;
			{
				goto _match_end_20c467d3d;
			}
		}
		_match_end_20c467d3d:;
	};
	if ((_1ea77ad11_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1ea77b11e_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_20c3d8dbe_Flag> _14817_flag = jule::new_ptr<_20c3d8dbe_Flag>(_20c3d8dbe_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1ea778b22_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _20c45ae41_AddVar(_1ea77a591_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_20c3dc686_Flag> _17617_flag = _20c45cea9_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _20c4647b8_AddVar(_1ea77a591_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_20c3d8dbe_Flag> _17617_flag = _20c4667ed_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1ea77a591_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _20c4009a7_parseInteger(_1ea77cc69_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_20c403636:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22db524c3_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_20c403a98:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22db524c3_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_20c403c41:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22db524c3_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_20c403988:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_20c403306:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_20c403290:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_20c4031c4:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _20c408a7b_parseInteger(_1ea77cc69_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_20c40b6b6:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22db524c3_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_20c40bb28:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22db524c3_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_20c40bcc1:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22db524c3_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_20c40ba18:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_20c40b386:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_20c40b320:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_20c40b254:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ea77d561_getData(_1ea77cc69_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ea77d7a3_processFlag(_1ea77cc69_argParser* _self_, jule::Trait<_1ea778b22_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_20c3ecc3a:;
			{
				jule::Ptr<_20c3d8dbe_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_20c3d8dbe_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_20c3ecbc4:;
	};
	jule::Str _22513_data = _1ea77d561_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ea778b22_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ea748e44_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_20c3ee28b:;
			{
				jule::Ptr<_20c3cd18d_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_20c3cd18d_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _20c4009a7_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _21352bda7_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ea778b22_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ea748e44_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_20c3eec4d:;
			{
				jule::Ptr<_20c3d1ceb_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_20c3d1ceb_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _20c408a7b_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _2142cbb23_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ea778b22_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ea748e44_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_20c3eecb4:;
			{
				jule::Ptr<_20c3d55b3_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_20c3d55b3_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _2146e9e97_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1ea778b22_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1ea748e44_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_20c3eed2a:;
			{
				(*((*(_21735_flag)).cast_ptr<_20c3dc686_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_20c3eebd7:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ea77da28_singleDash(_1ea77cc69_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c413d61:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1ea778b22_CommonFlag> _26321_flag = _1ea77b11e_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1ea77d7a3_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_20c413d61:;
			++it;
			goto _iter_begin_20c413d61;
		}
		_iter_end_20c413d61:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ea77dc9d_doubleDash(_1ea77cc69_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1ea778b22_CommonFlag> _27617_flag = _1ea77ad11_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1ea77d7a3_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ea77de79_tryArg(_1ea77cc69_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1ea77dc9d_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1ea77da28_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ea77e155_parse(_1ea77cc69_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ea77de79_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_20c4197b2:;
	}
	_iter_end_20c4197b2:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ea77cc69_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea723407_ObjectCoder> static__1ea684b4e_New(jule::Ptr<_22e2caed1_IR>* _8624_ir, _1ea6b0152_SerializationInfo _8633_info) {
	jule::Ptr<_1ea723407_ObjectCoder> _8717_oc = jule::new_ptr<_1ea723407_ObjectCoder>(_1ea723407_ObjectCoder{._field_ir=(*(_8624_ir)), ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__1ea66989d_new(&(_8717_oc));
	_8717_oc.get()._field_sc=static__1ea661697_new(&(_8717_oc));
	_8717_oc.get()._field_tc=static__1ea729e47_new(&(_8717_oc));
	_8717_oc.get()._field_dc=static__1ea678c64_new(_8717_oc);
	return _8717_oc;;
}



inline void _1ea6a5037_write(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _1ea6e906a_addIndent(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1ea6e9587_doneIndent(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1ea6ecada_indent(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1ea703abe_findAnyType(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215eba403_TypeKind>* _11736_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c29d0b3:;
		if (it != expr_end) {
			jule::I64 _11814_i = it - expr->begin();
			jule::Ptr<_215eba403_TypeKind> _11821_at = *it;
			{
				if (_215ebab0c_Equal(_11821_at, (*(_11736_t)))) {
					return _11814_i;;
				};
			}
			_iter_next_20c29d0b3:;
			++it;
			_11814_i++;
			goto _iter_begin_20c29d0b3;
		}
		_iter_end_20c29d0b3:;
	};
	return -1LL;;
}



inline jule::I64 _1ea6a9635_pushAnyType(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215eba403_TypeKind>* _12636_t) {
	jule::I64 _12717_i = _1ea703abe_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push((*(_12636_t)));;
	jule::Str _13313_si = _2146edd36_Itoa(_12717_i);;
	if ((_215ebc9ee_Sptr((*(_12636_t)).ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _1ea72ecb5_kind(_self_.get()._field_tc.ptr(), _215ebc9ee_Sptr((*(_12636_t)).ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _1ea72ab7e_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _215ebb811_Comparable((*(_12636_t)).ptr());;
		jule::Str _16317_kind = _1ea72ecb5_kind(_self_.get()._field_tc.ptr(), (*(_12636_t)));;
		if (_16317_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_215eba7ee_Str((*(_12636_t)).ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_215ebcc63_Ptr((*(_12636_t)).ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_16317_kind;
		} else {
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_16217_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_16217_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _1ea6a8865_pushResultIns(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dcea10_FnIns>* _23138_f) {
	jule::Str _23213_s = _1ea734803_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_23138_f)).get()._field_Result));;
	jule::Bool _23317_ok = false;;
	_self_.get()._field_resultMap.lookup(_23213_s, nullptr, &(_23317_ok));
	if (_23317_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_23213_s]=false;
	jule::Str _23817_obj = jule::Str::alloc(0LL, 128LL);;
	(_23817_obj).append("struct ", 7);
	_23817_obj+=_23213_s;
	(_23817_obj).append(" {\n", 3);
	{
		auto expr = &(_215ebe429_Tup((*(_23138_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2b1a44:;
		if (it != expr_end) {
			jule::I64 _24214_i = it - expr->begin();
			jule::Ptr<_215eba403_TypeKind> _24221_t = *it;
			{
				(_23817_obj).append("\t", 1);
				_23817_obj+=_1ea72ecb5_kind(_self_.get()._field_tc.ptr(), _24221_t);
				(_23817_obj).append(" ", 1);
				(_23817_obj).append("__jule_result_arg", 17);
				_23817_obj+=_2146edd36_Itoa(_24214_i);
				(_23817_obj).append(";\n", 2);
			}
			_iter_next_20c2b1a44:;
			++it;
			_24214_i++;
			goto _iter_begin_20c2b1a44;
		}
		_iter_end_20c2b1a44:;
	};
	(_23817_obj).append("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23817_obj);;
}



inline void _1ea6eb534_pushResult(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dcd24a_Fn>* _25435_f) {
	if ((_215d7ce64_IsVoid((*(_25435_f)).ptr()) || ((*(_25435_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _25817_n = (*(_25435_f)).get()._field_Instances.len();;
	if (((*(_25435_f)).get()._field_Generics.len() == 0LL)) {
		_25817_n=1LL;
	};
	{
		auto expr = (*(_25435_f)).get()._field_Instances.slice(0LL, _25817_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_20c2b5493:;
		if (it != expr_end) {
			jule::Ptr<_215dcea10_FnIns> _26221_ins = *it;
			{
				_1ea6a8865_pushResultIns(_self_, &(_26221_ins));
			}
			_iter_next_20c2b5493:;
			++it;
			goto _iter_begin_20c2b5493;
		}
		_iter_end_20c2b5493:;
	};
}



inline jule::I64 _1ea6853be_findTypeOffset(_1ea723407_ObjectCoder* _self_, jule::Ptr<_215dddc1c_Trait> _26729_t, jule::Ptr<_215eba403_TypeKind> _26744_k) {
	if ((_26729_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_215dc71ab_StructIns> _27117_s = nullptr;;
	if ((_215ebc9ee_Sptr(_26744_k.ptr()) != nullptr)) {
		_26744_k=_215ebc9ee_Sptr(_26744_k.ptr()).get()._field_Elem;
	};
	if ((_215ebdbdc_Struct(_26744_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_27117_s=_215ebdbdc_Struct(_26744_k.ptr());
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2b8166:;
		if (it != expr_end) {
			jule::Ptr<_1ea685666_traitHash> *_27916_hash = it;
			{
				if ((((*(_27916_hash)).get()._field_t == _26729_t) && ((*(_27916_hash)).get()._field_s == _27117_s))) {
					return (*(_27916_hash)).get()._field_i;;
				};
			}
			_iter_next_20c2b8166:;
			++it;
			goto _iter_begin_20c2b8166;
		}
		_iter_end_20c2b8166:;
	};
	return -1LL;;
}



inline void _1ea723a01_locInfo(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_22e0aa1de_Token>* _28828_t) {
	jule::Str *_28914_loc = &((*(_28828_t)).get()._field_File.get()._field_Path);;
	if (_22bc32d47_Production) {
		{
			
			if (_22db524c3_HasPrefix((*(_28914_loc)), _22dc07c1b_PathStdlib)) {
				_case_begin_20c2baa92:;
				{
					_1ea6a5037_write(_self_, _1ea6769ba_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)).slice((_22cc079ec_Dir(_22dc07c1b_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_22db524c3_HasPrefix((*(_28914_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_20c2ba487:;
				{
					_1ea6a5037_write(_self_, _1ea6769ba_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)).slice((_22cc079ec_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_20c2ba0e1:;
				{
					_1ea6a5037_write(_self_, _1ea6769ba_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)))));
				}
			}
			_match_end_20c2ba025:;
		};
	} else {
		_1ea6a5037_write(_self_, _1ea6769ba_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28914_loc)))));
	};
	_1ea6a5037_write(_self_, jule::Str(":", 1));
	_1ea6a5037_write(_self_, _2146edd36_Itoa((*(_28828_t)).get()._field_Row));
	_1ea6a5037_write(_self_, jule::Str(":", 1));
	_1ea6a5037_write(_self_, _2146edd36_Itoa((*(_28828_t)).get()._field_Column));
}



inline void _1ea723b33_head(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea71b5dc_Time _31513_time = static__1ea71bb81_Now();;
	_1ea71ae49_AbsTime _31613_abs = _1ea71d2c0_Abs(&_31513_time);;
	_1ea6a5037_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1ea6a5037_write(_self_, jule::Str("// JuleC version: ", 18));
	_1ea6a5037_write(_self_, jule::Str("jule0.0.13 @master", 18));
	_1ea6a5037_write(_self_, jule::Str("\n", 1));
	_1ea6a5037_write(_self_, jule::Str("// Date: ", 9));
	_1ea6a5037_write(_self_, _2146edac2_FmtUint(_31613_abs._field_Day, 10LL));
	_1ea6a5037_write(_self_, jule::Str("/", 1));
	_1ea6a5037_write(_self_, _2146edac2_FmtUint(_31613_abs._field_Month, 10LL));
	_1ea6a5037_write(_self_, jule::Str("/", 1));
	_1ea6a5037_write(_self_, _2146edac2_FmtUint(_31613_abs._field_Year, 10LL));
	_1ea6a5037_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ea6a5037_write(_self_, _self_.get()._field_info._field_Compiler);
	_1ea6a5037_write(_self_, jule::Str(" ", 1));
	_1ea6a5037_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	if (_22bc32d47_Production) {
		_1ea6a5037_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22bc326a4_RC))) {
		_1ea6a5037_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_22bc32a7d_Safety))) {
		_1ea6a5037_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ea723c65_links(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n\n#include \"", 12));
	_1ea6a5037_write(_self_, _22dc5e327_PathApi);
	_1ea6a5037_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1ea723c65_links(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2c5ecb:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _35316_used = *it;
			{
				{
					
					if ((!(_35316_used.get()._field_CppLinked))) {
						_case_begin_20c2c6a15:;
						{
							goto _iter_next_20c2c5ecb;
						}
					}
					else if (_22dbe05d8_IsStdHeaderPath(_35316_used.get()._field_Path)) {
						_case_begin_20c2c6a8c:;
						{
							_1ea6a5037_write(_self_, jule::Str("#include ", 9));
							_1ea6a5037_write(_self_, _35316_used.get()._field_Path);
							_1ea6a5037_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_22dbe0808_IsValidHeaderExt(_22cc05456_Ext(_35316_used.get()._field_Path))) {
						_case_begin_20c2c6b14:;
						{
							_1ea6a5037_write(_self_, jule::Str("#include \"", 10));
							_1ea6a5037_write(_self_, _35316_used.get()._field_Path);
							_1ea6a5037_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_20c2c68e4:;
				};
			}
			_iter_next_20c2c5ecb:;
			++it;
			goto _iter_begin_20c2c5ecb;
		}
		_iter_end_20c2c5ecb:;
	};
}



inline void _1ea723d97_prepareStructure(_1ea723407_ObjectCoder* _self_, jule::Ptr<_215dc6cd2_Struct>* _36940_s) {
	{
		auto expr = &((*(_36940_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2c6718:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _37021_ins = *it;
			{
				{
					auto expr = &(_37021_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20c2c995d:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _37125_m = *it;
						{
							if (_37125_m.get()._field_Statically) {
								goto _iter_next_20c2c995d;
							};
							{
								auto expr = &(_37125_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20c2ca6b7:;
								if (it != expr_end) {
									jule::Ptr<_215dcea10_FnIns> _37529_mins = *it;
									{
										jule::Ptr<_215dcdb41_ParamIns> _37629_p = _37529_mins.get()._field_Params[0LL];;
										if ((!(_215d8d46e_IsRef(_37629_p.get()._field_Decl.ptr())))) {
											_37629_p.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_1ea728e8a_customType>(_1ea728e8a_customType{._field_kind=_1ea72ae8c_asPtr((*(_self_))._field_tc.ptr(), _1ea72ecb5_kind((*(_self_))._field_tc.ptr(), _37629_p.get()._field_Kind))}), 13)});
										} else {
											_37629_p.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_1ea728e8a_customType>(_1ea728e8a_customType{._field_kind=_1ea72ecb5_kind((*(_self_))._field_tc.ptr(), _37629_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_20c2ca6b7:;
									++it;
									goto _iter_begin_20c2ca6b7;
								}
								_iter_end_20c2ca6b7:;
							};
						}
						_iter_next_20c2c995d:;
						++it;
						goto _iter_begin_20c2c995d;
					}
					_iter_end_20c2c995d:;
				};
			}
			_iter_next_20c2c6718:;
			++it;
			goto _iter_begin_20c2c6718;
		}
		_iter_end_20c2c6718:;
	};
}



inline void _1ea723ec9_prepareStructures(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2c98a3:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _39621_s = *it;
			{
				if ((_39621_s.get()._field_Token != nullptr)) {
					_1ea723d97_prepareStructure(_self_.ptr(), &(_39621_s));
				};
			}
			_iter_next_20c2c98a3:;
			++it;
			goto _iter_begin_20c2c98a3;
		}
		_iter_end_20c2c98a3:;
	};
}



inline void _1ea72410b_iterPackages(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)> _40332_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2ce127:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _40421_used = *it;
			{
				if ((!(_40421_used.get()._field_CppLinked))) {
					_40332_f(&(_40421_used.get()._field_Package));
				};
			}
			_iter_next_20c2ce127:;
			++it;
			goto _iter_begin_20c2ce127;
		}
		_iter_end_20c2ce127:;
	};
	_40332_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1ea72423d_buildTraitMap(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea72410b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>([=](jule::Ptr<_215e1d08c_Package>* _41335_pkg) mutable -> void {
		_1ea727ebc_iterFiles(_41335_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>([=](jule::Ptr<_215e89647_SymbolTable>* _41436_file) mutable -> void {
			{
				auto expr = &((*(_41436_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c2d2317:;
				if (it != expr_end) {
					jule::Ptr<_215dddc1c_Trait> _41529_t = *it;
					{
						if ((_41529_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_41529_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ea685666_traitHash>(_1ea685666_traitHash{._field_t=_41529_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_20c2d2317;
						};
						jule::I64 _42729_i = 0LL;;
						{
							auto expr = &(_41529_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_20c2d2aa9:;
							if (it != expr_end) {
								jule::Ptr<_215dc6cd2_Struct> _42833_s = *it;
								{
									{
										auto expr = &(_42833_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_20c2d4a67:;
										if (it != expr_end) {
											jule::Ptr<_215dc71ab_StructIns> _42937_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1ea685666_traitHash>(_1ea685666_traitHash{._field_t=_41529_t, ._field_s=_42937_ins, ._field_i=_42729_i}));;
												(_42729_i)++;
											}
											_iter_next_20c2d4a67:;
											++it;
											goto _iter_begin_20c2d4a67;
										}
										_iter_end_20c2d4a67:;
									};
								}
								_iter_next_20c2d2aa9:;
								++it;
								goto _iter_begin_20c2d2aa9;
							}
							_iter_end_20c2d2aa9:;
						};
					}
					_iter_next_20c2d2317:;
					++it;
					goto _iter_begin_20c2d2317;
				}
				_iter_end_20c2d2317:;
			};
		}));
	}));
}



inline void _1ea724370_traitDecls(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea72410b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>([=](jule::Ptr<_215e1d08c_Package>* _44435_pkg) mutable -> void {
		_1ea727ebc_iterFiles(_44435_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>([=](jule::Ptr<_215e89647_SymbolTable>* _44536_file) mutable -> void {
			{
				auto expr = &((*(_44536_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c2d6b13:;
				if (it != expr_end) {
					jule::Ptr<_215dddc1c_Trait> _44629_t = *it;
					{
						if ((_44629_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1ea6ecada_indent(_self_);
						_1ea6a5037_write(_self_, jule::Str("struct ", 7));
						_1ea6a5037_write(_self_, static__1ea67da49_traitDecl(_44629_t));
						_1ea6a5037_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_20c2d6b13:;
					++it;
					goto _iter_begin_20c2d6b13;
				}
				_iter_end_20c2d6b13:;
			};
		}));
	}));
}



inline void _1ea7244a2_structurePlainDecl(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc6cd2_Struct>* _45943_s) {
	{
		auto expr = &((*(_45943_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2d4957:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _46021_ins = *it;
			{
				_1ea6a5037_write(_self_, jule::Str("struct ", 7));
				_1ea6a5037_write(_self_, static__1ea67e330_structureIns(&(_46021_ins)));
				_1ea6a5037_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_20c2d4957:;
			++it;
			goto _iter_begin_20c2d4957;
		}
		_iter_end_20c2d4957:;
	};
}



inline void _1ea7245d4_structurePlainDecls(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c2d9a06:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _46821_s = *it;
			{
				if ((_46821_s.get()._field_Token != nullptr)) {
					_1ea7244a2_structurePlainDecl(_self_, &(_46821_s));
				};
			}
			_iter_next_20c2d9a06:;
			++it;
			goto _iter_begin_20c2d9a06;
		}
		_iter_end_20c2d9a06:;
	};
}



inline void _1ea724716_fieldDecl(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc6ebe_FieldIns>* _47534_f) {
	_1ea6a5037_write(_self_, _1ea72ecb5_kind(_self_.get()._field_tc.ptr(), (*(_47534_f)).get()._field_Kind));
	_1ea6a5037_write(_self_, jule::Str(" ", 1));
	_1ea6a5037_write(_self_, static__1ea67e5c7_field(&((*(_47534_f)).get()._field_Decl)));
	if (((*(_47534_f)).get()._field_Default == nullptr)) {
		if (_1ea736816_shouldInitialized(&((*(_47534_f)).get()._field_Kind))) {
			_1ea6a5037_write(_self_, jule::Str(" = ", 3));
			_1ea6760d5_initExpr(_self_.get()._field_ec, (*(_47534_f)).get()._field_Kind);
		};
	} else {
		_1ea6a5037_write(_self_, jule::Str(" = ", 3));
		_1ea66c4a5_possibleRefExpr(_self_.get()._field_ec, (*(_47534_f)).get()._field_Default.get()._field_Model);
	};
	_1ea6a5037_write(_self_, jule::Str(";", 1));
}



inline void _1ea724848_structureDestructor(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _49344_s) {
	;
	jule::Ptr<_215dcd24a_Fn> _49613_disposeMethod = _215da22da_FindMethod((*(_49344_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _49717_disposed = static__215e42ec4_Dispose(_49613_disposeMethod);;
	if ((!(_49717_disposed))) {
		return;;
	};
	_1ea6a5037_write(_self_, jule::Str("~", 1));
	_1ea6a5037_write(_self_, static__1ea67e330_structureIns(_49344_s));
	_1ea6a5037_write(_self_, jule::Str("(void) { ", 9));
	_1ea6a5037_write(_self_, static__1ea67d50a_func(&(_49613_disposeMethod)));
	_1ea6a5037_write(_self_, jule::Str("(this); }", 9));
}



inline void _1ea72497a_structureDeriveDefsDecls(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _50945_s) {
	if (_215d90d12_IsDerives((*(_50945_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, _1ea679072_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_50945_s)).get()._field_Decl)));
		_1ea6a5037_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1ea724aac_structureOperatorEq(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Str* _51740_ident, jule::Ptr<_215dc71ab_StructIns>* _51757_s) {
	if ((!((*(_51757_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_51757_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1ea724d21_structureOperator(_self_, _51740_ident, &((*(_51757_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1ea6ecada_indent(_self_);
	if (_216127d13_Inline) {
		_1ea6a5037_write(_self_, jule::Str("inline ", 7));
	};
	_1ea6a5037_write(_self_, jule::Str("bool operator==(", 16));
	_1ea6a5037_write(_self_, (*(_51740_ident)));
	_1ea6a5037_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_51757_s)).get()._field_Fields.len() > 0LL)) {
		_1ea6e906a_addIndent(_self_);
		_1ea6a5037_write(_self_, jule::Str("\n", 1));
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, jule::Str("return ", 7));
		_1ea6e906a_addIndent(_self_);
		jule::Bool _54021_writed = false;;
		{
			auto expr = &((*(_51757_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c2e76d4:;
			if (it != expr_end) {
				jule::Ptr<_215dc6ebe_FieldIns> _54125_f = *it;
				{
					jule::Ptr<_215dc71ab_StructIns> _54321_strct = _215ebdbdc_Struct(_54125_f.get()._field_Kind.ptr());;
					if ((((_54321_strct != nullptr) && (_54321_strct.get()._field_Decl != nullptr)) && _54321_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_20c2e76d4;
					};
					if (_54021_writed) {
						_1ea6a5037_write(_self_, jule::Str(" &&", 3));
					};
					_54021_writed=true;
					_1ea6a5037_write(_self_, jule::Str("\n", 1));
					_1ea6ecada_indent(_self_);
					_1ea6a5037_write(_self_, jule::Str("this->", 6));
					jule::Str _55421_fIdent = static__1ea67e5c7_field(&(_54125_f.get()._field_Decl));;
					_1ea6a5037_write(_self_, _55421_fIdent);
					_1ea6a5037_write(_self_, jule::Str(" == _other.", 11));
					_1ea6a5037_write(_self_, _55421_fIdent);
				}
				_iter_next_20c2e76d4:;
				++it;
				goto _iter_begin_20c2e76d4;
			}
			_iter_end_20c2e76d4:;
		};
		_1ea6e9587_doneIndent(_self_);
		if ((!(_54021_writed))) {
			_1ea6a5037_write(_self_, jule::Str("true", 4));
		};
		_1ea6a5037_write(_self_, jule::Str(";\n", 2));
		_1ea6e9587_doneIndent(_self_);
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, jule::Str("}", 1));
	} else {
		_1ea6a5037_write(_self_, jule::Str(" return true; }", 15));
	};
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ea724bde_structureOperatorNotEq(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Str* _57343_ident, jule::Ptr<_215dc71ab_StructIns>* _57360_s) {
	if ((!((*(_57360_s)).get()._field_Comparable))) {
		return;;
	};
	_1ea6ecada_indent(_self_);
	if (_216127d13_Inline) {
		_1ea6a5037_write(_self_, jule::Str("inline ", 7));
	};
	_1ea6a5037_write(_self_, jule::Str("bool operator!=(", 16));
	_1ea6a5037_write(_self_, (*(_57343_ident)));
	_1ea6a5037_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ea724d21_structureOperator(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Str* _58738_ident, jule::Ptr<_215dcea10_FnIns>* _58755_f, jule::Str _58766_op) {
	if (((*(_58755_f)) == nullptr)) {
		return;;
	};
	jule::Bool _59213_unary = ((*(_58755_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _59313_assignment = _215d7ce64_IsVoid((*(_58755_f)).get()._field_Decl.ptr());;
	_1ea6ecada_indent(_self_);
	if (_216127d13_Inline) {
		_1ea6a5037_write(_self_, jule::Str("inline ", 7));
	};
	if (_59313_assignment) {
		_1ea6a5037_write(_self_, (*(_58738_ident)));
		_1ea6a5037_write(_self_, jule::Str("&", 1));
	} else {
		if ((_215ebc78a_Prim((*(_58755_f)).get()._field_Result.ptr()) == nullptr)) {
			_1ea6a5037_write(_self_, (*(_58738_ident)));
		} else {
			_1ea6a5037_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1ea6a5037_write(_self_, jule::Str(" operator", 9));
	_1ea6a5037_write(_self_, _58766_op);
	_1ea6a5037_write(_self_, jule::Str("(", 1));
	if ((!(_59213_unary))) {
		jule::Ptr<_215dcdb41_ParamIns> _61521_p = (*(_58755_f)).get()._field_Params[1LL];;
		_1ea6a5037_write(_self_, _1ea72dc5e_paramIns(_self_.get()._field_tc.ptr(), &(_61521_p)));
		_1ea6a5037_write(_self_, jule::Str(" _other", 7));
	};
	_1ea6a5037_write(_self_, jule::Str(") { ", 4));
	if ((!(_59313_assignment))) {
		_1ea6a5037_write(_self_, jule::Str("return ", 7));
	};
	_1ea6a5037_write(_self_, static__1ea67d7a2_funcIns(_58755_f));
	if ((!(_59213_unary))) {
		_1ea6a5037_write(_self_, jule::Str("(this, _other); ", 16));
		if (_59313_assignment) {
			_1ea6a5037_write(_self_, jule::Str("return *this; ", 14));
		};
		_1ea6a5037_write(_self_, jule::Str("}", 1));
	} else {
		_1ea6a5037_write(_self_, jule::Str("(this); }", 9));
	};
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
}



inline void _1ea724e53_structureOperators(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _63643_s) {
	jule::Str _63713_ident = static__1ea67e330_structureIns(_63643_s);;
	_1ea724aac_structureOperatorEq(_self_, &(_63713_ident), _63643_s);
	_1ea724bde_structureOperatorNotEq(_self_, &(_63713_ident), _63643_s);
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1ea724d21_structureOperator(_self_, &(_63713_ident), &((*(_63643_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1ea725085_structureInsDecl(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _67541_s) {
	if (((*(_67541_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_67541_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c314bc9:;
			if (it != expr_end) {
				jule::Ptr<_215dcd24a_Fn> _67725_m = *it;
				{
					_1ea6eb534_pushResult(_self_, &(_67725_m));
					_1ea725690_funcDecl(_self_, &(_67725_m), false);
				}
				_iter_next_20c314bc9:;
				++it;
				goto _iter_begin_20c314bc9;
			}
			_iter_end_20c314bc9:;
		};
	};
	_1ea6a5037_write(_self_, jule::Str("struct ", 7));
	jule::Str _68413_outIdent = static__1ea67e330_structureIns(_67541_s);;
	_1ea6a5037_write(_self_, _68413_outIdent);
	_1ea6a5037_write(_self_, jule::Str(" {\n", 3));
	_1ea6e906a_addIndent(_self_);
	{
		auto expr = &((*(_67541_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c316d74:;
		if (it != expr_end) {
			jule::Ptr<_215dc6ebe_FieldIns> _69021_f = *it;
			{
				_1ea6ecada_indent(_self_);
				_1ea724716_fieldDecl(_self_, &(_69021_f));
				_1ea6a5037_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_20c316d74:;
			++it;
			goto _iter_begin_20c316d74;
		}
		_iter_end_20c316d74:;
	};
	_1ea6ecada_indent(_self_);
	_1ea724848_structureDestructor(_self_, _67541_s);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_1ea6ecada_indent(_self_);
	_1ea6a5037_write(_self_, _68413_outIdent);
	_1ea6a5037_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1ea72497a_structureDeriveDefsDecls(_self_, _67541_s);
	_1ea724e53_structureOperators(_self_, _67541_s);
	_1ea6a5037_write(_self_, jule::Str("\n", 1));
	_1ea6e9587_doneIndent(_self_);
	_1ea6ecada_indent(_self_);
	_1ea6a5037_write(_self_, jule::Str("};", 2));
}



inline void _1ea7251b7_structureDecl(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc6cd2_Struct>* _71538_s) {
	{
		auto expr = &((*(_71538_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c31aae2:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _71621_ins = *it;
			{
				_1ea725085_structureInsDecl(_self_, &(_71621_ins));
			}
			_iter_next_20c31aae2:;
			++it;
			goto _iter_begin_20c31aae2;
		}
		_iter_end_20c31aae2:;
	};
}



inline void _1ea7252e9_structureDecls(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c31b9b1:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _72221_s = *it;
			{
				if ((_72221_s.get()._field_Token != nullptr)) {
					_1ea7251b7_structureDecl(_self_, &(_72221_s));
					_1ea6a5037_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_20c31b9b1:;
			++it;
			goto _iter_begin_20c31b9b1;
		}
		_iter_end_20c31b9b1:;
	};
}



inline void _1ea72542b_paramsDecls(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>* _73036_params) {
	if (((*(_73036_params)).len() == 0LL)) {
		_1ea6a5037_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ea6a5037_write(_self_, jule::Str("(", 1));
	{
		auto expr = _73036_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c31d991:;
		if (it != expr_end) {
			jule::I64 _73714_i = it - expr->begin();
			jule::Ptr<_215dcdb41_ParamIns> _73721_p = *it;
			{
				_1ea6a5037_write(_self_, _1ea72dc5e_paramIns(_self_.get()._field_tc.ptr(), &(_73721_p)));
				if ((((*(_73036_params)).len() - _73714_i) > 1LL)) {
					_1ea6a5037_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_20c31d991:;
			++it;
			_73714_i++;
			goto _iter_begin_20c31d991;
		}
		_iter_end_20c31d991:;
	};
	_1ea6a5037_write(_self_, jule::Str(")", 1));
}



inline void _1ea72555d_funcHead(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dcea10_FnIns>* _74733_f, jule::Bool _74744_ptr) {
	if ((((!(_74744_ptr)) && _216127d13_Inline) && (!(_215d938a3_IsEntryPoint((*(_74733_f)).get()._field_Decl.ptr()))))) {
		_1ea6a5037_write(_self_, jule::Str("inline ", 7));
	};
	_1ea72e38b_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _74733_f);
	if (_74744_ptr) {
		_1ea6a5037_write(_self_, jule::Str("(*", 2));
		_1ea6a5037_write(_self_, static__1ea67d7a2_funcIns(_74733_f));
		_1ea6a5037_write(_self_, jule::Str(")", 1));
	} else {
		_1ea6a5037_write(_self_, jule::Str(" ", 1));
		_1ea6a5037_write(_self_, static__1ea67d7a2_funcIns(_74733_f));
	};
}



inline void _1ea725690_funcDecl(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dcd24a_Fn>* _76233_f, jule::Bool _76241_ptr) {
	{
		auto expr = &((*(_76233_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c323d2b:;
		if (it != expr_end) {
			jule::Ptr<_215dcea10_FnIns> _76321_c = *it;
			{
				_1ea6ecada_indent(_self_);
				_1ea72555d_funcHead(_self_, &(_76321_c), _76241_ptr);
				_1ea72542b_paramsDecls(_self_, &(_76321_c.get()._field_Params));
				_1ea6a5037_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_20c323d2b:;
			++it;
			goto _iter_begin_20c323d2b;
		}
		_iter_end_20c323d2b:;
	};
}



inline void _1ea7257c2_funcDecls(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea72410b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>([=](jule::Ptr<_215e1d08c_Package>* _77235_pkg) mutable -> void {
		_1ea727ebc_iterFiles(_77235_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>([=](jule::Ptr<_215e89647_SymbolTable>* _77336_file) mutable -> void {
			{
				auto expr = &((*(_77336_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c32726e:;
				if (it != expr_end) {
					jule::Ptr<_215dcd24a_Fn> _77429_f = *it;
					{
						if (((!(_77429_f.get()._field_CppLinked)) && (_77429_f.get()._field_Token != nullptr))) {
							_1ea6eb534_pushResult(_self_, &(_77429_f));
							_1ea725690_funcDecl(_self_, &(_77429_f), false);
						};
					}
					_iter_next_20c32726e:;
					++it;
					goto _iter_begin_20c32726e;
				}
				_iter_end_20c32726e:;
			};
		}));
	}));
}



inline void _1ea725904_traitDataTypes(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea72410b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>([=](jule::Ptr<_215e1d08c_Package>* _78535_pkg) mutable -> void {
		_1ea727ebc_iterFiles(_78535_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>([=](jule::Ptr<_215e89647_SymbolTable>* _78636_file) mutable -> void {
			{
				auto expr = &((*(_78636_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c32a1c8:;
				if (it != expr_end) {
					jule::Ptr<_215dddc1c_Trait> _78729_t = *it;
					{
						if ((_78729_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1ea6a5037_write(_self_, jule::Str("struct ", 7));
						_1ea6a5037_write(_self_, static__1ea67da49_traitDecl(_78729_t));
						_1ea6a5037_write(_self_, jule::Str("MptrData", 8));
						_1ea6a5037_write(_self_, jule::Str(" {\n", 3));
						_1ea6e906a_addIndent(_self_);
						{
							auto expr = &(_78729_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_20c32c31d:;
							if (it != expr_end) {
								jule::Ptr<_215dcd24a_Fn> _79633_m = *it;
								{
									jule::Ptr<_215dcea10_FnIns> _79733_ins = _79633_m.get()._field_Instances[0LL];;
									jule::Ptr<_215dcdb41_ParamIns> _79833_p = _79733_ins.get()._field_Params[0LL];;
									_79833_p.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_78729_t, 2)});
									{
										auto expr = _79733_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										auto expr_end = expr.end();
										_iter_begin_20c32e122:;
										if (it != expr_end) {
											jule::I64 _80230_i = it - expr.begin();
											jule::Ptr<_215dcdb41_ParamIns> _80237_ip = *it;
											{
												if (_22e0acc2a_IsAnonIdent(_80237_ip.get()._field_Decl.get()._field_Ident)) {
													_80237_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _2146edd36_Itoa(_80230_i));
												};
											}
											_iter_next_20c32e122:;
											++it;
											_80230_i++;
											goto _iter_begin_20c32e122;
										}
										_iter_end_20c32e122:;
									};
									if ((!(_22bc32d47_Production))) {
										_79733_ins.get()._field_Params = jule::alloc_for_append(_79733_ins.get()._field_Params,1);_79733_ins.get()._field_Params.__push(jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_1ea728e8a_customType>(_1ea728e8a_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1ea6eb534_pushResult(_self_, &(_79633_m));
									_1ea725690_funcDecl(_self_, &(_79633_m), true);
								}
								_iter_next_20c32c31d:;
								++it;
								goto _iter_begin_20c32c31d;
							}
							_iter_end_20c32c31d:;
						};
						_1ea6e9587_doneIndent(_self_);
						_1ea6ecada_indent(_self_);
						_1ea6a5037_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_20c32a1c8:;
					++it;
					goto _iter_begin_20c32a1c8;
				}
				_iter_end_20c32a1c8:;
			};
		}));
	}));
}



inline void _1ea725a36_paramIns(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dcdb41_ParamIns>* _83033_p) {
	_1ea6a5037_write(_self_, _1ea72dc5e_paramIns(_self_.get()._field_tc.ptr(), _83033_p));
	_1ea6a5037_write(_self_, jule::Str(" ", 1));
	_1ea6a5037_write(_self_, static__1ea67dce1_param(&((*(_83033_p)).get()._field_Decl)));
}



inline void _1ea725b68_paramsIns(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>* _83634_params) {
	if (((*(_83634_params)).len() == 0LL)) {
		_1ea6a5037_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1ea6a5037_write(_self_, jule::Str("(", 1));
	{
		auto expr = _83634_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c338912:;
		if (it != expr_end) {
			jule::I64 _84214_i = it - expr->begin();
			jule::Ptr<_215dcdb41_ParamIns> _84221_p = *it;
			{
				_1ea725a36_paramIns(_self_, &(_84221_p));
				if ((((*(_83634_params)).len() - _84214_i) > 1LL)) {
					_1ea6a5037_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_20c338912:;
			++it;
			_84214_i++;
			goto _iter_begin_20c338912;
		}
		_iter_end_20c338912:;
	};
	_1ea6a5037_write(_self_, jule::Str(")", 1));
}



inline void _1ea725c9a_varInitExpr(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215e41aa5_Var>* _85136_v, jule::Fn<void(void)> _85145_init) {
	if ((*(_85136_v)).get()._field_Statically) {
		_1ea6a5037_write(_self_, jule::Str("static ", 7));
	};
	_1ea6a5037_write(_self_, _1ea72ecb5_kind(_self_.get()._field_tc.ptr(), (*(_85136_v)).get()._field_Kind.get()._field_Kind));
	_1ea6a5037_write(_self_, jule::Str(" ", 1));
	if ((*(_85136_v)).get()._field_Reference) {
		_1ea6a5037_write(_self_, jule::Str("*", 1));
	};
	_1ea6a5037_write(_self_, static__1ea67e86e_var((*(_85136_v))));
	if ((_85145_init != nullptr)) {
		_1ea6a5037_write(_self_, jule::Str(" = ", 3));
		_85145_init();
	};
	_1ea6a5037_write(_self_, jule::Str(";", 1));
}



inline void _1ea725dcc_var(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215e41aa5_Var> _86927_v) {
	if (_22e0ac983_IsIgnoreIdent(_86927_v.get()._field_Ident)) {
		return;;
	};
	if (((_86927_v.get()._field_Value != nullptr) && (_86927_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86927_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_86927_v.get()._field_Reference) {
				_1ea725c9a_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ea6a5037_write(_self_, jule::Str("&(", 2));
					_1ea675d60_model(_self_.get()._field_ec, _86927_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1ea6a5037_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1ea725c9a_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1ea66c4a5_possibleRefExpr(_self_.get()._field_ec, _86927_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1ea725c9a_varInitExpr(_self_, &(_86927_v), nullptr);
		return;;
	};
	if (_86927_v.get()._field_Reference) {
		_1ea725c9a_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ea6a5037_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1ea736816_shouldInitialized(&(_86927_v.get()._field_Kind.get()._field_Kind))) {
		_1ea725c9a_varInitExpr(_self_, &(_86927_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1ea6760d5_initExpr(_self_.get()._field_ec, _86927_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1ea725c9a_varInitExpr(_self_, &(_86927_v), nullptr);
}



inline void _1ea72600e_func(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dcd24a_Fn>* _90029_f) {
	{
		auto expr = &((*(_90029_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c345875:;
		if (it != expr_end) {
			jule::Ptr<_215dcea10_FnIns> _90121_ins = *it;
			{
				_1ea72555d_funcHead(_self_, &(_90121_ins), false);
				_1ea725b68_paramsIns(_self_, &(_90121_ins.get()._field_Params));
				_1ea6a5037_write(_self_, jule::Str(" ", 1));
				_1ea6668bc_funcScope(_self_.get()._field_sc, _90121_ins);
				if ((_90121_ins.get()._field_Scope != nullptr)) {
					_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_20c345875:;
			++it;
			goto _iter_begin_20c345875;
		}
		_iter_end_20c345875:;
	};
}



inline void _1ea726141_traitWrappers(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3479ba:;
		if (it != expr_end) {
			jule::Ptr<_1ea685666_traitHash> _91321_hash = *it;
			{
				{
					auto expr = &(_91321_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20c3482b2:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _91425_m = *it;
						{
							jule::Str _91521_ident = _91425_m.get()._field_Ident;;
							_91425_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_91425_m.get()._field_Ident=((_91521_ident + jule::Str("_", 1)) + _2146edd36_Itoa(_91321_hash.get()._field_i));
							_1ea72600e_func(_self_, &(_91425_m));
							_91425_m.get()._field_Ident=_91521_ident;
							if ((_91321_hash.get()._field_s == nullptr)) {
								if (_22bc32d47_Production) {
									_1ea6a5037_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1ea6a5037_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_20c3482b2;
							};
							jule::Bool _93121_ptr = (!(_215d8d46e_IsRef(_91425_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_215dcd24a_Fn> _93325_sm = _215da22da_FindMethod(_91321_hash.get()._field_s.ptr(), _91425_m.get()._field_Ident, false);;
							if (((_93325_sm == nullptr) || (_93325_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_20c3482b2;
							};
							_1ea6e906a_addIndent(_self_);
							_1ea6a5037_write(_self_, jule::Str("{\n", 2));
							_1ea6ecada_indent(_self_);
							if ((_93325_sm.get()._field_Exceptional || (!(_215d7ce64_IsVoid(_93325_sm.ptr()))))) {
								_1ea6a5037_write(_self_, jule::Str("return ", 7));
							};
							_1ea6a5037_write(_self_, static__1ea67d50a_func(&(_93325_sm)));
							_1ea6a5037_write(_self_, jule::Str("(", 1));
							if (_93121_ptr) {
								_1ea6a5037_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1ea6a5037_write(_self_, _1ea72d335_structureIns(_self_.get()._field_tc.ptr(), _91321_hash.get()._field_s));
								_1ea6a5037_write(_self_, jule::Str(">(", 2));
								if ((!(_22bc32d47_Production))) {
									_1ea6a5037_write(_self_, jule::Str("_00___file", 10));
								};
								_1ea6a5037_write(_self_, jule::Str(")", 1));
							} else {
								_1ea6a5037_write(_self_, jule::Str("_self_.data.as<", 15));
								_1ea6a5037_write(_self_, _1ea72d027_structure(_self_.get()._field_tc.ptr(), _93325_sm.get()._field_Owner));
								_1ea6a5037_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _91425_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_20c34eede:;
								if (it != expr_end) {
									jule::Ptr<_215dcd05d_Param> _95924_mp = *it;
									{
										_1ea6a5037_write(_self_, jule::Str(", ", 2));
										_1ea6a5037_write(_self_, static__1ea67dce1_param(&(_95924_mp)));
									}
									_iter_next_20c34eede:;
									++it;
									goto _iter_begin_20c34eede;
								}
								_iter_end_20c34eede:;
							};
							_1ea6a5037_write(_self_, jule::Str(");\n}\n", 5));
							_1ea6e9587_doneIndent(_self_);
						}
						_iter_next_20c3482b2:;
						++it;
						goto _iter_begin_20c3482b2;
					}
					_iter_end_20c3482b2:;
				};
			}
			_iter_next_20c3479ba:;
			++it;
			goto _iter_begin_20c3479ba;
		}
		_iter_end_20c3479ba:;
	};
}



inline void _1ea726273_traitDatas(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	jule::Ptr<_215dddc1c_Trait> _97017_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c347e3d:;
		if (it != expr_end) {
			jule::Ptr<_1ea685666_traitHash> _97121_hash = *it;
			{
				jule::Str _97217_ident = static__1ea67da49_traitDecl(_97121_hash.get()._field_t);;
				if ((_97121_hash.get()._field_t != _97017_old)) {
					if ((_97017_old != nullptr)) {
						_1ea6e9587_doneIndent(_self_);
						_1ea6ecada_indent(_self_);
						_1ea6a5037_write(_self_, jule::Str("};\n", 3));
					};
					_1ea6a5037_write(_self_, jule::Str("static ", 7));
					_1ea6a5037_write(_self_, _97217_ident);
					_1ea6a5037_write(_self_, jule::Str("MptrData ", 9));
					_1ea6a5037_write(_self_, _97217_ident);
					_1ea6a5037_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_97017_old=_97121_hash.get()._field_t;
					_1ea6e906a_addIndent(_self_);
				};
				_1ea6ecada_indent(_self_);
				_1ea6a5037_write(_self_, jule::Str("{\n", 2));
				_1ea6e906a_addIndent(_self_);
				{
					auto expr = &(_97121_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20c357c61:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _99025_m = *it;
						{
							jule::Str _99121_mIdent = static__1ea67d50a_func(&(_99025_m));;
							_1ea6ecada_indent(_self_);
							_1ea6a5037_write(_self_, jule::Str(".", 1));
							_1ea6a5037_write(_self_, _99121_mIdent);
							_1ea6a5037_write(_self_, jule::Str("=", 1));
							_1ea6a5037_write(_self_, _99121_mIdent);
							_1ea6a5037_write(_self_, jule::Str("_", 1));
							_1ea6a5037_write(_self_, _2146edd36_Itoa(_97121_hash.get()._field_i));
							_1ea6a5037_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_20c357c61:;
						++it;
						goto _iter_begin_20c357c61;
					}
					_iter_end_20c357c61:;
				};
				_1ea6e9587_doneIndent(_self_);
				_1ea6ecada_indent(_self_);
				_1ea6a5037_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_20c347e3d:;
			++it;
			goto _iter_begin_20c347e3d;
		}
		_iter_end_20c347e3d:;
	};
	if ((_97017_old != nullptr)) {
		_1ea6e9587_doneIndent(_self_);
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1ea7263a5_globals(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c35bccb:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _101321_v = *it;
			{
				_1ea6a5037_write(_self_, _1ea72ecb5_kind(_self_.get()._field_tc.ptr(), _101321_v.get()._field_Kind.get()._field_Kind));
				_1ea6a5037_write(_self_, jule::Str(" ", 1));
				_1ea6a5037_write(_self_, static__1ea67e86e_var(_101321_v));
				_1ea6a5037_write(_self_, jule::Str(" = ", 3));
				_1ea675d60_model(_self_.get()._field_ec, _101321_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1ea6a5037_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_20c35bccb:;
			++it;
			goto _iter_begin_20c35bccb;
		}
		_iter_end_20c35bccb:;
	};
}



inline void _1ea7264d7_decls(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea724370_traitDecls(_self_);
	_1ea7245d4_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1ea7252e9_structureDecls(_self_);
	_1ea7257c2_funcDecls(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_1ea725904_traitDataTypes(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_1ea726141_traitWrappers(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_1ea726273_traitDatas(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1ea7263a5_globals(_self_);
}



inline void _1ea726619_structureMethods(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _104041_s) {
	{
		auto expr = &((*(_104041_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3629c4:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _104121_f = *it;
			{
				_1ea72600e_func(_self_, &(_104121_f));
				_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_20c3629c4:;
			++it;
			goto _iter_begin_20c3629c4;
		}
		_iter_end_20c3629c4:;
	};
}



inline void _1ea72674b_structureDeriveDefs(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _104744_s) {
	if (_215d90d12_IsDerives((*(_104744_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1ea6a5037_write(_self_, _1ea679380_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_104744_s)).get()._field_Decl)));
		_1ea6a5037_write(_self_, jule::Str("{\n", 2));
		_1ea6e906a_addIndent(_self_);
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, _1ea72d335_structureIns(_self_.get()._field_tc.ptr(), (*(_104744_s))));
		_1ea6a5037_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_104744_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c365b4d:;
			if (it != expr_end) {
				jule::Ptr<_215dc6ebe_FieldIns> _105520_f = *it;
				{
					jule::Str _105621_ident = static__1ea67e5c7_field(&(_105520_f.get()._field_Decl));;
					_1ea6ecada_indent(_self_);
					_1ea6a5037_write(_self_, jule::Str("clone.", 6));
					_1ea6a5037_write(_self_, _105621_ident);
					_1ea6a5037_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1ea6a5037_write(_self_, _105621_ident);
					_1ea6a5037_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_20c365b4d:;
				++it;
				goto _iter_begin_20c365b4d;
			}
			_iter_end_20c365b4d:;
		};
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, jule::Str("return clone;\n", 14));
		_1ea6e9587_doneIndent(_self_);
		_1ea6a5037_write(_self_, jule::Str("}", 1));
	};
}



inline void _1ea72687d_structureOstream(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _107141_s) {
	_1ea6ecada_indent(_self_);
	_1ea6a5037_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1ea6a5037_write(_self_, static__1ea67e330_structureIns(_107141_s));
	_1ea6a5037_write(_self_, jule::Str(" _Src) {\n", 9));
	_1ea6e906a_addIndent(_self_);
	_1ea6ecada_indent(_self_);
	jule::Ptr<_215dcd24a_Fn> _107917_fts = _215da22da_FindMethod((*(_107141_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__215e4326b_Str(_107917_fts)) {
		_1ea6a5037_write(_self_, jule::Str("_Stream << ", 11));
		_1ea6a5037_write(_self_, static__1ea67d50a_func(&(_107917_fts)));
		_1ea6a5037_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1ea6a5037_write(_self_, jule::Str("_Stream << \"", 12));
		_1ea6a5037_write(_self_, (*(_107141_s)).get()._field_Decl.get()._field_Ident);
		_1ea6a5037_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_107141_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c36cc10:;
			if (it != expr_end) {
				jule::I64 _108918_i = it - expr->begin();
				jule::Ptr<_215dc6ebe_FieldIns> _108925_f = *it;
				{
					_1ea6ecada_indent(_self_);
					_1ea6a5037_write(_self_, jule::Str("_Stream << \"", 12));
					_1ea6a5037_write(_self_, _108925_f.get()._field_Decl.get()._field_Ident);
					_1ea6a5037_write(_self_, jule::Str(":", 1));
					jule::Ptr<_215dc71ab_StructIns> _109621_strct = _215ebdbdc_Struct(_108925_f.get()._field_Kind.ptr());;
					if ((((_109621_strct != nullptr) && (_109621_strct.get()._field_Decl != nullptr)) && _109621_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1ea6a5037_write(_self_, jule::Str(" cpp.", 5));
						_1ea6a5037_write(_self_, static__1ea67e5c7_field(&(_108925_f.get()._field_Decl)));
						_1ea6a5037_write(_self_, jule::Str("\"", 1));
					} else {
						_1ea6a5037_write(_self_, jule::Str("\" << _Src.", 10));
						_1ea6a5037_write(_self_, static__1ea67e5c7_field(&(_108925_f.get()._field_Decl)));
					};
					if (((_108918_i + 1LL) < (*(_107141_s)).get()._field_Fields.len())) {
						_1ea6a5037_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1ea6a5037_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_20c36cc10:;
				++it;
				_108918_i++;
				goto _iter_begin_20c36cc10;
			}
			_iter_end_20c36cc10:;
		};
		_1ea6ecada_indent(_self_);
		_1ea6a5037_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1ea6ecada_indent(_self_);
	_1ea6a5037_write(_self_, jule::Str("return _Stream;\n", 16));
	_1ea6e9587_doneIndent(_self_);
	_1ea6a5037_write(_self_, jule::Str("}", 1));
}



inline void _1ea726a48_structureIns(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc71ab_StructIns>* _112237_s) {
	_1ea726619_structureMethods(_self_, _112237_s);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_1ea72674b_structureDeriveDefs(_self_, _112237_s);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	_1ea72687d_structureOstream(_self_, _112237_s);
}



inline void _1ea726cbd_structure(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215dc6cd2_Struct>* _113034_s) {
	{
		auto expr = &((*(_113034_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c3757ea:;
		if (it != expr_end) {
			jule::Ptr<_215dc71ab_StructIns> _113121_ins = *it;
			{
				_1ea726a48_structureIns(_self_, &(_113121_ins));
				_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_20c3757ea:;
			++it;
			goto _iter_begin_20c3757ea;
		}
		_iter_end_20c3757ea:;
	};
}



inline void _1ea726e99_structures(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c376a0a:;
		if (it != expr_end) {
			jule::Ptr<_215dc6cd2_Struct> _113821_s = *it;
			{
				if ((_113821_s.get()._field_Token != nullptr)) {
					_1ea726cbd_structure(_self_, &(_113821_s));
					_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_20c376a0a:;
			++it;
			goto _iter_begin_20c376a0a;
		}
		_iter_end_20c376a0a:;
	};
}



inline void _1ea727175_funcs(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea72410b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>([=](jule::Ptr<_215e1d08c_Package>* _114735_pkg) mutable -> void {
		_1ea727ebc_iterFiles(_114735_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>([=](jule::Ptr<_215e89647_SymbolTable>* _114836_file) mutable -> void {
			{
				auto expr = &((*(_114836_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_20c379b51:;
				if (it != expr_end) {
					jule::Ptr<_215dcd24a_Fn> _114929_f = *it;
					{
						if (((!(_22bc3240c_Test)) && _1ea73656e_hasDirective(&(_114929_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_20c379b51;
						};
						if (((!(_114929_f.get()._field_CppLinked)) && (_114929_f.get()._field_Token != nullptr))) {
							_1ea72600e_func(_self_, &(_114929_f));
							_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_20c379b51:;
					++it;
					goto _iter_begin_20c379b51;
				}
				_iter_end_20c379b51:;
			};
		}));
	}));
}



inline void _1ea7273ea_pushInit(jule::Ptr<_1ea723407_ObjectCoder> _self_, jule::Ptr<_215e1d08c_Package>* _116233_pkg) {
	_1ea727ebc_iterFiles(_116233_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)>([=](jule::Ptr<_215e89647_SymbolTable>* _116332_file) mutable -> void {
		{
			auto expr = &((*(_116332_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c37c3a1:;
			if (it != expr_end) {
				jule::Ptr<_215dcd24a_Fn> _116420_f = *it;
				{
					if (_116420_f.get()._field_Ident.equal("init", 4)) {
						_1ea6ecada_indent(_self_);
						_1ea6a5037_write(_self_, static__1ea67d50a_func(&(_116420_f)));
						_1ea6a5037_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_20c37c3a1:;
				++it;
				goto _iter_begin_20c37c3a1;
			}
			_iter_end_20c37c3a1:;
		};
	}));
}



inline void _1ea7275c6_initCaller(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea6a5037_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1ea6e906a_addIndent(_self_);
	_1ea72410b_iterPackages(_self_, jule::Fn<void(jule::Ptr<_215e1d08c_Package>*)>([=](jule::Ptr<_215e1d08c_Package>* _117735_pkg) mutable -> void {
		_1ea7273ea_pushInit(_self_, _117735_pkg);
	}));
	_1ea6e9587_doneIndent(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n}", 2));
}



inline void _1ea7277a2_end(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea6a5037_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22bc3240c_Test) {
		_1ea6a5037_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1ea6a5037_write(_self_, jule::Str("entry_point();", 14));
	};
	_1ea6a5037_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ea72797d_serializeHead(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea723ec9_prepareStructures(_self_);
	_1ea72423d_buildTraitMap(_self_);
	_1ea723b33_head(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n", 1));
	_1ea7264d7_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _121221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20c383a5b:;
			if (it != expr_end) {
				jule::Str _121320_decl = *it;
				{
					_121221_head+=_121320_decl;
					_self_.get()._field_declPos+=_121320_decl.len();
				}
				_iter_next_20c383a5b:;
				++it;
				goto _iter_begin_20c383a5b;
			}
			_iter_end_20c383a5b:;
		};
		_121221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_121221_head;
	};
	_1ea6a5037_write(_self_, jule::Str("\n", 1));
	_1ea726e99_structures(_self_);
	_1ea727175_funcs(_self_);
	_1ea7275c6_initCaller(_self_);
	_1ea6a5037_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _122821_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_122821_head+=_self_.get()._field_anyObj;
		_122821_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_122821_head;
	};
}



inline void _1ea727b59_Serialize(jule::Ptr<_1ea723407_ObjectCoder> _self_) {
	_1ea72797d_serializeHead(_self_);
	_1ea7277a2_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ea723407_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ea02a913_ObjectDeadCode> static__1ea02addb_new(jule::Ptr<_22e2caed1_IR>* _3424_ir) {
	return jule::new_ptr<_1ea02a913_ObjectDeadCode>(_1ea02a913_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _20bcec96a_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dddc1c_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_215dddc1c_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_20bcee6e7:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_20bcee40b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bceedce:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_20bceedce:;
			++it;
			_5213_i++;
			goto _iter_begin_20bceedce;
		}
		_iter_end_20bceedce:;
	};
	return false;;
}

inline jule::Bool _20bd026a6_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dcea10_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_215dcea10_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_20bd04950:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_20bd04895:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd05225:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_20bd05225:;
			++it;
			_5213_i++;
			goto _iter_begin_20bd05225;
		}
		_iter_end_20bd05225:;
	};
	return false;;
}

inline jule::Bool _20bd0a25d_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dc71ab_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_215dc71ab_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_20bd0d30a:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_20bd0d085:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd0d3d7:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_20bd0d3d7:;
			++it;
			_5213_i++;
			goto _iter_begin_20bd0d3d7;
		}
		_iter_end_20bd0d3d7:;
	};
	return false;;
}

inline jule::Bool _20bd10c47_isLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215e41aa5_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_20bd127b5:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_20bd12694:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd13024:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_20bd13024:;
			++it;
			_5213_i++;
			goto _iter_begin_20bd13024;
		}
		_iter_end_20bd13024:;
	};
	return false;;
}



inline void _20bceccbc_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dddc1c_Trait> _6035_t) {
	{
		
{
			_case_begin_20bd017c6:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_20bd01474:;
	};
}

inline void _20bd0329a_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dcea10_FnIns> _6035_t) {
	{
		
{
			_case_begin_20bd0729e:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_20bd07029:;
	};
}

inline void _20bd09548_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dc71ab_StructIns> _6035_t) {
	{
		
{
			_case_begin_20bd0ac42:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_20bd0a956:;
	};
}

inline void _20bd11099_pushLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215e41aa5_Var> _6035_t) {
	{
		
{
			_case_begin_20bd14bd5:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_20bd14b08:;
	};
}



inline void _1ea05d0b6_setReferencesAsLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215dd2969_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _215dd3052_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _215dd3360_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_20bceb56d:;
					{
						jule::Ptr<_215dddc1c_Trait> _8225_t = _7921_ref.cast_ptr<_215dddc1c_Trait>(&__jule_any_type10);;
						if (_20bcec96a_isLive(_self_, &(_8225_t))) {
							goto _iter_next_20bceaa9a;
						};
						_20bceccbc_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_20bcee98e:;
							if (it != expr_end) {
								jule::Ptr<_215dcd24a_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_20bced32d:;
										if (it != expr_end) {
											jule::Ptr<_215dcea10_FnIns> _8833_mins = *it;
											{
												if (_20bd026a6_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_20bced32d;
												};
												_20bd0329a_pushLive(_self_, _8833_mins);
												_1ea05d0b6_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_20bced32d:;
											++it;
											goto _iter_begin_20bced32d;
										}
										_iter_end_20bced32d:;
									};
								}
								_iter_next_20bcee98e:;
								++it;
								goto _iter_begin_20bcee98e;
							}
							_iter_end_20bcee98e:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_20bceb5d4:;
					{
						jule::Ptr<_215dcea10_FnIns> _9725_f = _7921_ref.cast_ptr<_215dcea10_FnIns>(&__jule_any_type7);;
						if (_20bd026a6_isLive(_self_, &(_9725_f))) {
							goto _match_end_20bceb705;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_20bd0a25d_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_20bd09548_pushLive(_self_, _9725_f.get()._field_Owner);
								_1ea05d0b6_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_20bd0329a_pushLive(_self_, _9725_f);
						_1ea05d0b6_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_20bceb815:;
					{
						jule::Ptr<_215e41aa5_Var> _11025_v = _7921_ref.cast_ptr<_215e41aa5_Var>(&__jule_any_type8);;
						if (_20bd10c47_isLive(_self_, &(_11025_v))) {
							goto _match_end_20bceb705;
						};
						_20bd11099_pushLive(_self_, _11025_v);
						_1ea05d0b6_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_20bceb87b:;
					{
						jule::Ptr<_215dc71ab_StructIns> _11725_s = _7921_ref.cast_ptr<_215dc71ab_StructIns>(&__jule_any_type9);;
						if (_20bd0a25d_isLive(_self_, &(_11725_s))) {
							goto _match_end_20bceb705;
						};
						_20bd09548_pushLive(_self_, _11725_s);
						_1ea05d0b6_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_20bd17d1a:;
							if (it != expr_end) {
								jule::Ptr<_215dcd24a_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_20bd18513:;
										if (it != expr_end) {
											jule::Ptr<_215dcea10_FnIns> _12433_mins = *it;
											{
												if (_20bd026a6_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_20bd18513;
												};
												_20bd0329a_pushLive(_self_, _12433_mins);
												_1ea05d0b6_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_20bd18513:;
											++it;
											goto _iter_begin_20bd18513;
										}
										_iter_end_20bd18513:;
									};
								}
								_iter_next_20bd17d1a:;
								++it;
								goto _iter_begin_20bd17d1a;
							}
							_iter_end_20bd17d1a:;
						};
					}
				}
				_match_end_20bceb705:;
			};
		}
	_iter_next_20bceaa9a:;
	}
	_iter_end_20bceaa9a:;;
}



inline void _1ea05d33b_inits(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215e1d08c_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bceae74:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bd1aa76:;
					if (it != expr_end) {
						jule::Ptr<_215dcd24a_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_215dcea10_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1ea05d0b6_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_20bd1aa76:;
						++it;
						goto _iter_begin_20bd1aa76;
					}
					_iter_end_20bd1aa76:;
				};
			}
			_iter_next_20bceae74:;
			++it;
			goto _iter_begin_20bceae74;
		}
		_iter_end_20bceae74:;
	};
}



inline void _1ea05d5b1_collectLivePackage(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215e1d08c_Package>* _14843_pkg) {
	_1ea05d33b_inits(_self_, _14843_pkg);
	if (_22bc3240c_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_20bd1ce41:;
			if (it != expr_end) {
				jule::Ptr<_215e89647_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_20bd1d76b:;
						if (it != expr_end) {
							jule::Ptr<_215dcd24a_Fn> _15529_f = *it;
							{
								if (_1ea0605c4_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_215dcea10_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1ea05d0b6_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_20bd1d76b:;
							++it;
							goto _iter_begin_20bd1d76b;
						}
						_iter_end_20bd1d76b:;
					};
				}
				_iter_next_20bd1ce41:;
				++it;
				goto _iter_begin_20bd1ce41;
			}
			_iter_end_20bd1ce41:;
		};
	};
}



inline void _1ea05d78c_collectLive(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd1cdec:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1ea05d5b1_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_20bd1cdec:;
			++it;
			goto _iter_begin_20bd1cdec;
		}
		_iter_end_20bd1cdec:;
	};
	_1ea05d5b1_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_215dcd24a_Fn> _17517_main = _215e1e841_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_215dcea10_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1ea05d0b6_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1ea05da12_removeDeadGlobals(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_215e41aa5_Var>>* _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_215e41aa5_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_20bd10c47_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_20bd232ba;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_20bd232ba:;
	}
	_iter_end_20bd232ba:;;
}



inline void _1ea05dc87_removeDeadFns(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_215dcd24a_Fn>>* _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_215dcd24a_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_215dcea10_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_20bd026a6_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_20bd2670d;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_20bd2670d:;
			}
			_iter_end_20bd2670d:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_20bd24b18;
			};
			(_19417_i)++;
		}
	_iter_next_20bd24b18:;
	}
	_iter_end_20bd24b18:;;
}



inline void _1ea05e00c_removeDeadStructs(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_215dc6cd2_Struct>>* _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_215dc6cd2_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_215dc71ab_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1ea05dc87_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _20bd0a25d_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_20bd2a712;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_20bd2a712:;
			}
			_iter_end_20bd2a712:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_20bd295e0;
			};
			(_21517_i)++;
		}
	_iter_next_20bd295e0:;
	}
	_iter_end_20bd295e0:;;
}



inline void _1ea05e282_removeDeadTraits(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_215dddc1c_Trait>>* _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_215dddc1c_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_20bcec96a_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_20bd2cdda;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_215dc6cd2_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_20bd2eb45;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_20bd2eb45:;
			}
			_iter_end_20bd2eb45:;;
			(_23717_i)++;
		}
	_iter_next_20bd2cdda:;
	}
	_iter_end_20bd2cdda:;;
}



inline void _1ea05e507_removeDeadsFile(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215e89647_SymbolTable>* _25740_file) {
	_1ea05dc87_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1ea05e00c_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1ea05e282_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1ea05da12_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1ea05e77c_removeDeadsPackage(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_, jule::Ptr<_215e1d08c_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd34485:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _26521_file = *it;
			{
				_1ea05e507_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_20bd34485:;
			++it;
			goto _iter_begin_20bd34485;
		}
		_iter_end_20bd34485:;
	};
}



inline void _1ea05e958_removeDeads(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd35354:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1ea05e77c_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_20bd35354:;
			++it;
			goto _iter_begin_20bd35354;
		}
		_iter_end_20bd35354:;
	};
	_1ea05e77c_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1ea05eb34_elimanate(jule::Ptr<_1ea02a913_ObjectDeadCode> _self_) {
	_1ea05d78c_collectLive(_self_);
	_1ea05e958_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ea02a913_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_22e2caed1_IR__jule_tuple_s_22dbec89d_Log static__1e9c9dec2_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_22e2caed1_IR__jule_tuple_s_22dbec89d_Log __jule_func_result;
	jule::Ptr<_1e9d3cbcb_JuleImporter> _2817_importer = static__22e31dbc2_New(_1e9dd8d21_buildCompileInfo());;
	jule::Slice<jule::Ptr<_215d761c1_Ast>> _2918_files;;
	jule::Slice<_22dbec89d_Log> _2929_logs;;
	({
		__jule_tuple_sx_215d761c1_Ast__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9c15279_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_215e1d08c_Package> _3918_pkg;;
	({
		__jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log __jule_assign_result = _215ed7871_AnalyzePackage(_2918_files, jule::Trait<_215e174b5_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_22e2caed1_IR> _4417_ir = jule::new_ptr<_22e2caed1_IR>(_22e2caed1_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_22e330189_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1e9d6b204_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1e9cc1654_appendStructs(_22e2caed1_IR* _self_, jule::Ptr<_215e1d08c_Package>* _5633_p, jule::Slice<jule::Ptr<_215dc6cd2_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcb4da5:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bcb56e1:;
					if (it != expr_end) {
						jule::Ptr<_215dc6cd2_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_20bcb56e1:;
						++it;
						goto _iter_begin_20bcb56e1;
					}
					_iter_end_20bcb56e1:;
				};
			}
			_iter_next_20bcb4da5:;
			++it;
			goto _iter_begin_20bcb4da5;
		}
		_iter_end_20bcb4da5:;
	};
}



inline jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _1e9cd11be_GetAllStructures(_22e2caed1_IR* _self_) {
	jule::Slice<jule::Ptr<_215dc6cd2_Struct>> _6917_buffer = nullptr;;
	_1e9cc1654_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcb558c:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1e9cc1654_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_20bcb558c:;
			++it;
			goto _iter_begin_20bcb558c;
		}
		_iter_end_20bcb558c:;
	};
	return _6917_buffer;;
}



inline void _1e9d1e3d8_appendGlobals(_22e2caed1_IR* _self_, jule::Ptr<_215e1d08c_Package>* _7933_p, jule::Slice<jule::Ptr<_215e41aa5_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcb7cdc:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bcb8617:;
					if (it != expr_end) {
						jule::Ptr<_215e41aa5_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_20bcb8617:;
						++it;
						goto _iter_begin_20bcb8617;
					}
					_iter_end_20bcb8617:;
				};
			}
			_iter_next_20bcb7cdc:;
			++it;
			goto _iter_begin_20bcb7cdc;
		}
		_iter_end_20bcb7cdc:;
	};
}



inline jule::Slice<jule::Ptr<_215e41aa5_Var>> _1e9d33265_GetAllGlobals(_22e2caed1_IR* _self_) {
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _9217_buffer = nullptr;;
	_1e9d1e3d8_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcba00e:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1e9d1e3d8_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_20bcba00e:;
			++it;
			goto _iter_begin_20bcba00e;
		}
		_iter_end_20bcba00e:;
	};
	return _9217_buffer;;
}



inline void _1e9d5c49d_Order(_22e2caed1_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1e9cd11be_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1e9d33265_GetAllGlobals(_self_);
	static__22e30a043_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__22e33a53a_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _22e2caed1_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _215d9ca11_Str(_215dc71ab_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebb07158:;
			if (it != expr_end) {
				jule::Ptr<_215eb8bc6_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_215eba7ee_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1ebb07158:;
				++it;
				goto _iter_begin_1ebb07158;
			}
			_iter_end_1ebb07158:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _215d9db66_Equal(jule::Ptr<_215dc71ab_StructIns> _self_, jule::Ptr<_215eba403_TypeKind> _26521_other) {
	jule::Ptr<_215dc71ab_StructIns> _26613_s = _215ebdbdc_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_215ebab0c_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1ebb0a722:;
	}
	_iter_end_1ebb0a722:;;
	return true;;
}



inline jule::Bool _215da0eba_Same(_215dc71ab_StructIns* _self_, jule::Ptr<_215dc71ab_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb0caa9:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_215eb8bc6_InsGeneric> *_29716_g = it;
			{
				if ((!(_215ebab0c_Equal((*(_29716_g)).get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1ebb0caa9:;
			++it;
			_29713_i++;
			goto _iter_begin_1ebb0caa9;
		}
		_iter_end_1ebb0caa9:;
	};
	return true;;
}



inline jule::Ptr<_215dcd24a_Fn> _215da22da_FindMethod(_215dc71ab_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb0e47e:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1ebb0e47e:;
			++it;
			goto _iter_begin_1ebb0e47e;
		}
		_iter_end_1ebb0e47e:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dc6ebe_FieldIns> _215d84256_FindField(_215dc71ab_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb1064a:;
		if (it != expr_end) {
			jule::Ptr<_215dc6ebe_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1ebb1064a:;
			++it;
			goto _iter_begin_1ebb1064a;
		}
		_iter_end_1ebb1064a:;
	};
	return nullptr;;
}



inline jule::Ptr<_215e41aa5_Var> _215d90273_FindStatic(_215dc71ab_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb10bbc:;
		if (it != expr_end) {
			jule::Ptr<_215e41aa5_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1ebb10bbc:;
			++it;
			goto _iter_begin_1ebb10bbc;
		}
		_iter_end_1ebb10bbc:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _215dc71ab_StructIns _Src) {
	_Stream << _215d9ca11_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_22dc83956_Cmd> static__22dc83da7_New(jule::Str _2619_path) {
	return jule::new_ptr<_22dc83956_Cmd>(_22dc83956_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _22dc84083_Spawn(_22dc83956_Cmd* _self_) {
	({
		auto except = _22dcbc275_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _22dc8425e_Kill(_22dc83956_Cmd* _self_) {
	({
		auto except = _22dcbc451_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22dc844c3_Wait(_22dc83956_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _22dcbc6b5_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _22dcbc275_spawn(_22dc83956_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:79:13"));;
	};
	jule::Str _8113_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8213_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8213_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type133));
	};
	if ((_22caa68ac_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
		_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type133));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1eb0d75e5:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type133));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1eb0d7507:;
			{
				_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				jule::Slice<jule::Str> _9721_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9721_args[0LL]=_8113_path;
				_9721_args=jule::append(_9721_args,(*(_self_))._field_Args);
				({
					auto except = _22dcbc000_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_22dcbbce1_execvp(&(_8113_path), &(_9721_args));
				jule::Str _10217_code = _22dcb91ea_Itoa(static_cast<jule::I64>(_22bcb9582_GetLastErrno()));;
				{
					_22caba151_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), (&(_10217_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10217_code.len())));
				};
				_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				_22dcbd8a3_Exit(1LL);
			}
		}
		else {
			_case_begin_1eb0d5192:;
			{
				_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				jule::Array<jule::U8,16> _10821_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10917_n = _22cab98e2_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])), (&(_10821_buf[0LL])), 16LLU);;
				_22cab9c66_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				if ((_10917_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11322_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22dc85419_AtoiBp((&(_10821_buf[0LL])), _10917_n);
						_11322_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_22dcbcdad_processErrorFromCode(_11322_code), &__jule_any_type133));
				};
			}
		}
		_match_end_1eb0d513c:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _22dcbc451_kill(_22dc83956_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:121:13"));;
	};
	if ((kill((*(_self_))._field_attrs._field_pid, 1LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22dcbd100_getLastProcessError(), &__jule_any_type133));
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22dcbc6b5_wait(_22dc83956_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:131:13"));;
	};
	jule::I64 _13317_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13317_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_22dcbd100_getLastProcessError(), &__jule_any_type133));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13317_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _22dc83956_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _22ca739bc_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _22ca881eb_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _22bcb9582_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _22caa68ac_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _22caa6bed_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _22caa70d8_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _22caa7429_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _22caa7902_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _22caa7b99_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _22caa7e41_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _22caa87c1_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _22caa8a68_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _22caa8d10_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _22cab9507_Seek(jule::I64 _159_handle, jule::I64 _1522_offset, jule::I64 _1535_origin) {
	return static_cast<jule::I64>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I64 _22cab98e2_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _22cab9c66_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _22caba151_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _22caba360_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _22bd10188_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _22bcdde8b_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _22cb738e1_getLastOsError(void) {
	jule::I64 _309_err = _22bcb9582_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ea80d8aa:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ea80d2b1:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1ea80d338:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1ea80d3b0:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ea80d5e1:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ea80d657:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ea80d6bd:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1ea80d107:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1ea80d0a2:;
	};
}



inline jule::Slice<jule::Str> _22cb74914_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _22cb74d87_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _22cb7574a_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _22cb7574a_getwd(void) {
	jule::U8* _1113_buff = _22caa7429_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_22cb738e1_getLastOsError(), &__jule_any_type134));
	};
	jule::Str _159_pwd = _22ca881eb_BytePtrToStr(_1113_buff);;
	{
		_22ca739bc_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _22da1d416_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22da834e2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22da8b82a_isExcludingLatin(_22da275eb_Letter, _7613_r);;
}



inline jule::Bool _22da8ac47_is16(jule::Slice<_22da89185_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1eae628d2:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_22da89185_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1eae628d2:;
				++it;
				_19313_i++;
				goto _iter_begin_1eae628d2;
			}
			_iter_end_1eae628d2:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_22da89185_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1eae623a4:;
	}
	_iter_end_1eae623a4:;;
	return false;;
}



inline jule::Bool _22da8b088_is32(jule::Slice<_22da89608_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1eae68c6d:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_22da89608_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1eae68c6d:;
				++it;
				_23013_i++;
				goto _iter_begin_1eae68c6d;
			}
			_iter_end_1eae68c6d:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_22da89608_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1eae65ab1:;
	}
	_iter_end_1eae65ab1:;;
	return false;;
}



inline jule::Bool _22da8b82a_isExcludingLatin(jule::Ptr<_22da89a7b_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22da89185_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _22da8ac47_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_22da89608_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _22da8b088_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _22da8bac2_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22da834e2__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22da8b82a_isExcludingLatin(_22da2db52_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _22db4b720_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _22db4a5ed_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_22db4ab81_acceptRange _1969_accept = _22db4ae8e_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22db4ba3e_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _22db4a5ed_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_22db4ab81_acceptRange _2439_accept = _22db4ae8e_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22db4bcd6_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_22db4d6ab_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1eaeaea2d;
			};
		}
	_iter_next_1eaeaea2d:;
	}
	_iter_end_1eaeaea2d:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _22db4ca84_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _22db4cdc5_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _22db4cdc5_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1eaec324a:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1eaec4e50:;
			{
				_41242_r=128LL;
				goto _case_begin_1eaec358b;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1eaec358b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1eaec2aeb:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1eaec2a96:;
	};
}



inline jule::I64 _22db4d414_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1eaecd497;
			};
			jule::U8 _48213_x = _22db4a5ed_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1eaecd497;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1eaecd497;
			};
			_22db4ab81_acceptRange _49213_accept = _22db4ae8e_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1eaecd497:;
	}
	_iter_end_1eaecd497:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22db4d6ab_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _22db7ae9c_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb003b3d:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1eb003b3d:;
			++it;
			_399_i++;
			goto _iter_begin_1eb003b3d;
		}
		_iter_end_1eb003b3d:;
	};
	return -1LL;;
}



inline jule::I64 _22db7b123_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1eb00602a:;
	}
	_iter_end_1eb00602a:;;
	return -1LL;;
}



inline jule::I64 _22db6a6d9_FindByteStr(jule::Str* _6417_s, jule::U8 _6425_b) {
	return static_cast<jule::I64>(_22db7ae9c_FindByte(_22bd10188_Stobs(_6417_s), _6425_b));;
}



inline jule::I64 _22db6aa2a_FindLastByteStr(jule::Str* _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_22db7b123_FindLastByte(_22bd10188_Stobs(_6921_s), _6929_b));;
}



inline jule::Str _22db52d86_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1eb019d63:;
	}
	_iter_end_1eb019d63:;;
	return _2013_ss;;
}



inline jule::Bool _22db56241_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1eb01cdbb:;
	}
	_iter_end_1eb01cdbb:;;
	return true;;
}



inline jule::Bool _22db524c3_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _22db56241_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _22db6ab90_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1eb01ede0:;
	}
	_iter_end_1eb01ede0:;;
	return true;;
}



inline jule::Bool _22db6ae48_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _22db6ab90_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _22db6b333_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_22db56241_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1eb023ec1:;
	}
	_iter_end_1eb023ec1:;;
	return -1LL;;
}



inline jule::I64 _22db6bb6e_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1eb026523;
					};
				}
			_iter_next_1eb027c83:;
			}
			_iter_end_1eb027c83:;;
			return _9413_j;;
		}
	_iter_next_1eb026523:;
	}
	_iter_end_1eb026523:;;
	return -1LL;;
}



inline jule::I64 _22db6beb0_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_22db6bb6e_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _22db6d258_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1eb0354dd:;
	}
	_iter_end_1eb0354dd:;;
	return -1LL;;
}



inline jule::I64 _22db6da94_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_22db6aa2a_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _22db6e8a8_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _22bd10188_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _22bd10188_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22db6d258_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1eb03ac74:;
	}
	_iter_end_1eb03ac74:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _22db700d4_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _22db6b333_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1eb042176;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1eb042176:;
	}
	_iter_end_1eb042176:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _22db70425_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_22db6b333_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _22db70de8_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_22db6e8a8_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _22db71239_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _22db6b333_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1eb047731;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1eb047731:;
	}
	_iter_end_1eb047731:;;
	return _31613_n;;
}



inline jule::Str _22db716bd_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _22db71239_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _22db6b333_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1eb04b559;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1eb04b559:;
	}
	_iter_end_1eb04b559:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _22db6d731_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22db6d258_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1eb04e172:;
	}
	_iter_end_1eb04e172:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _22db72779_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _22bd10188_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _22bd10188_Stobs(&(_40321_cutset));;
	_22db6d731_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _22db72a32_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4bcd6_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22db6d258_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1eb0537d6:;
	}
	_iter_end_1eb0537d6:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _22db731b4_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _22bd10188_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _22bd10188_Stobs(&(_43417_cutset));;
	_22db6d731_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_22db72a32_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _22db73505_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1eb0581d1:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1eb058247:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1eb057d6d:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1eb05929d:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=(*(_45212_part));
			}
			_iter_next_1eb05929d:;
			++it;
			goto _iter_begin_1eb05929d;
		}
		_iter_end_1eb05929d:;
	};
	return _45113_s;;
}



inline jule::Str _22cbd20ae_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _22db73aaa_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _22db73846_IsPathSep(_1099_originalPath[0LL])) && _22db73846_IsPathSep(_1099_originalPath[1LL]))) {
			return _22cc018e7_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _22db73846_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_22cbb2a40_lazyBuff _12713_out = _22cbb2a40_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_22cbbb97d_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_22db73846_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1eb067d6c:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _22db73846_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1eb06a9da:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _22db73846_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1eb06aa51:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1eb06d933:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_22db73846_IsPathSep(static_cast<jule::U8>(_22cbb9151_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1eb06e24c:;
									}
									_iter_end_1eb06e24c:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1eb06d999:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_22cbbb97d_append(&_12713_out, 47LLU);
									};
									_22cbbb97d_append(&_12713_out, '.');
									_22cbbb97d_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1eb06d59d:;
						};
					}
				}
				else {
					_case_begin_1eb066332:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_22cbbb97d_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_22db73846_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_22cbbb97d_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1eb06782d:;
						}
						_iter_end_1eb06782d:;;
					}
				}
				_match_end_1eb066101:;
			};
		}
	_iter_next_1eb066288:;
	}
	_iter_end_1eb066288:;;
	if ((_12713_out._field_w == 0LL)) {
		_22cbbb97d_append(&_12713_out, '.');
	};
	return _22cc018e7_FromSlash(_22cbbd2a9_string(&_12713_out));;
}



inline jule::Str _22cc018e7_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _22cc03e8d_Join(jule::Slice<jule::Str> _2259_elem) {
	return _22db73d1e_join(_2259_elem);;
}



inline jule::Str _22cc05456_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_22db73846_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1eb072dcc:;
	}
	_iter_end_1eb072dcc:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _22cbbd6b6_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22db73bdc_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _22cbd9759_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _22db73846_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1eb0754c8:;
	}
	_iter_end_1eb0754c8:;;
	(_25413_path).mut_slice(_22cbb2c2c_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_22db73846_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1eb076ce3:;
	}
	_iter_end_1eb076ce3:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _22cc079ec_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _22cbb2c2c_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_22db73846_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1eb079114:;
	}
	_iter_end_1eb079114:;;
	jule::Str _2919_dir = _22cbd20ae_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _22cbb2c2c_VolumeName(jule::Str _30315_path) {
	return _22cc018e7_FromSlash(_30315_path.slice(0LL, _22db73aaa_volumeNameLen(_30315_path)));;
}



inline jule::Bool _22db73846_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _22db73978_IsAbs(jule::Str _5310_path) {
	return _22db524c3_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I64 _22db73aaa_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _22db73bdc_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_22db73978_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _22cbd20ae_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _22cb74d87_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _22db73d1e_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _22db73d1e_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb082b12:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _22cbd20ae_Clean(_22db73505_Join(_739_elem.slice(_749_i), static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1eb082b12:;
			++it;
			_749_i++;
			goto _iter_begin_1eb082b12;
		}
		_iter_end_1eb082b12:;
	};
	return jule::Str();;
}



inline jule::I64 _22bce3985_getLastFsError(void) {
	jule::I64 _729_err = _22bcb9582_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1eb09232a:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1eb0917ad:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1eb091c20:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1eb091c86:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1eb091cec:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1eb091d63:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1eb09244b:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1eb0924b2:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1eb092528:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1eb09258e:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1eb092616:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1eb09268d:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1eb092715:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1eb09278c:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1eb092814:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1eb09288b:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1eb092913:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1eb09298a:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1eb092a12:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1eb092a89:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1eb092b11:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1eb092b88:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1eb092c10:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1eb092c87:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1eb092d0e:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1eb092d86:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1eb092e0d:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1eb092e85:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1eb091a77:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1eb091a22:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _22dc85419_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1eb0b974d:;
	}
	_iter_end_1eb0b974d:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _22dcb91ea_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _22dcb94d6_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _22dcb94d6_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _22dcb94d6_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Str _1813_buf = jule::Str::alloc(20LL);;
	jule::I64 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1eb0c32b2:;
	}
	_iter_end_1eb0c32b2:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_1813_buf).mut_slice(_1913_i);;
	return _1813_buf;;
}



inline jule::Slice<char*> _22dcbb9a0_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s) {
	jule::Slice<char*> _3713_cs = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb0e316c:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			{
				_3713_cs[_389_i]=((char*)((&((*(_3625_s))[_389_i][0LL]))));
			}
			_iter_next_1eb0e316c:;
			++it;
			_389_i++;
			goto _iter_begin_1eb0e316c;
		}
		_iter_end_1eb0e316c:;
	};
	_3713_cs[(_3713_cs.len() - 1LL)]=nullptr;
	return _3713_cs;;
}



inline jule::I64 _22dcbbce1_execvp(jule::Str* _4512_file, jule::Slice<jule::Str>* _4524_argv) {
	jule::Slice<char*> _469_cargv = _22dcbb9a0_strSliceToCstrSlice(_4524_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4512_file))[0LL])))), (char*const*)(&(_469_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _22dcbc000_setenv(jule::Slice<jule::Str>* _5212_envv) {
	;
	{
		auto expr = _5212_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb0e624c:;
		if (it != expr_end) {
			jule::Str *_5412_env = it;
			{
				jule::I64 _5513_i = _22db6a6d9_FindByteStr(_5412_env, '=');;
				if ((_5513_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type133));
				};
				{
					jule::Str _6017_key = (*(_5412_env)).slice(0LL, _5513_i);;
					if ((((*(_5412_env)).len() - _5513_i) == 1LL)) {
						jule::Str _6221_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6221_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type133));
						};
					} else {
						jule::Str _6721_val = (*(_5412_env)).slice((_5513_i + 1LL));;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6721_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type133));
						};
					};
				};
			}
			_iter_next_1eb0e624c:;
			++it;
			goto _iter_begin_1eb0e624c;
		}
		_iter_end_1eb0e624c:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _22dcbcdad_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1eb0eae66:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1eb0e6659:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1eb0e78ad:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1eb0ec2db:;
	};
}



inline jule::I64 _22dcbd100_getLastProcessError(void) {
	return _22dcbcdad_processErrorFromCode(static_cast<jule::I64>(_22bcb9582_GetLastErrno()));;
}



inline void _22dcbd8a3_Exit(jule::I64 _129_code) {
	_22caba360_Exit(_129_code);
}



inline jule::Str _22dcbdaa1_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _22dbe05d8_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _22dbe0808_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_22bc3b856_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb12e708:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1eb12e708:;
			++it;
			goto _iter_begin_1eb12e708;
		}
		_iter_end_1eb12e708:;
	};
	return false;;
}



inline jule::Bool _22dbe0aa0_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_22dbdd88e_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb130066:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1eb130066:;
			++it;
			goto _iter_begin_1eb130066;
		}
		_iter_end_1eb130066:;
	};
	{
		auto expr = &(_22dbe04d9_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb131375:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1eb131375:;
			++it;
			goto _iter_begin_1eb131375;
		}
		_iter_end_1eb131375:;
	};
	return false;;
}



inline jule::Str _22dbeccdd_Logf(jule::Str _3039_fmt, jule::Slice<jule::Any> _30322_args) {
	return _22dbed706_applyFmt(_3039_fmt, _30322_args);;
}



inline jule::Str _22dbed0c9_argToStr(jule::Any _30713_arg) {
	{
		auto &_match_expr{ _30713_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1eb1327c7:;
			{
				return _30713_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1eb13283d:;
			{
				return static_cast<jule::Str>(_30713_arg.cast<jule::U8>(&__jule_any_type135));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1eb1325b8:;
			{
				return static_cast<jule::Str>(_30713_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1eb132189:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1eb131e9c:;
	};
}



inline jule::I64 _22dbed371_findNextFmt(jule::Str _32016_fmt) {
	{
		auto expr = &(_32016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb133003:;
		if (it != expr_end) {
			jule::I64 _3219_i = it - expr->begin();
			jule::U8 *_32112_b = it;
			{
				if (((*(_32112_b)) == '@')) {
					return _3219_i;;
				};
			}
			_iter_next_1eb133003:;
			++it;
			_3219_i++;
			goto _iter_begin_1eb133003;
		}
		_iter_end_1eb133003:;
	};
	return -1LL;;
}



inline jule::Str _22dbed706_applyFmt(jule::Str _32917_fmt, jule::Slice<jule::Any> _32927_args) {
	jule::Str _33013_s = jule::Str();;
	{
		auto expr = &(_32927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb134c08:;
		if (it != expr_end) {
			jule::Any *_33112_arg = it;
			{
				jule::I64 _33213_i = _22dbed371_findNextFmt(_32917_fmt);;
				if ((_33213_i == -1LL)) {
					goto _iter_end_1eb134c08;
				};
				_33013_s+=_32917_fmt.slice(0LL, _33213_i);
				_33013_s+=_22dbed0c9_argToStr((*(_33112_arg)));
				(_32917_fmt).mut_slice((_33213_i + 1LL));;
			}
			_iter_next_1eb134c08:;
			++it;
			goto _iter_begin_1eb134c08;
		}
		_iter_end_1eb134c08:;
	};
	_33013_s+=_32917_fmt;
	return _33013_s;;
}



inline jule::Bool _22dbee77e_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _22dc00bae_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _22dc00e67_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _22dc0120e_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _22dc0152d_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _22dc017c5_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _22dc01a6c_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _22dc01d14_IsUnix(jule::Str _5511_os) {
	return (_22dc00e67_IsDarwin(_5511_os) || _22dc0120e_IsLinux(_5511_os));;
}



inline jule::Bool _22dc02188_Is32Bit(jule::Str _5812_arch) {
	return _22dc0152d_IsI386(_5812_arch);;
}



inline jule::Bool _22dc02430_Is64Bit(jule::Str _6112_arch) {
	return (_22dc017c5_IsAmd64(_6112_arch) || _22dc01a6c_IsArm64(_6112_arch));;
}



inline void _22dc5ebb8_init(void) {
	jule::Str _2513_path = _22dcbdaa1_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_22dc5dd71_PathWd=({
			auto except = _22cb74d87_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_22dc5d238_PathExec=_22cc079ec_Dir(_2513_path);
		_22dc07c1b_PathStdlib=_22cc03e8d_Join(jule::Slice<jule::Str>::make({_22dc5d238_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_22dc5e327_PathApi=_22cc03e8d_Join(jule::Slice<jule::Str>::make({_22dc5d238_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _22e0aa8e8_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_22e00e709_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb17db75:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_1eb17db75:;
			++it;
			goto _iter_begin_1eb17db75;
		}
		_iter_end_1eb17db75:;
	};
	return false;;
}



inline jule::Bool _22e0aabd4_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_22e00e95c_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb17e11a:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_1eb17e11a:;
			++it;
			goto _iter_begin_1eb17e11a;
		}
		_iter_end_1eb17e11a:;
	};
	return false;;
}



inline jule::Bool _22e0ab29a_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _22e0ab542_IsRawStr(_34210_k)));;
}



inline jule::Bool _22e0ab542_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _22e0ab7d9_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _22e0abe05_IsBool(jule::Str _35511_k) {
	return (_35511_k.equal("true", 4) || _35511_k.equal("false", 5));;
}



inline jule::Bool _22e0ac19c_IsFloat(jule::Str _35812_k) {
	if (_22db524c3_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _22db70de8_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _22db70de8_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _22e0ac444_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _22e0ac983_IsIgnoreIdent(jule::Str _38118_ident) {
	return _38118_ident.equal("_", 1);;
}



inline jule::Bool _22e0acc2a_IsAnonIdent(jule::Str _38416_ident) {
	return _38416_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _22e0ad269_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_22e00e4d9_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb18c8cb:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_1eb18c8cb:;
			++it;
			goto _iter_begin_1eb18c8cb;
		}
		_iter_end_1eb18c8cb:;
	};
	return false;;
}



inline jule::Bool _22e0ad6ba_IsLetter(jule::I32 _40713_r) {
	return _22da1d416_IsLetter(_40713_r);;
}



inline jule::Bool _22e0adc09_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _22e0adea1_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _22e0ae248_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _22e0ae4e0_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1eb19268e:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1eb191eb8:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1eb19202e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb191e52:;
			{
				return false;;
			}
		}
		_match_end_1eb191d86:;
	};
}



inline jule::Bool _22e0ae787_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _22e0aea2e_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_22e0a46e4_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb1959e4:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_1eb1959e4:;
			++it;
			goto _iter_begin_1eb1959e4;
		}
		_iter_end_1eb1959e4:;
	};
	return false;;
}



inline jule::Bool _22e0aecc6_IsAssignOp(jule::Str _47215_kind) {
	if (_22e0aea2e_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_22e0a49e1_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb196be3:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_1eb196be3:;
			++it;
			goto _iter_begin_1eb196be3;
		}
		_iter_end_1eb196be3:;
	};
	return false;;
}



inline jule::Ptr<_22e0b0579_File> _22e0b1aa8_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_22e0b0579_File>(_22e0b0579_File{._field_Path=_6315_path, });;
}



inline _22dbec89d_Log _22e0b334b_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_22e0b0579_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _22dbec89d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_22dbeccdd_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _22e0b36d1_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb1a156b:;
		if (it != expr_end) {
			jule::I64 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1eb1a156b:;
			++it;
			_1259_i++;
			goto _iter_begin_1eb1a156b;
		}
		_iter_end_1eb1a156b:;
	};
	return true;;
}



inline jule::Str _22e0b3a22_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_22e0adc09_IsDecimal(_13913_b))))) {
				goto _iter_end_1eb1a4e98;
			};
		}
	_iter_next_1eb1a4e98:;
	}
	_iter_end_1eb1a4e98:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _22e0b3da7_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I64 _16728_i) {
	return _22e0b3a22_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _22e0b41e8_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I64 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _22e0adc09_IsDecimal(_17913_b)) {
					_case_begin_1eb1a7d03:;
					{
						goto _iter_next_1eb1a7198;
					}
				}
				else if (_22e0b599c_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_1eb1a7d69:;
					{
						return _22e0b3da7_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_1eb1a7c8c:;
					{
						goto _iter_end_1eb1a7198;
					}
				}
				_match_end_1eb1a7c26:;
			};
		}
	_iter_next_1eb1a7198:;
	}
	_iter_end_1eb1a7198:;;
	return jule::Str();;
}



inline jule::Str _22e0b4539_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _22e0b3a22_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _22e0b487a_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _22e0b3a22_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _22e0b4ccb_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _22e0b3a22_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_22e0adc09_IsDecimal(_21213_b))))) {
				goto _iter_end_1eb1aa685;
			};
		}
	_iter_next_1eb1aa685:;
	}
	_iter_end_1eb1aa685:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _22e0b5073_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1eb1ae601:;
					{
						__jule_func_result = _22e0b4ccb_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1eb1ae678:;
					{
						goto _iter_next_1eb1ad90d;
					}
				}
				else if (_22e0b565b_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_1eb1ae700:;
					{
						__jule_func_result = _22e0b3a22_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_22e0adc09_IsDecimal(_23113_b)))) {
					_case_begin_1eb1ae777:;
					{
						goto _iter_end_1eb1ad90d;
					}
				}
				_match_end_1eb1ae524:;
			};
		}
	_iter_next_1eb1ad90d:;
	}
	_iter_end_1eb1ad90d:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _22e0b531a_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_22e0b36d1_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_22e0adea1_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_1eb1b1009;
			};
		}
	_iter_next_1eb1b1009:;
	}
	_iter_end_1eb1b1009:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _22e0b565b_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _22e0b599c_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _22e0b5cdd_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I64 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _22e0adc09_IsDecimal(_28713_b)) {
					_case_begin_1eb1b6e33:;
					{
						goto _iter_next_1eb1b5c45;
					}
				}
				else if (_22e0b599c_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_1eb1b6e99:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1eb1b6dbc:;
					{
						goto _iter_end_1eb1b5c45;
					}
				}
				_match_end_1eb1b6d56:;
			};
		}
	_iter_next_1eb1b5c45:;
	}
	_iter_end_1eb1b5c45:;;
	return false;;
}



inline jule::Bool _22e0b612e_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I64 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_1eb1b8b27:;
			{
				goto _case_begin_1eb1b8451;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_1eb1b8451:;
			{
				goto _case_begin_1eb1b84b7;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1eb1b84b7:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1eb1b83da:;
			{
				return true;;
			}
		}
		_match_end_1eb1b831e:;
	};
}



inline jule::Bool _22e0b6470_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I64 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_1eb1bae26:;
			{
				goto _case_begin_1eb1ba761;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_1eb1ba761:;
			{
				goto _case_begin_1eb1ba7c7;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1eb1ba7c7:;
			{
				goto _case_begin_1eb1ba83d;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1eb1ba83d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1eb1ba2ee:;
			{
				return true;;
			}
		}
		_match_end_1eb1ba233:;
	};
}



inline jule::Str _22e0b68c1_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _22e0b4ccb_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_22e0b565b_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _22e0b3a22_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_22e0ae248_IsOctal(_35013_b))))) {
				goto _iter_end_1eb1bee6e;
			};
		}
	_iter_next_1eb1bee6e:;
	}
	_iter_end_1eb1bee6e:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _22e0b6b68_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_22e0b612e_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_1eb1c5e86:;
					{
						__jule_func_result = _22e0b487a_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_22e0b6470_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_1eb1c600d:;
					{
						__jule_func_result = _22e0b4539_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_22e0b599c_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_1eb1c6085:;
					{
						__jule_func_result = _22e0b3da7_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_22e0b5cdd_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_1eb1c610c:;
					{
						__jule_func_result = _22e0b41e8_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_22e0ae4e0_IsHex(_38313_b))))) {
					_case_begin_1eb1c6184:;
					{
						goto _iter_end_1eb1c51c7;
					}
				}
				_match_end_1eb1c5d98:;
			};
		}
	_iter_next_1eb1c51c7:;
	}
	_iter_end_1eb1c51c7:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _22e0b6ea9_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_22e0ae4e0_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1eb1c885c:;
	}
	_iter_end_1eb1c885c:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _22e0b7251_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _22e0b6ea9_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _22e0b751a_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _22e0b6ea9_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _22e0b76c4_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _22e0b6ea9_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _22e0b795a_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_22e0ae248_IsOctal((*(_43716_txt))[1LL]))) || (!(_22e0ae248_IsOctal((*(_43716_txt))[2LL])))) || (!(_22e0ae248_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_22dbec89d_Log> _22e0bc454_Lex(jule::Ptr<_22e0b0579_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_22e0b8142_lex _83113_lex = _22e0b8142_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_22e0babd3_newLine(&_83113_lex);
	_22e0b8bd1_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _2146ad378_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _2146b5803_Len64(_6119_x)));;
}



inline jule::I64 _2146ae2ad_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_2146aee4b_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _2146aeba4_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2146ad983__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _2146aee4b_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_2146ae049__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _2146b555b_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _2146b5803_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2146b64b3_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _2146b7b46_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _2145d53b0_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _2145d569b_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _2145d5943_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2145d5c62_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _2145d824d_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1eb30e5a8:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_2146bbc8d_IsInf(_4714_f, 0LL) || _2146bba29_IsNaN(_4714_f)) {
			_case_begin_1eb30e630:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1eb30e498:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2146bbdc0_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _2145d5943_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2145d5c62_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _2146bb8e7_NaN(void) {
	return static_cast<jule::F64>(_2145d5c62_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _2146bba29_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _2146bbb5b_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2145d5c62_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_2145d5c62_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _2146bbc8d_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _2146bbdc0_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_2146bd3aa_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _2146bcc8e_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_2146bba29_IsNaN(_1118_x) || _2146bbc8d_IsInf(_1118_x, 1LL)) {
			_case_begin_1eb350709:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1eb350781:;
			{
				return static_cast<jule::F64>(_2146bb8e7_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1eb350808:;
			{
				return static_cast<jule::F64>(_2146bbb5b_Inf(-1LL));;
			}
		}
		_match_end_1eb35063d:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2145d824d_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _2146bd3aa_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2145d5c62_F64FromBits(static_cast<jule::U64>((_2145d5943_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _2146c215b_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _2146bd3aa_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1eb3bac6e:;
		}
		_iter_end_1eb3bac6e:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _2146c259b_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2145d824d_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_2146bcc8e_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _2135483ac_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_213540a25_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _21451a1c4_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _213540a25_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_2142c7d2d_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1eb5cbd92:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_2145d53b0_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_2142c7d2d_floatInfo>)((&(_21352a48d_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1eb5cc06d:;
			{
				_8313_bits=static_cast<jule::U64>(_2145d5943_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_2142c7d2d_floatInfo>)((&(_21352a900_f64info))));
			}
		}
		else {
			_case_begin_1eb5cb776:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1eb5ca247:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1eb5d0659:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1eb5d2a79:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1eb5d2c22:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1eb5d1b22:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1eb5d1a56:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1eb5d11b5:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1eb5cc0d4:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1eb5d0604:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _2143817dd_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _21440cb66_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_21454ed63_decimalSlice _13213_digs = _21454ed63_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_2146ea87c_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1eb5d6709:;
				{
					_8258_prec=static_cast<jule::I64>(_21451a1c4_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1eb5d6781:;
				{
					_8258_prec=static_cast<jule::I64>(_21451a1c4_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1eb5d6819:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1eb5d5ab0:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1eb5d8d49:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1eb5d83ed:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1eb5d871c:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1eb5d884e:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2146ea3b5_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_2146ea4e7_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _21356c337_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _2141e15d7_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _21356c337_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _2142c7d2d_floatInfo* _18327_flt) {
	_2146ebdcd_decimal _18413_d = _2146ebdcd_decimal{};;
	_2146ec0ba_assign(&_18413_d, _1835_mant);
	_2146ec1ec_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_21454ed63_decimalSlice _18713_digs = _21454ed63_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_2142a56ac_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_21454ed63_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1eb5dd8ed:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1eb5e102c:;
				{
					_18233_prec=static_cast<jule::I64>(_21451a1c4_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1eb5e10d7:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1eb5e0d1d:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1eb5e2924:;
				{
					_2146ec593_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1eb5e299b:;
				{
					_2146ec593_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1eb5e2a23:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_2146ec593_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1eb5e2814:;
		};
		_18713_digs=_21454ed63_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _2141e15d7_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _2141e15d7_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _21454ed63_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1eb5e60dc:;
			{
				return _2142c8d51_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1eb5e6153:;
			{
				return _21435e436_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1eb5e61b9:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2142c8d51_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _21435e436_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_21451a1c4_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1eb5e5e99:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _2142a56ac_roundShortest(_2146ebdcd_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _2142c7d2d_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_2146ebdcd_decimal _28713_upper = _2146ebdcd_decimal{};;
	_2146ec0ba_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_2146ec1ec_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_2146ebdcd_decimal _30613_lower = _2146ebdcd_decimal{};;
	_2146ec0ba_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_2146ec1ec_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1eb603b22;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1eb608bc1:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1eb608c48:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1eb608cc0:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1eb608b05:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1eb60be9e:;
					{
						_2146ec593_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1eb60c026:;
					{
						_2146ec32e_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1eb60c09d:;
					{
						_2146ec461_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1eb60bdd3:;
			};
		}
	_iter_next_1eb603b22:;
	}
	_iter_end_1eb603b22:;;
}



inline jule::Slice<jule::U8> _2142c8d51_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _21454ed63_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _2144cbdde_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1eb612229:;
		}
		_iter_end_1eb612229:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1eb614193:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1eb614083:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1eb613cdb:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1eb613c86:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _21435e436_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _21454ed63_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _2144cbdde_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1eb61897d:;
		}
		_iter_end_1eb61897d:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1eb61973c:;
		}
		_iter_end_1eb61973c:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _2143817dd_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _2142c7d2d_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2146ee1cc_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2146ee1cc_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _21440cb66_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _2142c7d2d_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1eb61cae7:;
	}
	_iter_end_1eb61cae7:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1eb625b55:;
		}
		_iter_end_1eb625b55:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1eb626dcb:;
		}
		_iter_end_1eb626dcb:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _21451a504_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1eb629ede:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1eb62a055:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1eb62986d:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1eb629818:;
	};
	return _50613_dst;;
}



inline jule::I64 _2144cbdde_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _21451a1c4_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _21451a504_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__213516d09_ConvError _2145683dc_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__213516d09_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1eb631655:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1eb631534:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_21451a504_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1eb633459:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_21451a504_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1eb63326c:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_21451a504_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1eb6332d3:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1eb632dc6:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1eb632d0a:;
					};
				};
			}
		}
		else {
			_case_begin_1eb630841:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1eb6307ca:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1eb638140:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1eb63775a:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1eb637a35:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1eb6378ae:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1eb637b23:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1eb639284:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1eb637d65:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1eb63a395:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1eb6394e8:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _21451a504_lower(_10912_c)) && (_21451a504_lower(_10912_c) <= 'z'))) {
						_case_begin_1eb63b6d7:;
						{
							_11017_d=static_cast<jule::U8>(((_21451a504_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1eb63b30d:;
						{
							goto _iter_next_1eb63a395;
						}
					}
					else {
						_case_begin_1eb63b297:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1eb63b231:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1eb63a395:;
			++it;
			goto _iter_begin_1eb63a395;
		}
		_iter_end_1eb63a395:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _2142cbb23_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__213516d09_ConvError __jule_assign_result = _2145683dc_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type136));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _21352bda7_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type136));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__213516d09_ConvError __jule_assign_result = _2145683dc_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type136));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type136));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type136));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _213585680_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2145d5c62_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _2146ad378_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(_4122_man, _2142c9e95_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(_4122_man, _2142c9e95_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2145d5c62_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2143bdb38_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2145d569b_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _2146ad378_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(_11022_man, _2142c9e95_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(_11022_man, _2142c9e95_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_2145d569b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _2143bcc25_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1eb662ed3:;
	}
	_iter_end_1eb662ed3:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _2143bcd57_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1eb66738e:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1eb667416;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1eb667416:;
			{
				jule::I64 _8317_caseN = _2143bcc25_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2146bbb5b_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1eb66748d:;
			{
				if ((_2143bcc25_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2146bb8e7_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1eb6672c3:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _213519290_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1eb66d010:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1eb66d087:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1eb66cdbc:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_21451a504_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1eb674203:;
					{
						goto _iter_next_1eb673653;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1eb67427a:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1eb673653;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1eb674302:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1eb673653;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1eb673653;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _21451a504_lower(_13313_c))) && (_21451a504_lower(_13313_c) <= 'f'))) {
					_case_begin_1eb674379:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_21451a504_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1eb673653;
					}
				}
				_match_end_1eb674126:;
			};
			goto _iter_end_1eb673653;
		}
	_iter_next_1eb673653:;
	}
	_iter_end_1eb673653:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_21451a504_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1eb67d75c;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1eb67d75c:;
		}
		_iter_end_1eb67d75c:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _2146e964a_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _21352a900_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1eb6886ac:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1eb688734:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_21442da11_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _21442da11_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1eb6887ab:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_21442da11_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1eb6885e1:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2146e977c_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _21352a48d_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1eb68d382:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1eb68d409:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_21444b8db_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _21444b8db_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1eb68d481:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_21444b8db_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1eb68d2b6:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__213516d09_ConvError _2146e98ae_atofHex(jule::Str _55112_s, _2142c7d2d_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__213516d09_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I64 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1eb693255:;
	}
	_iter_end_1eb693255:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1eb6950c0:;
	}
	_iter_end_1eb6950c0:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1eb695a82:;
	}
	_iter_end_1eb695a82:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _21352a48d_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_2145d569b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2145d5c62_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__213516d09_ConvError _2146e9b01_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__213516d09_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2143bcd57_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _213519290_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__213516d09_ConvError __jule_assign_result = _2146e98ae_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_21352a48d_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2146e977c_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2143bdb38_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2143bdb38_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2146ebdcd_decimal _66213_d = _2146ebdcd_decimal{};;
	if ((!(_2135194e3_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2146e9194_floatBits(&_66213_d, &(_21352a48d_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_2145d569b_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError _2146e9c33_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2143bcd57_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _213519290_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__213516d09_ConvError __jule_assign_result = _2146e98ae_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_21352a900_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2146e964a_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _213585680_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _213585680_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_2146ebdcd_decimal _71913_d = _2146ebdcd_decimal{};;
	if ((!(_2135194e3_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2146e9194_floatBits(&_71913_d, &(_21352a900_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2145d5c62_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError _2146e9d65_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__213516d09_ConvError __jule_assign_result = _2146e9b01_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError __jule_assign_result = _2146e9c33_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _2146e9e97_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__213516d09_ConvError __jule_assign_result = _2146e9d65_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type136));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type136));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _2146ea3b5_ryuFtoaFixed32(_21454ed63_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _2146b555b_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_2146ea9ae_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb1c9_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _2146eb43d_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_2146ea74a_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _2146ea4e7_ryuFtoaFixed64(_21454ed63_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _2146b5803_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_2146ea9ae_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb30b_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _2146eb43d_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_2146ea74a_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _2146ea74a_formatDecimal(_21454ed63_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _2144ce386_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1eb6cb931:;
	}
	_iter_end_1eb6cb931:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1eb6d03d5:;
	}
	_iter_end_1eb6d03d5:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1eb6d61bb:;
	}
	_iter_end_1eb6d61bb:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _2146ea87c_ryuFtoaShortest(_21454ed63_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _2142c7d2d_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_2146aee4b_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_2146eae65_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _2146eac23_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_2146eae65_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_2146ea9ae_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _21352a48d_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb1c9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb1c9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb1c9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb30b_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb30b_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _2146eb30b_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_2146eb43d_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_2146eb43d_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_2146eb43d_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_2146eae65_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _2146ea9ae_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _2146eaae1_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _2146eac23_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _2142c7d2d_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _2146eae65_ryuDigits(_21454ed63_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2146eb570_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2146eb570_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _2146eb570_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_2146eb097_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_2146eb097_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1eb706021:;
		}
		_iter_end_1eb706021:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_2146eb097_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1eb7065b5:;
	}
	_iter_end_1eb7065b5:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1eb705c13:;
	}
	_iter_end_1eb705c13:;;
}



inline void _2146eb097_ryuDigits32(_21454ed63_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1eb70bad7;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1eb70bad7:;
	}
	_iter_end_1eb70bad7:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1eb71841d:;
	}
	_iter_end_1eb71841d:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _2146eb1c9_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _2142c9e95_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_2146eaae1_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _2146eb30b_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _2142c9e95_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_2146eaae1_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b7b46_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _2146b64b3_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _2146eb43d_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1eb7274b5:;
	}
	_iter_end_1eb7274b5:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _2146eb570_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _2146ec939_trim(_2146ebdcd_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1eb72aa7e:;
	}
	_iter_end_1eb72aa7e:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _2146eca6b_rightShift(_2146ebdcd_decimal* _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1eb72e346:;
				}
				_iter_end_1eb72e346:;;
				goto _iter_end_1eb72ce8d;
			};
			jule::U64 _48213_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1eb72ce8d:;
	}
	_iter_end_1eb72ce8d:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1eb731aeb:;
	}
	_iter_end_1eb731aeb:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1eb73202a:;
	}
	_iter_end_1eb73202a:;;
	(*(_46320_a))._field_nd=_46513_w;
	_2146ec939_trim(_46320_a);
}



inline jule::Bool _2146ecb9d_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1eb7363e7:;
	}
	_iter_end_1eb7363e7:;;
	return false;;
}



inline void _2146eccd0_leftShift(_2146ebdcd_decimal* _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _2145b8959_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_2146ecb9d_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _2145b8959_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = (*(_53119_a))._field_nd;;
	jule::I64 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1eb739939:;
	}
	_iter_end_1eb739939:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1eb73c497:;
	}
	_iter_end_1eb73c497:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_2146ec939_trim(_53119_a);
}



inline jule::Bool _2146ece12_shouldRoundUp(_2146ebdcd_decimal* _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _2146edac2_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _2146ede68_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2146ee1cc_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _2146edc04_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _2146ede68_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _2146ee1cc_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _2146edd36_Itoa(jule::I64 _809_i) {
	return _2146edc04_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _2146ede68_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _2146ee09a_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _2146ee1cc_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1eb77a194:;
		}
		_iter_end_1eb77a194:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_2146ee09a_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_2146ae2ad_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1eb783972:;
		}
		_iter_end_1eb783972:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1eb78658a:;
		}
		_iter_end_1eb78658a:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _22e3c8320_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1eb7a18b3:;
			{
				return _2134abdd1_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1eb7a1929:;
			{
				return _22e3ba5a9_SysUint;;
			}
		}
		else {
			_case_begin_1eb7a1cae:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1eb7a2265:;
	};
}



inline jule::I64 _213336ca0_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1eb7a3277:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1eb7a32dd:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1eb7a2d15:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1eb7a2d7b:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1eb7a2de2:;
			{
				return _213355e23_BitSize;;
			}
		}
		else {
			_case_begin_1eb7a283c:;
			{
				return -1LL;;
			}
		}
		_match_end_1eb7a2c6b:;
	};
}



inline jule::Str _213356451_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1eb7a5213:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1eb7a5279:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1eb7a5026:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1eb7a508c:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1eb7a34b9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1eb7a4c5c:;
	};
}



inline jule::Str _2133a0742_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1eb7a6687:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1eb7a66ed:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1eb7a6489:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1eb7a6500:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1eb7a6005:;
			{
				return jule::Str();;
			}
		}
		_match_end_1eb7a5dc3:;
	};
}



inline jule::Str _2133aa054_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1eb7a7b0b:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1eb7a7b72:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1eb7a7479:;
			{
				return jule::Str();;
			}
		}
		_match_end_1eb7a7347:;
	};
}



inline jule::Bool _2134c0796_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _2146e9e97_ParseFloat(_15018_val, _15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _2134c9c23_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1eb7acb55:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1eb7abca8:;
			{
				return 64LLU;;
			}
		}
		_match_end_1eb7abc0e:;
	};
}



inline jule::I64 _2134ec21d_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1eb7ada35:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1eb7ada9b:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1eb7adb12:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1eb7ad260:;
			{
				return 64LLU;;
			}
		}
		_match_end_1eb7ad194:;
	};
}



inline jule::I64 _22e50535e_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1eb7b0949:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1eb7b09b0:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1eb7b0a26:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1eb7aed88:;
			{
				return 64LLU;;
			}
		}
		_match_end_1eb7ae99d:;
	};
}



inline void _213336596_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _22dc09305_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1eb7b1ab0:;
				{
					_213355e23_BitSize=64LLU;
					_2134abdd1_SysInt=jule::Str("i64", 3);
					_22e3ba5a9_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1eb7b1b37:;
				{
					_213355e23_BitSize=32LLU;
					_2134abdd1_SysInt=jule::Str("i32", 3);
					_22e3ba5a9_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1eb7b1a05:;
		};
	};
}



inline void _213377939_init(void) {
	_213336596_UpdateTarget();
}



inline jule::I64 _21470040e_MinI(jule::Str _6113_k) {
	_6113_k=_22e3c8320_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1eb7b4453:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1eb7b44b9:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1eb7b3e69:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1eb7b3ed0:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1eb7b1d68:;
			{
				return 0LL;;
			}
		}
		_match_end_1eb7b2033:;
	};
}



inline jule::I64 _214700541_MaxI(jule::Str _7913_k) {
	_7913_k=_22e3c8320_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1eb7b59b5:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1eb7b5a2b:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1eb7b54dc:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1eb7b5553:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1eb7b5223:;
			{
				return 0LL;;
			}
		}
		_match_end_1eb7b4e37:;
	};
}



inline jule::U64 _214700673_MaxU(jule::Str _9713_k) {
	_9713_k=_22e3c8320_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1eb7b7027:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1eb7b708d:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1eb7b6a4e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1eb7b6ab5:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1eb7b6785:;
			{
				return 0LLU;;
			}
		}
		_match_end_1eb7b6499:;
	};
}



inline jule::F64 _2147007a5_Min(jule::Str _11512_k) {
	_11512_k=_22e3c8320_RealKindOf(_11512_k);
	jule::I64 _1179_i = _21470040e_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1eb7b906d:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1eb7b90d4:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1eb7b8a62:;
			{
				return 0LL;;
			}
		}
		_match_end_1eb7b8a0c:;
	};
}



inline jule::F64 _2147008d7_Max(jule::Str _13312_k) {
	_13312_k=_22e3c8320_RealKindOf(_13312_k);
	jule::I64 _1359_i = _214700541_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _214700673_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1eb7bb3c2:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1eb7bb438:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1eb7bad61:;
			{
				return 0LL;;
			}
		}
		_match_end_1eb7baea4:;
	};
}



inline jule::Bool _214700be5_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _214700d27_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _214700e59_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _21470108b_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _2147011bd_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _214701300_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _214701432_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _214701564_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _214701696_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _2147017c8_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _21470190a_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1eb7c23a6:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1eb7c2b8c:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1eb7c2c03:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1eb7c2681:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1eb7c26e7:;
			{
				return _214700be5_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1eb7c275d:;
			{
				return _214700d27_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1eb7c27c4:;
			{
				return _214700e59_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1eb7c2c9c:;
			{
				return _21470108b_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1eb7c2d13:;
			{
				return _2147011bd_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1eb7c2d79:;
			{
				return _214701300_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1eb7c2de0:;
			{
				return _214701432_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1eb7c2e56:;
			{
				return _214701564_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1eb7c2ebc:;
			{
				return _214701696_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1eb7c3044:;
			{
				return _2147017c8_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1eb7c30bb:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1eb7c3143:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1eb7c2571:;
			{
				return false;;
			}
		}
		_match_end_1eb7c243e:;
	};
}



inline jule::Bool _214701a3c_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _214701b6e_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _214701ca1_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _214701dd3_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _214702246_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _214702378_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _2147024aa_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _2147025dc_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _21470271e_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1eb7c3709:;
			{
				return _214702b5e_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1eb7cac61:;
			{
				return _214702c91_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1eb7cacc7:;
			{
				return _214702c91_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1eb7cad3d:;
			{
				return _214701a3c_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1eb7ca986:;
			{
				return _214701b6e_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1eb7ca9ec:;
			{
				return _214701ca1_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1eb7caa63:;
			{
				return _214701dd3_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1eb7caac9:;
			{
				return _214702246_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1eb7cb06e:;
			{
				return _214702378_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1eb7cb0d5:;
			{
				return _2147024aa_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1eb7cb14b:;
			{
				return _2147025dc_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1eb7cb1c3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1eb7ca821:;
			{
				return false;;
			}
		}
		_match_end_1eb7ca777:;
	};
}



inline jule::Bool _214702b5e_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _214702c91_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _214702dc3_IsInt(jule::Str _4610_k) {
	return (_214702b5e_IsSigInt(_4610_k) || _214702c91_IsUnsigInt(_4610_k));;
}



inline jule::Bool _214703005_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _214703137_IsNum(jule::Str _5610_k) {
	return (_214702dc3_IsInt(_5610_k) || _214703005_IsFloat(_5610_k));;
}



inline jule::Bool _214703269_IsSigNum(jule::Str _6113_k) {
	return (_214702b5e_IsSigInt(_6113_k) || _214703005_IsFloat(_6113_k));;
}



inline void _214707180_lshiftUnsig(_21470339b_Const* _59021_c, _21470339b_Const* _59032_x) {
	jule::U64 _5919_l = _2147047cb_AsU64(_59021_c);;
	jule::U64 _5929_r = _2147047cb_AsU64(_59032_x);;
	_214704b72_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _2147072b2_rshiftUnsig(_21470339b_Const* _59621_c, _21470339b_Const* _59632_x) {
	jule::U64 _5979_l = _2147047cb_AsU64(_59621_c);;
	jule::U64 _5989_r = _2147047cb_AsU64(_59632_x);;
	_214704b72_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _215e5a0eb_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _215e5a272_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_215e779ba_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _215e77118_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _215e77415_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_215e77d0b_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_22db4ca84_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1eb88e97e:;
	}
	_iter_end_1eb88e97e:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _215e776ac_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1eb893e4a:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1eb893eb1:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1eb894027:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1eb89408d:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1eb894115:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1eb89418c:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1eb894214:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1eb89428b:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1eb894313:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1eb89438a:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1eb893d29:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _215e779ba_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _215e776ac_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1eb89a00b:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _2142cbb23_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1eb89989b:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _2142cbb23_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1eb899912:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2142cbb23_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1eb8985ae:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _2142cbb23_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1eb898559:;
	};
}



inline jule::Slice<jule::U8> _215e77d0b_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _215e779ba_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _216103c23_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1eb8cdeda:;
	}
	_iter_end_1eb8cdeda:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _2161097c8_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4b720_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1eb8d1a8c:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1eb8d1b03:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1eb8d177e:;
			};
		}
	_iter_next_1eb8d0d55:;
	}
	_iter_end_1eb8d0d55:;;
	return nullptr;;
}



inline void _216109a81_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1eb8d2a7c:;
			{
				(*(_4722_buf))+=_2135483ac_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type137))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1eb8d3819:;
			{
				(*(_4722_buf))+=_2135483ac_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1eb8d39c3:;
			{
				(*(_4722_buf))+=_2146edc04_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type138)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1eb8d2b15:;
			{
				(*(_4722_buf))+=_2146edc04_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type139)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1eb8d3440:;
			{
				(*(_4722_buf))+=_2146edc04_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1eb8d34a6:;
			{
				(*(_4722_buf))+=_2146edc04_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1eb8d3a4a:;
			{
				(*(_4722_buf))+=_2146edac2_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1eb8d3ab1:;
			{
				(*(_4722_buf))+=_2146edac2_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type140)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1eb8d3b27:;
			{
				(*(_4722_buf))+=_2146edac2_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type141)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1eb8d3b8d:;
			{
				(*(_4722_buf))+=_2146edac2_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1eb8d3c04:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1eb8d3c6a:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1eb8d32db:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1eb8d2076:;
	};
}



inline void _216109e5a_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any>* _8651_args) {
	jule::Any _879_arg = (*(_8651_args))[(*(_8642_j))];;
	((*(_8642_j)))++;
	_216109a81_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _21610a356_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any>* _9460_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_216109e5a_applyFmtByDefault(_9436_buf, _9451_j, _9460_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_22bcdde8b_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _21610a664_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _22bd10188_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _216103c23_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_216103c23_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_22bcdde8b_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _2161097c8_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1eb8e03b4;
			};
			_21610a356_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), &(_11322_args));
			if ((_11913_j >= _11322_args.len())) {
				_22bcdde8b_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1eb8e03b4;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1eb8e03b4:;
	}
	_iter_end_1eb8e03b4:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_22bcdde8b_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _21610ae7d_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _21610a664_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _215dd1b22_parameterUsesGenerics(jule::Ptr<_215dcdb41_ParamIns>* _37431_p, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>* _37446_generics) {
	if (_215d8baee_IsSelf((*(_37431_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _215ed210c_kindUsesGenerics(&((*(_37431_p)).get()._field_Kind), _37446_generics);;
}



inline jule::Ptr<_215ebe7d1_TypeSymbol> _215dd40ec_buildType(jule::Ptr<_215daa5e0_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_215e904e9_Value> _215dd43d8_buildExpr(jule::Ptr<_215daeb11_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215dd4680_buildTypeAlias(jule::Ptr<_215dc18ae_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_215eb9710_TypeAlias>(_215eb9710_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_215dd40ec_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_215d9ad3e_Field> _215dd499e_buildField(jule::Ptr<_215dc5055_FieldDecl> _12319_decl) {
	return jule::new_ptr<_215d9ad3e_Field>(_215d9ad3e_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_215dd40ec_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_215d9ad3e_Field>> _215dd4c46_buildFields(jule::Slice<jule::Ptr<_215dc5055_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_215d9ad3e_Field>> _13513_fields = jule::Slice<jule::Ptr<_215d9ad3e_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb411c5:;
		if (it != expr_end) {
			jule::Ptr<_215dc5055_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_215dd499e_buildField(_13617_decl));;
			}
			_iter_next_1ebb411c5:;
			++it;
			goto _iter_begin_1ebb411c5;
		}
		_iter_end_1ebb411c5:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_215dc6cd2_Struct> _215dd4edd_buildStruct(jule::Ptr<_215dc5808_StructDecl> _14220_decl) {
	return jule::new_ptr<_215dc6cd2_Struct>(_215dc6cd2_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_215dd4c46_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_215dcd05d_Param> _215dd5285_buildParam(jule::Ptr<_215dbac4e_ParamDecl> _15419_decl) {
	return jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_215dd40ec_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_215dcd05d_Param>> _215dd5609_buildParams(jule::Slice<jule::Ptr<_215dbac4e_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_215dcd05d_Param>> _16613_params = jule::Slice<jule::Ptr<_215dcd05d_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb43ccc:;
		if (it != expr_end) {
			jule::Ptr<_215dbac4e_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_215dd5285_buildParam(_16717_decl));;
			}
			_iter_next_1ebb43ccc:;
			++it;
			goto _iter_begin_1ebb43ccc;
		}
		_iter_end_1ebb43ccc:;
	};
	return _16613_params;;
}



inline jule::Ptr<_215dccd71_RetType> _215dd58a1_buildRetType(jule::Ptr<_215dad703_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_215dccd71_RetType>(_215dccd71_RetType{._field_Kind=_215dd40ec_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_215dcd24a_Fn> _215dd5b48_buildFn(jule::Ptr<_215dbc06e_FnDecl> _18316_decl) {
	return jule::new_ptr<_215dcd24a_Fn>(_215dcd24a_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_215dd58a1_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_215dd5609_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_215dcd24a_Fn>> _215dd5de0_buildMethods(jule::Slice<jule::Ptr<_215dbc06e_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_215dcd24a_Fn>> _20213_methods = jule::Slice<jule::Ptr<_215dcd24a_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb475e9:;
		if (it != expr_end) {
			jule::Ptr<_215dbc06e_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_215dd5b48_buildFn(_20317_decl));;
			}
			_iter_next_1ebb475e9:;
			++it;
			goto _iter_begin_1ebb475e9;
		}
		_iter_end_1ebb475e9:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_215dddc1c_Trait> _215dd6187_buildTrait(jule::Ptr<_215dc5e13_TraitDecl> _20919_decl) {
	return jule::new_ptr<_215dddc1c_Trait>(_215dddc1c_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_215dd5de0_buildMethods(&(_20919_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_215de036c_EnumItem> _215dd642e_buildEnumItem(jule::Ptr<_215dc321d_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_215de036c_EnumItem>(_215de036c_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_215dd43d8_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_215de036c_EnumItem>> _215dd66c6_buildEnumItems(jule::Slice<jule::Ptr<_215dc321d_EnumItemDecl>>* _22624_decls) {
	jule::Slice<jule::Ptr<_215de036c_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_215de036c_EnumItem>>::alloc(0LL, (*(_22624_decls)).len());;
	{
		auto expr = _22624_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb49992:;
		if (it != expr_end) {
			jule::Ptr<_215dc321d_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_215dd642e_buildEnumItem(_22817_decl));;
			}
			_iter_next_1ebb49992:;
			++it;
			goto _iter_begin_1ebb49992;
		}
		_iter_end_1ebb49992:;
	};
	return _22713_items;;
}



inline jule::Ptr<_215de0d62_Enum> _215dd696d_buildEnum(jule::Ptr<_215dc3c46_EnumDecl> _23418_decl) {
	return jule::new_ptr<_215de0d62_Enum>(_215de0d62_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_215dd40ec_buildType(_23418_decl.get()._field_Kind), ._field_Items=_215dd66c6_buildEnumItems(&(_23418_decl.get()._field_Items))});;
}



inline jule::Ptr<_215de1d96_TypeEnumItem> _215dd6dbe_buildTypeEnumItem(jule::Ptr<_215dc474c_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_215de1d96_TypeEnumItem>(_215de1d96_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_215dd40ec_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>> _215dd7166_buildTypeEnumItems(jule::Slice<jule::Ptr<_215dc474c_TypeEnumItemDecl>>* _25228_decls) {
	jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_215de1d96_TypeEnumItem>>::alloc(0LL, (*(_25228_decls)).len());;
	{
		auto expr = _25228_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb4c05a:;
		if (it != expr_end) {
			jule::Ptr<_215dc474c_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_215dd6dbe_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1ebb4c05a:;
			++it;
			goto _iter_begin_1ebb4c05a;
		}
		_iter_end_1ebb4c05a:;
	};
	return _25313_items;;
}



inline jule::Ptr<_215de245c_TypeEnum> _215dd740d_buildTypeEnum(jule::Ptr<_215dc4d57_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_215de245c_TypeEnum>(_215de245c_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_215dd7166_buildTypeEnumItems(&(_26022_decl.get()._field_Items))});;
}



inline jule::Ptr<_215e41aa5_Var> _215dd76a5_buildVar(jule::Ptr<_215dbd04d_VarDecl> _26917_decl) {
	return jule::new_ptr<_215e41aa5_Var>(_215e41aa5_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_215dd40ec_buildType(_26917_decl.get()._field_Kind), ._field_Value=_215dd43d8_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__215dd2bbc_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_215e41aa5_Var>> _215dd794c_buildVars(jule::Slice<jule::Ptr<_215dbd04d_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_215e41aa5_Var>> _28713_vars = jule::Slice<jule::Ptr<_215e41aa5_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto expr = &(_28618_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebb500e6:;
		if (it != expr_end) {
			jule::Ptr<_215dbd04d_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_215dd76a5_buildVar(_28817_decl));;
			}
			_iter_next_1ebb500e6:;
			++it;
			goto _iter_begin_1ebb500e6;
		}
		_iter_end_1ebb500e6:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_215de68c3_Impl> _215dd7be4_buildImpl(jule::Ptr<_215dc651d_Impl> _29418_decl) {
	return jule::new_ptr<_215de68c3_Impl>(_215de68c3_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_215dd5de0_buildMethods(&(_29418_decl.get()._field_Methods)), ._field_Statics=_215dd794c_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _215de5c68_matchConstraint(jule::Str* _14221_c, jule::Ptr<_215eba403_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1ebba6b86:;
			{
				jule::Ptr<_215ec0150_Prim> _14513_prim = _215ebc78a_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _214703269_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1ebba5bc9:;
			{
				jule::Ptr<_215ec0150_Prim> _15113_prim = _215ebc78a_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _214702c91_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1ebba68de:;
			{
				jule::Ptr<_215ec0150_Prim> _15713_prim = _215ebc78a_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _214703005_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1ebba6966:;
			{
				jule::Ptr<_215ec0150_Prim> _16313_prim = _215ebc78a_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _214703137_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1ebba69dd:;
			{
				return _215ebba75_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1ebba66be:;
			{
				return (!(_215ebba75_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1ebba6735:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1ebba67ac:;
			{
				jule::Ptr<_215ec0150_Prim> _17513_prim = _215ebc78a_Prim((*(_14234_g)).ptr());;
				if ((_17513_prim != nullptr)) {
					return (_214703137_IsNum(_17513_prim.get()._field_Kind) || _215ec3384_IsStr(_17513_prim.ptr()));;
				};
				if ((_215ebcc63_Ptr((*(_14234_g)).ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_215dc71ab_StructIns> _18213_s = _215ebdbdc_Struct((*(_14234_g)).ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_215de0d62_Enum> _18913_enm = _215ebcec7_Enum((*(_14234_g)).ptr());;
				if ((_18913_enm != nullptr)) {
					return _214703137_IsNum(_215eba7ee_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1ebba64b0:;
			{
				return false;;
			}
		}
		_match_end_1ebba6416:;
	};
}



inline jule::Bool _215de6054_isBuiltinConstraint(jule::Str* _19925_ident) {
	{
		auto expr = &(_215de41c8_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebbb0277:;
		if (it != expr_end) {
			jule::Str *_20012_bc = it;
			{
				if (((*(_19925_ident)) == (*(_20012_bc)))) {
					return true;;
				};
			}
			_iter_next_1ebbb0277:;
			++it;
			goto _iter_begin_1ebbb0277;
		}
		_iter_end_1ebbb0277:;
	};
	return false;;
}



inline jule::Ptr<_215e03490_scopeChecker> _215de895d_newScopeCheckerBase(jule::Ptr<_215e2327e_Sema>* _5829_s, jule::Ptr<_215dcea10_FnIns> _5843_owner) {
	return jule::new_ptr<_215e03490_scopeChecker>(_215e03490_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_215e89647_SymbolTable>(), });;
}



inline jule::Ptr<_215e03490_scopeChecker> _215de8ce3_newScopeChecker(jule::Ptr<_215e2327e_Sema>* _6625_s, jule::Ptr<_215dcea10_FnIns> _6639_owner) {
	jule::Ptr<_215e03490_scopeChecker> _6713_base = _215de895d_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_215e02208_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_215e0267b_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_215e02208_scopeLabel> _215de9134_findLabelParent(jule::Str _7620_ident, jule::Ptr<_215e03490_scopeChecker> _7636_scope) {
	jule::Ptr<_215e02208_scopeLabel> _7713_label = _215e06e66_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_215e06e66_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1ebbc4cd6:;
	}
	_iter_end_1ebbc4cd6:;;
	return _7713_label;;
}



inline jule::Bool _215de94b9_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_215deb92d_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1ebbc6843:;
			{
				jule::Ptr<_215dc8553_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ebbc68ba:;
			{
				jule::Ptr<_215e8e471_Data> _9813_d = _9021_Model.cast_ptr<_215e8e471_Data>(&__jule_any_type23);;
				return _215de94b9_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1ebbc67aa:;
	};
	return false;;
}



inline jule::Bool _215de980a_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_215deb92d_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1ebbc8c41:;
			{
				return ((*(_10421_stmt)).cast_ptr<_215deb92d_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1ebbc8cb8:;
			{
				return ((*(_10421_stmt)).cast_ptr<_215dec775_InfIter>(&__jule_any_type36).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1ebbc8a32:;
			{
				jule::Ptr<_215ded5cd_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_215ded5cd_RangeIter>(&__jule_any_type40);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _215de94b9_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1ebbc8aa9:;
			{
				jule::Ptr<_215decbe8_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_215decbe8_WhileIter>(&__jule_any_type38);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _215de94b9_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _215de94b9_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1ebbc8b31:;
			{
				jule::Ptr<_215e00679_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_215e00679_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebbcc162:;
					if (it != expr_end) {
						jule::Ptr<_215e011c4_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ebbcd097:;
								if (it != expr_end) {
									jule::Ptr<_215e8e471_Data> *_12420_expr = it;
									{
										if (_215de94b9_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1ebbcd097:;
									++it;
									goto _iter_begin_1ebbcd097;
								}
								_iter_end_1ebbcd097:;
							};
						}
						_iter_next_1ebbcc162:;
						++it;
						goto _iter_begin_1ebbcc162;
					}
					_iter_end_1ebbcc162:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1ebbc6cb6:;
			{
				jule::Ptr<_215dec489_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_215dec489_Conditional>(&__jule_any_type35);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebbce54e:;
					if (it != expr_end) {
						jule::Ptr<_215debd29_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _215de94b9_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1ebbce54e:;
						++it;
						goto _iter_begin_1ebbce54e;
					}
					_iter_end_1ebbce54e:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ebbc6d2c:;
			{
				jule::Ptr<_215e8e471_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_215e8e471_Data>(&__jule_any_type23);;
				return _215de94b9_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1ebbc6c50:;
			{
				return false;;
			}
		}
		_match_end_1ebbc6bea:;
	};
}



inline jule::I64 _215de9b4b_countMatchType(jule::Ptr<_215e00679_Match>* _14720_m, jule::Ptr<_215eba403_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _215eba7ee_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebbd24a8:;
		if (it != expr_end) {
			jule::Ptr<_215e011c4_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1ebbd24a8;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ebbd3300:;
					if (it != expr_end) {
						jule::Ptr<_215e8e471_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1ebbd24a8;
							};
							if ((_1499_kind == _215eba7ee_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_215eba403_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1ebbd3300:;
						++it;
						goto _iter_begin_1ebbd3300;
					}
					_iter_end_1ebbd3300:;
				};
			}
			_iter_next_1ebbd24a8:;
			++it;
			goto _iter_begin_1ebbd24a8;
		}
		_iter_end_1ebbd24a8:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_215e8e471_Data>> _215de9de3_getDatasFromTupleData(jule::Ptr<_215e8e471_Data>* _17131_d) {
	if ((_215ebe429_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1ebbd6da3:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_215dca27a_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1ebbd49e9:;
				{
					jule::Ptr<_215ec4dbe_Tuple> _17721_t = _215ebe429_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_215e8e471_Data>> _17821_r = jule::Slice<jule::Ptr<_215e8e471_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ebbd5940:;
						if (it != expr_end) {
							jule::Ptr<_215eba403_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1ebbd5940:;
							++it;
							goto _iter_begin_1ebbd5940;
						}
						_iter_end_1ebbd5940:;
					};
					return _17821_r;;
				}
			}
			_match_end_1ebbd4950:;
		};
	} else {
		return jule::Slice<jule::Ptr<_215e8e471_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _215dea72e_checkMut(jule::Ptr<_215e2327e_Sema>* _20618_s, jule::Ptr<_215e8e471_Data>* _20629_left, jule::Ptr<_215e8e471_Data> _20646_right, jule::Ptr<_22e0aa1de_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1ebbda00a:;
			{
				_215e25e41_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _215ebba75_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1ebbd9845:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_215ebdbdc_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_215e25e41_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ebbd97ce:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ebbd9724:;
	};
}



inline jule::Bool _215deabb3_checkAssign(jule::Ptr<_215e2327e_Sema>* _22521_s, jule::Ptr<_215e8e471_Data>* _22536_left, jule::Ptr<_215e8e471_Data> _22553_right, jule::Ptr<_22e0aa1de_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_215dcea10_FnIns> _2269_f = _215ebd978_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_215e25e41_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_215e8ed34_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1ebbdea04:;
			{
				_215e25e41_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_215e26260_pushSugggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1ebbde372:;
			{
				_215e25e41_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_215dea72e_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1ebbde3d8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ebbde30b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ebbde1da:;
	};
}



inline jule::Bool _215deae5a_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1ebbdb869:;
			{
				return (!((*(_24731_n)).cast_ptr<_215db907c_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1ebbe171a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ebbe1594:;
			{
				return false;;
			}
		}
		_match_end_1ebbde482:;
	};
}



inline jule::Bool _215deb202_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1ebbe270a:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1ebbe2771:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_215e8e471_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1ebbe3057:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ebbe340e:;
						{
							return false;;
						}
					}
					_match_end_1ebbe3156:;
				};
			}
		}
		else {
			_case_begin_1ebbe19c3:;
			{
				return false;;
			}
		}
		_match_end_1ebbe196d:;
	};
}



inline jule::Bool _215deb499_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ebbe3a3b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ebbe361d:;
			{
				return false;;
			}
		}
		_match_end_1ebbe3530:;
	};
}



inline jule::Ptr<_215e41aa5_Var> _215e1784a_findVarInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd3b9ca:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_215e41aa5_Var> _4817_v = _215e8a329_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1ebd3b9ca:;
			++it;
			goto _iter_begin_1ebd3b9ca;
		}
		_iter_end_1ebd3b9ca:;
	};
	return nullptr;;
}



inline jule::Ptr<_215eb9710_TypeAlias> _215e17c79_findTypeAliasInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd3ce82:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_215eb9710_TypeAlias> _6017_ta = _215e8a6d1_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1ebd3ce82:;
			++it;
			goto _iter_begin_1ebd3ce82;
		}
		_iter_end_1ebd3ce82:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dc6cd2_Struct> _215e18164_findStructInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd3e428:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_215dc6cd2_Struct> _7217_s = _215e8aa88_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1ebd3e428:;
			++it;
			goto _iter_begin_1ebd3e428;
		}
		_iter_end_1ebd3e428:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dcd24a_Fn> _215e185c6_findFnInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd408be:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_215dcd24a_Fn> _8417_f = _215e8ae40_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1ebd408be:;
			++it;
			goto _iter_begin_1ebd408be;
		}
		_iter_end_1ebd408be:;
	};
	return nullptr;;
}



inline jule::Ptr<_215dddc1c_Trait> _215e188d4_findTraitInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd40e52:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_215dddc1c_Trait> _9617_t = _215e8b24d_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1ebd40e52:;
			++it;
			goto _iter_begin_1ebd40e52;
		}
		_iter_end_1ebd40e52:;
	};
	return nullptr;;
}



inline jule::Ptr<_215de0d62_Enum> _215e18c25_findEnumInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd42e43:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_215de0d62_Enum> _10817_e = _215e8b55b_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1ebd42e43:;
			++it;
			goto _iter_begin_1ebd42e43;
		}
		_iter_end_1ebd42e43:;
	};
	return nullptr;;
}



inline jule::Ptr<_215de245c_TypeEnum> _215e19066_findTypeEnumInPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd441ec:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_215de245c_TypeEnum> _12017_e = _215e8b869_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1ebd441ec:;
			++it;
			goto _iter_begin_1ebd441ec;
		}
		_iter_end_1ebd441ec:;
	};
	return nullptr;;
}



inline jule::Any _215e19561_defByIdentPackage(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd456b5:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _215e8c6e4_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1ebd456b5:;
			++it;
			goto _iter_begin_1ebd456b5;
		}
		_iter_end_1ebd456b5:;
	};
	return nullptr;;
}



inline jule::Bool _215e20666_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _22db524c3_HasPrefix(_36117_f, _22cc03e8d_Join(jule::Slice<jule::Str>::make({_22dc07c1b_PathStdlib,_36125_p})));;
}



inline jule::Bool _215e213c0_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ebd563a7:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ebd5641d:;
			{
				jule::Ptr<_215dc97da_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71);;
				return _215e213c0_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ebd561ba:;
			{
				jule::Ptr<_215dc93bc_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_215dc93bc_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _215e213c0_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ebd56231:;
			{
				jule::Ptr<_215dc7ab3_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_215dc7ab3_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_215ebcc63_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_215ebc9ee_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _215e213c0_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1ebd55791:;
			{
				return false;;
			}
		}
		_match_end_1ebd5573b:;
	};
}



inline _22dbec89d_Log _215e21865_compilerErr(jule::Ptr<_22e0aa1de_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_22dbec89d_Log _4213_log = _22dbec89d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_22dbeccdd_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_22e0b1756_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _215e21ba6_impIsLookupable(jule::Ptr<_215e1a133_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _215e1ca09_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _215e21ea3_appendRetVars(jule::Slice<jule::Ptr<_215e41aa5_Var>>* _6723_dest, jule::Ptr<_215dcea10_FnIns>* _6742_f) {
	if ((_215d7ce64_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_215eba403_TypeKind>> _7213_types = _215dd0b32_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd5e24a:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _7317_ident = *it;
			{
				if ((_22e0ac983_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _22e0acc2a_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1ebd5e24a;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_215e41aa5_Var>(_215e41aa5_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Data=jule::new_ptr<_215e8e471_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1ebd5e24a:;
			++it;
			_7310_i++;
			goto _iter_begin_1ebd5e24a;
		}
		_iter_end_1ebd5e24a:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _215e2225b_appendParamVars(jule::Slice<jule::Ptr<_215e41aa5_Var>>* _9725_dest, jule::Ptr<_215dcea10_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd62e30:;
		if (it != expr_end) {
			jule::Ptr<_215dcdb41_ParamIns> _10217_p = *it;
			{
				if ((_22e0ac983_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _22e0acc2a_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1ebd62e30;
				};
				jule::Ptr<_215e41aa5_Var> _10717_v = jule::new_ptr<_215e41aa5_Var>(_215e41aa5_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(), ._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Data=jule::new_ptr<_215e8e471_Data>()}), });;
				{
					
					if (_215d8baee_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1ebd65817:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_215eb9ec4_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_215d8d46e_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_215d8d46e_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec38d4_Sptr>(_215ec38d4_Sptr{._field_Elem=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1ebd6554d:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec4341_Slc>(_215ec4341_Slc{._field_Elem=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1ebd635c3:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1ebd6542c:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1ebd62e30:;
			++it;
			goto _iter_begin_1ebd62e30;
		}
		_iter_end_1ebd62e30:;
	};
}



inline void _215e22536_appendGenericTypeAliases(jule::Slice<jule::Ptr<_215eb9710_TypeAlias>>* _15734_dest, jule::Ptr<_215dcea10_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd6a9d7:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_215eb8bc6_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_215db78d8_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_215eb9710_TypeAlias>(_215eb9710_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1ebd6a9d7:;
			++it;
			_16710_i++;
			goto _iter_begin_1ebd6a9d7;
		}
		_iter_end_1ebd6a9d7:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_215dc71ab_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ebd6c104:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_215eb8bc6_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_215db78d8_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_215eb9710_TypeAlias>(_215eb9710_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1ebd6c104:;
				++it;
				_18114_i++;
				goto _iter_begin_1ebd6c104;
			}
			_iter_end_1ebd6c104:;
		};
	};
}



inline jule::Ptr<_215e89647_SymbolTable> _215e22888_findFile(jule::Slice<jule::Ptr<_215e89647_SymbolTable>>* _19518_files, jule::Ptr<_22e0b0579_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ebd6e106:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1ebd6e106:;
			++it;
			goto _iter_begin_1ebd6e106;
		}
		_iter_end_1ebd6e106:;
	};
	return nullptr;;
}



inline void _215e22cea_pushSugggestion(_22dbec89d_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_22dbeccdd_Logf(_20442_fmt, _20455_args);
}



inline jule::Bool _215e5a519_traitHasReferenceReceiver(jule::Ptr<_215dddc1c_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2098629dd:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_2098629dd;
				};
				jule::Ptr<_215dcd05d_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_215d8d46e_IsRef(_3313_p.ptr()) && _215d8baee_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_2098629dd:;
			++it;
			goto _iter_begin_2098629dd;
		}
		_iter_end_2098629dd:;
	};
	return false;;
}



inline jule::Bool _215e5a64b_floatAssignable(jule::Str _4120_kind, jule::Ptr<_215e8e471_Data>* _4132_d) {
	jule::Str _429_value = _2135483ac_FmtFloat(static_cast<jule::F64>(_21470490d_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _2134c0796_CheckBitFloat(_429_value, static_cast<jule::I64>(_213336ca0_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _215e76d82_sigAssignable(jule::Str _4618_kind, jule::Ptr<_215e8e471_Data>* _4630_d) {
	jule::F64 _479_min = _2147007a5_Min(_4618_kind);;
	jule::F64 _489_max = _2147008d7_Max(_4618_kind);;
	{
		
		if (_214705755_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_2098689e4:;
			{
				jule::F64 _5113_x = _214704567_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2146c215b_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_2147053ae_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_209869176:;
			{
				jule::F64 _5813_x = _21470490d_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_21470527c_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_2098691ed:;
			{
				jule::F64 _6313_x = _21470490d_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_209869055:;
	};
	return false;;
}



inline jule::Bool _215e76eb4_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_215e8e471_Data>* _6932_d) {
	jule::F64 _709_max = _2147008d7_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _215e5a0eb_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_21470408e_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_214705755_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20986de28:;
			{
				jule::F64 _7713_x = _214704567_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2146c215b_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_2147053ae_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20986de8e:;
			{
				jule::F64 _8713_x = _21470490d_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_21470527c_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_20986e016:;
			{
				jule::F64 _9213_x = _21470490d_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_20986d7a7:;
	};
	return false;;
}



inline jule::Bool _215e7805e_intAssignable(jule::Str _9818_kind, jule::Ptr<_215e8e471_Data>* _9830_d) {
	{
		
		if (_214702b5e_IsSigInt(_9818_kind)) {
			_case_begin_209873647:;
			{
				return _215e76d82_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_214702c91_IsUnsigInt(_9818_kind)) {
			_case_begin_209872ee8:;
			{
				return _215e76eb4_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_20986e6dc:;
			{
				return false;;
			}
		}
		_match_end_20986e621:;
	};
}



inline jule::Ptr<_215eba403_TypeKind> _215e886bd_lenKind(void) {
	return jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_215d77348_Directive> _215eb4aa1_findDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>* _414223_directives, jule::Str _414254_d) {
	{
		auto expr = _414223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b88451:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _414317_dr = *it;
			{
				if ((_414317_dr.get()._field_Tag.get()._field_Kind == _414254_d)) {
					return _414317_dr;;
				};
			}
			_iter_next_209b88451:;
			++it;
			goto _iter_begin_209b88451;
		}
		_iter_end_209b88451:;
	};
	return nullptr;;
}



inline jule::Any _215eb4e36_findBuiltinsImport(jule::Str _415123_ident, jule::Ptr<_215e1a133_ImportInfo> _415135_imp) {
	return _21610c853_findPackageBuiltinDef(_415135_imp.get()._field_LinkPath, _415123_ident);;
}



inline void _215eb5145_fitBitsize(jule::Ptr<_215e8e471_Data>* _415820_d) {
	jule::Ptr<_215ec0150_Prim> _415913_prim = _215ebc78a_Prim((*(_415820_d)).get()._field_Kind.ptr());;
	jule::I64 _41609_z = _213336ca0_BitsizeOf(_215ec04b3_Str(_415913_prim.ptr()));;
	if ((_41609_z == 64LLU)) {
		return;;
	};
	jule::I64 _416513_k = 0LL;;
	{
		
		if (_21470527c_IsI64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_209b8b025:;
			{
				_416513_k=static_cast<jule::I64>(_2134ec21d_BitsizeOfInt(static_cast<jule::I64>(_21470408e_ReadI64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_213356451_IntFromBits(_416513_k);
				};
			}
		}
		else if (_2147053ae_IsU64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_209b8b09c:;
			{
				_416513_k=static_cast<jule::I64>(_22e50535e_BitsizeOfUint(static_cast<jule::U64>(_2147041c1_ReadU64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_2133a0742_UintFromBits(_416513_k);
				};
			}
		}
		else if (_214705755_IsF64((*(_415820_d)).get()._field_Constant.ptr())) {
			_case_begin_209b8b124:;
			{
				_416513_k=static_cast<jule::I64>(_2134c9c23_BitsizeOfFloat(static_cast<jule::F64>(_214704567_ReadF64((*(_415820_d)).get()._field_Constant.ptr()))));
				if ((_416513_k > _41609_z)) {
					_415913_prim.get()._field_Kind=_2133aa054_FloatFromBits(_416513_k);
				};
			}
		}
		_match_end_209b8ae59:;
	};
}



inline void _215eb5442_makeStructLitAlloc(jule::Ptr<_215e8e471_Data>* _418528_d, jule::Ptr<_215dc7e8c_StructLitExprModel>* _418543_lit) {
	(*(_418528_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec38d4_Sptr>(_215ec38d4_Sptr{._field_Elem=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>((*(_418543_lit)).get()._field_Strct, 0)})}), 7)});
	(*(_418528_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dc8179_AllocStructLitExprModel>(_215dc8179_AllocStructLitExprModel{._field_Lit=(*(_418543_lit))}), &__jule_any_type118);
}



inline jule::Ptr<_215e41aa5_Var> _215eb5783_buildErrorVar(jule::Ptr<_215deb92d_Scope>* _419623_s, jule::Ptr<_215db3ae3_FnCallExpr>* _419639_fc) {
	return jule::new_ptr<_215e41aa5_Var>(_215e41aa5_Var{._field_Scope=(*(_419623_s)), ._field_Token=(*(_419639_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_215e904e9_Value>(_215e904e9_Value{._field_Data=jule::new_ptr<_215e8e471_Data>()}), });;
}



inline jule::Any _215eb5ac4_findBuiltinsSema(jule::Str _421521_ident, jule::Ptr<_215e2327e_Sema> _421537_s) {
	{
		auto expr = &(_421537_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209b91888:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _421617_imp = *it;
			{
				if ((_421617_imp.get()._field_ImportAll || _215e1ca09_existIdent(_421617_imp.ptr(), _421521_ident))) {
					jule::Any _421821_def = _215eb4e36_findBuiltinsImport(_421521_ident, _421617_imp);;
					if ((_421821_def != nullptr)) {
						return _421821_def;;
					};
				};
			}
			_iter_next_209b91888:;
			++it;
			goto _iter_begin_209b91888;
		}
		_iter_end_209b91888:;
	};
	jule::Str _422613_ppath = _22e0b0e70_Dir(_421537_s.get()._field_file.get()._field_File.ptr());;
	if (_22db524c3_HasPrefix(_422613_ppath, _22dc07c1b_PathStdlib)) {
		(_422613_ppath).mut_slice(_22dc07c1b_PathStdlib.len());;
		_422613_ppath=(jule::Str("std", 3) + _22db716bd_Replace(_422613_ppath, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL));
		return _21610c853_findPackageBuiltinDef(_422613_ppath, _421521_ident);;
	};
	return nullptr;;
}



inline jule::Bool _215eb5d6b_isOkForShifting(jule::Ptr<_215e8e471_Data>* _424025_d) {
	if (_215e8ed34_IsConst((*(_424025_d)).ptr())) {
		{
			
			if (_21470527c_IsI64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_209b952e8:;
				{
					return (_21470408e_ReadI64((*(_424025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_2147053ae_IsU64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_209b94b22:;
				{
					return true;;
				}
			}
			else if (_214705755_IsF64((*(_424025_d)).get()._field_Constant.ptr())) {
				_case_begin_209b94b88:;
				{
					return (_214704567_ReadF64((*(_424025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_209b94aab:;
				{
					return false;;
				}
			}
			_match_end_209b949e0:;
		};
	};
	jule::Ptr<_215ec0150_Prim> _42539_prim = _215ebc78a_Prim((*(_424025_d)).get()._field_Kind.ptr());;
	return ((_42539_prim != nullptr) && _214702dc3_IsInt(_215ec04b3_Str(_42539_prim.ptr())));;
}



inline jule::Bool _215eb6223_isInstancedStruct(jule::Ptr<_215dc71ab_StructIns> _425722_s) {
	return (_425722_s.get()._field_Decl.get()._field_Generics.len() == _425722_s.get()._field_Generics.len());;
}



inline jule::Bool _215eb6586_isPtrArithmeticCompatible(jule::Ptr<_215e8e471_Data>* _426135_l, jule::Ptr<_215e8e471_Data>* _426150_r) {
	jule::Ptr<_215ec6e48_Ptr> _42629_ptr = _215ebcc63_Ptr((*(_426150_r)).get()._field_Kind.ptr());;
	if ((_42629_ptr != nullptr)) {
		return _215ebab0c_Equal(_215ebcc63_Ptr((*(_426135_l)).get()._field_Kind.ptr()).get()._field_Elem, _42629_ptr.get()._field_Elem);;
	};
	if (_215e8ed34_IsConst((*(_426150_r)).ptr())) {
		return _215e7805e_intAssignable(jule::Str("int", 3), _426150_r);;
	};
	_215e7823a_typeCompatibilityChecker _426913_tcc = _215e7823a_typeCompatibilityChecker{._field_dest=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=(*(_426150_r)).get()._field_Kind, };;
	return _215e79824_check(&_426913_tcc);;
}



inline void _215eb67c8_applyCastKindModel(jule::Ptr<_215e8e471_Data>* _427828_d, jule::Ptr<_215eba403_TypeKind>* _427843_t) {
	(*(_427828_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dc8366_CastingExprModel>(_215dc8366_CastingExprModel{._field_Expr=(*(_427828_d)).get()._field_Model, ._field_Kind=(*(_427843_t)), ._field_ExprKind=(*(_427828_d)).get()._field_Kind}), &__jule_any_type100);
}



inline void _215eb6a81_applyCastKind(jule::Ptr<_215e8e471_Data>* _428623_d, jule::Ptr<_215eba403_TypeKind>* _428638_t) {
	_215eb67c8_applyCastKindModel(_428623_d, _428638_t);
	(*(_428623_d)).get()._field_Kind=(*(_428638_t));
}



inline jule::Ptr<_215e8e471_Data> _215eb6c7e_buildVoidData(void) {
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _215eb7048_checkDataForIntegerIndexing(jule::Ptr<_215e8e471_Data>* _429937_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_429937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_215ebc78a_Prim((*(_429937_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_209b9c366:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_214702dc3_IsInt(_215ec04b3_Str(_215ebc78a_Prim((*(_429937_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_209b9c3cc:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_215e8ed34_IsConst((*(_429937_d)).ptr())) {
			_case_begin_209b9c443:;
			{
				if ((_21470490d_AsF64((*(_429937_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_215ebc78a_Prim((*(_429937_d)).get()._field_Kind.ptr()) == nullptr) || _215e8ed34_IsConst((*(_429937_d)).ptr()) || (_22e3c8320_RealKindOf(_215ec04b3_Str(_215ebc78a_Prim((*(_429937_d)).get()._field_Kind.ptr()).ptr())) != _22e3c8320_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_209b9c4a9:;
			{
				jule::Ptr<_215eba403_TypeKind> _431617_t = jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)});;
				_215eb6a81_applyCastKind(_429937_d, &(_431617_t));
			}
		}
		_match_end_209b9be9d:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _215eb7312_applyCastModelByEnum(jule::Ptr<_215e8e471_Data>* _432530_d, jule::Ptr<_215de0d62_Enum> _432544_e) {
	if ((_432544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_215ec0150_Prim> _43299_p = _215ebc78a_Prim(_432544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_215ec3384_IsStr(_43299_p.ptr())) {
		return;;
	};
	_215eb67c8_applyCastKindModel(_432530_d, &(_432544_e.get()._field_Kind.get()._field_Kind));
}



inline void _215eb75ba_castConstByType(jule::Str* _433621_t, jule::Ptr<_215e8e471_Data>* _433634_d) {
	{
		
		if (_214702b5e_IsSigInt((*(_433621_t)))) {
			_case_begin_209ba259c:;
			{
				{
					auto _match_expr{ _213336ca0_BitsizeOf(_22e3c8320_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_209ba31e6:;
						{
							_214704a40_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_214704699_AsI64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_209ba326d:;
						{
							_214704a40_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_214704699_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_209ba32d4:;
						{
							_214704a40_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_214704699_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_209ba334a:;
						{
							_214704a40_SetI64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_214704699_AsI64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_209ba2833:;
				};
			}
		}
		else if (_214702c91_IsUnsigInt((*(_433621_t)))) {
			_case_begin_209ba2624:;
			{
				{
					auto _match_expr{ _213336ca0_BitsizeOf(_22e3c8320_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_209ba66b1:;
						{
							_214704b72_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2147047cb_AsU64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_209ba6749:;
						{
							_214704b72_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_2147047cb_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_209ba67b0:;
						{
							_214704b72_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_2147047cb_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_209ba6826:;
						{
							_214704b72_SetU64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_2147047cb_AsU64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_209ba2a20:;
				};
			}
		}
		else if (_214703005_IsFloat((*(_433621_t)))) {
			_case_begin_209ba269b:;
			{
				{
					auto _match_expr{ _213336ca0_BitsizeOf(_22e3c8320_RealKindOf((*(_433621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_209ba9b8c:;
						{
							_214705018_SetF64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_21470490d_AsF64((*(_433634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_209ba9c25:;
						{
							_214705018_SetF64((*(_433634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_21470490d_AsF64((*(_433634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_209ba8361:;
				};
			}
		}
		_match_end_209ba247b:;
	};
}



inline void _215eb7ac6_updateModelToGenericIns(jule::Any* _437033_m, jule::Ptr<_215dcea10_FnIns>* _437052_f) {
	{
		auto &_match_expr{ (*(_437033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_209baad14:;
			{
				(*(_437033_m))=jule::Any((*(_437052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_209baad7a:;
			{
				(*(_437033_m)).cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_437052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_209baade1:;
			{
				(*(_437033_m)).cast_ptr<_215dc99c7_StructStaticIdentExprModel>(&__jule_any_type103).get()._field_Method=(*(_437052_f));
			}
		}
		_match_end_209ba2cc8:;
	};
}



inline jule::Bool _215eb7d18_pushSubIdentFromExpr(jule::Any _438129_expr, jule::Ptr<_215dab305_SubIdentTypeDecl>* _438150_t) {
	{
		auto &_match_expr{ _438129_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_209bad443:;
			{
				jule::Ptr<_215db17c2_IdentExpr> _438417_e = _438129_expr.cast_ptr<_215db17c2_IdentExpr>(&__jule_any_type86);;
				(*(_438150_t)).get()._field_Idents = jule::alloc_for_append((*(_438150_t)).get()._field_Idents,1);(*(_438150_t)).get()._field_Idents.__push(jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_438417_e.get()._field_Token, ._field_Ident=_438417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_209bad4a9:;
			{
				jule::Ptr<_215db3065_SubIdentExpr> _439017_e = _438129_expr.cast_ptr<_215db3065_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_215eb7d18_pushSubIdentFromExpr(_439017_e.get()._field_Expr.get()._field_Kind, _438150_t)))) {
					return false;;
				};
				(*(_438150_t)).get()._field_Idents = jule::alloc_for_append((*(_438150_t)).get()._field_Idents,1);(*(_438150_t)).get()._field_Idents.__push(jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_439017_e.get()._field_Ident, ._field_Ident=_439017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_209bacdd2:;
			{
				return false;;
			}
		}
		_match_end_209bacd7c:;
	};
	return true;;
}



inline jule::Bool _215ed210c_kindUsesGenerics(jule::Ptr<_215eba403_TypeKind>* _158226_k, jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>* _158241_generics) {
	{
		auto expr = _158241_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2160a76aa:;
		if (it != expr_end) {
			jule::Ptr<_215db78d8_GenericDecl> *_158312_g = it;
			{
				if (static__215ed1c11_exist(&((*(_158312_g)).get()._field_Ident), _158226_k)) {
					return true;;
				};
			}
			_iter_next_2160a76aa:;
			++it;
			goto _iter_begin_2160a76aa;
		}
		_iter_end_2160a76aa:;
	};
	return false;;
}



inline jule::Bool _215ed2492_hasDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>* _159222_directives, jule::Str _159253_tag) {
	{
		auto expr = _159222_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_2160a7cd7:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _159317_dr = *it;
			{
				if ((_159317_dr.get()._field_Tag.get()._field_Kind == _159253_tag)) {
					return true;;
				};
			}
			_iter_next_2160a7cd7:;
			++it;
			goto _iter_begin_2160a7cd7;
		}
		_iter_end_2160a7cd7:;
	};
	return false;;
}



inline jule::Bool _215ed2739_canGetPtr(jule::Ptr<_215e8e471_Data>* _160119_d) {
	if (((!((*(_160119_d)).get()._field_Lvalue)) || _215e8ed34_IsConst((*(_160119_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_215ebd978_Fn((*(_160119_d)).get()._field_Kind.ptr()) != nullptr) || (_215ebcec7_Enum((*(_160119_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_2160aa229:;
			{
				return false;;
			}
		}
		else {
			_case_begin_2160a9a75:;
			{
				return true;;
			}
		}
		_match_end_2160a9a20:;
	};
}



inline jule::Bool _215ed2a58_isValidForSptrType(jule::Ptr<_215eba403_TypeKind>* _161428_t) {
	jule::Ptr<_215dc71ab_StructIns> _161513_s = _215ebdbdc_Struct((*(_161428_t)).ptr());;
	if ((((_161513_s != nullptr) && (_161513_s.get()._field_Decl != nullptr)) && _161513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _215ed2d00_isValidForRef(jule::Ptr<_215eba403_TypeKind>* _162323_t) {
	return (_215ebd978_Fn((*(_162323_t)).ptr()) == nullptr);;
}



inline jule::Bool _215ed30b9_isBuiltinStrConvertable(jule::Ptr<_215eba403_TypeKind>* _162633_t) {
	return (((!(_215ebb59c_Void((*(_162633_t)).ptr()))) && (_215ebd978_Fn((*(_162633_t)).ptr()) == nullptr)) && (_215ebe429_Tup((*(_162633_t)).ptr()) == nullptr));;
}



inline jule::Str _215ed333e_buildLinkPathByTokens(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _163027_tokens) {
	jule::Str _163113_s = (*(_163027_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_163027_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_2160add21:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_163212_token = it;
			{
				(_163113_s).append("::", 2);
				_163113_s+=(*(_163212_token)).get()._field_Kind;
			}
			_iter_next_2160add21:;
			++it;
			goto _iter_begin_2160add21;
		}
		_iter_end_2160add21:;
	};
	return _163113_s;;
}



inline jule::Ptr<_215ec0150_Prim> _215ed36e6_buildPrimType(jule::Str _163918_kind) {
	return jule::new_ptr<_215ec0150_Prim>(_215ec0150_Prim{._field_Kind=_163918_kind});;
}



inline jule::Ptr<_215dc6cd2_Struct> _215ed398d_getStructFromKind(jule::Ptr<_215eba403_TypeKind> _164526_k) {
	{
		
		if ((_164526_k == nullptr)) {
			_case_begin_2160b0042:;
			{
				return nullptr;;
			}
		}
		else if ((_215ebdbdc_Struct(_164526_k.ptr()) != nullptr)) {
			_case_begin_2160b00a8:;
			{
				return _215ebdbdc_Struct(_164526_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_215ebc9ee_Sptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_2160b011e:;
			{
				return _215ed398d_getStructFromKind(_215ebc9ee_Sptr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_215ebd714_Slc(_164526_k.ptr()) != nullptr)) {
			_case_begin_2160b0185:;
			{
				return _215ed398d_getStructFromKind(_215ebd714_Slc(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_215ebd4a0_Arr(_164526_k.ptr()) != nullptr)) {
			_case_begin_2160b041b:;
			{
				return _215ed398d_getStructFromKind(_215ebd4a0_Arr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_215ebcc63_Ptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_2160b0482:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_2160aeecb:;
			{
				return nullptr;;
			}
		}
		_match_end_2160ae52a:;
	};
}



inline jule::Bool _215ed3c35_isPrim(jule::Str _166811_kind) {
	return (((((((((((((((_166811_kind.equal("i8", 2) || _166811_kind.equal("i16", 3)) || _166811_kind.equal("i32", 3)) || _166811_kind.equal("i64", 3)) || _166811_kind.equal("u8", 2)) || _166811_kind.equal("u16", 3)) || _166811_kind.equal("u32", 3)) || _166811_kind.equal("u64", 3)) || _166811_kind.equal("f32", 3)) || _166811_kind.equal("f64", 3)) || _166811_kind.equal("int", 3)) || _166811_kind.equal("uint", 4)) || _166811_kind.equal("uintptr", 7)) || _166811_kind.equal("bool", 4)) || _166811_kind.equal("str", 3)) || _166811_kind.equal("any", 3));;
}



inline void _215ed3edd_applyImplicitCast(jule::Ptr<_215eba403_TypeKind>* _168727_dest, jule::Ptr<_215e8e471_Data>* _168749_d) {
	if (_215ebb338_IsNil((*(_168749_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_215ec0150_Prim> _16919_destPrim = _215ebc78a_Prim((*(_168727_dest)).ptr());;
	jule::Ptr<_215ec0150_Prim> _16929_prim = _215ebc78a_Prim((*(_168749_d)).get()._field_Kind.ptr());;
	if ((_16919_destPrim != nullptr)) {
		if (_215ec35e8_IsAny(_16919_destPrim.ptr())) {
			if (((_16929_prim == nullptr) || (!(_215ec35e8_IsAny(_16929_prim.ptr()))))) {
				_215eb6a81_applyCastKind(_168749_d, _168727_dest);
			};
			return;;
		};
		if (((((((!(_215ebb0c4_CppLinked((*(_168749_d)).get()._field_Kind.ptr()))) && (!((*(_168749_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_168749_d)).get()._field_Lvalue))) && (!(_215e8ed34_IsConst((*(_168749_d)).ptr())))) && (_16929_prim != nullptr)) && _214703137_IsNum(_16929_prim.get()._field_Kind))) {
			_215eb6a81_applyCastKind(_168749_d, _168727_dest);
		};
		return;;
	};
	if (((_215ebde51_Trait((*(_168727_dest)).ptr()) != nullptr) && (_215ebde51_Trait((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_215eb67c8_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
	if (((_215ebd23b_TypeEnum((*(_168727_dest)).ptr()) != nullptr) && (_215ebd23b_TypeEnum((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_215eb67c8_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
}



inline __jule_tuple_x_215e89647_SymbolTable__jule_tuple_s_22dbec89d_Log _215ed7057_buildSymbols(jule::Ptr<_215d761c1_Ast>* _1622_ast, jule::Trait<_215e174b5_Importer>* _1638_importer, jule::Ptr<_215dd8244_symbolBuilder> _1662_owner) {
	__jule_tuple_x_215e89647_SymbolTable__jule_tuple_s_22dbec89d_Log __jule_func_result;
	jule::Ptr<_215dd8244_symbolBuilder> _1713_sb = jule::new_ptr<_215dd8244_symbolBuilder>(_215dd8244_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_215ddd1e4_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log _215ed7486_analyzePackage(jule::Slice<jule::Ptr<_215d761c1_Ast>>* _3024_files, jule::Trait<_215e174b5_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log __jule_func_result;
	jule::Slice<jule::Ptr<_215e89647_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_215e89647_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_209a376b8:;
		if (it != expr_end) {
			jule::Ptr<_215d761c1_Ast> _3317_f = *it;
			{
				jule::Ptr<_215e89647_SymbolTable> _3418_table;;
				jule::Slice<_22dbec89d_Log> _3429_errors;;
				({
					__jule_tuple_x_215e89647_SymbolTable__jule_tuple_s_22dbec89d_Log __jule_assign_result = _215ed7057_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_209a376b8:;
			++it;
			goto _iter_begin_209a376b8;
		}
		_iter_end_209a376b8:;
	};
	jule::Ptr<_215e2327e_Sema> _4113_sema = jule::new_ptr<_215e2327e_Sema>(_215e2327e_Sema{._field_flags=(*(_3065_flags))});;
	_215e3da08_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_215e1d08c_Package> _4913_pkg = jule::new_ptr<_215e1d08c_Package>(_215e1d08c_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log _215ed7871_AnalyzePackage(jule::Slice<jule::Ptr<_215d761c1_Ast>> _7323_files, jule::Trait<_215e174b5_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_215e1d08c_Package> _7714_package;;
	jule::Slice<_22dbec89d_Log> _7727_logs;;
	({
		__jule_tuple_x_215e1d08c_Package__jule_tuple_s_22dbec89d_Log __jule_assign_result = _215ed7486_analyzePackage(&(_7323_files), &(_7342_importer), &(_7362_flags));
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_215dcea10_FnIns> _21610b643_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_209a411c7:;
			{
				static jule::Ptr<_215dcea10_FnIns> _2620_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610dd0a_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_209a4188c:;
			{
				static jule::Ptr<_215dcea10_FnIns> _2920_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610e1e5_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_209a4197a:;
			{
				static jule::Ptr<_215dcea10_FnIns> _3220_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610e5d0_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_209a419e1:;
			{
				static jule::Ptr<_215dcea10_FnIns> _3520_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610e9ba_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_209a414c4:;
			{
				static jule::Ptr<_215dcea10_FnIns> _3820_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_2161100d6_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_209a4153a:;
			{
				static jule::Ptr<_215dcea10_FnIns> _4120_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_2161104c1_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_209a415b2:;
			{
				static jule::Ptr<_215dcea10_FnIns> _4420_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_2161112c4_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_209a41639:;
			{
				static jule::Ptr<_215dcea10_FnIns> _4720_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_2161124c3_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_209a41a68:;
			{
				static jule::Ptr<_215dcea10_FnIns> _5020_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_216113040_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_209a41ae0:;
			{
				static jule::Ptr<_215dcea10_FnIns> _5320_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_2161138ae_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_209a41b67:;
			{
				static jule::Ptr<_215dcea10_FnIns> _5620_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_216113c99_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_209a41bde:;
			{
				static jule::Ptr<_215dcea10_FnIns> _5920_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_216114360_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_209a4135e:;
			{
				return nullptr;;
			}
		}
		_match_end_209a412b5:;
	};
}



inline jule::Ptr<_215eb9710_TypeAlias> _21610b90c_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_209a49301:;
			{
				static jule::Ptr<_215eb9710_TypeAlias> _6920_t = jule::new_ptr<_215eb9710_TypeAlias>(_215eb9710_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_209a49367:;
			{
				static jule::Ptr<_215eb9710_TypeAlias> _7920_t = jule::new_ptr<_215eb9710_TypeAlias>(_215eb9710_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_215ebe7d1_TypeSymbol>(_215ebe7d1_TypeSymbol{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_209a48c3a:;
			{
				return nullptr;;
			}
		}
		_match_end_209a48762:;
	};
}



inline jule::Any _21610bba4_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_215dcea10_FnIns> _9413_f = _21610b643_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_215eb9710_TypeAlias> _9813_ta = _21610b90c_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _21610bec3_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_209a4c29e:;
			{
				static jule::Ptr<_215dcea10_FnIns> _10820_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_216115c9b_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_209a4c9a8:;
			{
				static jule::Ptr<_215dcea10_FnIns> _11120_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_216116186_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_209a4c06d:;
			{
				return nullptr;;
			}
		}
		_match_end_209a4c47a:;
	};
}



inline jule::Any _21610c26a_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_209a4e339:;
			{
				static jule::Ptr<_215dcea10_FnIns> _12120_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_2161146c3_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_209a4e3a0:;
			{
				static jule::Ptr<_215dcea10_FnIns> _12420_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_216114ae1_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_209a4e15d:;
			{
				static jule::Ptr<_215dcea10_FnIns> _12720_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21611500e_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_209a4c5bd:;
			{
				return nullptr;;
			}
		}
		_match_end_209a4d39e:;
	};
}



inline jule::Any _21610c534_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_209a51605:;
			{
				static jule::Ptr<_215dcea10_FnIns> _13720_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21611543d_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_209a5166b:;
			{
				static jule::Ptr<_215dcea10_FnIns> _14020_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_Decl=jule::new_ptr<_215dcd24a_Fn>(_215dcd24a_Fn{._field_Generics=jule::Slice<jule::Ptr<_215db78d8_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21611585b_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_209a4e416:;
			{
				return nullptr;;
			}
		}
		_match_end_209a5066a:;
	};
}



inline jule::Any _21610c853_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_209a5356e:;
			{
				return _21610bec3_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_209a535d5:;
			{
				return _21610c26a_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_209a53393:;
			{
				return _21610c534_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_209a52e86:;
			{
				return nullptr;;
			}
		}
		_match_end_209a52051:;
	};
}



inline jule::Ptr<_215e8e471_Data> _21610cd70_builtinCallerCommonPlain(jule::Ptr<_215e90ede_Eval>* _16534_e, jule::Ptr<_215db3ae3_FnCallExpr>* _16549_fc, jule::Ptr<_215e8e471_Data>* _16571_d) {
	jule::Ptr<_215dcea10_FnIns> _16613_f = _215ebd978_Fn((*(_16571_d)).get()._field_Kind.ptr());;
	_215e81210_fnCallArgChecker _16813_fcac = _215e81210_fnCallArgChecker{._field_e=(*(_16534_e)), ._field_args=(*(_16549_fc)).get()._field_Args, ._field_errorToken=(*(_16549_fc)).get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_215e835ca_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_215dc8553_FnCallExprModel> _17913_model = jule::new_ptr<_215dc8553_FnCallExprModel>(_215dc8553_FnCallExprModel{._field_Token=(*(_16549_fc)).get()._field_Token, ._field_Func=_16613_f, ._field_Expr=(*(_16571_d)).get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		(*(_16571_d))=_215eb6c7e_buildVoidData();
	} else {
		(*(_16571_d))=jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	(*(_16571_d)).get()._field_Model=jule::Any(_17913_model, &__jule_any_type34);
	return (*(_16571_d));;
}



inline jule::Ptr<_215e8e471_Data> _21610d1e4_builtinCallerCommon(jule::Ptr<_215e90ede_Eval>* _19829_e, jule::Ptr<_215db3ae3_FnCallExpr>* _19844_fc, jule::Ptr<_215e8e471_Data>* _19866_d) {
	return _21610cd70_builtinCallerCommonPlain(_19829_e, _19844_fc, _19866_d);;
}



inline jule::Ptr<_215e8e471_Data> _21610d5ce_builtinCallerCommonMut(jule::Ptr<_215e90ede_Eval>* _20232_e, jule::Ptr<_215db3ae3_FnCallExpr>* _20247_fc, jule::Ptr<_215e8e471_Data>* _20269_d) {
	if ((!((*(_20269_d)).get()._field_Mutable))) {
		_215e914ea_pushErr((*(_20232_e)).ptr(), (*(_20247_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _21610d1e4_builtinCallerCommon(_20232_e, _20247_fc, _20269_d);;
}



inline jule::Ptr<_215e8e471_Data> _21610d920_builtinCallerError(jule::Ptr<_215e90ede_Eval>* _20928_e, jule::Ptr<_215db3ae3_FnCallExpr>* _20943_fc) {
	if (((*(_20943_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_20943_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _21713_expr = _215eab911_evalExpr((*(_20928_e)), (*(_20943_fc)).get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_215e8e85b_IsNil(_21713_expr.ptr())) {
		_215e914ea_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e8e471_Data> _22613_d = _215eb6c7e_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_215dcc007_BuiltinErrorCallExprModel>(_215dcc007_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type22);
	return _22613_d;;
}



inline jule::Ptr<_215e8e471_Data> _21610dd0a_builtinCallerOut(jule::Ptr<_215e90ede_Eval>* _23126_e, jule::Ptr<_215db3ae3_FnCallExpr>* _23141_fc, jule::Ptr<_215e8e471_Data>* ) {
	if (((*(_23141_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_23141_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _24013_expr = _215eab911_evalExpr((*(_23126_e)), (*(_23141_fc)).get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_215ed30b9_isBuiltinStrConvertable(&(_24013_expr.get()._field_Kind))))) {
		_215e914ea_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _25013_d = _215eb6c7e_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_215dca467_BuiltinOutCallExprModel>(_215dca467_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type27);
	return _25013_d;;
}



inline jule::Ptr<_215e8e471_Data> _21610e1e5_builtinCallerOutln(jule::Ptr<_215e90ede_Eval>* _25528_e, jule::Ptr<_215db3ae3_FnCallExpr>* _25543_fc, jule::Ptr<_215e8e471_Data>* _25565_d) {
	(*(_25565_d))=_21610dd0a_builtinCallerOut(_25528_e, _25543_fc, _25565_d);
	if (((*(_25565_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_25565_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dca654_BuiltinOutlnCallExprModel>(_215dca654_BuiltinOutlnCallExprModel{._field_Expr=(*(_25565_d)).get()._field_Model.cast_ptr<_215dca467_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Expr, }), &__jule_any_type28);
	return (*(_25565_d));;
}



inline jule::Ptr<_215e8e471_Data> _21610e5d0_builtinCallerNew(jule::Ptr<_215e90ede_Eval>* _26726_e, jule::Ptr<_215db3ae3_FnCallExpr>* _26741_fc, jule::Ptr<_215e8e471_Data>* _26763_d) {
	if (((*(_26741_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_26741_fc)).get()._field_Args.len() > 2LL)) {
		_215e914ea_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _27613_t = _215eab2e5_evalExprKind((*(_26726_e)), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_215e914ea_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_215ed2a58_isValidForSptrType(&(_27613_t.get()._field_Kind))))) {
		jule::Ptr<_215dc71ab_StructIns> _28717_s = _215ebdbdc_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_215e914ea_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_26763_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(jule::new_ptr<_215ec38d4_Sptr>(_215ec38d4_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if (((*(_26741_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_215eba403_TypeKind> _30117_old = (*(_26726_e)).get()._field_prefix;;
		(*(_26726_e)).get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_215e8e471_Data> _30417_init = _215eab911_evalExpr((*(_26726_e)), (*(_26741_fc)).get()._field_Args[1LL]);;
		(*(_26726_e)).get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_22e0aa1de_Token> _30921_token = (*(_26741_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_215e30c3c_checkValidityForInitExpr((*(_26726_e)).get()._field_s, (!((*(_26726_e)).get()._field_immutable)), false, &(_27613_t.get()._field_Kind), &(_30417_init), &(_30921_token));
			_215e2cd27_checkAssignType((*(_26726_e)).get()._field_s, false, &(_27613_t.get()._field_Kind), &(_30417_init), _30921_token);
			(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcaa2d_BuiltinNewCallExprModel>(_215dcaa2d_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type119);
		};
	} else {
		(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcaa2d_BuiltinNewCallExprModel>(_215dcaa2d_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type119);
	};
	return (*(_26763_d));;
}



inline jule::Ptr<_215e8e471_Data> _21610e9ba_builtinCallerPanic(jule::Ptr<_215e90ede_Eval>* _32928_e, jule::Ptr<_215db3ae3_FnCallExpr>* _32943_fc, jule::Ptr<_215e8e471_Data>* ) {
	if (((*(_32943_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_32943_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _33813_expr = _215eab911_evalExpr((*(_32928_e)), (*(_32943_fc)).get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_215ebc78a_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_215ec3384_IsStr(_215ebc78a_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_215e914ea_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e8e471_Data> _34713_d = _215eb6c7e_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_215dcac1a_BuiltinPanicCallExprModel>(_215dcac1a_BuiltinPanicCallExprModel{._field_Token=(*(_32943_fc)).get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type29);
	return _34713_d;;
}



inline jule::Ptr<_215e8e471_Data> _2161100d6_builtinCallerMake(jule::Ptr<_215e90ede_Eval>* _35527_e, jule::Ptr<_215db3ae3_FnCallExpr>* _35542_fc, jule::Ptr<_215e8e471_Data>* _35564_d) {
	if (((*(_35542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_35542_fc)).get()._field_Args.len() == 1LL)) {
			_215e914ea_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_215e914ea_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _36513_t = _215eab2e5_evalExprKind((*(_35527_e)), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_215e914ea_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_35542_fc)).get()._field_Args.len() > 3LL)) {
		_215e914ea_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_35564_d)).get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_215e8e471_Data> _38113_lenExpr = _215eab911_evalExpr(_215e2c51e_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_215e99adb_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_38113_lenExpr), (*(_35542_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_215dcb0e4_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_215dcb0e4_BuiltinMakeCallExprModel>(_215dcb0e4_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	(*(_35564_d)).get()._field_Model=jule::Any(_38813_model, &__jule_any_type120);
	if (((*(_35542_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_215e8e471_Data> _39417_capExpr = _215eab911_evalExpr(_215e2c51e_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return (*(_35564_d));;
		};
		_215e99adb_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_39417_capExpr), (*(_35542_fc)).get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return (*(_35564_d));;
}



inline jule::Ptr<_215e8e471_Data> _2161104c1_builtinCallerAppend(jule::Ptr<_215e90ede_Eval>* _40429_e, jule::Ptr<_215db3ae3_FnCallExpr>* _40444_fc, jule::Ptr<_215e8e471_Data>* _40466_d) {
	if (((*(_40444_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_40444_fc)).get()._field_Args.len() == 1LL)) {
			_215e914ea_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_215e914ea_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _41413_t = _215eab911_evalExpr((*(_40429_e)), (*(_40444_fc)).get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_215ebd714_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_215e914ea_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215dcea10_FnIns> _42413_f = jule::new_ptr<_215dcea10_FnIns>(_215dcea10_FnIns{._field_Params=jule::Slice<jule::Ptr<_215dcdb41_ParamIns>>::make({jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_215dcdb41_ParamIns>(_215dcdb41_ParamIns{._field_Decl=jule::new_ptr<_215dcd05d_Param>(_215dcd05d_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_215ebd714_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_215e8e471_Data>(jule::Ptr<_215e90ede_Eval>*,jule::Ptr<_215db3ae3_FnCallExpr>*,jule::Ptr<_215e8e471_Data>*)>(_21610cd70_builtinCallerCommonPlain), });;
	(*(_40466_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_42413_f, 1)});
	(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dc9da1_CommonIdentExprModel>(_215dc9da1_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_40466_d))=_21610cd70_builtinCallerCommonPlain(_40429_e, _40444_fc, _40466_d);
	if (((*(_40466_d)) != nullptr)) {
		jule::Ptr<_215dc8553_FnCallExprModel> _45217_model = (*(_40466_d)).get()._field_Model.cast_ptr<_215dc8553_FnCallExprModel>(&__jule_any_type34);;
		(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcb2d1_BuiltinAppendCallExprModel>(_215dcb2d1_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type25);
	};
	return (*(_40466_d));;
}



inline jule::Ptr<_215e8e471_Data> _216110955_callerCopySlice(jule::Ptr<_215e8e471_Data>* _46125_dest, jule::Ptr<_215e90ede_Eval>* _46143_e, jule::Ptr<_215db3ae3_FnCallExpr>* _46158_fc, jule::Ptr<_215e8e471_Data>* _46180_d) {
	if ((!((*(_46125_dest)).get()._field_Mutable))) {
		_215e914ea_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e8e471_Data> _46613_src = _215eab911_evalExpr((*(_46143_e)), (*(_46158_fc)).get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_215ec4341_Slc> _47013_slc = _215ebd714_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _215ebba75_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_215e914ea_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_215ebab0c_Equal((*(_46125_dest)).get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_215e914ea_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_215ec0150_Prim> _48013_destPrim = _215ebc78a_Prim(_215ebd714_Slc((*(_46125_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_215ec0150_Prim> _48113_prim = _215ebc78a_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_215ec3384_IsStr(_48113_prim.ptr())))) || (!(_215ec1959_IsU8(_48013_destPrim.ptr()))))) {
			_215e914ea_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_46180_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_46180_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcbd1a_BuiltinCopyCallExprModel>(_215dcbd1a_BuiltinCopyCallExprModel{._field_Dest=(*(_46125_dest)), ._field_Src=_46613_src}), &__jule_any_type31);
	return (*(_46180_d));;
}



inline jule::Ptr<_215e8e471_Data> _216110dd9_callerCopyStr(jule::Ptr<_215e8e471_Data>* _49523_dest, jule::Ptr<_215e90ede_Eval>* _49541_e, jule::Ptr<_215db3ae3_FnCallExpr>* _49556_fc, jule::Ptr<_215e8e471_Data>* _49578_d) {
	if ((!((*(_49523_dest)).get()._field_Mutable))) {
		_215e914ea_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e8e471_Data> _50013_src = _215eab911_evalExpr((*(_49541_e)), (*(_49556_fc)).get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_215ebc78a_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209a91dc6:;
			{
				if (_215ec3384_IsStr(_215ebc78a_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_215ebd714_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209a91e3c:;
			{
				jule::Ptr<_215ec4341_Slc> _51017_slc = _215ebd714_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_215ebc78a_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _215ec1959_IsU8(_215ebc78a_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_209a91ba6:;
	};
	_215e914ea_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str((*(_49523_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_215eba7ee_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_49578_d)).get()._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_49578_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcbd1a_BuiltinCopyCallExprModel>(_215dcbd1a_BuiltinCopyCallExprModel{._field_Dest=(*(_49523_dest)), ._field_Src=_50013_src}), &__jule_any_type31);
	return (*(_49578_d));;
}



inline jule::Ptr<_215e8e471_Data> _2161112c4_builtinCallerCopy(jule::Ptr<_215e90ede_Eval>* _52527_e, jule::Ptr<_215db3ae3_FnCallExpr>* _52542_fc, jule::Ptr<_215e8e471_Data>* _52564_d) {
	if (((*(_52542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_52542_fc)).get()._field_Args.len() == 1LL)) {
			_215e914ea_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_215e914ea_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_52542_fc)).get()._field_Args.len() > 2LL)) {
		_215e914ea_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _53813_dest = _215eab911_evalExpr((*(_52527_e)), (*(_52542_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_209a9c1cd:;
			{
				return nullptr;;
			}
		}
		else if ((_215ebd714_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209a9c244:;
			{
				return _216110955_callerCopySlice(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else if (((_215ebc78a_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _215ec3384_IsStr(_215ebc78a_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_209a9c035:;
			{
				return _216110dd9_callerCopyStr(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else {
			_case_begin_209a9b287:;
			{
				_215e914ea_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209a9b221:;
	};
}



inline jule::Ptr<_215e8e471_Data> _216111615_callerLenSlice(jule::Ptr<_215e8e471_Data>* _55224_expr, jule::Ptr<_215e8e471_Data>* _55242_d) {
	(*(_55242_d)).get()._field_Kind=_215e886bd_lenKind();
	(*(_55242_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcb4bd_BuiltinLenCallExprModel>(_215dcb4bd_BuiltinLenCallExprModel{._field_Expr=(*(_55224_expr))}), &__jule_any_type121);
	return (*(_55242_d));;
}



inline jule::Ptr<_215e8e471_Data> _216111956_callerLenMap(jule::Ptr<_215e8e471_Data>* _56022_expr, jule::Ptr<_215e8e471_Data>* _56040_d) {
	(*(_56040_d)).get()._field_Kind=_215e886bd_lenKind();
	(*(_56040_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcb4bd_BuiltinLenCallExprModel>(_215dcb4bd_BuiltinLenCallExprModel{._field_Expr=(*(_56022_expr))}), &__jule_any_type121);
	return (*(_56040_d));;
}



inline jule::Ptr<_215e8e471_Data> _216111c97_callerLenArr(jule::Ptr<_215e8e471_Data>* _56822_expr, jule::Ptr<_215e8e471_Data>* _56840_d) {
	(*(_56840_d)).get()._field_Kind=_215e886bd_lenKind();
	(*(_56840_d)).get()._field_Constant=static__214703588_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_215ebd4a0_Arr((*(_56822_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_56840_d)).get()._field_Model=jule::Any((*(_56840_d)).get()._field_Constant, &__jule_any_type47);
	return (*(_56840_d));;
}



inline jule::Ptr<_215e8e471_Data> _2161120d8_callerLenStr(jule::Ptr<_215e8e471_Data>* _57522_expr, jule::Ptr<_215e8e471_Data>* _57540_d) {
	(*(_57540_d)).get()._field_Kind=_215e886bd_lenKind();
	if (_215e8ed34_IsConst((*(_57522_expr)).ptr())) {
		(*(_57540_d)).get()._field_Constant=static__214703588_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_214704435_ReadStr((*(_57522_expr)).get()._field_Constant.ptr()).len())));
		(*(_57540_d)).get()._field_Model=jule::Any((*(_57540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_57540_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcb4bd_BuiltinLenCallExprModel>(_215dcb4bd_BuiltinLenCallExprModel{._field_Expr=(*(_57522_expr))}), &__jule_any_type121);
	};
	return (*(_57540_d));;
}



inline jule::Ptr<_215e8e471_Data> _2161124c3_builtinCallerLen(jule::Ptr<_215e90ede_Eval>* _58826_e, jule::Ptr<_215db3ae3_FnCallExpr>* _58841_fc, jule::Ptr<_215e8e471_Data>* _58863_d) {
	if (((*(_58841_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_58841_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _59613_dest = _215eab911_evalExpr((*(_58826_e)), (*(_58841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_209aa6e74:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_209aa6eda:;
			{
				_215e914ea_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_215ebd714_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209aa6ccb:;
			{
				return _216111615_callerLenSlice(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_215ebd4a0_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209aa6d53:;
			{
				return _216111c97_callerLenArr(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_215ebe1b5_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209aa6094:;
			{
				return _216111956_callerLenMap(&(_59613_dest), _58863_d);;
			}
		}
		else if (((_215ebc78a_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _215ec3384_IsStr(_215ebc78a_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_209aa610a:;
			{
				return _2161120d8_callerLenStr(&(_59613_dest), _58863_d);;
			}
		}
		else {
			_case_begin_209aa602d:;
			{
				_215e914ea_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209aa5eb7:;
	};
}



inline jule::Ptr<_215e8e471_Data> _216112814_callerCapSlice(jule::Ptr<_215e8e471_Data>* _61724_expr, jule::Ptr<_215e8e471_Data>* _61742_d) {
	(*(_61742_d)).get()._field_Kind=_215e886bd_lenKind();
	(*(_61742_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcb6aa_BuiltinCapCallExprModel>(_215dcb6aa_BuiltinCapCallExprModel{._field_Expr=(*(_61724_expr))}), &__jule_any_type122);
	return (*(_61742_d));;
}



inline jule::Ptr<_215e8e471_Data> _216112b55_callerCapStr(jule::Ptr<_215e8e471_Data>* _62522_expr, jule::Ptr<_215e8e471_Data>* _62540_d) {
	(*(_62540_d)).get()._field_Kind=_215e886bd_lenKind();
	if (_215e8ed34_IsConst((*(_62522_expr)).ptr())) {
		(*(_62540_d)).get()._field_Constant=static__214703588_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_214704435_ReadStr((*(_62522_expr)).get()._field_Constant.ptr()).cap())));
		(*(_62540_d)).get()._field_Model=jule::Any((*(_62540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_62540_d)).get()._field_Model=jule::Any(jule::new_ptr<_215dcb6aa_BuiltinCapCallExprModel>(_215dcb6aa_BuiltinCapCallExprModel{._field_Expr=(*(_62522_expr))}), &__jule_any_type122);
	};
	return (*(_62540_d));;
}



inline jule::Ptr<_215e8e471_Data> _216113040_builtinCallerCap(jule::Ptr<_215e90ede_Eval>* _63826_e, jule::Ptr<_215db3ae3_FnCallExpr>* _63841_fc, jule::Ptr<_215e8e471_Data>* _63863_d) {
	if (((*(_63841_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63841_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _64613_dest = _215eab911_evalExpr((*(_63826_e)), (*(_63841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_209ab1c1a:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_209ab1c81:;
			{
				_215e914ea_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_215ebd714_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209ab1a72:;
			{
				return _216112814_callerCapSlice(&(_64613_dest), _63863_d);;
			}
		}
		else if (((_215ebc78a_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _215ec3384_IsStr(_215ebc78a_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_209ab1ad8:;
			{
				return _216112b55_callerCapStr(&(_64613_dest), _63863_d);;
			}
		}
		else {
			_case_begin_209ab0cc4:;
			{
				_215e914ea_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209ab0c5d:;
	};
}



inline jule::Ptr<_215e8e471_Data> _2161134c4_callerDeleteMap(jule::Ptr<_215e90ede_Eval>* _66325_e, jule::Ptr<_215db3ae3_FnCallExpr>* _66340_fc, jule::Ptr<_215e8e471_Data>* _66362_expr, jule::Ptr<_215e8e471_Data>* _66380_d) {
	if ((!((*(_66362_expr)).get()._field_Mutable))) {
		_215e914ea_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_66380_d))=_215eb6c7e_buildVoidData();
	jule::Ptr<_215dc95a9_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_215dc95a9_BuiltinDeleteCallExprModel>(_215dc95a9_BuiltinDeleteCallExprModel{._field_Dest=(*(_66362_expr)), });;
	if (((*(_66340_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_215e8e471_Data> _67217_key = _215eab911_evalExpr((*(_66325_e)), (*(_66340_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_209ab823d:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_209ab6a99:;
				{
					_215e914ea_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_209ab6a33:;
				{
					;
					jule::Ptr<_215eba403_TypeKind> _68121_keyType = _215ebe1b5_Map((*(_66362_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_215e2cd27_checkAssignType((*(_66325_e)).get()._field_s, false, &(_68121_keyType), &(_67217_key), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_209ab69bc:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	(*(_66380_d)).get()._field_Model=jule::Any(_66813_model, &__jule_any_type32);
	return (*(_66380_d));;
}



inline jule::Ptr<_215e8e471_Data> _2161138ae_builtinCallerDelete(jule::Ptr<_215e90ede_Eval>* _69229_e, jule::Ptr<_215db3ae3_FnCallExpr>* _69244_fc, jule::Ptr<_215e8e471_Data>* _69266_d) {
	if (((*(_69244_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69244_fc)).get()._field_Args.len() > 2LL)) {
		_215e914ea_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _70013_dest = _215eab911_evalExpr((*(_69229_e)), (*(_69244_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_209abd82b:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_209abd892:;
			{
				_215e914ea_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_215ebe1b5_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_209abd683:;
			{
				return _2161134c4_callerDeleteMap(_69229_e, _69244_fc, &(_70013_dest), _69266_d);;
			}
		}
		else {
			_case_begin_209abc8d5:;
			{
				_215e914ea_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_209abc86e:;
	};
}



inline jule::Ptr<_215e8e471_Data> _216113c99_builtinCallerClone(jule::Ptr<_215e90ede_Eval>* _71528_e, jule::Ptr<_215db3ae3_FnCallExpr>* _71543_fc, jule::Ptr<_215e8e471_Data>* ) {
	if (((*(_71543_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_71543_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _72413_d = _215eab2e5_evalExprKind((*(_71528_e)), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_215ebc2b2_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_215ebd714_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_215ebe1b5_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_215ebd4a0_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_215ebc9ee_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_209ac3ad9:;
				{
					{
						_215e914ea_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_215ebdbdc_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_209ac3446:;
				{
					{
						_215e914ea_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			else {
				_case_begin_209ac33d0:;
				{
					{
						_215e914ea_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_215eba7ee_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			_match_end_209ac3017:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_215dca841_BuiltinCloneCallExprModel>(_215dca841_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type26);
	return _72413_d;;
}



inline jule::Ptr<_215e8e471_Data> _216114360_builtinCallerAssert(jule::Ptr<_215e90ede_Eval>* _75729_e, jule::Ptr<_215db3ae3_FnCallExpr>* _75744_fc, jule::Ptr<_215e8e471_Data>* ) {
	if (((*(_75744_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_75744_fc)).get()._field_Args.len() > 2LL)) {
		_215e914ea_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _76613_expr = _215eab911_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_215ebc78a_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_215ec3120_IsBool(_215ebc78a_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_215e914ea_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215dcae07_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_215dcae07_BuiltinAssertCallExprModel>(_215dcae07_BuiltinAssertCallExprModel{._field_Token=(*(_75744_fc)).get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_75744_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_215e8e471_Data> _78317_log = _215eab911_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_215e8ed34_IsConst(_78317_log.ptr()))) || (_215ebc78a_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_215ec3384_IsStr(_215ebc78a_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_215e914ea_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_215eba7ee_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_214704435_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_215e8e471_Data> _79613_d = _215eb6c7e_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type30);
	return _79613_d;;
}



inline jule::Ptr<_215e8e471_Data> _2161146c3_builtinCallerStdMemSizeOf(jule::Ptr<_215e90ede_Eval>* _80135_e, jule::Ptr<_215db3ae3_FnCallExpr>* _80150_fc, jule::Ptr<_215e8e471_Data>* ) {
	jule::Ptr<_215e8e471_Data> _80213_result = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_80150_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _80213_result;;
	};
	if (((*(_80150_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _81413_d = _215eab2e5_evalExprKind((*(_80135_e)), (*(_80150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_215dcc1e4_SizeofExprModel>(_215dcc1e4_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type123);
	return _80213_result;;
}



inline jule::Ptr<_215e8e471_Data> _216114ae1_builtinCallerStdMemAlignOf(jule::Ptr<_215e90ede_Eval>* _82336_e, jule::Ptr<_215db3ae3_FnCallExpr>* _82351_fc, jule::Ptr<_215e8e471_Data>* ) {
	jule::Ptr<_215e8e471_Data> _82413_result = jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_82351_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _82413_result;;
	};
	if (((*(_82351_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _83613_d = _215eab2e5_evalExprKind((*(_82336_e)), (*(_82351_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_215dcc3d1_AlignofExprModel>(_215dcc3d1_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type124);
	return _82413_result;;
}



inline jule::Ptr<_215e8e471_Data> _21611500e_builtinCallerStdMemFree(jule::Ptr<_215e90ede_Eval>* _84533_e, jule::Ptr<_215db3ae3_FnCallExpr>* _84548_fc, jule::Ptr<_215e8e471_Data>* ) {
	if (((*(_84548_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_84548_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _85413_d = _215eab2e5_evalExprKind((*(_84533_e)), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_215ebc04d_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_215e914ea_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_215e8e471_Data> _86313_result = _215eb6c7e_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_215dccb84_FreeExprModel>(_215dccb84_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type33);
	return _86313_result;;
}



inline jule::Ptr<_215e8e471_Data> _21611543d_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_215e90ede_Eval>* _86845_e, jule::Ptr<_215db3ae3_FnCallExpr>* _86860_fc, jule::Ptr<_215e8e471_Data>* ) {
	if (((*(_86860_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86860_fc)).get()._field_Args.len() > 1LL)) {
		_215e914ea_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_215e8e471_Data> _87713_d = _215eab2e5_evalExprKind((*(_86845_e)), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_215ed30b9_isBuiltinStrConvertable(&(_87713_d.get()._field_Kind))))) {
		_215e914ea_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_215e8e471_Data>(_215e8e471_Data{._field_Kind=jule::new_ptr<_215eba403_TypeKind>(_215eba403_TypeKind{._field_Kind=jule::Trait<_215eb9ec4_Kind>(_215ed36e6_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_215dcc7aa_IntegratedToStrExprModel>(_215dcc7aa_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type125), });;
}



inline jule::Ptr<_215e8e471_Data> _21611585b_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_215e90ede_Eval>* _89544_e, jule::Ptr<_215db3ae3_FnCallExpr>* _89559_fc, jule::Ptr<_215e8e471_Data>* _89581_d) {
	if ((!(_215e91e35_isUnsafe((*(_89544_e)).ptr())))) {
		_215e914ea_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_89559_fc)).get()._field_Args.len() < 1LL)) {
		_215e914ea_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _90513_argd = _215eab911_evalExpr((*(_89544_e)), (*(_89559_fc)).get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_215ebc78a_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_215ec3384_IsStr(_215ebc78a_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_215e914ea_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_215eba7ee_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_215e8ed34_IsConst(_90513_argd.ptr()))) || (!(_214705623_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_215e914ea_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_215e8e471_Data> _92013_r = _215eb6c7e_buildVoidData();;
	jule::Ptr<_215dcea10_FnIns> _92213_f = _215ebd978_Fn((*(_89581_d)).get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_215dcc997_BackendEmitExprModel> _92713_model = jule::new_ptr<_215dcc997_BackendEmitExprModel>(_215dcc997_BackendEmitExprModel{._field_Code=_214704435_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if (((*(_89559_fc)).get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_89559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_89559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_20a1800b8:;
			if (it != expr_end) {
				jule::Ptr<_215daeb11_Expr> _93321_arg = *it;
				{
					_90513_argd=_215eab2e5_evalExprKind((*(_89544_e)), _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_20a1800b8:;
				++it;
				goto _iter_begin_20a1800b8;
			}
			_iter_end_20a1800b8:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type24);
	return _92013_r;;
}



inline jule::Ptr<_215e8e471_Data> _216115c9b_builtinCallerStdDebugOut(jule::Ptr<_215e90ede_Eval>* _94634_e, jule::Ptr<_215db3ae3_FnCallExpr>* _94649_fc, jule::Ptr<_215e8e471_Data>* _94671_d) {
	(*(_94671_d))=_21610dd0a_builtinCallerOut(_94634_e, _94649_fc, _94671_d);
	if (((*(_94671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_94671_d)).get()._field_Model.cast_ptr<_215dca467_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Debug=true;
	return (*(_94671_d));;
}



inline jule::Ptr<_215e8e471_Data> _216116186_builtinCallerStdDebugOutln(jule::Ptr<_215e90ede_Eval>* _95536_e, jule::Ptr<_215db3ae3_FnCallExpr>* _95551_fc, jule::Ptr<_215e8e471_Data>* _95573_d) {
	(*(_95573_d))=_21610e1e5_builtinCallerOutln(_95536_e, _95551_fc, _95573_d);
	if (((*(_95573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_95573_d)).get()._field_Model.cast_ptr<_215dca654_BuiltinOutlnCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_95573_d));;
}



inline jule::Bool _21620a401_FindModuleFile(jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a1851ab:;
		if (it != expr_end) {
			jule::Ptr<_22bdc95e8_DirEntry> *_1312_d = it;
			{
				if (((!(_22bd10991_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_20a1851ab:;
			++it;
			goto _iter_begin_20a1851ab;
		}
		_iter_end_20a1851ab:;
	};
	return false;;
}



inline jule::Str _21620a533_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>> _2617_dirents = ({
				auto except = static__22cb24881_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_20a1853dc;
				} jule::Slice<jule::Ptr<_22bdc95e8_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _21620a401_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_22cc079ec_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_20a1853dc;
			};
		}
	_iter_next_20a1853dc:;
	}
	_iter_end_20a1853dc:;;
	return jule::Str();;
}



inline jule::Slice<_22dbec89d_Log> _21620a764_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__22bdc71a6_Read(_22cc03e8d_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_22dbec89d_Log>::make({_22dbec89d_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _22db731b4_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_22dbec89d_Log>::make({_22dbec89d_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1e9dbee6c_FileInfo> _1e9e169ca_ParseFile(jule::Ptr<_22e0b0579_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e9dbee6c_FileInfo> _2713_finf = jule::new_ptr<_1e9dbee6c_FileInfo>();;
	({
		__jule_tuple_x_215d761c1_Ast__jule_tuple_s_22dbec89d_Log __jule_assign_result = _1e9e1705d_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_215d761c1_Ast__jule_tuple_s_22dbec89d_Log _1e9e1705d_parseFileset(jule::Ptr<_22e0b0579_File> _5521_f) {
	__jule_tuple_x_215d761c1_Ast__jule_tuple_s_22dbec89d_Log __jule_func_result;
	jule::Ptr<_1e9e35a0a_parser> _5613_p = jule::new_ptr<_1e9e35a0a_parser>();;
	_1e9e453cc_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_215dba578_ScopeTree> _1e9e17987_newScope(void) {
	return jule::new_ptr<_215dba578_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1e9e17c73_isSt(jule::Ptr<_22e0aa1de_Token> _499_current, jule::Ptr<_22e0aa1de_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e9e180b4_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_22e0aa1de_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _22e0aabd4_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1e9e18449_nextStPos(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_22e0aa1de_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_20a215857:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_20a217c66:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1e9e180b4_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e9e17c73_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_20a21613d:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e9e17c73_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_20a215e73:;
						};
						goto _iter_next_20a21405e;
					}
				}
				_match_end_20a2157e1:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_20a21405e;
			};
			if ((_7213_i > _7033_start)) {
				if (_1e9e180b4_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_20a21405e;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e9e17c73_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e9e17c73_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_20a21405e;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_20a21405e:;
	}
	_iter_end_20a21405e:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool _1e9e1878a_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_22e0aa1de_Token>> _13228_tokens) {
	__jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e9e18449_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_22e0aa1de_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool __jule_assign_result = _1e9e1878a_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _1e9e18e2d_splitStmts(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1e9e18a87_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1e9e18a87_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_22e0aa1de_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_22e0aa1de_Token__jule_tuple_bool __jule_assign_result = _1e9e1878a_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1e9e18a87_stmt>(_1e9e18a87_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_20a2208b7:;
	}
	_iter_end_20a2208b7:;;
	return _15513_stmts;;
}



inline jule::Bool _1e9e3061a_isTypeOp(jule::Str* _88814_kind) {
	return (((*(_88814_kind)).equal("&", 1) || (*(_88814_kind)).equal("&&", 2)) || (*(_88814_kind)).equal("*", 1));;
}



inline jule::Bool _1e9e30906_isTypeRange(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto expr = _89521_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2ce26c:;
		if (it != expr_end) {
			jule::I64 _8979_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if (_89712_token.get()._field_Kind.equal("[", 1)) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_22e0aa1de_Token>> _90425_lTokens = (*(_89521_tokens)).slice(_8979_i);;
						{
							auto expr = &(_90425_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_20a2d05e2:;
							if (it != expr_end) {
								jule::Ptr<_22e0aa1de_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_20a2d1c75:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_20a2d25b1:;
														{
															(_90325_rangeN)++;
															goto _iter_next_20a2d05e2;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_20a2d2638:;
														{
															(_90325_rangeN)--;
															goto _iter_next_20a2d05e2;
														}
													}
													_match_end_20a2d23e6:;
												};
											}
										}
										_match_end_20a2d1a33:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1e9e3061a_isTypeOp(&(_90524_lToken.get()._field_Kind));;
									};
								}
								_iter_next_20a2d05e2:;
								++it;
								goto _iter_begin_20a2d05e2;
							}
							_iter_end_20a2d05e2:;
						};
						return true;;
					};
				};
				if ((!(_1e9e3061a_isTypeOp(&(_89712_token.get()._field_Kind))))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_20a2ce26c:;
			++it;
			_8979_i++;
			goto _iter_begin_20a2ce26c;
		}
		_iter_end_20a2ce26c:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_22e0aa1de_Token>> _1e9e30b9d_getBlockExpr(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2d3d43:;
		if (it != expr_end) {
			jule::I64 _9369_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_20a2d4b13:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_20a2d4b8a:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_20a2d5927:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_20a2d5a59;
										};
										return (*(_93322_tokens)).slice(0LL, _9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_20a2d6098:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_20a2d5ac0:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_20a2d5a59:;
							};
						}
					}
					_match_end_20a2d4a69:;
				};
			}
			_iter_next_20a2d3d43:;
			++it;
			_9369_i++;
			goto _iter_begin_20a2d3d43;
		}
		_iter_end_20a2d3d43:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token _1e9e31033_splitDelim(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto expr = _96420_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2d465c:;
		if (it != expr_end) {
			jule::I64 _9669_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_20a2d8276:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_20a2d9057:;
									{
										(_96513_rangeN)++;
										goto _iter_next_20a2d465c;
									}
								}
								else {
									_case_begin_20a2d8b6c:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_20a2d89a2:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_20a2d82ed:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_22e0aa1de_Token>> _98025_l = (*(_96420_tokens)).slice(0LL, _9669_i);;
								jule::Slice<jule::Ptr<_22e0aa1de_Token>> _98125_r = (*(_96420_tokens)).slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_20a2d8056:;
				};
			}
			_iter_next_20a2d465c:;
			++it;
			_9669_i++;
			goto _iter_begin_20a2d465c;
		}
		_iter_end_20a2d465c:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1e9e312ca_findLowestPrecOp(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto expr = _99122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a2db862:;
		if (it != expr_end) {
			jule::I64 _10019_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> *_100112_token = it;
			{
				{
					
					if (((*(_100112_token)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_20a2dc599:;
						{
							{
								auto &_match_expr{ (*(_100112_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_20a2dd1e3:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_20a2dd90d;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_20a2dd90d:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_20a2dd479:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_20a2dd2ae:;
							};
							goto _iter_next_20a2db862;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_20a2dc621:;
						{
							goto _iter_next_20a2db862;
						}
					}
					else if (((*(_100112_token)).get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_20a2dc698:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_20a2db862;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_20a2dc720:;
						{
							goto _iter_next_20a2db862;
						}
					}
					else if (((*(_100112_token)).get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_20a2dc797:;
						{
							goto _iter_next_20a2db862;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_20a2dc81e:;
						{
							goto _iter_next_20a2db862;
						}
					}
					_match_end_20a2dc445:;
				};
				jule::Ptr<_22e0aa1de_Token> _102813_left = (*(_99122_tokens))[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_20a2db862;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && _102813_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_22e0aa1de_Token> _103617_lleft = (*(_99122_tokens))[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && _103617_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100112_token)).get()._field_Kind.equal("&", 1) || (*(_100112_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_20a2db862;
						};
					};
				};
				jule::U8 _104513_p = _22e0aa596_Prec((*(_100112_token)).ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_20a2db862:;
			++it;
			_10019_i++;
			goto _iter_begin_20a2db862;
		}
		_iter_end_20a2db862:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_215db17c2_IdentExpr> _1e9e31572_buildIdentExpr(jule::Ptr<_22e0aa1de_Token>* _105424_token) {
	return jule::new_ptr<_215db17c2_IdentExpr>(_215db17c2_IdentExpr{._field_Token=(*(_105424_token)), ._field_Ident=(*(_105424_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_int _1e9e31819_getRangeExprTokens(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _106228_tokens) {
	__jule_tuple_sx_22e0aa1de_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = ((*(_106228_tokens)).len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_22e0aa1de_Token> _106613_tok = (*(_106228_tokens))[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_20a2e6cac:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_20a2e68b1:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_20a2e66a2:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106228_tokens)).slice(0LL, _106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_20a2e588d:;
	}
	_iter_end_20a2e588d:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1e9e32573_checkAssignTokens(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_22e0ae787_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a3852ac:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a386533:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_20a386137:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_20a385e28:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_20a3852ac;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(7LLU)) && _22e0aecc6_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_20a3852ac:;
			++it;
			goto _iter_begin_20a3852ac;
		}
		_iter_end_20a3852ac:;
	};
	return false;;
}



inline _22dbec89d_Log _1e9e33794_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_22e0b0579_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _22dbec89d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_22dbeccdd_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_22e0aa1de_Token>> _1e9e33c6c_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_22e0aa1de_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_22e0aa1de_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_20a38bd0d:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_20a38bd85:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_20a38badd:;
				};
			};
		}
	_iter_next_20a38ad1d:;
	}
	_iter_end_20a38ad1d:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token _1e9e34014_rangeLast(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _10319_tokens) {
	__jule_tuple_sx_22e0aa1de_Token__jule_tuple_sx_22e0aa1de_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_22e0aa1de_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_20a3910ed:;
						{
							(_10913_braceN)++;
							goto _iter_next_20a38cd53;
						}
					}
					else {
						_case_begin_20a390c02:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_20a3909e3:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_20a38cd53:;
	}
	_iter_end_20a38cd53:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log _1e9e343ee_partsKind(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _13713_parts = nullptr;;
	jule::Slice<_22dbec89d_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a393d04:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a395476:;
							{
								(_14013_rangeN)++;
								goto _iter_next_20a393d04;
							}
						}
						else {
							_case_begin_20a39507a:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_20a394d6b:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_20a393d04;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_22dbec89d_Log _16121_err = _1e9e33794_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_20a393d04:;
			++it;
			_1429_i++;
			goto _iter_begin_20a393d04;
		}
		_iter_end_20a393d04:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_22e0aa1de_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log _1e9e347d9_parts(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_22e0aa1de_Token__jule_tuple_s_22dbec89d_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22e0aa1de_Token>>> _18913_parts = nullptr;;
	jule::Slice<_22dbec89d_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a39a47b:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_22e0aa1de_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_20a39baed:;
							{
								(_19213_rangeN)++;
								goto _iter_next_20a39a47b;
							}
						}
						else {
							_case_begin_20a39b702:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_20a39b4e3:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_20a39a47b;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_22dbec89d_Log _21321_err = _1e9e33794_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_20a39a47b:;
			++it;
			_1949_i++;
			goto _iter_begin_20a39a47b;
		}
		_iter_end_20a39a47b:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_22e0aa1de_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1e9e34a81_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_20a3a0096:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_20a3a010c:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_20a39ed87:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_20a39ac62:;
			{
				return jule::Str();;
			}
		}
		_match_end_20a39e7d2:;
	};
}



inline _22dbec89d_Log _1e9e34e6b_compilerErr(jule::Ptr<_22e0aa1de_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _22dbec89d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_22dbeccdd_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_22e0b1756_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1e9e3539a_pushSuggestion(_22dbec89d_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_22dbeccdd_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1e9e35642_tokstoa(jule::Slice<jule::Ptr<_22e0aa1de_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a3a2bc0:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_20a3a2bc0:;
			++it;
			goto _iter_begin_20a3a2bc0;
		}
		_iter_end_20a3a2bc0:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20a3a3374:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_20a3a3374:;
			++it;
			goto _iter_begin_20a3a3374;
		}
		_iter_end_20a3a3374:;
	};
	return _26313_s;;
}



inline jule::Bool _1e9e456a7_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22db4ba3e_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22da8bac2_IsUpper(_203810_r);;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e46048_buildVoidType(void) {
	return jule::new_ptr<_215daa5e0_TypeDecl>();;
}



inline jule::Ptr<_215daa5e0_TypeDecl> _1e9e4628a_buildPrimType(jule::Ptr<_22e0aa1de_Token> _2322_t) {
	return jule::new_ptr<_215daa5e0_TypeDecl>(_215daa5e0_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_215daaba6_IdentTypeDecl>(_215daaba6_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type19)});;
}



inline __jule_tuple_bool__jule_tuple_bool _2161d450c_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_20bc64d55:;
			{
				__jule_func_result.__jule_result_arg0=_22dc00bae_IsWindows(_22dc82aa9_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_20bc6475b:;
			{
				__jule_func_result.__jule_result_arg0=_22dc00e67_IsDarwin(_22dc82aa9_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_20bc647c2:;
			{
				__jule_func_result.__jule_result_arg0=_22dc0120e_IsLinux(_22dc82aa9_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_20bc64838:;
			{
				__jule_func_result.__jule_result_arg0=_22dc01d14_IsUnix(_22dc82aa9_Os);
			}
		}
		else {
			_case_begin_20bc6400d:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_20bc6442b:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _2161e59a2_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_20bc66c03:;
			{
				__jule_func_result.__jule_result_arg0=_22dc0152d_IsI386(_22dc09305_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_20bc66c69:;
			{
				__jule_func_result.__jule_result_arg0=_22dc017c5_IsAmd64(_22dc09305_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_20bc66cd0:;
			{
				__jule_func_result.__jule_result_arg0=_22dc01a6c_IsArm64(_22dc09305_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_20bc66d46:;
			{
				__jule_func_result.__jule_result_arg0=_22dc02430_Is64Bit(_22dc09305_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_20bc66dac:;
			{
				__jule_func_result.__jule_result_arg0=_22dc02188_Is32Bit(_22dc09305_Arch);
			}
		}
		else {
			_case_begin_20bc664a5:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_20bc668c3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _2161ce738_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_22cbd9759_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _22cc05456_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _22db6da94_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161d450c_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161e59a2_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_22db6da94_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161d450c_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161e59a2_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161e59a2_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161d450c_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2161d450c_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _2161e9346_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_22dc82aa9_Os);;
	if (_22dc01d14_IsUnix(_22dc82aa9_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _2161e9599_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_22dc09305_Arch);;
	if (_22dc02430_Is64Bit(_22dc09305_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_22dc02188_Is32Bit(_22dc09305_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _2161e9852_initVars(jule::Slice<jule::Str>* _5518_vars, _2161e9038_CompileInfo* _5532_info) {
	_2161e9346_setOsVars(_5518_vars);
	_2161e9599_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20bc72deb:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20bc72e62:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_20bc72d96:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20bc733d5:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_20bc7344b:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_20bc734b2:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_20bc73319:;
	};
}



inline jule::Slice<jule::U8> _22e2c3c32_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__22bdc71a6_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_22dcbd8a3_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _22dbec89d_Log _22e2c654d_flatCompilerErr(jule::Str _4120_text) {
	return _22dbec89d_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1e9d64362_pushPasses(jule::Ptr<_215e1d08c_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bca965d:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bcaa0cb:;
					if (it != expr_end) {
						_215dd3c9a_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_20bcaa0cb;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_20bcab066:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_20bcaa0cb;
										};
									}
									_iter_next_20bcab066:;
									++it;
									goto _iter_begin_20bcab066;
								}
								_iter_end_20bcab066:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_20bcaa0cb:;
						++it;
						goto _iter_begin_20bcaa0cb;
					}
					_iter_end_20bcaa0cb:;
				};
			}
			_iter_next_20bca965d:;
			++it;
			goto _iter_begin_20bca965d;
		}
		_iter_end_20bca965d:;
	};
}



inline jule::Slice<jule::Str> _1e9d6b204_getAllUniquePasses(jule::Ptr<_215e1d08c_Package>* _12828_pkg, jule::Slice<jule::Ptr<_215e1a133_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1e9d64362_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bcac5b7:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1e9d64362_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_20bcac5b7:;
			++it;
			goto _iter_begin_20bcac5b7;
		}
		_iter_end_20bcac5b7:;
	};
	return _12913_passes;;
}



inline _2161e9038_CompileInfo _1e9dd8d21_buildCompileInfo(void) {
	_2161e9038_CompileInfo _14213_info = _2161e9038_CompileInfo{._field_Prod=_22bc32d47_Production, ._field_Test=_22bc3240c_Test, };;
	{
		auto &_match_expr{ _22bc3185c_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20bcad8d7:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20bcad95e:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_20bcad860:;
	};
	{
		auto &_match_expr{ _22bc31c9c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20bcad299:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_20bcadd05:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_20bcadd6b:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_20bcae212:;
	};
	return _14213_info;;
}



inline void _1ea05eded_EliminateDefines(jule::Ptr<_22e2caed1_IR>* _28526_ir) {
	jule::Ptr<_1ea02a913_ObjectDeadCode> _28613_ocd = static__1ea02addb_new(_28526_ir);;
	_1ea05eb34_elimanate(_28613_ocd);
}



inline jule::Ptr<_215d77348_Directive> _1ea060283_findDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bce8768:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_20bce8768:;
			++it;
			goto _iter_begin_20bce8768;
		}
		_iter_end_20bce8768:;
	};
	return nullptr;;
}



inline jule::Bool _1ea0605c4_hasDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1ea060283_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1ea064221_eliminateDeadCodeOfScope(jule::Ptr<_215deb92d_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_215dee16c_Label>> _2429_labels = jule::Slice<jule::Ptr<_215dee16c_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_215dee458_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_215dee458_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1ea06131c_scopeDeadCode> _24413_sdc = jule::new_ptr<_1ea06131c_scopeDeadCode>(_1ea06131c_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_215dee16c_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_215dee458_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1ea063e35_optimizeStmts(_24413_sdc);
	};
}



inline void _1ea0644a7_eliminateScopeFunctions(jule::Slice<jule::Ptr<_215dcd24a_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd37a2c:;
		if (it != expr_end) {
			jule::Ptr<_215dcd24a_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_20bd39ad9:;
					if (it != expr_end) {
						jule::Ptr<_215dcea10_FnIns> _25621_ins = *it;
						{
							_1ea064221_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_20bd39ad9:;
						++it;
						goto _iter_begin_20bd39ad9;
					}
					_iter_end_20bd39ad9:;
				};
			}
			_iter_next_20bd37a2c:;
			++it;
			goto _iter_begin_20bd37a2c;
		}
		_iter_end_20bd37a2c:;
	};
}



inline void _1ea0646e9_eliminateFunctionsScopePackage(jule::Ptr<_215e1d08c_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bd3a05c:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _26317_f = *it;
			{
				_1ea0644a7_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_20bd3a05c:;
			++it;
			goto _iter_begin_20bd3a05c;
		}
		_iter_end_20bd3a05c:;
	};
}



inline void _1ea064991_eliminateScopePackage(jule::Ptr<_215e1d08c_Package>* _26831_pkg) {
	_1ea0646e9_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1ea064ba0_EliminateScopes(jule::Ptr<_22e2caed1_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_215e1a133_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1ea064991_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_20bd3b6bd:;
	}
	_iter_end_20bd3b6bd:;;
	_1ea064991_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _21611cce7_isStdPackage(jule::Str _43817_f, jule::Str _43825_p) {
	return _22db524c3_HasPrefix(_43817_f, _22cc03e8d_Join(jule::Slice<jule::Str>::make({_22dc07c1b_PathStdlib,_43825_p})));;
}



inline jule::Bool _21611d105_isConstantValidConditionalCase(jule::Ptr<_215debd29_If>* _44236_i) {
	{
		auto &_match_expr{ (*(_44236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20bdb1226:;
			{
				jule::Ptr<_21470339b_Const> _44513_c = (*(_44236_i)).get()._field_Expr.cast_ptr<_21470339b_Const>(&__jule_any_type47);;
				return (_2147054e1_IsBool(_44513_c.ptr()) && _214704303_ReadBool(_44513_c.ptr()));;
			}
		}
		_match_end_20bdb10b1:;
	};
	return false;;
}



inline jule::Bool _21611d3ad_isUnreachableExpr(jule::Any* _45123_expr) {
	{
		auto &_match_expr{ (*(_45123_expr)) };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20bdb1b3e:;
			{
				jule::Ptr<_21470339b_Const> _45413_c = (*(_45123_expr)).cast_ptr<_21470339b_Const>(&__jule_any_type47);;
				return (_2147054e1_IsBool(_45413_c.ptr()) && (!(_214704303_ReadBool(_45413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_20bdb1bb6:;
			{
				jule::Ptr<_215dc78c6_BinopExprModel> _45713_m = (*(_45123_expr)).cast_ptr<_215dc78c6_BinopExprModel>(&__jule_any_type117);;
				if (_45713_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_21611d3ad_isUnreachableExpr(&(_45713_m.get()._field_Left.get()._field_Model)) || _21611d3ad_isUnreachableExpr(&(_45713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_20bdb12e2:;
	};
	return false;;
}



inline jule::Bool _21611d6ee_isConstantValidMatchCase(jule::Ptr<_215e011c4_Case>* _46630_case) {
	{
		auto expr = &((*(_46630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdb2eb4:;
		if (it != expr_end) {
			jule::Ptr<_215e8e471_Data> *_46712_expr = it;
			{
				if (((_215e8ed34_IsConst((*(_46712_expr)).ptr()) && _2147054e1_IsBool((*(_46712_expr)).get()._field_Constant.ptr())) && _214704303_ReadBool((*(_46712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_20bdb2eb4:;
			++it;
			goto _iter_begin_20bdb2eb4;
		}
		_iter_end_20bdb2eb4:;
	};
	return false;;
}



inline jule::Bool _21611d996_isUnreachableConditionalCase(jule::Ptr<_215debd29_If>* _47534_i) {
	return _21611d3ad_isUnreachableExpr(&((*(_47534_i)).get()._field_Expr));;
}



inline jule::Bool _21611dc4e_isUnreachableMatchCase(jule::Ptr<_215e011c4_Case>* _47928_case) {
	{
		auto expr = &((*(_47928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20bdb68be:;
		if (it != expr_end) {
			jule::Ptr<_215e8e471_Data> *_48012_expr = it;
			{
				if ((!(_21611d3ad_isUnreachableExpr(&((*(_48012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_20bdb68be:;
			++it;
			goto _iter_begin_20bdb68be;
		}
		_iter_end_20bdb68be:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _21612664c_checkForBitShiftOpt(jule::Ptr<_215dc76d9_OperandExprModel>* _46625_l, jule::Ptr<_215dc76d9_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_214702dc3_IsInt(_215eba7ee_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_214702dc3_IsInt(_215eba7ee_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_20be03bd6:;
			{
				goto _match_end_20be04687;
			}
		}
		else {
			_case_begin_20be047ca:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_20be04687:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_2147047cb_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_21470339b_Const>(&__jule_any_type47).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _2146c259b_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline void _21612894b_PushOptLevel(jule::I64 _3417_level) {
	_216126d9a_Copy=(_3417_level >= static_cast<jule::I64>(1LL));
	_2161271a8_Deadcode=(_3417_level >= static_cast<jule::I64>(1LL));
	_216127472_Append=(_3417_level >= static_cast<jule::I64>(1LL));
	_216127780_Math=(_3417_level >= static_cast<jule::I64>(1LL));
	_216127a49_Access=(_3417_level >= static_cast<jule::I64>(1LL));
	_216127d13_Inline=(_3417_level >= static_cast<jule::I64>(1LL));
	_2161280cc_Ptr=(_3417_level >= static_cast<jule::I64>(1LL));
	_2161284a6_Cond=(_3417_level >= static_cast<jule::I64>(1LL));
	_216128770_Str=(_3417_level >= static_cast<jule::I64>(1LL));
}



inline void _1e9ee206c_detectEnabled(void) {
	_1e9e63b9d_exprEnabled=(((_2161280cc_Ptr || _216127780_Math) || _216127a49_Access) || _2161284a6_Cond);
	_1e9e64819_scopeEnabled=(((_2161284a6_Cond || _216127472_Append) || _216126d9a_Copy) || _216128770_Str);
}



inline void _1ea071a58_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_22dcbd8a3_Exit(1LL);
}



inline jule::U64 _1ea71d578_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1ea71d886_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1ea71dc1b_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_20be8e04b:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_20be8e1d3:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_20be8e249:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_20be8e2b0:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_20be8e326:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_20be8e38c:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_20be8e403:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_20be8e469:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_20be8e4d0:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_20be8e546:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_20be8e5bd:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_20be8dee6:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1ea666c1e_isCopyOptimizable(jule::Ptr<_215e8e471_Data>* _81323_expr) {
	if ((!((*(_81323_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81323_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_20c03d947:;
			{
				return false;;
			}
		}
		_match_end_20c03d8e2:;
	};
	return true;;
}



inline jule::Bool _1ea6670a4_isIterCopyOptimizable(jule::Ptr<_215e8e471_Data>* _82427_expr, jule::Ptr<_215e41aa5_Var>* _82441_v) {
	if (((!((*(_82427_expr)).get()._field_Lvalue)) && (!(_215ebba75_Mutable((*(_82427_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82441_v)).get()._field_Mutable)) && (!((*(_82427_expr)).get()._field_Mutable)));;
}



inline jule::Str _1ea676437_decomposeCommonEsq(jule::U8 _145723_b) {
	{
		auto &_match_expr{ _145723_b };
		
		if (_match_expr == '\\') {
			_case_begin_20c102e07:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_20c10348a:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_20c103501:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_20c103567:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_20c10318d:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_20c103204:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_20c10326a:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_20c1032d1:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_20c1037a9:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_20c103820:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_20c10304a:;
			{
				return jule::Str();;
			}
		}
		_match_end_20c102e90:;
	};
}



inline jule::Str _1ea676723_sbtoa(jule::U8 _148410_b) {
	if ((_148410_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_148410_b < 128LLU)) {
		jule::Str _148913_seq = _1ea676437_decomposeCommonEsq(_148410_b);;
		if ((!(_148913_seq.empty()))) {
			return _148913_seq;;
		};
		if (((32LL <= _148410_b) && (_148410_b <= 126LLU))) {
			return static_cast<jule::Str>(_148410_b);;
		};
	};
	jule::Str _14979_seq = _2146edac2_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_148410_b)), 8LL);;
	if ((_14979_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _14979_seq);;
	};
	return (jule::Str("\\", 1) + _14979_seq);;
}



inline jule::Str _1ea6769ba_cstrBytes(jule::Slice<jule::U8> _150414_bytes) {
	jule::Str _150513_lit = jule::Str::alloc(0LL, _150414_bytes.len());;
	{
		auto expr = &(_150414_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c109381:;
		if (it != expr_end) {
			jule::U8 *_150612_b = it;
			{
				_150513_lit+=_1ea676723_sbtoa((*(_150612_b)));
			}
			_iter_next_20c109381:;
			++it;
			goto _iter_begin_20c109381;
		}
		_iter_end_20c109381:;
	};
	return _150513_lit;;
}



inline jule::Str _1ea676cd9_cstrLit(jule::Slice<jule::U8> _151212_bytes) {
	return ((jule::Str("\"", 1) + _1ea6769ba_cstrBytes(_151212_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1ea6770e7_ftoa(jule::F64 _15169_f, jule::I64 _151617_bitsize) {
	if ((_151617_bitsize != 32LL)) {
		if ((_15169_f == static_cast<jule::F64>(static_cast<jule::I64>(_15169_f)))) {
			return _1ea67738e_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15169_f)));;
		};
		if ((_15169_f == static_cast<jule::F64>(static_cast<jule::U64>(_15169_f)))) {
			return _1ea677636_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15169_f)));;
		};
	};
	jule::Str _152513_m = _2135483ac_FmtFloat(_15169_f, 'f', -1LL, _151617_bitsize);;
	if ((!(_22db70425_Contains(_152513_m, jule::Str(".", 1))))) {
		(_152513_m).append(".0", 2);
	};
	return _152513_m;;
}



inline jule::Str _1ea67738e_itoa(jule::I64 _15329_x) {
	{
		
		if ((_15329_x == jule::MAX_I64)) {
			_case_begin_20c10c95b:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15329_x == jule::MIN_I64)) {
			_case_begin_20c10c9c2:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_20c10c818:;
	};
	jule::Str _15409_fmt = _2146edc04_FmtInt(_15329_x, 10LL);;
	if (_22dc02430_Is64Bit(jule::Str("arm64", 5))) {
		return (_15409_fmt + jule::Str("LL", 2));;
	};
	return (_15409_fmt + jule::Str("L", 1));;
}



inline jule::Str _1ea677636_utoa(jule::U64 _15479_x) {
	{
		
		if ((_15479_x == jule::MAX_U64)) {
			_case_begin_20c10e62d:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_20c10e52e:;
	};
	jule::Str _15539_fmt = _2146edac2_FmtUint(_15479_x, 10LL);;
	if (_22dc02430_Is64Bit(jule::Str("arm64", 5))) {
		return (_15539_fmt + jule::Str("LLU", 3));;
	};
	return (_15539_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1ea6779dd_isForwarded(jule::Ptr<_215deb92d_Scope>* _156017_s) {
	jule::Any _15619_last = (*(_156017_s)).get()._field_Stmts[((*(_156017_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15619_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_20c110e04:;
			{
				{
					auto &_match_expr{ _15619_last.cast_ptr<_215e8e471_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_20c111e7c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_20c112345:;
						{
							return false;;
						}
					}
					_match_end_20c11207b:;
				};
			}
		}
		else {
			_case_begin_20c1116b8:;
			{
				return true;;
			}
		}
		_match_end_20c1115db:;
	};
}



inline jule::Bool _1ea677ca7_isBuiltinCallHasDebuginf(jule::Ptr<_215dc8553_FnCallExprModel>* _157530_m) {
	if ((!(_215dd0d96_IsBuiltin((*(_157530_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_157530_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_20c1125dc:;
			{
				jule::Ptr<_215dca08d_CommonSubIdentExprModel> _158113_csie = (*(_157530_m)).get()._field_Expr.cast_ptr<_215dca08d_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _158113_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_20c11190a:;
			{
				return false;;
			}
		}
		_match_end_20c1118a5:;
	};
}



inline jule::Bool _1ea677ed8_isExprComesFromBind(jule::Ptr<_215e8e471_Data>* _158825_d) {
	{
		auto &_match_expr{ (*(_158825_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_20c114864:;
			{
				return (*(_158825_d)).get()._field_Model.cast_ptr<_215e41aa5_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_20c1148ca:;
			{
				return (*(_158825_d)).get()._field_Model.cast_ptr<_215dc97da_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_20c113ed4:;
			{
				return false;;
			}
		}
		_match_end_20c113e7e:;
	};
}



inline jule::Bool _1ea678280_isAny(jule::Ptr<_215eba403_TypeKind>* _160015_t) {
	if ((_215ebd23b_TypeEnum((*(_160015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_215ec0150_Prim> _16049_prim = _215ebc78a_Prim((*(_160015_t)).ptr());;
	return ((_16049_prim != nullptr) && _215ec35e8_IsAny(_16049_prim.ptr()));;
}



inline void _1ea727ebc_iterFiles(jule::Ptr<_215e1d08c_Package>* _124119_pkg, jule::Fn<void(jule::Ptr<_215e89647_SymbolTable>*)> _124134_f) {
	{
		auto expr = &((*(_124119_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c296a90:;
		if (it != expr_end) {
			jule::Ptr<_215e89647_SymbolTable> _124217_file = *it;
			{
				_124134_f(&(_124217_file));
			}
			_iter_next_20c296a90:;
			++it;
			goto _iter_begin_20c296a90;
		}
		_iter_end_20c296a90:;
	};
}



inline jule::Str _1ea7282a8_concatAllParts(jule::Slice<jule::Ptr<_22e0aa1de_Token>> _124819_parts) {
	jule::I64 _124913_n = 0LL;;
	{
		auto expr = &(_124819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c297d5a:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_125012_part = it;
			{
				_124913_n+=(*(_125012_part)).get()._field_Kind.len();
			}
			_iter_next_20c297d5a:;
			++it;
			goto _iter_begin_20c297d5a;
		}
		_iter_end_20c297d5a:;
	};
	if ((_124913_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _125613_s = jule::Str::alloc(0LL, _124913_n);;
	{
		auto expr = &(_124819_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c297233:;
		if (it != expr_end) {
			jule::Ptr<_22e0aa1de_Token> *_125712_p = it;
			{
				_125613_s+=(*(_125712_p)).get()._field_Kind;
			}
			_iter_next_20c297233:;
			++it;
			goto _iter_begin_20c297233;
		}
		_iter_end_20c297233:;
	};
	return _125613_s;;
}



inline jule::Ptr<_215d77348_Directive> _1ea7361d9_findDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>* _46523_directives, jule::Str _46554_tag) {
	{
		auto expr = _46523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c387a0a:;
		if (it != expr_end) {
			jule::Ptr<_215d77348_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_20c387a0a:;
			++it;
			goto _iter_begin_20c387a0a;
		}
		_iter_end_20c387a0a:;
	};
	return nullptr;;
}



inline jule::Bool _1ea73656e_hasDirective(jule::Slice<jule::Ptr<_215d77348_Directive>>* _47518_directives, jule::Str _47549_tag) {
	return (_1ea7361d9_findDirective(_47518_directives, _47549_tag) != nullptr);;
}



inline jule::Bool _1ea736816_shouldInitialized(jule::Ptr<_215eba403_TypeKind>* _48227_t) {
	jule::Ptr<_215ec0150_Prim> _4839_prim = _215ebc78a_Prim((*(_48227_t)).ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_215ec35e8_IsAny(_4839_prim.ptr()))) && (!(_215ec3384_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_215ebc9ee_Sptr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a854:;
			{
				return false;;
			}
		}
		else if ((_215ebe1b5_Map((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a27c:;
			{
				return false;;
			}
		}
		else if ((_215ebd714_Slc((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a304:;
			{
				return false;;
			}
		}
		else if ((_215ebde51_Trait((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a37b:;
			{
				return false;;
			}
		}
		else if ((_215ebd978_Fn((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a535:;
			{
				return false;;
			}
		}
		else if ((_215ebd4a0_Arr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a59b:;
			{
				jule::Ptr<_215ec64db_Arr> _49917_arr = _215ebd4a0_Arr((*(_48227_t)).ptr());;
				return _1ea736816_shouldInitialized(&(_49917_arr.get()._field_Elem));;
			}
		}
		else if ((_215ebdbdc_Struct((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_20c38a612:;
			{
				return false;;
			}
		}
		else {
			_case_begin_20c389b0b:;
			{
				return true;;
			}
		}
		_match_end_20c389aa6:;
	};
}



inline void _22dbceb16_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _22dbbd929_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_22dbceb16_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _22dbce396_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_22dbce396_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c42a6e6:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_20c42a6e6:;
			++it;
			goto _iter_begin_20c42a6e6;
		}
		_iter_end_20c42a6e6:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_22dbce396_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c42c0aa:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_22db52d86_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_20c42c0aa:;
			++it;
			_519_i++;
			goto _iter_begin_20c42c0aa;
		}
		_iter_end_20c42c0aa:;
	};
	jule::outln(_4913_s);
}



inline void _22dbbda5b_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_22dbceb16_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.13 @master", 18));
}



inline void _22dbd14ca_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _22dbd160c_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _22dbdc3b5_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_22dbceb16_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_20c43404b:;
			{
				_22dbd14ca_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_20c433c60:;
			{
				_22dbd160c_toolDistarch();
			}
		}
		else {
			_case_begin_20c4325dd:;
			{
				_22dbceb16_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_20c433a73:;
	};
}



inline void _22dbdc4e7_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_22dbceb16_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.13 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _22bc3185c_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _22bc31c9c_CppStd));
}



inline void _22dbe0363_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_22dbceb16_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_20c43843a:;
			{
				({
					auto except = static__22bdc7bac_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_22dbceb16_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_20c436d1d:;
			{
				_22dbceb16_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_20c438061:;
	};
}



inline jule::Bool _22dbb6812_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_20c439a68:;
			{
				_22dbbd929_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_20c439e97:;
			{
				_22dbbda5b_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_20c43a00d:;
			{
				_22dbdc3b5_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_20c43a0eb:;
			{
				_22dbdc4e7_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_20c43a162:;
			{
				_22dbe0363_mod(_15320_args);
			}
		}
		else {
			_case_begin_20c439628:;
			{
				return false;;
			}
		}
		_match_end_20c43955c:;
	};
	return true;;
}



inline void _22dbb6944_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _22cb74914_Args();;
	if ((_18913_args.len() < 2LL)) {
		_22dbb6944_showInfo();
		return;;
	};
	if (_22dbb6812_processCommand(&(_18913_args))) {
		return;;
	};
	_1ea77ece3_compileCommand(&(_18913_args));
}



inline void _1ea74deb0_init(void) {
	_22bc3185c_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_22cad4b93_File> _1ea75259b_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _22cc079ec_Dir((*(_4316_path)));;
	({
		auto except = static__22bd107e8_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__22cb4e3c2_Create(_449_dir);
				if (!except.ok()) {
					_1ea071a58_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__22bdc6ae0_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ea071a58_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ea75d6d9_clearObjects(void) {
	({
		auto except = static__22bdc734e_Remove(_1ea749a38_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__22cb29237_Remove(_1ea749c7a_OutDir);
}



inline void _1ea74c1de_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_22dc83956_Cmd> _7313_cmd = static__22dc83da7_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_22db700d4_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _22dc84083_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type133) == _match_expr) {
					_case_begin_20c441ae7:;
					{
						static__1ea06e46d_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type133) == _match_expr) {
					_case_begin_20c4413cc:;
					{
						static__1ea06e46d_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_20c44150e:;
					{
						static__1ea06e46d_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_20c441465:;
			};
			_1ea071a58_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _22dc844c3_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _22bc3185c_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ea06e46d_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1ea071a58_Throw(jule::Str());
	};
	_1ea75d6d9_clearObjects();
}



inline jule::Bool _1ea76d1ee_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _22db6da94_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _22dbe0aa0_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1ea7722e1_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _22bc31c9c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20c440343:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_20c445843:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_20c4458a9:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_20c445623:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_22bc32d47_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1ea74a4a6_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _22bc31c9c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_20c445cd8:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_20c4480d7:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_20c44814d:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_20c447db7:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_22bc32d47_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1ea750434_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_22e2caed1_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_22bc31a7c_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _22bc3185c_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20c449e96:;
			{
				_1ea74a4a6_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20c44b041:;
			{
				_1ea7722e1_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_20c44ae0e:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c44b8e3:;
		if (it != expr_end) {
			jule::Str *_17112_pass = it;
			{
				_16113_cmd+=(*(_17112_pass));
				(_16113_cmd).append(" ", 1);
			}
			_iter_next_20c44b8e3:;
			++it;
			goto _iter_begin_20c44b8e3;
		}
		_iter_end_20c44b8e3:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_20c44b0b8:;
		if (it != expr_end) {
			jule::Ptr<_215e1a133_ImportInfo> *_17712_u = it;
			{
				if (((*(_17712_u)).get()._field_CppLinked && _1ea76d1ee_isCppSourceFile((*(_17712_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17712_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_20c44b0b8:;
			++it;
			goto _iter_begin_20c44b0b8;
		}
		_iter_end_20c44b0b8:;
	};
	if ((!(_1ea74a1dc_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1ea74a1dc_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1ea749a38_getCompilePath(void) {
	return _22cc03e8d_Join(jule::Slice<jule::Str>::make({_1ea749c7a_OutDir,_1ea74a088_OutName}));;
}



inline void _1ea759509_applyTargetIndependentOptimizations(jule::Ptr<_22e2caed1_IR>* _20045_ir) {
	jule::Ptr<_1e9e622d9_Optimizer> _20113_opt = static__1e9e819e0_New(_20045_ir);;
	_1e9ec1d60_Optimize(_20113_opt.ptr());
}



inline void _1ea749461_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _22bc3185c_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_20c44c84a:;
			{
				_1ea071a58_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_20c44eac2:;
			{
				if (_22bc31a7c_CompilerPath.empty()) {
					_22bc31a7c_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_20c44eb38:;
			{
				if (_22bc31a7c_CompilerPath.empty()) {
					_22bc31a7c_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_20c44ea5b:;
			{
				_1ea071a58_Throw((jule::Str("invalid option value for --compiler: ", 37) + _22bc3185c_Compiler));
			}
		}
		_match_end_20c44e64e:;
	};
}



inline void _1ea74d245_checkTargetArch(jule::Str _22220_arch) {
	if ((((!_22220_arch.equal("amd64", 5)) && (!_22220_arch.equal("arm64", 5))) && (!_22220_arch.equal("i386", 4)))) {
		_1ea071a58_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22220_arch));
	};
}



inline void _1ea74d377_checkTargetOs(jule::Str _23018_os) {
	if ((((!_23018_os.equal("windows", 7)) && (!_23018_os.equal("linux", 5))) && (!_23018_os.equal("darwin", 6)))) {
		_1ea071a58_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23018_os));
	};
}



inline void _1ea77e375_checkTargetFlag(jule::Str* _23821_target) {
	if ((*(_23821_target)).empty()) {
		_1ea071a58_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2439_parts = _22db700d4_Split((*(_23821_target)), jule::Str("-", 1), -1LL);;
	if ((_2439_parts.len() != 2LL)) {
		_1ea071a58_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_23821_target))));
	};
	jule::Str _24810_os;;
	jule::Str _24814_arch;;
	({
		jule::Str ___jule_assign_arg = _2439_parts[0LL];
		jule::Str _1___jule_assign_arg = _2439_parts[1LL];
		_24810_os = ___jule_assign_arg;
		_24814_arch = _1___jule_assign_arg;
	});
	if ((!_24810_os.equal("native", 6))) {
		_1ea74d377_checkTargetOs(_24810_os);
		_22dc82aa9_Os=_24810_os;
	};
	if ((!_24814_arch.equal("native", 6))) {
		_1ea74d245_checkTargetArch(_24814_arch);
		_22dc09305_Arch=_24814_arch;
	};
	_213336596_UpdateTarget();
}



inline void _1ea77e4a7_checkOptFlag(jule::Str* _26118_opt) {
	if ((*(_26118_opt)).empty()) {
		_1ea071a58_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26118_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_20c457679:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_20c457b85:;
			{
				_21612894b_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_20c4574ae:;
			{
				_1ea071a58_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26118_opt))));
			}
		}
		_match_end_20c457459:;
	};
}



inline void _1ea77e81a_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _22bc31c9c_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_20c457beb:;
			{
				goto _match_end_20c458a54;
			}
		}
		else {
			_case_begin_20c458603:;
			{
				_1ea071a58_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _22bc31c9c_CppStd));
			}
		}
		_match_end_20c458a54:;
	};
}



inline jule::Slice<jule::Str> _1ea77e94c_checkFlags(jule::Slice<jule::Str>* _28616_args) {
	jule::Str _28713_opt = jule::Str("L0", 2);;
	jule::Str _28813_target = jule::Str("native-native", 13);;
	jule::Ptr<_1ea77a591_FlagSet> _29013_fs = static__1ea77a87c_New();;
	_20c45ae41_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28713_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_20c45ae41_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28813_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_20c45ae41_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1ea74a1dc_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22bc31ebc_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22bc321dc_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_20c45ae41_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22bc3185c_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_20c45ae41_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22bc31a7c_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22bc32d47_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22bc326a4_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22bc32a7d_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_20c45ae41_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_22bc31c9c_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216126d9a_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2161271a8_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216127472_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216127780_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216127a49_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216127d13_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2161280cc_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2161284a6_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_20c4647b8_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_216128770_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31313_content = ({
		auto except = _1ea77b691_Parse(_29013_fs.ptr(), (*(_28616_args)));
		(except.ok()) ? (except.result) : ({
			_1ea071a58_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1ea749461_checkCompilerFlag();
	_1ea77e81a_checkCppStdFlag();
	_1ea77e375_checkTargetFlag(&(_28813_target));
	_1ea77e4a7_checkOptFlag(&(_28713_opt));
	return _31313_content;;
}



inline void _1ea77ea7e_setupSemaFlags(jule::I64* _32624_flags) {
	if (_22bc31ebc_Shadowing) {
		(*(_32624_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_22e2caed1_IR> _1ea77ebb1_buildIr(jule::Slice<jule::Str>* _33213_args) {
	jule::Slice<jule::Str> _3339_content = _1ea77e94c_checkFlags(_33213_args);;
	jule::I64 _33513_semaFlags = static_cast<jule::I64>(0LL);;
	_1ea77ea7e_setupSemaFlags(&(_33513_semaFlags));
	if ((_3339_content.len() == 0LL)) {
		_1ea071a58_Throw(_22dbeccdd_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3339_content.len() > 1LL)) {
		_1ea071a58_Throw((jule::Str("undefined content: ", 19) + _3339_content[1LL]));
	};
	jule::Str _34314_path;;
	jule::Bool _34320_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22cbbd6b6_Abs(_3339_content[0LL]);
		_34314_path = __jule_assign_result.__jule_result_arg0;
		_34320_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34320_ok))) {
		_1ea071a58_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_22cad505b_Status> _3499_inf = ({
		auto except = static__22bd107e8_Of(_22dc07c1b_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ea071a58_Throw(_22dbeccdd_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_22cad505b_Status>(nullptr);});
	});;
	if ((!(_22bd10991_IsDir(_3499_inf.ptr())))) {
		_1ea071a58_Throw(_22dbeccdd_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_22e2caed1_IR> _35714_ir;;
	jule::Slice<_22dbec89d_Log> _35718_logs;;
	({
		__jule_tuple_x_22e2caed1_IR__jule_tuple_s_22dbec89d_Log __jule_assign_result = static__1e9c9dec2_Build(_34314_path, _33513_semaFlags);
		_35714_ir = __jule_assign_result.__jule_result_arg0;
		_35718_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_35714_ir == nullptr) && (_35718_logs == nullptr))) {
		_1ea071a58_Throw(_22dbeccdd_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34314_path, &__jule_any_type5)})));
	};
	if ((_35718_logs != nullptr)) {
		static__1ea07112e_PrintLogs(&(_35718_logs));
		_1ea071a58_Throw(jule::Str());
	};
	return _35714_ir;;
}



inline void _1ea77ece3_compileCommand(jule::Slice<jule::Str>* _37224_args) {
	(*(_37224_args))=(*(_37224_args)).slice(1LL);
	if ((*(_37224_args))[0LL].equal("test", 4)) {
		_22bc3240c_Test=true;
		(*(_37224_args))=(*(_37224_args)).slice(1LL);
	};
	jule::Ptr<_22e2caed1_IR> _37813_ir = _1ea77ebb1_buildIr(_37224_args);;
	;
	if ((!(_22bc3240c_Test))) {
		jule::Ptr<_215dcd24a_Fn> _38317_main = _215e1e841_FindFn(_37813_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38317_main == nullptr)) {
			_1ea071a58_Throw(_22dbeccdd_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1ea759509_applyTargetIndependentOptimizations(&(_37813_ir));
	_1e9d5c49d_Order(_37813_ir.ptr());
	jule::Str _39410_compiler;;
	jule::Str _39420_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ea750434_genCompileCmd(_1ea749a38_getCompilePath(), &(_37813_ir));
		_39410_compiler = __jule_assign_result.__jule_result_arg0;
		_39420_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ea723407_ObjectCoder> _39613_oc = static__1ea684b4e_New(&(_37813_ir), _1ea6b0152_SerializationInfo{._field_Compiler=_39410_compiler, ._field_CompilerCommand=_39420_compilerCmd});;
	if (_22bc3240c_Test) {
		jule::Ptr<_1ea67a260_TestCoder> _40117_tc = static__1ea67a6d3_New(&(_39613_oc));;
		_1ea67b915_Serialize(_40117_tc);
	} else {
		_1ea727b59_Serialize(_39613_oc);
	};
	jule::Str _4079_path = _1ea749a38_getCompilePath();;
	jule::Ptr<_22cad4b93_File> _40813_file = _1ea75259b_openOutput(&(_4079_path));;
	({
		auto except = _22bcc17cb_WriteStr(_40813_file.ptr(), &(_39613_oc.get()._field_Obj));
		if (!except.ok()) {
			_1ea071a58_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _22bcdeb3a_Close(_40813_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:412:5"));
	});
	if ((!(_22bc321dc_Transpilation))) {
		_1ea74c1de_compileIr(_39410_compiler, _39420_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_22dc5ebb8_init();
	_213377939_init();
	_1ea74deb0_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}