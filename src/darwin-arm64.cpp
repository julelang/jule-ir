// Auto generated by JuleC.
// JuleC version: beta 0.0.5 @master
// Date: 7/10/2023 13.7 (DD/MM/YYYY) (HH.MM) UTC
//
// Recommended Compile Command;
// clang++ -O0 -Wno-everything --std=c++17 dist/ir.cpp

#include "api/jule.hpp"                                   

#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <time.h>
#include "std/jule/integrated/integrated.hpp"                                   
#include "std/sys/syscall_unix.hpp"                                   

struct _218848bd5_Importer;
struct _200d010d9_Kind;
struct _1d6734eee_Lookup;
struct _200ad0979_CommonFlag;

struct _231dc726c_AnsiEscape;


struct _231dc726c_Logger;


struct _231ed2cb2_LazyBuff;


struct _231e4202e_Log;


struct _23363dc35_bits_error;


struct _231e5e5ce_FloatInfo;


struct _231e5e5ce_DecimalSlice;


struct _232e74d1e_LeftCheat;


struct _232e74d1e_Decimal;


struct _233463670_DirEntry;


struct _233463670_Directory;


struct _2334d2447_File;


struct _2334b9671_Status;


struct _234223e9b_FoldPair;


struct _234223e9b_CaseRange;


struct _234223e9b_Range16;


struct _234223e9b_Range32;


struct _234223e9b_RangeTable;


struct _23381108e_accept_range;


struct _2336ea198_Token;


struct _2334d2d3d_File;


struct _2334d2db5_KindPair;


struct _2334d2db5_Lex;


struct _23346420e_Ast;


struct _233464770_CommentGroup;


struct _233464770_NamespaceTypeDecl;


struct _233464770_SptrTypeDecl;


struct _233464770_SlcTypeDecl;


struct _233464770_TupleTypeDecl;


struct _233464770_PtrTypeDecl;


struct _233464770_ArrTypeDecl;


struct _233464770_MapTypeDecl;


struct _233464770_RetTypeDecl;


struct _233464770_TupleExpr;


struct _233464770_CastExpr;


struct _233464770_StructLit;


struct _233464770_ScopeTree;


struct _233464770_Conditional;


struct _2334e3821_FileInfo;


struct _2334e3821_PackageInfo;


struct _2337c95da_Stmt;


struct _2337c95da_ScopeParser;


struct _2337db201_CallData;


struct _2337db201_Precedencer;


struct _2337db201_ExprBuilder;


struct _23441cd43_Parser;


struct _23473c948_TypeBuilder;


struct _1d68bd462_Const;


struct _23461aa35_FieldIns;


struct _23461aa35_StructIns;


struct _2185d51ad_RetType;


struct _2185d51ad_ParamIns;


struct _2185d51ad_FnIns;


struct _21862cb1d_ReferenceStack;


struct _21862cb1d_SymbolBuilder;


struct _2186ce186_Scope;


struct _2186ce186_If;


struct _2186ce186_Else;


struct _2186ce186_Conditional;


struct _2186ce186_InfIter;


struct _2186ce186_WhileIter;


struct _2186ce186_RangeIter;


struct _2186ce186_ContSt;


struct _2186ce186_BreakSt;


struct _2186ce186_Label;


struct _2186ce186_GotoSt;


struct _2186ce186_Postfix;


struct _2186ce186_Assign;


struct _2186ce186_MultiAssign;


struct _2186ce186_Match;


struct _2186ce186_Case;


struct _2186ce186_FallSt;


struct _2186ce186_RetSt;


struct _2186ce186_Recover;


struct _2186ce186_ScopeGoto;


struct _2186ce186_ScopeChecker;


struct _2188586ea_BinopExprModel;


struct _2188586ea_UnaryExprModel;


struct _2188586ea_StructArgExprModel;


struct _2188586ea_StructLitExprModel;


struct _2188586ea_AllocStructLitExprModel;


struct _2188586ea_CastingExprModel;


struct _2188586ea_FnCallExprModel;


struct _2188586ea_SliceExprModel;


struct _2188586ea_IndexigExprModel;


struct _2188586ea_AnonFnExprModel;


struct _2188586ea_KeyValPairExprModel;


struct _2188586ea_MapExprModel;


struct _2188586ea_SlicingExprModel;


struct _2188586ea_TraitSubIdentExprModel;


struct _2188586ea_StructSubIdentExprModel;


struct _2188586ea_StructStaticIdentExprModel;


struct _2188586ea_ArrayExprModel;


struct _2188586ea_CommonIdentExprModel;


struct _2188586ea_CommonSubIdentExprModel;


struct _2188586ea_TupleExprModel;


struct _2188586ea_BuiltinOutCallExprModel;


struct _2188586ea_BuiltinOutlnCallExprModel;


struct _2188586ea_BuiltinCloneCallExprModel;


struct _2188586ea_BuiltinNewCallExprModel;


struct _2188586ea_BuiltinRealCallExprModel;


struct _2188586ea_BuiltinDropCallExprModel;


struct _2188586ea_BuiltinPanicCallExprModel;


struct _2188586ea_BuiltinMakeCallExprModel;


struct _2188586ea_BuiltinAppendCallExprModel;


struct _2188586ea_BuiltinErrorTraitSubIdentExprModel;


struct _2188586ea_SizeofExprModel;


struct _2188586ea_AlignofExprModel;


struct _2188586ea_RuneExprModel;


struct _2188586ea_IntegratedToStrExprModel;


struct _2188586ea_TernaryExprModel;


struct _218848bd5_Package;


struct _1eec2c632_Sema;


struct _200c58948_IterRelation;


struct _200c5bcc0_RangeChecker;


struct _218737b7e_SymbolTable;


struct _218751758_Data;


struct _218751758_Value;


struct _218751758_Eval;


struct _200d010d9_TypeKind;


struct _200d010d9_TypeSymbol;


struct _200d010d9_Prim;


struct _200d010d9_Sptr;


struct _200d010d9_Slc;


struct _200d010d9_Tuple;


struct _200d010d9_Map;


struct _200d010d9_Arr;


struct _200d010d9_Ptr;


struct _200d010d9_Referencer;


struct _233336642_PlainImporter;


struct _2330c4974_OrderedDefines;


struct _2330c4974_DefineOrderer;


struct _232e769d0_ScopeDeadCode;


struct _1d6d86650_AbsTime;


struct _1d6d86650_Time;


struct _1d6d86650_Duration;


struct _200ad0979_Flag_0;

struct _200ad0979_Flag_1;

struct _200ad0979_Flag_2;

struct _200ad0979_Flag_3;

struct _200ad0979_Flag_4;


struct _200ad0979_FlagSet;


struct _233464770_MatchCase;


struct _233464770_LitExpr;


struct _233464770_UnsafeExpr;


struct _233464770_IdentExpr;


struct _233464770_UnaryExpr;


struct _233464770_VariadicExpr;


struct _233464770_NsSelectionExpr;


struct _233464770_SubIdentExpr;


struct _233464770_BinopExpr;


struct _233464770_FieldExprPair;


struct _233464770_BraceLit;


struct _233464770_KeyValPair;


struct _233464770_SliceExpr;


struct _200c5bcc0_DynamicTypeAnnotation;


struct _200c5bcc0_StructLitChecker;


struct _233464770_IndexingExpr;


struct _233464770_SlicingExpr;


struct _233464770_TernaryExpr;


struct _233464770_LabelSt;


struct _233464770_FallSt;


struct _233464770_AssignSt;


struct _233464770_RetSt;


struct _233464770_Iter;


struct _233464770_WhileKind;


struct _233464770_RangeKind;


struct _200c5bcc0_TypeCompatibilityChecker;


struct _200c5bcc0_AssignTypeChecker;


struct _200c5bcc0_FnCallArgChecker;


struct _200c5bcc0_RetTypeChecker;


struct _233464770_GenericDecl;


struct _218751758_BinopSolver;


struct _200d010d9_TypeAlias;


struct _233464770_GotoSt;


struct _233464770_AssignLeft;


struct _233464770_Comment;


struct _233464770_ParamDecl;


struct _233464770_FnDecl;


struct _233464770_VarDecl;


struct _200d010d9_TypeChecker;


struct _23301cea5_IR;


struct _233464770_BreakSt;


struct _233464770_ContSt;


struct _2186ce186_ScopeLabel;


struct _233464770_If;


struct _233464770_Else;


struct _233464770_Directive;


struct _233464770_TypeAliasDecl;


struct _200ad0979_ArgParser;


struct _233464770_Case;


struct _233464770_UseDecl;


struct _233464770_EnumItemDecl;


struct _233464770_EnumDecl;


struct _233464770_FieldDecl;


struct _233464770_StructDecl;


struct _233464770_TraitDecl;


struct _233464770_Impl;


struct _233464770_Expr;


struct _233464770_TypeDecl;


struct _23441b814_AssignInfo;


struct _233464770_IdentTypeDecl;


struct _23461aa35_Field;


struct _23461aa35_Struct;


struct _233464770_FnCallExpr;


struct _2185d51ad_Param;


struct _2185d51ad_Fn;


struct _233464770_Node;


struct _21862cb1d_Pass;


struct _2185da36c_Trait;


struct _218848bd5_ImportInfo;


struct _2186be3da_EnumItem;


struct _2186be3da_Enum;


struct _2185e0064_Impl;


struct _200c58948_Var;

struct _218848bd5_Importer {
	virtual ~_218848bd5_Importer(void) {}

	virtual jule::Ptr<_218848bd5_ImportInfo> _method_get_import(jule::Str _1633_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ptr<_23346420e_Ast>>,jule::Slice<_231e4202e_Log>> _method_import_package(jule::Str _2037_path) { return {}; }
	virtual void _method_imported(jule::Ptr<_218848bd5_ImportInfo>) {}
};

struct _200d010d9_Kind {
	virtual ~_200d010d9_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind> _4722_other) { return {}; }
};

struct _1d6734eee_Lookup {
	virtual ~_1d6734eee_Lookup(void) {}

	virtual jule::Ptr<_218848bd5_ImportInfo> _method_find_package(jule::Str _935_ident) { return {}; }
	virtual jule::Ptr<_218848bd5_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)> _1337_selector) { return {}; }
	virtual jule::Ptr<_200c58948_Var> _method_find_var(jule::Str _1731_ident,jule::Bool _1743_cpp_linked) { return {}; }
	virtual jule::Ptr<_200d010d9_TypeAlias> _method_find_type_alias(jule::Str _2138_ident,jule::Bool _2150_cpp_linked) { return {}; }
	virtual jule::Ptr<_23461aa35_Struct> _method_find_struct(jule::Str _2534_ident,jule::Bool _2546_cpp_linked) { return {}; }
	virtual jule::Ptr<_2185d51ad_Fn> _method_find_fn(jule::Str _2930_ident,jule::Bool _2942_cpp_linked) { return {}; }
	virtual jule::Ptr<_2185da36c_Trait> _method_find_trait(jule::Str _3333_ident) { return {}; }
	virtual jule::Ptr<_2186be3da_Enum> _method_find_enum(jule::Str _3732_ident) { return {}; }
};

struct _200ad0979_CommonFlag {
	virtual ~_200ad0979_CommonFlag(void) {}

	virtual jule::Str _method_name(void) { return {}; }
	virtual jule::I32 _method_short(void) { return {}; }
	virtual jule::Str _method_what(void) { return {}; }
	virtual void _method_reset(void) {}
};


struct _231dc726c_AnsiEscape {
	

	_231dc726c_AnsiEscape(void) = default;

	static void _static_method_reset(void);


	static void _static_method_print(jule::Str,jule::Str);


	bool operator==(const _231dc726c_AnsiEscape &_Src) const { return true; }

	bool operator!=(const _231dc726c_AnsiEscape &_Src) const { return !this->operator==(_Src); }
};


struct _231dc726c_Logger {
	

	_231dc726c_Logger(void) = default;

	static void _static_method_log_flat(_231e4202e_Log&);


	static void _static_method_log_error(_231e4202e_Log&);


	static void _static_method_log(_231e4202e_Log&);


	static void _static_method_print_logs(jule::Slice<_231e4202e_Log>&);


	bool operator==(const _231dc726c_Logger &_Src) const { return true; }

	bool operator!=(const _231dc726c_Logger &_Src) const { return !this->operator==(_Src); }
};


struct _231ed2cb2_LazyBuff {
	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_231ed2cb2_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len): _field_path(__param_path), _field_buff(__param_buff), _field_w(__param_w), _field_vol_and_path(__param_vol_and_path), _field_vol_len(__param_vol_len) {}

	

	_231ed2cb2_LazyBuff(void) = default;

	jule::U8 _method_index(jule::Int);


	void _method_append(jule::U8);


	jule::Str _method_string(void);


	bool operator==(const _231ed2cb2_LazyBuff &_Src) const {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	bool operator!=(const _231ed2cb2_LazyBuff &_Src) const { return !this->operator==(_Src); }
};


struct _231e4202e_Log {
	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};
	jule::Str _field_line{jule::Str()};
	jule::Str _field_suggestion{jule::Str()};


	_231e4202e_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text, jule::Str __param_line, jule::Str __param_suggestion): _field_kind(__param_kind), _field_row(__param_row), _field_column(__param_column), _field_path(__param_path), _field_text(__param_text), _field_line(__param_line), _field_suggestion(__param_suggestion) {}

	

	_231e4202e_Log(void) = default;

	bool operator==(const _231e4202e_Log &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text &&
			this->_field_line == _Src._field_line &&
			this->_field_suggestion == _Src._field_suggestion;
	}

	bool operator!=(const _231e4202e_Log &_Src) const { return !this->operator==(_Src); }
};


struct _23363dc35_bits_error: public jule::Error {
	jule::Str _field_message{jule::Str()};


	_23363dc35_bits_error(jule::Str __param_message): _field_message(__param_message) {}

	

	_23363dc35_bits_error(void) = default;

	jule::Str _method_error(void);


	bool operator==(const _23363dc35_bits_error &_Src) const {
		return 
			this->_field_message == _Src._field_message;
	}

	bool operator!=(const _23363dc35_bits_error &_Src) const { return !this->operator==(_Src); }
};


struct _231e5e5ce_FloatInfo {
	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_231e5e5ce_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias): _field_mantbits(__param_mantbits), _field_expbits(__param_expbits), _field_bias(__param_bias) {}

	

	_231e5e5ce_FloatInfo(void) = default;

	bool operator==(const _231e5e5ce_FloatInfo &_Src) const {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	bool operator!=(const _231e5e5ce_FloatInfo &_Src) const { return !this->operator==(_Src); }
};


struct _231e5e5ce_DecimalSlice {
	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_231e5e5ce_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg) {}

	

	_231e5e5ce_DecimalSlice(void) = default;

	bool operator==(const _231e5e5ce_DecimalSlice &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	bool operator!=(const _231e5e5ce_DecimalSlice &_Src) const { return !this->operator==(_Src); }
};


struct _232e74d1e_LeftCheat {
	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_232e74d1e_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff): _field_delta(__param_delta), _field_cutoff(__param_cutoff) {}

	

	_232e74d1e_LeftCheat(void) = default;

	bool operator==(const _232e74d1e_LeftCheat &_Src) const {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	bool operator!=(const _232e74d1e_LeftCheat &_Src) const { return !this->operator==(_Src); }
};


struct _232e74d1e_Decimal {
	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_232e74d1e_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc): _field_d(__param_d), _field_nd(__param_nd), _field_dp(__param_dp), _field_neg(__param_neg), _field_trunc(__param_trunc) {}

	

	_232e74d1e_Decimal(void) = default;

	jule::Bool _method_set(jule::Str);


	std::tuple<jule::U64,jule::Bool> _method_float_bits(_231e5e5ce_FloatInfo&);


	void _method_assign(jule::U64);


	void _method_shift(jule::Int);


	void _method_round_down(jule::Int);


	void _method_round_up(jule::Int);


	void _method_round(jule::Int);


	jule::U64 _method_rounded_integer(void);


	bool operator==(const _232e74d1e_Decimal &_Src) const {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	bool operator!=(const _232e74d1e_Decimal &_Src) const { return !this->operator==(_Src); }
};


struct _233463670_DirEntry {
	jule::Str _field_name{jule::Str()};
	jule::Ptr<_2334b9671_Status> _field_stat{jule::Ptr<_2334b9671_Status>()};


	_233463670_DirEntry(jule::Str __param_name, jule::Ptr<_2334b9671_Status> __param_stat): _field_name(__param_name), _field_stat(__param_stat) {}

	

	_233463670_DirEntry(void) = default;

	bool operator==(const _233463670_DirEntry &_Src) const {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	bool operator!=(const _233463670_DirEntry &_Src) const { return !this->operator==(_Src); }
};


struct _233463670_Directory {
	

	_233463670_Directory(void) = default;

	static std::tuple<jule::Slice<jule::Ptr<_233463670_DirEntry>>,jule::Int> _static_method_read(jule::Str);


	static jule::Int _static_method_create(jule::Str);


	static jule::Int _static_method_remove(jule::Str);


	bool operator==(const _233463670_Directory &_Src) const { return true; }

	bool operator!=(const _233463670_Directory &_Src) const { return !this->operator==(_Src); }
};


struct _2334d2447_File {
	jule::Uintptr _field_handle{jule::Uintptr()};


	_2334d2447_File(jule::Uintptr __param_handle): _field_handle(__param_handle) {}

	

	_2334d2447_File(void) = default;

	static std::tuple<jule::Ptr<_2334d2447_File>,jule::Int> _static_method_open(jule::Str,jule::Int,jule::Int);


	static jule::Int _static_method_remove(jule::Str);


	std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	static jule::Ptr<_2334d2447_File> _static_method_new(jule::Uintptr);


	static std::tuple<jule::Ptr<_2334d2447_File>,jule::Int> _static_method_create(jule::Str);


	static std::tuple<jule::Slice<jule::U8>,jule::Int> _static_method_read(jule::Str);


	static jule::Int _static_method_write(jule::Str,jule::Slice<jule::U8>,jule::Int);


	std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	jule::Int _method_close(void);


	bool operator==(const _2334d2447_File &_Src) const {
		return 
			this->_field_handle == _Src._field_handle;
	}

	bool operator!=(const _2334d2447_File &_Src) const { return !this->operator==(_Src); }
};


struct _2334b9671_Status {
	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_2334b9671_Status(jule::Uint __param_mode, jule::Uint __param_size): _field_mode(__param_mode), _field_size(__param_size) {}

	

	_2334b9671_Status(void) = default;

	static std::tuple<jule::Ptr<_2334b9671_Status>,jule::Int> _static_method_of(jule::Str);


	jule::Bool _method_is_dir(void);


	jule::Bool _method_is_reg(void);


	bool operator==(const _2334b9671_Status &_Src) const {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	bool operator!=(const _2334b9671_Status &_Src) const { return !this->operator==(_Src); }
};


struct _234223e9b_FoldPair {
	jule::U16 _field_from{jule::U16()};
	jule::U16 _field_to{jule::U16()};


	_234223e9b_FoldPair(jule::U16 __param_from, jule::U16 __param_to): _field_from(__param_from), _field_to(__param_to) {}

	

	_234223e9b_FoldPair(void) = default;

	bool operator==(const _234223e9b_FoldPair &_Src) const {
		return 
			this->_field_from == _Src._field_from &&
			this->_field_to == _Src._field_to;
	}

	bool operator!=(const _234223e9b_FoldPair &_Src) const { return !this->operator==(_Src); }
};


struct _234223e9b_CaseRange {
	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::Array<jule::I32,3> _field_delta{jule::Array<jule::I32,3>()};


	_234223e9b_CaseRange(jule::U32 __param_lo, jule::U32 __param_hi, jule::Array<jule::I32,3> __param_delta): _field_lo(__param_lo), _field_hi(__param_hi), _field_delta(__param_delta) {}

	

	_234223e9b_CaseRange(void) = default;

	bool operator==(const _234223e9b_CaseRange &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_delta == _Src._field_delta;
	}

	bool operator!=(const _234223e9b_CaseRange &_Src) const { return !this->operator==(_Src); }
};


struct _234223e9b_Range16 {
	jule::U16 _field_lo{jule::U16()};
	jule::U16 _field_hi{jule::U16()};
	jule::U16 _field_stride{jule::U16()};


	_234223e9b_Range16(jule::U16 __param_lo, jule::U16 __param_hi, jule::U16 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_234223e9b_Range16(void) = default;

	bool operator==(const _234223e9b_Range16 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	bool operator!=(const _234223e9b_Range16 &_Src) const { return !this->operator==(_Src); }
};


struct _234223e9b_Range32 {
	jule::U32 _field_lo{jule::U32()};
	jule::U32 _field_hi{jule::U32()};
	jule::U32 _field_stride{jule::U32()};


	_234223e9b_Range32(jule::U32 __param_lo, jule::U32 __param_hi, jule::U32 __param_stride): _field_lo(__param_lo), _field_hi(__param_hi), _field_stride(__param_stride) {}

	

	_234223e9b_Range32(void) = default;

	bool operator==(const _234223e9b_Range32 &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi &&
			this->_field_stride == _Src._field_stride;
	}

	bool operator!=(const _234223e9b_Range32 &_Src) const { return !this->operator==(_Src); }
};


struct _234223e9b_RangeTable {
	jule::Slice<_234223e9b_Range16> _field_r16{jule::Slice<_234223e9b_Range16>()};
	jule::Slice<_234223e9b_Range32> _field_r32{jule::Slice<_234223e9b_Range32>()};
	jule::Int _field_latin_offset{jule::Int()};


	_234223e9b_RangeTable(jule::Slice<_234223e9b_Range16> __param_r16, jule::Slice<_234223e9b_Range32> __param_r32, jule::Int __param_latin_offset): _field_r16(__param_r16), _field_r32(__param_r32), _field_latin_offset(__param_latin_offset) {}

	

	_234223e9b_RangeTable(void) = default;

	bool operator==(const _234223e9b_RangeTable &_Src) const {
		return 
			this->_field_r16 == _Src._field_r16 &&
			this->_field_r32 == _Src._field_r32 &&
			this->_field_latin_offset == _Src._field_latin_offset;
	}

	bool operator!=(const _234223e9b_RangeTable &_Src) const { return !this->operator==(_Src); }
};


struct _23381108e_accept_range {
	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_23381108e_accept_range(jule::U8 __param_lo, jule::U8 __param_hi): _field_lo(__param_lo), _field_hi(__param_hi) {}

	

	_23381108e_accept_range(void) = default;

	bool operator==(const _23381108e_accept_range &_Src) const {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	bool operator!=(const _23381108e_accept_range &_Src) const { return !this->operator==(_Src); }
};


struct _2336ea198_Token {
	jule::Ptr<_2334d2d3d_File> _field_file{jule::Ptr<_2334d2d3d_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_2336ea198_Token(jule::Ptr<_2334d2d3d_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id): _field_file(__param_file), _field_row(__param_row), _field_column(__param_column), _field_kind(__param_kind), _field_id(__param_id) {}

	

	_2336ea198_Token(void) = default;

	jule::Int _method_prec(void);


	bool operator==(const _2336ea198_Token &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	bool operator!=(const _2336ea198_Token &_Src) const { return !this->operator==(_Src); }
};


struct _2334d2d3d_File {
	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Str _field__path{jule::Str()};
	jule::Slice<_2336ea198_Token> _field__tokens{jule::Slice<_2336ea198_Token>()};


	_2334d2d3d_File(jule::Slice<jule::U8> __param_data, jule::Str __param__path, jule::Slice<_2336ea198_Token> __param__tokens): _field_data(__param_data), _field__path(__param__path), _field__tokens(__param__tokens) {}

	

	_2334d2d3d_File(void) = default;

	jule::Bool _method_is_ok(void);


	void _method_fill(jule::Slice<jule::U8>);


	jule::Str _method_path(void);


	jule::Str _method_dir(void);


	jule::Str _method_name(void);


	jule::Uintptr _method_addr(void);


	jule::Slice<_2336ea198_Token> _method_tokens(void);


	jule::Str _method_get_row(jule::Int);


	bool operator==(const _2334d2d3d_File &_Src) const {
		return 
			this->_field_data == _Src._field_data &&
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	bool operator!=(const _2334d2d3d_File &_Src) const { return !this->operator==(_Src); }
};


struct _2334d2db5_KindPair {
	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_2334d2db5_KindPair(jule::Str __param_kind, jule::Uint __param_id): _field_kind(__param_kind), _field_id(__param_id) {}

	

	_2334d2db5_KindPair(void) = default;

	bool operator==(const _2334d2db5_KindPair &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	bool operator!=(const _2334d2db5_KindPair &_Src) const { return !this->operator==(_Src); }
};


struct _2334d2db5_Lex {
	jule::Slice<_2336ea198_Token> _field_tokens{jule::Slice<_2336ea198_Token>()};
	jule::Ptr<_2334d2d3d_File> _field_file{jule::Ptr<_2334d2d3d_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_231e4202e_Log> _field_errors{jule::Slice<_231e4202e_Log>()};


	_2334d2db5_Lex(jule::Slice<_2336ea198_Token> __param_tokens, jule::Ptr<_2334d2d3d_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_231e4202e_Log> __param_errors): _field_tokens(__param_tokens), _field_file(__param_file), _field_pos(__param_pos), _field_column(__param_column), _field_row(__param_row), _field_errors(__param_errors) {}

	

	_2334d2db5_Lex(void) = default;

	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	void _method_push_err_tok(_2336ea198_Token&,jule::Str);


	void _method_lex(void);


	jule::Str _method_id(jule::Slice<jule::U8>&);


	jule::Slice<jule::U8> _method_resume(void);


	void _method_lex_line_comment(_2336ea198_Token&);


	void _method_lex_range_comment(void);


	jule::Str _method_num(jule::Slice<jule::U8>&);


	jule::Str _method_escape_seq(jule::Slice<jule::U8>&);


	jule::Str _method_get_rune(jule::Slice<jule::U8>&,jule::Bool);


	jule::Str _method_lex_rune(jule::Slice<jule::U8>&);


	jule::Str _method_lex_str(void);


	jule::Bool _method_is_first_token_of_line(void);


	void _method_new_line(void);


	jule::Bool _method_is_op(jule::Slice<jule::U8>&,jule::Str,jule::Uint,_2336ea198_Token&);


	jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_2336ea198_Token&);


	jule::Bool _method_lex_id(jule::Slice<jule::U8>&,_2336ea198_Token&);


	jule::Bool _method_lex_num(jule::Slice<jule::U8>&,_2336ea198_Token&);


	_2336ea198_Token _method_token(void);


	bool operator==(const _2334d2db5_Lex &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	bool operator!=(const _2334d2db5_Lex &_Src) const { return !this->operator==(_Src); }
};


struct _23346420e_Ast {
	jule::Ptr<_2334d2d3d_File> _field_file{jule::Ptr<_2334d2d3d_File>()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_top_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Slice<jule::Ptr<_233464770_UseDecl>> _field_use_decls{jule::Slice<jule::Ptr<_233464770_UseDecl>>()};
	jule::Slice<jule::Ptr<_233464770_Impl>> _field_impls{jule::Slice<jule::Ptr<_233464770_Impl>>()};
	jule::Slice<jule::Ptr<_233464770_Comment>> _field_comments{jule::Slice<jule::Ptr<_233464770_Comment>>()};
	jule::Slice<_233464770_Node> _field_decls{jule::Slice<_233464770_Node>()};


	_23346420e_Ast(jule::Ptr<_2334d2d3d_File> __param_file, jule::Slice<jule::Ptr<_233464770_Directive>> __param_top_directives, jule::Slice<jule::Ptr<_233464770_UseDecl>> __param_use_decls, jule::Slice<jule::Ptr<_233464770_Impl>> __param_impls, jule::Slice<jule::Ptr<_233464770_Comment>> __param_comments, jule::Slice<_233464770_Node> __param_decls): _field_file(__param_file), _field_top_directives(__param_top_directives), _field_use_decls(__param_use_decls), _field_impls(__param_impls), _field_comments(__param_comments), _field_decls(__param_decls) {}

	

	_23346420e_Ast(void) = default;

	bool operator==(const _23346420e_Ast &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	bool operator!=(const _23346420e_Ast &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_CommentGroup {
	jule::Slice<jule::Ptr<_233464770_Comment>> _field_comments{jule::Slice<jule::Ptr<_233464770_Comment>>()};


	_233464770_CommentGroup(jule::Slice<jule::Ptr<_233464770_Comment>> __param_comments): _field_comments(__param_comments) {}

	

	_233464770_CommentGroup(void) = default;

	bool operator==(const _233464770_CommentGroup &_Src) const {
		return 
			this->_field_comments == _Src._field_comments;
	}

	bool operator!=(const _233464770_CommentGroup &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_NamespaceTypeDecl {
	jule::Slice<_2336ea198_Token> _field_idents{jule::Slice<_2336ea198_Token>()};
	jule::Ptr<_233464770_IdentTypeDecl> _field_kind{jule::Ptr<_233464770_IdentTypeDecl>()};


	_233464770_NamespaceTypeDecl(jule::Slice<_2336ea198_Token> __param_idents, jule::Ptr<_233464770_IdentTypeDecl> __param_kind): _field_idents(__param_idents), _field_kind(__param_kind) {}

	

	_233464770_NamespaceTypeDecl(void) = default;

	bool operator==(const _233464770_NamespaceTypeDecl &_Src) const {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _233464770_NamespaceTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_SptrTypeDecl {
	jule::Ptr<_233464770_TypeDecl> _field_elem{jule::Ptr<_233464770_TypeDecl>()};


	_233464770_SptrTypeDecl(jule::Ptr<_233464770_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_233464770_SptrTypeDecl(void) = default;

	bool operator==(const _233464770_SptrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _233464770_SptrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_SlcTypeDecl {
	jule::Ptr<_233464770_TypeDecl> _field_elem{jule::Ptr<_233464770_TypeDecl>()};


	_233464770_SlcTypeDecl(jule::Ptr<_233464770_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_233464770_SlcTypeDecl(void) = default;

	bool operator==(const _233464770_SlcTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _233464770_SlcTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_TupleTypeDecl {
	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _field_types{jule::Slice<jule::Ptr<_233464770_TypeDecl>>()};


	_233464770_TupleTypeDecl(jule::Slice<jule::Ptr<_233464770_TypeDecl>> __param_types): _field_types(__param_types) {}

	

	_233464770_TupleTypeDecl(void) = default;

	bool operator==(const _233464770_TupleTypeDecl &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	bool operator!=(const _233464770_TupleTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_PtrTypeDecl {
	jule::Ptr<_233464770_TypeDecl> _field_elem{jule::Ptr<_233464770_TypeDecl>()};


	_233464770_PtrTypeDecl(jule::Ptr<_233464770_TypeDecl> __param_elem): _field_elem(__param_elem) {}

	

	_233464770_PtrTypeDecl(void) = default;

	jule::Bool _method_is_unsafe(void);


	bool operator==(const _233464770_PtrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _233464770_PtrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_ArrTypeDecl {
	jule::Ptr<_233464770_TypeDecl> _field_elem{jule::Ptr<_233464770_TypeDecl>()};
	jule::Ptr<_233464770_Expr> _field_size{jule::Ptr<_233464770_Expr>()};


	_233464770_ArrTypeDecl(jule::Ptr<_233464770_TypeDecl> __param_elem, jule::Ptr<_233464770_Expr> __param_size): _field_elem(__param_elem), _field_size(__param_size) {}

	

	_233464770_ArrTypeDecl(void) = default;

	jule::Bool _method_auto_sized(void);


	bool operator==(const _233464770_ArrTypeDecl &_Src) const {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	bool operator!=(const _233464770_ArrTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_MapTypeDecl {
	jule::Ptr<_233464770_TypeDecl> _field_key{jule::Ptr<_233464770_TypeDecl>()};
	jule::Ptr<_233464770_TypeDecl> _field_val{jule::Ptr<_233464770_TypeDecl>()};


	_233464770_MapTypeDecl(jule::Ptr<_233464770_TypeDecl> __param_key, jule::Ptr<_233464770_TypeDecl> __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_233464770_MapTypeDecl(void) = default;

	bool operator==(const _233464770_MapTypeDecl &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	bool operator!=(const _233464770_MapTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_RetTypeDecl {
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Slice<_2336ea198_Token> _field_idents{jule::Slice<_2336ea198_Token>()};


	_233464770_RetTypeDecl(jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Slice<_2336ea198_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_233464770_RetTypeDecl(void) = default;

	bool operator==(const _233464770_RetTypeDecl &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	bool operator!=(const _233464770_RetTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_TupleExpr {
	jule::Slice<jule::Ptr<_233464770_Expr>> _field_expr{jule::Slice<jule::Ptr<_233464770_Expr>>()};


	_233464770_TupleExpr(jule::Slice<jule::Ptr<_233464770_Expr>> __param_expr): _field_expr(__param_expr) {}

	

	_233464770_TupleExpr(void) = default;

	bool operator==(const _233464770_TupleExpr &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_TupleExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_CastExpr {
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_233464770_CastExpr(jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Any __param_expr): _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_233464770_CastExpr(void) = default;

	bool operator==(const _233464770_CastExpr &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_CastExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_StructLit {
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_233464770_StructLit(jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs): _field_kind(__param_kind), _field_exprs(__param_exprs) {}

	

	_233464770_StructLit(void) = default;

	bool operator==(const _233464770_StructLit &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	bool operator!=(const _233464770_StructLit &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_ScopeTree {
	jule::Ptr<_233464770_ScopeTree> _field_parent{jule::Ptr<_233464770_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_233464770_ScopeTree(jule::Ptr<_233464770_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_233464770_ScopeTree(void) = default;

	bool operator==(const _233464770_ScopeTree &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	bool operator!=(const _233464770_ScopeTree &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Conditional {
	jule::Ptr<_233464770_If> _field_head{jule::Ptr<_233464770_If>()};
	jule::Slice<jule::Ptr<_233464770_If>> _field_tail{jule::Slice<jule::Ptr<_233464770_If>>()};
	jule::Ptr<_233464770_Else> _field_default{jule::Ptr<_233464770_Else>()};


	_233464770_Conditional(jule::Ptr<_233464770_If> __param_head, jule::Slice<jule::Ptr<_233464770_If>> __param_tail, jule::Ptr<_233464770_Else> __param_default): _field_head(__param_head), _field_tail(__param_tail), _field_default(__param_default) {}

	

	_233464770_Conditional(void) = default;

	bool operator==(const _233464770_Conditional &_Src) const {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _233464770_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _2334e3821_FileInfo {
	jule::Ptr<_23346420e_Ast> _field_ast{jule::Ptr<_23346420e_Ast>()};
	jule::Slice<_231e4202e_Log> _field_errors{jule::Slice<_231e4202e_Log>()};


	_2334e3821_FileInfo(jule::Ptr<_23346420e_Ast> __param_ast, jule::Slice<_231e4202e_Log> __param_errors): _field_ast(__param_ast), _field_errors(__param_errors) {}

	

	_2334e3821_FileInfo(void) = default;

	bool operator==(const _2334e3821_FileInfo &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	bool operator!=(const _2334e3821_FileInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2334e3821_PackageInfo {
	jule::Slice<jule::Ptr<_2334e3821_FileInfo>> _field_files{jule::Slice<jule::Ptr<_2334e3821_FileInfo>>()};


	_2334e3821_PackageInfo(jule::Slice<jule::Ptr<_2334e3821_FileInfo>> __param_files): _field_files(__param_files) {}

	

	_2334e3821_PackageInfo(void) = default;

	bool operator==(const _2334e3821_PackageInfo &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	bool operator!=(const _2334e3821_PackageInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2337c95da_Stmt {
	jule::Slice<_2336ea198_Token> _field_tokens{jule::Slice<_2336ea198_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_2337c95da_Stmt(jule::Slice<_2336ea198_Token> __param_tokens, jule::Bool __param_terminated): _field_tokens(__param_tokens), _field_terminated(__param_terminated) {}

	

	_2337c95da_Stmt(void) = default;

	bool operator==(const _2337c95da_Stmt &_Src) const {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	bool operator!=(const _2337c95da_Stmt &_Src) const { return !this->operator==(_Src); }
};


struct _2337c95da_ScopeParser {
	jule::Ptr<_23441cd43_Parser> _field_p{jule::Ptr<_23441cd43_Parser>()};
	jule::Ptr<_233464770_ScopeTree> _field_s{jule::Ptr<_233464770_ScopeTree>()};
	jule::Slice<jule::Ptr<_2337c95da_Stmt>> _field_stms{jule::Slice<jule::Ptr<_2337c95da_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_2337c95da_ScopeParser(jule::Ptr<_23441cd43_Parser> __param_p, jule::Ptr<_233464770_ScopeTree> __param_s, jule::Slice<jule::Ptr<_2337c95da_Stmt>> __param_stms, jule::Int __param_pos): _field_p(__param_p), _field_s(__param_s), _field_stms(__param_stms), _field_pos(__param_pos) {}

	

	_2337c95da_ScopeParser(void) = default;

	void _method_stop(void);


	jule::Bool _method_stopped(void);


	jule::Bool _method_finished(void);


	jule::Bool _method_is_last_st(void);


	void _method_push_err(_2336ea198_Token,jule::Str);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	void _method_insert_as_next(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_2337c95da_Stmt> _method_next(void);


	jule::Ptr<_233464770_ScopeTree> _method_build_scope(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_var_st(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_ret_st(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_while_next_iter(jule::Ptr<_2337c95da_Stmt>&);


	jule::Ptr<_233464770_WhileKind> _method_build_while_iter_kind(jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Slice<_2336ea198_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_VarDecl> _method_build_range_kind_key(jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Ptr<_233464770_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_2336ea198_Token>>&);


	void _method_setup_range_kind_keys_plain(jule::Ptr<_233464770_RangeKind>&,jule::Slice<_2336ea198_Token>&);


	void _method_setup_range_kind_keys_explicit(jule::Ptr<_233464770_RangeKind>&,jule::Slice<_2336ea198_Token>&);


	void _method_setup_range_kind_keys(jule::Ptr<_233464770_RangeKind>&,jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_RangeKind> _method_build_range_iter_kind(jule::Slice<_2336ea198_Token>&,jule::Slice<_2336ea198_Token>&,_2336ea198_Token&);


	jule::Any _method_build_common_iter_kind(jule::Slice<_2336ea198_Token>&,_2336ea198_Token&);


	jule::Any _method_build_common_iter(jule::Slice<_2336ea198_Token>);


	jule::Any _method_buid_iter_st(jule::Ptr<_2337c95da_Stmt>&);


	jule::Any _method_build_break_st(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_cont_st(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_If> _method_build_if(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_Else> _method_build_else(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_if_else_chain(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_comment_st(_2336ea198_Token&);


	jule::Any _method_build_call_st(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_co_call_st(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_goto_st(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_fall_st(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_type_alias_st(jule::Slice<_2336ea198_Token>&);


	void _method_push_case_expr(jule::Slice<_2336ea198_Token>,_2336ea198_Token,jule::Bool,jule::Slice<jule::Ptr<_233464770_Expr>>&);


	jule::Slice<jule::Ptr<_233464770_Expr>> _method_build_case_exprs(jule::Slice<_2336ea198_Token>&,jule::Bool);


	jule::Ptr<_233464770_ScopeTree> _method_build_case_scope(jule::Slice<_2336ea198_Token>&);


	std::tuple<jule::Ptr<_233464770_Case>,jule::Bool> _method_build_case(jule::Slice<_2336ea198_Token>&,jule::Bool);


	std::tuple<jule::Slice<jule::Ptr<_233464770_Case>>,jule::Ptr<_233464770_Else>> _method_build_cases(jule::Slice<_2336ea198_Token>,jule::Bool);


	jule::Ptr<_233464770_MatchCase> _method_build_match_case(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_ScopeTree> _method_build_scope_st(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_LabelSt> _method_build_label_st(jule::Slice<_2336ea198_Token>&);


	std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_23441b814_AssignInfo> _method_build_assign_info(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_AssignLeft> _method_build_assign_l(jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Ptr<_233464770_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_2336ea198_Token>>&);


	std::tuple<jule::Ptr<_233464770_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_2336ea198_Token>&);


	std::tuple<jule::Ptr<_233464770_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_2336ea198_Token>);


	std::tuple<jule::Ptr<_233464770_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_st(jule::Ptr<_2337c95da_Stmt>&);


	void _method_build(jule::Slice<_2336ea198_Token>&,jule::Ptr<_233464770_ScopeTree>&);


	bool operator==(const _2337c95da_ScopeParser &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	bool operator!=(const _2337c95da_ScopeParser &_Src) const { return !this->operator==(_Src); }
};


struct _2337db201_CallData {
	jule::Slice<_2336ea198_Token> _field_expr_tokens{jule::Slice<_2336ea198_Token>()};
	jule::Slice<_2336ea198_Token> _field_args_tokens{jule::Slice<_2336ea198_Token>()};
	jule::Slice<_2336ea198_Token> _field_generics_tokens{jule::Slice<_2336ea198_Token>()};


	_2337db201_CallData(jule::Slice<_2336ea198_Token> __param_expr_tokens, jule::Slice<_2336ea198_Token> __param_args_tokens, jule::Slice<_2336ea198_Token> __param_generics_tokens): _field_expr_tokens(__param_expr_tokens), _field_args_tokens(__param_args_tokens), _field_generics_tokens(__param_generics_tokens) {}

	

	_2337db201_CallData(void) = default;

	bool operator==(const _2337db201_CallData &_Src) const {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	bool operator!=(const _2337db201_CallData &_Src) const { return !this->operator==(_Src); }
};


struct _2337db201_Precedencer {
	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_2337db201_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs): _field_pairs(__param_pairs) {}

	

	_2337db201_Precedencer(void) = default;

	void _method_set(jule::Int,jule::Any);


	jule::Any _method_get_lower(void);


	bool operator==(const _2337db201_Precedencer &_Src) const {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	bool operator!=(const _2337db201_Precedencer &_Src) const { return !this->operator==(_Src); }
};


struct _2337db201_ExprBuilder {
	jule::Ptr<_23441cd43_Parser> _field_p{jule::Ptr<_23441cd43_Parser>()};


	_2337db201_ExprBuilder(jule::Ptr<_23441cd43_Parser> __param_p): _field_p(__param_p) {}

	

	_2337db201_ExprBuilder(void) = default;

	void _method_push_err(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Ptr<_233464770_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_2336ea198_Token>>&);


	jule::Ptr<_233464770_LitExpr> _method_build_lit(_2336ea198_Token);


	jule::Ptr<_233464770_TypeDecl> _method_build_primitive_type(_2336ea198_Token&);


	jule::Any _method_build_single(_2336ea198_Token);


	jule::Ptr<_233464770_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_UnaryExpr> _method_build_unary(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_TypeDecl> _method_build_type(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_sub_ident(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_VariadicExpr> _method_build_variadic(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_op_right(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_between_parentheses(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_CastExpr> _method_try_build_cast(jule::Slice<_2336ea198_Token>&);


	void _method_push_arg(jule::Slice<jule::Ptr<_233464770_Expr>>&,jule::Slice<_2336ea198_Token>,_2336ea198_Token);


	jule::Slice<jule::Ptr<_233464770_Expr>> _method_build_args(jule::Slice<_2336ea198_Token>);


	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _method_build_call_generics(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_FnCallExpr> _method_build_fn_call(_2336ea198_Token&,jule::Ptr<_2337db201_CallData>&);


	jule::Any _method_build_parentheses_range(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_FnDecl> _method_build_anon_fn(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_unsafe(jule::Slice<_2336ea198_Token>&);


	void _method_push_range_lit_part(jule::Slice<_2336ea198_Token>,_2336ea198_Token,jule::Slice<jule::Slice<_2336ea198_Token>>&);


	jule::Slice<jule::Slice<_2336ea198_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_struct_lit_expr(jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_StructLit> _method_build_typed_struct_literal(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_brace_lit_part(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_BraceLit> _method_build_brace_lit(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_brace_range(jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Slice<_2336ea198_Token>> _method_get_enumerable_parts(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_SliceExpr> _method_build_slice(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_IndexingExpr> _method_build_indexing(jule::Slice<_2336ea198_Token>,jule::Slice<_2336ea198_Token>,_2336ea198_Token);


	jule::Ptr<_233464770_SlicingExpr> _method_build_slicing(jule::Slice<_2336ea198_Token>&,jule::Slice<_2336ea198_Token>&,jule::Int&,_2336ea198_Token&);


	jule::Any _method_build_bracket_range(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_ternary(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_data(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_BinopExpr> _method_build_binop(jule::Slice<_2336ea198_Token>&,jule::Int);


	jule::Any _method_build(jule::Slice<_2336ea198_Token>&);


	jule::Any _method_build_kind(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_Expr> _method_build_from_tokens(jule::Slice<_2336ea198_Token>);


	bool operator==(const _2337db201_ExprBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p;
	}

	bool operator!=(const _2337db201_ExprBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _23441cd43_Parser {
	jule::Ptr<_23441cd43_Parser> self{};

	jule::Ptr<_23346420e_Ast> _field_ast{jule::Ptr<_23346420e_Ast>()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Ptr<_233464770_CommentGroup> _field_comment_group{jule::Ptr<_233464770_CommentGroup>()};
	jule::Slice<_231e4202e_Log> _field_errors{jule::Slice<_231e4202e_Log>()};


	_23441cd43_Parser(jule::Ptr<_23346420e_Ast> __param_ast, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Ptr<_233464770_CommentGroup> __param_comment_group, jule::Slice<_231e4202e_Log> __param_errors): _field_ast(__param_ast), _field_directives(__param_directives), _field_comment_group(__param_comment_group), _field_errors(__param_errors) {
		this->self = jule::Ptr<_23441cd43_Parser>::make(this, nullptr);

	}

	~_23441cd43_Parser(void) { this->self.ref = nullptr; }

	_23441cd43_Parser(void) { this->self = jule::Ptr<_23441cd43_Parser>::make(this, nullptr); }

	void _method_stop(void);


	jule::Bool _method_stopped(void);


	void _method_push_err(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Ptr<_233464770_Expr> _method_build_expr(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_Directive> _method_get_directive(jule::Ptr<_233464770_Comment>);


	void _method_push_directive(jule::Ptr<_233464770_Comment>&);


	void _method_process_comment(jule::Ptr<_233464770_Comment>&);


	jule::Ptr<_233464770_ScopeTree> _method_build_scope(jule::Slice<_2336ea198_Token>&);


	std::tuple<jule::Ptr<_233464770_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_2336ea198_Token>&,jule::Int*,jule::Bool);


	std::tuple<jule::Ptr<_233464770_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_2336ea198_Token>&,jule::Int*,jule::Bool);


	jule::Ptr<_233464770_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_2336ea198_Token>&);


	void _method_build_var_type_and_expr(jule::Ptr<_233464770_VarDecl>&,jule::Slice<_2336ea198_Token>&);


	void _method_build_var_common(jule::Ptr<_233464770_VarDecl>&,jule::Slice<_2336ea198_Token>);


	void _method_build_var_begin(jule::Ptr<_233464770_VarDecl>&,jule::Ptr<jule::Int>,jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_VarDecl> _method_build_var(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_GenericDecl> _method_build_generic(jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _method_build_generics(jule::Slice<_2336ea198_Token>&,_2336ea198_Token&);


	jule::Ptr<_233464770_ParamDecl> _method_build_self_param(jule::Slice<_2336ea198_Token>);


	void _method_param_type_begin(jule::Ptr<_233464770_ParamDecl>&,jule::Int&,jule::Slice<_2336ea198_Token>&);


	void _method_build_param_type(jule::Ptr<_233464770_ParamDecl>&,jule::Slice<_2336ea198_Token>&);


	void _method_param_body_id(jule::Ptr<_233464770_ParamDecl>,_2336ea198_Token);


	void _method_build_param_body(jule::Ptr<_233464770_ParamDecl>&,jule::Ptr<jule::Int>,jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_ParamDecl> _method_build_param(jule::Slice<_2336ea198_Token>);


	void _method_check_params(jule::Slice<jule::Ptr<_233464770_ParamDecl>>&);


	jule::Slice<jule::Ptr<_233464770_ParamDecl>> _method_build_params(jule::Slice<_2336ea198_Token>&,jule::Bool);


	std::tuple<jule::Ptr<_233464770_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_2336ea198_Token>&,jule::Int&);


	std::tuple<jule::Ptr<_233464770_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_2336ea198_Token>&,jule::Int&);


	jule::Ptr<_233464770_FnDecl> _method_build_fn_prototype(jule::Slice<_2336ea198_Token>&,jule::Int&,jule::Bool);


	jule::Ptr<_233464770_FnDecl> _method_build_fn(jule::Slice<_2336ea198_Token>&,jule::Bool,jule::Bool);


	jule::Slice<_2336ea198_Token> _method_get_use_decl_selectors(jule::Slice<_2336ea198_Token>);


	void _method_build_cpp_use_decl(jule::Ptr<_233464770_UseDecl>&,jule::Slice<_2336ea198_Token>&);


	void _method_build_std_use_decl(jule::Ptr<_233464770_UseDecl>&,jule::Slice<_2336ea198_Token>);


	void _method_build_ident_use_decl(jule::Ptr<_233464770_UseDecl>&,jule::Slice<_2336ea198_Token>);


	void _method_parse_use_decl(jule::Ptr<_233464770_UseDecl>&,jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_UseDecl> _method_build_use_decl(jule::Slice<_2336ea198_Token>,jule::Bool);


	jule::Ptr<_233464770_Expr> _method_build_enum_item_expr(jule::Ptr<jule::Int>,jule::Slice<_2336ea198_Token>&);


	jule::Slice<jule::Ptr<_233464770_EnumItemDecl>> _method_build_enum_items(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_EnumDecl> _method_build_enum_decl(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_FieldDecl> _method_build_field(jule::Slice<_2336ea198_Token>);


	jule::Slice<jule::Ptr<_233464770_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_StructDecl> _method_build_struct_decl(jule::Slice<_2336ea198_Token>&);


	void _method_check_method_receiver(jule::Ptr<_233464770_FnDecl>&);


	jule::Slice<jule::Ptr<_233464770_FnDecl>> _method_build_trait_methods(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_TraitDecl> _method_build_trait_decl(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_FnDecl> _method_build_cpp_link_fn(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_VarDecl> _method_build_cpp_link_var(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_StructDecl> _method_build_cpp_link_struct(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_2336ea198_Token>);


	jule::Ptr<_233464770_UseDecl> _method_build_cpp_link_use(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_cpp_link(jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_FnDecl> _method_get_method(jule::Slice<_2336ea198_Token>&);


	void _method_parse_impl_body(jule::Ptr<_233464770_Impl>&,jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_Impl> _method_build_impl(jule::Slice<_2336ea198_Token>);


	jule::Any _method_build_node_data(jule::Slice<_2336ea198_Token>&);


	void _method_check_comment_group(_233464770_Node&);


	void _method_check_directive(_233464770_Node&);


	void _method_apply_meta(_233464770_Node&,jule::Bool);


	void _method_check_use_decl(_233464770_Node&);


	std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_2336ea198_Token>);


	_233464770_Node _method_parse_node(jule::Slice<_2336ea198_Token>&);


	void _method_append_node(jule::Slice<_2336ea198_Token>&);


	void _method_remove_range(jule::Int,jule::Str,jule::Slice<_2336ea198_Token>&,jule::Slice<jule::Int>&);


	void _method_push_wrong_order_close_err(_2336ea198_Token&,jule::Slice<_2336ea198_Token>&,jule::Slice<jule::Int>&);


	void _method_push_range_close(_2336ea198_Token,jule::Str,jule::Slice<_2336ea198_Token>&,jule::Slice<jule::Int>&);


	void _method_check_ranges(jule::Slice<_2336ea198_Token>&);


	void _method_parse(jule::Ptr<_2334d2d3d_File>&);


	bool operator==(const _23441cd43_Parser &_Src) const {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	bool operator!=(const _23441cd43_Parser &_Src) const { return !this->operator==(_Src); }
};


struct _23473c948_TypeBuilder {
	jule::Ptr<_23441cd43_Parser> _field_p{jule::Ptr<_23441cd43_Parser>()};
	jule::Slice<_2336ea198_Token> _field_tokens{jule::Slice<_2336ea198_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_23473c948_TypeBuilder(jule::Ptr<_23441cd43_Parser> __param_p, jule::Slice<_2336ea198_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err): _field_p(__param_p), _field_tokens(__param_tokens), _field_i(__param_i), _field_err(__param_err) {}

	

	_23473c948_TypeBuilder(void) = default;

	void _method_push_err(_2336ea198_Token,jule::Str);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Ptr<_233464770_TypeDecl> _method_build_prim(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_namespace(void);


	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _method_build_generics(void);


	jule::Slice<jule::Slice<_2336ea198_Token>> _method_ident_generics(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_ident(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_cpp_link(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_fn(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_ptr(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_sptr(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_op(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_slc(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_arr(void);


	jule::Ptr<_233464770_TypeDecl> _method_build_map(jule::Int,jule::Slice<_2336ea198_Token>&);


	jule::Ptr<_233464770_TypeDecl> _method_build_enumerable(void);


	jule::Ptr<_233464770_TypeDecl> _method_step(void);


	std::tuple<jule::Ptr<_233464770_TypeDecl>,jule::Bool> _method_build(void);


	bool operator==(const _23473c948_TypeBuilder &_Src) const {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	bool operator!=(const _23473c948_TypeBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _1d68bd462_Const {
	jule::Any _field_data{jule::Any()};


	_1d68bd462_Const(jule::Any __param_data): _field_data(__param_data) {}

	

	_1d68bd462_Const(void) = default;

	static jule::Ptr<_1d68bd462_Const> _static_method_new_i64(jule::I64);


	static jule::Ptr<_1d68bd462_Const> _static_method_new_u64(jule::U64);


	static jule::Ptr<_1d68bd462_Const> _static_method_new_bool(jule::Bool);


	static jule::Ptr<_1d68bd462_Const> _static_method_new_str(jule::Str);


	static jule::Ptr<_1d68bd462_Const> _static_method_new_f64(jule::F64);


	static jule::Ptr<_1d68bd462_Const> _static_method_new_nil(void);


	jule::I64 _method_read_i64(void);


	jule::U64 _method_read_u64(void);


	jule::Bool _method_read_bool(void);


	jule::Str _method_read_str(void);


	jule::F64 _method_read_f64(void);


	jule::I64 _method_as_i64(void);


	jule::U64 _method_as_u64(void);


	jule::F64 _method_as_f64(void);


	void _method_set_i64(jule::I64);


	void _method_set_u64(jule::U64);


	void _method_set_bool(jule::Bool);


	void _method_set_str(jule::Str);


	void _method_set_f64(jule::F64);


	void _method_set_nil(void);


	jule::Bool _method_is_i64(void);


	jule::Bool _method_is_u64(void);


	jule::Bool _method_is_bool(void);


	jule::Bool _method_is_str(void);


	jule::Bool _method_is_f64(void);


	jule::Bool _method_is_nil(void);


	jule::Bool _method_are_same_types(_1d68bd462_Const);


	jule::Bool _method_and(_1d68bd462_Const);


	jule::Bool _method_or(_1d68bd462_Const);


	jule::Bool _method_eqs(_1d68bd462_Const);


	jule::Bool _method_lt(_1d68bd462_Const);


	jule::Bool _method_gt(_1d68bd462_Const);


	jule::Bool _method_add(_1d68bd462_Const);


	jule::Bool _method_sub(_1d68bd462_Const);


	jule::Bool _method_mul(_1d68bd462_Const);


	jule::Bool _method_div(_1d68bd462_Const);


	jule::Bool _method_mod(_1d68bd462_Const);


	jule::Bool _method_bitwise_and(_1d68bd462_Const);


	jule::Bool _method_bitwise_or(_1d68bd462_Const);


	jule::Bool _method_xor(_1d68bd462_Const);


	jule::Bool _method_lshift(_1d68bd462_Const);


	jule::Bool _method_rshift(_1d68bd462_Const);


	bool operator==(const _1d68bd462_Const &_Src) const {
		return 
			this->_field_data == _Src._field_data;
	}

	bool operator!=(const _1d68bd462_Const &_Src) const { return !this->operator==(_Src); }
};


struct _23461aa35_FieldIns {
	jule::Ptr<_23461aa35_Field> _field_decl{jule::Ptr<_23461aa35_Field>()};
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};


	_23461aa35_FieldIns(jule::Ptr<_23461aa35_Field> __param_decl, jule::Ptr<_200d010d9_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_23461aa35_FieldIns(void) = default;

	bool operator==(const _23461aa35_FieldIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _23461aa35_FieldIns &_Src) const { return !this->operator==(_Src); }
};


struct _23461aa35_StructIns: public _200d010d9_Kind {
	jule::Ptr<_23461aa35_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ptr<_23461aa35_Struct> _field_decl{jule::Ptr<_23461aa35_Struct>()};
	jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _field_generics{jule::Slice<jule::Ptr<_200d010d9_TypeKind>>()};
	jule::Slice<jule::Ptr<_23461aa35_FieldIns>> _field_fields{jule::Slice<jule::Ptr<_23461aa35_FieldIns>>()};
	jule::Slice<jule::Ptr<_2185d51ad_Fn>> _field_methods{jule::Slice<jule::Ptr<_2185d51ad_Fn>>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Ptr<_21862cb1d_ReferenceStack> _field_references{jule::Ptr<_21862cb1d_ReferenceStack>()};


	_23461aa35_StructIns(jule::Bool __param_checked, jule::Ptr<_23461aa35_Struct> __param_decl, jule::Slice<jule::Ptr<_200d010d9_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_23461aa35_FieldIns>> __param_fields, jule::Slice<jule::Ptr<_2185d51ad_Fn>> __param_methods, jule::Bool __param_mutable, jule::Ptr<_21862cb1d_ReferenceStack> __param_references): _field_checked(__param_checked), _field_decl(__param_decl), _field_generics(__param_generics), _field_fields(__param_fields), _field_methods(__param_methods), _field_mutable(__param_mutable), _field_references(__param_references) {
		this->self = jule::Ptr<_23461aa35_StructIns>::make(this, nullptr);

	}

	~_23461aa35_StructIns(void) { this->self.ref = nullptr; }

	_23461aa35_StructIns(void) { this->self = jule::Ptr<_23461aa35_StructIns>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Bool _method_same(jule::Ptr<_23461aa35_StructIns>);


	jule::Ptr<_2185d51ad_Fn> _method_find_method(jule::Str,jule::Bool);


	jule::Ptr<_23461aa35_FieldIns> _method_find_field(jule::Str);


	bool operator==(const _23461aa35_StructIns &_Src) const {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_references == _Src._field_references;
	}

	bool operator!=(const _23461aa35_StructIns &_Src) const { return !this->operator==(_Src); }
};


struct _2185d51ad_RetType {
	jule::Ptr<_200d010d9_TypeSymbol> _field_kind{jule::Ptr<_200d010d9_TypeSymbol>()};
	jule::Slice<_2336ea198_Token> _field_idents{jule::Slice<_2336ea198_Token>()};


	_2185d51ad_RetType(jule::Ptr<_200d010d9_TypeSymbol> __param_kind, jule::Slice<_2336ea198_Token> __param_idents): _field_kind(__param_kind), _field_idents(__param_idents) {}

	

	_2185d51ad_RetType(void) = default;

	bool operator==(const _2185d51ad_RetType &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	bool operator!=(const _2185d51ad_RetType &_Src) const { return !this->operator==(_Src); }
};


struct _2185d51ad_ParamIns {
	jule::Ptr<_2185d51ad_Param> _field_decl{jule::Ptr<_2185d51ad_Param>()};
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};


	_2185d51ad_ParamIns(jule::Ptr<_2185d51ad_Param> __param_decl, jule::Ptr<_200d010d9_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_2185d51ad_ParamIns(void) = default;

	jule::Str _method_to_str(void);


	bool operator==(const _2185d51ad_ParamIns &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _2185d51ad_ParamIns &_Src) const { return !this->operator==(_Src); }
};


struct _2185d51ad_FnIns: public _200d010d9_Kind {
	jule::Ptr<_2185d51ad_FnIns> self{};

	jule::Ptr<_23461aa35_StructIns> _field_owner{jule::Ptr<_23461aa35_StructIns>()};
	jule::Ptr<_2185d51ad_Fn> _field_decl{jule::Ptr<_2185d51ad_Fn>()};
	jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _field_generics{jule::Slice<jule::Ptr<_200d010d9_TypeKind>>()};
	jule::Slice<jule::Ptr<_2185d51ad_ParamIns>> _field_params{jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>()};
	jule::Ptr<_200d010d9_TypeKind> _field_result{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};
	jule::Ptr<_21862cb1d_ReferenceStack> _field_references{jule::Ptr<_21862cb1d_ReferenceStack>()};
	jule::Ptr<_21862cb1d_ReferenceStack> _field_refers{jule::Ptr<_21862cb1d_ReferenceStack>()};
	jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)> _field_caller{jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns> __param_owner, jule::Ptr<_2185d51ad_Fn> __param_decl, jule::Slice<jule::Ptr<_200d010d9_TypeKind>> __param_generics, jule::Slice<jule::Ptr<_2185d51ad_ParamIns>> __param_params, jule::Ptr<_200d010d9_TypeKind> __param_result, jule::Ptr<_2186ce186_Scope> __param_scope, jule::Ptr<_21862cb1d_ReferenceStack> __param_references, jule::Ptr<_21862cb1d_ReferenceStack> __param_refers, jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon): _field_owner(__param_owner), _field_decl(__param_decl), _field_generics(__param_generics), _field_params(__param_params), _field_result(__param_result), _field_scope(__param_scope), _field_references(__param_references), _field_refers(__param_refers), _field_caller(__param_caller), _field_reloaded(__param_reloaded), _field_anon(__param_anon) {
		this->self = jule::Ptr<_2185d51ad_FnIns>::make(this, nullptr);

	}

	~_2185d51ad_FnIns(void) { this->self.ref = nullptr; }

	_2185d51ad_FnIns(void) { this->self = jule::Ptr<_2185d51ad_FnIns>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Bool _method_is_builtin(void);


	jule::Bool _method_is_anon(void);


	jule::Bool _method_same(jule::Ptr<_2185d51ad_FnIns>);


	jule::Str _method_get_kind_str(jule::Bool);


	bool operator==(const _2185d51ad_FnIns &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_references == _Src._field_references &&
			this->_field_refers == _Src._field_refers &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	bool operator!=(const _2185d51ad_FnIns &_Src) const { return !this->operator==(_Src); }
};


struct _21862cb1d_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer{jule::Slice<jule::Any>()};


	_21862cb1d_ReferenceStack(jule::Slice<jule::Any> __param_buffer): _field_buffer(__param_buffer) {}

	

	_21862cb1d_ReferenceStack(void) = default;

	static jule::Ptr<_21862cb1d_ReferenceStack> _static_method_new(void);


	jule::Int _method_len(void);


	jule::Any _method_at(jule::Int);


	void _method_push(jule::Any);


	jule::Bool _method_exist_0(jule::Ptr<_200c58948_Var>);
	jule::Bool _method_exist_1(jule::Ptr<_2185d51ad_FnIns>);
	jule::Bool _method_exist_2(jule::Ptr<_23461aa35_StructIns>);


	bool operator==(const _21862cb1d_ReferenceStack &_Src) const {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	bool operator!=(const _21862cb1d_ReferenceStack &_Src) const { return !this->operator==(_Src); }
};


struct _21862cb1d_SymbolBuilder {
	jule::Ptr<_21862cb1d_SymbolBuilder> self{};

	jule::Ptr<_21862cb1d_SymbolBuilder> _field_owner{jule::Ptr<_21862cb1d_SymbolBuilder>()};
	jule::Trait<_218848bd5_Importer> _field_importer{jule::Trait<_218848bd5_Importer>()};
	jule::Slice<_231e4202e_Log> _field_errors{jule::Slice<_231e4202e_Log>()};
	jule::Ptr<_23346420e_Ast> _field_ast{jule::Ptr<_23346420e_Ast>()};
	jule::Ptr<_218737b7e_SymbolTable> _field_table{jule::Ptr<_218737b7e_SymbolTable>()};


	_21862cb1d_SymbolBuilder(jule::Ptr<_21862cb1d_SymbolBuilder> __param_owner, jule::Trait<_218848bd5_Importer> __param_importer, jule::Slice<_231e4202e_Log> __param_errors, jule::Ptr<_23346420e_Ast> __param_ast, jule::Ptr<_218737b7e_SymbolTable> __param_table): _field_owner(__param_owner), _field_importer(__param_importer), _field_errors(__param_errors), _field_ast(__param_ast), _field_table(__param_table) {
		this->self = jule::Ptr<_21862cb1d_SymbolBuilder>::make(this, nullptr);

	}

	~_21862cb1d_SymbolBuilder(void) { this->self.ref = nullptr; }

	_21862cb1d_SymbolBuilder(void) { this->self = jule::Ptr<_21862cb1d_SymbolBuilder>::make(this, nullptr); }

	jule::Ptr<_21862cb1d_SymbolBuilder> _method_get_root(void);


	void _method_push_err(_2336ea198_Token&,jule::Str,jule::Slice<jule::Any>);


	void _method_push_err_text(_2336ea198_Token&,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_check_cpp_use_decl_path(jule::Ptr<_233464770_UseDecl>&);


	jule::Ptr<_218848bd5_ImportInfo> _method_build_cpp_header_import(jule::Ptr<_233464770_UseDecl>&);


	jule::Ptr<_218848bd5_ImportInfo> _method_build_std_import(jule::Ptr<_233464770_UseDecl>&);


	jule::Ptr<_218848bd5_ImportInfo> _method_build_ident_import(jule::Ptr<_233464770_UseDecl>&);


	jule::Ptr<_218848bd5_ImportInfo> _method_build_import(jule::Ptr<_233464770_UseDecl>&);


	jule::Bool _method_check_duplicate_use_decl(jule::Ptr<_218848bd5_ImportInfo>&);


	void _method_impl_import_selections(jule::Ptr<_218848bd5_ImportInfo>&,jule::Ptr<_233464770_UseDecl>&);


	jule::Str _method_get_as_link_path(jule::Str);


	void _method_push_cycle_error(jule::Ptr<_21862cb1d_SymbolBuilder>&,jule::Str,jule::Str&);


	void _method_push_cross_cycle_error(jule::Ptr<_21862cb1d_SymbolBuilder>&,jule::Ptr<_218848bd5_ImportInfo>&,_2336ea198_Token&);


	jule::Bool _method_check_import_cycles(jule::Ptr<_218848bd5_ImportInfo>,jule::Ptr<_233464770_UseDecl>&);


	jule::Bool _method_import_package(jule::Ptr<_218848bd5_ImportInfo>&,jule::Ptr<_233464770_UseDecl>&);


	jule::Ptr<_218848bd5_ImportInfo> _method_import_use_decl(jule::Ptr<_233464770_UseDecl>&);


	void _method_import_use_decls(void);


	void _method_append_decl(_233464770_Node&);


	void _method_append_decls(void);


	void _method_append_impls(void);


	void _method_push_directive_pass(jule::Ptr<_233464770_Directive>&);


	void _method_append_top_directives(void);


	void _method_build(void);


	bool operator==(const _21862cb1d_SymbolBuilder &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	bool operator!=(const _21862cb1d_SymbolBuilder &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Scope {
	jule::Ptr<_2186ce186_Scope> _field_parent{jule::Ptr<_2186ce186_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_2186ce186_Scope(jule::Ptr<_2186ce186_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts): _field_parent(__param_parent), _field_unsafety(__param_unsafety), _field_deferred(__param_deferred), _field_stmts(__param_stmts) {}

	

	_2186ce186_Scope(void) = default;

	bool operator==(const _2186ce186_Scope &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	bool operator!=(const _2186ce186_Scope &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_If {
	jule::Any _field_expr{jule::Any()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};


	_2186ce186_If(jule::Any __param_expr, jule::Ptr<_2186ce186_Scope> __param_scope): _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_2186ce186_If(void) = default;

	bool operator==(const _2186ce186_If &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _2186ce186_If &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Else {
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};


	_2186ce186_Else(jule::Ptr<_2186ce186_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_2186ce186_Else(void) = default;

	bool operator==(const _2186ce186_Else &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _2186ce186_Else &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Conditional {
	jule::Slice<jule::Ptr<_2186ce186_If>> _field_elifs{jule::Slice<jule::Ptr<_2186ce186_If>>()};
	jule::Ptr<_2186ce186_Else> _field_default{jule::Ptr<_2186ce186_Else>()};


	_2186ce186_Conditional(jule::Slice<jule::Ptr<_2186ce186_If>> __param_elifs, jule::Ptr<_2186ce186_Else> __param_default): _field_elifs(__param_elifs), _field_default(__param_default) {}

	

	_2186ce186_Conditional(void) = default;

	bool operator==(const _2186ce186_Conditional &_Src) const {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _2186ce186_Conditional &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_InfIter {
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};


	_2186ce186_InfIter(jule::Ptr<_2186ce186_Scope> __param_scope): _field_scope(__param_scope) {}

	

	_2186ce186_InfIter(void) = default;

	bool operator==(const _2186ce186_InfIter &_Src) const {
		return 
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _2186ce186_InfIter &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_WhileIter {
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};


	_2186ce186_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ptr<_2186ce186_Scope> __param_scope): _field_expr(__param_expr), _field_next(__param_next), _field_scope(__param_scope) {}

	

	_2186ce186_WhileIter(void) = default;

	jule::Bool _method_is_while_next(void);


	bool operator==(const _2186ce186_WhileIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _2186ce186_WhileIter &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_RangeIter {
	jule::Ptr<_218751758_Data> _field_expr{jule::Ptr<_218751758_Data>()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};
	jule::Ptr<_200c58948_Var> _field_key_a{jule::Ptr<_200c58948_Var>()};
	jule::Ptr<_200c58948_Var> _field_key_b{jule::Ptr<_200c58948_Var>()};


	_2186ce186_RangeIter(jule::Ptr<_218751758_Data> __param_expr, jule::Ptr<_2186ce186_Scope> __param_scope, jule::Ptr<_200c58948_Var> __param_key_a, jule::Ptr<_200c58948_Var> __param_key_b): _field_expr(__param_expr), _field_scope(__param_scope), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_2186ce186_RangeIter(void) = default;

	bool operator==(const _2186ce186_RangeIter &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	bool operator!=(const _2186ce186_RangeIter &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_ContSt {
	jule::Uintptr _field_it{jule::Uintptr()};


	_2186ce186_ContSt(jule::Uintptr __param_it): _field_it(__param_it) {}

	

	_2186ce186_ContSt(void) = default;

	bool operator==(const _2186ce186_ContSt &_Src) const {
		return 
			this->_field_it == _Src._field_it;
	}

	bool operator!=(const _2186ce186_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_BreakSt {
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_2186ce186_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch): _field_it(__param_it), _field_mtch(__param_mtch) {}

	

	_2186ce186_BreakSt(void) = default;

	bool operator==(const _2186ce186_BreakSt &_Src) const {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	bool operator!=(const _2186ce186_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Label {
	jule::Str _field_ident{jule::Str()};


	_2186ce186_Label(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2186ce186_Label(void) = default;

	bool operator==(const _2186ce186_Label &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2186ce186_Label &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_GotoSt {
	jule::Str _field_ident{jule::Str()};


	_2186ce186_GotoSt(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2186ce186_GotoSt(void) = default;

	bool operator==(const _2186ce186_GotoSt &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2186ce186_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Postfix {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_2186ce186_Postfix(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_2186ce186_Postfix(void) = default;

	bool operator==(const _2186ce186_Postfix &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _2186ce186_Postfix &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Assign {
	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_2186ce186_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op): _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_2186ce186_Assign(void) = default;

	bool operator==(const _2186ce186_Assign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _2186ce186_Assign &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_MultiAssign {
	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_2186ce186_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r): _field_l(__param_l), _field_r(__param_r) {}

	

	_2186ce186_MultiAssign(void) = default;

	bool operator==(const _2186ce186_MultiAssign &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	bool operator!=(const _2186ce186_MultiAssign &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Match {
	jule::Ptr<_218751758_Data> _field_expr{jule::Ptr<_218751758_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ptr<_2186ce186_Case>> _field_cases{jule::Slice<jule::Ptr<_2186ce186_Case>>()};
	jule::Ptr<_2186ce186_Case> _field_default{jule::Ptr<_2186ce186_Case>()};


	_2186ce186_Match(jule::Ptr<_218751758_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ptr<_2186ce186_Case>> __param_cases, jule::Ptr<_2186ce186_Case> __param_default): _field_expr(__param_expr), _field_type_match(__param_type_match), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_2186ce186_Match(void) = default;

	jule::Bool _method_is_generic_type_match(void);


	bool operator==(const _2186ce186_Match &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _2186ce186_Match &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Case {
	jule::Ptr<_2186ce186_Match> _field_owner{jule::Ptr<_2186ce186_Match>()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ptr<_2186ce186_Case> _field_next{jule::Ptr<_2186ce186_Case>()};


	_2186ce186_Case(jule::Ptr<_2186ce186_Match> __param_owner, jule::Ptr<_2186ce186_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ptr<_2186ce186_Case> __param_next): _field_owner(__param_owner), _field_scope(__param_scope), _field_exprs(__param_exprs), _field_next(__param_next) {}

	

	_2186ce186_Case(void) = default;

	jule::Bool _method_is_default(void);


	bool operator==(const _2186ce186_Case &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	bool operator!=(const _2186ce186_Case &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_FallSt {
	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_2186ce186_FallSt(jule::Uintptr __param_dest_case): _field_dest_case(__param_dest_case) {}

	

	_2186ce186_FallSt(void) = default;

	bool operator==(const _2186ce186_FallSt &_Src) const {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	bool operator!=(const _2186ce186_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_RetSt {
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_vars{jule::Slice<jule::Ptr<_200c58948_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_2186ce186_RetSt(jule::Slice<jule::Ptr<_200c58948_Var>> __param_vars, jule::Any __param_expr): _field_vars(__param_vars), _field_expr(__param_expr) {}

	

	_2186ce186_RetSt(void) = default;

	bool operator==(const _2186ce186_RetSt &_Src) const {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2186ce186_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_Recover {
	jule::Ptr<_2185d51ad_FnIns> _field_handler{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};
	jule::Ptr<_2185d51ad_FnIns> _field_scope_owner{jule::Ptr<_2185d51ad_FnIns>()};


	_2186ce186_Recover(jule::Ptr<_2185d51ad_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ptr<_2186ce186_Scope> __param_scope, jule::Ptr<_2185d51ad_FnIns> __param_scope_owner): _field_handler(__param_handler), _field_handler_expr(__param_handler_expr), _field_scope(__param_scope), _field_scope_owner(__param_scope_owner) {}

	

	_2186ce186_Recover(void) = default;

	bool operator==(const _2186ce186_Recover &_Src) const {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_scope_owner == _Src._field_scope_owner;
	}

	bool operator!=(const _2186ce186_Recover &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_ScopeGoto {
	jule::Ptr<_233464770_GotoSt> _field_gt{jule::Ptr<_233464770_GotoSt>()};
	jule::Ptr<_2186ce186_ScopeChecker> _field_scope{jule::Ptr<_2186ce186_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_2186ce186_ScopeGoto(jule::Ptr<_233464770_GotoSt> __param_gt, jule::Ptr<_2186ce186_ScopeChecker> __param_scope, jule::Int __param_pos): _field_gt(__param_gt), _field_scope(__param_scope), _field_pos(__param_pos) {}

	

	_2186ce186_ScopeGoto(void) = default;

	bool operator==(const _2186ce186_ScopeGoto &_Src) const {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	bool operator!=(const _2186ce186_ScopeGoto &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_ScopeChecker: public _1d6734eee_Lookup {
	jule::Ptr<_2186ce186_ScopeChecker> self{};

	jule::Ptr<_1eec2c632_Sema> _field_s{jule::Ptr<_1eec2c632_Sema>()};
	jule::Ptr<_2185d51ad_FnIns> _field_owner{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Ptr<_2186ce186_ScopeChecker> _field_parent{jule::Ptr<_2186ce186_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ptr<_218737b7e_SymbolTable> _field_table{jule::Ptr<_218737b7e_SymbolTable>()};
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};
	jule::Ptr<_233464770_ScopeTree> _field_tree{jule::Ptr<_233464770_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>> _field_labels{jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>>()};
	jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>> _field_gotos{jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_2186ce186_ScopeChecker(jule::Ptr<_1eec2c632_Sema> __param_s, jule::Ptr<_2185d51ad_FnIns> __param_owner, jule::Ptr<_2186ce186_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ptr<_218737b7e_SymbolTable> __param_table, jule::Ptr<_2186ce186_Scope> __param_scope, jule::Ptr<_233464770_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>> __param_labels, jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>> __param_gotos, jule::Int __param_i): _field_s(__param_s), _field_owner(__param_owner), _field_parent(__param_parent), _field_child_index(__param_child_index), _field_table(__param_table), _field_scope(__param_scope), _field_tree(__param_tree), _field_it(__param_it), _field_cse(__param_cse), _field_labels(__param_labels), _field_gotos(__param_gotos), _field_i(__param_i) {
		this->self = jule::Ptr<_2186ce186_ScopeChecker>::make(this, nullptr);

	}

	~_2186ce186_ScopeChecker(void) { this->self.ref = nullptr; }

	_2186ce186_ScopeChecker(void) { this->self = jule::Ptr<_2186ce186_ScopeChecker>::make(this, nullptr); }

	jule::Ptr<_218848bd5_ImportInfo> _method_find_package(jule::Str);


	jule::Ptr<_218848bd5_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>);


	jule::Ptr<_200c58948_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ptr<_200d010d9_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ptr<_23461aa35_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ptr<_2185d51ad_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ptr<_2185da36c_Trait> _method_find_trait(jule::Str);


	jule::Ptr<_2186be3da_Enum> _method_find_enum(jule::Str);


	jule::Bool _method_is_unsafe(void);


	jule::Bool _method_is_root(void);


	jule::Ptr<_2186ce186_ScopeChecker> _method_get_root(void);


	jule::Ptr<_2186ce186_Label> _method_find_label(jule::Str);


	jule::Ptr<_2186ce186_ScopeLabel> _method_find_label_scope(jule::Str);


	jule::Ptr<_2186ce186_ScopeLabel> _method_find_label_all(jule::Str);


	jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	void _method_check_var_decl(jule::Ptr<_233464770_VarDecl>);


	void _method_check_type_alias_decl(jule::Ptr<_233464770_TypeAliasDecl>);


	jule::Ptr<_2186ce186_Scope> _method_get_child(void);


	void _method_check_child_ssc(jule::Ptr<_233464770_ScopeTree>&,jule::Ptr<_2186ce186_Scope>&,jule::Ptr<_2186ce186_ScopeChecker>&);


	jule::Ptr<_2186ce186_Scope> _method_check_child_sc(jule::Ptr<_233464770_ScopeTree>&,jule::Ptr<_2186ce186_ScopeChecker>&);


	jule::Ptr<_2186ce186_Scope> _method_check_child(jule::Ptr<_233464770_ScopeTree>&);


	void _method_check_anon_scope(jule::Ptr<_233464770_ScopeTree>);


	jule::Bool _method_try_call_recover(jule::Ptr<_218751758_Data>&);


	void _method_check_expr(jule::Ptr<_233464770_Expr>);


	jule::Ptr<_2186ce186_If> _method_check_if(jule::Ptr<_233464770_If>);


	jule::Ptr<_2186ce186_Else> _method_check_else(jule::Ptr<_233464770_Else>);


	void _method_check_conditional(jule::Ptr<_233464770_Conditional>);


	jule::Ptr<_2186ce186_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ptr<_233464770_ScopeTree>,jule::Ptr<_2186ce186_ScopeChecker>);


	jule::Ptr<_2186ce186_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ptr<_233464770_ScopeTree>&);


	void _method_check_inf_iter(jule::Ptr<_233464770_Iter>&);


	void _method_check_while_iter(jule::Ptr<_233464770_Iter>&);


	void _method_check_range_iter(jule::Ptr<_233464770_Iter>&);


	void _method_check_iter(jule::Ptr<_233464770_Iter>);


	jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	jule::Bool _method_check_valid_break_label(jule::Uintptr);


	jule::Ptr<_2186ce186_ContSt> _method_check_cont_valid_scope(jule::Ptr<_233464770_ContSt>);


	void _method_check_cont(jule::Ptr<_233464770_ContSt>);


	void _method_check_label(jule::Ptr<_233464770_LabelSt>);


	void _method_push_goto(jule::Ptr<_233464770_GotoSt>);


	void _method_check_postfix(jule::Ptr<_233464770_AssignSt>);


	jule::Bool _method_is_new_assign_ident(jule::Str);


	void _method_check_single_assign(jule::Ptr<_233464770_AssignSt>&);


	void _method___process_end_part_of_multi_assign(jule::Ptr<_2186ce186_MultiAssign>,jule::Ptr<_233464770_AssignSt>,jule::Ptr<_233464770_AssignLeft>,jule::Ptr<_218751758_Data>,jule::Ptr<_218751758_Data>);


	void _method_check_ret_multi_assign(jule::Ptr<_233464770_AssignSt>&);


	void _method_check_multi_assign(jule::Ptr<_233464770_AssignSt>&);


	void _method_check_assign_st(jule::Ptr<_233464770_AssignSt>);


	jule::Ptr<_2186ce186_Scope> _method_check_case_scope(jule::Ptr<_2186ce186_Case>&,jule::Ptr<_233464770_ScopeTree>&);


	jule::Ptr<_2186ce186_Case> _method_check_case(jule::Ptr<_2186ce186_Match>,jule::Int,jule::Ptr<_233464770_Case>,jule::Ptr<_218751758_Data>);


	void _method_check_cases(jule::Ptr<_233464770_MatchCase>&,jule::Ptr<_2186ce186_Match>,jule::Ptr<_218751758_Data>);


	jule::Ptr<_2186ce186_Case> _method_check_default(jule::Ptr<_2186ce186_Match>,jule::Ptr<_233464770_Else>);


	void _method_check_comptime_panic(jule::Ptr<_2186ce186_Scope>&,_2336ea198_Token);


	void _method_push_type_match(jule::Ptr<_2186ce186_Match>,jule::Ptr<_233464770_MatchCase>&);


	void _method_check_type_match(jule::Ptr<_233464770_MatchCase>&);


	void _method_check_common_match(jule::Ptr<_233464770_MatchCase>&);


	void _method_check_match(jule::Ptr<_233464770_MatchCase>);


	void _method_check_fall(jule::Ptr<_233464770_FallSt>);


	jule::Ptr<_2186ce186_BreakSt> _method_check_break_with_label(jule::Ptr<_233464770_BreakSt>);


	jule::Ptr<_2186ce186_BreakSt> _method_check_plain_break(jule::Ptr<_233464770_BreakSt>);


	void _method_check_break(jule::Ptr<_233464770_BreakSt>);


	void _method_check_ret(jule::Ptr<_233464770_RetSt>);


	void _method_check_node(jule::Any&);


	void _method_check_tree(void);


	void _method_check_goto(jule::Ptr<_2186ce186_ScopeGoto>&,jule::Ptr<_2186ce186_ScopeLabel>&);


	void _method_check_gotos(void);


	void _method_check_labels(void);


	void _method_check_vars(void);


	void _method_check_aliases(void);


	void _method_check(jule::Ptr<_233464770_ScopeTree>&,jule::Ptr<_2186ce186_Scope>&);


	jule::Ptr<_2186ce186_ScopeChecker> _method_new_child_checker(void);


	bool operator==(const _2186ce186_ScopeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	bool operator!=(const _2186ce186_ScopeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BinopExprModel {
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_2188586ea_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_2188586ea_BinopExprModel(void) = default;

	bool operator==(const _2188586ea_BinopExprModel &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _2188586ea_BinopExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_UnaryExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_2188586ea_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op): _field_expr(__param_expr), _field_op(__param_op) {}

	

	_2188586ea_UnaryExprModel(void) = default;

	bool operator==(const _2188586ea_UnaryExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _2188586ea_UnaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_StructArgExprModel {
	jule::Ptr<_23461aa35_FieldIns> _field_field{jule::Ptr<_23461aa35_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_2188586ea_StructArgExprModel(jule::Ptr<_23461aa35_FieldIns> __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_2188586ea_StructArgExprModel(void) = default;

	bool operator==(const _2188586ea_StructArgExprModel &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_StructArgExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_StructLitExprModel {
	jule::Ptr<_23461aa35_StructIns> _field_strct{jule::Ptr<_23461aa35_StructIns>()};
	jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>> _field_args{jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>>()};


	_2188586ea_StructLitExprModel(jule::Ptr<_23461aa35_StructIns> __param_strct, jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>> __param_args): _field_strct(__param_strct), _field_args(__param_args) {}

	

	_2188586ea_StructLitExprModel(void) = default;

	bool operator==(const _2188586ea_StructLitExprModel &_Src) const {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _2188586ea_StructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_AllocStructLitExprModel {
	jule::Ptr<_2188586ea_StructLitExprModel> _field_lit{jule::Ptr<_2188586ea_StructLitExprModel>()};


	_2188586ea_AllocStructLitExprModel(jule::Ptr<_2188586ea_StructLitExprModel> __param_lit): _field_lit(__param_lit) {}

	

	_2188586ea_AllocStructLitExprModel(void) = default;

	bool operator==(const _2188586ea_AllocStructLitExprModel &_Src) const {
		return 
			this->_field_lit == _Src._field_lit;
	}

	bool operator!=(const _2188586ea_AllocStructLitExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_CastingExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_200d010d9_TypeKind> _field_expr_kind{jule::Ptr<_200d010d9_TypeKind>()};


	_2188586ea_CastingExprModel(jule::Any __param_expr, jule::Ptr<_200d010d9_TypeKind> __param_kind, jule::Ptr<_200d010d9_TypeKind> __param_expr_kind): _field_expr(__param_expr), _field_kind(__param_kind), _field_expr_kind(__param_expr_kind) {}

	

	_2188586ea_CastingExprModel(void) = default;

	bool operator==(const _2188586ea_CastingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	bool operator!=(const _2188586ea_CastingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_FnCallExprModel {
	jule::Ptr<_2185d51ad_FnIns> _field_func{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_2188586ea_FnCallExprModel(jule::Ptr<_2185d51ad_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args): _field_func(__param_func), _field_is_co(__param_is_co), _field_expr(__param_expr), _field_args(__param_args) {}

	

	_2188586ea_FnCallExprModel(void) = default;

	bool operator==(const _2188586ea_FnCallExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _2188586ea_FnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_SliceExprModel {
	jule::Ptr<_200d010d9_TypeKind> _field_elem_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_2188586ea_SliceExprModel(jule::Ptr<_200d010d9_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems): _field_elem_kind(__param_elem_kind), _field_elems(__param_elems) {}

	

	_2188586ea_SliceExprModel(void) = default;

	bool operator==(const _2188586ea_SliceExprModel &_Src) const {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	bool operator!=(const _2188586ea_SliceExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_IndexigExprModel {
	jule::Ptr<_218751758_Data> _field_expr{jule::Ptr<_218751758_Data>()};
	jule::Ptr<_218751758_Data> _field_index{jule::Ptr<_218751758_Data>()};


	_2188586ea_IndexigExprModel(jule::Ptr<_218751758_Data> __param_expr, jule::Ptr<_218751758_Data> __param_index): _field_expr(__param_expr), _field_index(__param_index) {}

	

	_2188586ea_IndexigExprModel(void) = default;

	bool operator==(const _2188586ea_IndexigExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	bool operator!=(const _2188586ea_IndexigExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_AnonFnExprModel {
	jule::Ptr<_2185d51ad_FnIns> _field_func{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_2188586ea_AnonFnExprModel(jule::Ptr<_2185d51ad_FnIns> __param_func, jule::Bool __param_global): _field_func(__param_func), _field_global(__param_global) {}

	

	_2188586ea_AnonFnExprModel(void) = default;

	bool operator==(const _2188586ea_AnonFnExprModel &_Src) const {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	bool operator!=(const _2188586ea_AnonFnExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_KeyValPairExprModel {
	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_2188586ea_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val): _field_key(__param_key), _field_val(__param_val) {}

	

	_2188586ea_KeyValPairExprModel(void) = default;

	bool operator==(const _2188586ea_KeyValPairExprModel &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	bool operator!=(const _2188586ea_KeyValPairExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_MapExprModel {
	jule::Ptr<_200d010d9_TypeKind> _field_key_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_200d010d9_TypeKind> _field_val_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Slice<jule::Ptr<_2188586ea_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ptr<_2188586ea_KeyValPairExprModel>>()};


	_2188586ea_MapExprModel(jule::Ptr<_200d010d9_TypeKind> __param_key_kind, jule::Ptr<_200d010d9_TypeKind> __param_val_kind, jule::Slice<jule::Ptr<_2188586ea_KeyValPairExprModel>> __param_entries): _field_key_kind(__param_key_kind), _field_val_kind(__param_val_kind), _field_entries(__param_entries) {}

	

	_2188586ea_MapExprModel(void) = default;

	bool operator==(const _2188586ea_MapExprModel &_Src) const {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	bool operator!=(const _2188586ea_MapExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_SlicingExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_2188586ea_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right): _field_expr(__param_expr), _field_left(__param_left), _field_right(__param_right) {}

	

	_2188586ea_SlicingExprModel(void) = default;

	bool operator==(const _2188586ea_SlicingExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	bool operator!=(const _2188586ea_SlicingExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_TraitSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_2188586ea_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_2188586ea_TraitSubIdentExprModel(void) = default;

	bool operator==(const _2188586ea_TraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2188586ea_TraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_StructSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Ptr<_200d010d9_TypeKind> _field_expr_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_2185d51ad_FnIns> _field_method{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Ptr<_23461aa35_FieldIns> _field_field{jule::Ptr<_23461aa35_FieldIns>()};


	_2188586ea_StructSubIdentExprModel(jule::Any __param_expr, jule::Ptr<_200d010d9_TypeKind> __param_expr_kind, jule::Ptr<_2185d51ad_FnIns> __param_method, jule::Ptr<_23461aa35_FieldIns> __param_field): _field_expr(__param_expr), _field_expr_kind(__param_expr_kind), _field_method(__param_method), _field_field(__param_field) {}

	

	_2188586ea_StructSubIdentExprModel(void) = default;

	bool operator==(const _2188586ea_StructSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	bool operator!=(const _2188586ea_StructSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_StructStaticIdentExprModel {
	jule::Ptr<_23461aa35_StructIns> _field_structure{jule::Ptr<_23461aa35_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ptr<_2185d51ad_FnIns> _field_method{jule::Ptr<_2185d51ad_FnIns>()};


	_2188586ea_StructStaticIdentExprModel(jule::Ptr<_23461aa35_StructIns> __param_structure, jule::Any __param_expr, jule::Ptr<_2185d51ad_FnIns> __param_method): _field_structure(__param_structure), _field_expr(__param_expr), _field_method(__param_method) {}

	

	_2188586ea_StructStaticIdentExprModel(void) = default;

	bool operator==(const _2188586ea_StructStaticIdentExprModel &_Src) const {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	bool operator!=(const _2188586ea_StructStaticIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_ArrayExprModel {
	jule::Ptr<_200d010d9_Arr> _field_kind{jule::Ptr<_200d010d9_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_2188586ea_ArrayExprModel(jule::Ptr<_200d010d9_Arr> __param_kind, jule::Slice<jule::Any> __param_elems): _field_kind(__param_kind), _field_elems(__param_elems) {}

	

	_2188586ea_ArrayExprModel(void) = default;

	bool operator==(const _2188586ea_ArrayExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	bool operator!=(const _2188586ea_ArrayExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_CommonIdentExprModel {
	jule::Str _field_ident{jule::Str()};


	_2188586ea_CommonIdentExprModel(jule::Str __param_ident): _field_ident(__param_ident) {}

	

	_2188586ea_CommonIdentExprModel(void) = default;

	bool operator==(const _2188586ea_CommonIdentExprModel &_Src) const {
		return 
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2188586ea_CommonIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_CommonSubIdentExprModel {
	jule::Ptr<_200d010d9_TypeKind> _field_expr_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_2188586ea_CommonSubIdentExprModel(jule::Ptr<_200d010d9_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident): _field_expr_kind(__param_expr_kind), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_2188586ea_CommonSubIdentExprModel(void) = default;

	bool operator==(const _2188586ea_CommonSubIdentExprModel &_Src) const {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2188586ea_CommonSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_TupleExprModel {
	jule::Slice<jule::Ptr<_218751758_Data>> _field_datas{jule::Slice<jule::Ptr<_218751758_Data>>()};


	_2188586ea_TupleExprModel(jule::Slice<jule::Ptr<_218751758_Data>> __param_datas): _field_datas(__param_datas) {}

	

	_2188586ea_TupleExprModel(void) = default;

	bool operator==(const _2188586ea_TupleExprModel &_Src) const {
		return 
			this->_field_datas == _Src._field_datas;
	}

	bool operator!=(const _2188586ea_TupleExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinOutCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_BuiltinOutCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_BuiltinOutCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinOutCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_BuiltinOutCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinOutlnCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_BuiltinOutlnCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_BuiltinOutlnCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinOutlnCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_BuiltinOutlnCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinCloneCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_BuiltinCloneCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_BuiltinCloneCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinCloneCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_BuiltinCloneCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinNewCallExprModel {
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_2188586ea_BuiltinNewCallExprModel(jule::Ptr<_200d010d9_TypeKind> __param_kind, jule::Any __param_init): _field_kind(__param_kind), _field_init(__param_init) {}

	

	_2188586ea_BuiltinNewCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinNewCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	bool operator!=(const _2188586ea_BuiltinNewCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinRealCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_BuiltinRealCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_BuiltinRealCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinRealCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_BuiltinRealCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinDropCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_BuiltinDropCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_BuiltinDropCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinDropCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_BuiltinDropCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinPanicCallExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_BuiltinPanicCallExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_BuiltinPanicCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinPanicCallExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_BuiltinPanicCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinMakeCallExprModel {
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_2188586ea_BuiltinMakeCallExprModel(jule::Ptr<_200d010d9_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap): _field_kind(__param_kind), _field_len(__param_len), _field_cap(__param_cap) {}

	

	_2188586ea_BuiltinMakeCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinMakeCallExprModel &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	bool operator!=(const _2188586ea_BuiltinMakeCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinAppendCallExprModel {
	jule::Any _field_dest{jule::Any()};
	jule::Any _field_elements{jule::Any()};


	_2188586ea_BuiltinAppendCallExprModel(jule::Any __param_dest, jule::Any __param_elements): _field_dest(__param_dest), _field_elements(__param_elements) {}

	

	_2188586ea_BuiltinAppendCallExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinAppendCallExprModel &_Src) const {
		return 
			this->_field_dest == _Src._field_dest &&
			this->_field_elements == _Src._field_elements;
	}

	bool operator!=(const _2188586ea_BuiltinAppendCallExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_BuiltinErrorTraitSubIdentExprModel {
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_2188586ea_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident): _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_2188586ea_BuiltinErrorTraitSubIdentExprModel(void) = default;

	bool operator==(const _2188586ea_BuiltinErrorTraitSubIdentExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2188586ea_BuiltinErrorTraitSubIdentExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_SizeofExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_SizeofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_SizeofExprModel(void) = default;

	bool operator==(const _2188586ea_SizeofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_SizeofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_AlignofExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_AlignofExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_AlignofExprModel(void) = default;

	bool operator==(const _2188586ea_AlignofExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_AlignofExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_RuneExprModel {
	jule::I32 _field_code{jule::I32()};


	_2188586ea_RuneExprModel(jule::I32 __param_code): _field_code(__param_code) {}

	

	_2188586ea_RuneExprModel(void) = default;

	bool operator==(const _2188586ea_RuneExprModel &_Src) const {
		return 
			this->_field_code == _Src._field_code;
	}

	bool operator!=(const _2188586ea_RuneExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_IntegratedToStrExprModel {
	jule::Any _field_expr{jule::Any()};


	_2188586ea_IntegratedToStrExprModel(jule::Any __param_expr): _field_expr(__param_expr) {}

	

	_2188586ea_IntegratedToStrExprModel(void) = default;

	bool operator==(const _2188586ea_IntegratedToStrExprModel &_Src) const {
		return 
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _2188586ea_IntegratedToStrExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _2188586ea_TernaryExprModel {
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_2188586ea_TernaryExprModel(jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_2188586ea_TernaryExprModel(void) = default;

	bool operator==(const _2188586ea_TernaryExprModel &_Src) const {
		return 
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	bool operator!=(const _2188586ea_TernaryExprModel &_Src) const { return !this->operator==(_Src); }
};


struct _218848bd5_Package: public _1d6734eee_Lookup {
	jule::Slice<jule::Ptr<_218737b7e_SymbolTable>> _field_files{jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>()};


	_218848bd5_Package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>> __param_files): _field_files(__param_files) {}

	

	_218848bd5_Package(void) = default;

	jule::Ptr<_218848bd5_ImportInfo> _method_find_package(jule::Str);


	jule::Ptr<_218848bd5_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>);


	jule::Ptr<_200c58948_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ptr<_200d010d9_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ptr<_23461aa35_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ptr<_2185d51ad_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ptr<_2185da36c_Trait> _method_find_trait(jule::Str);


	jule::Ptr<_2186be3da_Enum> _method_find_enum(jule::Str);


	bool operator==(const _218848bd5_Package &_Src) const {
		return 
			this->_field_files == _Src._field_files;
	}

	bool operator!=(const _218848bd5_Package &_Src) const { return !this->operator==(_Src); }
};


struct _1eec2c632_Sema: public _1d6734eee_Lookup {
	jule::Ptr<_1eec2c632_Sema> self{};

	jule::Slice<_231e4202e_Log> _field_errors{jule::Slice<_231e4202e_Log>()};
	jule::Slice<jule::Ptr<_218737b7e_SymbolTable>> _field_files{jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>()};
	jule::Ptr<_218737b7e_SymbolTable> _field_file{jule::Ptr<_218737b7e_SymbolTable>()};
	jule::Int _field_flags{0LL};


	_1eec2c632_Sema(jule::Slice<_231e4202e_Log> __param_errors, jule::Slice<jule::Ptr<_218737b7e_SymbolTable>> __param_files, jule::Ptr<_218737b7e_SymbolTable> __param_file, jule::Int __param_flags): _field_errors(__param_errors), _field_files(__param_files), _field_file(__param_file), _field_flags(__param_flags) {
		this->self = jule::Ptr<_1eec2c632_Sema>::make(this, nullptr);

	}

	~_1eec2c632_Sema(void) { this->self.ref = nullptr; }

	_1eec2c632_Sema(void) { this->self = jule::Ptr<_1eec2c632_Sema>::make(this, nullptr); }

	jule::Ptr<_218848bd5_ImportInfo> _method_find_package(jule::Str);


	jule::Ptr<_218848bd5_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>);


	jule::Ptr<_200c58948_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ptr<_200d010d9_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ptr<_23461aa35_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ptr<_2185d51ad_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ptr<_2185da36c_Trait> _method_find_trait(jule::Str);


	jule::Ptr<_2186be3da_Enum> _method_find_enum(jule::Str);


	jule::Bool _method_is_flag(jule::Int);


	void _method_set_current_file(jule::Ptr<_218737b7e_SymbolTable>);


	void _method_push_err(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_is_accessible_define(jule::Bool,_2336ea198_Token);


	jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_2336ea198_Token);


	jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	jule::Any _method_get_import_def(jule::Str,jule::Ptr<_218848bd5_ImportInfo>&);


	void _method_check_import_selections(jule::Ptr<_218848bd5_ImportInfo>&);


	jule::Bool _method_is_use_alias_duplication(jule::Ptr<_218848bd5_ImportInfo>&);


	jule::Bool _method_check_import(jule::Ptr<_218848bd5_ImportInfo>&);


	void _method_check_imports(void);


	void _method_impl_file_impls(void);


	void _method_impl_impls(void);


	void _method_check_enums(void);


	jule::Bool _method_check_type_with_refers(jule::Ptr<_200d010d9_TypeSymbol>&,jule::Trait<_1d6734eee_Lookup>,jule::Ptr<_200d010d9_Referencer>);


	jule::Bool _method_check_type(jule::Ptr<_200d010d9_TypeSymbol>&,jule::Trait<_1d6734eee_Lookup>);


	jule::Ptr<_200d010d9_TypeKind> _method_build_type_with_generics(jule::Ptr<_233464770_TypeDecl>&,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>);


	jule::Ptr<_200d010d9_TypeKind> _method_build_type(jule::Ptr<_233464770_TypeDecl>&);


	jule::Ptr<_218751758_Eval> _method_evalpd(jule::Trait<_1d6734eee_Lookup>,jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_200c58948_Var>);


	jule::Ptr<_218751758_Eval> _method_evalp(jule::Trait<_1d6734eee_Lookup>,jule::Ptr<_200d010d9_TypeKind>);


	jule::Ptr<_218751758_Eval> _method_eval(jule::Trait<_1d6734eee_Lookup>);


	void _method_check_assign_type(jule::Bool,jule::Ptr<_200d010d9_TypeKind>&,jule::Ptr<_218751758_Data>&,_2336ea198_Token);


	jule::Bool _method_check_type_compatibility(jule::Ptr<_200d010d9_TypeKind>&,jule::Ptr<_200d010d9_TypeKind>&,_2336ea198_Token&);


	jule::Ptr<_200d010d9_TypeKind> _method_build_non_generic_type_kind(jule::Ptr<_233464770_TypeDecl>&,jule::Slice<jule::Ptr<_233464770_GenericDecl>>&);


	void _method_build_fn_non_generic_type_kinds(jule::Ptr<_2185d51ad_FnIns>&);


	jule::Ptr<_2185d51ad_FnIns> _method_get_trait_check_fn_kind(jule::Ptr<_2185d51ad_Fn>&);


	jule::Bool _method_reload_fn_ins_types(jule::Ptr<_2185d51ad_FnIns>&);


	void _method_check_ref_validity_for_init_expr(jule::Bool,jule::Ptr<_218751758_Data>&,_2336ea198_Token&);


	void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ptr<_200d010d9_TypeKind>&,jule::Ptr<_218751758_Data>&,_2336ea198_Token&);


	jule::Bool _method_check_type_alias_decl_kind(jule::Ptr<_200d010d9_TypeAlias>&,jule::Trait<_1d6734eee_Lookup>);


	void _method_check_type_alias_decl(jule::Ptr<_200d010d9_TypeAlias>&,jule::Trait<_1d6734eee_Lookup>);


	void _method_check_type_alias_decl_dup(jule::Ptr<_200d010d9_TypeAlias>&);


	jule::Bool _method_check_type_alias_decls(void);


	void _method_check_enum_items_dup(jule::Ptr<_2186be3da_Enum>);


	void _method_check_enum_items_str(jule::Ptr<_2186be3da_Enum>&);


	void _method_check_enum_items_int(jule::Ptr<_2186be3da_Enum>&);


	void _method_check_enum_decl(jule::Ptr<_2186be3da_Enum>&);


	jule::Bool _method_check_enum_decls(void);


	jule::Bool _method_check_decl_generics(jule::Slice<jule::Ptr<_233464770_GenericDecl>>&);


	jule::Bool _method_check_fn_decl_params_dup(jule::Ptr<_2185d51ad_Fn>&);


	jule::Bool _method_check_fn_decl_result_dup(jule::Ptr<_2185d51ad_Fn>&);


	jule::Bool _method_check_fn_decl_types(jule::Ptr<_2185d51ad_Fn>&);


	jule::Bool _method_check_fn_decl_prototype(jule::Ptr<_2185d51ad_Fn>&);


	void _method_check_trait_decl_method(jule::Ptr<_2185d51ad_Fn>&);


	void _method_check_trait_decl_methods(jule::Ptr<_2185da36c_Trait>&);


	void _method_check_trait_decl(jule::Ptr<_2185da36c_Trait>&);


	jule::Bool _method_check_trait_decls(void);


	jule::Bool _method_check_trait_impl_methods(jule::Ptr<_2185da36c_Trait>&,jule::Ptr<_2185e0064_Impl>&);


	jule::Bool _method_impl_to_struct(jule::Ptr<_23461aa35_Struct>&,jule::Ptr<_2185e0064_Impl>&);


	void _method_impl_trait(jule::Ptr<_2185e0064_Impl>&);


	void _method_impl_struct(jule::Ptr<_2185e0064_Impl>&);


	void _method_impl_impl(jule::Ptr<_2185e0064_Impl>&);


	void _method_check_var_decl(jule::Ptr<_200c58948_Var>&,jule::Trait<_1d6734eee_Lookup>);


	void _method_check_global_var_decl(jule::Ptr<_200c58948_Var>&);


	jule::Bool _method_check_global_decls(void);


	jule::Bool _method_check_struct_trait_impl(jule::Ptr<_23461aa35_Struct>&,jule::Ptr<_2185da36c_Trait>&);


	jule::Bool _method_check_struct_impls(jule::Ptr<_23461aa35_Struct>&);


	jule::Bool _method_check_struct_fields(jule::Ptr<_23461aa35_Struct>&);


	jule::Bool _method_check_struct_decl_methods(jule::Ptr<_23461aa35_Struct>&);


	void _method_check_struct_decl(jule::Ptr<_23461aa35_Struct>&);


	jule::Bool _method_check_struct_decls(void);


	void _method_check_fn_decl(jule::Ptr<_2185d51ad_Fn>&);


	jule::Bool _method_check_fn_decls(void);


	jule::Bool _method_check_directive_pass(_21862cb1d_Pass&);


	jule::Bool _method_check_passes(void);


	void _method_push_cycle_error(jule::Ptr<_23461aa35_Struct>&,jule::Ptr<_23461aa35_Struct>&,jule::Str&);


	jule::Bool _method_check_cross_cycle(jule::Ptr<_23461aa35_Struct>&,jule::Ptr<_23461aa35_Struct>&,jule::Str&);


	jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ptr<_23461aa35_Struct>&,jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_check_struct_ins_derive_clone(jule::Ptr<_23461aa35_StructIns>);


	jule::Bool _method_check_struct_derive_clone(jule::Ptr<_23461aa35_Struct>&);


	jule::Bool _method_check_file_derives(void);


	void _method_check_package_derives(void);


	void _method_check_package_decls(void);


	void _method_check_data_for_type_inference(jule::Ptr<_218751758_Data>&,_2336ea198_Token&);


	void _method_check_var(jule::Ptr<_200c58948_Var>&);


	void _method_check_type_var(jule::Ptr<_200c58948_Var>&,jule::Trait<_1d6734eee_Lookup>);


	void _method_check_global_types(void);


	void _method_check_type_method(jule::Ptr<_23461aa35_StructIns>&,jule::Ptr<_2185d51ad_Fn>&);


	void _method_check_type_struct(jule::Ptr<_23461aa35_Struct>&);


	void _method_check_struct_types(void);


	void _method_check_rets(jule::Ptr<_2185d51ad_FnIns>&);


	void _method_check_fn_ins_sc(jule::Ptr<_2185d51ad_FnIns>&,jule::Ptr<_2186ce186_ScopeChecker>&);


	void _method_check_fn_ins(jule::Ptr<_2185d51ad_FnIns>&);


	void _method_check_type_fn(jule::Ptr<_2185d51ad_Fn>&);


	void _method_precheck_type_fn(jule::Ptr<_2185d51ad_Fn>&);


	jule::Bool _method_precheck_fn_types(void);


	jule::Bool _method_check_fn_types(void);


	void _method_check_package_types(void);


	void _method_set_file_sema_fields(void);


	void _method_set_sema_fields(void);


	void _method_check(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&);


	bool operator==(const _1eec2c632_Sema &_Src) const {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file &&
			this->_field_flags == _Src._field_flags;
	}

	bool operator!=(const _1eec2c632_Sema &_Src) const { return !this->operator==(_Src); }
};


struct _200c58948_IterRelation {
	jule::Ptr<_200c58948_Var> _field_range{jule::Ptr<_200c58948_Var>()};


	_200c58948_IterRelation(jule::Ptr<_200c58948_Var> __param_range): _field_range(__param_range) {}

	

	_200c58948_IterRelation(void) = default;

	bool operator==(const _200c58948_IterRelation &_Src) const {
		return 
			this->_field_range == _Src._field_range;
	}

	bool operator!=(const _200c58948_IterRelation &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_RangeChecker {
	jule::Ptr<_2186ce186_ScopeChecker> _field_sc{jule::Ptr<_2186ce186_ScopeChecker>()};
	jule::Ptr<_233464770_RangeKind> _field_rang{jule::Ptr<_233464770_RangeKind>()};
	jule::Ptr<_2186ce186_RangeIter> _field_kind{jule::Ptr<_2186ce186_RangeIter>()};
	jule::Ptr<_218751758_Data> _field_d{jule::Ptr<_218751758_Data>()};


	_200c5bcc0_RangeChecker(jule::Ptr<_2186ce186_ScopeChecker> __param_sc, jule::Ptr<_233464770_RangeKind> __param_rang, jule::Ptr<_2186ce186_RangeIter> __param_kind, jule::Ptr<_218751758_Data> __param_d): _field_sc(__param_sc), _field_rang(__param_rang), _field_kind(__param_kind), _field_d(__param_d) {}

	

	_200c5bcc0_RangeChecker(void) = default;

	jule::Ptr<_200c58948_Var> _method_build_var(jule::Ptr<_233464770_VarDecl>&);


	void _method_set_size_key(void);


	void _method_check_range_expr_validity(jule::Ptr<_218751758_Data>&,jule::Ptr<_200c58948_Var>&,jule::Ptr<_200d010d9_TypeKind>&);


	void _method_check_slice(void);


	void _method_check_array(void);


	void _method_check_map_key_a(void);


	void _method_check_map_key_b(void);


	void _method_check_map(void);


	void _method_check_str(void);


	jule::Bool _method_check(void);


	bool operator==(const _200c5bcc0_RangeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	bool operator!=(const _200c5bcc0_RangeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _218737b7e_SymbolTable: public _1d6734eee_Lookup {
	jule::Ptr<_2334d2d3d_File> _field_file{jule::Ptr<_2334d2d3d_File>()};
	jule::Slice<_21862cb1d_Pass> _field_passes{jule::Slice<_21862cb1d_Pass>()};
	jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> _field_imports{jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>()};
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_vars{jule::Slice<jule::Ptr<_200c58948_Var>>()};
	jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _field_type_aliases{jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>()};
	jule::Slice<jule::Ptr<_23461aa35_Struct>> _field_structs{jule::Slice<jule::Ptr<_23461aa35_Struct>>()};
	jule::Slice<jule::Ptr<_2185d51ad_Fn>> _field_funcs{jule::Slice<jule::Ptr<_2185d51ad_Fn>>()};
	jule::Slice<jule::Ptr<_2185da36c_Trait>> _field_traits{jule::Slice<jule::Ptr<_2185da36c_Trait>>()};
	jule::Slice<jule::Ptr<_2186be3da_Enum>> _field_enums{jule::Slice<jule::Ptr<_2186be3da_Enum>>()};
	jule::Slice<jule::Ptr<_2185e0064_Impl>> _field_impls{jule::Slice<jule::Ptr<_2185e0064_Impl>>()};


	_218737b7e_SymbolTable(jule::Ptr<_2334d2d3d_File> __param_file, jule::Slice<_21862cb1d_Pass> __param_passes, jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> __param_imports, jule::Slice<jule::Ptr<_200c58948_Var>> __param_vars, jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> __param_type_aliases, jule::Slice<jule::Ptr<_23461aa35_Struct>> __param_structs, jule::Slice<jule::Ptr<_2185d51ad_Fn>> __param_funcs, jule::Slice<jule::Ptr<_2185da36c_Trait>> __param_traits, jule::Slice<jule::Ptr<_2186be3da_Enum>> __param_enums, jule::Slice<jule::Ptr<_2185e0064_Impl>> __param_impls): _field_file(__param_file), _field_passes(__param_passes), _field_imports(__param_imports), _field_vars(__param_vars), _field_type_aliases(__param_type_aliases), _field_structs(__param_structs), _field_funcs(__param_funcs), _field_traits(__param_traits), _field_enums(__param_enums), _field_impls(__param_impls) {}

	

	_218737b7e_SymbolTable(void) = default;

	jule::Ptr<_218848bd5_ImportInfo> _method_find_package(jule::Str);


	jule::Ptr<_218848bd5_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>);


	jule::Ptr<_200c58948_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ptr<_200d010d9_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ptr<_23461aa35_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ptr<_2185d51ad_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ptr<_2185da36c_Trait> _method_find_trait(jule::Str);


	jule::Ptr<_2186be3da_Enum> _method_find_enum(jule::Str);


	jule::Ptr<_200c58948_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	jule::Ptr<_200d010d9_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	bool operator==(const _218737b7e_SymbolTable &_Src) const {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	bool operator!=(const _218737b7e_SymbolTable &_Src) const { return !this->operator==(_Src); }
};


struct _218751758_Data {
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_200d010d9_TypeKind> _field_cast_kind{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ptr<_1d68bd462_Const> _field_constant{jule::Ptr<_1d68bd462_Const>()};


	_218751758_Data(jule::Ptr<_200d010d9_TypeKind> __param_kind, jule::Ptr<_200d010d9_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ptr<_1d68bd462_Const> __param_constant): _field_kind(__param_kind), _field_cast_kind(__param_cast_kind), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_lvalue(__param_lvalue), _field_variadiced(__param_variadiced), _field_is_rune(__param_is_rune), _field_model(__param_model), _field_decl(__param_decl), _field_constant(__param_constant) {}

	

	_218751758_Data(void) = default;

	jule::Bool _method_is_nil(void);


	jule::Bool _method_is_void(void);


	jule::Bool _method_is_const(void);


	bool operator==(const _218751758_Data &_Src) const {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	bool operator!=(const _218751758_Data &_Src) const { return !this->operator==(_Src); }
};


struct _218751758_Value {
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};
	jule::Ptr<_218751758_Data> _field_data{jule::Ptr<_218751758_Data>()};


	_218751758_Value(jule::Ptr<_233464770_Expr> __param_expr, jule::Ptr<_218751758_Data> __param_data): _field_expr(__param_expr), _field_data(__param_data) {}

	

	_218751758_Value(void) = default;

	bool operator==(const _218751758_Value &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	bool operator!=(const _218751758_Value &_Src) const { return !this->operator==(_Src); }
};


struct _218751758_Eval {
	jule::Ptr<_218751758_Eval> self{};

	jule::Ptr<_1eec2c632_Sema> _field_s{jule::Ptr<_1eec2c632_Sema>()};
	jule::Trait<_1d6734eee_Lookup> _field_lookup{jule::Trait<_1d6734eee_Lookup>()};
	jule::Ptr<_200d010d9_TypeKind> _field_prefix{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_immutable{jule::Bool()};
	jule::Ptr<_200c58948_Var> _field_owner{jule::Ptr<_200c58948_Var>()};


	_218751758_Eval(jule::Ptr<_1eec2c632_Sema> __param_s, jule::Trait<_1d6734eee_Lookup> __param_lookup, jule::Ptr<_200d010d9_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Bool __param_immutable, jule::Ptr<_200c58948_Var> __param_owner): _field_s(__param_s), _field_lookup(__param_lookup), _field_prefix(__param_prefix), _field_unsafety(__param_unsafety), _field_immutable(__param_immutable), _field_owner(__param_owner) {
		this->self = jule::Ptr<_218751758_Eval>::make(this, nullptr);

	}

	~_218751758_Eval(void) { this->self.ref = nullptr; }

	_218751758_Eval(void) { this->self = jule::Ptr<_218751758_Eval>::make(this, nullptr); }

	void _method_push_err(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_is_unsafe(void);


	jule::Bool _method_is_global(void);


	jule::Ptr<_218751758_Data> _method_lit_nil(void);


	jule::Ptr<_218751758_Data> _method_lit_str(jule::Ptr<_233464770_LitExpr>&);


	jule::Ptr<_218751758_Data> _method_lit_bool(jule::Ptr<_233464770_LitExpr>&);


	jule::Ptr<_218751758_Data> _method_lit_rune(jule::Ptr<_233464770_LitExpr>&);


	jule::Ptr<_218751758_Data> _method_lit_float(jule::Ptr<_233464770_LitExpr>&);


	jule::Ptr<_218751758_Data> _method_lit_int(jule::Ptr<_233464770_LitExpr>&);


	jule::Ptr<_218751758_Data> _method_lit_num(jule::Ptr<_233464770_LitExpr>&);


	jule::Ptr<_218751758_Data> _method_eval_lit(jule::Ptr<_233464770_LitExpr>);


	jule::Any _method_find_builtins(jule::Str);


	jule::Any _method_get_def(jule::Str,jule::Bool);


	void _method_push_reference(jule::Ptr<_21862cb1d_ReferenceStack>&);


	void _method_push_reference_to_fn(jule::Ptr<_2185d51ad_FnIns>&);


	void _method_push_reference_to_var(jule::Ptr<_200c58948_Var>&);


	void _method_push_reference_to_struct(jule::Ptr<_23461aa35_StructIns>&);


	jule::Ptr<_218751758_Data> _method___eval_enum(jule::Ptr<_2186be3da_Enum>);


	jule::Ptr<_218751758_Data> _method_eval_enum(jule::Ptr<_2186be3da_Enum>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method___eval_struct(jule::Ptr<_23461aa35_StructIns>);


	jule::Ptr<_218751758_Data> _method_eval_struct(jule::Ptr<_23461aa35_StructIns>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_fn_ins(jule::Ptr<_2185d51ad_FnIns>);


	jule::Ptr<_218751758_Data> _method_eval_fn(jule::Ptr<_2185d51ad_Fn>,_2336ea198_Token);


	void _method_push_illegal_cycle_error(jule::Ptr<_200c58948_Var>&,jule::Ptr<_200c58948_Var>&,jule::Str&);


	jule::Bool _method_check_cross_cycle(jule::Ptr<_200c58948_Var>&,jule::Str&);


	jule::Bool _method_check_illegal_cycles(jule::Ptr<_200c58948_Var>&,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_var(jule::Ptr<_200c58948_Var>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_type_alias(jule::Ptr<_200d010d9_TypeAlias>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_def(jule::Any,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_ident(jule::Ptr<_233464770_IdentExpr>);


	void _method_eval_unary_minus(jule::Ptr<_218751758_Data>&);


	void _method_eval_unary_plus(jule::Ptr<_218751758_Data>&);


	void _method_eval_unary_caret(jule::Ptr<_218751758_Data>&);


	void _method_eval_unary_excl(jule::Ptr<_218751758_Data>&);


	void _method_eval_unary_star(jule::Ptr<_218751758_Data>&,_2336ea198_Token&);


	void _method_eval_unary_amper(jule::Ptr<_218751758_Data>&);


	void _method_eval_unary_type_decl(jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_UnaryExpr>&);


	jule::Ptr<_218751758_Data> _method_eval_unary(jule::Ptr<_233464770_UnaryExpr>);


	jule::Ptr<_218751758_Data> _method_eval_variadic(jule::Ptr<_233464770_VariadicExpr>);


	jule::Ptr<_218751758_Data> _method_eval_unsafe(jule::Ptr<_233464770_UnsafeExpr>);


	jule::Ptr<_218751758_Data> _method_eval_arr(jule::Ptr<_233464770_SliceExpr>);


	jule::Ptr<_218751758_Data> _method_eval_exp_slc(jule::Ptr<_233464770_SliceExpr>,jule::Ptr<_200d010d9_TypeKind>);


	jule::Ptr<_218751758_Data> _method_eval_slice_expr(jule::Ptr<_233464770_SliceExpr>);


	void _method_check_integer_indexing_by_data(jule::Ptr<_218751758_Data>&,_2336ea198_Token);


	void _method_indexing_ptr(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_IndexingExpr>&);


	void _method_indexing_arr(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_IndexingExpr>&);


	void _method_indexing_slc(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_IndexingExpr>&);


	void _method_indexing_map(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_IndexingExpr>&);


	void _method_indexing_str(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_IndexingExpr>&);


	void _method_to_indexing(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_IndexingExpr>&);


	jule::Ptr<_218751758_Data> _method_eval_ident_decl_from_indexing(jule::Ptr<_233464770_IndexingExpr>&);


	jule::Ptr<_218751758_Data> _method_eval_indexing(jule::Ptr<_233464770_IndexingExpr>);


	std::tuple<jule::Ptr<_218751758_Data>,jule::Ptr<_218751758_Data>> _method_eval_slicing_exprs(jule::Ptr<_233464770_SlicingExpr>&);


	void _method_slicing_arr(jule::Ptr<_218751758_Data>&);


	void _method_slicing_slc(jule::Ptr<_218751758_Data>&);


	void _method_slicing_str(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&);


	void _method_check_slicing(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_233464770_SlicingExpr>&);


	jule::Ptr<_218751758_Data> _method_eval_slicing(jule::Ptr<_233464770_SlicingExpr>);


	void _method_cast_ptr(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_struct(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_ref(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_slc(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_str(jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_int(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_num(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_prim(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	void _method_cast_constant(jule::Ptr<_200d010d9_TypeKind>&,jule::Ptr<_218751758_Data>&);


	jule::Ptr<_218751758_Data> _method_eval_cast_by_type_n_data(jule::Ptr<_200d010d9_TypeKind>,jule::Ptr<_218751758_Data>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_cast(jule::Ptr<_233464770_CastExpr>);


	jule::Ptr<_218751758_Data> _method_eval_ns_selection(jule::Ptr<_233464770_NsSelectionExpr>);


	jule::Ptr<_218751758_Data> _method_eval_struct_lit_explicit(jule::Ptr<_23461aa35_StructIns>,jule::Slice<jule::Any>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_struct_lit(jule::Ptr<_233464770_StructLit>);


	jule::Ptr<_218751758_Data> _method_eval_type(jule::Ptr<_233464770_TypeDecl>);


	void _method_call_type_fn(jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);


	std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ptr<_2185d51ad_FnIns>,jule::Ptr<_233464770_FnCallExpr>);


	void _method_call_builtin_fn(jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);


	void _method_check_fn_of_concurrent_call(jule::Ptr<_2185d51ad_FnIns>&,_2336ea198_Token);


	void _method_call_fn(jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);


	jule::Ptr<_218751758_Data> _method_eval_fn_call(jule::Ptr<_233464770_FnCallExpr>);


	jule::Ptr<_218751758_Data> _method_eval_enum_static(jule::Ptr<_2186be3da_Enum>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_struct_static(jule::Ptr<_23461aa35_StructIns>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_trait_sub_ident(jule::Ptr<_218751758_Data>,jule::Ptr<_2185da36c_Trait>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_struct_sub_ident(jule::Ptr<_218751758_Data>,jule::Ptr<_23461aa35_StructIns>,jule::Ptr<_233464770_SubIdentExpr>,jule::Bool);


	jule::Ptr<_218751758_Data> _method_eval_slice_sub_ident(jule::Ptr<_218751758_Data>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_array_sub_ident(jule::Ptr<_218751758_Data>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_map_sub_ident(jule::Ptr<_218751758_Data>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_str_sub_ident(jule::Ptr<_218751758_Data>,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_int_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_uint_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_i8_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_i16_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_i32_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_i64_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_u8_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_u16_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_u32_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_u64_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_f32_type_tatic(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_f64_type_static(_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_prim_static(jule::Str,_2336ea198_Token);


	jule::Ptr<_218751758_Data> _method_eval_type_static(jule::Ptr<_218751758_Data>,jule::Ptr<_233464770_SubIdentExpr>);


	jule::Ptr<_218751758_Data> _method_eval_obj_sub_ident(jule::Ptr<_218751758_Data>,jule::Ptr<_233464770_SubIdentExpr>);


	jule::Ptr<_218751758_Data> _method_eval_sub_ident(jule::Ptr<_233464770_SubIdentExpr>);


	jule::Ptr<_218751758_Data> _method_eval_tuple(jule::Ptr<_233464770_TupleExpr>);


	jule::Ptr<_218751758_Data> _method_eval_map(jule::Ptr<_200d010d9_Map>,jule::Ptr<_233464770_BraceLit>);


	jule::Ptr<_218751758_Data> _method_eval_brace_lit(jule::Ptr<_233464770_BraceLit>);


	jule::Ptr<_218751758_Data> _method_eval_anon_fn(jule::Ptr<_233464770_FnDecl>);


	jule::Ptr<_218751758_Data> _method_eval_binop(jule::Ptr<_233464770_BinopExpr>);


	jule::Ptr<_218751758_Data> _method_eval_ternary(jule::Ptr<_233464770_TernaryExpr>);


	jule::Ptr<_218751758_Data> _method_eval_expr_kind(jule::Any);


	jule::Ptr<_218751758_Data> _method_eval(jule::Ptr<_233464770_Expr>);


	jule::Ptr<_218751758_Data> _method_eval_expr(jule::Ptr<_233464770_Expr>);


	bool operator==(const _218751758_Eval &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_immutable == _Src._field_immutable &&
			this->_field_owner == _Src._field_owner;
	}

	bool operator!=(const _218751758_Eval &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_TypeKind: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_TypeKind> self{};

	jule::Str _field_cpp_ident{jule::Str()};
	jule::Bool _field_generic{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Trait<_200d010d9_Kind> _field_kind{jule::Trait<_200d010d9_Kind>()};


	_200d010d9_TypeKind(jule::Str __param_cpp_ident, jule::Bool __param_generic, jule::Bool __param_variadic, jule::Trait<_200d010d9_Kind> __param_kind): _field_cpp_ident(__param_cpp_ident), _field_generic(__param_generic), _field_variadic(__param_variadic), _field_kind(__param_kind) {
		this->self = jule::Ptr<_200d010d9_TypeKind>::make(this, nullptr);

	}

	~_200d010d9_TypeKind(void) { this->self.ref = nullptr; }

	_200d010d9_TypeKind(void) { this->self = jule::Ptr<_200d010d9_TypeKind>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Ptr<_200d010d9_TypeKind> _method_clone(void);


	jule::Bool _method_cpp_linked(void);


	jule::Bool _method_is_nil(void);


	jule::Bool _method_void(void);


	jule::Bool _method_mutable(void);


	jule::Bool _method_nil_compatible(void);


	jule::Bool _method_supports_cloning(void);


	jule::Bool _method_variadicable(void);


	jule::Ptr<_200d010d9_Prim> _method_prim(void);


	jule::Ptr<_200d010d9_Sptr> _method_sptr(void);


	jule::Ptr<_200d010d9_Ptr> _method_ptr(void);


	jule::Ptr<_2186be3da_Enum> _method_enm(void);


	jule::Ptr<_200d010d9_Arr> _method_arr(void);


	jule::Ptr<_200d010d9_Slc> _method_slc(void);


	jule::Ptr<_2185d51ad_FnIns> _method_fnc(void);


	jule::Ptr<_23461aa35_StructIns> _method_strct(void);


	jule::Ptr<_2185da36c_Trait> _method_trt(void);


	jule::Ptr<_200d010d9_Map> _method_map(void);


	jule::Ptr<_200d010d9_Tuple> _method_tup(void);


	bool operator==(const _200d010d9_TypeKind &_Src) const {
		return 
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_generic == _Src._field_generic &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _200d010d9_TypeKind &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_TypeSymbol {
	jule::Ptr<_233464770_TypeDecl> _field_decl{jule::Ptr<_233464770_TypeDecl>()};
	jule::Ptr<_200d010d9_TypeKind> _field_kind{jule::Ptr<_200d010d9_TypeKind>()};


	_200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl> __param_decl, jule::Ptr<_200d010d9_TypeKind> __param_kind): _field_decl(__param_decl), _field_kind(__param_kind) {}

	

	_200d010d9_TypeSymbol(void) = default;

	jule::Bool _method_checked(void);


	void _method_remove_kind(void);


	bool operator==(const _200d010d9_TypeSymbol &_Src) const {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _200d010d9_TypeSymbol &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Prim: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_200d010d9_Prim(jule::Str __param_kind): _field_kind(__param_kind) {
		this->self = jule::Ptr<_200d010d9_Prim>::make(this, nullptr);

	}

	~_200d010d9_Prim(void) { this->self.ref = nullptr; }

	_200d010d9_Prim(void) { this->self = jule::Ptr<_200d010d9_Prim>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Bool _method_is_i8(void);


	jule::Bool _method_is_i16(void);


	jule::Bool _method_is_i32(void);


	jule::Bool _method_is_i64(void);


	jule::Bool _method_is_u8(void);


	jule::Bool _method_is_u16(void);


	jule::Bool _method_is_u32(void);


	jule::Bool _method_is_u64(void);


	jule::Bool _method_is_f32(void);


	jule::Bool _method_is_f64(void);


	jule::Bool _method_is_int(void);


	jule::Bool _method_is_uint(void);


	jule::Bool _method_is_uintptr(void);


	jule::Bool _method_is_bool(void);


	jule::Bool _method_is_str(void);


	jule::Bool _method_is_any(void);


	bool operator==(const _200d010d9_Prim &_Src) const {
		return 
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _200d010d9_Prim &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Sptr: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Sptr> self{};

	jule::Ptr<_200d010d9_TypeKind> _field_elem{jule::Ptr<_200d010d9_TypeKind>()};


	_200d010d9_Sptr(jule::Ptr<_200d010d9_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_200d010d9_Sptr>::make(this, nullptr);

	}

	~_200d010d9_Sptr(void) { this->self.ref = nullptr; }

	_200d010d9_Sptr(void) { this->self = jule::Ptr<_200d010d9_Sptr>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	bool operator==(const _200d010d9_Sptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _200d010d9_Sptr &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Slc: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Slc> self{};

	jule::Ptr<_200d010d9_TypeKind> _field_elem{jule::Ptr<_200d010d9_TypeKind>()};


	_200d010d9_Slc(jule::Ptr<_200d010d9_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_200d010d9_Slc>::make(this, nullptr);

	}

	~_200d010d9_Slc(void) { this->self.ref = nullptr; }

	_200d010d9_Slc(void) { this->self = jule::Ptr<_200d010d9_Slc>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	bool operator==(const _200d010d9_Slc &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _200d010d9_Slc &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Tuple: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Tuple> self{};

	jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _field_types{jule::Slice<jule::Ptr<_200d010d9_TypeKind>>()};


	_200d010d9_Tuple(jule::Slice<jule::Ptr<_200d010d9_TypeKind>> __param_types): _field_types(__param_types) {
		this->self = jule::Ptr<_200d010d9_Tuple>::make(this, nullptr);

	}

	~_200d010d9_Tuple(void) { this->self.ref = nullptr; }

	_200d010d9_Tuple(void) { this->self = jule::Ptr<_200d010d9_Tuple>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	bool operator==(const _200d010d9_Tuple &_Src) const {
		return 
			this->_field_types == _Src._field_types;
	}

	bool operator!=(const _200d010d9_Tuple &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Map: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Map> self{};

	jule::Ptr<_200d010d9_TypeKind> _field_key{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_200d010d9_TypeKind> _field_val{jule::Ptr<_200d010d9_TypeKind>()};


	_200d010d9_Map(jule::Ptr<_200d010d9_TypeKind> __param_key, jule::Ptr<_200d010d9_TypeKind> __param_val): _field_key(__param_key), _field_val(__param_val) {
		this->self = jule::Ptr<_200d010d9_Map>::make(this, nullptr);

	}

	~_200d010d9_Map(void) { this->self.ref = nullptr; }

	_200d010d9_Map(void) { this->self = jule::Ptr<_200d010d9_Map>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	bool operator==(const _200d010d9_Map &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	bool operator!=(const _200d010d9_Map &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Arr: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ptr<_200d010d9_TypeKind> _field_elem{jule::Ptr<_200d010d9_TypeKind>()};


	_200d010d9_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ptr<_200d010d9_TypeKind> __param_elem): _field_auto(__param_auto), _field_n(__param_n), _field_elem(__param_elem) {
		this->self = jule::Ptr<_200d010d9_Arr>::make(this, nullptr);

	}

	~_200d010d9_Arr(void) { this->self.ref = nullptr; }

	_200d010d9_Arr(void) { this->self = jule::Ptr<_200d010d9_Arr>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	bool operator==(const _200d010d9_Arr &_Src) const {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _200d010d9_Arr &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Ptr: public _200d010d9_Kind {
	jule::Ptr<_200d010d9_Ptr> self{};

	jule::Ptr<_200d010d9_TypeKind> _field_elem{jule::Ptr<_200d010d9_TypeKind>()};


	_200d010d9_Ptr(jule::Ptr<_200d010d9_TypeKind> __param_elem): _field_elem(__param_elem) {
		this->self = jule::Ptr<_200d010d9_Ptr>::make(this, nullptr);

	}

	~_200d010d9_Ptr(void) { this->self.ref = nullptr; }

	_200d010d9_Ptr(void) { this->self = jule::Ptr<_200d010d9_Ptr>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Bool _method_is_unsafe(void);


	bool operator==(const _200d010d9_Ptr &_Src) const {
		return 
			this->_field_elem == _Src._field_elem;
	}

	bool operator!=(const _200d010d9_Ptr &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_Referencer {
	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_200d010d9_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs): _field_ident(__param_ident), _field_owner(__param_owner), _field_refs(__param_refs) {}

	

	_200d010d9_Referencer(void) = default;

	bool operator==(const _200d010d9_Referencer &_Src) const {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	bool operator!=(const _200d010d9_Referencer &_Src) const { return !this->operator==(_Src); }
};


struct _233336642_PlainImporter: public _218848bd5_Importer {
	jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> _field_all_packages{jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>()};


	_233336642_PlainImporter(jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> __param_all_packages): _field_all_packages(__param_all_packages) {}

	

	_233336642_PlainImporter(void) = default;

	jule::Ptr<_218848bd5_ImportInfo> _method_get_import(jule::Str);


	std::tuple<jule::Slice<jule::Ptr<_23346420e_Ast>>,jule::Slice<_231e4202e_Log>> _method_import_package(jule::Str);


	void _method_imported(jule::Ptr<_218848bd5_ImportInfo>);


	bool operator==(const _233336642_PlainImporter &_Src) const {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	bool operator!=(const _233336642_PlainImporter &_Src) const { return !this->operator==(_Src); }
};


struct _2330c4974_OrderedDefines {
	jule::Slice<jule::Ptr<_23461aa35_Struct>> _field_structs{jule::Slice<jule::Ptr<_23461aa35_Struct>>()};
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_globals{jule::Slice<jule::Ptr<_200c58948_Var>>()};


	_2330c4974_OrderedDefines(jule::Slice<jule::Ptr<_23461aa35_Struct>> __param_structs, jule::Slice<jule::Ptr<_200c58948_Var>> __param_globals): _field_structs(__param_structs), _field_globals(__param_globals) {}

	

	_2330c4974_OrderedDefines(void) = default;

	bool operator==(const _2330c4974_OrderedDefines &_Src) const {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	bool operator!=(const _2330c4974_OrderedDefines &_Src) const { return !this->operator==(_Src); }
};


struct _2330c4974_DefineOrderer {
	

	_2330c4974_DefineOrderer(void) = default;

	static jule::Bool _static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_200c58948_Var>>&,jule::Ptr<_200c58948_Var>);
	static jule::Bool _static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_23461aa35_Struct>>&,jule::Ptr<_23461aa35_Struct>);


	static void _static_method_order_common_0(jule::Slice<jule::Ptr<_200c58948_Var>>&);
	static void _static_method_order_common_1(jule::Slice<jule::Ptr<_23461aa35_Struct>>&);


	static void _static_method_order_variables(jule::Slice<jule::Ptr<_200c58948_Var>>&);


	static void _static_method_order_structures(jule::Slice<jule::Ptr<_23461aa35_Struct>>&);


	bool operator==(const _2330c4974_DefineOrderer &_Src) const { return true; }

	bool operator!=(const _2330c4974_DefineOrderer &_Src) const { return !this->operator==(_Src); }
};


struct _232e769d0_ScopeDeadCode {
	jule::Ptr<_232e769d0_ScopeDeadCode> self{};

	jule::Ptr<_232e769d0_ScopeDeadCode> _field_parent{jule::Ptr<_232e769d0_ScopeDeadCode>()};
	jule::Ptr<_2186ce186_Scope> _field_s{jule::Ptr<_2186ce186_Scope>()};
	jule::Slice<jule::Any>* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_232e769d0_ScopeDeadCode(jule::Ptr<_232e769d0_ScopeDeadCode> __param_parent, jule::Ptr<_2186ce186_Scope> __param_s, jule::Slice<jule::Any>* __param_stmts, jule::Int __param_i): _field_parent(__param_parent), _field_s(__param_s), _field_stmts(__param_stmts), _field_i(__param_i) {
		this->self = jule::Ptr<_232e769d0_ScopeDeadCode>::make(this, nullptr);

	}

	~_232e769d0_ScopeDeadCode(void) { this->self.ref = nullptr; }

	_232e769d0_ScopeDeadCode(void) { this->self = jule::Ptr<_232e769d0_ScopeDeadCode>::make(this, nullptr); }

	void _method_optimize_child(jule::Ptr<_2186ce186_Scope>&);


	void _method_eliminate_followed(void);


	void _method_optimize_stmt(jule::Any);


	void _method_optimize_stmts(void);


	bool operator==(const _232e769d0_ScopeDeadCode &_Src) const {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	bool operator!=(const _232e769d0_ScopeDeadCode &_Src) const { return !this->operator==(_Src); }
};


struct _1d6d86650_AbsTime {
	jule::Uint _field_day{jule::Uint()};
	jule::Uint _field_week_day{jule::Uint()};
	jule::Uint _field_year_day{jule::Uint()};
	jule::Uint _field_month{jule::Uint()};
	jule::Uint _field_year{jule::Uint()};
	jule::Uint _field_second{jule::Uint()};
	jule::Uint _field_minute{jule::Uint()};
	jule::Uint _field_hour{jule::Uint()};


	_1d6d86650_AbsTime(jule::Uint __param_day, jule::Uint __param_week_day, jule::Uint __param_year_day, jule::Uint __param_month, jule::Uint __param_year, jule::Uint __param_second, jule::Uint __param_minute, jule::Uint __param_hour): _field_day(__param_day), _field_week_day(__param_week_day), _field_year_day(__param_year_day), _field_month(__param_month), _field_year(__param_year), _field_second(__param_second), _field_minute(__param_minute), _field_hour(__param_hour) {}

	

	_1d6d86650_AbsTime(void) = default;

	jule::U64 _method_unix(void);


	bool operator==(const _1d6d86650_AbsTime &_Src) const {
		return 
			this->_field_day == _Src._field_day &&
			this->_field_week_day == _Src._field_week_day &&
			this->_field_year_day == _Src._field_year_day &&
			this->_field_month == _Src._field_month &&
			this->_field_year == _Src._field_year &&
			this->_field_second == _Src._field_second &&
			this->_field_minute == _Src._field_minute &&
			this->_field_hour == _Src._field_hour;
	}

	bool operator!=(const _1d6d86650_AbsTime &_Src) const { return !this->operator==(_Src); }
};


struct _1d6d86650_Time {
	jule::U64 _field_sec{jule::U64()};


	_1d6d86650_Time(jule::U64 __param_sec): _field_sec(__param_sec) {}

	

	_1d6d86650_Time(void) = default;

	static _1d6d86650_Time _static_method_unix(jule::U64);


	static _1d6d86650_Time _static_method_now(void);


	jule::U64 _method_unix(void);


	jule::Uint _method_day(void);


	jule::Uint _method_month(void);


	jule::Uint _method_year(void);


	jule::Uint _method_second(void);


	jule::Uint _method_minute(void);


	jule::Uint _method_hour(void);


	_1d6d86650_AbsTime _method_abs(void);


	bool operator==(const _1d6d86650_Time &_Src) const {
		return 
			this->_field_sec == _Src._field_sec;
	}

	bool operator!=(const _1d6d86650_Time &_Src) const { return !this->operator==(_Src); }
};


struct _1d6d86650_Duration {
	

	_1d6d86650_Duration(void) = default;

	static jule::I64 _static_method_nanoseconds(jule::I64);


	static jule::I64 _static_method_microseconds(jule::I64);


	static jule::I64 _static_method_milliseconds(jule::I64);


	static jule::I64 _static_method_seconds(jule::I64);


	static jule::I64 _static_method_minutes(jule::I64);


	static jule::I64 _static_method_hours(jule::I64);


	bool operator==(const _1d6d86650_Duration &_Src) const { return true; }

	bool operator!=(const _1d6d86650_Duration &_Src) const { return !this->operator==(_Src); }
};


struct _200ad0979_Flag_0: public _200ad0979_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Int _field__default{jule::Int()};
	jule::Str _field__what{jule::Str()};
	jule::Ptr<jule::Int> _field__data{jule::Ptr<jule::Int>()};


	_200ad0979_Flag_0(jule::Str __param__name, jule::I32 __param__short, jule::Int __param__default, jule::Str __param__what, jule::Ptr<jule::Int> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_200ad0979_Flag_0(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _200ad0979_Flag_0 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _200ad0979_Flag_0 &_Src) const { return !this->operator==(_Src); }
};

struct _200ad0979_Flag_1: public _200ad0979_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Uint _field__default{jule::Uint()};
	jule::Str _field__what{jule::Str()};
	jule::Ptr<jule::Uint> _field__data{jule::Ptr<jule::Uint>()};


	_200ad0979_Flag_1(jule::Str __param__name, jule::I32 __param__short, jule::Uint __param__default, jule::Str __param__what, jule::Ptr<jule::Uint> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_200ad0979_Flag_1(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _200ad0979_Flag_1 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _200ad0979_Flag_1 &_Src) const { return !this->operator==(_Src); }
};

struct _200ad0979_Flag_2: public _200ad0979_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::F64 _field__default{jule::F64()};
	jule::Str _field__what{jule::Str()};
	jule::Ptr<jule::F64> _field__data{jule::Ptr<jule::F64>()};


	_200ad0979_Flag_2(jule::Str __param__name, jule::I32 __param__short, jule::F64 __param__default, jule::Str __param__what, jule::Ptr<jule::F64> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_200ad0979_Flag_2(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _200ad0979_Flag_2 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _200ad0979_Flag_2 &_Src) const { return !this->operator==(_Src); }
};

struct _200ad0979_Flag_3: public _200ad0979_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Bool _field__default{jule::Bool()};
	jule::Str _field__what{jule::Str()};
	jule::Ptr<jule::Bool> _field__data{jule::Ptr<jule::Bool>()};


	_200ad0979_Flag_3(jule::Str __param__name, jule::I32 __param__short, jule::Bool __param__default, jule::Str __param__what, jule::Ptr<jule::Bool> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_200ad0979_Flag_3(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _200ad0979_Flag_3 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _200ad0979_Flag_3 &_Src) const { return !this->operator==(_Src); }
};

struct _200ad0979_Flag_4: public _200ad0979_CommonFlag {
	jule::Str _field__name{jule::Str()};
	jule::I32 _field__short{jule::I32()};
	jule::Str _field__default{jule::Str()};
	jule::Str _field__what{jule::Str()};
	jule::Ptr<jule::Str> _field__data{jule::Ptr<jule::Str>()};


	_200ad0979_Flag_4(jule::Str __param__name, jule::I32 __param__short, jule::Str __param__default, jule::Str __param__what, jule::Ptr<jule::Str> __param__data): _field__name(__param__name), _field__short(__param__short), _field__default(__param__default), _field__what(__param__what), _field__data(__param__data) {}

	

	_200ad0979_Flag_4(void) = default;

	jule::Str _method_name(void);


	jule::Str _method_what(void);


	void _method_reset(void);


	jule::I32 _method_short(void);


	bool operator==(const _200ad0979_Flag_4 &_Src) const {
		return 
			this->_field__name == _Src._field__name &&
			this->_field__short == _Src._field__short &&
			this->_field__default == _Src._field__default &&
			this->_field__what == _Src._field__what &&
			this->_field__data == _Src._field__data;
	}

	bool operator!=(const _200ad0979_Flag_4 &_Src) const { return !this->operator==(_Src); }
};


struct _200ad0979_FlagSet {
	jule::Slice<jule::Trait<_200ad0979_CommonFlag>> _field__flags{jule::Slice<jule::Trait<_200ad0979_CommonFlag>>()};
	jule::Slice<jule::Str> _field__errors{jule::Slice<jule::Str>()};


	_200ad0979_FlagSet(jule::Slice<jule::Trait<_200ad0979_CommonFlag>> __param__flags, jule::Slice<jule::Str> __param__errors): _field__flags(__param__flags), _field__errors(__param__errors) {}

	

	_200ad0979_FlagSet(void) = default;

	static jule::Ptr<_200ad0979_FlagSet> _static_method_new(void);


	jule::Trait<_200ad0979_CommonFlag> _method_find_flag(jule::Str);


	jule::Trait<_200ad0979_CommonFlag> _method_find_flag_short(jule::I32);


	jule::Slice<jule::Trait<_200ad0979_CommonFlag>> _method_flags(void);


	std::tuple<jule::Slice<jule::Str>,jule::Str> _method_parse(jule::Slice<jule::Str>);


	void _method_reset(void);


	jule::Ptr<_200ad0979_Flag_3> _method_add_flag_common_0(jule::Str,jule::I32,jule::Str);
	jule::Ptr<_200ad0979_Flag_4> _method_add_flag_common_1(jule::Str,jule::I32,jule::Str);




	void _method_add_var_0(jule::Ptr<jule::Bool>&,jule::Str,jule::I32,jule::Str);
	void _method_add_var_1(jule::Ptr<jule::Str>&,jule::Str,jule::I32,jule::Str);


	bool operator==(const _200ad0979_FlagSet &_Src) const {
		return 
			this->_field__flags == _Src._field__flags &&
			this->_field__errors == _Src._field__errors;
	}

	bool operator!=(const _200ad0979_FlagSet &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_MatchCase {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};
	jule::Slice<jule::Ptr<_233464770_Case>> _field_cases{jule::Slice<jule::Ptr<_233464770_Case>>()};
	jule::Ptr<_233464770_Else> _field_default{jule::Ptr<_233464770_Else>()};


	_233464770_MatchCase(_2336ea198_Token __param_token, jule::Bool __param_type_match, jule::Ptr<_233464770_Expr> __param_expr, jule::Slice<jule::Ptr<_233464770_Case>> __param_cases, jule::Ptr<_233464770_Else> __param_default): _field_token(__param_token), _field_type_match(__param_type_match), _field_expr(__param_expr), _field_cases(__param_cases), _field_default(__param_default) {}

	

	_233464770_MatchCase(void) = default;

	bool operator==(const _233464770_MatchCase &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	bool operator!=(const _233464770_MatchCase &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_LitExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_value{jule::Str()};


	_233464770_LitExpr(_2336ea198_Token __param_token, jule::Str __param_value): _field_token(__param_token), _field_value(__param_value) {}

	

	_233464770_LitExpr(void) = default;

	jule::Bool _method_is_nil(void);


	bool operator==(const _233464770_LitExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	bool operator!=(const _233464770_LitExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_UnsafeExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_expr{jule::Any()};


	_233464770_UnsafeExpr(_2336ea198_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_233464770_UnsafeExpr(void) = default;

	bool operator==(const _233464770_UnsafeExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_UnsafeExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_IdentExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_233464770_IdentExpr(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked) {}

	

	_233464770_IdentExpr(void) = default;

	jule::Bool _method_is_self(void);


	bool operator==(const _233464770_IdentExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	bool operator!=(const _233464770_IdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_UnaryExpr {
	_2336ea198_Token _field_op{_2336ea198_Token()};
	jule::Any _field_expr{jule::Any()};


	_233464770_UnaryExpr(_2336ea198_Token __param_op, jule::Any __param_expr): _field_op(__param_op), _field_expr(__param_expr) {}

	

	_233464770_UnaryExpr(void) = default;

	bool operator==(const _233464770_UnaryExpr &_Src) const {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_UnaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_VariadicExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_expr{jule::Any()};


	_233464770_VariadicExpr(_2336ea198_Token __param_token, jule::Any __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_233464770_VariadicExpr(void) = default;

	bool operator==(const _233464770_VariadicExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_VariadicExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_NsSelectionExpr {
	jule::Slice<_2336ea198_Token> _field_ns{jule::Slice<_2336ea198_Token>()};
	_2336ea198_Token _field_ident{_2336ea198_Token()};


	_233464770_NsSelectionExpr(jule::Slice<_2336ea198_Token> __param_ns, _2336ea198_Token __param_ident): _field_ns(__param_ns), _field_ident(__param_ident) {}

	

	_233464770_NsSelectionExpr(void) = default;

	bool operator==(const _233464770_NsSelectionExpr &_Src) const {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _233464770_NsSelectionExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_SubIdentExpr {
	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_2336ea198_Token _field_ident{_2336ea198_Token()};


	_233464770_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _2336ea198_Token __param_ident): _field_is_self(__param_is_self), _field_expr(__param_expr), _field_ident(__param_ident) {}

	

	_233464770_SubIdentExpr(void) = default;

	bool operator==(const _233464770_SubIdentExpr &_Src) const {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _233464770_SubIdentExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_BinopExpr {
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_2336ea198_Token _field_op{_2336ea198_Token()};


	_233464770_BinopExpr(jule::Any __param_left, jule::Any __param_right, _2336ea198_Token __param_op): _field_left(__param_left), _field_right(__param_right), _field_op(__param_op) {}

	

	_233464770_BinopExpr(void) = default;

	bool operator==(const _233464770_BinopExpr &_Src) const {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _233464770_BinopExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_FieldExprPair {
	_2336ea198_Token _field_field{_2336ea198_Token()};
	jule::Any _field_expr{jule::Any()};


	_233464770_FieldExprPair(_2336ea198_Token __param_field, jule::Any __param_expr): _field_field(__param_field), _field_expr(__param_expr) {}

	

	_233464770_FieldExprPair(void) = default;

	jule::Bool _method_is_targeted(void);


	bool operator==(const _233464770_FieldExprPair &_Src) const {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_FieldExprPair &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_BraceLit {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_233464770_BraceLit(_2336ea198_Token __param_token, jule::Slice<jule::Any> __param_exprs): _field_token(__param_token), _field_exprs(__param_exprs) {}

	

	_233464770_BraceLit(void) = default;

	jule::Bool _method_is_empty(void);


	bool operator==(const _233464770_BraceLit &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	bool operator!=(const _233464770_BraceLit &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_KeyValPair {
	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_2336ea198_Token _field_colon{_2336ea198_Token()};


	_233464770_KeyValPair(jule::Any __param_key, jule::Any __param_val, _2336ea198_Token __param_colon): _field_key(__param_key), _field_val(__param_val), _field_colon(__param_colon) {}

	

	_233464770_KeyValPair(void) = default;

	bool operator==(const _233464770_KeyValPair &_Src) const {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	bool operator!=(const _233464770_KeyValPair &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_SliceExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_233464770_SliceExpr(_2336ea198_Token __param_token, jule::Slice<jule::Any> __param_elems): _field_token(__param_token), _field_elems(__param_elems) {}

	

	_233464770_SliceExpr(void) = default;

	jule::Bool _method_is_empty(void);


	bool operator==(const _233464770_SliceExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	bool operator!=(const _233464770_SliceExpr &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_DynamicTypeAnnotation {
	jule::Ptr<_218751758_Eval> _field_e{jule::Ptr<_218751758_Eval>()};
	jule::Ptr<_2185d51ad_FnIns> _field_f{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Ptr<_2185d51ad_ParamIns> _field_p{jule::Ptr<_2185d51ad_ParamIns>()};
	jule::Ptr<_218751758_Data> _field_a{jule::Ptr<_218751758_Data>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};
	jule::Ptr<_200d010d9_TypeKind>* _field_k{nullptr};


	_200c5bcc0_DynamicTypeAnnotation(jule::Ptr<_218751758_Eval> __param_e, jule::Ptr<_2185d51ad_FnIns> __param_f, jule::Ptr<_2185d51ad_ParamIns> __param_p, jule::Ptr<_218751758_Data> __param_a, _2336ea198_Token __param_error_token, jule::Ptr<_200d010d9_TypeKind>* __param_k): _field_e(__param_e), _field_f(__param_f), _field_p(__param_p), _field_a(__param_a), _field_error_token(__param_error_token), _field_k(__param_k) {}

	

	_200c5bcc0_DynamicTypeAnnotation(void) = default;

	void _method_push_generic(jule::Ptr<_200d010d9_TypeKind>&,jule::Int);


	jule::Bool _method_annotate_prim(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_slc(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_check_map_key(jule::Ptr<_200d010d9_TypeKind>*,jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_map(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_fn(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_ptr(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_sptr(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_any(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate_kind(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Bool _method_annotate(void);


	bool operator==(const _200c5bcc0_DynamicTypeAnnotation &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	bool operator!=(const _200c5bcc0_DynamicTypeAnnotation &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_StructLitChecker {
	jule::Ptr<_218751758_Eval> _field_e{jule::Ptr<_218751758_Eval>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};
	jule::Ptr<_23461aa35_StructIns> _field_s{jule::Ptr<_23461aa35_StructIns>()};
	jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>> _field_args{jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>>()};


	_200c5bcc0_StructLitChecker(jule::Ptr<_218751758_Eval> __param_e, _2336ea198_Token __param_error_token, jule::Ptr<_23461aa35_StructIns> __param_s, jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>> __param_args): _field_e(__param_e), _field_error_token(__param_error_token), _field_s(__param_s), _field_args(__param_args) {}

	

	_200c5bcc0_StructLitChecker(void) = default;

	void _method_push_err(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_suggestion(jule::Str,jule::Slice<jule::Any>);


	void _method_push_match(jule::Ptr<_23461aa35_FieldIns>&,jule::Ptr<_218751758_Data>&,_2336ea198_Token&);


	void _method_check_pair(jule::Ptr<_233464770_FieldExprPair>&,jule::Slice<jule::Any>&);


	jule::Bool _method_ready_exprs(jule::Slice<jule::Any>&);


	void _method_check(jule::Slice<jule::Any>&);


	bool operator==(const _200c5bcc0_StructLitChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _200c5bcc0_StructLitChecker &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_IndexingExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_233464770_IndexingExpr(_2336ea198_Token __param_token, jule::Any __param_expr, jule::Any __param_index): _field_token(__param_token), _field_expr(__param_expr), _field_index(__param_index) {}

	

	_233464770_IndexingExpr(void) = default;

	bool operator==(const _233464770_IndexingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	bool operator!=(const _233464770_IndexingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_SlicingExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_233464770_SlicingExpr(_2336ea198_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to): _field_token(__param_token), _field_expr(__param_expr), _field_start(__param_start), _field_to(__param_to) {}

	

	_233464770_SlicingExpr(void) = default;

	bool operator==(const _233464770_SlicingExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	bool operator!=(const _233464770_SlicingExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_TernaryExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_condition{jule::Any()};
	jule::Any _field_true_expr{jule::Any()};
	jule::Any _field_false_expr{jule::Any()};


	_233464770_TernaryExpr(_2336ea198_Token __param_token, jule::Any __param_condition, jule::Any __param_true_expr, jule::Any __param_false_expr): _field_token(__param_token), _field_condition(__param_condition), _field_true_expr(__param_true_expr), _field_false_expr(__param_false_expr) {}

	

	_233464770_TernaryExpr(void) = default;

	bool operator==(const _233464770_TernaryExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_condition == _Src._field_condition &&
			this->_field_true_expr == _Src._field_true_expr &&
			this->_field_false_expr == _Src._field_false_expr;
	}

	bool operator!=(const _233464770_TernaryExpr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_LabelSt {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};


	_233464770_LabelSt(_2336ea198_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_233464770_LabelSt(void) = default;

	bool operator==(const _233464770_LabelSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _233464770_LabelSt &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_FallSt {
	_2336ea198_Token _field_token{_2336ea198_Token()};


	_233464770_FallSt(_2336ea198_Token __param_token): _field_token(__param_token) {}

	

	_233464770_FallSt(void) = default;

	bool operator==(const _233464770_FallSt &_Src) const {
		return 
			this->_field_token == _Src._field_token;
	}

	bool operator!=(const _233464770_FallSt &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_AssignSt {
	jule::Bool _field_declarative{jule::Bool()};
	_2336ea198_Token _field_setter{_2336ea198_Token()};
	jule::Slice<jule::Ptr<_233464770_AssignLeft>> _field_left{jule::Slice<jule::Ptr<_233464770_AssignLeft>>()};
	jule::Ptr<_233464770_Expr> _field_right{jule::Ptr<_233464770_Expr>()};


	_233464770_AssignSt(jule::Bool __param_declarative, _2336ea198_Token __param_setter, jule::Slice<jule::Ptr<_233464770_AssignLeft>> __param_left, jule::Ptr<_233464770_Expr> __param_right): _field_declarative(__param_declarative), _field_setter(__param_setter), _field_left(__param_left), _field_right(__param_right) {}

	

	_233464770_AssignSt(void) = default;

	bool operator==(const _233464770_AssignSt &_Src) const {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	bool operator!=(const _233464770_AssignSt &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_RetSt {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};


	_233464770_RetSt(_2336ea198_Token __param_token, jule::Ptr<_233464770_Expr> __param_expr): _field_token(__param_token), _field_expr(__param_expr) {}

	

	_233464770_RetSt(void) = default;

	bool operator==(const _233464770_RetSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_RetSt &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Iter {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};


	_233464770_Iter(_2336ea198_Token __param_token, jule::Any __param_kind, jule::Ptr<_233464770_ScopeTree> __param_scope): _field_token(__param_token), _field_kind(__param_kind), _field_scope(__param_scope) {}

	

	_233464770_Iter(void) = default;

	jule::Bool _method_is_inf(void);


	bool operator==(const _233464770_Iter &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _233464770_Iter &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_WhileKind {
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};
	jule::Any _field_next{jule::Any()};
	_2336ea198_Token _field_next_token{_2336ea198_Token()};


	_233464770_WhileKind(jule::Ptr<_233464770_Expr> __param_expr, jule::Any __param_next, _2336ea198_Token __param_next_token): _field_expr(__param_expr), _field_next(__param_next), _field_next_token(__param_next_token) {}

	

	_233464770_WhileKind(void) = default;

	jule::Bool _method_is_while_next(void);


	bool operator==(const _233464770_WhileKind &_Src) const {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	bool operator!=(const _233464770_WhileKind &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_RangeKind {
	_2336ea198_Token _field_in_token{_2336ea198_Token()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};
	jule::Ptr<_233464770_VarDecl> _field_key_a{jule::Ptr<_233464770_VarDecl>()};
	jule::Ptr<_233464770_VarDecl> _field_key_b{jule::Ptr<_233464770_VarDecl>()};


	_233464770_RangeKind(_2336ea198_Token __param_in_token, jule::Ptr<_233464770_Expr> __param_expr, jule::Ptr<_233464770_VarDecl> __param_key_a, jule::Ptr<_233464770_VarDecl> __param_key_b): _field_in_token(__param_in_token), _field_expr(__param_expr), _field_key_a(__param_key_a), _field_key_b(__param_key_b) {}

	

	_233464770_RangeKind(void) = default;

	bool operator==(const _233464770_RangeKind &_Src) const {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	bool operator!=(const _233464770_RangeKind &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_TypeCompatibilityChecker {
	jule::Ptr<_1eec2c632_Sema> _field_s{jule::Ptr<_1eec2c632_Sema>()};
	jule::Ptr<_200d010d9_TypeKind> _field_dest{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_200d010d9_TypeKind> _field_src{jule::Ptr<_200d010d9_TypeKind>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};
	jule::Bool _field_ignore_any{jule::Bool()};


	_200c5bcc0_TypeCompatibilityChecker(jule::Ptr<_1eec2c632_Sema> __param_s, jule::Ptr<_200d010d9_TypeKind> __param_dest, jule::Ptr<_200d010d9_TypeKind> __param_src, _2336ea198_Token __param_error_token, jule::Bool __param_ignore_any): _field_s(__param_s), _field_dest(__param_dest), _field_src(__param_src), _field_error_token(__param_error_token), _field_ignore_any(__param_ignore_any) {}

	

	_200c5bcc0_TypeCompatibilityChecker(void) = default;

	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_check_trait(void);


	jule::Bool _method_check_sptr(void);


	jule::Bool _method_check_ptr(void);


	jule::Bool _method_check_slc(void);


	jule::Bool _method_check_arr(void);


	jule::Bool _method_check_map(void);


	jule::Bool _method_check_struct(void);


	jule::Bool _method_check_fn(void);


	jule::Bool _method_check_enum(void);


	jule::Bool _method_check_prim(void);


	jule::Bool _method_check_cpp_linked(void);


	jule::Bool _method_check(void);


	bool operator==(const _200c5bcc0_TypeCompatibilityChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_any == _Src._field_ignore_any;
	}

	bool operator!=(const _200c5bcc0_TypeCompatibilityChecker &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_AssignTypeChecker {
	jule::Ptr<_1eec2c632_Sema> _field_s{jule::Ptr<_1eec2c632_Sema>()};
	jule::Ptr<_200d010d9_TypeKind> _field_dest{jule::Ptr<_200d010d9_TypeKind>()};
	jule::Ptr<_218751758_Data> _field_d{jule::Ptr<_218751758_Data>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};


	_200c5bcc0_AssignTypeChecker(jule::Ptr<_1eec2c632_Sema> __param_s, jule::Ptr<_200d010d9_TypeKind> __param_dest, jule::Ptr<_218751758_Data> __param_d, _2336ea198_Token __param_error_token): _field_s(__param_s), _field_dest(__param_dest), _field_d(__param_d), _field_error_token(__param_error_token) {}

	

	_200c5bcc0_AssignTypeChecker(void) = default;

	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	jule::Bool _method_check_validity(void);


	jule::Bool _method_check_const(void);


	jule::Bool _method_check(void);


	bool operator==(const _200c5bcc0_AssignTypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token;
	}

	bool operator!=(const _200c5bcc0_AssignTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_FnCallArgChecker {
	jule::Ptr<_218751758_Eval> _field_e{jule::Ptr<_218751758_Eval>()};
	jule::Slice<jule::Ptr<_233464770_Expr>> _field_args{jule::Slice<jule::Ptr<_233464770_Expr>>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};
	jule::Ptr<_2185d51ad_FnIns> _field_f{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_200c5bcc0_FnCallArgChecker(jule::Ptr<_218751758_Eval> __param_e, jule::Slice<jule::Ptr<_233464770_Expr>> __param_args, _2336ea198_Token __param_error_token, jule::Ptr<_2185d51ad_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models): _field_e(__param_e), _field_args(__param_args), _field_error_token(__param_error_token), _field_f(__param_f), _field_dynamic_annotation(__param_dynamic_annotation), _field_arg_models(__param_arg_models) {}

	

	_200c5bcc0_FnCallArgChecker(void) = default;

	void _method_push_err_token(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	jule::Slice<jule::Ptr<_2185d51ad_ParamIns>> _method_get_params(void);


	jule::Bool _method_check_counts(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>&);


	jule::Bool _method_check_arg(jule::Ptr<_2185d51ad_ParamIns>&,jule::Ptr<_218751758_Data>&,_2336ea198_Token&);


	jule::Bool _method_push(jule::Ptr<_2185d51ad_ParamIns>&,jule::Ptr<_233464770_Expr>);


	jule::Bool _method_push_variadic(jule::Ptr<_2185d51ad_ParamIns>&,jule::Int);


	jule::Bool _method_check_args(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>&);


	jule::Bool _method_check_dynamic_type_annotation(void);


	jule::Bool _method_check(void);


	bool operator==(const _200c5bcc0_FnCallArgChecker &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	bool operator!=(const _200c5bcc0_FnCallArgChecker &_Src) const { return !this->operator==(_Src); }
};


struct _200c5bcc0_RetTypeChecker {
	jule::Ptr<_2186ce186_ScopeChecker> _field_sc{jule::Ptr<_2186ce186_ScopeChecker>()};
	jule::Ptr<_2185d51ad_FnIns> _field_f{jule::Ptr<_2185d51ad_FnIns>()};
	jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _field_types{jule::Slice<jule::Ptr<_200d010d9_TypeKind>>()};
	jule::Slice<jule::Ptr<_233464770_Expr>> _field_exprs{jule::Slice<jule::Ptr<_233464770_Expr>>()};
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_vars{jule::Slice<jule::Ptr<_200c58948_Var>>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};
	jule::Any _field_model{jule::Any()};


	_200c5bcc0_RetTypeChecker(jule::Ptr<_2186ce186_ScopeChecker> __param_sc, jule::Ptr<_2185d51ad_FnIns> __param_f, jule::Slice<jule::Ptr<_200d010d9_TypeKind>> __param_types, jule::Slice<jule::Ptr<_233464770_Expr>> __param_exprs, jule::Slice<jule::Ptr<_200c58948_Var>> __param_vars, _2336ea198_Token __param_error_token, jule::Any __param_model): _field_sc(__param_sc), _field_f(__param_f), _field_types(__param_types), _field_exprs(__param_exprs), _field_vars(__param_vars), _field_error_token(__param_error_token), _field_model(__param_model) {}

	

	_200c5bcc0_RetTypeChecker(void) = default;

	void _method_prepare_types(void);


	void _method_prepare_exprs(jule::Ptr<_233464770_Expr>&);


	void _method_ret_vars(void);


	void _method_check_exprs(void);


	jule::Bool _method_check(jule::Ptr<_233464770_Expr>&);


	bool operator==(const _200c5bcc0_RetTypeChecker &_Src) const {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_model == _Src._field_model;
	}

	bool operator!=(const _200c5bcc0_RetTypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_GenericDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};


	_233464770_GenericDecl(_2336ea198_Token __param_token, jule::Str __param_ident): _field_token(__param_token), _field_ident(__param_ident) {}

	

	_233464770_GenericDecl(void) = default;

	bool operator==(const _233464770_GenericDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _233464770_GenericDecl &_Src) const { return !this->operator==(_Src); }
};


struct _218751758_BinopSolver {
	jule::Ptr<_218751758_Eval> _field_e{jule::Ptr<_218751758_Eval>()};
	jule::Ptr<_218751758_Data> _field_l{jule::Ptr<_218751758_Data>()};
	jule::Ptr<_218751758_Data> _field_r{jule::Ptr<_218751758_Data>()};
	_2336ea198_Token _field_op{_2336ea198_Token()};


	_218751758_BinopSolver(jule::Ptr<_218751758_Eval> __param_e, jule::Ptr<_218751758_Data> __param_l, jule::Ptr<_218751758_Data> __param_r, _2336ea198_Token __param_op): _field_e(__param_e), _field_l(__param_l), _field_r(__param_r), _field_op(__param_op) {}

	

	_218751758_BinopSolver(void) = default;

	jule::Bool _method_check_type_compatibility(void);


	jule::Ptr<_218751758_Data> _method_eval_nil(void);


	jule::Ptr<_218751758_Data> _method_eval_enum(void);


	jule::Ptr<_218751758_Data> _method_eval_sptr(void);


	jule::Ptr<_218751758_Data> _method_eval_ptr(void);


	jule::Ptr<_218751758_Data> _method_eval_arr(void);


	jule::Ptr<_218751758_Data> _method_eval_slc(void);


	jule::Ptr<_218751758_Data> _method_eval_fn(void);


	jule::Ptr<_218751758_Data> _method_eval_struct(void);


	jule::Ptr<_218751758_Data> _method_eval_trait(void);


	jule::Ptr<_218751758_Data> _method_eval_any(void);


	jule::Ptr<_218751758_Data> _method_eval_bool(void);


	jule::Ptr<_218751758_Data> _method_eval_str(void);


	void _method_set_type_to_greater(void);


	void _method_check_mod_data(jule::Ptr<_218751758_Data>&);


	void _method_mod(void);


	jule::Bool _method_numbers_are_compatibile(jule::Str&,jule::Str&);


	jule::Ptr<_218751758_Data> _method_eval_float(void);


	jule::Ptr<_218751758_Data> _method_eval_unsig_int(void);


	jule::Ptr<_218751758_Data> _method_eval_sig_int(void);


	jule::Ptr<_218751758_Data> _method_eval_prim(void);


	jule::Ptr<_218751758_Data> _method_eval(void);


	void _method_solve_const(jule::Ptr<_218751758_Data>&);


	void _method_post_const(jule::Ptr<_218751758_Data>&);


	void _method_check_data(jule::Ptr<_218751758_Data>&);


	void _method_check_datas(void);


	jule::Ptr<_218751758_Data> _method_solve_explicit(jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>&);


	jule::Ptr<_218751758_Data> _method_solve(jule::Ptr<_233464770_BinopExpr>&);


	bool operator==(const _218751758_BinopSolver &_Src) const {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	bool operator!=(const _218751758_BinopSolver &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_TypeAlias {
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_generic{jule::Bool()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_200d010d9_TypeSymbol> _field_kind{jule::Ptr<_200d010d9_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_200d010d9_TypeAlias(jule::Ptr<_233464770_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, jule::Bool __param_generic, _2336ea198_Token __param_token, jule::Str __param_ident, jule::Ptr<_200d010d9_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_used(__param_used), _field_generic(__param_generic), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc(__param_doc), _field_refers(__param_refers) {}

	

	_200d010d9_TypeAlias(void) = default;

	bool operator==(const _200d010d9_TypeAlias &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_generic == _Src._field_generic &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	bool operator!=(const _200d010d9_TypeAlias &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_GotoSt {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	_2336ea198_Token _field_label{_2336ea198_Token()};


	_233464770_GotoSt(_2336ea198_Token __param_token, _2336ea198_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_233464770_GotoSt(void) = default;

	bool operator==(const _233464770_GotoSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	bool operator!=(const _233464770_GotoSt &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_AssignLeft {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};


	_233464770_AssignLeft(_2336ea198_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ptr<_233464770_Expr> __param_expr): _field_token(__param_token), _field_mutable(__param_mutable), _field_reference(__param_reference), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_233464770_AssignLeft(void) = default;

	bool operator==(const _233464770_AssignLeft &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_AssignLeft &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Comment {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_text{jule::Str()};


	_233464770_Comment(_2336ea198_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_233464770_Comment(void) = default;

	jule::Bool _method_is_directive(void);


	bool operator==(const _233464770_Comment &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	bool operator!=(const _233464770_Comment &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_ParamDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_233464770_ParamDecl(_2336ea198_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {}

	

	_233464770_ParamDecl(void) = default;

	jule::Bool _method_is_self(void);


	jule::Bool _method_is_ref(void);


	bool operator==(const _233464770_ParamDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _233464770_ParamDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_FnDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Ptr<_233464770_CommentGroup> _field_doc_comments{jule::Ptr<_233464770_CommentGroup>()};
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _field_generics{jule::Slice<jule::Ptr<_233464770_GenericDecl>>()};
	jule::Ptr<_233464770_RetTypeDecl> _field_result{jule::Ptr<_233464770_RetTypeDecl>()};
	jule::Slice<jule::Ptr<_233464770_ParamDecl>> _field_params{jule::Slice<jule::Ptr<_233464770_ParamDecl>>()};


	_233464770_FnDecl(_2336ea198_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Ptr<_233464770_CommentGroup> __param_doc_comments, jule::Ptr<_233464770_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_233464770_GenericDecl>> __param_generics, jule::Ptr<_233464770_RetTypeDecl> __param_result, jule::Slice<jule::Ptr<_233464770_ParamDecl>> __param_params): _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params) {}

	

	_233464770_FnDecl(void) = default;

	jule::Bool _method_is_anon(void);


	bool operator==(const _233464770_FnDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	bool operator!=(const _233464770_FnDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_VarDecl {
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Ptr<_233464770_CommentGroup> _field_doc_comments{jule::Ptr<_233464770_CommentGroup>()};
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};


	_233464770_VarDecl(jule::Ptr<_233464770_ScopeTree> __param_scope, _2336ea198_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Ptr<_233464770_CommentGroup> __param_doc_comments, jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Ptr<_233464770_Expr> __param_expr): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_public(__param_public), _field_mutable(__param_mutable), _field_constant(__param_constant), _field_statically(__param_statically), _field_reference(__param_reference), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_kind(__param_kind), _field_expr(__param_expr) {}

	

	_233464770_VarDecl(void) = default;

	bool operator==(const _233464770_VarDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_VarDecl &_Src) const { return !this->operator==(_Src); }
};


struct _200d010d9_TypeChecker {
	jule::Ptr<_1eec2c632_Sema> _field_s{jule::Ptr<_1eec2c632_Sema>()};
	jule::Trait<_1d6734eee_Lookup> _field_lookup{jule::Trait<_1d6734eee_Lookup>()};
	jule::Ptr<_200d010d9_Referencer> _field_referencer{jule::Ptr<_200d010d9_Referencer>()};
	_2336ea198_Token _field_error_token{_2336ea198_Token()};
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ptr<_233464770_GenericDecl>>()};
	jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _field_use_generics{jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_200d010d9_TypeChecker(jule::Ptr<_1eec2c632_Sema> __param_s, jule::Trait<_1d6734eee_Lookup> __param_lookup, jule::Ptr<_200d010d9_Referencer> __param_referencer, _2336ea198_Token __param_error_token, jule::Slice<jule::Ptr<_233464770_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain): _field_s(__param_s), _field_lookup(__param_lookup), _field_referencer(__param_referencer), _field_error_token(__param_error_token), _field_ignore_generics(__param_ignore_generics), _field_use_generics(__param_use_generics), _field_not_plain(__param_not_plain) {}

	

	_200d010d9_TypeChecker(void) = default;

	void _method_push_err(_2336ea198_Token,jule::Str,jule::Slice<jule::Any>);


	jule::Ptr<_200d010d9_Prim> _method_build_prim(jule::Ptr<_233464770_IdentTypeDecl>&);


	void _method_push_cycle_error(jule::Any,jule::Any,jule::Str&);


	jule::Bool _method_are_equals_cross_cycle_data_0(jule::Any,jule::Any);
	jule::Bool _method_are_equals_cross_cycle_data_1(jule::Any,jule::Any);


	jule::Bool _method_check_cross_cycle(jule::Any,jule::Str&);


	jule::Bool _method_check_illegal_cycles(jule::Ptr<_233464770_IdentTypeDecl>&,jule::Any);


	jule::Trait<_200d010d9_Kind> _method_from_type_alias(jule::Ptr<_233464770_IdentTypeDecl>&,jule::Ptr<_200d010d9_TypeAlias>&);


	jule::Ptr<_2186be3da_Enum> _method_from_enum(jule::Ptr<_233464770_IdentTypeDecl>&,jule::Ptr<_2186be3da_Enum>&);


	jule::Bool _method_check_struct_ins(jule::Ptr<_23461aa35_StructIns>&,_2336ea198_Token&);


	void _method_append_used_struct_reference(jule::Ptr<_23461aa35_Struct>&);


	jule::Ptr<_23461aa35_StructIns> _method_from_struct(jule::Ptr<_233464770_IdentTypeDecl>&,jule::Ptr<_23461aa35_Struct>&);


	jule::Trait<_200d010d9_Kind> _method_get_def(jule::Ptr<_233464770_IdentTypeDecl>&);


	jule::Trait<_200d010d9_Kind> _method_build_ident(jule::Ptr<_233464770_IdentTypeDecl>);


	jule::Ptr<_200d010d9_Sptr> _method_build_sptr_from_type(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Ptr<_200d010d9_Sptr> _method_build_sptr(jule::Ptr<_233464770_SptrTypeDecl>);


	jule::Ptr<_200d010d9_Ptr> _method_build_ptr_from_type(jule::Ptr<_200d010d9_TypeKind>&);


	jule::Ptr<_200d010d9_Ptr> _method_build_ptr(jule::Ptr<_233464770_PtrTypeDecl>);


	jule::Ptr<_200d010d9_Slc> _method_build_slc(jule::Ptr<_233464770_SlcTypeDecl>);


	jule::Ptr<_200d010d9_Arr> _method_build_arr(jule::Ptr<_233464770_ArrTypeDecl>);


	jule::Ptr<_200d010d9_Map> _method_build_map(jule::Ptr<_233464770_MapTypeDecl>);


	jule::Ptr<_200d010d9_Tuple> _method_build_tuple(jule::Ptr<_233464770_TupleTypeDecl>);


	jule::Bool _method_check_fn_types(jule::Ptr<_2185d51ad_FnIns>&);


	jule::Ptr<_2185d51ad_FnIns> _method_build_fn(jule::Ptr<_233464770_FnDecl>);


	jule::Trait<_200d010d9_Kind> _method_build_by_namespace(jule::Ptr<_233464770_NamespaceTypeDecl>);


	jule::Ptr<_200d010d9_TypeKind> _method_build(jule::Any&);


	jule::Ptr<_200d010d9_TypeKind> _method_check_decl(jule::Ptr<_233464770_TypeDecl>&);


	void _method_check(jule::Ptr<_200d010d9_TypeSymbol>&);


	bool operator==(const _200d010d9_TypeChecker &_Src) const {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	bool operator!=(const _200d010d9_TypeChecker &_Src) const { return !this->operator==(_Src); }
};


struct _23301cea5_IR {
	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ptr<_218848bd5_Package> _field_main{jule::Ptr<_218848bd5_Package>()};
	jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> _field_used{jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>()};
	_2330c4974_OrderedDefines _field_ordered{_2330c4974_OrderedDefines()};


	_23301cea5_IR(jule::Slice<jule::Str> __param_passes, jule::Ptr<_218848bd5_Package> __param_main, jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> __param_used, _2330c4974_OrderedDefines __param_ordered): _field_passes(__param_passes), _field_main(__param_main), _field_used(__param_used), _field_ordered(__param_ordered) {}

	

	_23301cea5_IR(void) = default;

	static std::tuple<jule::Ptr<_23301cea5_IR>,jule::Slice<_231e4202e_Log>> _static_method_build(jule::Str,jule::Int);


	void _method_append_structs(jule::Ptr<_218848bd5_Package>&,jule::Slice<jule::Ptr<_23461aa35_Struct>>&);


	jule::Slice<jule::Ptr<_23461aa35_Struct>> _method_get_all_structures(void);


	void _method_append_vars(jule::Ptr<_218848bd5_Package>&,jule::Slice<jule::Ptr<_200c58948_Var>>&);


	jule::Slice<jule::Ptr<_200c58948_Var>> _method_get_all_variables(void);


	void _method_order(void);


	bool operator==(const _23301cea5_IR &_Src) const {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used &&
			this->_field_ordered == _Src._field_ordered;
	}

	bool operator!=(const _23301cea5_IR &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_BreakSt {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	_2336ea198_Token _field_label{_2336ea198_Token()};


	_233464770_BreakSt(_2336ea198_Token __param_token, _2336ea198_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_233464770_BreakSt(void) = default;

	bool operator==(const _233464770_BreakSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	bool operator!=(const _233464770_BreakSt &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_ContSt {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	_2336ea198_Token _field_label{_2336ea198_Token()};


	_233464770_ContSt(_2336ea198_Token __param_token, _2336ea198_Token __param_label): _field_token(__param_token), _field_label(__param_label) {}

	

	_233464770_ContSt(void) = default;

	bool operator==(const _233464770_ContSt &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	bool operator!=(const _233464770_ContSt &_Src) const { return !this->operator==(_Src); }
};


struct _2186ce186_ScopeLabel {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Ptr<_2186ce186_Label> _field_label{jule::Ptr<_2186ce186_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ptr<_2186ce186_ScopeChecker> _field_scope{jule::Ptr<_2186ce186_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_2186ce186_ScopeLabel(_2336ea198_Token __param_token, jule::Ptr<_2186ce186_Label> __param_label, jule::Int __param_pos, jule::Ptr<_2186ce186_ScopeChecker> __param_scope, jule::Bool __param_used): _field_token(__param_token), _field_label(__param_label), _field_pos(__param_pos), _field_scope(__param_scope), _field_used(__param_used) {}

	

	_2186ce186_ScopeLabel(void) = default;

	bool operator==(const _2186ce186_ScopeLabel &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	bool operator!=(const _2186ce186_ScopeLabel &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_If {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};


	_233464770_If(_2336ea198_Token __param_token, jule::Ptr<_233464770_Expr> __param_expr, jule::Ptr<_233464770_ScopeTree> __param_scope): _field_token(__param_token), _field_expr(__param_expr), _field_scope(__param_scope) {}

	

	_233464770_If(void) = default;

	bool operator==(const _233464770_If &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _233464770_If &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Else {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};


	_233464770_Else(_2336ea198_Token __param_token, jule::Ptr<_233464770_ScopeTree> __param_scope): _field_token(__param_token), _field_scope(__param_scope) {}

	

	_233464770_Else(void) = default;

	bool operator==(const _233464770_Else &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	bool operator!=(const _233464770_Else &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Directive {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_233464770_Directive(_2336ea198_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args): _field_token(__param_token), _field_tag(__param_tag), _field_args(__param_args) {}

	

	_233464770_Directive(void) = default;

	bool operator==(const _233464770_Directive &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	bool operator!=(const _233464770_Directive &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_TypeAliasDecl {
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Ptr<_233464770_CommentGroup> _field_doc_comments{jule::Ptr<_233464770_CommentGroup>()};


	_233464770_TypeAliasDecl(jule::Ptr<_233464770_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _2336ea198_Token __param_token, jule::Str __param_ident, jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Ptr<_233464770_CommentGroup> __param_doc_comments): _field_scope(__param_scope), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_token(__param_token), _field_ident(__param_ident), _field_kind(__param_kind), _field_doc_comments(__param_doc_comments) {}

	

	_233464770_TypeAliasDecl(void) = default;

	bool operator==(const _233464770_TypeAliasDecl &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	bool operator!=(const _233464770_TypeAliasDecl &_Src) const { return !this->operator==(_Src); }
};


struct _200ad0979_ArgParser {
	_200ad0979_FlagSet _field_set{_200ad0979_FlagSet()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};
	jule::Str _field_error{jule::Str()};
	jule::Slice<jule::Str> _field_content{jule::Slice<jule::Str>()};
	jule::Int _field_i{jule::Int()};


	_200ad0979_ArgParser(_200ad0979_FlagSet __param_set, jule::Slice<jule::Str> __param_args, jule::Str __param_error, jule::Slice<jule::Str> __param_content, jule::Int __param_i): _field_set(__param_set), _field_args(__param_args), _field_error(__param_error), _field_content(__param_content), _field_i(__param_i) {}

	

	_200ad0979_ArgParser(void) = default;

	std::tuple<jule::Int,jule::Bool> _method_parse_integer_0(jule::Str&,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>);
	std::tuple<jule::Uint,jule::Bool> _method_parse_integer_1(jule::Str&,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>);


	jule::Str _method_get_data(void);


	void _method_process_flag(jule::Trait<_200ad0979_CommonFlag>&);


	void _method_single_dash(jule::Str&);


	void _method_double_dash(jule::Str&);


	void _method_try_arg(void);


	void _method_parse(void);


	bool operator==(const _200ad0979_ArgParser &_Src) const {
		return 
			this->_field_set == _Src._field_set &&
			this->_field_args == _Src._field_args &&
			this->_field_error == _Src._field_error &&
			this->_field_content == _Src._field_content &&
			this->_field_i == _Src._field_i;
	}

	bool operator!=(const _200ad0979_ArgParser &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Case {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};
	jule::Slice<jule::Ptr<_233464770_Expr>> _field_exprs{jule::Slice<jule::Ptr<_233464770_Expr>>()};


	_233464770_Case(_2336ea198_Token __param_token, jule::Ptr<_233464770_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_233464770_Expr>> __param_exprs): _field_token(__param_token), _field_scope(__param_scope), _field_exprs(__param_exprs) {}

	

	_233464770_Case(void) = default;

	bool operator==(const _233464770_Case &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	bool operator!=(const _233464770_Case &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_UseDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_2336ea198_Token> _field_selected{jule::Slice<_2336ea198_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_233464770_UseDecl(_2336ea198_Token __param_token, jule::Str __param_link_path, jule::Str __param_alias, jule::Bool __param_full, jule::Slice<_2336ea198_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std): _field_token(__param_token), _field_link_path(__param_link_path), _field_alias(__param_alias), _field_full(__param_full), _field_selected(__param_selected), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std) {}

	

	_233464770_UseDecl(void) = default;

	bool operator==(const _233464770_UseDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_alias == _Src._field_alias &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	bool operator!=(const _233464770_UseDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_EnumItemDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};


	_233464770_EnumItemDecl(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Ptr<_233464770_Expr> __param_expr): _field_token(__param_token), _field_ident(__param_ident), _field_expr(__param_expr) {}

	

	_233464770_EnumItemDecl(void) = default;

	jule::Bool _method_auto_expr(void);


	bool operator==(const _233464770_EnumItemDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	bool operator!=(const _233464770_EnumItemDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_EnumDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};
	jule::Slice<jule::Ptr<_233464770_EnumItemDecl>> _field_items{jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>()};
	jule::Ptr<_233464770_CommentGroup> _field_doc_comments{jule::Ptr<_233464770_CommentGroup>()};


	_233464770_EnumDecl(_2336ea198_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_233464770_TypeDecl> __param_kind, jule::Slice<jule::Ptr<_233464770_EnumItemDecl>> __param_items, jule::Ptr<_233464770_CommentGroup> __param_doc_comments): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc_comments(__param_doc_comments) {}

	

	_233464770_EnumDecl(void) = default;

	jule::Bool _method_default_typed(void);


	bool operator==(const _233464770_EnumDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	bool operator!=(const _233464770_EnumDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_FieldDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_233464770_TypeDecl> _field_kind{jule::Ptr<_233464770_TypeDecl>()};


	_233464770_FieldDecl(_2336ea198_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_233464770_TypeDecl> __param_kind): _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {}

	

	_233464770_FieldDecl(void) = default;

	bool operator==(const _233464770_FieldDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _233464770_FieldDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_StructDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ptr<_233464770_FieldDecl>> _field_fields{jule::Slice<jule::Ptr<_233464770_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Ptr<_233464770_CommentGroup> _field_doc_comments{jule::Ptr<_233464770_CommentGroup>()};
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _field_generics{jule::Slice<jule::Ptr<_233464770_GenericDecl>>()};


	_233464770_StructDecl(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_233464770_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Ptr<_233464770_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_233464770_GenericDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc_comments(__param_doc_comments), _field_generics(__param_generics) {}

	

	_233464770_StructDecl(void) = default;

	bool operator==(const _233464770_StructDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	bool operator!=(const _233464770_StructDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_TraitDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ptr<_233464770_CommentGroup> _field_doc_comments{jule::Ptr<_233464770_CommentGroup>()};
	jule::Slice<jule::Ptr<_233464770_FnDecl>> _field_methods{jule::Slice<jule::Ptr<_233464770_FnDecl>>()};


	_233464770_TraitDecl(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ptr<_233464770_CommentGroup> __param_doc_comments, jule::Slice<jule::Ptr<_233464770_FnDecl>> __param_methods): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_doc_comments(__param_doc_comments), _field_methods(__param_methods) {}

	

	_233464770_TraitDecl(void) = default;

	bool operator==(const _233464770_TraitDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	bool operator!=(const _233464770_TraitDecl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Impl {
	_2336ea198_Token _field_base{_2336ea198_Token()};
	_2336ea198_Token _field_dest{_2336ea198_Token()};
	jule::Slice<jule::Ptr<_233464770_FnDecl>> _field_methods{jule::Slice<jule::Ptr<_233464770_FnDecl>>()};
	jule::Slice<jule::Ptr<_233464770_VarDecl>> _field_statics{jule::Slice<jule::Ptr<_233464770_VarDecl>>()};


	_233464770_Impl(_2336ea198_Token __param_base, _2336ea198_Token __param_dest, jule::Slice<jule::Ptr<_233464770_FnDecl>> __param_methods, jule::Slice<jule::Ptr<_233464770_VarDecl>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_233464770_Impl(void) = default;

	jule::Bool _method_is_trait_impl(void);


	jule::Bool _method_is_struct_impl(void);


	bool operator==(const _233464770_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	bool operator!=(const _233464770_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Expr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_kind{jule::Any()};


	_233464770_Expr(_2336ea198_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_233464770_Expr(void) = default;

	jule::Bool _method_is_fn_call(void);


	bool operator==(const _233464770_Expr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _233464770_Expr &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_TypeDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_kind{jule::Any()};


	_233464770_TypeDecl(_2336ea198_Token __param_token, jule::Any __param_kind): _field_token(__param_token), _field_kind(__param_kind) {}

	

	_233464770_TypeDecl(void) = default;

	bool operator==(const _233464770_TypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _233464770_TypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23441b814_AssignInfo {
	jule::Slice<_2336ea198_Token> _field_l{jule::Slice<_2336ea198_Token>()};
	jule::Slice<_2336ea198_Token> _field_r{jule::Slice<_2336ea198_Token>()};
	_2336ea198_Token _field_setter{_2336ea198_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_23441b814_AssignInfo(jule::Slice<_2336ea198_Token> __param_l, jule::Slice<_2336ea198_Token> __param_r, _2336ea198_Token __param_setter, jule::Bool __param_ok): _field_l(__param_l), _field_r(__param_r), _field_setter(__param_setter), _field_ok(__param_ok) {}

	

	_23441b814_AssignInfo(void) = default;

	bool operator==(const _23441b814_AssignInfo &_Src) const {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	bool operator!=(const _23441b814_AssignInfo &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_IdentTypeDecl {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _field_generics{jule::Slice<jule::Ptr<_233464770_TypeDecl>>()};


	_233464770_IdentTypeDecl(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_233464770_TypeDecl>> __param_generics): _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_generics(__param_generics) {}

	

	_233464770_IdentTypeDecl(void) = default;

	jule::Bool _method_is_prim(void);


	bool operator==(const _233464770_IdentTypeDecl &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	bool operator!=(const _233464770_IdentTypeDecl &_Src) const { return !this->operator==(_Src); }
};


struct _23461aa35_Field {
	jule::Ptr<_23461aa35_Field> self{};

	jule::Ptr<_23461aa35_Struct> _field_owner{jule::Ptr<_23461aa35_Struct>()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_200d010d9_TypeSymbol> _field_kind{jule::Ptr<_200d010d9_TypeSymbol>()};


	_23461aa35_Field(jule::Ptr<_23461aa35_Struct> __param_owner, _2336ea198_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ptr<_200d010d9_TypeSymbol> __param_kind): _field_owner(__param_owner), _field_token(__param_token), _field_public(__param_public), _field_mutable(__param_mutable), _field_ident(__param_ident), _field_kind(__param_kind) {
		this->self = jule::Ptr<_23461aa35_Field>::make(this, nullptr);

	}

	~_23461aa35_Field(void) { this->self.ref = nullptr; }

	_23461aa35_Field(void) { this->self = jule::Ptr<_23461aa35_Field>::make(this, nullptr); }

	jule::Ptr<_23461aa35_FieldIns> _method_instance(void);


	bool operator==(const _23461aa35_Field &_Src) const {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	bool operator!=(const _23461aa35_Field &_Src) const { return !this->operator==(_Src); }
};


struct _23461aa35_Struct {
	jule::Ptr<_23461aa35_Struct> self{};

	jule::Ptr<_1eec2c632_Sema> _field_sema{jule::Ptr<_1eec2c632_Sema>()};
	jule::Slice<jule::Ptr<_23461aa35_Struct>> _field_depends{jule::Slice<jule::Ptr<_23461aa35_Struct>>()};
	jule::Slice<jule::Ptr<_23461aa35_Struct>> _field_uses{jule::Slice<jule::Ptr<_23461aa35_Struct>>()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ptr<_23461aa35_Field>> _field_fields{jule::Slice<jule::Ptr<_23461aa35_Field>>()};
	jule::Slice<jule::Ptr<_2185d51ad_Fn>> _field_methods{jule::Slice<jule::Ptr<_2185d51ad_Fn>>()};
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_statics{jule::Slice<jule::Ptr<_200c58948_Var>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _field_generics{jule::Slice<jule::Ptr<_233464770_GenericDecl>>()};
	jule::Slice<jule::Ptr<_2185da36c_Trait>> _field_implements{jule::Slice<jule::Ptr<_2185da36c_Trait>>()};
	jule::Slice<jule::Ptr<_23461aa35_StructIns>> _field_instances{jule::Slice<jule::Ptr<_23461aa35_StructIns>>()};


	_23461aa35_Struct(jule::Ptr<_1eec2c632_Sema> __param_sema, jule::Slice<jule::Ptr<_23461aa35_Struct>> __param_depends, jule::Slice<jule::Ptr<_23461aa35_Struct>> __param_uses, _2336ea198_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ptr<_23461aa35_Field>> __param_fields, jule::Slice<jule::Ptr<_2185d51ad_Fn>> __param_methods, jule::Slice<jule::Ptr<_200c58948_Var>> __param_statics, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ptr<_233464770_GenericDecl>> __param_generics, jule::Slice<jule::Ptr<_2185da36c_Trait>> __param_implements, jule::Slice<jule::Ptr<_23461aa35_StructIns>> __param_instances): _field_sema(__param_sema), _field_depends(__param_depends), _field_uses(__param_uses), _field_token(__param_token), _field_ident(__param_ident), _field_fields(__param_fields), _field_methods(__param_methods), _field_statics(__param_statics), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_directives(__param_directives), _field_doc(__param_doc), _field_generics(__param_generics), _field_implements(__param_implements), _field_instances(__param_instances) {
		this->self = jule::Ptr<_23461aa35_Struct>::make(this, nullptr);

	}

	~_23461aa35_Struct(void) { this->self.ref = nullptr; }

	_23461aa35_Struct(void) { this->self = jule::Ptr<_23461aa35_Struct>::make(this, nullptr); }

	jule::Ptr<_23461aa35_StructIns> _method_instance(void);


	jule::Ptr<_23461aa35_StructIns> _method_append_instance(jule::Ptr<_23461aa35_StructIns>&);


	jule::Ptr<_2185d51ad_Fn> _method_find_method(jule::Str,jule::Bool);


	jule::Ptr<_200c58948_Var> _method_find_static(jule::Str);


	jule::Ptr<_23461aa35_Field> _method_find_field(jule::Str);


	jule::Bool _method_is_implements(jule::Ptr<_2185da36c_Trait>);


	jule::Bool _method_is_derives(jule::Str);


	jule::Bool _method_is_uses(jule::Ptr<_23461aa35_Struct>);


	jule::Bool _method_has_ref_accessible(void);


	bool operator==(const _23461aa35_Struct &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_instances == _Src._field_instances;
	}

	bool operator!=(const _23461aa35_Struct &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_FnCallExpr {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Ptr<_233464770_Expr> _field_expr{jule::Ptr<_233464770_Expr>()};
	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _field_generics{jule::Slice<jule::Ptr<_233464770_TypeDecl>>()};
	jule::Slice<jule::Ptr<_233464770_Expr>> _field_args{jule::Slice<jule::Ptr<_233464770_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_233464770_FnCallExpr(_2336ea198_Token __param_token, jule::Ptr<_233464770_Expr> __param_expr, jule::Slice<jule::Ptr<_233464770_TypeDecl>> __param_generics, jule::Slice<jule::Ptr<_233464770_Expr>> __param_args, jule::Bool __param_concurrent): _field_token(__param_token), _field_expr(__param_expr), _field_generics(__param_generics), _field_args(__param_args), _field_concurrent(__param_concurrent) {}

	

	_233464770_FnCallExpr(void) = default;

	bool operator==(const _233464770_FnCallExpr &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	bool operator!=(const _233464770_FnCallExpr &_Src) const { return !this->operator==(_Src); }
};


struct _2185d51ad_Param {
	jule::Ptr<_2185d51ad_Param> self{};

	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ptr<_200d010d9_TypeSymbol> _field_kind{jule::Ptr<_200d010d9_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_2185d51ad_Param(_2336ea198_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ptr<_200d010d9_TypeSymbol> __param_kind, jule::Str __param_ident): _field_token(__param_token), _field_mutable(__param_mutable), _field_variadic(__param_variadic), _field_reference(__param_reference), _field_kind(__param_kind), _field_ident(__param_ident) {
		this->self = jule::Ptr<_2185d51ad_Param>::make(this, nullptr);

	}

	~_2185d51ad_Param(void) { this->self.ref = nullptr; }

	_2185d51ad_Param(void) { this->self = jule::Ptr<_2185d51ad_Param>::make(this, nullptr); }

	jule::Ptr<_2185d51ad_ParamIns> _method_instance(void);


	jule::Bool _method_is_self(void);


	jule::Bool _method_is_ref(void);


	bool operator==(const _2185d51ad_Param &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	bool operator!=(const _2185d51ad_Param &_Src) const { return !this->operator==(_Src); }
};


struct _2185d51ad_Fn {
	jule::Ptr<_2185d51ad_Fn> self{};

	jule::Ptr<_1eec2c632_Sema> _field_sema{jule::Ptr<_1eec2c632_Sema>()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ptr<_233464770_ScopeTree> _field_scope{jule::Ptr<_233464770_ScopeTree>()};
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _field_generics{jule::Slice<jule::Ptr<_233464770_GenericDecl>>()};
	jule::Ptr<_2185d51ad_RetType> _field_result{jule::Ptr<_2185d51ad_RetType>()};
	jule::Slice<jule::Ptr<_2185d51ad_Param>> _field_params{jule::Slice<jule::Ptr<_2185d51ad_Param>>()};
	jule::Ptr<_23461aa35_Struct> _field_owner{jule::Ptr<_23461aa35_Struct>()};
	jule::Slice<jule::Ptr<_2185d51ad_FnIns>> _field_instances{jule::Slice<jule::Ptr<_2185d51ad_FnIns>>()};


	_2185d51ad_Fn(jule::Ptr<_1eec2c632_Sema> __param_sema, _2336ea198_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Str __param_doc, jule::Ptr<_233464770_ScopeTree> __param_scope, jule::Slice<jule::Ptr<_233464770_GenericDecl>> __param_generics, jule::Ptr<_2185d51ad_RetType> __param_result, jule::Slice<jule::Ptr<_2185d51ad_Param>> __param_params, jule::Ptr<_23461aa35_Struct> __param_owner, jule::Slice<jule::Ptr<_2185d51ad_FnIns>> __param_instances): _field_sema(__param_sema), _field_token(__param_token), _field_global(__param_global), _field_unsafety(__param_unsafety), _field_public(__param_public), _field_cpp_linked(__param_cpp_linked), _field_statically(__param_statically), _field_ident(__param_ident), _field_directives(__param_directives), _field_doc(__param_doc), _field_scope(__param_scope), _field_generics(__param_generics), _field_result(__param_result), _field_params(__param_params), _field_owner(__param_owner), _field_instances(__param_instances) {
		this->self = jule::Ptr<_2185d51ad_Fn>::make(this, nullptr);

	}

	~_2185d51ad_Fn(void) { this->self.ref = nullptr; }

	_2185d51ad_Fn(void) { this->self = jule::Ptr<_2185d51ad_Fn>::make(this, nullptr); }

	jule::Bool _method_is_void(void);


	jule::Bool _method_is_method(void);


	jule::Bool _method_is_entry_point(void);


	jule::Bool _method_is_init(void);


	jule::Bool _method_is_anon(void);


	jule::Bool _method_any_var(void);


	jule::Bool _method_parameters_uses_generics(void);


	jule::Bool _method_result_uses_generics(void);


	jule::Ptr<_2185d51ad_FnIns> _method_instance_force(void);


	jule::Ptr<_2185d51ad_FnIns> _method_instance(void);


	std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ptr<_2185d51ad_FnIns>&);


	bool operator==(const _2185d51ad_Fn &_Src) const {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_instances == _Src._field_instances;
	}

	bool operator!=(const _2185d51ad_Fn &_Src) const { return !this->operator==(_Src); }
};


struct _233464770_Node {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Any _field_data{jule::Any()};


	_233464770_Node(_2336ea198_Token __param_token, jule::Any __param_data): _field_token(__param_token), _field_data(__param_data) {}

	

	_233464770_Node(void) = default;

	jule::Bool _method_is_decl(void);


	jule::Bool _method_is_comment(void);


	jule::Bool _method_is_impl(void);


	jule::Bool _method_is_use_decl(void);


	bool operator==(const _233464770_Node &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	bool operator!=(const _233464770_Node &_Src) const { return !this->operator==(_Src); }
};


struct _21862cb1d_Pass {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_text{jule::Str()};


	_21862cb1d_Pass(_2336ea198_Token __param_token, jule::Str __param_text): _field_token(__param_token), _field_text(__param_text) {}

	

	_21862cb1d_Pass(void) = default;

	bool operator==(const _21862cb1d_Pass &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	bool operator!=(const _21862cb1d_Pass &_Src) const { return !this->operator==(_Src); }
};


struct _2185da36c_Trait: public _200d010d9_Kind {
	jule::Ptr<_2185da36c_Trait> self{};

	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ptr<_2185d51ad_Fn>> _field_methods{jule::Slice<jule::Ptr<_2185d51ad_Fn>>()};
	jule::Slice<jule::Ptr<_23461aa35_Struct>> _field_implemented{jule::Slice<jule::Ptr<_23461aa35_Struct>>()};


	_2185da36c_Trait(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_doc, jule::Slice<jule::Ptr<_2185d51ad_Fn>> __param_methods, jule::Slice<jule::Ptr<_23461aa35_Struct>> __param_implemented): _field_token(__param_token), _field_ident(__param_ident), _field_public(__param_public), _field_mutable(__param_mutable), _field_doc(__param_doc), _field_methods(__param_methods), _field_implemented(__param_implemented) {
		this->self = jule::Ptr<_2185da36c_Trait>::make(this, nullptr);

	}

	~_2185da36c_Trait(void) { this->self.ref = nullptr; }

	_2185da36c_Trait(void) { this->self = jule::Ptr<_2185da36c_Trait>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Bool _method_is_builtin(void);


	jule::Ptr<_2185d51ad_Fn> _method_find_method(jule::Str);


	bool operator==(const _2185da36c_Trait &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	bool operator!=(const _2185da36c_Trait &_Src) const { return !this->operator==(_Src); }
};


struct _218848bd5_ImportInfo: public _1d6734eee_Lookup {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Str _field_alias{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_2336ea198_Token> _field_selected{jule::Slice<_2336ea198_Token>()};
	jule::Ptr<_218848bd5_Package> _field_package{jule::Ptr<_218848bd5_Package>()};


	_218848bd5_ImportInfo(_2336ea198_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Str __param_alias, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_2336ea198_Token> __param_selected, jule::Ptr<_218848bd5_Package> __param_package): _field_token(__param_token), _field_path(__param_path), _field_link_path(__param_link_path), _field_ident(__param_ident), _field_alias(__param_alias), _field_duplicate(__param_duplicate), _field_cpp_linked(__param_cpp_linked), _field_std(__param_std), _field_import_all(__param_import_all), _field_selected(__param_selected), _field_package(__param_package) {}

	

	_218848bd5_ImportInfo(void) = default;

	jule::Ptr<_218848bd5_ImportInfo> _method_find_package(jule::Str);


	jule::Ptr<_218848bd5_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>);


	jule::Ptr<_200c58948_Var> _method_find_var(jule::Str,jule::Bool);


	jule::Ptr<_200d010d9_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	jule::Ptr<_23461aa35_Struct> _method_find_struct(jule::Str,jule::Bool);


	jule::Ptr<_2185d51ad_Fn> _method_find_fn(jule::Str,jule::Bool);


	jule::Ptr<_2185da36c_Trait> _method_find_trait(jule::Str);


	jule::Ptr<_2186be3da_Enum> _method_find_enum(jule::Str);


	jule::Bool _method_is_lookupable(jule::Str);


	jule::Bool _method_exist_ident(jule::Str);


	bool operator==(const _218848bd5_ImportInfo &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_alias == _Src._field_alias &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	bool operator!=(const _218848bd5_ImportInfo &_Src) const { return !this->operator==(_Src); }
};


struct _2186be3da_EnumItem {
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_218751758_Value> _field_value{jule::Ptr<_218751758_Value>()};


	_2186be3da_EnumItem(_2336ea198_Token __param_token, jule::Str __param_ident, jule::Ptr<_218751758_Value> __param_value): _field_token(__param_token), _field_ident(__param_ident), _field_value(__param_value) {}

	

	_2186be3da_EnumItem(void) = default;

	jule::Bool _method_auto_expr(void);


	bool operator==(const _2186be3da_EnumItem &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	bool operator!=(const _2186be3da_EnumItem &_Src) const { return !this->operator==(_Src); }
};


struct _2186be3da_Enum: public _200d010d9_Kind {
	jule::Ptr<_2186be3da_Enum> self{};

	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ptr<_200d010d9_TypeSymbol> _field_kind{jule::Ptr<_200d010d9_TypeSymbol>()};
	jule::Slice<jule::Ptr<_2186be3da_EnumItem>> _field_items{jule::Slice<jule::Ptr<_2186be3da_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_2186be3da_Enum(_2336ea198_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ptr<_200d010d9_TypeSymbol> __param_kind, jule::Slice<jule::Ptr<_2186be3da_EnumItem>> __param_items, jule::Str __param_doc): _field_token(__param_token), _field_public(__param_public), _field_ident(__param_ident), _field_kind(__param_kind), _field_items(__param_items), _field_doc(__param_doc) {
		this->self = jule::Ptr<_2186be3da_Enum>::make(this, nullptr);

	}

	~_2186be3da_Enum(void) { this->self.ref = nullptr; }

	_2186be3da_Enum(void) { this->self = jule::Ptr<_2186be3da_Enum>::make(this, nullptr); }

	jule::Str _method_to_str(void);


	jule::Bool _method_equals(jule::Ptr<_200d010d9_TypeKind>);


	jule::Ptr<_2186be3da_EnumItem> _method_find_item(jule::Str);


	bool operator==(const _2186be3da_Enum &_Src) const {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	bool operator!=(const _2186be3da_Enum &_Src) const { return !this->operator==(_Src); }
};


struct _2185e0064_Impl {
	_2336ea198_Token _field_base{_2336ea198_Token()};
	_2336ea198_Token _field_dest{_2336ea198_Token()};
	jule::Slice<jule::Ptr<_2185d51ad_Fn>> _field_methods{jule::Slice<jule::Ptr<_2185d51ad_Fn>>()};
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_statics{jule::Slice<jule::Ptr<_200c58948_Var>>()};


	_2185e0064_Impl(_2336ea198_Token __param_base, _2336ea198_Token __param_dest, jule::Slice<jule::Ptr<_2185d51ad_Fn>> __param_methods, jule::Slice<jule::Ptr<_200c58948_Var>> __param_statics): _field_base(__param_base), _field_dest(__param_dest), _field_methods(__param_methods), _field_statics(__param_statics) {}

	

	_2185e0064_Impl(void) = default;

	jule::Bool _method_is_trait_impl(void);


	jule::Bool _method_is_struct_impl(void);


	bool operator==(const _2185e0064_Impl &_Src) const {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods &&
			this->_field_statics == _Src._field_statics;
	}

	bool operator!=(const _2185e0064_Impl &_Src) const { return !this->operator==(_Src); }
};


struct _200c58948_Var {
	jule::Ptr<_2186ce186_Scope> _field_scope{jule::Ptr<_2186ce186_Scope>()};
	_2336ea198_Token _field_token{_2336ea198_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ptr<_200d010d9_TypeSymbol> _field_kind{jule::Ptr<_200d010d9_TypeSymbol>()};
	jule::Ptr<_218751758_Value> _field_value{jule::Ptr<_218751758_Value>()};
	jule::Ptr<_21862cb1d_ReferenceStack> _field_references{jule::Ptr<_21862cb1d_ReferenceStack>()};
	jule::Slice<jule::Ptr<_233464770_Directive>> _field_directives{jule::Slice<jule::Ptr<_233464770_Directive>>()};
	jule::Ptr<_200c58948_IterRelation> _field_iter_relation{jule::Ptr<_200c58948_IterRelation>()};
	jule::Slice<jule::Ptr<_200c58948_Var>> _field_depends{jule::Slice<jule::Ptr<_200c58948_Var>>()};


	_200c58948_Var(jule::Ptr<_2186ce186_Scope> __param_scope, _2336ea198_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ptr<_200d010d9_TypeSymbol> __param_kind, jule::Ptr<_218751758_Value> __param_value, jule::Ptr<_21862cb1d_ReferenceStack> __param_references, jule::Slice<jule::Ptr<_233464770_Directive>> __param_directives, jule::Ptr<_200c58948_IterRelation> __param_iter_relation, jule::Slice<jule::Ptr<_200c58948_Var>> __param_depends): _field_scope(__param_scope), _field_token(__param_token), _field_ident(__param_ident), _field_cpp_linked(__param_cpp_linked), _field_constant(__param_constant), _field_mutable(__param_mutable), _field_public(__param_public), _field_used(__param_used), _field_statically(__param_statically), _field_reference(__param_reference), _field_doc(__param_doc), _field_kind(__param_kind), _field_value(__param_value), _field_references(__param_references), _field_directives(__param_directives), _field_iter_relation(__param_iter_relation), _field_depends(__param_depends) {}

	

	_200c58948_Var(void) = default;

	jule::Bool _method_is_initialized(void);


	jule::Bool _method_is_type_inferred(void);


	bool operator==(const _200c58948_Var &_Src) const {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_directives == _Src._field_directives &&
			this->_field_iter_relation == _Src._field_iter_relation &&
			this->_field_depends == _Src._field_depends;
	}

	bool operator!=(const _200c58948_Var &_Src) const { return !this->operator==(_Src); }
};


jule::Bool _2320d9d97_is_surrogate(jule::I32);
jule::I32 _2320d9d97_decode_rune(jule::I32,jule::I32);
std::tuple<jule::I32,jule::I32> _2320d9d97_encode_rune(jule::I32);
jule::Slice<jule::U16> _2320d9d97_encode(jule::Slice<jule::I32>);
jule::Slice<jule::I32> _2320d9d97_decode(jule::Slice<jule::U16>);
jule::Slice<jule::U16> _2320d9d97_append_rune(jule::Slice<jule::U16>,jule::I32);
void* _23206720e_malloc(jule::Uint);
void* _23206720e_calloc(jule::Uint,jule::Uint);
void* _23206720e_realloc(void*,jule::Uint);
void _23206720e_free(void*);
jule::Str _23209d4a9_type_id(jule::Any);
jule::Slice<jule::U16> _2320c1d90_utf16_from_str(jule::Str);
jule::Str _2320c1d90_utf16_to_str(jule::Slice<jule::U16>);
jule::Str _2320c1d90_u16_ptr_to_str(jule::U16*);
jule::Str _2320c1d90_byte_ptr_to_str(jule::U8*);
jule::Int _2320c28da_puts(jule::Str);
jule::Int _232037124_get_last_errno(void);
jule::Int _23204ea43_stat(jule::U8*,struct stat*);
jule::Int _23204ea43_open(jule::U8*,jule::Int,jule::Int);
jule::U8* _23204ea43_getcwd(jule::U8*,jule::Uint);
DIR* _23204ea43_opendir(jule::U8*);
struct dirent* _23204ea43_readdir(DIR*);
jule::Int _23204ea43_closedir(DIR*);
jule::Int _23204ea43_chdir(jule::U8*);
jule::Int _23204ea43_remove(jule::U8*);
jule::Int _23204ea43_mkdir(jule::U8*,jule::Int);
jule::Int _23204ea43_rmdir(jule::U8*);
jule::Int _23204ea43_unlink(jule::U8*);
jule::I64 _23206ca0b_seek(jule::Int,jule::I64,jule::Int);
jule::Int _23206ca0b_read(jule::Int,void*,jule::Uint);
jule::Int _23206ca0b_close(jule::Int);
jule::Int _23206ca0b_write(jule::Int,void*,jule::Uint);
void _23206ca0b_exit(jule::Int);
jule::Int _23203729a_get_last_os_error(void);
jule::Slice<jule::Str> _232036ed1_args(void);
jule::Slice<jule::Str> _232036ed1_env(void);
std::tuple<jule::Str,jule::Int> _232036ed1_working_dir(void);
jule::Int _232036ed1_set_working_dir(jule::Str);
std::tuple<jule::Str,jule::Int> _232048a92___getwd(void);
jule::Int _232048a92___chdir(jule::Str);
jule::Str _231ed2cb2_clean(jule::Str);
jule::Str _231ed2cb2_to_slash(jule::Str);
jule::Str _231ed2cb2_from_slash(jule::Str);
jule::Str _231ed2cb2_join(jule::Slice<jule::Str>);
jule::Str _231ed2cb2_ext(jule::Str);
std::tuple<jule::Str,jule::Bool> _231ed2cb2_abs(jule::Str);
jule::Str _231ed2cb2_base(jule::Str);
jule::Str _231ed2cb2_dir(jule::Str);
jule::Str _231ed2cb2_volume_name(jule::Str);
jule::Bool _231ec91d7_is_path_sep(jule::U8);
jule::Bool _231ec91d7_is_abs(jule::Str);
jule::Int _231ec91d7_volume_name_len(jule::Str);
std::tuple<jule::Str,jule::Bool> _231ec91d7___abs(jule::Str);
jule::Str _231ec91d7_str_join(jule::Slice<jule::Str>,jule::Str);
jule::Str _231ec91d7___join(jule::Slice<jule::Str>);
void _23200a669_exit(jule::Int);
jule::Str _23200a669_executable(void);
jule::Bool _231e4edb6_is_std_header_path(jule::Str);
jule::Bool _231e4edb6_is_valid_header_ext(jule::Str);
jule::Bool _231e4edb6_is_valid_cpp_ext(jule::Str);
jule::Str _231e4202e_logf(jule::Str,jule::Slice<jule::Any>);
jule::Str _231e4202e_arg_to_str(jule::Any);
jule::Int _231e4202e_find_next_fmt(jule::Str);
jule::Str _231e4202e_apply_fmt(jule::Str,jule::Slice<jule::Any>);
jule::Bool _231e59e26_is_top_directive(jule::Str);
jule::Bool _231e8d3bb_is_windows(jule::Str);
jule::Bool _231e8d3bb_is_darwin(jule::Str);
jule::Bool _231e8d3bb_is_linux(jule::Str);
jule::Bool _231e8d3bb_is_i386(jule::Str);
jule::Bool _231e8d3bb_is_amd64(jule::Str);
jule::Bool _231e8d3bb_is_arm64(jule::Str);
jule::Bool _231e8d3bb_is_unix(jule::Str);
jule::Bool _231e8d3bb_is_32bit(jule::Str);
jule::Bool _231e8d3bb_is_64bit(jule::Str);
void _231e881a7_exit_err(jule::Str);
void _231e881a7_init(void);
jule::Bool _231ea2138_is_jule(jule::Str);
jule::Int _2335950dc_leading_zeros(jule::Uint);
jule::Int _2335950dc_leading_zeros8(jule::U8);
jule::Int _2335950dc_leading_zeros16(jule::U16);
jule::Int _2335950dc_leading_zeros32(jule::U32);
jule::Int _2335950dc_leading_zeros64(jule::U64);
jule::Int _2335950dc_trailing_zeros(jule::Uint);
jule::Int _2335950dc_trailing_zeros8(jule::U8);
jule::Int _2335950dc_trailing_zeros16(jule::U16);
jule::Int _2335950dc_trailing_zeros32(jule::U32);
jule::Int _2335950dc_trailing_zeros64(jule::U64);
jule::Int _2335950dc_ones_count(jule::Uint);
jule::Int _2335950dc_ones_count8(jule::U8);
jule::Int _2335950dc_ones_count16(jule::U16);
jule::Int _2335950dc_ones_count32(jule::U32);
jule::Int _2335950dc_ones_count64(jule::U64);
jule::Uint _2335950dc_rotate_left(jule::Uint,jule::Int);
jule::U8 _2335950dc_rotate_left8(jule::U8,jule::Int);
jule::U16 _2335950dc_rotate_left16(jule::U16,jule::Int);
jule::U32 _2335950dc_rotate_left32(jule::U32,jule::Int);
jule::U64 _2335950dc_rotate_left64(jule::U64,jule::Int);
jule::Uint _2335950dc_reverse(jule::Uint);
jule::U8 _2335950dc_reverse8(jule::U8);
jule::U16 _2335950dc_reverse16(jule::U16);
jule::U32 _2335950dc_reverse32(jule::U32);
jule::U64 _2335950dc_reverse64(jule::U64);
jule::Uint _2335950dc_reverse_bytes(jule::Uint);
jule::U16 _2335950dc_reverse_bytes16(jule::U16);
jule::U32 _2335950dc_reverse_bytes32(jule::U32);
jule::U64 _2335950dc_reverse_bytes64(jule::U64);
jule::Int _2335950dc_len(jule::Uint);
jule::Int _2335950dc_len8(jule::U8);
jule::Int _2335950dc_len16(jule::U16);
jule::Int _2335950dc_len32(jule::U32);
jule::Int _2335950dc_len64(jule::U64);
std::tuple<jule::Uint,jule::Uint> _2335950dc_add(jule::Uint,jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _2335950dc_add32(jule::U32,jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _2335950dc_add64(jule::U64,jule::U64,jule::U64);
std::tuple<jule::Uint,jule::Uint> _2335950dc_sub(jule::Uint,jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _2335950dc_sub32(jule::U32,jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _2335950dc_sub64(jule::U64,jule::U64,jule::U64);
std::tuple<jule::Uint,jule::Uint> _2335950dc_mul(jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _2335950dc_mul32(jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _2335950dc_mul64(jule::U64,jule::U64);
std::tuple<jule::Uint,jule::Uint> _2335950dc_div(jule::Uint,jule::Uint,jule::Uint);
std::tuple<jule::U32,jule::U32> _2335950dc_div32(jule::U32,jule::U32,jule::U32);
std::tuple<jule::U64,jule::U64> _2335950dc_div64(jule::U64,jule::U64,jule::U64);
jule::Uint _2335950dc_rem(jule::Uint,jule::Uint,jule::Uint);
jule::U32 _2335950dc_rem32(jule::U32,jule::U32,jule::U32);
jule::U64 _2335950dc_rem64(jule::U64,jule::U64,jule::U64);
jule::F64 _232ee5c3b_atanh(jule::F64);
jule::U32 _23300ecdd_f32_bits(jule::F32);
jule::F32 _23300ecdd_f32_from_bits(jule::U32);
jule::U64 _23300ecdd_f64_bits(jule::F64);
jule::F64 _23300ecdd_f64_from_bits(jule::U64);
jule::F64 _2330179a5_cos(jule::F64);
jule::F64 _2330179a5_sin(jule::F64);
jule::F64 _232ee6e4b_tan(jule::F64);
jule::F64 _233036199_mod(jule::F64,jule::F64);
std::tuple<jule::F64,jule::Int> _2330333b6_frexp(jule::F64);
jule::F32 _2330705bd_nextafter32(jule::F32,jule::F32);
jule::F64 _2330705bd_nextafter(jule::F64,jule::F64);
jule::F64 _233074c43_copysign(jule::F64,jule::F64);
std::tuple<jule::U64,jule::F64> _23308d1ac_trig_reduce(jule::F64);
jule::F64 _23307797c_atan2(jule::F64,jule::F64);
jule::F64 _2330942b2_floor(jule::F64);
jule::F64 _2330942b2_ceil(jule::F64);
jule::F64 _2330942b2_trunc(jule::F64);
jule::F64 _2330942b2_round(jule::F64);
jule::F64 _2330942b2_round_even(jule::F64);
jule::F64 _2330d8e50_nan(void);
jule::Bool _2330d8e50_is_nan(jule::F64);
jule::F64 _2330d8e50_inf(jule::Int);
jule::Bool _2330d8e50_is_inf(jule::F64,jule::Int);
std::tuple<jule::F64,jule::Int> _2330d8e50_normalize(jule::F64);
std::tuple<jule::F64,jule::F64> _2330c1aa3_sincos(jule::F64);
jule::F64 _2330da748_dim(jule::F64,jule::F64);
jule::F64 _2330da748_max(jule::F64,jule::F64);
jule::F64 _2330da748_min(jule::F64,jule::F64);
jule::F64 _2330e70b2_log(jule::F64);
jule::F64 _233145b9e_expm1(jule::F64);
jule::F64 _23318b640_abs(jule::F64);
jule::F64 _233133cd0_j1(jule::F64);
jule::F64 _233133cd0_y1(jule::F64);
jule::F64 _233133cd0_pone(jule::F64);
jule::F64 _233133cd0_qone(jule::F64);
jule::U64 _2331e2b91_zero(jule::U64);
jule::U64 _2331e2b91_nonzero(jule::U64);
std::tuple<jule::U64,jule::U64> _2331e2b91_shl(jule::U64,jule::U64,jule::Uint);
std::tuple<jule::U64,jule::U64> _2331e2b91_shr(jule::U64,jule::U64,jule::Uint);
std::tuple<jule::U64,jule::U64> _2331e2b91_shrcompress(jule::U64,jule::U64,jule::Uint);
jule::I32 _2331e2b91_lz(jule::U64,jule::U64);
std::tuple<jule::U32,jule::I32,jule::U64> _2331e2b91_split(jule::U64);
jule::F64 _2331e2b91_fma(jule::F64,jule::F64,jule::F64);
std::tuple<jule::F64,jule::F64> _2331e779a_modf(jule::F64);
jule::F64 _2331eb051_log10(jule::F64);
jule::F64 _2331eb051_log2(jule::F64);
jule::F64 _23322c879_hypot(jule::F64,jule::F64);
jule::F64 _23323e4c3_j0(jule::F64);
jule::F64 _23323e4c3_y0(jule::F64);
jule::F64 _23323e4c3_pzero(jule::F64);
jule::F64 _23323e4c3_qzero(jule::F64);
jule::F64 _23329d686_ldexp(jule::F64,jule::Int);
jule::Bool _2332b9e11_signbit(jule::F64);
jule::F64 _2332aa40c_sinh(jule::F64);
jule::F64 _2332aa40c_cosh(jule::F64);
std::tuple<jule::F64,jule::Int> _2332536d5_lgamma(jule::F64);
jule::F64 _2332536d5_sin_pi(jule::F64);
jule::F64 _233334134_acosh(jule::F64);
jule::F64 _2333413d8_tanh(jule::F64);
jule::F64 _23334d6d1_cbrt(jule::F64);
jule::F64 _2333432db_pow(jule::F64,jule::F64);
jule::Bool _2333432db_is_odd_int(jule::F64);
jule::F64 _233371db9_exp(jule::F64);
jule::F64 _233371db9_exp2(jule::F64);
jule::F64 _233371db9_expmulti(jule::F64,jule::F64,jule::Int);
jule::F64 _23339d8da_log1p(jule::F64);
std::tuple<jule::F64,jule::F64> _2333c338d_stirling(jule::F64);
jule::F64 _2333c338d_gamma(jule::F64);
jule::Bool _2333c338d_is_neg_int(jule::F64);
jule::F64 _233439e0a_erfinv(jule::F64);
jule::F64 _233439e0a_erfcinv(jule::F64);
jule::F64 _233459c3d_erf(jule::F64);
jule::F64 _233459c3d_erfc(jule::F64);
jule::F64 _23349c2be_pow10(jule::Int);
jule::F64 _23345a568_sqrt(jule::F64);
jule::F64 _2334ba056_logb(jule::F64);
jule::Int _2334ba056_ilogb(jule::F64);
jule::Int _2334ba056__ilogb(jule::F64);
jule::F64 _2334d0973_jn(jule::Int,jule::F64);
jule::F64 _2334d0973_yn(jule::Int,jule::F64);
jule::F64 _2334c5e96_remainder(jule::F64,jule::F64);
jule::F64 _2334de278_xatan(jule::F64);
jule::F64 _2334de278_satan(jule::F64);
jule::F64 _2334de278_atan(jule::F64);
jule::F64 _233540076_asin(jule::F64);
jule::F64 _233540076_acos(jule::F64);
jule::F64 _2335590c3_asinh(jule::F64);
std::tuple<jule::Bool,jule::Int> _231e547b1_conv_bool(jule::Str);
jule::Str _231e547b1_fmt_bool(jule::Bool);
jule::Str _231e5e5ce_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
jule::Slice<jule::U8> _231e5e5ce_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
jule::Slice<jule::U8> _231e5e5ce_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_231e5e5ce_FloatInfo&);
jule::Slice<jule::U8> _231e5e5ce_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_231e5e5ce_DecimalSlice,jule::Int,jule::U8);
void _231e5e5ce_round_shortest(_232e74d1e_Decimal&,jule::U64,jule::Int,_231e5e5ce_FloatInfo&);
jule::Slice<jule::U8> _231e5e5ce_fmt_e(jule::Slice<jule::U8>,jule::Bool,_231e5e5ce_DecimalSlice,jule::Int,jule::U8);
jule::Slice<jule::U8> _231e5e5ce_fmt_f(jule::Slice<jule::U8>,jule::Bool,_231e5e5ce_DecimalSlice,jule::Int);
jule::Slice<jule::U8> _231e5e5ce_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_231e5e5ce_FloatInfo&);
jule::Slice<jule::U8> _231e5e5ce_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_231e5e5ce_FloatInfo&);
jule::Int _231e5e5ce_min(jule::Int,jule::Int);
jule::Int _231e5e5ce_max(jule::Int,jule::Int);
jule::U8 _231e6dda2_lower(jule::U8);
std::tuple<jule::U64,jule::Int> _231e6dda2_parse_uint(jule::Str,jule::Int,jule::Int);
std::tuple<jule::I64,jule::Int> _231e6dda2_parse_int(jule::Str,jule::Int,jule::Int);
std::tuple<jule::F64,jule::Bool> _232172407_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F32,jule::Bool> _232172407_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
jule::Int _232d42e62_common_prefix_len_ignore_case(jule::Str,jule::Str);
std::tuple<jule::F64,jule::Int,jule::Bool> _232d42e62_special(jule::Str);
std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _232d42e62_read_float(jule::Str);
std::tuple<jule::F64,jule::Bool> _232d42e62_atof64_exact(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F64,jule::Bool> _232d42e62_atof64exact(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F32,jule::Bool> _232d42e62_atof32exact(jule::U64,jule::Int,jule::Bool);
std::tuple<jule::F64,jule::Int> _232d42e62_atof_hex(jule::Str,_231e5e5ce_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
std::tuple<jule::F32,jule::Int,jule::Int> _232d42e62_atof32(jule::Str);
std::tuple<jule::F64,jule::Int,jule::Int> _232d42e62_atof64(jule::Str);
std::tuple<jule::F64,jule::Int,jule::Int> _232d42e62_parse_float_prefix(jule::Str,jule::Int);
std::tuple<jule::F64,jule::Int> _232d42e62_parse_float(jule::Str,jule::Int);
void _232dd8d0a_ryu_ftoa_fixed32(_231e5e5ce_DecimalSlice&,jule::U32,jule::Int,jule::Int);
void _232dd8d0a_ryu_ftoa_fixed64(_231e5e5ce_DecimalSlice&,jule::U64,jule::Int,jule::Int);
void _232dd8d0a_format_decimal(_231e5e5ce_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
void _232dd8d0a_ryu_ftoa_shortest(_231e5e5ce_DecimalSlice&,jule::U64,jule::Int,_231e5e5ce_FloatInfo&);
jule::Int _232dd8d0a_mul_by_log2_log10(jule::Int);
jule::Int _232dd8d0a_mul_by_log10_log2(jule::Int);
std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _232dd8d0a_compute_bounds(jule::U64,jule::Int,_231e5e5ce_FloatInfo&);
void _232dd8d0a_ryu_digits(_231e5e5ce_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
void _232dd8d0a_ryu_digits32(_231e5e5ce_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
std::tuple<jule::U32,jule::Int,jule::Bool> _232dd8d0a_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
std::tuple<jule::U64,jule::Int,jule::Bool> _232dd8d0a_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
jule::Bool _232dd8d0a_divisible_by_pow5(jule::U64,jule::Int);
std::tuple<jule::U32,jule::U32> _232dd8d0a_divmod1e9(jule::U64);
jule::Int _232e74d1e_digit_zero(jule::Slice<jule::U8>);
void _232e74d1e_trim(_232e74d1e_Decimal&);
void _232e74d1e_right_shift(_232e74d1e_Decimal&,jule::Uint);
jule::Bool _232e74d1e_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
void _232e74d1e_left_shift(_232e74d1e_Decimal&,jule::Uint);
jule::Bool _232e74d1e_should_round_up(_232e74d1e_Decimal&,jule::Int);
jule::Str _232e766a0_fmt_uint(jule::U64,jule::Int);
jule::Str _232e766a0_fmt_int(jule::I64,jule::Int);
jule::Str _232e766a0_itoa(jule::Int);
jule::Str _232e766a0_small(jule::Int);
jule::Bool _232e766a0_is_power_of_two(jule::Int);
std::tuple<jule::Slice<jule::U8>,jule::Str> _232e766a0_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
void _231e64150_push_opt_level(jule::Int);
jule::Int _233414049_get_last_fs_error(void);
jule::Bool _2337a3707_is_graphic(jule::I32);
jule::Bool _2337a3707_is_in(jule::I32,jule::Slice<jule::Ptr<_234223e9b_RangeTable>>);
jule::Bool _2337a3707_is_letter(jule::I32);
jule::Bool _2337a3707_is_number(jule::I32);
jule::Bool _2337a3707_is_punct(jule::I32);
jule::Bool _2337a3707_is_space(jule::I32);
jule::Bool _233808a59_is_digit(jule::I32);
std::tuple<jule::I32,jule::Bool> _234223e9b___to(jule::Int,jule::I32,jule::Slice<_234223e9b_CaseRange>);
jule::I32 _234223e9b_to(jule::Int,jule::I32);
jule::I32 _234223e9b_to_upper(jule::I32);
jule::I32 _234223e9b_to_lower(jule::I32);
jule::Bool _234223e9b_is16(jule::Slice<_234223e9b_Range16>,jule::U16);
jule::Bool _234223e9b_is32(jule::Slice<_234223e9b_Range32>,jule::U32);
jule::Bool _234223e9b_is(jule::Ptr<_234223e9b_RangeTable>,jule::I32);
jule::Bool _234223e9b_is_excluding_latin(jule::Ptr<_234223e9b_RangeTable>,jule::I32);
jule::Bool _234223e9b_is_upper(jule::I32);
jule::Bool _234223e9b_is_lower(jule::I32);
jule::Bool _23381108e_full_rune(jule::Slice<jule::U8>);
jule::Bool _23381108e_full_rune_str(jule::Str);
std::tuple<jule::I32,jule::Int> _23381108e_decode_rune(jule::Slice<jule::U8>);
std::tuple<jule::I32,jule::Int> _23381108e_decode_rune_str(jule::Str);
std::tuple<jule::I32,jule::Int> _23381108e_decode_last_rune(jule::Slice<jule::U8>);
std::tuple<jule::I32,jule::Int> _23381108e_decode_last_rune_str(jule::Str);
jule::Int _23381108e_rune_len(jule::I32);
jule::Int _23381108e_encode_rune(jule::Slice<jule::U8>,jule::I32);
jule::Slice<jule::U8> _23381108e_append_rune(jule::Slice<jule::U8>,jule::I32);
jule::Slice<jule::U8> _23381108e_append_rune_non_ascii(jule::Slice<jule::U8>,jule::I32);
jule::Int _23381108e_rune_count(jule::Slice<jule::U8>);
jule::Int _23381108e_rune_count_str(jule::Str);
jule::Bool _23381108e_rune_start(jule::U8);
jule::Bool _23381108e_valid(jule::Slice<jule::U8>);
jule::Bool _23381108e_valid_str(jule::Str);
jule::Bool _23381108e_valid_rune(jule::I32);
jule::Bool _2336ea198_is_unary_op(jule::Str);
jule::Bool _2336ea198_is_bin_op(jule::Str);
jule::Bool _2336ea198_is_weak_op(jule::Str);
jule::Bool _2336ea198_is_str(jule::Str);
jule::Bool _2336ea198_is_raw_str(jule::Str);
jule::Bool _2336ea198_is_rune(jule::Str);
jule::Bool _2336ea198_is_nil(jule::Str);
jule::Bool _2336ea198_is_bool(jule::Str);
jule::Bool _2336ea198_contains_any(jule::Str,jule::Str);
jule::Bool _2336ea198_is_float(jule::Str);
jule::Bool _2336ea198_is_num(jule::Str);
jule::Bool _2336ea198_is_lit(jule::Str);
jule::Bool _2336ea198_is_ignore_ident(jule::Str);
jule::Bool _2336ea198_is_anon_ident(jule::Str);
jule::Bool _2336ea198_is_punct(jule::I32);
jule::Bool _2336ea198_is_space(jule::I32);
jule::Bool _2336ea198_is_letter(jule::I32);
jule::Bool _2336ea198_is_ident_rune(jule::Str);
jule::Bool _2336ea198_is_decimal(jule::U8);
jule::Bool _2336ea198_is_binary(jule::U8);
jule::Bool _2336ea198_is_octal(jule::U8);
jule::Bool _2336ea198_is_hex(jule::U8);
jule::Bool _2336ea198_is_assign(jule::Uint);
jule::Bool _2336ea198_is_postfix_op(jule::Str);
jule::Bool _2336ea198_is_assign_op(jule::Str);
jule::Ptr<_2334d2d3d_File> _2334d2d3d_new_file_set(jule::Str);
_231e4202e_Log _2334d2db5_make_err(jule::Int,jule::Int,jule::Ptr<_2334d2d3d_File>&,jule::Str,jule::Slice<jule::Any>);
jule::Bool _2334d2db5_bytes_has_prefix(jule::Slice<jule::U8>&,jule::Str);
jule::Str _2334d2db5_float_fmt_e(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_float_fmt_p(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_float_num(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_common_num(jule::Slice<jule::U8>&);
jule::Str _2334d2db5_binary_num(jule::Slice<jule::U8>&);
jule::Bool _2334d2db5_is_float_fmt_e(jule::U8,jule::Int);
jule::Bool _2334d2db5_is_float_fmt_p(jule::U8,jule::Int);
jule::Bool _2334d2db5_is_float_fmt_dotnp(jule::Slice<jule::U8>&,jule::Int);
jule::Bool _2334d2db5_is_float_fmt_dotp(jule::Slice<jule::U8>&,jule::Int);
jule::Bool _2334d2db5_is_float_fmt_dotfp(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_octal_num(jule::Slice<jule::U8>&);
jule::Str _2334d2db5_hex_num(jule::Slice<jule::U8>&);
jule::Str _2334d2db5_hex_escape(jule::Slice<jule::U8>&,jule::Int);
jule::Str _2334d2db5_big_unicode_point_escape(jule::Slice<jule::U8>&);
jule::Str _2334d2db5_little_unicode_point_escape(jule::Slice<jule::U8>&);
jule::Str _2334d2db5_hex_byte_escape(jule::Slice<jule::U8>&);
jule::Str _2334d2db5_byte_escape(jule::Slice<jule::U8>&);
jule::Slice<_231e4202e_Log> _2334d2db5_lex(jule::Ptr<_2334d2d3d_File>);
jule::Ptr<_2334e3821_FileInfo> _2334e3821_parse_file(jule::Ptr<_2334d2d3d_File>);
jule::Ptr<_2334e3821_PackageInfo> _2334e3821_parse_package(jule::Slice<jule::Ptr<_2334d2d3d_File>>);
std::tuple<jule::Ptr<_23346420e_Ast>,jule::Slice<_231e4202e_Log>> _2334e3821_parse_fileset(jule::Ptr<_2334d2d3d_File>);
jule::Ptr<_233464770_ScopeTree> _2337c95da_new_scope(void);
std::tuple<jule::Bool,jule::Bool> _2337c95da_is_st(_2336ea198_Token,_2336ea198_Token);
jule::Bool _2337c95da_prev_is_incomplete_expr(jule::Slice<_2336ea198_Token>&,jule::Int&);
std::tuple<jule::Int,jule::Bool> _2337c95da_next_st_pos(jule::Slice<_2336ea198_Token>&,jule::Int);
std::tuple<jule::Slice<_2336ea198_Token>,jule::Bool> _2337c95da_skip_st(jule::Int&,jule::Slice<_2336ea198_Token>);
jule::Slice<jule::Ptr<_2337c95da_Stmt>> _2337c95da_split_stms(jule::Slice<_2336ea198_Token>&);
jule::Slice<_2336ea198_Token> _2337db201_is_fn_call(jule::Slice<_2336ea198_Token>&);
jule::Ptr<_2337db201_CallData> _2337db201_get_call_data(jule::Slice<_2336ea198_Token>&);
jule::Slice<_2336ea198_Token> _2337db201_get_block_expr(jule::Slice<_2336ea198_Token>&);
std::tuple<jule::Slice<_2336ea198_Token>,jule::Slice<_2336ea198_Token>> _2337db201_split_colon(jule::Slice<_2336ea198_Token>&);
jule::Slice<_2336ea198_Token> _2337db201_eliminate_comments(jule::Slice<_2336ea198_Token>&);
jule::Int _2337db201_find_lowest_prec_op(jule::Slice<_2336ea198_Token>&);
jule::Ptr<_233464770_IdentExpr> _2337db201_build_ident_expr(_2336ea198_Token&);
std::tuple<jule::Slice<_2336ea198_Token>,jule::Int> _2337db201_get_range_expr_tokens(jule::Slice<_2336ea198_Token>&);
jule::Bool _23441b814_check_assign_tokens(jule::Slice<_2336ea198_Token>&);
_231e4202e_Log _23441cd43_make_err(jule::Int,jule::Int,jule::Ptr<_2334d2d3d_File>&,jule::Str,jule::Slice<jule::Any>);
jule::Slice<_2336ea198_Token> _23441cd43_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_2336ea198_Token>&);
std::tuple<jule::Slice<_2336ea198_Token>,jule::Slice<_2336ea198_Token>> _23441cd43_range_last(jule::Slice<_2336ea198_Token>&);
std::tuple<jule::Slice<jule::Slice<_2336ea198_Token>>,jule::Slice<_231e4202e_Log>> _23441cd43_parts(jule::Slice<_2336ea198_Token>&,jule::Uint,jule::Bool);
jule::Str _23441cd43_get_close_kind_of_brace(jule::Str);
_231e4202e_Log _23441cd43_compiler_err(_2336ea198_Token&,jule::Str&,jule::Slice<jule::Any>);
void _23441cd43_push_suggestion(_231e4202e_Log*,jule::Str,jule::Slice<jule::Any>);
jule::Ptr<_233464770_Comment> _23441cd43_build_comment(_2336ea198_Token&);
jule::Str _23441cd43_tokstoa(jule::Slice<_2336ea198_Token>&);
jule::Ptr<_233464770_TypeDecl> _23473c948_build_void_type(void);
jule::Ptr<_233464770_TypeDecl> _23473c948_build_prim_type(_2336ea198_Token);
std::tuple<jule::Slice<_2336ea198_Token>,jule::Int> _23473c948_split_map_range(jule::Slice<_2336ea198_Token>&,jule::Int&);
void _1d68bd462_lshift_unsig(_1d68bd462_Const&,_1d68bd462_Const&);
void _1d68bd462_rshift_unsig(_1d68bd462_Const&,_1d68bd462_Const&);
jule::Bool _1d68c15ca_check_bit(jule::Str,jule::Int,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>);
jule::Str _1d68c15ca_real_kind_of(jule::Str);
jule::Int _1d68c15ca_bitsize_of(jule::Str);
jule::Str _1d68c15ca_int_from_bits(jule::U64);
jule::Str _1d68c15ca_uint_from_bits(jule::U64);
jule::Str _1d68c15ca_float_from_bits(jule::U64);
jule::Bool _1d68c15ca_check_bit_int(jule::Str,jule::Int);
jule::Bool _1d68c15ca_check_bit_uint(jule::Str,jule::Int);
jule::Bool _1d68c15ca_check_bit_float(jule::Str,jule::Int);
jule::U64 _1d68c15ca_bitsize_of_float(jule::F64);
jule::U64 _1d68c15ca_bitsize_of_int(jule::I64);
jule::U64 _1d68c15ca_bitsize_of_uint(jule::U64);
jule::F64 _1d68ca88c_min(jule::Str);
jule::F64 _1d68ca88c_max(jule::Str);
jule::Bool _1d68cc3c7_is_i8_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_i16_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_i32_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_i64_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_u8_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_u16_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_u32_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_u64_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_f32_compatible(jule::Str);
jule::Bool _1d68cc3c7_is_f64_compatible(jule::Str);
jule::Bool _1d68cc3c7_types_are_compatible(jule::Str,jule::Str);
jule::Bool _1d68cc3c7_is_i16_greater(jule::Str);
jule::Bool _1d68cc3c7_is_i32_greater(jule::Str);
jule::Bool _1d68cc3c7_is_i64_greater(jule::Str);
jule::Bool _1d68cc3c7_is_u8_greater(jule::Str);
jule::Bool _1d68cc3c7_is_u16_greater(jule::Str);
jule::Bool _1d68cc3c7_is_u32_greater(jule::Str);
jule::Bool _1d68cc3c7_is_u64_greater(jule::Str);
jule::Bool _1d68cc3c7_is_f32_greater(jule::Str);
jule::Bool _1d68cc3c7_is_f64_greater(jule::Str);
jule::Bool _1d68cc3c7_is_greater(jule::Str,jule::Str);
jule::Bool _1d68ce6a4_is_sig_int(jule::Str);
jule::Bool _1d68ce6a4_is_unsig_int(jule::Str);
jule::Bool _1d68ce6a4_is_int(jule::Str);
jule::Bool _1d68ce6a4_is_float(jule::Str);
jule::Bool _1d68ce6a4_is_num(jule::Str);
jule::Bool _1d68ce6a4_is_sig_num(jule::Str);
jule::Bool _1d6a262e0_is_ascii(jule::I32);
jule::I32 _1d6a262e0_to_rune(jule::Slice<jule::U8>);
jule::Str _1d6a262e0_to_raw_str(jule::Slice<jule::U8>);
jule::Str _1d6a262e0_to_str(jule::Slice<jule::U8>);
std::tuple<jule::U8,jule::Bool> _1d6a262e0_try_btoa_common_esq(jule::Slice<jule::U8>);
jule::I32 _1d6a262e0_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
jule::Slice<jule::U8> _1d6a262e0_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
jule::Bool _2185d51ad_kind_uses_generics(jule::Ptr<_200d010d9_TypeKind>,jule::Slice<jule::Ptr<_233464770_GenericDecl>>&);
jule::Bool _2185d51ad_parameter_uses_generics(jule::Ptr<_2185d51ad_Param>&,jule::Slice<jule::Ptr<_233464770_GenericDecl>>&);
jule::Str _21862cb1d_str_repeat(jule::Str,jule::Int);
jule::Str _21862cb1d_build_doc(jule::Ptr<_233464770_CommentGroup>);
jule::Ptr<_200d010d9_TypeSymbol> _21862cb1d_build_type(jule::Ptr<_233464770_TypeDecl>);
jule::Ptr<_218751758_Value> _21862cb1d_build_expr(jule::Ptr<_233464770_Expr>);
jule::Ptr<_200d010d9_TypeAlias> _21862cb1d_build_type_alias(jule::Ptr<_233464770_TypeAliasDecl>);
jule::Ptr<_23461aa35_Field> _21862cb1d_build_field(jule::Ptr<_233464770_FieldDecl>);
jule::Slice<jule::Ptr<_23461aa35_Field>> _21862cb1d_build_fields(jule::Slice<jule::Ptr<_233464770_FieldDecl>>&);
jule::Ptr<_23461aa35_Struct> _21862cb1d_build_struct(jule::Ptr<_233464770_StructDecl>);
jule::Ptr<_2185d51ad_Param> _21862cb1d_build_param(jule::Ptr<_233464770_ParamDecl>);
jule::Slice<jule::Ptr<_2185d51ad_Param>> _21862cb1d_build_params(jule::Slice<jule::Ptr<_233464770_ParamDecl>>&);
jule::Ptr<_2185d51ad_RetType> _21862cb1d_build_ret_type(jule::Ptr<_233464770_RetTypeDecl>);
jule::Ptr<_2185d51ad_Fn> _21862cb1d_build_fn(jule::Ptr<_233464770_FnDecl>);
jule::Slice<jule::Ptr<_2185d51ad_Fn>> _21862cb1d_build_methods(jule::Slice<jule::Ptr<_233464770_FnDecl>>&);
jule::Ptr<_2185da36c_Trait> _21862cb1d_build_trait(jule::Ptr<_233464770_TraitDecl>);
jule::Ptr<_2186be3da_EnumItem> _21862cb1d_build_enum_item(jule::Ptr<_233464770_EnumItemDecl>);
jule::Slice<jule::Ptr<_2186be3da_EnumItem>> _21862cb1d_build_enum_items(jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>&);
jule::Ptr<_2186be3da_Enum> _21862cb1d_build_enum(jule::Ptr<_233464770_EnumDecl>);
jule::Ptr<_200c58948_Var> _21862cb1d_build_var(jule::Ptr<_233464770_VarDecl>);
jule::Slice<jule::Ptr<_200c58948_Var>> _21862cb1d_build_vars(jule::Slice<jule::Ptr<_233464770_VarDecl>>);
jule::Ptr<_2185e0064_Impl> _21862cb1d_build_impl(jule::Ptr<_233464770_Impl>);
jule::Ptr<_2186ce186_ScopeChecker> _2186ce186_new_scope_checker_base(jule::Ptr<_1eec2c632_Sema>&,jule::Ptr<_2185d51ad_FnIns>);
jule::Ptr<_2186ce186_ScopeChecker> _2186ce186_new_scope_checker(jule::Ptr<_1eec2c632_Sema>&,jule::Ptr<_2185d51ad_FnIns>);
jule::Ptr<_2186ce186_ScopeLabel> _2186ce186_find_label_parent(jule::Str,jule::Ptr<_2186ce186_ScopeChecker>);
jule::Bool _2186ce186_stmt_is_goto_scope(jule::Any&,jule::Ptr<_2186ce186_Scope>&);
jule::Int _2186ce186_count_match_type(jule::Ptr<_2186ce186_Match>&,jule::Ptr<_200d010d9_TypeKind>&);
jule::Slice<jule::Ptr<_218751758_Data>> _2186ce186_get_datas_from_tuple_data(jule::Ptr<_218751758_Data>&);
jule::Slice<jule::Any> _2186ce186_get_expr_models(jule::Any&);
jule::Bool _2186ce186_check_mut(jule::Ptr<_1eec2c632_Sema>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>,_2336ea198_Token);
jule::Bool _2186ce186_check_assign(jule::Ptr<_1eec2c632_Sema>&,jule::Ptr<_218751758_Data>&,jule::Ptr<_218751758_Data>,_2336ea198_Token);
jule::Bool _2186ce186_is_valid_ast_st_for_next_st(jule::Any&);
jule::Bool _2186ce186_is_valid_st_for_next_st(jule::Any&);
jule::Bool _2186ce186_st_is_def(jule::Any&);
jule::Ptr<_200c58948_Var> _218848bd5_find_var_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ptr<_200d010d9_TypeAlias> _218848bd5_find_type_alias_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ptr<_23461aa35_Struct> _218848bd5_find_struct_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ptr<_2185d51ad_Fn> _218848bd5_find_fn_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Str,jule::Bool);
jule::Ptr<_2185da36c_Trait> _218848bd5_find_trait_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Str);
jule::Ptr<_2186be3da_Enum> _218848bd5_find_enum_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Str);
jule::Bool _1eec2c632_is_valid_model_for_ref(jule::Any);
_231e4202e_Log _1eec2c632_compiler_err(_2336ea198_Token&,jule::Bool,jule::Str,jule::Slice<jule::Any>);
jule::Bool _1eec2c632_imp_is_lookupable(jule::Ptr<_218848bd5_ImportInfo>&,jule::Str);
jule::Slice<jule::Ptr<_200c58948_Var>> _1eec2c632_build_ret_vars(jule::Ptr<_2185d51ad_FnIns>&);
jule::Slice<jule::Ptr<_200c58948_Var>> _1eec2c632_build_param_vars(jule::Ptr<_2185d51ad_FnIns>&);
jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _1eec2c632_build_generic_type_aliases(jule::Ptr<_2185d51ad_FnIns>&);
jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_find_file(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>&,jule::Ptr<_2334d2d3d_File>&);
std::tuple<jule::Bool,jule::Bool> _1eec2c632_conditional_has_ret(jule::Ptr<_2186ce186_Conditional>);
jule::Bool _1eec2c632_match_has_ret(jule::Ptr<_2186ce186_Match>);
std::tuple<jule::Bool,jule::Bool,jule::Bool> _1eec2c632___has_ret(jule::Ptr<_2186ce186_Scope>);
jule::Bool _1eec2c632_has_ret(jule::Ptr<_2186ce186_Scope>);
void _1eec2c632_push_suggestion(_231e4202e_Log*,jule::Str,jule::Slice<jule::Any>);
jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _200c5bcc0_get_fn_result_types(jule::Ptr<_2185d51ad_FnIns>&);
jule::Bool _200c5bcc0_trait_has_reference_receiver(jule::Ptr<_2185da36c_Trait>&);
jule::Bool _200c5bcc0_float_assignable(jule::Str,jule::Ptr<_218751758_Data>&);
jule::Bool _200c5bcc0_sig_assignable(jule::Str,jule::Ptr<_218751758_Data>&);
jule::Bool _200c5bcc0_unsig_assignable(jule::Str,jule::Ptr<_218751758_Data>&);
jule::Bool _200c5bcc0_int_assignable(jule::Str,jule::Ptr<_218751758_Data>&);
jule::Any _218751758_find_builtins_import(jule::Str,jule::Ptr<_218848bd5_ImportInfo>);
void _218751758_make_struct_lit_alloc(jule::Ptr<_218751758_Data>&,jule::Ptr<_2188586ea_StructLitExprModel>&);
jule::Any _218751758_find_builtins_sema(jule::Str,jule::Ptr<_1eec2c632_Sema>);
jule::Bool _218751758_is_ok_for_shifting(jule::Ptr<_218751758_Data>&);
jule::Bool _218751758_is_instanced_struct(jule::Ptr<_23461aa35_StructIns>);
jule::Bool _218751758_is_ptr_arithmetic_compatible_int(jule::Ptr<_218751758_Data>&);
void _218751758_normalize_bitsize(jule::Ptr<_218751758_Data>&);
void _218751758_normalize_type(jule::Ptr<_218751758_Data>&);
void _218751758_apply_cast_kind_model(jule::Ptr<_218751758_Data>&);
void _218751758_apply_cast_kind(jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _218751758_build_void_data(void);
jule::Str _218751758_kind_by_bitsize(jule::Any);
jule::Str _218751758_check_data_for_integer_indexing(jule::Ptr<_218751758_Data>&);
jule::Bool _200d010d9_can_get_ptr(jule::Ptr<_218751758_Data>&);
jule::Bool _200d010d9_is_valid_for_sptr_type(jule::Ptr<_200d010d9_TypeKind>&);
jule::Bool _200d010d9_is_valid_for_ref(jule::Ptr<_200d010d9_TypeKind>&);
jule::Str _200d010d9_build_link_path_by_tokens(jule::Slice<_2336ea198_Token>&);
jule::Ptr<_200d010d9_Prim> _200d010d9_build_prim_type(jule::Str);
jule::Ptr<_23461aa35_Struct> _200d010d9_get_struct_from_kind(jule::Ptr<_200d010d9_TypeKind>);
jule::Bool _200d010d9_is_prim(jule::Str);
std::tuple<jule::Ptr<_218737b7e_SymbolTable>,jule::Slice<_231e4202e_Log>> _1d67cdc79_build_symbols(jule::Ptr<_23346420e_Ast>&,jule::Trait<_218848bd5_Importer>&,jule::Ptr<_21862cb1d_SymbolBuilder>);
std::tuple<jule::Ptr<_218848bd5_Package>,jule::Slice<_231e4202e_Log>> _1d67cdc79___analyze_package(jule::Slice<jule::Ptr<_23346420e_Ast>>&,jule::Trait<_218848bd5_Importer>&,jule::Int&);
std::tuple<jule::Ptr<_218848bd5_Package>,jule::Slice<_231e4202e_Log>> _1d67cdc79_analyze_package(jule::Slice<jule::Ptr<_23346420e_Ast>>,jule::Trait<_218848bd5_Importer>,jule::Int);
std::tuple<jule::Ptr<_218737b7e_SymbolTable>,jule::Slice<_231e4202e_Log>> _1d67cdc79_analyze_file(jule::Ptr<_23346420e_Ast>,jule::Trait<_218848bd5_Importer>,jule::Int);
void _1d67e4c4b_init(void);
jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_find_builtin_fn(jule::Str);
jule::Ptr<_200d010d9_TypeAlias> _1d67e4c4b_find_builtin_type_alias(jule::Str);
jule::Ptr<_2185da36c_Trait> _1d67e4c4b_find_builtin_trait(jule::Str);
jule::Any _1d67e4c4b_find_builtin_def(jule::Str);
jule::Any _1d67e4c4b_find_builtin_def_std_mem(jule::Str);
jule::Any _1d67e4c4b_find_builtin_def_std_jule_integrated(jule::Str);
jule::Any _1d67e4c4b_find_package_builtin_def(jule::Str,jule::Str);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_common_plain(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_common(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_common_mut(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_out(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_outln(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_new(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_panic(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_make(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_append(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_copy(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_recover(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_clone(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_std_mem_size_of(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_std_mem_align_of(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&);
std::tuple<jule::Bool,jule::Bool> _2330c2a93_check_os(jule::Str);
std::tuple<jule::Bool,jule::Bool> _2330c2a93_check_arch(jule::Str);
jule::Bool _2330c2a93_is_pass_file_annotation(jule::Str);
jule::Bool _23311c88a_eval_directive_ident(jule::Str);
jule::Bool _23311c88a_eval_directive_part(jule::Str);
jule::Slice<jule::Str> _23311c88a_split_operans(jule::Str,jule::Str);
jule::Bool _23311c88a_eval_directive_expr(jule::Str);
void _23314edea_set_os_flags(void);
void _23314edea_set_arch_flags(void);
void _23314edea_init_flags(void);
void _233336642_exit_err(jule::Str);
jule::Slice<jule::U8> _233336642_read_buff(jule::Str);
_231e4202e_Log _233336642_flat_compiler_err(jule::Str);
std::tuple<jule::Slice<jule::Ptr<_233463670_DirEntry>>,jule::Str> _233336642_read_package_dirents(jule::Str);
jule::Str _233336642_concat_all_parts(jule::Slice<jule::Str>);
jule::Bool _233336642_is_pass_build_directives(jule::Ptr<_23346420e_Ast>&);
void _23301cea5_push_passes(jule::Ptr<_218848bd5_Package>&,jule::Slice<jule::Str>&);
jule::Slice<jule::Str> _23301cea5_get_all_unique_passes(jule::Ptr<_218848bd5_Package>&,jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>);
jule::Bool _231e62d30_is_exist_0(jule::Slice<jule::Any>,jule::Ptr<_2185d51ad_FnIns>);
jule::Bool _231e62d30_is_exist_1(jule::Slice<jule::Any>,jule::Ptr<_200c58948_Var>);
jule::Bool _231e62d30_is_exist_2(jule::Slice<jule::Any>,jule::Ptr<_23461aa35_StructIns>);
jule::Bool _231e62d30_is_exist_3(jule::Slice<jule::Any>,jule::Ptr<_2185da36c_Trait>);
jule::Bool _231e62d30_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
jule::Bool _231e62d30_is_dead(jule::Any);
void _231e62d30_drop_ref(jule::Slice<jule::Any>&,jule::Int);
jule::Bool _231e62d30_is_all_references_are_dead_0(jule::Ptr<_21862cb1d_ReferenceStack>);
jule::Bool _231e62d30_is_all_references_are_dead_1(jule::Ptr<_21862cb1d_ReferenceStack>);
jule::Bool _231e62d30_is_all_references_are_dead_2(jule::Ptr<_21862cb1d_ReferenceStack>);
jule::Bool _231e62d30_is_fn_dead(jule::Ptr<_2185d51ad_FnIns>);
jule::Bool _231e62d30_is_var_dead(jule::Ptr<_200c58948_Var>);
jule::Bool _231e62d30_kind_is_dead(jule::Ptr<_200d010d9_TypeKind>);
jule::Bool _231e62d30_is_any_generic_is_dead(jule::Slice<jule::Ptr<_200d010d9_TypeKind>>&);
jule::Bool _231e62d30_is_struct_dead(jule::Ptr<_23461aa35_StructIns>);
jule::Bool _231e62d30_is_trait_dead(jule::Ptr<_2185da36c_Trait>);
void _231e62d30_eliminate_dead_functions(jule::Slice<jule::Ptr<_2185d51ad_Fn>>&);
void _231e62d30_eliminate_dead_globals(jule::Ptr<_218848bd5_Package>&);
void _231e62d30_eliminate_dead_functions_package(jule::Ptr<_218848bd5_Package>&);
void _231e62d30_eliminate_dead_structs(jule::Ptr<_218848bd5_Package>&);
void _231e62d30_eliminate_dead_traits(jule::Ptr<_218848bd5_Package>&);
void _231e62d30_catch_alive_init(jule::Ptr<_218848bd5_Package>&);
void _231e62d30_eliminate_package(jule::Ptr<_218848bd5_Package>&);
void _231e62d30_eliminate(jule::Ptr<_23301cea5_IR>&);
void _232e769d0_eliminate_dead_code_of_scope(jule::Ptr<_2186ce186_Scope>);
jule::U64 _1d6d86650_unix(void);
jule::U64 _1d6d86650_unix_year_to_seconds(jule::Uint,jule::Bool&);
jule::U64 _1d6d86650_unix_month_to_seconds(jule::Uint,jule::Bool);
jule::Bool _200ad0429_iter_expr_is_copy_optimizable(jule::Ptr<_218751758_Data>&,jule::Ptr<_200c58948_Var>&);
jule::Str _200ad0429_gen_range_index_iter(jule::Ptr<_2186ce186_RangeIter>&);
jule::Str _200ad0429_gen_range_hashmap_iter(jule::Ptr<_2186ce186_RangeIter>&);
jule::Str _200ad0429_gen_if(jule::Ptr<_2186ce186_If>);
jule::Str _200ad0429_gen_conditional(jule::Ptr<_2186ce186_Conditional>);
jule::Str _200ad0429_gen_inf_iter(jule::Ptr<_2186ce186_InfIter>);
jule::Str _200ad0429_gen_while_iter(jule::Ptr<_2186ce186_WhileIter>);
jule::Str _200ad0429_gen_range_iter(jule::Ptr<_2186ce186_RangeIter>);
jule::Str _200ad0429_gen_cont(jule::Ptr<_2186ce186_ContSt>);
jule::Str _200ad0429_gen_label(jule::Ptr<_2186ce186_Label>);
jule::Str _200ad0429_gen_goto(jule::Ptr<_2186ce186_GotoSt>);
jule::Str _200ad0429_gen_postfix(jule::Ptr<_2186ce186_Postfix>);
jule::Str _200ad0429_gen_div_by_zero_assign(jule::Ptr<_2186ce186_Assign>);
jule::Str _200ad0429_gen_assign(jule::Ptr<_2186ce186_Assign>);
jule::Str _200ad0429_gen_multi_assign(jule::Ptr<_2186ce186_MultiAssign>);
jule::Str _200ad0429_gen_case(jule::Ptr<_2186ce186_Match>,jule::Ptr<_2186ce186_Case>);
jule::Str _200ad0429_gen_match(jule::Ptr<_2186ce186_Match>);
jule::Str _200ad0429_gen_fall_st(jule::Ptr<_2186ce186_FallSt>);
jule::Str _200ad0429_gen_break_st(jule::Ptr<_2186ce186_BreakSt>);
jule::Str _200ad0429_gen_ret_vars(jule::Ptr<_2186ce186_RetSt>);
jule::Str _200ad0429_gen_ret_expr_tuple(jule::Ptr<_2186ce186_RetSt>);
jule::Str _200ad0429_gen_ret_expr(jule::Ptr<_2186ce186_RetSt>);
jule::Str _200ad0429_gen_ret_st(jule::Ptr<_2186ce186_RetSt>);
jule::Str _200ad0429_gen_ret_st_with_defaults(jule::Ptr<_200d010d9_TypeKind>);
jule::Str _200ad0429_gen_recover(jule::Ptr<_2186ce186_Recover>);
jule::Str _200ad0429_gen_data_expr(jule::Ptr<_218751758_Data>);
jule::Str _200ad0429_gen_scope_var(jule::Ptr<_200c58948_Var>);
jule::Str _200ad0429_gen_st(jule::Any);
jule::Str _200ad0429_gen_scope(jule::Ptr<_2186ce186_Scope>);
jule::Str _200ad0429_gen_fn_scope(jule::Ptr<_2185d51ad_FnIns>);
jule::Str _200ad0429_gen_method_scope(jule::Ptr<_2185d51ad_FnIns>);
jule::Str _200c454b2_concat_all_parts(jule::Slice<jule::Str>);
jule::Str _200c454b2_get_accessor(jule::Ptr<_200d010d9_TypeKind>&);
jule::Str _200c454b2_decompose_common_esq(jule::U8);
jule::Str _200c454b2_sbtoa(jule::U8);
jule::Str _200c454b2_get_str_model(jule::Ptr<_1d68bd462_Const>&);
jule::Str _200c454b2_get_bool_model(jule::Ptr<_1d68bd462_Const>&);
jule::Str _200c454b2_get_nil_model(void);
jule::Str _200c454b2_gen_float_special_cases(jule::F64&);
jule::Str _200c454b2_ftoa(jule::F64,jule::Int);
jule::Str _200c454b2_get_f32_model(jule::Ptr<_1d68bd462_Const>&);
jule::Str _200c454b2_get_f64_model(jule::Ptr<_1d68bd462_Const>&);
jule::Str _200c454b2_get_float_model(jule::Ptr<_218751758_Data>&);
jule::Str _200c454b2_i64toa(jule::I64);
jule::Str _200c454b2_get_i64_model(jule::Ptr<_1d68bd462_Const>&);
jule::Str _200c454b2_u64toa(jule::U64);
jule::Str _200c454b2_get_u64_model(jule::Ptr<_1d68bd462_Const>);
jule::Str _200c454b2_gen_const_expr(jule::Ptr<_218751758_Data>);
jule::Str _200c454b2_gen_const_expr_model(jule::Ptr<_1d68bd462_Const>);
jule::Str _200c454b2_gen_div_by_zero_binop_expr_model(jule::Str,jule::Any,jule::Any);
jule::Str _200c454b2_gen_binop_expr_model(jule::Ptr<_2188586ea_BinopExprModel>);
jule::Str _200c454b2_gen_var_expr_model(jule::Ptr<_200c58948_Var>);
jule::Str _200c454b2_gen_struct_expr_model(jule::Ptr<_23461aa35_Struct>);
jule::Str _200c454b2_gen_struct_ins_expr_model(jule::Ptr<_23461aa35_StructIns>);
jule::Str _200c454b2_gen_unary_expr_model(jule::Ptr<_2188586ea_UnaryExprModel>);
jule::Str _200c454b2_gen_cpp_struct_lit_expr_model(jule::Ptr<_2188586ea_StructLitExprModel>);
jule::Str _200c454b2_gen_struct_lit_expr_model(jule::Ptr<_2188586ea_StructLitExprModel>);
jule::Str _200c454b2_gen_alloc_struct_lit_expr_model(jule::Ptr<_2188586ea_AllocStructLitExprModel>);
jule::Str _200c454b2_gen_casting_expr_model(jule::Ptr<_2188586ea_CastingExprModel>);
jule::Str _200c454b2_gen_arg_expr_models(jule::Slice<jule::Any>);
jule::Str _200c454b2_gen_expr_model_for_call(jule::Any);
jule::Str _200c454b2_gen_fn_call_expr_model(jule::Ptr<_2188586ea_FnCallExprModel>);
jule::Str _200c454b2_gen_slice_expr_model(jule::Ptr<_2188586ea_SliceExprModel>);
jule::Str _200c454b2_gen_indexing_expr_model(jule::Ptr<_2188586ea_IndexigExprModel>);
jule::Str _200c454b2_gen_anon_fn_expr_model(jule::Ptr<_2188586ea_AnonFnExprModel>);
jule::Str _200c454b2_gen_map_expr_model(jule::Ptr<_2188586ea_MapExprModel>);
jule::Str _200c454b2_gen_slicing_expr_model(jule::Ptr<_2188586ea_SlicingExprModel>);
jule::Str _200c454b2_gen_trait_sub_ident_expr_model(jule::Ptr<_2188586ea_TraitSubIdentExprModel>);
jule::Str _200c454b2_gen_struct_sub_ident_expr_model(jule::Ptr<_2188586ea_StructSubIdentExprModel>);
jule::Str _200c454b2_gen_common_ident_expr_model(jule::Ptr<_2188586ea_CommonIdentExprModel>);
jule::Str _200c454b2_gen_common_sub_ident_expr_model(jule::Ptr<_2188586ea_CommonSubIdentExprModel>);
jule::Str _200c454b2_gen_array_expr_model(jule::Ptr<_2188586ea_ArrayExprModel>);
jule::Str _200c454b2_gen_fn_ins_expr_model_common(jule::Ptr<_2185d51ad_FnIns>);
jule::Str _200c454b2_gen_fn_ins_expr_model(jule::Ptr<_2185d51ad_FnIns>);
jule::Str _200c454b2_gen_tuple_expr_model(jule::Ptr<_2188586ea_TupleExprModel>);
jule::Str _200c454b2_gen_builtin_new_call_expr_model(jule::Ptr<_2188586ea_BuiltinNewCallExprModel>);
jule::Str _200c454b2_gen_builtin_out_call_expr_model(jule::Ptr<_2188586ea_BuiltinOutCallExprModel>);
jule::Str _200c454b2_gen_builtin_outln_call_expr_model(jule::Ptr<_2188586ea_BuiltinOutlnCallExprModel>);
jule::Str _200c454b2_gen_builtin_real_call_expr_model(jule::Ptr<_2188586ea_BuiltinRealCallExprModel>);
jule::Str _200c454b2_gen_builtin_drop_call_expr_model(jule::Ptr<_2188586ea_BuiltinDropCallExprModel>);
jule::Str _200c454b2_gen_builtin_panic_call_expr_model(jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>);
jule::Str _200c454b2_gen_builtin_make_call_expr_model(jule::Ptr<_2188586ea_BuiltinMakeCallExprModel>);
jule::Str _200c454b2_gen_builtin_append_call_expr_model_assign_opt(jule::Bool,jule::Str&,jule::Ptr<_200d010d9_TypeKind>&,jule::Ptr<_2188586ea_SliceExprModel>&,jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>&);
std::tuple<jule::Str,jule::Bool> _200c454b2_gen_builtin_append_call_expr_model_assign(jule::Any,jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>);
jule::Str _200c454b2_gen_builtin_append_call_expr_model(jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>);
jule::Str _200c454b2_gen_builtin_clone_call_expr_model(jule::Ptr<_2188586ea_BuiltinCloneCallExprModel>);
jule::Str _200c454b2_gen_sizeof_expr_model(jule::Ptr<_2188586ea_SizeofExprModel>);
jule::Str _200c454b2_gen_alignof_expr_model(jule::Ptr<_2188586ea_AlignofExprModel>);
jule::Str _200c454b2_gen_rune_expr_model(jule::Ptr<_2188586ea_RuneExprModel>);
jule::Str _200c454b2_gen_builtin_error_trait_sub_ident_expr_model(jule::Ptr<_2188586ea_BuiltinErrorTraitSubIdentExprModel>);
jule::Str _200c454b2_gen_struct_static_ident_expr_model(jule::Ptr<_2188586ea_StructStaticIdentExprModel>);
jule::Str _200c454b2_gen_integrated_to_str_expr_model(jule::Ptr<_2188586ea_IntegratedToStrExprModel>);
jule::Str _200c454b2_gen_ternary_expr_model(jule::Ptr<_2188586ea_TernaryExprModel>);
jule::Str _200c454b2_gen_expr_model(jule::Any);
jule::Str _200c454b2_gen_expr(jule::Any);
jule::Str _200c454b2_gen_val(jule::Ptr<_218751758_Value>);
jule::Str _200c454b2_get_init_expr(jule::Ptr<_200d010d9_TypeKind>);
jule::Str _1d6c1e780_get_derive_fn_decl_clone(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c1e780_get_derive_fn_def_clone(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c1d84a_as_ident(jule::Str);
jule::Str _1d6c1d84a_as_jt(jule::Str);
jule::Str _1d6c1d84a_get_addr_as_ident(jule::Uintptr);
jule::Str _1d6c1d84a_as_out_ident(jule::Str,jule::Uintptr);
jule::Str _1d6c1d84a_as_local_ident(jule::Int,jule::Int,jule::Str);
jule::Str _1d6c1d84a_fn_out_ident(jule::Ptr<_2185d51ad_Fn>&);
jule::Str _1d6c1d84a_fn_ins_out_ident(jule::Ptr<_2185d51ad_FnIns>&);
jule::Str _1d6c1d84a_trait_out_ident(jule::Ptr<_2185da36c_Trait>);
jule::Str _1d6c1d84a_param_out_ident(jule::Ptr<_2185d51ad_Param>&);
jule::Str _1d6c1d84a_struct_out_ident(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c1d84a_struct_ins_out_ident(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c1d84a_field_out_ident(jule::Ptr<_23461aa35_Field>&);
jule::Str _1d6c1d84a_var_out_ident(jule::Ptr<_200c58948_Var>);
jule::Str _1d6c1d84a_iter_begin_label_ident(jule::Uintptr);
jule::Str _1d6c1d84a_iter_end_label_ident(jule::Uintptr);
jule::Str _1d6c1d84a_iter_next_label_ident(jule::Uintptr);
jule::Str _1d6c1d84a_label_ident(jule::Str);
jule::Str _1d6c1d84a_match_end_label_ident(jule::Uintptr);
jule::Str _1d6c1d84a_case_begin_label_ident(jule::Uintptr);
jule::Str _1d6c1d84a_case_end_label_ident(jule::Uintptr);
jule::Bool _1d6c4a932_any_equals_0(jule::Ptr<_200c58948_Var>&,jule::Any&);
jule::Bool _1d6c4a932_any_equals_1(jule::Ptr<_23461aa35_FieldIns>&,jule::Any&);
jule::Ptr<_233464770_Directive> _1d6c4a932_find_directive(jule::Slice<jule::Ptr<_233464770_Directive>>&,jule::Str);
jule::Bool _1d6c4a932_has_directive(jule::Slice<jule::Ptr<_233464770_Directive>>&,jule::Str);
jule::Str _1d6c4a932_gen_prim_kind(jule::Ptr<_200d010d9_Prim>);
jule::Str _1d6c4a932_gen_tuple_kind(jule::Ptr<_200d010d9_Tuple>);
jule::Str _1d6c4a932_as_sptr_kind(jule::Str);
jule::Str _1d6c4a932_gen_sptr_kind(jule::Ptr<_200d010d9_Sptr>);
jule::Str _1d6c4a932_gen_ptr_kind(jule::Ptr<_200d010d9_Ptr>);
jule::Str _1d6c4a932_gen_enum_kind(jule::Ptr<_2186be3da_Enum>);
jule::Str _1d6c4a932_as_slice_kind(jule::Ptr<_200d010d9_TypeKind>);
jule::Str _1d6c4a932_gen_slice_kind(jule::Ptr<_200d010d9_Slc>);
jule::Str _1d6c4a932_gen_map_kind(jule::Ptr<_200d010d9_Map>);
jule::Str _1d6c4a932_gen_trait_kind_from_ident(jule::Str);
jule::Str _1d6c4a932_gen_trait_kind(jule::Ptr<_2185da36c_Trait>);
jule::Str _1d6c4a932_gen_struct_kind(jule::Ptr<_23461aa35_Struct>);
jule::Str _1d6c4a932_gen_struct_kind_ins(jule::Ptr<_23461aa35_StructIns>);
jule::Str _1d6c4a932_gen_array_kind(jule::Ptr<_200d010d9_Arr>);
jule::Str _1d6c4a932_gen_fn_anon_decl(jule::Ptr<_2185d51ad_FnIns>);
jule::Str _1d6c4a932_gen_fn_kind(jule::Ptr<_2185d51ad_FnIns>);
jule::Str _1d6c4a932_gen_type_kind(jule::Ptr<_200d010d9_TypeKind>);
void _1d6c4a2c2_add_indent(void);
void _1d6c4a2c2_done_indent(void);
jule::Str _1d6c4a2c2_indent(void);
jule::Bool _1d6c4a2c2_is_cpp_header_file(jule::Str);
jule::Str _1d6c4a2c2_gen_links(jule::Ptr<_23301cea5_IR>&);
jule::Str _1d6c4a2c2_gen_fn_result(jule::Ptr<_2185d51ad_Fn>&);
jule::Str _1d6c4a2c2_gen_fn_ins_result(jule::Ptr<_2185d51ad_FnIns>&);
jule::Str _1d6c4a2c2_gen_param_prototype(jule::Ptr<_2185d51ad_Param>&);
jule::Str _1d6c4a2c2_gen_param_ins(jule::Ptr<_2185d51ad_ParamIns>&);
jule::Str _1d6c4a2c2_gen_param_ins_prototype(jule::Ptr<_2185d51ad_ParamIns>&);
jule::Str _1d6c4a2c2_gen_param(jule::Ptr<_2185d51ad_Param>&);
jule::Str _1d6c4a2c2_gen_params(jule::Slice<jule::Ptr<_2185d51ad_Param>>&);
jule::Str _1d6c4a2c2_gen_params_ins(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>&);
jule::Str _1d6c4a2c2_gen_params_prototypes(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>&);
jule::Str _1d6c4a2c2_gen_trait(jule::Ptr<_2185da36c_Trait>&);
jule::Str _1d6c4a2c2_gen_traits_tbl(jule::Ptr<_218737b7e_SymbolTable>&);
jule::Str _1d6c4a2c2_gen_traits_pkg(jule::Ptr<_218848bd5_Package>&);
jule::Str _1d6c4a2c2_gen_traits(jule::Ptr<_23301cea5_IR>&);
jule::Str _1d6c4a2c2_gen_trait_prototype(jule::Ptr<_2185da36c_Trait>&);
jule::Str _1d6c4a2c2_gen_trait_prototypes(jule::Ptr<_218848bd5_Package>&);
jule::Str _1d6c4a2c2_gen_struct_plain_prototype(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c4a2c2_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_23461aa35_Struct>>&);
jule::Str _1d6c4a2c2_gen_struct_traits(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c4a2c2_gen_field_decl(jule::Ptr<_23461aa35_FieldIns>&);
jule::Str _1d6c4a2c2_gen_struct_self_field_type_kind(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_self_field(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_self_field_init_st(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_constructor(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_destructor(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_operators(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_derive_defs_prototypes(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_ins_prototype(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_prototype(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c4a2c2_gen_struct_prototypes(jule::Slice<jule::Ptr<_23461aa35_Struct>>&);
jule::Str _1d6c4a2c2_gen_fn_decl_head(jule::Ptr<_2185d51ad_FnIns>&,jule::Bool);
jule::Str _1d6c4a2c2_gen_fn_prototype(jule::Ptr<_2185d51ad_Fn>&,jule::Bool);
jule::Str _1d6c4a2c2_gen_fn_prototypes(jule::Ptr<_218848bd5_Package>&);
jule::Str _1d6c4a2c2_gen_prototypes(jule::Ptr<_23301cea5_IR>&);
jule::Str _1d6c4a2c2_gen_var_init_expr(jule::Ptr<_200c58948_Var>&,jule::Str);
jule::Str _1d6c4a2c2_gen_var(jule::Ptr<_200c58948_Var>);
jule::Str _1d6c4a2c2_gen_globals(jule::Slice<jule::Ptr<_200c58948_Var>>&);
jule::Str _1d6c4a2c2_gen_fn(jule::Ptr<_2185d51ad_Fn>&);
jule::Str _1d6c4a2c2_gen_pkg_fns(jule::Ptr<_218848bd5_Package>&);
jule::Str _1d6c4a2c2_gen_struct_method_defs(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_ostream(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_derive_defs(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct_ins(jule::Ptr<_23461aa35_StructIns>&);
jule::Str _1d6c4a2c2_gen_struct(jule::Ptr<_23461aa35_Struct>&);
jule::Str _1d6c4a2c2_gen_structs(jule::Slice<jule::Ptr<_23461aa35_Struct>>&);
jule::Str _1d6c4a2c2_gen_fns(jule::Ptr<_23301cea5_IR>&);
void _1d6c4a2c2_push_init(jule::Ptr<_218848bd5_Package>&,jule::Str&);
jule::Str _1d6c4a2c2_gen_init_caller(jule::Ptr<_23301cea5_IR>&);
void _1d6c4a2c2_append_standard(jule::Str&,jule::Str,jule::Str);
jule::Str _1d6c4a2c2_gen(jule::Ptr<_23301cea5_IR>&);
jule::Str _231dc6612_str_repeat(jule::Str,jule::Int);
void _231dc6612_print_error_message(jule::Str);
void _231dc6612_help(jule::Slice<jule::Str>&);
void _231dc6612_version(jule::Slice<jule::Str>&);
void _231dc6612_tool_distos(void);
void _231dc6612_tool_distarch(void);
void _231dc6612_tool(jule::Slice<jule::Str>&);
void _231dc6612_julenv(void);
jule::Bool _231dc6612_process_command(jule::Slice<jule::Str>&);
void _231dc6612_exit_err(jule::Str);
void entry_point(void);
void _231de1792___init_common(void);
void _231e14c5a_init(void);
jule::Int _231e15bd4_system(jule::Str);
void _231e15bd4_write_output(jule::Str,jule::Str);
void _231e15bd4_clear_objects(void);
void _231e15bd4_compile_ir(jule::Str,jule::Str);
void _231e15bd4_do_spell(jule::Str,jule::Str,jule::Str);
jule::Bool _231e15bd4_is_cpp_source_file(jule::Str);
std::tuple<jule::Str,jule::Str> _231e15bd4_gen_compile_cmd(jule::Str,jule::Ptr<_23301cea5_IR>&);
jule::Str _231e15bd4_get_compile_path(void);
void _231e15bd4_apply_target_independent_optimizations(jule::Ptr<_23301cea5_IR>&);
void _231e15bd4_check_compiler_flag(void);
void _231e15bd4_check_target_arch(jule::Str);
void _231e15bd4_check_target_os(jule::Str);
void _231e15bd4_check_target_flag(void);
void _231e15bd4_check_opt_flag(void);
void _231e15bd4_check_flags(void);
void _231e15bd4_compile_command(jule::Slice<jule::Str>&);


static jule::Ptr<_200ad0979_FlagSet> _231e15bd4_flagset = _200ad0979_FlagSet::_static_method_new();
static jule::Ptr<jule::Str> _231e15bd4_COMPILER = jule::new_ptr<jule::Str>(jule::Str());
static jule::Ptr<jule::Str> _231e15bd4_COMPILER_PATH = jule::new_ptr<jule::Str>(jule::Str());
static jule::Str _231e15bd4_OUT_DIR = jule::Str("dist", 4);
static jule::Str _231e15bd4_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Ptr<jule::Str> _231e15bd4_OUT = jule::new_ptr<jule::Str>(jule::Str());
static jule::Str _231e15bd4_CPP_STD = jule::Str("c++17", 5);
static jule::Int _231e15bd4_SEMA_FLAGS = 0LL;
static jule::Ptr<jule::Bool> _231e15bd4_SHADOWING = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Bool> _231e15bd4_TRANSPILATION = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Str> _231e15bd4_OPT = jule::new_ptr<jule::Str>(jule::Str("L0", 2));
static jule::Ptr<jule::Str> _231e15bd4_TARGET = jule::new_ptr<jule::Str>(jule::Str("native-native", 13));
static jule::Uintptr _23204ea43_STDIN = 0LLU;
static jule::Uintptr _23204ea43_STDOUT = 1LLU;
static jule::Uintptr _23204ea43_STDERR = 2LLU;
static jule::Array<jule::Str,4> _231e4edb6_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _231e4edb6_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _231e4edb6_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Array<jule::Str,6> _231e59e26_DIRECTIVES = jule::Array<jule::Str,6>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4),jule::Str("build", 5),jule::Str("namespace", 9)});
static jule::Array<jule::Str,3> _231e8d3bb_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,3> _231e8d3bb_DISTARCH = jule::Array<jule::Str,3>({jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _231e881a7_PATH_STDLIB = jule::Str();
static jule::Str _231e881a7_PATH_EXEC = jule::Str();
static jule::Str _231e881a7_PATH_WD = jule::Str();
static jule::Str _231e881a7_PATH_API = jule::Str();
static jule::Array<jule::U8,32> _2335950dc_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _2335950dc_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static jule::Trait<jule::Error> _23363dc35_OVERFLOW_ERROR = jule::new_struct<_23363dc35_bits_error>(new( std::nothrow ) _23363dc35_bits_error(jule::Str("integer overflow", 16)));
static jule::Trait<jule::Error> _23363dc35_DIVIDE_ERROR = jule::new_struct<_23363dc35_bits_error>(new( std::nothrow ) _23363dc35_bits_error(jule::Str("integer divide by zero", 22)));
static jule::Array<jule::F64,6> _2330179a5__SIN = jule::Array<jule::F64,6>({0.00000000015896230157654656,-0.000000025050747762857807,0.0000027557313621385722,-0.0001984126982958954,0.008333333333322118,-0.1666666666666663});
static jule::Array<jule::F64,6> _2330179a5__COS = jule::Array<jule::F64,6>({-0.000000000011358536521387682,0.000000002087570084197473,-0.0000002755731417929674,0.000024801587288851704,-0.0013888888888873056,0.041666666666666595});
static jule::Array<jule::F64,3> _232ee6e4b__TAN_P = jule::Array<jule::F64,3>({-13093.693918138379,1153516.6483858742,-17956525.197648488});
static jule::Array<jule::F64,5> _232ee6e4b__TAN_Q = jule::Array<jule::F64,5>({1LL,13681.296347069296,-1320892.3444021097,25008380.18233579,-53869575.592945464});
static jule::Array<jule::U64,20> _23308d1ac_M_PI4 = jule::Array<jule::U64,20>({1LLU,5040379952546458195LLU,17892431488136887169LLU,13169980181085364355LLU,18204331823439776451LLU,7946843935494350272LLU,905889640498799673LLU,18175356263134875261LLU,15061281708168349961LLU,15220161563773041794LLU,8296664548579374057LLU,4109744767560208502LLU,4607516669194743839LLU,16023283104648321598LLU,15739233654134936430LLU,11424645774684705882LLU,16883842788696515318LLU,8795094592981902804LLU,15561835991111744016LLU,12395701187267450711LLU});
static jule::Array<jule::F64,6> _233133cd0_P_1R8 = jule::Array<jule::F64,6>({0LL,0.11718749999998865,13.239480659307358,412.05185430737856,3874.7453891396053,7914.479540318917});
static jule::Array<jule::F64,5> _233133cd0_P_1S8 = jule::Array<jule::F64,5>({114.20737037567841,3650.9308342085346,36956.206026903346,97602.79359349508,30804.27206278888});
static jule::Array<jule::F64,6> _233133cd0_P_1R5 = jule::Array<jule::F64,6>({0.000000000013199051955624352,0.1171874931906141,6.802751278684329,108.30818299018911,517.6361395331998,528.7152013633375});
static jule::Array<jule::F64,5> _233133cd0_P_1S5 = jule::Array<jule::F64,5>({59.28059872211313,991.4014187336144,5353.26695291488,7844.690317495512,1504.0468881036106});
static jule::Array<jule::F64,6> _233133cd0_P_1R3 = jule::Array<jule::F64,6>({0.000000003025039161373736,0.11718686556725359,3.9329775003331564,35.11940355916369,91.05501107507813,48.55906851973649});
static jule::Array<jule::F64,5> _233133cd0_P_1S3 = jule::Array<jule::F64,5>({34.79130950012515,336.76245874782575,1046.8713997577513,890.8113463982564,103.78793243963928});
static jule::Array<jule::F64,6> _233133cd0_P_1R2 = jule::Array<jule::F64,6>({0.00000010771083010687374,0.11717621946268335,2.368514966676088,12.242610914826123,17.693971127168773,5.073523125888185});
static jule::Array<jule::F64,5> _233133cd0_P_1S2 = jule::Array<jule::F64,5>({21.43648593638214,125.29022716840275,232.2764690571628,117.6793732871471,8.364638933716183});
static jule::Array<jule::F64,6> _233133cd0_Q_1R8 = jule::Array<jule::F64,6>({0LL,-0.10253906249999271,-16.271753454459,-759.6017225139501,-11849.806670242959,-48438.512428575035});
static jule::Array<jule::F64,6> _233133cd0_Q_1S8 = jule::Array<jule::F64,6>({161.3953697007229,7825.385999233485,133875.33628724958,719657.7236832409,666601.2326177764,-294490.26430383464});
static jule::Array<jule::F64,6> _233133cd0_Q_1R5 = jule::Array<jule::F64,6>({-0.00000000002089799311417641,-0.10253905024137543,-8.05644828123936,-183.66960747488838,-1373.1937606550816,-2612.4444045321566});
static jule::Array<jule::F64,6> _233133cd0_Q_1S5 = jule::Array<jule::F64,6>({81.27655013843358,1991.7987346048596,17468.48519249089,49851.42709103523,27948.075163891812,-4719.183547951285});
static jule::Array<jule::F64,6> _233133cd0_Q_1R3 = jule::Array<jule::F64,6>({-0.000000005078312264617666,-0.10253782982083709,-4.610115811394734,-57.847221656278364,-228.2445407376317,-219.21012847890933});
static jule::Array<jule::F64,6> _233133cd0_Q_1S3 = jule::Array<jule::F64,6>({47.66515503237295,673.8651126766997,3380.1528667952634,5547.729097207228,1903.119193388108,-135.20119144430734});
static jule::Array<jule::F64,6> _233133cd0_Q_1R2 = jule::Array<jule::F64,6>({-0.00000017838172751095887,-0.10251704260798555,-2.7522056827818746,-19.663616264370372,-42.32531333728305,-21.371921170370406});
static jule::Array<jule::F64,6> _233133cd0_Q_1S2 = jule::Array<jule::F64,6>({29.533362906052385,252.98154998219053,757.5028348686454,739.3932053204672,155.94900333666612,-4.959498988226282});
static jule::Array<jule::F64,6> _23323e4c3_P_0R8 = jule::Array<jule::F64,6>({0LL,-0.07031249999999004,-8.081670412753498,-257.06310567970485,-2485.216410094288,-5253.043804907295});
static jule::Array<jule::F64,5> _23323e4c3_P_0S8 = jule::Array<jule::F64,5>({116.53436461966818,3833.7447536412183,40597.857264847255,116752.97256437592,47627.728414673096});
static jule::Array<jule::F64,6> _23323e4c3_P_0R5 = jule::Array<jule::F64,6>({-0.00000000001141254646918945,-0.07031249408735993,-4.159610644705878,-67.67476522651673,-331.23129964917297,-346.4333883656049});
static jule::Array<jule::F64,5> _23323e4c3_P_0S5 = jule::Array<jule::F64,5>({60.753938269230034,1051.2523059570458,5978.970943338558,9625.445143577745,2406.058159229391});
static jule::Array<jule::F64,6> _23323e4c3_P_0R3 = jule::Array<jule::F64,6>({-0.000000002547046017719519,-0.07031196163814817,-2.409032215495296,-21.96597747348831,-58.07917047017376,-31.44794705948885});
static jule::Array<jule::F64,5> _23323e4c3_P_0S3 = jule::Array<jule::F64,5>({35.85603380552097,361.51398305030386,1193.6078379211153,1127.9967985690741,173.58093081333575});
static jule::Array<jule::F64,6> _23323e4c3_P_0R2 = jule::Array<jule::F64,6>({-0.00000008875343330325264,-0.07030309954836247,-1.4507384678095299,-7.635696138235278,-11.193166886035675,-3.2336457935133534});
static jule::Array<jule::F64,5> _23323e4c3_P_0S2 = jule::Array<jule::F64,5>({22.22029975320888,136.2067942182152,270.4702786580835,153.87539420832033,14.65761769482562});
static jule::Array<jule::F64,6> _23323e4c3_Q_0R8 = jule::Array<jule::F64,6>({0LL,0.0732421874999935,11.76820646822527,557.6733802564019,8859.197207564686,37014.62677768878});
static jule::Array<jule::F64,6> _23323e4c3_Q_0S8 = jule::Array<jule::F64,6>({163.77602689568982,8098.344946564498,142538.29141912048,803309.2571195144,840501.5798190605,-343899.2935378666});
static jule::Array<jule::F64,6> _23323e4c3_Q_0R5 = jule::Array<jule::F64,6>({0.000000000018408596359451553,0.07324217666126848,5.8356350896205695,135.11157728644983,1027.243765961641,1989.9778586460538});
static jule::Array<jule::F64,6> _23323e4c3_Q_0S5 = jule::Array<jule::F64,6>({82.77661022365378,2077.81416421393,18847.28877857181,56751.11228949473,35976.75384251145,-5354.342756019448});
static jule::Array<jule::F64,6> _23323e4c3_Q_0R3 = jule::Array<jule::F64,6>({0.000000004377410140897386,0.07324111800429114,3.344231375161707,42.621844074541265,170.8080913405656,166.73394869665117});
static jule::Array<jule::F64,6> _23323e4c3_Q_0S3 = jule::Array<jule::F64,6>({48.75887297245872,709.689221056606,3704.1482262011136,6460.425167525689,2516.3336892036896,-149.2474518361564});
static jule::Array<jule::F64,6> _23323e4c3_Q_0R2 = jule::Array<jule::F64,6>({0.00000015044444488698327,0.07322342659630793,1.99819174093816,14.495602934788574,31.666231750478154,16.252707571092927});
static jule::Array<jule::F64,6> _23323e4c3_Q_0S2 = jule::Array<jule::F64,6>({30.36558483552192,269.34811860804984,844.7837575953201,882.9358451124886,212.66638851179883,-5.3109549388266695});
static jule::Array<jule::F64,12> _2332536d5__LGAM_A = jule::Array<jule::F64,12>({0.07721566490153287,0.3224670334241136,0.06735230105312927,0.020580808432516733,0.007385550860814029,0.0028905138367341563,0.0011927076318336207,0.0005100697921535113,0.00022086279071390839,0.00010801156724758394,0.000025214456545125733,0.000044864094961891516});
static jule::Array<jule::F64,7> _2332536d5__LGAM_R = jule::Array<jule::F64,7>({1LL,1.3920053346762105,0.7219355475671381,0.17193386563280308,0.01864591917156529,0.0007779424963818936,0.000007326684307446256});
static jule::Array<jule::F64,7> _2332536d5__LGAM_S = jule::Array<jule::F64,7>({-0.07721566490153287,0.21498241596060885,0.325778796408931,0.14635047265246445,0.02664227030336386,0.0018402845140733772,0.00003194753265841009});
static jule::Array<jule::F64,15> _2332536d5__LGAM_T = jule::Array<jule::F64,15>({0.48383612272381005,-0.1475877229945939,0.06462494023913339,-0.032788541075985965,0.01797067508118204,-0.010314224129834144,0.006100538702462913,-0.0036845201678113826,0.0022596478090061247,-0.0014034646998923284,0.000881081882437654,-0.0005385953053567405,0.00031563207090362595,-0.00031275416837512086,0.0003355291926355191});
static jule::Array<jule::F64,6> _2332536d5__LGAM_U = jule::Array<jule::F64,6>({-0.07721566490153287,0.6328270640250934,1.4549225013723477,0.9777175279633727,0.22896372806469245,0.013381091853678766});
static jule::Array<jule::F64,6> _2332536d5__LGAM_V = jule::Array<jule::F64,6>({1LL,2.4559779371304113,2.128489763798934,0.7692851504566728,0.10422264559336913,0.003217092422824239});
static jule::Array<jule::F64,7> _2332536d5__LGAM_W = jule::Array<jule::F64,7>({0.4189385332046727,0.08333333333333297,-0.0027777777772877554,0.0007936505586430196,-0.00059518755745034,0.0008363399189962821,-0.0016309293409657527});
static jule::Array<jule::F64,3> _2333413d8_TANH_P = jule::Array<jule::F64,3>({-0.9643991794250523,-99.28772310019185,-1614.6876844170845});
static jule::Array<jule::F64,3> _2333413d8_TANH_Q = jule::Array<jule::F64,3>({112.81167849163293,2235.4883906010045,4844.063053251255});
static jule::Array<jule::F64,7> _2333c338d__GAM_P = jule::Array<jule::F64,7>({0.00016011952247675185,0.0011913514700658638,0.010421379756176158,0.04763678004571372,0.20744822764843598,0.4942148268014971,1LL});
static jule::Array<jule::F64,8> _2333c338d__GAM_Q = jule::Array<jule::F64,8>({-0.000023158187332412014,0.0005396055804933034,-0.004456419138517973,0.011813978522206043,0.035823639860549865,-0.23459179571824335,0.0714304917030273,1LL});
static jule::Array<jule::F64,5> _2333c338d__GAM_S = jule::Array<jule::F64,5>({0.0007873113957930937,-0.00022954996161337813,-0.0026813261780578124,0.0034722222160545866,0.08333333333334822});
static jule::Array<jule::F64,32> _23349c2be_POW10_TAB = jule::Array<jule::F64,32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0,100000000000000000000000.0,1000000000000000000000000.0,10000000000000000000000000.0,100000000000000000000000000.0,1000000000000000000000000000.0,10000000000000000000000000000.0,100000000000000000000000000000.0,1000000000000000000000000000000.0,10000000000000000000000000000000.0});
static jule::Array<jule::F64,10> _23349c2be_POW10_POSTAB32 = jule::Array<jule::F64,10>({1LL,100000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0,1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0});
static jule::Array<jule::F64,11> _23349c2be_POW10_NEGTAB32 = jule::Array<jule::F64,11>({1LL,0.00000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001,0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001});
static _231e5e5ce_FloatInfo _231e5e5ce_F32_INFO = _231e5e5ce_FloatInfo(23LLU,8LLU,-127LL);
static _231e5e5ce_FloatInfo _231e5e5ce_F64_INFO = _231e5e5ce_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _232172407_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _232d42e62_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _232d42e62_F64_POW10 = jule::Slice<jule::F64>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
static jule::Slice<jule::F32> _232d42e62_F32_POW10 = jule::Slice<jule::F32>({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL});
static jule::Array<jule::U64,20> _232dd8d0a_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_232e74d1e_LeftCheat> _232e74d1e_LEFTCHEATS = jule::Slice<_232e74d1e_LeftCheat>({_232e74d1e_LeftCheat(0LL,jule::Str()),_232e74d1e_LeftCheat(1LL,jule::Str("5", 1)),_232e74d1e_LeftCheat(1LL,jule::Str("25", 2)),_232e74d1e_LeftCheat(1LL,jule::Str("125", 3)),_232e74d1e_LeftCheat(2LL,jule::Str("625", 3)),_232e74d1e_LeftCheat(2LL,jule::Str("3125", 4)),_232e74d1e_LeftCheat(2LL,jule::Str("15625", 5)),_232e74d1e_LeftCheat(3LL,jule::Str("78125", 5)),_232e74d1e_LeftCheat(3LL,jule::Str("390625", 6)),_232e74d1e_LeftCheat(3LL,jule::Str("1953125", 7)),_232e74d1e_LeftCheat(4LL,jule::Str("9765625", 7)),_232e74d1e_LeftCheat(4LL,jule::Str("48828125", 8)),_232e74d1e_LeftCheat(4LL,jule::Str("244140625", 9)),_232e74d1e_LeftCheat(4LL,jule::Str("1220703125", 10)),_232e74d1e_LeftCheat(5LL,jule::Str("6103515625", 10)),_232e74d1e_LeftCheat(5LL,jule::Str("30517578125", 11)),_232e74d1e_LeftCheat(5LL,jule::Str("152587890625", 12)),_232e74d1e_LeftCheat(6LL,jule::Str("762939453125", 12)),_232e74d1e_LeftCheat(6LL,jule::Str("3814697265625", 13)),_232e74d1e_LeftCheat(6LL,jule::Str("19073486328125", 14)),_232e74d1e_LeftCheat(7LL,jule::Str("95367431640625", 14)),_232e74d1e_LeftCheat(7LL,jule::Str("476837158203125", 15)),_232e74d1e_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_232e74d1e_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_232e74d1e_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_232e74d1e_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_232e74d1e_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_232e74d1e_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_232e74d1e_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_232e74d1e_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_232e74d1e_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_232e74d1e_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_232e74d1e_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_232e74d1e_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_232e74d1e_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_232e74d1e_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_232e74d1e_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_232e74d1e_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_232e74d1e_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_232e74d1e_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_232e74d1e_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_232e74d1e_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_232e74d1e_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_232e74d1e_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_232e74d1e_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_232e74d1e_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_232e74d1e_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_232e74d1e_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_232e74d1e_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_232e74d1e_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_232e74d1e_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_232e74d1e_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_232e74d1e_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_232e74d1e_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_232e74d1e_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_232e74d1e_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_232e74d1e_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_232e74d1e_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_232e74d1e_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_232e74d1e_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_232e74d1e_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Ptr<jule::Bool> _231e64150_OPT_COPY = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Bool> _231e64150_OPT_DEADCODE = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Bool> _231e64150_OPT_APPEND = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Bool> _231e64150_OPT_MATH = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Bool> _231e64150_OPT_ACCESS = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<jule::Bool> _231e64150_OPT_INLINE = jule::new_ptr<jule::Bool>(false);
static jule::Ptr<_234223e9b_RangeTable> _23380876d__C = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(0LLU,31LLU,1LLU),_234223e9b_Range16(127LLU,159LLU,1LLU),_234223e9b_Range16(173LLU,1536LLU,1363LLU),_234223e9b_Range16(1537LLU,1541LLU,1LLU),_234223e9b_Range16(1564LLU,1757LLU,193LLU),_234223e9b_Range16(1807LLU,2192LLU,385LLU),_234223e9b_Range16(2193LLU,2274LLU,81LLU),_234223e9b_Range16(6158LLU,8203LLU,2045LLU),_234223e9b_Range16(8204LLU,8207LLU,1LLU),_234223e9b_Range16(8234LLU,8238LLU,1LLU),_234223e9b_Range16(8288LLU,8292LLU,1LLU),_234223e9b_Range16(8294LLU,8303LLU,1LLU),_234223e9b_Range16(55296LLU,63743LLU,1LLU),_234223e9b_Range16(65279LLU,65529LLU,250LLU),_234223e9b_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69821LLU,69837LLU,16LLU),_234223e9b_Range32(78896LLU,78911LLU,1LLU),_234223e9b_Range32(113824LLU,113827LLU,1LLU),_234223e9b_Range32(119155LLU,119162LLU,1LLU),_234223e9b_Range32(917505LLU,917536LLU,31LLU),_234223e9b_Range32(917537LLU,917631LLU,1LLU),_234223e9b_Range32(983040LLU,1048573LLU,1LLU),_234223e9b_Range32(1048576LLU,1114109LLU,1LLU)}),2LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(0LLU,31LLU,1LLU),_234223e9b_Range16(127LLU,159LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),2LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CF = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(173LLU,1536LLU,1363LLU),_234223e9b_Range16(1537LLU,1541LLU,1LLU),_234223e9b_Range16(1564LLU,1757LLU,193LLU),_234223e9b_Range16(1807LLU,2192LLU,385LLU),_234223e9b_Range16(2193LLU,2274LLU,81LLU),_234223e9b_Range16(6158LLU,8203LLU,2045LLU),_234223e9b_Range16(8204LLU,8207LLU,1LLU),_234223e9b_Range16(8234LLU,8238LLU,1LLU),_234223e9b_Range16(8288LLU,8292LLU,1LLU),_234223e9b_Range16(8294LLU,8303LLU,1LLU),_234223e9b_Range16(65279LLU,65529LLU,250LLU),_234223e9b_Range16(65530LLU,65531LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69821LLU,69837LLU,16LLU),_234223e9b_Range32(78896LLU,78911LLU,1LLU),_234223e9b_Range32(113824LLU,113827LLU,1LLU),_234223e9b_Range32(119155LLU,119162LLU,1LLU),_234223e9b_Range32(917505LLU,917536LLU,31LLU),_234223e9b_Range32(917537LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(57344LLU,63743LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(983040LLU,1048573LLU,1LLU),_234223e9b_Range32(1048576LLU,1114109LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CS = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(55296LLU,57343LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__L = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(65LLU,90LLU,1LLU),_234223e9b_Range16(97LLU,122LLU,1LLU),_234223e9b_Range16(170LLU,181LLU,11LLU),_234223e9b_Range16(186LLU,192LLU,6LLU),_234223e9b_Range16(193LLU,214LLU,1LLU),_234223e9b_Range16(216LLU,246LLU,1LLU),_234223e9b_Range16(248LLU,705LLU,1LLU),_234223e9b_Range16(710LLU,721LLU,1LLU),_234223e9b_Range16(736LLU,740LLU,1LLU),_234223e9b_Range16(748LLU,750LLU,2LLU),_234223e9b_Range16(880LLU,884LLU,1LLU),_234223e9b_Range16(886LLU,887LLU,1LLU),_234223e9b_Range16(890LLU,893LLU,1LLU),_234223e9b_Range16(895LLU,902LLU,7LLU),_234223e9b_Range16(904LLU,906LLU,1LLU),_234223e9b_Range16(908LLU,910LLU,2LLU),_234223e9b_Range16(911LLU,929LLU,1LLU),_234223e9b_Range16(931LLU,1013LLU,1LLU),_234223e9b_Range16(1015LLU,1153LLU,1LLU),_234223e9b_Range16(1162LLU,1327LLU,1LLU),_234223e9b_Range16(1329LLU,1366LLU,1LLU),_234223e9b_Range16(1369LLU,1376LLU,7LLU),_234223e9b_Range16(1377LLU,1416LLU,1LLU),_234223e9b_Range16(1488LLU,1514LLU,1LLU),_234223e9b_Range16(1519LLU,1522LLU,1LLU),_234223e9b_Range16(1568LLU,1610LLU,1LLU),_234223e9b_Range16(1646LLU,1647LLU,1LLU),_234223e9b_Range16(1649LLU,1747LLU,1LLU),_234223e9b_Range16(1749LLU,1765LLU,16LLU),_234223e9b_Range16(1766LLU,1774LLU,8LLU),_234223e9b_Range16(1775LLU,1786LLU,11LLU),_234223e9b_Range16(1787LLU,1788LLU,1LLU),_234223e9b_Range16(1791LLU,1808LLU,17LLU),_234223e9b_Range16(1810LLU,1839LLU,1LLU),_234223e9b_Range16(1869LLU,1957LLU,1LLU),_234223e9b_Range16(1969LLU,1994LLU,25LLU),_234223e9b_Range16(1995LLU,2026LLU,1LLU),_234223e9b_Range16(2036LLU,2037LLU,1LLU),_234223e9b_Range16(2042LLU,2048LLU,6LLU),_234223e9b_Range16(2049LLU,2069LLU,1LLU),_234223e9b_Range16(2074LLU,2084LLU,10LLU),_234223e9b_Range16(2088LLU,2112LLU,24LLU),_234223e9b_Range16(2113LLU,2136LLU,1LLU),_234223e9b_Range16(2144LLU,2154LLU,1LLU),_234223e9b_Range16(2160LLU,2183LLU,1LLU),_234223e9b_Range16(2185LLU,2190LLU,1LLU),_234223e9b_Range16(2208LLU,2249LLU,1LLU),_234223e9b_Range16(2308LLU,2361LLU,1LLU),_234223e9b_Range16(2365LLU,2384LLU,19LLU),_234223e9b_Range16(2392LLU,2401LLU,1LLU),_234223e9b_Range16(2417LLU,2432LLU,1LLU),_234223e9b_Range16(2437LLU,2444LLU,1LLU),_234223e9b_Range16(2447LLU,2448LLU,1LLU),_234223e9b_Range16(2451LLU,2472LLU,1LLU),_234223e9b_Range16(2474LLU,2480LLU,1LLU),_234223e9b_Range16(2482LLU,2486LLU,4LLU),_234223e9b_Range16(2487LLU,2489LLU,1LLU),_234223e9b_Range16(2493LLU,2510LLU,17LLU),_234223e9b_Range16(2524LLU,2525LLU,1LLU),_234223e9b_Range16(2527LLU,2529LLU,1LLU),_234223e9b_Range16(2544LLU,2545LLU,1LLU),_234223e9b_Range16(2556LLU,2565LLU,9LLU),_234223e9b_Range16(2566LLU,2570LLU,1LLU),_234223e9b_Range16(2575LLU,2576LLU,1LLU),_234223e9b_Range16(2579LLU,2600LLU,1LLU),_234223e9b_Range16(2602LLU,2608LLU,1LLU),_234223e9b_Range16(2610LLU,2611LLU,1LLU),_234223e9b_Range16(2613LLU,2614LLU,1LLU),_234223e9b_Range16(2616LLU,2617LLU,1LLU),_234223e9b_Range16(2649LLU,2652LLU,1LLU),_234223e9b_Range16(2654LLU,2674LLU,20LLU),_234223e9b_Range16(2675LLU,2676LLU,1LLU),_234223e9b_Range16(2693LLU,2701LLU,1LLU),_234223e9b_Range16(2703LLU,2705LLU,1LLU),_234223e9b_Range16(2707LLU,2728LLU,1LLU),_234223e9b_Range16(2730LLU,2736LLU,1LLU),_234223e9b_Range16(2738LLU,2739LLU,1LLU),_234223e9b_Range16(2741LLU,2745LLU,1LLU),_234223e9b_Range16(2749LLU,2768LLU,19LLU),_234223e9b_Range16(2784LLU,2785LLU,1LLU),_234223e9b_Range16(2809LLU,2821LLU,12LLU),_234223e9b_Range16(2822LLU,2828LLU,1LLU),_234223e9b_Range16(2831LLU,2832LLU,1LLU),_234223e9b_Range16(2835LLU,2856LLU,1LLU),_234223e9b_Range16(2858LLU,2864LLU,1LLU),_234223e9b_Range16(2866LLU,2867LLU,1LLU),_234223e9b_Range16(2869LLU,2873LLU,1LLU),_234223e9b_Range16(2877LLU,2908LLU,31LLU),_234223e9b_Range16(2909LLU,2911LLU,2LLU),_234223e9b_Range16(2912LLU,2913LLU,1LLU),_234223e9b_Range16(2929LLU,2947LLU,18LLU),_234223e9b_Range16(2949LLU,2954LLU,1LLU),_234223e9b_Range16(2958LLU,2960LLU,1LLU),_234223e9b_Range16(2962LLU,2965LLU,1LLU),_234223e9b_Range16(2969LLU,2970LLU,1LLU),_234223e9b_Range16(2972LLU,2974LLU,2LLU),_234223e9b_Range16(2975LLU,2979LLU,4LLU),_234223e9b_Range16(2980LLU,2984LLU,4LLU),_234223e9b_Range16(2985LLU,2986LLU,1LLU),_234223e9b_Range16(2990LLU,3001LLU,1LLU),_234223e9b_Range16(3024LLU,3077LLU,53LLU),_234223e9b_Range16(3078LLU,3084LLU,1LLU),_234223e9b_Range16(3086LLU,3088LLU,1LLU),_234223e9b_Range16(3090LLU,3112LLU,1LLU),_234223e9b_Range16(3114LLU,3129LLU,1LLU),_234223e9b_Range16(3133LLU,3160LLU,27LLU),_234223e9b_Range16(3161LLU,3162LLU,1LLU),_234223e9b_Range16(3165LLU,3168LLU,3LLU),_234223e9b_Range16(3169LLU,3200LLU,31LLU),_234223e9b_Range16(3205LLU,3212LLU,1LLU),_234223e9b_Range16(3214LLU,3216LLU,1LLU),_234223e9b_Range16(3218LLU,3240LLU,1LLU),_234223e9b_Range16(3242LLU,3251LLU,1LLU),_234223e9b_Range16(3253LLU,3257LLU,1LLU),_234223e9b_Range16(3261LLU,3293LLU,32LLU),_234223e9b_Range16(3294LLU,3296LLU,2LLU),_234223e9b_Range16(3297LLU,3313LLU,16LLU),_234223e9b_Range16(3314LLU,3332LLU,18LLU),_234223e9b_Range16(3333LLU,3340LLU,1LLU),_234223e9b_Range16(3342LLU,3344LLU,1LLU),_234223e9b_Range16(3346LLU,3386LLU,1LLU),_234223e9b_Range16(3389LLU,3406LLU,17LLU),_234223e9b_Range16(3412LLU,3414LLU,1LLU),_234223e9b_Range16(3423LLU,3425LLU,1LLU),_234223e9b_Range16(3450LLU,3455LLU,1LLU),_234223e9b_Range16(3461LLU,3478LLU,1LLU),_234223e9b_Range16(3482LLU,3505LLU,1LLU),_234223e9b_Range16(3507LLU,3515LLU,1LLU),_234223e9b_Range16(3517LLU,3520LLU,3LLU),_234223e9b_Range16(3521LLU,3526LLU,1LLU),_234223e9b_Range16(3585LLU,3632LLU,1LLU),_234223e9b_Range16(3634LLU,3635LLU,1LLU),_234223e9b_Range16(3648LLU,3654LLU,1LLU),_234223e9b_Range16(3713LLU,3714LLU,1LLU),_234223e9b_Range16(3716LLU,3718LLU,2LLU),_234223e9b_Range16(3719LLU,3722LLU,1LLU),_234223e9b_Range16(3724LLU,3747LLU,1LLU),_234223e9b_Range16(3749LLU,3751LLU,2LLU),_234223e9b_Range16(3752LLU,3760LLU,1LLU),_234223e9b_Range16(3762LLU,3763LLU,1LLU),_234223e9b_Range16(3773LLU,3776LLU,3LLU),_234223e9b_Range16(3777LLU,3780LLU,1LLU),_234223e9b_Range16(3782LLU,3804LLU,22LLU),_234223e9b_Range16(3805LLU,3807LLU,1LLU),_234223e9b_Range16(3840LLU,3904LLU,64LLU),_234223e9b_Range16(3905LLU,3911LLU,1LLU),_234223e9b_Range16(3913LLU,3948LLU,1LLU),_234223e9b_Range16(3976LLU,3980LLU,1LLU),_234223e9b_Range16(4096LLU,4138LLU,1LLU),_234223e9b_Range16(4159LLU,4176LLU,17LLU),_234223e9b_Range16(4177LLU,4181LLU,1LLU),_234223e9b_Range16(4186LLU,4189LLU,1LLU),_234223e9b_Range16(4193LLU,4197LLU,4LLU),_234223e9b_Range16(4198LLU,4206LLU,8LLU),_234223e9b_Range16(4207LLU,4208LLU,1LLU),_234223e9b_Range16(4213LLU,4225LLU,1LLU),_234223e9b_Range16(4238LLU,4256LLU,18LLU),_234223e9b_Range16(4257LLU,4293LLU,1LLU),_234223e9b_Range16(4295LLU,4301LLU,6LLU),_234223e9b_Range16(4304LLU,4346LLU,1LLU),_234223e9b_Range16(4348LLU,4680LLU,1LLU),_234223e9b_Range16(4682LLU,4685LLU,1LLU),_234223e9b_Range16(4688LLU,4694LLU,1LLU),_234223e9b_Range16(4696LLU,4698LLU,2LLU),_234223e9b_Range16(4699LLU,4701LLU,1LLU),_234223e9b_Range16(4704LLU,4744LLU,1LLU),_234223e9b_Range16(4746LLU,4749LLU,1LLU),_234223e9b_Range16(4752LLU,4784LLU,1LLU),_234223e9b_Range16(4786LLU,4789LLU,1LLU),_234223e9b_Range16(4792LLU,4798LLU,1LLU),_234223e9b_Range16(4800LLU,4802LLU,2LLU),_234223e9b_Range16(4803LLU,4805LLU,1LLU),_234223e9b_Range16(4808LLU,4822LLU,1LLU),_234223e9b_Range16(4824LLU,4880LLU,1LLU),_234223e9b_Range16(4882LLU,4885LLU,1LLU),_234223e9b_Range16(4888LLU,4954LLU,1LLU),_234223e9b_Range16(4992LLU,5007LLU,1LLU),_234223e9b_Range16(5024LLU,5109LLU,1LLU),_234223e9b_Range16(5112LLU,5117LLU,1LLU),_234223e9b_Range16(5121LLU,5740LLU,1LLU),_234223e9b_Range16(5743LLU,5759LLU,1LLU),_234223e9b_Range16(5761LLU,5786LLU,1LLU),_234223e9b_Range16(5792LLU,5866LLU,1LLU),_234223e9b_Range16(5873LLU,5880LLU,1LLU),_234223e9b_Range16(5888LLU,5905LLU,1LLU),_234223e9b_Range16(5919LLU,5937LLU,1LLU),_234223e9b_Range16(5952LLU,5969LLU,1LLU),_234223e9b_Range16(5984LLU,5996LLU,1LLU),_234223e9b_Range16(5998LLU,6000LLU,1LLU),_234223e9b_Range16(6016LLU,6067LLU,1LLU),_234223e9b_Range16(6103LLU,6108LLU,5LLU),_234223e9b_Range16(6176LLU,6264LLU,1LLU),_234223e9b_Range16(6272LLU,6276LLU,1LLU),_234223e9b_Range16(6279LLU,6312LLU,1LLU),_234223e9b_Range16(6314LLU,6320LLU,6LLU),_234223e9b_Range16(6321LLU,6389LLU,1LLU),_234223e9b_Range16(6400LLU,6430LLU,1LLU),_234223e9b_Range16(6480LLU,6509LLU,1LLU),_234223e9b_Range16(6512LLU,6516LLU,1LLU),_234223e9b_Range16(6528LLU,6571LLU,1LLU),_234223e9b_Range16(6576LLU,6601LLU,1LLU),_234223e9b_Range16(6656LLU,6678LLU,1LLU),_234223e9b_Range16(6688LLU,6740LLU,1LLU),_234223e9b_Range16(6823LLU,6917LLU,94LLU),_234223e9b_Range16(6918LLU,6963LLU,1LLU),_234223e9b_Range16(6981LLU,6988LLU,1LLU),_234223e9b_Range16(7043LLU,7072LLU,1LLU),_234223e9b_Range16(7086LLU,7087LLU,1LLU),_234223e9b_Range16(7098LLU,7141LLU,1LLU),_234223e9b_Range16(7168LLU,7203LLU,1LLU),_234223e9b_Range16(7245LLU,7247LLU,1LLU),_234223e9b_Range16(7258LLU,7293LLU,1LLU),_234223e9b_Range16(7296LLU,7304LLU,1LLU),_234223e9b_Range16(7312LLU,7354LLU,1LLU),_234223e9b_Range16(7357LLU,7359LLU,1LLU),_234223e9b_Range16(7401LLU,7404LLU,1LLU),_234223e9b_Range16(7406LLU,7411LLU,1LLU),_234223e9b_Range16(7413LLU,7414LLU,1LLU),_234223e9b_Range16(7418LLU,7424LLU,6LLU),_234223e9b_Range16(7425LLU,7615LLU,1LLU),_234223e9b_Range16(7680LLU,7957LLU,1LLU),_234223e9b_Range16(7960LLU,7965LLU,1LLU),_234223e9b_Range16(7968LLU,8005LLU,1LLU),_234223e9b_Range16(8008LLU,8013LLU,1LLU),_234223e9b_Range16(8016LLU,8023LLU,1LLU),_234223e9b_Range16(8025LLU,8031LLU,2LLU),_234223e9b_Range16(8032LLU,8061LLU,1LLU),_234223e9b_Range16(8064LLU,8116LLU,1LLU),_234223e9b_Range16(8118LLU,8124LLU,1LLU),_234223e9b_Range16(8126LLU,8130LLU,4LLU),_234223e9b_Range16(8131LLU,8132LLU,1LLU),_234223e9b_Range16(8134LLU,8140LLU,1LLU),_234223e9b_Range16(8144LLU,8147LLU,1LLU),_234223e9b_Range16(8150LLU,8155LLU,1LLU),_234223e9b_Range16(8160LLU,8172LLU,1LLU),_234223e9b_Range16(8178LLU,8180LLU,1LLU),_234223e9b_Range16(8182LLU,8188LLU,1LLU),_234223e9b_Range16(8305LLU,8319LLU,14LLU),_234223e9b_Range16(8336LLU,8348LLU,1LLU),_234223e9b_Range16(8450LLU,8455LLU,5LLU),_234223e9b_Range16(8458LLU,8467LLU,1LLU),_234223e9b_Range16(8469LLU,8473LLU,4LLU),_234223e9b_Range16(8474LLU,8477LLU,1LLU),_234223e9b_Range16(8484LLU,8490LLU,2LLU),_234223e9b_Range16(8491LLU,8493LLU,1LLU),_234223e9b_Range16(8495LLU,8505LLU,1LLU),_234223e9b_Range16(8508LLU,8511LLU,1LLU),_234223e9b_Range16(8517LLU,8521LLU,1LLU),_234223e9b_Range16(8526LLU,8579LLU,53LLU),_234223e9b_Range16(8580LLU,11264LLU,2684LLU),_234223e9b_Range16(11265LLU,11492LLU,1LLU),_234223e9b_Range16(11499LLU,11502LLU,1LLU),_234223e9b_Range16(11506LLU,11507LLU,1LLU),_234223e9b_Range16(11520LLU,11557LLU,1LLU),_234223e9b_Range16(11559LLU,11565LLU,6LLU),_234223e9b_Range16(11568LLU,11623LLU,1LLU),_234223e9b_Range16(11631LLU,11648LLU,17LLU),_234223e9b_Range16(11649LLU,11670LLU,1LLU),_234223e9b_Range16(11680LLU,11686LLU,1LLU),_234223e9b_Range16(11688LLU,11694LLU,1LLU),_234223e9b_Range16(11696LLU,11702LLU,1LLU),_234223e9b_Range16(11704LLU,11710LLU,1LLU),_234223e9b_Range16(11712LLU,11718LLU,1LLU),_234223e9b_Range16(11720LLU,11726LLU,1LLU),_234223e9b_Range16(11728LLU,11734LLU,1LLU),_234223e9b_Range16(11736LLU,11742LLU,1LLU),_234223e9b_Range16(11823LLU,12293LLU,470LLU),_234223e9b_Range16(12294LLU,12337LLU,43LLU),_234223e9b_Range16(12338LLU,12341LLU,1LLU),_234223e9b_Range16(12347LLU,12348LLU,1LLU),_234223e9b_Range16(12353LLU,12438LLU,1LLU),_234223e9b_Range16(12445LLU,12447LLU,1LLU),_234223e9b_Range16(12449LLU,12538LLU,1LLU),_234223e9b_Range16(12540LLU,12543LLU,1LLU),_234223e9b_Range16(12549LLU,12591LLU,1LLU),_234223e9b_Range16(12593LLU,12686LLU,1LLU),_234223e9b_Range16(12704LLU,12735LLU,1LLU),_234223e9b_Range16(12784LLU,12799LLU,1LLU),_234223e9b_Range16(13312LLU,19903LLU,1LLU),_234223e9b_Range16(19968LLU,42124LLU,1LLU),_234223e9b_Range16(42192LLU,42237LLU,1LLU),_234223e9b_Range16(42240LLU,42508LLU,1LLU),_234223e9b_Range16(42512LLU,42527LLU,1LLU),_234223e9b_Range16(42538LLU,42539LLU,1LLU),_234223e9b_Range16(42560LLU,42606LLU,1LLU),_234223e9b_Range16(42623LLU,42653LLU,1LLU),_234223e9b_Range16(42656LLU,42725LLU,1LLU),_234223e9b_Range16(42775LLU,42783LLU,1LLU),_234223e9b_Range16(42786LLU,42888LLU,1LLU),_234223e9b_Range16(42891LLU,42954LLU,1LLU),_234223e9b_Range16(42960LLU,42961LLU,1LLU),_234223e9b_Range16(42963LLU,42965LLU,2LLU),_234223e9b_Range16(42966LLU,42969LLU,1LLU),_234223e9b_Range16(42994LLU,43009LLU,1LLU),_234223e9b_Range16(43011LLU,43013LLU,1LLU),_234223e9b_Range16(43015LLU,43018LLU,1LLU),_234223e9b_Range16(43020LLU,43042LLU,1LLU),_234223e9b_Range16(43072LLU,43123LLU,1LLU),_234223e9b_Range16(43138LLU,43187LLU,1LLU),_234223e9b_Range16(43250LLU,43255LLU,1LLU),_234223e9b_Range16(43259LLU,43261LLU,2LLU),_234223e9b_Range16(43262LLU,43274LLU,12LLU),_234223e9b_Range16(43275LLU,43301LLU,1LLU),_234223e9b_Range16(43312LLU,43334LLU,1LLU),_234223e9b_Range16(43360LLU,43388LLU,1LLU),_234223e9b_Range16(43396LLU,43442LLU,1LLU),_234223e9b_Range16(43471LLU,43488LLU,17LLU),_234223e9b_Range16(43489LLU,43492LLU,1LLU),_234223e9b_Range16(43494LLU,43503LLU,1LLU),_234223e9b_Range16(43514LLU,43518LLU,1LLU),_234223e9b_Range16(43520LLU,43560LLU,1LLU),_234223e9b_Range16(43584LLU,43586LLU,1LLU),_234223e9b_Range16(43588LLU,43595LLU,1LLU),_234223e9b_Range16(43616LLU,43638LLU,1LLU),_234223e9b_Range16(43642LLU,43646LLU,4LLU),_234223e9b_Range16(43647LLU,43695LLU,1LLU),_234223e9b_Range16(43697LLU,43701LLU,4LLU),_234223e9b_Range16(43702LLU,43705LLU,3LLU),_234223e9b_Range16(43706LLU,43709LLU,1LLU),_234223e9b_Range16(43712LLU,43714LLU,2LLU),_234223e9b_Range16(43739LLU,43741LLU,1LLU),_234223e9b_Range16(43744LLU,43754LLU,1LLU),_234223e9b_Range16(43762LLU,43764LLU,1LLU),_234223e9b_Range16(43777LLU,43782LLU,1LLU),_234223e9b_Range16(43785LLU,43790LLU,1LLU),_234223e9b_Range16(43793LLU,43798LLU,1LLU),_234223e9b_Range16(43808LLU,43814LLU,1LLU),_234223e9b_Range16(43816LLU,43822LLU,1LLU),_234223e9b_Range16(43824LLU,43866LLU,1LLU),_234223e9b_Range16(43868LLU,43881LLU,1LLU),_234223e9b_Range16(43888LLU,44002LLU,1LLU),_234223e9b_Range16(44032LLU,55203LLU,1LLU),_234223e9b_Range16(55216LLU,55238LLU,1LLU),_234223e9b_Range16(55243LLU,55291LLU,1LLU),_234223e9b_Range16(63744LLU,64109LLU,1LLU),_234223e9b_Range16(64112LLU,64217LLU,1LLU),_234223e9b_Range16(64256LLU,64262LLU,1LLU),_234223e9b_Range16(64275LLU,64279LLU,1LLU),_234223e9b_Range16(64285LLU,64287LLU,2LLU),_234223e9b_Range16(64288LLU,64296LLU,1LLU),_234223e9b_Range16(64298LLU,64310LLU,1LLU),_234223e9b_Range16(64312LLU,64316LLU,1LLU),_234223e9b_Range16(64318LLU,64320LLU,2LLU),_234223e9b_Range16(64321LLU,64323LLU,2LLU),_234223e9b_Range16(64324LLU,64326LLU,2LLU),_234223e9b_Range16(64327LLU,64433LLU,1LLU),_234223e9b_Range16(64467LLU,64829LLU,1LLU),_234223e9b_Range16(64848LLU,64911LLU,1LLU),_234223e9b_Range16(64914LLU,64967LLU,1LLU),_234223e9b_Range16(65008LLU,65019LLU,1LLU),_234223e9b_Range16(65136LLU,65140LLU,1LLU),_234223e9b_Range16(65142LLU,65276LLU,1LLU),_234223e9b_Range16(65313LLU,65338LLU,1LLU),_234223e9b_Range16(65345LLU,65370LLU,1LLU),_234223e9b_Range16(65382LLU,65470LLU,1LLU),_234223e9b_Range16(65474LLU,65479LLU,1LLU),_234223e9b_Range16(65482LLU,65487LLU,1LLU),_234223e9b_Range16(65490LLU,65495LLU,1LLU),_234223e9b_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65536LLU,65547LLU,1LLU),_234223e9b_Range32(65549LLU,65574LLU,1LLU),_234223e9b_Range32(65576LLU,65594LLU,1LLU),_234223e9b_Range32(65596LLU,65597LLU,1LLU),_234223e9b_Range32(65599LLU,65613LLU,1LLU),_234223e9b_Range32(65616LLU,65629LLU,1LLU),_234223e9b_Range32(65664LLU,65786LLU,1LLU),_234223e9b_Range32(66176LLU,66204LLU,1LLU),_234223e9b_Range32(66208LLU,66256LLU,1LLU),_234223e9b_Range32(66304LLU,66335LLU,1LLU),_234223e9b_Range32(66349LLU,66368LLU,1LLU),_234223e9b_Range32(66370LLU,66377LLU,1LLU),_234223e9b_Range32(66384LLU,66421LLU,1LLU),_234223e9b_Range32(66432LLU,66461LLU,1LLU),_234223e9b_Range32(66464LLU,66499LLU,1LLU),_234223e9b_Range32(66504LLU,66511LLU,1LLU),_234223e9b_Range32(66560LLU,66717LLU,1LLU),_234223e9b_Range32(66736LLU,66771LLU,1LLU),_234223e9b_Range32(66776LLU,66811LLU,1LLU),_234223e9b_Range32(66816LLU,66855LLU,1LLU),_234223e9b_Range32(66864LLU,66915LLU,1LLU),_234223e9b_Range32(66928LLU,66938LLU,1LLU),_234223e9b_Range32(66940LLU,66954LLU,1LLU),_234223e9b_Range32(66956LLU,66962LLU,1LLU),_234223e9b_Range32(66964LLU,66965LLU,1LLU),_234223e9b_Range32(66967LLU,66977LLU,1LLU),_234223e9b_Range32(66979LLU,66993LLU,1LLU),_234223e9b_Range32(66995LLU,67001LLU,1LLU),_234223e9b_Range32(67003LLU,67004LLU,1LLU),_234223e9b_Range32(67072LLU,67382LLU,1LLU),_234223e9b_Range32(67392LLU,67413LLU,1LLU),_234223e9b_Range32(67424LLU,67431LLU,1LLU),_234223e9b_Range32(67456LLU,67461LLU,1LLU),_234223e9b_Range32(67463LLU,67504LLU,1LLU),_234223e9b_Range32(67506LLU,67514LLU,1LLU),_234223e9b_Range32(67584LLU,67589LLU,1LLU),_234223e9b_Range32(67592LLU,67594LLU,2LLU),_234223e9b_Range32(67595LLU,67637LLU,1LLU),_234223e9b_Range32(67639LLU,67640LLU,1LLU),_234223e9b_Range32(67644LLU,67647LLU,3LLU),_234223e9b_Range32(67648LLU,67669LLU,1LLU),_234223e9b_Range32(67680LLU,67702LLU,1LLU),_234223e9b_Range32(67712LLU,67742LLU,1LLU),_234223e9b_Range32(67808LLU,67826LLU,1LLU),_234223e9b_Range32(67828LLU,67829LLU,1LLU),_234223e9b_Range32(67840LLU,67861LLU,1LLU),_234223e9b_Range32(67872LLU,67897LLU,1LLU),_234223e9b_Range32(67968LLU,68023LLU,1LLU),_234223e9b_Range32(68030LLU,68031LLU,1LLU),_234223e9b_Range32(68096LLU,68112LLU,16LLU),_234223e9b_Range32(68113LLU,68115LLU,1LLU),_234223e9b_Range32(68117LLU,68119LLU,1LLU),_234223e9b_Range32(68121LLU,68149LLU,1LLU),_234223e9b_Range32(68192LLU,68220LLU,1LLU),_234223e9b_Range32(68224LLU,68252LLU,1LLU),_234223e9b_Range32(68288LLU,68295LLU,1LLU),_234223e9b_Range32(68297LLU,68324LLU,1LLU),_234223e9b_Range32(68352LLU,68405LLU,1LLU),_234223e9b_Range32(68416LLU,68437LLU,1LLU),_234223e9b_Range32(68448LLU,68466LLU,1LLU),_234223e9b_Range32(68480LLU,68497LLU,1LLU),_234223e9b_Range32(68608LLU,68680LLU,1LLU),_234223e9b_Range32(68736LLU,68786LLU,1LLU),_234223e9b_Range32(68800LLU,68850LLU,1LLU),_234223e9b_Range32(68864LLU,68899LLU,1LLU),_234223e9b_Range32(69248LLU,69289LLU,1LLU),_234223e9b_Range32(69296LLU,69297LLU,1LLU),_234223e9b_Range32(69376LLU,69404LLU,1LLU),_234223e9b_Range32(69415LLU,69424LLU,9LLU),_234223e9b_Range32(69425LLU,69445LLU,1LLU),_234223e9b_Range32(69488LLU,69505LLU,1LLU),_234223e9b_Range32(69552LLU,69572LLU,1LLU),_234223e9b_Range32(69600LLU,69622LLU,1LLU),_234223e9b_Range32(69635LLU,69687LLU,1LLU),_234223e9b_Range32(69745LLU,69746LLU,1LLU),_234223e9b_Range32(69749LLU,69763LLU,14LLU),_234223e9b_Range32(69764LLU,69807LLU,1LLU),_234223e9b_Range32(69840LLU,69864LLU,1LLU),_234223e9b_Range32(69891LLU,69926LLU,1LLU),_234223e9b_Range32(69956LLU,69959LLU,3LLU),_234223e9b_Range32(69968LLU,70002LLU,1LLU),_234223e9b_Range32(70006LLU,70019LLU,13LLU),_234223e9b_Range32(70020LLU,70066LLU,1LLU),_234223e9b_Range32(70081LLU,70084LLU,1LLU),_234223e9b_Range32(70106LLU,70108LLU,2LLU),_234223e9b_Range32(70144LLU,70161LLU,1LLU),_234223e9b_Range32(70163LLU,70187LLU,1LLU),_234223e9b_Range32(70207LLU,70208LLU,1LLU),_234223e9b_Range32(70272LLU,70278LLU,1LLU),_234223e9b_Range32(70280LLU,70282LLU,2LLU),_234223e9b_Range32(70283LLU,70285LLU,1LLU),_234223e9b_Range32(70287LLU,70301LLU,1LLU),_234223e9b_Range32(70303LLU,70312LLU,1LLU),_234223e9b_Range32(70320LLU,70366LLU,1LLU),_234223e9b_Range32(70405LLU,70412LLU,1LLU),_234223e9b_Range32(70415LLU,70416LLU,1LLU),_234223e9b_Range32(70419LLU,70440LLU,1LLU),_234223e9b_Range32(70442LLU,70448LLU,1LLU),_234223e9b_Range32(70450LLU,70451LLU,1LLU),_234223e9b_Range32(70453LLU,70457LLU,1LLU),_234223e9b_Range32(70461LLU,70480LLU,19LLU),_234223e9b_Range32(70493LLU,70497LLU,1LLU),_234223e9b_Range32(70656LLU,70708LLU,1LLU),_234223e9b_Range32(70727LLU,70730LLU,1LLU),_234223e9b_Range32(70751LLU,70753LLU,1LLU),_234223e9b_Range32(70784LLU,70831LLU,1LLU),_234223e9b_Range32(70852LLU,70853LLU,1LLU),_234223e9b_Range32(70855LLU,71040LLU,185LLU),_234223e9b_Range32(71041LLU,71086LLU,1LLU),_234223e9b_Range32(71128LLU,71131LLU,1LLU),_234223e9b_Range32(71168LLU,71215LLU,1LLU),_234223e9b_Range32(71236LLU,71296LLU,60LLU),_234223e9b_Range32(71297LLU,71338LLU,1LLU),_234223e9b_Range32(71352LLU,71424LLU,72LLU),_234223e9b_Range32(71425LLU,71450LLU,1LLU),_234223e9b_Range32(71488LLU,71494LLU,1LLU),_234223e9b_Range32(71680LLU,71723LLU,1LLU),_234223e9b_Range32(71840LLU,71903LLU,1LLU),_234223e9b_Range32(71935LLU,71942LLU,1LLU),_234223e9b_Range32(71945LLU,71948LLU,3LLU),_234223e9b_Range32(71949LLU,71955LLU,1LLU),_234223e9b_Range32(71957LLU,71958LLU,1LLU),_234223e9b_Range32(71960LLU,71983LLU,1LLU),_234223e9b_Range32(71999LLU,72001LLU,2LLU),_234223e9b_Range32(72096LLU,72103LLU,1LLU),_234223e9b_Range32(72106LLU,72144LLU,1LLU),_234223e9b_Range32(72161LLU,72163LLU,2LLU),_234223e9b_Range32(72192LLU,72203LLU,11LLU),_234223e9b_Range32(72204LLU,72242LLU,1LLU),_234223e9b_Range32(72250LLU,72272LLU,22LLU),_234223e9b_Range32(72284LLU,72329LLU,1LLU),_234223e9b_Range32(72349LLU,72368LLU,19LLU),_234223e9b_Range32(72369LLU,72440LLU,1LLU),_234223e9b_Range32(72704LLU,72712LLU,1LLU),_234223e9b_Range32(72714LLU,72750LLU,1LLU),_234223e9b_Range32(72768LLU,72818LLU,50LLU),_234223e9b_Range32(72819LLU,72847LLU,1LLU),_234223e9b_Range32(72960LLU,72966LLU,1LLU),_234223e9b_Range32(72968LLU,72969LLU,1LLU),_234223e9b_Range32(72971LLU,73008LLU,1LLU),_234223e9b_Range32(73030LLU,73056LLU,26LLU),_234223e9b_Range32(73057LLU,73061LLU,1LLU),_234223e9b_Range32(73063LLU,73064LLU,1LLU),_234223e9b_Range32(73066LLU,73097LLU,1LLU),_234223e9b_Range32(73112LLU,73440LLU,328LLU),_234223e9b_Range32(73441LLU,73458LLU,1LLU),_234223e9b_Range32(73474LLU,73476LLU,2LLU),_234223e9b_Range32(73477LLU,73488LLU,1LLU),_234223e9b_Range32(73490LLU,73523LLU,1LLU),_234223e9b_Range32(73648LLU,73728LLU,80LLU),_234223e9b_Range32(73729LLU,74649LLU,1LLU),_234223e9b_Range32(74880LLU,75075LLU,1LLU),_234223e9b_Range32(77712LLU,77808LLU,1LLU),_234223e9b_Range32(77824LLU,78895LLU,1LLU),_234223e9b_Range32(78913LLU,78918LLU,1LLU),_234223e9b_Range32(82944LLU,83526LLU,1LLU),_234223e9b_Range32(92160LLU,92728LLU,1LLU),_234223e9b_Range32(92736LLU,92766LLU,1LLU),_234223e9b_Range32(92784LLU,92862LLU,1LLU),_234223e9b_Range32(92880LLU,92909LLU,1LLU),_234223e9b_Range32(92928LLU,92975LLU,1LLU),_234223e9b_Range32(92992LLU,92995LLU,1LLU),_234223e9b_Range32(93027LLU,93047LLU,1LLU),_234223e9b_Range32(93053LLU,93071LLU,1LLU),_234223e9b_Range32(93760LLU,93823LLU,1LLU),_234223e9b_Range32(93952LLU,94026LLU,1LLU),_234223e9b_Range32(94032LLU,94099LLU,67LLU),_234223e9b_Range32(94100LLU,94111LLU,1LLU),_234223e9b_Range32(94176LLU,94177LLU,1LLU),_234223e9b_Range32(94179LLU,94208LLU,29LLU),_234223e9b_Range32(94209LLU,100343LLU,1LLU),_234223e9b_Range32(100352LLU,101589LLU,1LLU),_234223e9b_Range32(101632LLU,101640LLU,1LLU),_234223e9b_Range32(110576LLU,110579LLU,1LLU),_234223e9b_Range32(110581LLU,110587LLU,1LLU),_234223e9b_Range32(110589LLU,110590LLU,1LLU),_234223e9b_Range32(110592LLU,110882LLU,1LLU),_234223e9b_Range32(110898LLU,110928LLU,30LLU),_234223e9b_Range32(110929LLU,110930LLU,1LLU),_234223e9b_Range32(110933LLU,110948LLU,15LLU),_234223e9b_Range32(110949LLU,110951LLU,1LLU),_234223e9b_Range32(110960LLU,111355LLU,1LLU),_234223e9b_Range32(113664LLU,113770LLU,1LLU),_234223e9b_Range32(113776LLU,113788LLU,1LLU),_234223e9b_Range32(113792LLU,113800LLU,1LLU),_234223e9b_Range32(113808LLU,113817LLU,1LLU),_234223e9b_Range32(119808LLU,119892LLU,1LLU),_234223e9b_Range32(119894LLU,119964LLU,1LLU),_234223e9b_Range32(119966LLU,119967LLU,1LLU),_234223e9b_Range32(119970LLU,119973LLU,3LLU),_234223e9b_Range32(119974LLU,119977LLU,3LLU),_234223e9b_Range32(119978LLU,119980LLU,1LLU),_234223e9b_Range32(119982LLU,119993LLU,1LLU),_234223e9b_Range32(119995LLU,119997LLU,2LLU),_234223e9b_Range32(119998LLU,120003LLU,1LLU),_234223e9b_Range32(120005LLU,120069LLU,1LLU),_234223e9b_Range32(120071LLU,120074LLU,1LLU),_234223e9b_Range32(120077LLU,120084LLU,1LLU),_234223e9b_Range32(120086LLU,120092LLU,1LLU),_234223e9b_Range32(120094LLU,120121LLU,1LLU),_234223e9b_Range32(120123LLU,120126LLU,1LLU),_234223e9b_Range32(120128LLU,120132LLU,1LLU),_234223e9b_Range32(120134LLU,120138LLU,4LLU),_234223e9b_Range32(120139LLU,120144LLU,1LLU),_234223e9b_Range32(120146LLU,120485LLU,1LLU),_234223e9b_Range32(120488LLU,120512LLU,1LLU),_234223e9b_Range32(120514LLU,120538LLU,1LLU),_234223e9b_Range32(120540LLU,120570LLU,1LLU),_234223e9b_Range32(120572LLU,120596LLU,1LLU),_234223e9b_Range32(120598LLU,120628LLU,1LLU),_234223e9b_Range32(120630LLU,120654LLU,1LLU),_234223e9b_Range32(120656LLU,120686LLU,1LLU),_234223e9b_Range32(120688LLU,120712LLU,1LLU),_234223e9b_Range32(120714LLU,120744LLU,1LLU),_234223e9b_Range32(120746LLU,120770LLU,1LLU),_234223e9b_Range32(120772LLU,120779LLU,1LLU),_234223e9b_Range32(122624LLU,122654LLU,1LLU),_234223e9b_Range32(122661LLU,122666LLU,1LLU),_234223e9b_Range32(122928LLU,122989LLU,1LLU),_234223e9b_Range32(123136LLU,123180LLU,1LLU),_234223e9b_Range32(123191LLU,123197LLU,1LLU),_234223e9b_Range32(123214LLU,123536LLU,322LLU),_234223e9b_Range32(123537LLU,123565LLU,1LLU),_234223e9b_Range32(123584LLU,123627LLU,1LLU),_234223e9b_Range32(124112LLU,124139LLU,1LLU),_234223e9b_Range32(124896LLU,124902LLU,1LLU),_234223e9b_Range32(124904LLU,124907LLU,1LLU),_234223e9b_Range32(124909LLU,124910LLU,1LLU),_234223e9b_Range32(124912LLU,124926LLU,1LLU),_234223e9b_Range32(124928LLU,125124LLU,1LLU),_234223e9b_Range32(125184LLU,125251LLU,1LLU),_234223e9b_Range32(125259LLU,126464LLU,1205LLU),_234223e9b_Range32(126465LLU,126467LLU,1LLU),_234223e9b_Range32(126469LLU,126495LLU,1LLU),_234223e9b_Range32(126497LLU,126498LLU,1LLU),_234223e9b_Range32(126500LLU,126503LLU,3LLU),_234223e9b_Range32(126505LLU,126514LLU,1LLU),_234223e9b_Range32(126516LLU,126519LLU,1LLU),_234223e9b_Range32(126521LLU,126523LLU,2LLU),_234223e9b_Range32(126530LLU,126535LLU,5LLU),_234223e9b_Range32(126537LLU,126541LLU,2LLU),_234223e9b_Range32(126542LLU,126543LLU,1LLU),_234223e9b_Range32(126545LLU,126546LLU,1LLU),_234223e9b_Range32(126548LLU,126551LLU,3LLU),_234223e9b_Range32(126553LLU,126561LLU,2LLU),_234223e9b_Range32(126562LLU,126564LLU,2LLU),_234223e9b_Range32(126567LLU,126570LLU,1LLU),_234223e9b_Range32(126572LLU,126578LLU,1LLU),_234223e9b_Range32(126580LLU,126583LLU,1LLU),_234223e9b_Range32(126585LLU,126588LLU,1LLU),_234223e9b_Range32(126590LLU,126592LLU,2LLU),_234223e9b_Range32(126593LLU,126601LLU,1LLU),_234223e9b_Range32(126603LLU,126619LLU,1LLU),_234223e9b_Range32(126625LLU,126627LLU,1LLU),_234223e9b_Range32(126629LLU,126633LLU,1LLU),_234223e9b_Range32(126635LLU,126651LLU,1LLU),_234223e9b_Range32(131072LLU,173791LLU,1LLU),_234223e9b_Range32(173824LLU,177977LLU,1LLU),_234223e9b_Range32(177984LLU,178205LLU,1LLU),_234223e9b_Range32(178208LLU,183969LLU,1LLU),_234223e9b_Range32(183984LLU,191456LLU,1LLU),_234223e9b_Range32(194560LLU,195101LLU,1LLU),_234223e9b_Range32(196608LLU,201546LLU,1LLU),_234223e9b_Range32(201552LLU,205743LLU,1LLU)}),6LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(97LLU,122LLU,1LLU),_234223e9b_Range16(181LLU,223LLU,42LLU),_234223e9b_Range16(224LLU,246LLU,1LLU),_234223e9b_Range16(248LLU,255LLU,1LLU),_234223e9b_Range16(257LLU,311LLU,2LLU),_234223e9b_Range16(312LLU,328LLU,2LLU),_234223e9b_Range16(329LLU,375LLU,2LLU),_234223e9b_Range16(378LLU,382LLU,2LLU),_234223e9b_Range16(383LLU,384LLU,1LLU),_234223e9b_Range16(387LLU,389LLU,2LLU),_234223e9b_Range16(392LLU,396LLU,4LLU),_234223e9b_Range16(397LLU,402LLU,5LLU),_234223e9b_Range16(405LLU,409LLU,4LLU),_234223e9b_Range16(410LLU,411LLU,1LLU),_234223e9b_Range16(414LLU,417LLU,3LLU),_234223e9b_Range16(419LLU,421LLU,2LLU),_234223e9b_Range16(424LLU,426LLU,2LLU),_234223e9b_Range16(427LLU,429LLU,2LLU),_234223e9b_Range16(432LLU,436LLU,4LLU),_234223e9b_Range16(438LLU,441LLU,3LLU),_234223e9b_Range16(442LLU,445LLU,3LLU),_234223e9b_Range16(446LLU,447LLU,1LLU),_234223e9b_Range16(454LLU,460LLU,3LLU),_234223e9b_Range16(462LLU,476LLU,2LLU),_234223e9b_Range16(477LLU,495LLU,2LLU),_234223e9b_Range16(496LLU,499LLU,3LLU),_234223e9b_Range16(501LLU,505LLU,4LLU),_234223e9b_Range16(507LLU,563LLU,2LLU),_234223e9b_Range16(564LLU,569LLU,1LLU),_234223e9b_Range16(572LLU,575LLU,3LLU),_234223e9b_Range16(576LLU,578LLU,2LLU),_234223e9b_Range16(583LLU,591LLU,2LLU),_234223e9b_Range16(592LLU,659LLU,1LLU),_234223e9b_Range16(661LLU,687LLU,1LLU),_234223e9b_Range16(881LLU,883LLU,2LLU),_234223e9b_Range16(887LLU,891LLU,4LLU),_234223e9b_Range16(892LLU,893LLU,1LLU),_234223e9b_Range16(912LLU,940LLU,28LLU),_234223e9b_Range16(941LLU,974LLU,1LLU),_234223e9b_Range16(976LLU,977LLU,1LLU),_234223e9b_Range16(981LLU,983LLU,1LLU),_234223e9b_Range16(985LLU,1007LLU,2LLU),_234223e9b_Range16(1008LLU,1011LLU,1LLU),_234223e9b_Range16(1013LLU,1019LLU,3LLU),_234223e9b_Range16(1020LLU,1072LLU,52LLU),_234223e9b_Range16(1073LLU,1119LLU,1LLU),_234223e9b_Range16(1121LLU,1153LLU,2LLU),_234223e9b_Range16(1163LLU,1215LLU,2LLU),_234223e9b_Range16(1218LLU,1230LLU,2LLU),_234223e9b_Range16(1231LLU,1327LLU,2LLU),_234223e9b_Range16(1376LLU,1416LLU,1LLU),_234223e9b_Range16(4304LLU,4346LLU,1LLU),_234223e9b_Range16(4349LLU,4351LLU,1LLU),_234223e9b_Range16(5112LLU,5117LLU,1LLU),_234223e9b_Range16(7296LLU,7304LLU,1LLU),_234223e9b_Range16(7424LLU,7467LLU,1LLU),_234223e9b_Range16(7531LLU,7543LLU,1LLU),_234223e9b_Range16(7545LLU,7578LLU,1LLU),_234223e9b_Range16(7681LLU,7829LLU,2LLU),_234223e9b_Range16(7830LLU,7837LLU,1LLU),_234223e9b_Range16(7839LLU,7935LLU,2LLU),_234223e9b_Range16(7936LLU,7943LLU,1LLU),_234223e9b_Range16(7952LLU,7957LLU,1LLU),_234223e9b_Range16(7968LLU,7975LLU,1LLU),_234223e9b_Range16(7984LLU,7991LLU,1LLU),_234223e9b_Range16(8000LLU,8005LLU,1LLU),_234223e9b_Range16(8016LLU,8023LLU,1LLU),_234223e9b_Range16(8032LLU,8039LLU,1LLU),_234223e9b_Range16(8048LLU,8061LLU,1LLU),_234223e9b_Range16(8064LLU,8071LLU,1LLU),_234223e9b_Range16(8080LLU,8087LLU,1LLU),_234223e9b_Range16(8096LLU,8103LLU,1LLU),_234223e9b_Range16(8112LLU,8116LLU,1LLU),_234223e9b_Range16(8118LLU,8119LLU,1LLU),_234223e9b_Range16(8126LLU,8130LLU,4LLU),_234223e9b_Range16(8131LLU,8132LLU,1LLU),_234223e9b_Range16(8134LLU,8135LLU,1LLU),_234223e9b_Range16(8144LLU,8147LLU,1LLU),_234223e9b_Range16(8150LLU,8151LLU,1LLU),_234223e9b_Range16(8160LLU,8167LLU,1LLU),_234223e9b_Range16(8178LLU,8180LLU,1LLU),_234223e9b_Range16(8182LLU,8183LLU,1LLU),_234223e9b_Range16(8458LLU,8462LLU,4LLU),_234223e9b_Range16(8463LLU,8467LLU,4LLU),_234223e9b_Range16(8495LLU,8505LLU,5LLU),_234223e9b_Range16(8508LLU,8509LLU,1LLU),_234223e9b_Range16(8518LLU,8521LLU,1LLU),_234223e9b_Range16(8526LLU,8580LLU,54LLU),_234223e9b_Range16(11312LLU,11359LLU,1LLU),_234223e9b_Range16(11361LLU,11365LLU,4LLU),_234223e9b_Range16(11366LLU,11372LLU,2LLU),_234223e9b_Range16(11377LLU,11379LLU,2LLU),_234223e9b_Range16(11380LLU,11382LLU,2LLU),_234223e9b_Range16(11383LLU,11387LLU,1LLU),_234223e9b_Range16(11393LLU,11491LLU,2LLU),_234223e9b_Range16(11492LLU,11500LLU,8LLU),_234223e9b_Range16(11502LLU,11507LLU,5LLU),_234223e9b_Range16(11520LLU,11557LLU,1LLU),_234223e9b_Range16(11559LLU,11565LLU,6LLU),_234223e9b_Range16(42561LLU,42605LLU,2LLU),_234223e9b_Range16(42625LLU,42651LLU,2LLU),_234223e9b_Range16(42787LLU,42799LLU,2LLU),_234223e9b_Range16(42800LLU,42801LLU,1LLU),_234223e9b_Range16(42803LLU,42865LLU,2LLU),_234223e9b_Range16(42866LLU,42872LLU,1LLU),_234223e9b_Range16(42874LLU,42876LLU,2LLU),_234223e9b_Range16(42879LLU,42887LLU,2LLU),_234223e9b_Range16(42892LLU,42894LLU,2LLU),_234223e9b_Range16(42897LLU,42899LLU,2LLU),_234223e9b_Range16(42900LLU,42901LLU,1LLU),_234223e9b_Range16(42903LLU,42921LLU,2LLU),_234223e9b_Range16(42927LLU,42933LLU,6LLU),_234223e9b_Range16(42935LLU,42947LLU,2LLU),_234223e9b_Range16(42952LLU,42954LLU,2LLU),_234223e9b_Range16(42961LLU,42969LLU,2LLU),_234223e9b_Range16(42998LLU,43002LLU,4LLU),_234223e9b_Range16(43824LLU,43866LLU,1LLU),_234223e9b_Range16(43872LLU,43880LLU,1LLU),_234223e9b_Range16(43888LLU,43967LLU,1LLU),_234223e9b_Range16(64256LLU,64262LLU,1LLU),_234223e9b_Range16(64275LLU,64279LLU,1LLU),_234223e9b_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66600LLU,66639LLU,1LLU),_234223e9b_Range32(66776LLU,66811LLU,1LLU),_234223e9b_Range32(66967LLU,66977LLU,1LLU),_234223e9b_Range32(66979LLU,66993LLU,1LLU),_234223e9b_Range32(66995LLU,67001LLU,1LLU),_234223e9b_Range32(67003LLU,67004LLU,1LLU),_234223e9b_Range32(68800LLU,68850LLU,1LLU),_234223e9b_Range32(71872LLU,71903LLU,1LLU),_234223e9b_Range32(93792LLU,93823LLU,1LLU),_234223e9b_Range32(119834LLU,119859LLU,1LLU),_234223e9b_Range32(119886LLU,119892LLU,1LLU),_234223e9b_Range32(119894LLU,119911LLU,1LLU),_234223e9b_Range32(119938LLU,119963LLU,1LLU),_234223e9b_Range32(119990LLU,119993LLU,1LLU),_234223e9b_Range32(119995LLU,119997LLU,2LLU),_234223e9b_Range32(119998LLU,120003LLU,1LLU),_234223e9b_Range32(120005LLU,120015LLU,1LLU),_234223e9b_Range32(120042LLU,120067LLU,1LLU),_234223e9b_Range32(120094LLU,120119LLU,1LLU),_234223e9b_Range32(120146LLU,120171LLU,1LLU),_234223e9b_Range32(120198LLU,120223LLU,1LLU),_234223e9b_Range32(120250LLU,120275LLU,1LLU),_234223e9b_Range32(120302LLU,120327LLU,1LLU),_234223e9b_Range32(120354LLU,120379LLU,1LLU),_234223e9b_Range32(120406LLU,120431LLU,1LLU),_234223e9b_Range32(120458LLU,120485LLU,1LLU),_234223e9b_Range32(120514LLU,120538LLU,1LLU),_234223e9b_Range32(120540LLU,120545LLU,1LLU),_234223e9b_Range32(120572LLU,120596LLU,1LLU),_234223e9b_Range32(120598LLU,120603LLU,1LLU),_234223e9b_Range32(120630LLU,120654LLU,1LLU),_234223e9b_Range32(120656LLU,120661LLU,1LLU),_234223e9b_Range32(120688LLU,120712LLU,1LLU),_234223e9b_Range32(120714LLU,120719LLU,1LLU),_234223e9b_Range32(120746LLU,120770LLU,1LLU),_234223e9b_Range32(120772LLU,120777LLU,1LLU),_234223e9b_Range32(120779LLU,122624LLU,1845LLU),_234223e9b_Range32(122625LLU,122633LLU,1LLU),_234223e9b_Range32(122635LLU,122654LLU,1LLU),_234223e9b_Range32(122661LLU,122666LLU,1LLU),_234223e9b_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(688LLU,705LLU,1LLU),_234223e9b_Range16(710LLU,721LLU,1LLU),_234223e9b_Range16(736LLU,740LLU,1LLU),_234223e9b_Range16(748LLU,750LLU,2LLU),_234223e9b_Range16(884LLU,890LLU,6LLU),_234223e9b_Range16(1369LLU,1600LLU,231LLU),_234223e9b_Range16(1765LLU,1766LLU,1LLU),_234223e9b_Range16(2036LLU,2037LLU,1LLU),_234223e9b_Range16(2042LLU,2074LLU,32LLU),_234223e9b_Range16(2084LLU,2088LLU,4LLU),_234223e9b_Range16(2249LLU,2417LLU,168LLU),_234223e9b_Range16(3654LLU,3782LLU,128LLU),_234223e9b_Range16(4348LLU,6103LLU,1755LLU),_234223e9b_Range16(6211LLU,6823LLU,612LLU),_234223e9b_Range16(7288LLU,7293LLU,1LLU),_234223e9b_Range16(7468LLU,7530LLU,1LLU),_234223e9b_Range16(7544LLU,7579LLU,35LLU),_234223e9b_Range16(7580LLU,7615LLU,1LLU),_234223e9b_Range16(8305LLU,8319LLU,14LLU),_234223e9b_Range16(8336LLU,8348LLU,1LLU),_234223e9b_Range16(11388LLU,11389LLU,1LLU),_234223e9b_Range16(11631LLU,11823LLU,192LLU),_234223e9b_Range16(12293LLU,12337LLU,44LLU),_234223e9b_Range16(12338LLU,12341LLU,1LLU),_234223e9b_Range16(12347LLU,12445LLU,98LLU),_234223e9b_Range16(12446LLU,12540LLU,94LLU),_234223e9b_Range16(12541LLU,12542LLU,1LLU),_234223e9b_Range16(40981LLU,42232LLU,1251LLU),_234223e9b_Range16(42233LLU,42237LLU,1LLU),_234223e9b_Range16(42508LLU,42623LLU,115LLU),_234223e9b_Range16(42652LLU,42653LLU,1LLU),_234223e9b_Range16(42775LLU,42783LLU,1LLU),_234223e9b_Range16(42864LLU,42888LLU,24LLU),_234223e9b_Range16(42994LLU,42996LLU,1LLU),_234223e9b_Range16(43000LLU,43001LLU,1LLU),_234223e9b_Range16(43471LLU,43494LLU,23LLU),_234223e9b_Range16(43632LLU,43741LLU,109LLU),_234223e9b_Range16(43763LLU,43764LLU,1LLU),_234223e9b_Range16(43868LLU,43871LLU,1LLU),_234223e9b_Range16(43881LLU,65392LLU,21511LLU),_234223e9b_Range16(65438LLU,65439LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67456LLU,67461LLU,1LLU),_234223e9b_Range32(67463LLU,67504LLU,1LLU),_234223e9b_Range32(67506LLU,67514LLU,1LLU),_234223e9b_Range32(92992LLU,92995LLU,1LLU),_234223e9b_Range32(94099LLU,94111LLU,1LLU),_234223e9b_Range32(94176LLU,94177LLU,1LLU),_234223e9b_Range32(94179LLU,110576LLU,16397LLU),_234223e9b_Range32(110577LLU,110579LLU,1LLU),_234223e9b_Range32(110581LLU,110587LLU,1LLU),_234223e9b_Range32(110589LLU,110590LLU,1LLU),_234223e9b_Range32(122928LLU,122989LLU,1LLU),_234223e9b_Range32(123191LLU,123197LLU,1LLU),_234223e9b_Range32(124139LLU,125259LLU,1120LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(170LLU,186LLU,16LLU),_234223e9b_Range16(443LLU,448LLU,5LLU),_234223e9b_Range16(449LLU,451LLU,1LLU),_234223e9b_Range16(660LLU,1488LLU,828LLU),_234223e9b_Range16(1489LLU,1514LLU,1LLU),_234223e9b_Range16(1519LLU,1522LLU,1LLU),_234223e9b_Range16(1568LLU,1599LLU,1LLU),_234223e9b_Range16(1601LLU,1610LLU,1LLU),_234223e9b_Range16(1646LLU,1647LLU,1LLU),_234223e9b_Range16(1649LLU,1747LLU,1LLU),_234223e9b_Range16(1749LLU,1774LLU,25LLU),_234223e9b_Range16(1775LLU,1786LLU,11LLU),_234223e9b_Range16(1787LLU,1788LLU,1LLU),_234223e9b_Range16(1791LLU,1808LLU,17LLU),_234223e9b_Range16(1810LLU,1839LLU,1LLU),_234223e9b_Range16(1869LLU,1957LLU,1LLU),_234223e9b_Range16(1969LLU,1994LLU,25LLU),_234223e9b_Range16(1995LLU,2026LLU,1LLU),_234223e9b_Range16(2048LLU,2069LLU,1LLU),_234223e9b_Range16(2112LLU,2136LLU,1LLU),_234223e9b_Range16(2144LLU,2154LLU,1LLU),_234223e9b_Range16(2160LLU,2183LLU,1LLU),_234223e9b_Range16(2185LLU,2190LLU,1LLU),_234223e9b_Range16(2208LLU,2248LLU,1LLU),_234223e9b_Range16(2308LLU,2361LLU,1LLU),_234223e9b_Range16(2365LLU,2384LLU,19LLU),_234223e9b_Range16(2392LLU,2401LLU,1LLU),_234223e9b_Range16(2418LLU,2432LLU,1LLU),_234223e9b_Range16(2437LLU,2444LLU,1LLU),_234223e9b_Range16(2447LLU,2448LLU,1LLU),_234223e9b_Range16(2451LLU,2472LLU,1LLU),_234223e9b_Range16(2474LLU,2480LLU,1LLU),_234223e9b_Range16(2482LLU,2486LLU,4LLU),_234223e9b_Range16(2487LLU,2489LLU,1LLU),_234223e9b_Range16(2493LLU,2510LLU,17LLU),_234223e9b_Range16(2524LLU,2525LLU,1LLU),_234223e9b_Range16(2527LLU,2529LLU,1LLU),_234223e9b_Range16(2544LLU,2545LLU,1LLU),_234223e9b_Range16(2556LLU,2565LLU,9LLU),_234223e9b_Range16(2566LLU,2570LLU,1LLU),_234223e9b_Range16(2575LLU,2576LLU,1LLU),_234223e9b_Range16(2579LLU,2600LLU,1LLU),_234223e9b_Range16(2602LLU,2608LLU,1LLU),_234223e9b_Range16(2610LLU,2611LLU,1LLU),_234223e9b_Range16(2613LLU,2614LLU,1LLU),_234223e9b_Range16(2616LLU,2617LLU,1LLU),_234223e9b_Range16(2649LLU,2652LLU,1LLU),_234223e9b_Range16(2654LLU,2674LLU,20LLU),_234223e9b_Range16(2675LLU,2676LLU,1LLU),_234223e9b_Range16(2693LLU,2701LLU,1LLU),_234223e9b_Range16(2703LLU,2705LLU,1LLU),_234223e9b_Range16(2707LLU,2728LLU,1LLU),_234223e9b_Range16(2730LLU,2736LLU,1LLU),_234223e9b_Range16(2738LLU,2739LLU,1LLU),_234223e9b_Range16(2741LLU,2745LLU,1LLU),_234223e9b_Range16(2749LLU,2768LLU,19LLU),_234223e9b_Range16(2784LLU,2785LLU,1LLU),_234223e9b_Range16(2809LLU,2821LLU,12LLU),_234223e9b_Range16(2822LLU,2828LLU,1LLU),_234223e9b_Range16(2831LLU,2832LLU,1LLU),_234223e9b_Range16(2835LLU,2856LLU,1LLU),_234223e9b_Range16(2858LLU,2864LLU,1LLU),_234223e9b_Range16(2866LLU,2867LLU,1LLU),_234223e9b_Range16(2869LLU,2873LLU,1LLU),_234223e9b_Range16(2877LLU,2908LLU,31LLU),_234223e9b_Range16(2909LLU,2911LLU,2LLU),_234223e9b_Range16(2912LLU,2913LLU,1LLU),_234223e9b_Range16(2929LLU,2947LLU,18LLU),_234223e9b_Range16(2949LLU,2954LLU,1LLU),_234223e9b_Range16(2958LLU,2960LLU,1LLU),_234223e9b_Range16(2962LLU,2965LLU,1LLU),_234223e9b_Range16(2969LLU,2970LLU,1LLU),_234223e9b_Range16(2972LLU,2974LLU,2LLU),_234223e9b_Range16(2975LLU,2979LLU,4LLU),_234223e9b_Range16(2980LLU,2984LLU,4LLU),_234223e9b_Range16(2985LLU,2986LLU,1LLU),_234223e9b_Range16(2990LLU,3001LLU,1LLU),_234223e9b_Range16(3024LLU,3077LLU,53LLU),_234223e9b_Range16(3078LLU,3084LLU,1LLU),_234223e9b_Range16(3086LLU,3088LLU,1LLU),_234223e9b_Range16(3090LLU,3112LLU,1LLU),_234223e9b_Range16(3114LLU,3129LLU,1LLU),_234223e9b_Range16(3133LLU,3160LLU,27LLU),_234223e9b_Range16(3161LLU,3162LLU,1LLU),_234223e9b_Range16(3165LLU,3168LLU,3LLU),_234223e9b_Range16(3169LLU,3200LLU,31LLU),_234223e9b_Range16(3205LLU,3212LLU,1LLU),_234223e9b_Range16(3214LLU,3216LLU,1LLU),_234223e9b_Range16(3218LLU,3240LLU,1LLU),_234223e9b_Range16(3242LLU,3251LLU,1LLU),_234223e9b_Range16(3253LLU,3257LLU,1LLU),_234223e9b_Range16(3261LLU,3293LLU,32LLU),_234223e9b_Range16(3294LLU,3296LLU,2LLU),_234223e9b_Range16(3297LLU,3313LLU,16LLU),_234223e9b_Range16(3314LLU,3332LLU,18LLU),_234223e9b_Range16(3333LLU,3340LLU,1LLU),_234223e9b_Range16(3342LLU,3344LLU,1LLU),_234223e9b_Range16(3346LLU,3386LLU,1LLU),_234223e9b_Range16(3389LLU,3406LLU,17LLU),_234223e9b_Range16(3412LLU,3414LLU,1LLU),_234223e9b_Range16(3423LLU,3425LLU,1LLU),_234223e9b_Range16(3450LLU,3455LLU,1LLU),_234223e9b_Range16(3461LLU,3478LLU,1LLU),_234223e9b_Range16(3482LLU,3505LLU,1LLU),_234223e9b_Range16(3507LLU,3515LLU,1LLU),_234223e9b_Range16(3517LLU,3520LLU,3LLU),_234223e9b_Range16(3521LLU,3526LLU,1LLU),_234223e9b_Range16(3585LLU,3632LLU,1LLU),_234223e9b_Range16(3634LLU,3635LLU,1LLU),_234223e9b_Range16(3648LLU,3653LLU,1LLU),_234223e9b_Range16(3713LLU,3714LLU,1LLU),_234223e9b_Range16(3716LLU,3718LLU,2LLU),_234223e9b_Range16(3719LLU,3722LLU,1LLU),_234223e9b_Range16(3724LLU,3747LLU,1LLU),_234223e9b_Range16(3749LLU,3751LLU,2LLU),_234223e9b_Range16(3752LLU,3760LLU,1LLU),_234223e9b_Range16(3762LLU,3763LLU,1LLU),_234223e9b_Range16(3773LLU,3776LLU,3LLU),_234223e9b_Range16(3777LLU,3780LLU,1LLU),_234223e9b_Range16(3804LLU,3807LLU,1LLU),_234223e9b_Range16(3840LLU,3904LLU,64LLU),_234223e9b_Range16(3905LLU,3911LLU,1LLU),_234223e9b_Range16(3913LLU,3948LLU,1LLU),_234223e9b_Range16(3976LLU,3980LLU,1LLU),_234223e9b_Range16(4096LLU,4138LLU,1LLU),_234223e9b_Range16(4159LLU,4176LLU,17LLU),_234223e9b_Range16(4177LLU,4181LLU,1LLU),_234223e9b_Range16(4186LLU,4189LLU,1LLU),_234223e9b_Range16(4193LLU,4197LLU,4LLU),_234223e9b_Range16(4198LLU,4206LLU,8LLU),_234223e9b_Range16(4207LLU,4208LLU,1LLU),_234223e9b_Range16(4213LLU,4225LLU,1LLU),_234223e9b_Range16(4238LLU,4352LLU,114LLU),_234223e9b_Range16(4353LLU,4680LLU,1LLU),_234223e9b_Range16(4682LLU,4685LLU,1LLU),_234223e9b_Range16(4688LLU,4694LLU,1LLU),_234223e9b_Range16(4696LLU,4698LLU,2LLU),_234223e9b_Range16(4699LLU,4701LLU,1LLU),_234223e9b_Range16(4704LLU,4744LLU,1LLU),_234223e9b_Range16(4746LLU,4749LLU,1LLU),_234223e9b_Range16(4752LLU,4784LLU,1LLU),_234223e9b_Range16(4786LLU,4789LLU,1LLU),_234223e9b_Range16(4792LLU,4798LLU,1LLU),_234223e9b_Range16(4800LLU,4802LLU,2LLU),_234223e9b_Range16(4803LLU,4805LLU,1LLU),_234223e9b_Range16(4808LLU,4822LLU,1LLU),_234223e9b_Range16(4824LLU,4880LLU,1LLU),_234223e9b_Range16(4882LLU,4885LLU,1LLU),_234223e9b_Range16(4888LLU,4954LLU,1LLU),_234223e9b_Range16(4992LLU,5007LLU,1LLU),_234223e9b_Range16(5121LLU,5740LLU,1LLU),_234223e9b_Range16(5743LLU,5759LLU,1LLU),_234223e9b_Range16(5761LLU,5786LLU,1LLU),_234223e9b_Range16(5792LLU,5866LLU,1LLU),_234223e9b_Range16(5873LLU,5880LLU,1LLU),_234223e9b_Range16(5888LLU,5905LLU,1LLU),_234223e9b_Range16(5919LLU,5937LLU,1LLU),_234223e9b_Range16(5952LLU,5969LLU,1LLU),_234223e9b_Range16(5984LLU,5996LLU,1LLU),_234223e9b_Range16(5998LLU,6000LLU,1LLU),_234223e9b_Range16(6016LLU,6067LLU,1LLU),_234223e9b_Range16(6108LLU,6176LLU,68LLU),_234223e9b_Range16(6177LLU,6210LLU,1LLU),_234223e9b_Range16(6212LLU,6264LLU,1LLU),_234223e9b_Range16(6272LLU,6276LLU,1LLU),_234223e9b_Range16(6279LLU,6312LLU,1LLU),_234223e9b_Range16(6314LLU,6320LLU,6LLU),_234223e9b_Range16(6321LLU,6389LLU,1LLU),_234223e9b_Range16(6400LLU,6430LLU,1LLU),_234223e9b_Range16(6480LLU,6509LLU,1LLU),_234223e9b_Range16(6512LLU,6516LLU,1LLU),_234223e9b_Range16(6528LLU,6571LLU,1LLU),_234223e9b_Range16(6576LLU,6601LLU,1LLU),_234223e9b_Range16(6656LLU,6678LLU,1LLU),_234223e9b_Range16(6688LLU,6740LLU,1LLU),_234223e9b_Range16(6917LLU,6963LLU,1LLU),_234223e9b_Range16(6981LLU,6988LLU,1LLU),_234223e9b_Range16(7043LLU,7072LLU,1LLU),_234223e9b_Range16(7086LLU,7087LLU,1LLU),_234223e9b_Range16(7098LLU,7141LLU,1LLU),_234223e9b_Range16(7168LLU,7203LLU,1LLU),_234223e9b_Range16(7245LLU,7247LLU,1LLU),_234223e9b_Range16(7258LLU,7287LLU,1LLU),_234223e9b_Range16(7401LLU,7404LLU,1LLU),_234223e9b_Range16(7406LLU,7411LLU,1LLU),_234223e9b_Range16(7413LLU,7414LLU,1LLU),_234223e9b_Range16(7418LLU,8501LLU,1083LLU),_234223e9b_Range16(8502LLU,8504LLU,1LLU),_234223e9b_Range16(11568LLU,11623LLU,1LLU),_234223e9b_Range16(11648LLU,11670LLU,1LLU),_234223e9b_Range16(11680LLU,11686LLU,1LLU),_234223e9b_Range16(11688LLU,11694LLU,1LLU),_234223e9b_Range16(11696LLU,11702LLU,1LLU),_234223e9b_Range16(11704LLU,11710LLU,1LLU),_234223e9b_Range16(11712LLU,11718LLU,1LLU),_234223e9b_Range16(11720LLU,11726LLU,1LLU),_234223e9b_Range16(11728LLU,11734LLU,1LLU),_234223e9b_Range16(11736LLU,11742LLU,1LLU),_234223e9b_Range16(12294LLU,12348LLU,54LLU),_234223e9b_Range16(12353LLU,12438LLU,1LLU),_234223e9b_Range16(12447LLU,12449LLU,2LLU),_234223e9b_Range16(12450LLU,12538LLU,1LLU),_234223e9b_Range16(12543LLU,12549LLU,6LLU),_234223e9b_Range16(12550LLU,12591LLU,1LLU),_234223e9b_Range16(12593LLU,12686LLU,1LLU),_234223e9b_Range16(12704LLU,12735LLU,1LLU),_234223e9b_Range16(12784LLU,12799LLU,1LLU),_234223e9b_Range16(13312LLU,19903LLU,1LLU),_234223e9b_Range16(19968LLU,40980LLU,1LLU),_234223e9b_Range16(40982LLU,42124LLU,1LLU),_234223e9b_Range16(42192LLU,42231LLU,1LLU),_234223e9b_Range16(42240LLU,42507LLU,1LLU),_234223e9b_Range16(42512LLU,42527LLU,1LLU),_234223e9b_Range16(42538LLU,42539LLU,1LLU),_234223e9b_Range16(42606LLU,42656LLU,50LLU),_234223e9b_Range16(42657LLU,42725LLU,1LLU),_234223e9b_Range16(42895LLU,42999LLU,104LLU),_234223e9b_Range16(43003LLU,43009LLU,1LLU),_234223e9b_Range16(43011LLU,43013LLU,1LLU),_234223e9b_Range16(43015LLU,43018LLU,1LLU),_234223e9b_Range16(43020LLU,43042LLU,1LLU),_234223e9b_Range16(43072LLU,43123LLU,1LLU),_234223e9b_Range16(43138LLU,43187LLU,1LLU),_234223e9b_Range16(43250LLU,43255LLU,1LLU),_234223e9b_Range16(43259LLU,43261LLU,2LLU),_234223e9b_Range16(43262LLU,43274LLU,12LLU),_234223e9b_Range16(43275LLU,43301LLU,1LLU),_234223e9b_Range16(43312LLU,43334LLU,1LLU),_234223e9b_Range16(43360LLU,43388LLU,1LLU),_234223e9b_Range16(43396LLU,43442LLU,1LLU),_234223e9b_Range16(43488LLU,43492LLU,1LLU),_234223e9b_Range16(43495LLU,43503LLU,1LLU),_234223e9b_Range16(43514LLU,43518LLU,1LLU),_234223e9b_Range16(43520LLU,43560LLU,1LLU),_234223e9b_Range16(43584LLU,43586LLU,1LLU),_234223e9b_Range16(43588LLU,43595LLU,1LLU),_234223e9b_Range16(43616LLU,43631LLU,1LLU),_234223e9b_Range16(43633LLU,43638LLU,1LLU),_234223e9b_Range16(43642LLU,43646LLU,4LLU),_234223e9b_Range16(43647LLU,43695LLU,1LLU),_234223e9b_Range16(43697LLU,43701LLU,4LLU),_234223e9b_Range16(43702LLU,43705LLU,3LLU),_234223e9b_Range16(43706LLU,43709LLU,1LLU),_234223e9b_Range16(43712LLU,43714LLU,2LLU),_234223e9b_Range16(43739LLU,43740LLU,1LLU),_234223e9b_Range16(43744LLU,43754LLU,1LLU),_234223e9b_Range16(43762LLU,43777LLU,15LLU),_234223e9b_Range16(43778LLU,43782LLU,1LLU),_234223e9b_Range16(43785LLU,43790LLU,1LLU),_234223e9b_Range16(43793LLU,43798LLU,1LLU),_234223e9b_Range16(43808LLU,43814LLU,1LLU),_234223e9b_Range16(43816LLU,43822LLU,1LLU),_234223e9b_Range16(43968LLU,44002LLU,1LLU),_234223e9b_Range16(44032LLU,55203LLU,1LLU),_234223e9b_Range16(55216LLU,55238LLU,1LLU),_234223e9b_Range16(55243LLU,55291LLU,1LLU),_234223e9b_Range16(63744LLU,64109LLU,1LLU),_234223e9b_Range16(64112LLU,64217LLU,1LLU),_234223e9b_Range16(64285LLU,64287LLU,2LLU),_234223e9b_Range16(64288LLU,64296LLU,1LLU),_234223e9b_Range16(64298LLU,64310LLU,1LLU),_234223e9b_Range16(64312LLU,64316LLU,1LLU),_234223e9b_Range16(64318LLU,64320LLU,2LLU),_234223e9b_Range16(64321LLU,64323LLU,2LLU),_234223e9b_Range16(64324LLU,64326LLU,2LLU),_234223e9b_Range16(64327LLU,64433LLU,1LLU),_234223e9b_Range16(64467LLU,64829LLU,1LLU),_234223e9b_Range16(64848LLU,64911LLU,1LLU),_234223e9b_Range16(64914LLU,64967LLU,1LLU),_234223e9b_Range16(65008LLU,65019LLU,1LLU),_234223e9b_Range16(65136LLU,65140LLU,1LLU),_234223e9b_Range16(65142LLU,65276LLU,1LLU),_234223e9b_Range16(65382LLU,65391LLU,1LLU),_234223e9b_Range16(65393LLU,65437LLU,1LLU),_234223e9b_Range16(65440LLU,65470LLU,1LLU),_234223e9b_Range16(65474LLU,65479LLU,1LLU),_234223e9b_Range16(65482LLU,65487LLU,1LLU),_234223e9b_Range16(65490LLU,65495LLU,1LLU),_234223e9b_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65536LLU,65547LLU,1LLU),_234223e9b_Range32(65549LLU,65574LLU,1LLU),_234223e9b_Range32(65576LLU,65594LLU,1LLU),_234223e9b_Range32(65596LLU,65597LLU,1LLU),_234223e9b_Range32(65599LLU,65613LLU,1LLU),_234223e9b_Range32(65616LLU,65629LLU,1LLU),_234223e9b_Range32(65664LLU,65786LLU,1LLU),_234223e9b_Range32(66176LLU,66204LLU,1LLU),_234223e9b_Range32(66208LLU,66256LLU,1LLU),_234223e9b_Range32(66304LLU,66335LLU,1LLU),_234223e9b_Range32(66349LLU,66368LLU,1LLU),_234223e9b_Range32(66370LLU,66377LLU,1LLU),_234223e9b_Range32(66384LLU,66421LLU,1LLU),_234223e9b_Range32(66432LLU,66461LLU,1LLU),_234223e9b_Range32(66464LLU,66499LLU,1LLU),_234223e9b_Range32(66504LLU,66511LLU,1LLU),_234223e9b_Range32(66640LLU,66717LLU,1LLU),_234223e9b_Range32(66816LLU,66855LLU,1LLU),_234223e9b_Range32(66864LLU,66915LLU,1LLU),_234223e9b_Range32(67072LLU,67382LLU,1LLU),_234223e9b_Range32(67392LLU,67413LLU,1LLU),_234223e9b_Range32(67424LLU,67431LLU,1LLU),_234223e9b_Range32(67584LLU,67589LLU,1LLU),_234223e9b_Range32(67592LLU,67594LLU,2LLU),_234223e9b_Range32(67595LLU,67637LLU,1LLU),_234223e9b_Range32(67639LLU,67640LLU,1LLU),_234223e9b_Range32(67644LLU,67647LLU,3LLU),_234223e9b_Range32(67648LLU,67669LLU,1LLU),_234223e9b_Range32(67680LLU,67702LLU,1LLU),_234223e9b_Range32(67712LLU,67742LLU,1LLU),_234223e9b_Range32(67808LLU,67826LLU,1LLU),_234223e9b_Range32(67828LLU,67829LLU,1LLU),_234223e9b_Range32(67840LLU,67861LLU,1LLU),_234223e9b_Range32(67872LLU,67897LLU,1LLU),_234223e9b_Range32(67968LLU,68023LLU,1LLU),_234223e9b_Range32(68030LLU,68031LLU,1LLU),_234223e9b_Range32(68096LLU,68112LLU,16LLU),_234223e9b_Range32(68113LLU,68115LLU,1LLU),_234223e9b_Range32(68117LLU,68119LLU,1LLU),_234223e9b_Range32(68121LLU,68149LLU,1LLU),_234223e9b_Range32(68192LLU,68220LLU,1LLU),_234223e9b_Range32(68224LLU,68252LLU,1LLU),_234223e9b_Range32(68288LLU,68295LLU,1LLU),_234223e9b_Range32(68297LLU,68324LLU,1LLU),_234223e9b_Range32(68352LLU,68405LLU,1LLU),_234223e9b_Range32(68416LLU,68437LLU,1LLU),_234223e9b_Range32(68448LLU,68466LLU,1LLU),_234223e9b_Range32(68480LLU,68497LLU,1LLU),_234223e9b_Range32(68608LLU,68680LLU,1LLU),_234223e9b_Range32(68864LLU,68899LLU,1LLU),_234223e9b_Range32(69248LLU,69289LLU,1LLU),_234223e9b_Range32(69296LLU,69297LLU,1LLU),_234223e9b_Range32(69376LLU,69404LLU,1LLU),_234223e9b_Range32(69415LLU,69424LLU,9LLU),_234223e9b_Range32(69425LLU,69445LLU,1LLU),_234223e9b_Range32(69488LLU,69505LLU,1LLU),_234223e9b_Range32(69552LLU,69572LLU,1LLU),_234223e9b_Range32(69600LLU,69622LLU,1LLU),_234223e9b_Range32(69635LLU,69687LLU,1LLU),_234223e9b_Range32(69745LLU,69746LLU,1LLU),_234223e9b_Range32(69749LLU,69763LLU,14LLU),_234223e9b_Range32(69764LLU,69807LLU,1LLU),_234223e9b_Range32(69840LLU,69864LLU,1LLU),_234223e9b_Range32(69891LLU,69926LLU,1LLU),_234223e9b_Range32(69956LLU,69959LLU,3LLU),_234223e9b_Range32(69968LLU,70002LLU,1LLU),_234223e9b_Range32(70006LLU,70019LLU,13LLU),_234223e9b_Range32(70020LLU,70066LLU,1LLU),_234223e9b_Range32(70081LLU,70084LLU,1LLU),_234223e9b_Range32(70106LLU,70108LLU,2LLU),_234223e9b_Range32(70144LLU,70161LLU,1LLU),_234223e9b_Range32(70163LLU,70187LLU,1LLU),_234223e9b_Range32(70207LLU,70208LLU,1LLU),_234223e9b_Range32(70272LLU,70278LLU,1LLU),_234223e9b_Range32(70280LLU,70282LLU,2LLU),_234223e9b_Range32(70283LLU,70285LLU,1LLU),_234223e9b_Range32(70287LLU,70301LLU,1LLU),_234223e9b_Range32(70303LLU,70312LLU,1LLU),_234223e9b_Range32(70320LLU,70366LLU,1LLU),_234223e9b_Range32(70405LLU,70412LLU,1LLU),_234223e9b_Range32(70415LLU,70416LLU,1LLU),_234223e9b_Range32(70419LLU,70440LLU,1LLU),_234223e9b_Range32(70442LLU,70448LLU,1LLU),_234223e9b_Range32(70450LLU,70451LLU,1LLU),_234223e9b_Range32(70453LLU,70457LLU,1LLU),_234223e9b_Range32(70461LLU,70480LLU,19LLU),_234223e9b_Range32(70493LLU,70497LLU,1LLU),_234223e9b_Range32(70656LLU,70708LLU,1LLU),_234223e9b_Range32(70727LLU,70730LLU,1LLU),_234223e9b_Range32(70751LLU,70753LLU,1LLU),_234223e9b_Range32(70784LLU,70831LLU,1LLU),_234223e9b_Range32(70852LLU,70853LLU,1LLU),_234223e9b_Range32(70855LLU,71040LLU,185LLU),_234223e9b_Range32(71041LLU,71086LLU,1LLU),_234223e9b_Range32(71128LLU,71131LLU,1LLU),_234223e9b_Range32(71168LLU,71215LLU,1LLU),_234223e9b_Range32(71236LLU,71296LLU,60LLU),_234223e9b_Range32(71297LLU,71338LLU,1LLU),_234223e9b_Range32(71352LLU,71424LLU,72LLU),_234223e9b_Range32(71425LLU,71450LLU,1LLU),_234223e9b_Range32(71488LLU,71494LLU,1LLU),_234223e9b_Range32(71680LLU,71723LLU,1LLU),_234223e9b_Range32(71935LLU,71942LLU,1LLU),_234223e9b_Range32(71945LLU,71948LLU,3LLU),_234223e9b_Range32(71949LLU,71955LLU,1LLU),_234223e9b_Range32(71957LLU,71958LLU,1LLU),_234223e9b_Range32(71960LLU,71983LLU,1LLU),_234223e9b_Range32(71999LLU,72001LLU,2LLU),_234223e9b_Range32(72096LLU,72103LLU,1LLU),_234223e9b_Range32(72106LLU,72144LLU,1LLU),_234223e9b_Range32(72161LLU,72163LLU,2LLU),_234223e9b_Range32(72192LLU,72203LLU,11LLU),_234223e9b_Range32(72204LLU,72242LLU,1LLU),_234223e9b_Range32(72250LLU,72272LLU,22LLU),_234223e9b_Range32(72284LLU,72329LLU,1LLU),_234223e9b_Range32(72349LLU,72368LLU,19LLU),_234223e9b_Range32(72369LLU,72440LLU,1LLU),_234223e9b_Range32(72704LLU,72712LLU,1LLU),_234223e9b_Range32(72714LLU,72750LLU,1LLU),_234223e9b_Range32(72768LLU,72818LLU,50LLU),_234223e9b_Range32(72819LLU,72847LLU,1LLU),_234223e9b_Range32(72960LLU,72966LLU,1LLU),_234223e9b_Range32(72968LLU,72969LLU,1LLU),_234223e9b_Range32(72971LLU,73008LLU,1LLU),_234223e9b_Range32(73030LLU,73056LLU,26LLU),_234223e9b_Range32(73057LLU,73061LLU,1LLU),_234223e9b_Range32(73063LLU,73064LLU,1LLU),_234223e9b_Range32(73066LLU,73097LLU,1LLU),_234223e9b_Range32(73112LLU,73440LLU,328LLU),_234223e9b_Range32(73441LLU,73458LLU,1LLU),_234223e9b_Range32(73474LLU,73476LLU,2LLU),_234223e9b_Range32(73477LLU,73488LLU,1LLU),_234223e9b_Range32(73490LLU,73523LLU,1LLU),_234223e9b_Range32(73648LLU,73728LLU,80LLU),_234223e9b_Range32(73729LLU,74649LLU,1LLU),_234223e9b_Range32(74880LLU,75075LLU,1LLU),_234223e9b_Range32(77712LLU,77808LLU,1LLU),_234223e9b_Range32(77824LLU,78895LLU,1LLU),_234223e9b_Range32(78913LLU,78918LLU,1LLU),_234223e9b_Range32(82944LLU,83526LLU,1LLU),_234223e9b_Range32(92160LLU,92728LLU,1LLU),_234223e9b_Range32(92736LLU,92766LLU,1LLU),_234223e9b_Range32(92784LLU,92862LLU,1LLU),_234223e9b_Range32(92880LLU,92909LLU,1LLU),_234223e9b_Range32(92928LLU,92975LLU,1LLU),_234223e9b_Range32(93027LLU,93047LLU,1LLU),_234223e9b_Range32(93053LLU,93071LLU,1LLU),_234223e9b_Range32(93952LLU,94026LLU,1LLU),_234223e9b_Range32(94032LLU,94208LLU,176LLU),_234223e9b_Range32(94209LLU,100343LLU,1LLU),_234223e9b_Range32(100352LLU,101589LLU,1LLU),_234223e9b_Range32(101632LLU,101640LLU,1LLU),_234223e9b_Range32(110592LLU,110882LLU,1LLU),_234223e9b_Range32(110898LLU,110928LLU,30LLU),_234223e9b_Range32(110929LLU,110930LLU,1LLU),_234223e9b_Range32(110933LLU,110948LLU,15LLU),_234223e9b_Range32(110949LLU,110951LLU,1LLU),_234223e9b_Range32(110960LLU,111355LLU,1LLU),_234223e9b_Range32(113664LLU,113770LLU,1LLU),_234223e9b_Range32(113776LLU,113788LLU,1LLU),_234223e9b_Range32(113792LLU,113800LLU,1LLU),_234223e9b_Range32(113808LLU,113817LLU,1LLU),_234223e9b_Range32(122634LLU,123136LLU,502LLU),_234223e9b_Range32(123137LLU,123180LLU,1LLU),_234223e9b_Range32(123214LLU,123536LLU,322LLU),_234223e9b_Range32(123537LLU,123565LLU,1LLU),_234223e9b_Range32(123584LLU,123627LLU,1LLU),_234223e9b_Range32(124112LLU,124138LLU,1LLU),_234223e9b_Range32(124896LLU,124902LLU,1LLU),_234223e9b_Range32(124904LLU,124907LLU,1LLU),_234223e9b_Range32(124909LLU,124910LLU,1LLU),_234223e9b_Range32(124912LLU,124926LLU,1LLU),_234223e9b_Range32(124928LLU,125124LLU,1LLU),_234223e9b_Range32(126464LLU,126467LLU,1LLU),_234223e9b_Range32(126469LLU,126495LLU,1LLU),_234223e9b_Range32(126497LLU,126498LLU,1LLU),_234223e9b_Range32(126500LLU,126503LLU,3LLU),_234223e9b_Range32(126505LLU,126514LLU,1LLU),_234223e9b_Range32(126516LLU,126519LLU,1LLU),_234223e9b_Range32(126521LLU,126523LLU,2LLU),_234223e9b_Range32(126530LLU,126535LLU,5LLU),_234223e9b_Range32(126537LLU,126541LLU,2LLU),_234223e9b_Range32(126542LLU,126543LLU,1LLU),_234223e9b_Range32(126545LLU,126546LLU,1LLU),_234223e9b_Range32(126548LLU,126551LLU,3LLU),_234223e9b_Range32(126553LLU,126561LLU,2LLU),_234223e9b_Range32(126562LLU,126564LLU,2LLU),_234223e9b_Range32(126567LLU,126570LLU,1LLU),_234223e9b_Range32(126572LLU,126578LLU,1LLU),_234223e9b_Range32(126580LLU,126583LLU,1LLU),_234223e9b_Range32(126585LLU,126588LLU,1LLU),_234223e9b_Range32(126590LLU,126592LLU,2LLU),_234223e9b_Range32(126593LLU,126601LLU,1LLU),_234223e9b_Range32(126603LLU,126619LLU,1LLU),_234223e9b_Range32(126625LLU,126627LLU,1LLU),_234223e9b_Range32(126629LLU,126633LLU,1LLU),_234223e9b_Range32(126635LLU,126651LLU,1LLU),_234223e9b_Range32(131072LLU,173791LLU,1LLU),_234223e9b_Range32(173824LLU,177977LLU,1LLU),_234223e9b_Range32(177984LLU,178205LLU,1LLU),_234223e9b_Range32(178208LLU,183969LLU,1LLU),_234223e9b_Range32(183984LLU,191456LLU,1LLU),_234223e9b_Range32(194560LLU,195101LLU,1LLU),_234223e9b_Range32(196608LLU,201546LLU,1LLU),_234223e9b_Range32(201552LLU,205743LLU,1LLU)}),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(453LLU,459LLU,3LLU),_234223e9b_Range16(498LLU,8072LLU,7574LLU),_234223e9b_Range16(8073LLU,8079LLU,1LLU),_234223e9b_Range16(8088LLU,8095LLU,1LLU),_234223e9b_Range16(8104LLU,8111LLU,1LLU),_234223e9b_Range16(8124LLU,8140LLU,16LLU),_234223e9b_Range16(8188LLU,8188LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(65LLU,90LLU,1LLU),_234223e9b_Range16(192LLU,214LLU,1LLU),_234223e9b_Range16(216LLU,222LLU,1LLU),_234223e9b_Range16(256LLU,310LLU,2LLU),_234223e9b_Range16(313LLU,327LLU,2LLU),_234223e9b_Range16(330LLU,376LLU,2LLU),_234223e9b_Range16(377LLU,381LLU,2LLU),_234223e9b_Range16(385LLU,386LLU,1LLU),_234223e9b_Range16(388LLU,390LLU,2LLU),_234223e9b_Range16(391LLU,393LLU,2LLU),_234223e9b_Range16(394LLU,395LLU,1LLU),_234223e9b_Range16(398LLU,401LLU,1LLU),_234223e9b_Range16(403LLU,404LLU,1LLU),_234223e9b_Range16(406LLU,408LLU,1LLU),_234223e9b_Range16(412LLU,413LLU,1LLU),_234223e9b_Range16(415LLU,416LLU,1LLU),_234223e9b_Range16(418LLU,422LLU,2LLU),_234223e9b_Range16(423LLU,425LLU,2LLU),_234223e9b_Range16(428LLU,430LLU,2LLU),_234223e9b_Range16(431LLU,433LLU,2LLU),_234223e9b_Range16(434LLU,435LLU,1LLU),_234223e9b_Range16(437LLU,439LLU,2LLU),_234223e9b_Range16(440LLU,444LLU,4LLU),_234223e9b_Range16(452LLU,461LLU,3LLU),_234223e9b_Range16(463LLU,475LLU,2LLU),_234223e9b_Range16(478LLU,494LLU,2LLU),_234223e9b_Range16(497LLU,500LLU,3LLU),_234223e9b_Range16(502LLU,504LLU,1LLU),_234223e9b_Range16(506LLU,562LLU,2LLU),_234223e9b_Range16(570LLU,571LLU,1LLU),_234223e9b_Range16(573LLU,574LLU,1LLU),_234223e9b_Range16(577LLU,579LLU,2LLU),_234223e9b_Range16(580LLU,582LLU,1LLU),_234223e9b_Range16(584LLU,590LLU,2LLU),_234223e9b_Range16(880LLU,882LLU,2LLU),_234223e9b_Range16(886LLU,895LLU,9LLU),_234223e9b_Range16(902LLU,904LLU,2LLU),_234223e9b_Range16(905LLU,906LLU,1LLU),_234223e9b_Range16(908LLU,910LLU,2LLU),_234223e9b_Range16(911LLU,913LLU,2LLU),_234223e9b_Range16(914LLU,929LLU,1LLU),_234223e9b_Range16(931LLU,939LLU,1LLU),_234223e9b_Range16(975LLU,978LLU,3LLU),_234223e9b_Range16(979LLU,980LLU,1LLU),_234223e9b_Range16(984LLU,1006LLU,2LLU),_234223e9b_Range16(1012LLU,1015LLU,3LLU),_234223e9b_Range16(1017LLU,1018LLU,1LLU),_234223e9b_Range16(1021LLU,1071LLU,1LLU),_234223e9b_Range16(1120LLU,1152LLU,2LLU),_234223e9b_Range16(1162LLU,1216LLU,2LLU),_234223e9b_Range16(1217LLU,1229LLU,2LLU),_234223e9b_Range16(1232LLU,1326LLU,2LLU),_234223e9b_Range16(1329LLU,1366LLU,1LLU),_234223e9b_Range16(4256LLU,4293LLU,1LLU),_234223e9b_Range16(4295LLU,4301LLU,6LLU),_234223e9b_Range16(5024LLU,5109LLU,1LLU),_234223e9b_Range16(7312LLU,7354LLU,1LLU),_234223e9b_Range16(7357LLU,7359LLU,1LLU),_234223e9b_Range16(7680LLU,7828LLU,2LLU),_234223e9b_Range16(7838LLU,7934LLU,2LLU),_234223e9b_Range16(7944LLU,7951LLU,1LLU),_234223e9b_Range16(7960LLU,7965LLU,1LLU),_234223e9b_Range16(7976LLU,7983LLU,1LLU),_234223e9b_Range16(7992LLU,7999LLU,1LLU),_234223e9b_Range16(8008LLU,8013LLU,1LLU),_234223e9b_Range16(8025LLU,8031LLU,2LLU),_234223e9b_Range16(8040LLU,8047LLU,1LLU),_234223e9b_Range16(8120LLU,8123LLU,1LLU),_234223e9b_Range16(8136LLU,8139LLU,1LLU),_234223e9b_Range16(8152LLU,8155LLU,1LLU),_234223e9b_Range16(8168LLU,8172LLU,1LLU),_234223e9b_Range16(8184LLU,8187LLU,1LLU),_234223e9b_Range16(8450LLU,8455LLU,5LLU),_234223e9b_Range16(8459LLU,8461LLU,1LLU),_234223e9b_Range16(8464LLU,8466LLU,1LLU),_234223e9b_Range16(8469LLU,8473LLU,4LLU),_234223e9b_Range16(8474LLU,8477LLU,1LLU),_234223e9b_Range16(8484LLU,8490LLU,2LLU),_234223e9b_Range16(8491LLU,8493LLU,1LLU),_234223e9b_Range16(8496LLU,8499LLU,1LLU),_234223e9b_Range16(8510LLU,8511LLU,1LLU),_234223e9b_Range16(8517LLU,8579LLU,62LLU),_234223e9b_Range16(11264LLU,11311LLU,1LLU),_234223e9b_Range16(11360LLU,11362LLU,2LLU),_234223e9b_Range16(11363LLU,11364LLU,1LLU),_234223e9b_Range16(11367LLU,11373LLU,2LLU),_234223e9b_Range16(11374LLU,11376LLU,1LLU),_234223e9b_Range16(11378LLU,11381LLU,3LLU),_234223e9b_Range16(11390LLU,11392LLU,1LLU),_234223e9b_Range16(11394LLU,11490LLU,2LLU),_234223e9b_Range16(11499LLU,11501LLU,2LLU),_234223e9b_Range16(11506LLU,42560LLU,31054LLU),_234223e9b_Range16(42562LLU,42604LLU,2LLU),_234223e9b_Range16(42624LLU,42650LLU,2LLU),_234223e9b_Range16(42786LLU,42798LLU,2LLU),_234223e9b_Range16(42802LLU,42862LLU,2LLU),_234223e9b_Range16(42873LLU,42877LLU,2LLU),_234223e9b_Range16(42878LLU,42886LLU,2LLU),_234223e9b_Range16(42891LLU,42893LLU,2LLU),_234223e9b_Range16(42896LLU,42898LLU,2LLU),_234223e9b_Range16(42902LLU,42922LLU,2LLU),_234223e9b_Range16(42923LLU,42926LLU,1LLU),_234223e9b_Range16(42928LLU,42932LLU,1LLU),_234223e9b_Range16(42934LLU,42948LLU,2LLU),_234223e9b_Range16(42949LLU,42951LLU,1LLU),_234223e9b_Range16(42953LLU,42960LLU,7LLU),_234223e9b_Range16(42966LLU,42968LLU,2LLU),_234223e9b_Range16(42997LLU,65313LLU,22316LLU),_234223e9b_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66560LLU,66599LLU,1LLU),_234223e9b_Range32(66736LLU,66771LLU,1LLU),_234223e9b_Range32(66928LLU,66938LLU,1LLU),_234223e9b_Range32(66940LLU,66954LLU,1LLU),_234223e9b_Range32(66956LLU,66962LLU,1LLU),_234223e9b_Range32(66964LLU,66965LLU,1LLU),_234223e9b_Range32(68736LLU,68786LLU,1LLU),_234223e9b_Range32(71840LLU,71871LLU,1LLU),_234223e9b_Range32(93760LLU,93791LLU,1LLU),_234223e9b_Range32(119808LLU,119833LLU,1LLU),_234223e9b_Range32(119860LLU,119885LLU,1LLU),_234223e9b_Range32(119912LLU,119937LLU,1LLU),_234223e9b_Range32(119964LLU,119966LLU,2LLU),_234223e9b_Range32(119967LLU,119973LLU,3LLU),_234223e9b_Range32(119974LLU,119977LLU,3LLU),_234223e9b_Range32(119978LLU,119980LLU,1LLU),_234223e9b_Range32(119982LLU,119989LLU,1LLU),_234223e9b_Range32(120016LLU,120041LLU,1LLU),_234223e9b_Range32(120068LLU,120069LLU,1LLU),_234223e9b_Range32(120071LLU,120074LLU,1LLU),_234223e9b_Range32(120077LLU,120084LLU,1LLU),_234223e9b_Range32(120086LLU,120092LLU,1LLU),_234223e9b_Range32(120120LLU,120121LLU,1LLU),_234223e9b_Range32(120123LLU,120126LLU,1LLU),_234223e9b_Range32(120128LLU,120132LLU,1LLU),_234223e9b_Range32(120134LLU,120138LLU,4LLU),_234223e9b_Range32(120139LLU,120144LLU,1LLU),_234223e9b_Range32(120172LLU,120197LLU,1LLU),_234223e9b_Range32(120224LLU,120249LLU,1LLU),_234223e9b_Range32(120276LLU,120301LLU,1LLU),_234223e9b_Range32(120328LLU,120353LLU,1LLU),_234223e9b_Range32(120380LLU,120405LLU,1LLU),_234223e9b_Range32(120432LLU,120457LLU,1LLU),_234223e9b_Range32(120488LLU,120512LLU,1LLU),_234223e9b_Range32(120546LLU,120570LLU,1LLU),_234223e9b_Range32(120604LLU,120628LLU,1LLU),_234223e9b_Range32(120662LLU,120686LLU,1LLU),_234223e9b_Range32(120720LLU,120744LLU,1LLU),_234223e9b_Range32(120778LLU,125184LLU,4406LLU),_234223e9b_Range32(125185LLU,125217LLU,1LLU)}),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__M = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(768LLU,879LLU,1LLU),_234223e9b_Range16(1155LLU,1161LLU,1LLU),_234223e9b_Range16(1425LLU,1469LLU,1LLU),_234223e9b_Range16(1471LLU,1473LLU,2LLU),_234223e9b_Range16(1474LLU,1476LLU,2LLU),_234223e9b_Range16(1477LLU,1479LLU,2LLU),_234223e9b_Range16(1552LLU,1562LLU,1LLU),_234223e9b_Range16(1611LLU,1631LLU,1LLU),_234223e9b_Range16(1648LLU,1750LLU,102LLU),_234223e9b_Range16(1751LLU,1756LLU,1LLU),_234223e9b_Range16(1759LLU,1764LLU,1LLU),_234223e9b_Range16(1767LLU,1768LLU,1LLU),_234223e9b_Range16(1770LLU,1773LLU,1LLU),_234223e9b_Range16(1809LLU,1840LLU,31LLU),_234223e9b_Range16(1841LLU,1866LLU,1LLU),_234223e9b_Range16(1958LLU,1968LLU,1LLU),_234223e9b_Range16(2027LLU,2035LLU,1LLU),_234223e9b_Range16(2045LLU,2070LLU,25LLU),_234223e9b_Range16(2071LLU,2073LLU,1LLU),_234223e9b_Range16(2075LLU,2083LLU,1LLU),_234223e9b_Range16(2085LLU,2087LLU,1LLU),_234223e9b_Range16(2089LLU,2093LLU,1LLU),_234223e9b_Range16(2137LLU,2139LLU,1LLU),_234223e9b_Range16(2200LLU,2207LLU,1LLU),_234223e9b_Range16(2250LLU,2273LLU,1LLU),_234223e9b_Range16(2275LLU,2307LLU,1LLU),_234223e9b_Range16(2362LLU,2364LLU,1LLU),_234223e9b_Range16(2366LLU,2383LLU,1LLU),_234223e9b_Range16(2385LLU,2391LLU,1LLU),_234223e9b_Range16(2402LLU,2403LLU,1LLU),_234223e9b_Range16(2433LLU,2435LLU,1LLU),_234223e9b_Range16(2492LLU,2494LLU,2LLU),_234223e9b_Range16(2495LLU,2500LLU,1LLU),_234223e9b_Range16(2503LLU,2504LLU,1LLU),_234223e9b_Range16(2507LLU,2509LLU,1LLU),_234223e9b_Range16(2519LLU,2530LLU,11LLU),_234223e9b_Range16(2531LLU,2558LLU,27LLU),_234223e9b_Range16(2561LLU,2563LLU,1LLU),_234223e9b_Range16(2620LLU,2622LLU,2LLU),_234223e9b_Range16(2623LLU,2626LLU,1LLU),_234223e9b_Range16(2631LLU,2632LLU,1LLU),_234223e9b_Range16(2635LLU,2637LLU,1LLU),_234223e9b_Range16(2641LLU,2672LLU,31LLU),_234223e9b_Range16(2673LLU,2677LLU,4LLU),_234223e9b_Range16(2689LLU,2691LLU,1LLU),_234223e9b_Range16(2748LLU,2750LLU,2LLU),_234223e9b_Range16(2751LLU,2757LLU,1LLU),_234223e9b_Range16(2759LLU,2761LLU,1LLU),_234223e9b_Range16(2763LLU,2765LLU,1LLU),_234223e9b_Range16(2786LLU,2787LLU,1LLU),_234223e9b_Range16(2810LLU,2815LLU,1LLU),_234223e9b_Range16(2817LLU,2819LLU,1LLU),_234223e9b_Range16(2876LLU,2878LLU,2LLU),_234223e9b_Range16(2879LLU,2884LLU,1LLU),_234223e9b_Range16(2887LLU,2888LLU,1LLU),_234223e9b_Range16(2891LLU,2893LLU,1LLU),_234223e9b_Range16(2901LLU,2903LLU,1LLU),_234223e9b_Range16(2914LLU,2915LLU,1LLU),_234223e9b_Range16(2946LLU,3006LLU,60LLU),_234223e9b_Range16(3007LLU,3010LLU,1LLU),_234223e9b_Range16(3014LLU,3016LLU,1LLU),_234223e9b_Range16(3018LLU,3021LLU,1LLU),_234223e9b_Range16(3031LLU,3072LLU,41LLU),_234223e9b_Range16(3073LLU,3076LLU,1LLU),_234223e9b_Range16(3132LLU,3134LLU,2LLU),_234223e9b_Range16(3135LLU,3140LLU,1LLU),_234223e9b_Range16(3142LLU,3144LLU,1LLU),_234223e9b_Range16(3146LLU,3149LLU,1LLU),_234223e9b_Range16(3157LLU,3158LLU,1LLU),_234223e9b_Range16(3170LLU,3171LLU,1LLU),_234223e9b_Range16(3201LLU,3203LLU,1LLU),_234223e9b_Range16(3260LLU,3262LLU,2LLU),_234223e9b_Range16(3263LLU,3268LLU,1LLU),_234223e9b_Range16(3270LLU,3272LLU,1LLU),_234223e9b_Range16(3274LLU,3277LLU,1LLU),_234223e9b_Range16(3285LLU,3286LLU,1LLU),_234223e9b_Range16(3298LLU,3299LLU,1LLU),_234223e9b_Range16(3315LLU,3328LLU,13LLU),_234223e9b_Range16(3329LLU,3331LLU,1LLU),_234223e9b_Range16(3387LLU,3388LLU,1LLU),_234223e9b_Range16(3390LLU,3396LLU,1LLU),_234223e9b_Range16(3398LLU,3400LLU,1LLU),_234223e9b_Range16(3402LLU,3405LLU,1LLU),_234223e9b_Range16(3415LLU,3426LLU,11LLU),_234223e9b_Range16(3427LLU,3457LLU,30LLU),_234223e9b_Range16(3458LLU,3459LLU,1LLU),_234223e9b_Range16(3530LLU,3535LLU,5LLU),_234223e9b_Range16(3536LLU,3540LLU,1LLU),_234223e9b_Range16(3542LLU,3544LLU,2LLU),_234223e9b_Range16(3545LLU,3551LLU,1LLU),_234223e9b_Range16(3570LLU,3571LLU,1LLU),_234223e9b_Range16(3633LLU,3636LLU,3LLU),_234223e9b_Range16(3637LLU,3642LLU,1LLU),_234223e9b_Range16(3655LLU,3662LLU,1LLU),_234223e9b_Range16(3761LLU,3764LLU,3LLU),_234223e9b_Range16(3765LLU,3772LLU,1LLU),_234223e9b_Range16(3784LLU,3790LLU,1LLU),_234223e9b_Range16(3864LLU,3865LLU,1LLU),_234223e9b_Range16(3893LLU,3897LLU,2LLU),_234223e9b_Range16(3902LLU,3903LLU,1LLU),_234223e9b_Range16(3953LLU,3972LLU,1LLU),_234223e9b_Range16(3974LLU,3975LLU,1LLU),_234223e9b_Range16(3981LLU,3991LLU,1LLU),_234223e9b_Range16(3993LLU,4028LLU,1LLU),_234223e9b_Range16(4038LLU,4139LLU,101LLU),_234223e9b_Range16(4140LLU,4158LLU,1LLU),_234223e9b_Range16(4182LLU,4185LLU,1LLU),_234223e9b_Range16(4190LLU,4192LLU,1LLU),_234223e9b_Range16(4194LLU,4196LLU,1LLU),_234223e9b_Range16(4199LLU,4205LLU,1LLU),_234223e9b_Range16(4209LLU,4212LLU,1LLU),_234223e9b_Range16(4226LLU,4237LLU,1LLU),_234223e9b_Range16(4239LLU,4250LLU,11LLU),_234223e9b_Range16(4251LLU,4253LLU,1LLU),_234223e9b_Range16(4957LLU,4959LLU,1LLU),_234223e9b_Range16(5906LLU,5909LLU,1LLU),_234223e9b_Range16(5938LLU,5940LLU,1LLU),_234223e9b_Range16(5970LLU,5971LLU,1LLU),_234223e9b_Range16(6002LLU,6003LLU,1LLU),_234223e9b_Range16(6068LLU,6099LLU,1LLU),_234223e9b_Range16(6109LLU,6155LLU,46LLU),_234223e9b_Range16(6156LLU,6157LLU,1LLU),_234223e9b_Range16(6159LLU,6277LLU,118LLU),_234223e9b_Range16(6278LLU,6313LLU,35LLU),_234223e9b_Range16(6432LLU,6443LLU,1LLU),_234223e9b_Range16(6448LLU,6459LLU,1LLU),_234223e9b_Range16(6679LLU,6683LLU,1LLU),_234223e9b_Range16(6741LLU,6750LLU,1LLU),_234223e9b_Range16(6752LLU,6780LLU,1LLU),_234223e9b_Range16(6783LLU,6832LLU,49LLU),_234223e9b_Range16(6833LLU,6862LLU,1LLU),_234223e9b_Range16(6912LLU,6916LLU,1LLU),_234223e9b_Range16(6964LLU,6980LLU,1LLU),_234223e9b_Range16(7019LLU,7027LLU,1LLU),_234223e9b_Range16(7040LLU,7042LLU,1LLU),_234223e9b_Range16(7073LLU,7085LLU,1LLU),_234223e9b_Range16(7142LLU,7155LLU,1LLU),_234223e9b_Range16(7204LLU,7223LLU,1LLU),_234223e9b_Range16(7376LLU,7378LLU,1LLU),_234223e9b_Range16(7380LLU,7400LLU,1LLU),_234223e9b_Range16(7405LLU,7412LLU,7LLU),_234223e9b_Range16(7415LLU,7417LLU,1LLU),_234223e9b_Range16(7616LLU,7679LLU,1LLU),_234223e9b_Range16(8400LLU,8432LLU,1LLU),_234223e9b_Range16(11503LLU,11505LLU,1LLU),_234223e9b_Range16(11647LLU,11744LLU,97LLU),_234223e9b_Range16(11745LLU,11775LLU,1LLU),_234223e9b_Range16(12330LLU,12335LLU,1LLU),_234223e9b_Range16(12441LLU,12442LLU,1LLU),_234223e9b_Range16(42607LLU,42610LLU,1LLU),_234223e9b_Range16(42612LLU,42621LLU,1LLU),_234223e9b_Range16(42654LLU,42655LLU,1LLU),_234223e9b_Range16(42736LLU,42737LLU,1LLU),_234223e9b_Range16(43010LLU,43014LLU,4LLU),_234223e9b_Range16(43019LLU,43043LLU,24LLU),_234223e9b_Range16(43044LLU,43047LLU,1LLU),_234223e9b_Range16(43052LLU,43136LLU,84LLU),_234223e9b_Range16(43137LLU,43188LLU,51LLU),_234223e9b_Range16(43189LLU,43205LLU,1LLU),_234223e9b_Range16(43232LLU,43249LLU,1LLU),_234223e9b_Range16(43263LLU,43302LLU,39LLU),_234223e9b_Range16(43303LLU,43309LLU,1LLU),_234223e9b_Range16(43335LLU,43347LLU,1LLU),_234223e9b_Range16(43392LLU,43395LLU,1LLU),_234223e9b_Range16(43443LLU,43456LLU,1LLU),_234223e9b_Range16(43493LLU,43561LLU,68LLU),_234223e9b_Range16(43562LLU,43574LLU,1LLU),_234223e9b_Range16(43587LLU,43596LLU,9LLU),_234223e9b_Range16(43597LLU,43643LLU,46LLU),_234223e9b_Range16(43644LLU,43645LLU,1LLU),_234223e9b_Range16(43696LLU,43698LLU,2LLU),_234223e9b_Range16(43699LLU,43700LLU,1LLU),_234223e9b_Range16(43703LLU,43704LLU,1LLU),_234223e9b_Range16(43710LLU,43711LLU,1LLU),_234223e9b_Range16(43713LLU,43755LLU,42LLU),_234223e9b_Range16(43756LLU,43759LLU,1LLU),_234223e9b_Range16(43765LLU,43766LLU,1LLU),_234223e9b_Range16(44003LLU,44010LLU,1LLU),_234223e9b_Range16(44012LLU,44013LLU,1LLU),_234223e9b_Range16(64286LLU,65024LLU,738LLU),_234223e9b_Range16(65025LLU,65039LLU,1LLU),_234223e9b_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66045LLU,66272LLU,227LLU),_234223e9b_Range32(66422LLU,66426LLU,1LLU),_234223e9b_Range32(68097LLU,68099LLU,1LLU),_234223e9b_Range32(68101LLU,68102LLU,1LLU),_234223e9b_Range32(68108LLU,68111LLU,1LLU),_234223e9b_Range32(68152LLU,68154LLU,1LLU),_234223e9b_Range32(68159LLU,68325LLU,166LLU),_234223e9b_Range32(68326LLU,68900LLU,574LLU),_234223e9b_Range32(68901LLU,68903LLU,1LLU),_234223e9b_Range32(69291LLU,69292LLU,1LLU),_234223e9b_Range32(69373LLU,69375LLU,1LLU),_234223e9b_Range32(69446LLU,69456LLU,1LLU),_234223e9b_Range32(69506LLU,69509LLU,1LLU),_234223e9b_Range32(69632LLU,69634LLU,1LLU),_234223e9b_Range32(69688LLU,69702LLU,1LLU),_234223e9b_Range32(69744LLU,69747LLU,3LLU),_234223e9b_Range32(69748LLU,69759LLU,11LLU),_234223e9b_Range32(69760LLU,69762LLU,1LLU),_234223e9b_Range32(69808LLU,69818LLU,1LLU),_234223e9b_Range32(69826LLU,69888LLU,62LLU),_234223e9b_Range32(69889LLU,69890LLU,1LLU),_234223e9b_Range32(69927LLU,69940LLU,1LLU),_234223e9b_Range32(69957LLU,69958LLU,1LLU),_234223e9b_Range32(70003LLU,70016LLU,13LLU),_234223e9b_Range32(70017LLU,70018LLU,1LLU),_234223e9b_Range32(70067LLU,70080LLU,1LLU),_234223e9b_Range32(70089LLU,70092LLU,1LLU),_234223e9b_Range32(70094LLU,70095LLU,1LLU),_234223e9b_Range32(70188LLU,70199LLU,1LLU),_234223e9b_Range32(70206LLU,70209LLU,3LLU),_234223e9b_Range32(70367LLU,70378LLU,1LLU),_234223e9b_Range32(70400LLU,70403LLU,1LLU),_234223e9b_Range32(70459LLU,70460LLU,1LLU),_234223e9b_Range32(70462LLU,70468LLU,1LLU),_234223e9b_Range32(70471LLU,70472LLU,1LLU),_234223e9b_Range32(70475LLU,70477LLU,1LLU),_234223e9b_Range32(70487LLU,70498LLU,11LLU),_234223e9b_Range32(70499LLU,70502LLU,3LLU),_234223e9b_Range32(70503LLU,70508LLU,1LLU),_234223e9b_Range32(70512LLU,70516LLU,1LLU),_234223e9b_Range32(70709LLU,70726LLU,1LLU),_234223e9b_Range32(70750LLU,70832LLU,82LLU),_234223e9b_Range32(70833LLU,70851LLU,1LLU),_234223e9b_Range32(71087LLU,71093LLU,1LLU),_234223e9b_Range32(71096LLU,71104LLU,1LLU),_234223e9b_Range32(71132LLU,71133LLU,1LLU),_234223e9b_Range32(71216LLU,71232LLU,1LLU),_234223e9b_Range32(71339LLU,71351LLU,1LLU),_234223e9b_Range32(71453LLU,71467LLU,1LLU),_234223e9b_Range32(71724LLU,71738LLU,1LLU),_234223e9b_Range32(71984LLU,71989LLU,1LLU),_234223e9b_Range32(71991LLU,71992LLU,1LLU),_234223e9b_Range32(71995LLU,71998LLU,1LLU),_234223e9b_Range32(72000LLU,72002LLU,2LLU),_234223e9b_Range32(72003LLU,72145LLU,142LLU),_234223e9b_Range32(72146LLU,72151LLU,1LLU),_234223e9b_Range32(72154LLU,72160LLU,1LLU),_234223e9b_Range32(72164LLU,72193LLU,29LLU),_234223e9b_Range32(72194LLU,72202LLU,1LLU),_234223e9b_Range32(72243LLU,72249LLU,1LLU),_234223e9b_Range32(72251LLU,72254LLU,1LLU),_234223e9b_Range32(72263LLU,72273LLU,10LLU),_234223e9b_Range32(72274LLU,72283LLU,1LLU),_234223e9b_Range32(72330LLU,72345LLU,1LLU),_234223e9b_Range32(72751LLU,72758LLU,1LLU),_234223e9b_Range32(72760LLU,72767LLU,1LLU),_234223e9b_Range32(72850LLU,72871LLU,1LLU),_234223e9b_Range32(72873LLU,72886LLU,1LLU),_234223e9b_Range32(73009LLU,73014LLU,1LLU),_234223e9b_Range32(73018LLU,73020LLU,2LLU),_234223e9b_Range32(73021LLU,73023LLU,2LLU),_234223e9b_Range32(73024LLU,73029LLU,1LLU),_234223e9b_Range32(73031LLU,73098LLU,67LLU),_234223e9b_Range32(73099LLU,73102LLU,1LLU),_234223e9b_Range32(73104LLU,73105LLU,1LLU),_234223e9b_Range32(73107LLU,73111LLU,1LLU),_234223e9b_Range32(73459LLU,73462LLU,1LLU),_234223e9b_Range32(73472LLU,73473LLU,1LLU),_234223e9b_Range32(73475LLU,73524LLU,49LLU),_234223e9b_Range32(73525LLU,73530LLU,1LLU),_234223e9b_Range32(73534LLU,73538LLU,1LLU),_234223e9b_Range32(78912LLU,78919LLU,7LLU),_234223e9b_Range32(78920LLU,78933LLU,1LLU),_234223e9b_Range32(92912LLU,92916LLU,1LLU),_234223e9b_Range32(92976LLU,92982LLU,1LLU),_234223e9b_Range32(94031LLU,94033LLU,2LLU),_234223e9b_Range32(94034LLU,94087LLU,1LLU),_234223e9b_Range32(94095LLU,94098LLU,1LLU),_234223e9b_Range32(94180LLU,94192LLU,12LLU),_234223e9b_Range32(94193LLU,113821LLU,19628LLU),_234223e9b_Range32(113822LLU,118528LLU,4706LLU),_234223e9b_Range32(118529LLU,118573LLU,1LLU),_234223e9b_Range32(118576LLU,118598LLU,1LLU),_234223e9b_Range32(119141LLU,119145LLU,1LLU),_234223e9b_Range32(119149LLU,119154LLU,1LLU),_234223e9b_Range32(119163LLU,119170LLU,1LLU),_234223e9b_Range32(119173LLU,119179LLU,1LLU),_234223e9b_Range32(119210LLU,119213LLU,1LLU),_234223e9b_Range32(119362LLU,119364LLU,1LLU),_234223e9b_Range32(121344LLU,121398LLU,1LLU),_234223e9b_Range32(121403LLU,121452LLU,1LLU),_234223e9b_Range32(121461LLU,121476LLU,15LLU),_234223e9b_Range32(121499LLU,121503LLU,1LLU),_234223e9b_Range32(121505LLU,121519LLU,1LLU),_234223e9b_Range32(122880LLU,122886LLU,1LLU),_234223e9b_Range32(122888LLU,122904LLU,1LLU),_234223e9b_Range32(122907LLU,122913LLU,1LLU),_234223e9b_Range32(122915LLU,122916LLU,1LLU),_234223e9b_Range32(122918LLU,122922LLU,1LLU),_234223e9b_Range32(123023LLU,123184LLU,161LLU),_234223e9b_Range32(123185LLU,123190LLU,1LLU),_234223e9b_Range32(123566LLU,123628LLU,62LLU),_234223e9b_Range32(123629LLU,123631LLU,1LLU),_234223e9b_Range32(124140LLU,124143LLU,1LLU),_234223e9b_Range32(125136LLU,125142LLU,1LLU),_234223e9b_Range32(125252LLU,125258LLU,1LLU),_234223e9b_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2307LLU,2363LLU,56LLU),_234223e9b_Range16(2366LLU,2368LLU,1LLU),_234223e9b_Range16(2377LLU,2380LLU,1LLU),_234223e9b_Range16(2382LLU,2383LLU,1LLU),_234223e9b_Range16(2434LLU,2435LLU,1LLU),_234223e9b_Range16(2494LLU,2496LLU,1LLU),_234223e9b_Range16(2503LLU,2504LLU,1LLU),_234223e9b_Range16(2507LLU,2508LLU,1LLU),_234223e9b_Range16(2519LLU,2563LLU,44LLU),_234223e9b_Range16(2622LLU,2624LLU,1LLU),_234223e9b_Range16(2691LLU,2750LLU,59LLU),_234223e9b_Range16(2751LLU,2752LLU,1LLU),_234223e9b_Range16(2761LLU,2763LLU,2LLU),_234223e9b_Range16(2764LLU,2818LLU,54LLU),_234223e9b_Range16(2819LLU,2878LLU,59LLU),_234223e9b_Range16(2880LLU,2887LLU,7LLU),_234223e9b_Range16(2888LLU,2891LLU,3LLU),_234223e9b_Range16(2892LLU,2903LLU,11LLU),_234223e9b_Range16(3006LLU,3007LLU,1LLU),_234223e9b_Range16(3009LLU,3010LLU,1LLU),_234223e9b_Range16(3014LLU,3016LLU,1LLU),_234223e9b_Range16(3018LLU,3020LLU,1LLU),_234223e9b_Range16(3031LLU,3073LLU,42LLU),_234223e9b_Range16(3074LLU,3075LLU,1LLU),_234223e9b_Range16(3137LLU,3140LLU,1LLU),_234223e9b_Range16(3202LLU,3203LLU,1LLU),_234223e9b_Range16(3262LLU,3264LLU,2LLU),_234223e9b_Range16(3265LLU,3268LLU,1LLU),_234223e9b_Range16(3271LLU,3272LLU,1LLU),_234223e9b_Range16(3274LLU,3275LLU,1LLU),_234223e9b_Range16(3285LLU,3286LLU,1LLU),_234223e9b_Range16(3315LLU,3330LLU,15LLU),_234223e9b_Range16(3331LLU,3390LLU,59LLU),_234223e9b_Range16(3391LLU,3392LLU,1LLU),_234223e9b_Range16(3398LLU,3400LLU,1LLU),_234223e9b_Range16(3402LLU,3404LLU,1LLU),_234223e9b_Range16(3415LLU,3458LLU,43LLU),_234223e9b_Range16(3459LLU,3535LLU,76LLU),_234223e9b_Range16(3536LLU,3537LLU,1LLU),_234223e9b_Range16(3544LLU,3551LLU,1LLU),_234223e9b_Range16(3570LLU,3571LLU,1LLU),_234223e9b_Range16(3902LLU,3903LLU,1LLU),_234223e9b_Range16(3967LLU,4139LLU,172LLU),_234223e9b_Range16(4140LLU,4145LLU,5LLU),_234223e9b_Range16(4152LLU,4155LLU,3LLU),_234223e9b_Range16(4156LLU,4182LLU,26LLU),_234223e9b_Range16(4183LLU,4194LLU,11LLU),_234223e9b_Range16(4195LLU,4196LLU,1LLU),_234223e9b_Range16(4199LLU,4205LLU,1LLU),_234223e9b_Range16(4227LLU,4228LLU,1LLU),_234223e9b_Range16(4231LLU,4236LLU,1LLU),_234223e9b_Range16(4239LLU,4250LLU,11LLU),_234223e9b_Range16(4251LLU,4252LLU,1LLU),_234223e9b_Range16(5909LLU,5940LLU,31LLU),_234223e9b_Range16(6070LLU,6078LLU,8LLU),_234223e9b_Range16(6079LLU,6085LLU,1LLU),_234223e9b_Range16(6087LLU,6088LLU,1LLU),_234223e9b_Range16(6435LLU,6438LLU,1LLU),_234223e9b_Range16(6441LLU,6443LLU,1LLU),_234223e9b_Range16(6448LLU,6449LLU,1LLU),_234223e9b_Range16(6451LLU,6456LLU,1LLU),_234223e9b_Range16(6681LLU,6682LLU,1LLU),_234223e9b_Range16(6741LLU,6743LLU,2LLU),_234223e9b_Range16(6753LLU,6755LLU,2LLU),_234223e9b_Range16(6756LLU,6765LLU,9LLU),_234223e9b_Range16(6766LLU,6770LLU,1LLU),_234223e9b_Range16(6916LLU,6965LLU,49LLU),_234223e9b_Range16(6971LLU,6973LLU,2LLU),_234223e9b_Range16(6974LLU,6977LLU,1LLU),_234223e9b_Range16(6979LLU,6980LLU,1LLU),_234223e9b_Range16(7042LLU,7073LLU,31LLU),_234223e9b_Range16(7078LLU,7079LLU,1LLU),_234223e9b_Range16(7082LLU,7143LLU,61LLU),_234223e9b_Range16(7146LLU,7148LLU,1LLU),_234223e9b_Range16(7150LLU,7154LLU,4LLU),_234223e9b_Range16(7155LLU,7204LLU,49LLU),_234223e9b_Range16(7205LLU,7211LLU,1LLU),_234223e9b_Range16(7220LLU,7221LLU,1LLU),_234223e9b_Range16(7393LLU,7415LLU,22LLU),_234223e9b_Range16(12334LLU,12335LLU,1LLU),_234223e9b_Range16(43043LLU,43044LLU,1LLU),_234223e9b_Range16(43047LLU,43136LLU,89LLU),_234223e9b_Range16(43137LLU,43188LLU,51LLU),_234223e9b_Range16(43189LLU,43203LLU,1LLU),_234223e9b_Range16(43346LLU,43347LLU,1LLU),_234223e9b_Range16(43395LLU,43444LLU,49LLU),_234223e9b_Range16(43445LLU,43450LLU,5LLU),_234223e9b_Range16(43451LLU,43454LLU,3LLU),_234223e9b_Range16(43455LLU,43456LLU,1LLU),_234223e9b_Range16(43567LLU,43568LLU,1LLU),_234223e9b_Range16(43571LLU,43572LLU,1LLU),_234223e9b_Range16(43597LLU,43643LLU,46LLU),_234223e9b_Range16(43645LLU,43755LLU,110LLU),_234223e9b_Range16(43758LLU,43759LLU,1LLU),_234223e9b_Range16(43765LLU,44003LLU,238LLU),_234223e9b_Range16(44004LLU,44006LLU,2LLU),_234223e9b_Range16(44007LLU,44009LLU,2LLU),_234223e9b_Range16(44010LLU,44012LLU,2LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69632LLU,69634LLU,2LLU),_234223e9b_Range32(69762LLU,69808LLU,46LLU),_234223e9b_Range32(69809LLU,69810LLU,1LLU),_234223e9b_Range32(69815LLU,69816LLU,1LLU),_234223e9b_Range32(69932LLU,69957LLU,25LLU),_234223e9b_Range32(69958LLU,70018LLU,60LLU),_234223e9b_Range32(70067LLU,70069LLU,1LLU),_234223e9b_Range32(70079LLU,70080LLU,1LLU),_234223e9b_Range32(70094LLU,70188LLU,94LLU),_234223e9b_Range32(70189LLU,70190LLU,1LLU),_234223e9b_Range32(70194LLU,70195LLU,1LLU),_234223e9b_Range32(70197LLU,70368LLU,171LLU),_234223e9b_Range32(70369LLU,70370LLU,1LLU),_234223e9b_Range32(70402LLU,70403LLU,1LLU),_234223e9b_Range32(70462LLU,70463LLU,1LLU),_234223e9b_Range32(70465LLU,70468LLU,1LLU),_234223e9b_Range32(70471LLU,70472LLU,1LLU),_234223e9b_Range32(70475LLU,70477LLU,1LLU),_234223e9b_Range32(70487LLU,70498LLU,11LLU),_234223e9b_Range32(70499LLU,70709LLU,210LLU),_234223e9b_Range32(70710LLU,70711LLU,1LLU),_234223e9b_Range32(70720LLU,70721LLU,1LLU),_234223e9b_Range32(70725LLU,70832LLU,107LLU),_234223e9b_Range32(70833LLU,70834LLU,1LLU),_234223e9b_Range32(70841LLU,70843LLU,2LLU),_234223e9b_Range32(70844LLU,70846LLU,1LLU),_234223e9b_Range32(70849LLU,71087LLU,238LLU),_234223e9b_Range32(71088LLU,71089LLU,1LLU),_234223e9b_Range32(71096LLU,71099LLU,1LLU),_234223e9b_Range32(71102LLU,71216LLU,114LLU),_234223e9b_Range32(71217LLU,71218LLU,1LLU),_234223e9b_Range32(71227LLU,71228LLU,1LLU),_234223e9b_Range32(71230LLU,71340LLU,110LLU),_234223e9b_Range32(71342LLU,71343LLU,1LLU),_234223e9b_Range32(71350LLU,71456LLU,106LLU),_234223e9b_Range32(71457LLU,71462LLU,5LLU),_234223e9b_Range32(71724LLU,71726LLU,1LLU),_234223e9b_Range32(71736LLU,71984LLU,248LLU),_234223e9b_Range32(71985LLU,71989LLU,1LLU),_234223e9b_Range32(71991LLU,71992LLU,1LLU),_234223e9b_Range32(71997LLU,72000LLU,3LLU),_234223e9b_Range32(72002LLU,72145LLU,143LLU),_234223e9b_Range32(72146LLU,72147LLU,1LLU),_234223e9b_Range32(72156LLU,72159LLU,1LLU),_234223e9b_Range32(72164LLU,72249LLU,85LLU),_234223e9b_Range32(72279LLU,72280LLU,1LLU),_234223e9b_Range32(72343LLU,72751LLU,408LLU),_234223e9b_Range32(72766LLU,72873LLU,107LLU),_234223e9b_Range32(72881LLU,72884LLU,3LLU),_234223e9b_Range32(73098LLU,73102LLU,1LLU),_234223e9b_Range32(73107LLU,73108LLU,1LLU),_234223e9b_Range32(73110LLU,73461LLU,351LLU),_234223e9b_Range32(73462LLU,73475LLU,13LLU),_234223e9b_Range32(73524LLU,73525LLU,1LLU),_234223e9b_Range32(73534LLU,73535LLU,1LLU),_234223e9b_Range32(73537LLU,94033LLU,20496LLU),_234223e9b_Range32(94034LLU,94087LLU,1LLU),_234223e9b_Range32(94192LLU,94193LLU,1LLU),_234223e9b_Range32(119141LLU,119142LLU,1LLU),_234223e9b_Range32(119149LLU,119154LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ME = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1160LLU,1161LLU,1LLU),_234223e9b_Range16(6846LLU,8413LLU,1567LLU),_234223e9b_Range16(8414LLU,8416LLU,1LLU),_234223e9b_Range16(8418LLU,8420LLU,1LLU),_234223e9b_Range16(42608LLU,42610LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(768LLU,879LLU,1LLU),_234223e9b_Range16(1155LLU,1159LLU,1LLU),_234223e9b_Range16(1425LLU,1469LLU,1LLU),_234223e9b_Range16(1471LLU,1473LLU,2LLU),_234223e9b_Range16(1474LLU,1476LLU,2LLU),_234223e9b_Range16(1477LLU,1479LLU,2LLU),_234223e9b_Range16(1552LLU,1562LLU,1LLU),_234223e9b_Range16(1611LLU,1631LLU,1LLU),_234223e9b_Range16(1648LLU,1750LLU,102LLU),_234223e9b_Range16(1751LLU,1756LLU,1LLU),_234223e9b_Range16(1759LLU,1764LLU,1LLU),_234223e9b_Range16(1767LLU,1768LLU,1LLU),_234223e9b_Range16(1770LLU,1773LLU,1LLU),_234223e9b_Range16(1809LLU,1840LLU,31LLU),_234223e9b_Range16(1841LLU,1866LLU,1LLU),_234223e9b_Range16(1958LLU,1968LLU,1LLU),_234223e9b_Range16(2027LLU,2035LLU,1LLU),_234223e9b_Range16(2045LLU,2070LLU,25LLU),_234223e9b_Range16(2071LLU,2073LLU,1LLU),_234223e9b_Range16(2075LLU,2083LLU,1LLU),_234223e9b_Range16(2085LLU,2087LLU,1LLU),_234223e9b_Range16(2089LLU,2093LLU,1LLU),_234223e9b_Range16(2137LLU,2139LLU,1LLU),_234223e9b_Range16(2200LLU,2207LLU,1LLU),_234223e9b_Range16(2250LLU,2273LLU,1LLU),_234223e9b_Range16(2275LLU,2306LLU,1LLU),_234223e9b_Range16(2362LLU,2364LLU,2LLU),_234223e9b_Range16(2369LLU,2376LLU,1LLU),_234223e9b_Range16(2381LLU,2385LLU,4LLU),_234223e9b_Range16(2386LLU,2391LLU,1LLU),_234223e9b_Range16(2402LLU,2403LLU,1LLU),_234223e9b_Range16(2433LLU,2492LLU,59LLU),_234223e9b_Range16(2497LLU,2500LLU,1LLU),_234223e9b_Range16(2509LLU,2530LLU,21LLU),_234223e9b_Range16(2531LLU,2558LLU,27LLU),_234223e9b_Range16(2561LLU,2562LLU,1LLU),_234223e9b_Range16(2620LLU,2625LLU,5LLU),_234223e9b_Range16(2626LLU,2631LLU,5LLU),_234223e9b_Range16(2632LLU,2635LLU,3LLU),_234223e9b_Range16(2636LLU,2637LLU,1LLU),_234223e9b_Range16(2641LLU,2672LLU,31LLU),_234223e9b_Range16(2673LLU,2677LLU,4LLU),_234223e9b_Range16(2689LLU,2690LLU,1LLU),_234223e9b_Range16(2748LLU,2753LLU,5LLU),_234223e9b_Range16(2754LLU,2757LLU,1LLU),_234223e9b_Range16(2759LLU,2760LLU,1LLU),_234223e9b_Range16(2765LLU,2786LLU,21LLU),_234223e9b_Range16(2787LLU,2810LLU,23LLU),_234223e9b_Range16(2811LLU,2815LLU,1LLU),_234223e9b_Range16(2817LLU,2876LLU,59LLU),_234223e9b_Range16(2879LLU,2881LLU,2LLU),_234223e9b_Range16(2882LLU,2884LLU,1LLU),_234223e9b_Range16(2893LLU,2901LLU,8LLU),_234223e9b_Range16(2902LLU,2914LLU,12LLU),_234223e9b_Range16(2915LLU,2946LLU,31LLU),_234223e9b_Range16(3008LLU,3021LLU,13LLU),_234223e9b_Range16(3072LLU,3076LLU,4LLU),_234223e9b_Range16(3132LLU,3134LLU,2LLU),_234223e9b_Range16(3135LLU,3136LLU,1LLU),_234223e9b_Range16(3142LLU,3144LLU,1LLU),_234223e9b_Range16(3146LLU,3149LLU,1LLU),_234223e9b_Range16(3157LLU,3158LLU,1LLU),_234223e9b_Range16(3170LLU,3171LLU,1LLU),_234223e9b_Range16(3201LLU,3260LLU,59LLU),_234223e9b_Range16(3263LLU,3270LLU,7LLU),_234223e9b_Range16(3276LLU,3277LLU,1LLU),_234223e9b_Range16(3298LLU,3299LLU,1LLU),_234223e9b_Range16(3328LLU,3329LLU,1LLU),_234223e9b_Range16(3387LLU,3388LLU,1LLU),_234223e9b_Range16(3393LLU,3396LLU,1LLU),_234223e9b_Range16(3405LLU,3426LLU,21LLU),_234223e9b_Range16(3427LLU,3457LLU,30LLU),_234223e9b_Range16(3530LLU,3538LLU,8LLU),_234223e9b_Range16(3539LLU,3540LLU,1LLU),_234223e9b_Range16(3542LLU,3633LLU,91LLU),_234223e9b_Range16(3636LLU,3642LLU,1LLU),_234223e9b_Range16(3655LLU,3662LLU,1LLU),_234223e9b_Range16(3761LLU,3764LLU,3LLU),_234223e9b_Range16(3765LLU,3772LLU,1LLU),_234223e9b_Range16(3784LLU,3790LLU,1LLU),_234223e9b_Range16(3864LLU,3865LLU,1LLU),_234223e9b_Range16(3893LLU,3897LLU,2LLU),_234223e9b_Range16(3953LLU,3966LLU,1LLU),_234223e9b_Range16(3968LLU,3972LLU,1LLU),_234223e9b_Range16(3974LLU,3975LLU,1LLU),_234223e9b_Range16(3981LLU,3991LLU,1LLU),_234223e9b_Range16(3993LLU,4028LLU,1LLU),_234223e9b_Range16(4038LLU,4141LLU,103LLU),_234223e9b_Range16(4142LLU,4144LLU,1LLU),_234223e9b_Range16(4146LLU,4151LLU,1LLU),_234223e9b_Range16(4153LLU,4154LLU,1LLU),_234223e9b_Range16(4157LLU,4158LLU,1LLU),_234223e9b_Range16(4184LLU,4185LLU,1LLU),_234223e9b_Range16(4190LLU,4192LLU,1LLU),_234223e9b_Range16(4209LLU,4212LLU,1LLU),_234223e9b_Range16(4226LLU,4229LLU,3LLU),_234223e9b_Range16(4230LLU,4237LLU,7LLU),_234223e9b_Range16(4253LLU,4957LLU,704LLU),_234223e9b_Range16(4958LLU,4959LLU,1LLU),_234223e9b_Range16(5906LLU,5908LLU,1LLU),_234223e9b_Range16(5938LLU,5939LLU,1LLU),_234223e9b_Range16(5970LLU,5971LLU,1LLU),_234223e9b_Range16(6002LLU,6003LLU,1LLU),_234223e9b_Range16(6068LLU,6069LLU,1LLU),_234223e9b_Range16(6071LLU,6077LLU,1LLU),_234223e9b_Range16(6086LLU,6089LLU,3LLU),_234223e9b_Range16(6090LLU,6099LLU,1LLU),_234223e9b_Range16(6109LLU,6155LLU,46LLU),_234223e9b_Range16(6156LLU,6157LLU,1LLU),_234223e9b_Range16(6159LLU,6277LLU,118LLU),_234223e9b_Range16(6278LLU,6313LLU,35LLU),_234223e9b_Range16(6432LLU,6434LLU,1LLU),_234223e9b_Range16(6439LLU,6440LLU,1LLU),_234223e9b_Range16(6450LLU,6457LLU,7LLU),_234223e9b_Range16(6458LLU,6459LLU,1LLU),_234223e9b_Range16(6679LLU,6680LLU,1LLU),_234223e9b_Range16(6683LLU,6742LLU,59LLU),_234223e9b_Range16(6744LLU,6750LLU,1LLU),_234223e9b_Range16(6752LLU,6754LLU,2LLU),_234223e9b_Range16(6757LLU,6764LLU,1LLU),_234223e9b_Range16(6771LLU,6780LLU,1LLU),_234223e9b_Range16(6783LLU,6832LLU,49LLU),_234223e9b_Range16(6833LLU,6845LLU,1LLU),_234223e9b_Range16(6847LLU,6862LLU,1LLU),_234223e9b_Range16(6912LLU,6915LLU,1LLU),_234223e9b_Range16(6964LLU,6966LLU,2LLU),_234223e9b_Range16(6967LLU,6970LLU,1LLU),_234223e9b_Range16(6972LLU,6978LLU,6LLU),_234223e9b_Range16(7019LLU,7027LLU,1LLU),_234223e9b_Range16(7040LLU,7041LLU,1LLU),_234223e9b_Range16(7074LLU,7077LLU,1LLU),_234223e9b_Range16(7080LLU,7081LLU,1LLU),_234223e9b_Range16(7083LLU,7085LLU,1LLU),_234223e9b_Range16(7142LLU,7144LLU,2LLU),_234223e9b_Range16(7145LLU,7149LLU,4LLU),_234223e9b_Range16(7151LLU,7153LLU,1LLU),_234223e9b_Range16(7212LLU,7219LLU,1LLU),_234223e9b_Range16(7222LLU,7223LLU,1LLU),_234223e9b_Range16(7376LLU,7378LLU,1LLU),_234223e9b_Range16(7380LLU,7392LLU,1LLU),_234223e9b_Range16(7394LLU,7400LLU,1LLU),_234223e9b_Range16(7405LLU,7412LLU,7LLU),_234223e9b_Range16(7416LLU,7417LLU,1LLU),_234223e9b_Range16(7616LLU,7679LLU,1LLU),_234223e9b_Range16(8400LLU,8412LLU,1LLU),_234223e9b_Range16(8417LLU,8421LLU,4LLU),_234223e9b_Range16(8422LLU,8432LLU,1LLU),_234223e9b_Range16(11503LLU,11505LLU,1LLU),_234223e9b_Range16(11647LLU,11744LLU,97LLU),_234223e9b_Range16(11745LLU,11775LLU,1LLU),_234223e9b_Range16(12330LLU,12333LLU,1LLU),_234223e9b_Range16(12441LLU,12442LLU,1LLU),_234223e9b_Range16(42607LLU,42612LLU,5LLU),_234223e9b_Range16(42613LLU,42621LLU,1LLU),_234223e9b_Range16(42654LLU,42655LLU,1LLU),_234223e9b_Range16(42736LLU,42737LLU,1LLU),_234223e9b_Range16(43010LLU,43014LLU,4LLU),_234223e9b_Range16(43019LLU,43045LLU,26LLU),_234223e9b_Range16(43046LLU,43052LLU,6LLU),_234223e9b_Range16(43204LLU,43205LLU,1LLU),_234223e9b_Range16(43232LLU,43249LLU,1LLU),_234223e9b_Range16(43263LLU,43302LLU,39LLU),_234223e9b_Range16(43303LLU,43309LLU,1LLU),_234223e9b_Range16(43335LLU,43345LLU,1LLU),_234223e9b_Range16(43392LLU,43394LLU,1LLU),_234223e9b_Range16(43443LLU,43446LLU,3LLU),_234223e9b_Range16(43447LLU,43449LLU,1LLU),_234223e9b_Range16(43452LLU,43453LLU,1LLU),_234223e9b_Range16(43493LLU,43561LLU,68LLU),_234223e9b_Range16(43562LLU,43566LLU,1LLU),_234223e9b_Range16(43569LLU,43570LLU,1LLU),_234223e9b_Range16(43573LLU,43574LLU,1LLU),_234223e9b_Range16(43587LLU,43596LLU,9LLU),_234223e9b_Range16(43644LLU,43696LLU,52LLU),_234223e9b_Range16(43698LLU,43700LLU,1LLU),_234223e9b_Range16(43703LLU,43704LLU,1LLU),_234223e9b_Range16(43710LLU,43711LLU,1LLU),_234223e9b_Range16(43713LLU,43756LLU,43LLU),_234223e9b_Range16(43757LLU,43766LLU,9LLU),_234223e9b_Range16(44005LLU,44008LLU,3LLU),_234223e9b_Range16(44013LLU,64286LLU,20273LLU),_234223e9b_Range16(65024LLU,65039LLU,1LLU),_234223e9b_Range16(65056LLU,65071LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66045LLU,66272LLU,227LLU),_234223e9b_Range32(66422LLU,66426LLU,1LLU),_234223e9b_Range32(68097LLU,68099LLU,1LLU),_234223e9b_Range32(68101LLU,68102LLU,1LLU),_234223e9b_Range32(68108LLU,68111LLU,1LLU),_234223e9b_Range32(68152LLU,68154LLU,1LLU),_234223e9b_Range32(68159LLU,68325LLU,166LLU),_234223e9b_Range32(68326LLU,68900LLU,574LLU),_234223e9b_Range32(68901LLU,68903LLU,1LLU),_234223e9b_Range32(69291LLU,69292LLU,1LLU),_234223e9b_Range32(69373LLU,69375LLU,1LLU),_234223e9b_Range32(69446LLU,69456LLU,1LLU),_234223e9b_Range32(69506LLU,69509LLU,1LLU),_234223e9b_Range32(69633LLU,69688LLU,55LLU),_234223e9b_Range32(69689LLU,69702LLU,1LLU),_234223e9b_Range32(69744LLU,69747LLU,3LLU),_234223e9b_Range32(69748LLU,69759LLU,11LLU),_234223e9b_Range32(69760LLU,69761LLU,1LLU),_234223e9b_Range32(69811LLU,69814LLU,1LLU),_234223e9b_Range32(69817LLU,69818LLU,1LLU),_234223e9b_Range32(69826LLU,69888LLU,62LLU),_234223e9b_Range32(69889LLU,69890LLU,1LLU),_234223e9b_Range32(69927LLU,69931LLU,1LLU),_234223e9b_Range32(69933LLU,69940LLU,1LLU),_234223e9b_Range32(70003LLU,70016LLU,13LLU),_234223e9b_Range32(70017LLU,70070LLU,53LLU),_234223e9b_Range32(70071LLU,70078LLU,1LLU),_234223e9b_Range32(70089LLU,70092LLU,1LLU),_234223e9b_Range32(70095LLU,70191LLU,96LLU),_234223e9b_Range32(70192LLU,70193LLU,1LLU),_234223e9b_Range32(70196LLU,70198LLU,2LLU),_234223e9b_Range32(70199LLU,70206LLU,7LLU),_234223e9b_Range32(70209LLU,70367LLU,158LLU),_234223e9b_Range32(70371LLU,70378LLU,1LLU),_234223e9b_Range32(70400LLU,70401LLU,1LLU),_234223e9b_Range32(70459LLU,70460LLU,1LLU),_234223e9b_Range32(70464LLU,70502LLU,38LLU),_234223e9b_Range32(70503LLU,70508LLU,1LLU),_234223e9b_Range32(70512LLU,70516LLU,1LLU),_234223e9b_Range32(70712LLU,70719LLU,1LLU),_234223e9b_Range32(70722LLU,70724LLU,1LLU),_234223e9b_Range32(70726LLU,70750LLU,24LLU),_234223e9b_Range32(70835LLU,70840LLU,1LLU),_234223e9b_Range32(70842LLU,70847LLU,5LLU),_234223e9b_Range32(70848LLU,70850LLU,2LLU),_234223e9b_Range32(70851LLU,71090LLU,239LLU),_234223e9b_Range32(71091LLU,71093LLU,1LLU),_234223e9b_Range32(71100LLU,71101LLU,1LLU),_234223e9b_Range32(71103LLU,71104LLU,1LLU),_234223e9b_Range32(71132LLU,71133LLU,1LLU),_234223e9b_Range32(71219LLU,71226LLU,1LLU),_234223e9b_Range32(71229LLU,71231LLU,2LLU),_234223e9b_Range32(71232LLU,71339LLU,107LLU),_234223e9b_Range32(71341LLU,71344LLU,3LLU),_234223e9b_Range32(71345LLU,71349LLU,1LLU),_234223e9b_Range32(71351LLU,71453LLU,102LLU),_234223e9b_Range32(71454LLU,71455LLU,1LLU),_234223e9b_Range32(71458LLU,71461LLU,1LLU),_234223e9b_Range32(71463LLU,71467LLU,1LLU),_234223e9b_Range32(71727LLU,71735LLU,1LLU),_234223e9b_Range32(71737LLU,71738LLU,1LLU),_234223e9b_Range32(71995LLU,71996LLU,1LLU),_234223e9b_Range32(71998LLU,72003LLU,5LLU),_234223e9b_Range32(72148LLU,72151LLU,1LLU),_234223e9b_Range32(72154LLU,72155LLU,1LLU),_234223e9b_Range32(72160LLU,72193LLU,33LLU),_234223e9b_Range32(72194LLU,72202LLU,1LLU),_234223e9b_Range32(72243LLU,72248LLU,1LLU),_234223e9b_Range32(72251LLU,72254LLU,1LLU),_234223e9b_Range32(72263LLU,72273LLU,10LLU),_234223e9b_Range32(72274LLU,72278LLU,1LLU),_234223e9b_Range32(72281LLU,72283LLU,1LLU),_234223e9b_Range32(72330LLU,72342LLU,1LLU),_234223e9b_Range32(72344LLU,72345LLU,1LLU),_234223e9b_Range32(72752LLU,72758LLU,1LLU),_234223e9b_Range32(72760LLU,72765LLU,1LLU),_234223e9b_Range32(72767LLU,72850LLU,83LLU),_234223e9b_Range32(72851LLU,72871LLU,1LLU),_234223e9b_Range32(72874LLU,72880LLU,1LLU),_234223e9b_Range32(72882LLU,72883LLU,1LLU),_234223e9b_Range32(72885LLU,72886LLU,1LLU),_234223e9b_Range32(73009LLU,73014LLU,1LLU),_234223e9b_Range32(73018LLU,73020LLU,2LLU),_234223e9b_Range32(73021LLU,73023LLU,2LLU),_234223e9b_Range32(73024LLU,73029LLU,1LLU),_234223e9b_Range32(73031LLU,73104LLU,73LLU),_234223e9b_Range32(73105LLU,73109LLU,4LLU),_234223e9b_Range32(73111LLU,73459LLU,348LLU),_234223e9b_Range32(73460LLU,73472LLU,12LLU),_234223e9b_Range32(73473LLU,73526LLU,53LLU),_234223e9b_Range32(73527LLU,73530LLU,1LLU),_234223e9b_Range32(73536LLU,73538LLU,2LLU),_234223e9b_Range32(78912LLU,78919LLU,7LLU),_234223e9b_Range32(78920LLU,78933LLU,1LLU),_234223e9b_Range32(92912LLU,92916LLU,1LLU),_234223e9b_Range32(92976LLU,92982LLU,1LLU),_234223e9b_Range32(94031LLU,94095LLU,64LLU),_234223e9b_Range32(94096LLU,94098LLU,1LLU),_234223e9b_Range32(94180LLU,113821LLU,19641LLU),_234223e9b_Range32(113822LLU,118528LLU,4706LLU),_234223e9b_Range32(118529LLU,118573LLU,1LLU),_234223e9b_Range32(118576LLU,118598LLU,1LLU),_234223e9b_Range32(119143LLU,119145LLU,1LLU),_234223e9b_Range32(119163LLU,119170LLU,1LLU),_234223e9b_Range32(119173LLU,119179LLU,1LLU),_234223e9b_Range32(119210LLU,119213LLU,1LLU),_234223e9b_Range32(119362LLU,119364LLU,1LLU),_234223e9b_Range32(121344LLU,121398LLU,1LLU),_234223e9b_Range32(121403LLU,121452LLU,1LLU),_234223e9b_Range32(121461LLU,121476LLU,15LLU),_234223e9b_Range32(121499LLU,121503LLU,1LLU),_234223e9b_Range32(121505LLU,121519LLU,1LLU),_234223e9b_Range32(122880LLU,122886LLU,1LLU),_234223e9b_Range32(122888LLU,122904LLU,1LLU),_234223e9b_Range32(122907LLU,122913LLU,1LLU),_234223e9b_Range32(122915LLU,122916LLU,1LLU),_234223e9b_Range32(122918LLU,122922LLU,1LLU),_234223e9b_Range32(123023LLU,123184LLU,161LLU),_234223e9b_Range32(123185LLU,123190LLU,1LLU),_234223e9b_Range32(123566LLU,123628LLU,62LLU),_234223e9b_Range32(123629LLU,123631LLU,1LLU),_234223e9b_Range32(124140LLU,124143LLU,1LLU),_234223e9b_Range32(125136LLU,125142LLU,1LLU),_234223e9b_Range32(125252LLU,125258LLU,1LLU),_234223e9b_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__N = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(48LLU,57LLU,1LLU),_234223e9b_Range16(178LLU,179LLU,1LLU),_234223e9b_Range16(185LLU,188LLU,3LLU),_234223e9b_Range16(189LLU,190LLU,1LLU),_234223e9b_Range16(1632LLU,1641LLU,1LLU),_234223e9b_Range16(1776LLU,1785LLU,1LLU),_234223e9b_Range16(1984LLU,1993LLU,1LLU),_234223e9b_Range16(2406LLU,2415LLU,1LLU),_234223e9b_Range16(2534LLU,2543LLU,1LLU),_234223e9b_Range16(2548LLU,2553LLU,1LLU),_234223e9b_Range16(2662LLU,2671LLU,1LLU),_234223e9b_Range16(2790LLU,2799LLU,1LLU),_234223e9b_Range16(2918LLU,2927LLU,1LLU),_234223e9b_Range16(2930LLU,2935LLU,1LLU),_234223e9b_Range16(3046LLU,3058LLU,1LLU),_234223e9b_Range16(3174LLU,3183LLU,1LLU),_234223e9b_Range16(3192LLU,3198LLU,1LLU),_234223e9b_Range16(3302LLU,3311LLU,1LLU),_234223e9b_Range16(3416LLU,3422LLU,1LLU),_234223e9b_Range16(3430LLU,3448LLU,1LLU),_234223e9b_Range16(3558LLU,3567LLU,1LLU),_234223e9b_Range16(3664LLU,3673LLU,1LLU),_234223e9b_Range16(3792LLU,3801LLU,1LLU),_234223e9b_Range16(3872LLU,3891LLU,1LLU),_234223e9b_Range16(4160LLU,4169LLU,1LLU),_234223e9b_Range16(4240LLU,4249LLU,1LLU),_234223e9b_Range16(4969LLU,4988LLU,1LLU),_234223e9b_Range16(5870LLU,5872LLU,1LLU),_234223e9b_Range16(6112LLU,6121LLU,1LLU),_234223e9b_Range16(6128LLU,6137LLU,1LLU),_234223e9b_Range16(6160LLU,6169LLU,1LLU),_234223e9b_Range16(6470LLU,6479LLU,1LLU),_234223e9b_Range16(6608LLU,6618LLU,1LLU),_234223e9b_Range16(6784LLU,6793LLU,1LLU),_234223e9b_Range16(6800LLU,6809LLU,1LLU),_234223e9b_Range16(6992LLU,7001LLU,1LLU),_234223e9b_Range16(7088LLU,7097LLU,1LLU),_234223e9b_Range16(7232LLU,7241LLU,1LLU),_234223e9b_Range16(7248LLU,7257LLU,1LLU),_234223e9b_Range16(8304LLU,8308LLU,4LLU),_234223e9b_Range16(8309LLU,8313LLU,1LLU),_234223e9b_Range16(8320LLU,8329LLU,1LLU),_234223e9b_Range16(8528LLU,8578LLU,1LLU),_234223e9b_Range16(8581LLU,8585LLU,1LLU),_234223e9b_Range16(9312LLU,9371LLU,1LLU),_234223e9b_Range16(9450LLU,9471LLU,1LLU),_234223e9b_Range16(10102LLU,10131LLU,1LLU),_234223e9b_Range16(11517LLU,12295LLU,778LLU),_234223e9b_Range16(12321LLU,12329LLU,1LLU),_234223e9b_Range16(12344LLU,12346LLU,1LLU),_234223e9b_Range16(12690LLU,12693LLU,1LLU),_234223e9b_Range16(12832LLU,12841LLU,1LLU),_234223e9b_Range16(12872LLU,12879LLU,1LLU),_234223e9b_Range16(12881LLU,12895LLU,1LLU),_234223e9b_Range16(12928LLU,12937LLU,1LLU),_234223e9b_Range16(12977LLU,12991LLU,1LLU),_234223e9b_Range16(42528LLU,42537LLU,1LLU),_234223e9b_Range16(42726LLU,42735LLU,1LLU),_234223e9b_Range16(43056LLU,43061LLU,1LLU),_234223e9b_Range16(43216LLU,43225LLU,1LLU),_234223e9b_Range16(43264LLU,43273LLU,1LLU),_234223e9b_Range16(43472LLU,43481LLU,1LLU),_234223e9b_Range16(43504LLU,43513LLU,1LLU),_234223e9b_Range16(43600LLU,43609LLU,1LLU),_234223e9b_Range16(44016LLU,44025LLU,1LLU),_234223e9b_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65799LLU,65843LLU,1LLU),_234223e9b_Range32(65856LLU,65912LLU,1LLU),_234223e9b_Range32(65930LLU,65931LLU,1LLU),_234223e9b_Range32(66273LLU,66299LLU,1LLU),_234223e9b_Range32(66336LLU,66339LLU,1LLU),_234223e9b_Range32(66369LLU,66378LLU,9LLU),_234223e9b_Range32(66513LLU,66517LLU,1LLU),_234223e9b_Range32(66720LLU,66729LLU,1LLU),_234223e9b_Range32(67672LLU,67679LLU,1LLU),_234223e9b_Range32(67705LLU,67711LLU,1LLU),_234223e9b_Range32(67751LLU,67759LLU,1LLU),_234223e9b_Range32(67835LLU,67839LLU,1LLU),_234223e9b_Range32(67862LLU,67867LLU,1LLU),_234223e9b_Range32(68028LLU,68029LLU,1LLU),_234223e9b_Range32(68032LLU,68047LLU,1LLU),_234223e9b_Range32(68050LLU,68095LLU,1LLU),_234223e9b_Range32(68160LLU,68168LLU,1LLU),_234223e9b_Range32(68221LLU,68222LLU,1LLU),_234223e9b_Range32(68253LLU,68255LLU,1LLU),_234223e9b_Range32(68331LLU,68335LLU,1LLU),_234223e9b_Range32(68440LLU,68447LLU,1LLU),_234223e9b_Range32(68472LLU,68479LLU,1LLU),_234223e9b_Range32(68521LLU,68527LLU,1LLU),_234223e9b_Range32(68858LLU,68863LLU,1LLU),_234223e9b_Range32(68912LLU,68921LLU,1LLU),_234223e9b_Range32(69216LLU,69246LLU,1LLU),_234223e9b_Range32(69405LLU,69414LLU,1LLU),_234223e9b_Range32(69457LLU,69460LLU,1LLU),_234223e9b_Range32(69573LLU,69579LLU,1LLU),_234223e9b_Range32(69714LLU,69743LLU,1LLU),_234223e9b_Range32(69872LLU,69881LLU,1LLU),_234223e9b_Range32(69942LLU,69951LLU,1LLU),_234223e9b_Range32(70096LLU,70105LLU,1LLU),_234223e9b_Range32(70113LLU,70132LLU,1LLU),_234223e9b_Range32(70384LLU,70393LLU,1LLU),_234223e9b_Range32(70736LLU,70745LLU,1LLU),_234223e9b_Range32(70864LLU,70873LLU,1LLU),_234223e9b_Range32(71248LLU,71257LLU,1LLU),_234223e9b_Range32(71360LLU,71369LLU,1LLU),_234223e9b_Range32(71472LLU,71483LLU,1LLU),_234223e9b_Range32(71904LLU,71922LLU,1LLU),_234223e9b_Range32(72016LLU,72025LLU,1LLU),_234223e9b_Range32(72784LLU,72812LLU,1LLU),_234223e9b_Range32(73040LLU,73049LLU,1LLU),_234223e9b_Range32(73120LLU,73129LLU,1LLU),_234223e9b_Range32(73552LLU,73561LLU,1LLU),_234223e9b_Range32(73664LLU,73684LLU,1LLU),_234223e9b_Range32(74752LLU,74862LLU,1LLU),_234223e9b_Range32(92768LLU,92777LLU,1LLU),_234223e9b_Range32(92864LLU,92873LLU,1LLU),_234223e9b_Range32(93008LLU,93017LLU,1LLU),_234223e9b_Range32(93019LLU,93025LLU,1LLU),_234223e9b_Range32(93824LLU,93846LLU,1LLU),_234223e9b_Range32(119488LLU,119507LLU,1LLU),_234223e9b_Range32(119520LLU,119539LLU,1LLU),_234223e9b_Range32(119648LLU,119672LLU,1LLU),_234223e9b_Range32(120782LLU,120831LLU,1LLU),_234223e9b_Range32(123200LLU,123209LLU,1LLU),_234223e9b_Range32(123632LLU,123641LLU,1LLU),_234223e9b_Range32(124144LLU,124153LLU,1LLU),_234223e9b_Range32(125127LLU,125135LLU,1LLU),_234223e9b_Range32(125264LLU,125273LLU,1LLU),_234223e9b_Range32(126065LLU,126123LLU,1LLU),_234223e9b_Range32(126125LLU,126127LLU,1LLU),_234223e9b_Range32(126129LLU,126132LLU,1LLU),_234223e9b_Range32(126209LLU,126253LLU,1LLU),_234223e9b_Range32(126255LLU,126269LLU,1LLU),_234223e9b_Range32(127232LLU,127244LLU,1LLU),_234223e9b_Range32(130032LLU,130041LLU,1LLU)}),4LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ND = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(48LLU,57LLU,1LLU),_234223e9b_Range16(1632LLU,1641LLU,1LLU),_234223e9b_Range16(1776LLU,1785LLU,1LLU),_234223e9b_Range16(1984LLU,1993LLU,1LLU),_234223e9b_Range16(2406LLU,2415LLU,1LLU),_234223e9b_Range16(2534LLU,2543LLU,1LLU),_234223e9b_Range16(2662LLU,2671LLU,1LLU),_234223e9b_Range16(2790LLU,2799LLU,1LLU),_234223e9b_Range16(2918LLU,2927LLU,1LLU),_234223e9b_Range16(3046LLU,3055LLU,1LLU),_234223e9b_Range16(3174LLU,3183LLU,1LLU),_234223e9b_Range16(3302LLU,3311LLU,1LLU),_234223e9b_Range16(3430LLU,3439LLU,1LLU),_234223e9b_Range16(3558LLU,3567LLU,1LLU),_234223e9b_Range16(3664LLU,3673LLU,1LLU),_234223e9b_Range16(3792LLU,3801LLU,1LLU),_234223e9b_Range16(3872LLU,3881LLU,1LLU),_234223e9b_Range16(4160LLU,4169LLU,1LLU),_234223e9b_Range16(4240LLU,4249LLU,1LLU),_234223e9b_Range16(6112LLU,6121LLU,1LLU),_234223e9b_Range16(6160LLU,6169LLU,1LLU),_234223e9b_Range16(6470LLU,6479LLU,1LLU),_234223e9b_Range16(6608LLU,6617LLU,1LLU),_234223e9b_Range16(6784LLU,6793LLU,1LLU),_234223e9b_Range16(6800LLU,6809LLU,1LLU),_234223e9b_Range16(6992LLU,7001LLU,1LLU),_234223e9b_Range16(7088LLU,7097LLU,1LLU),_234223e9b_Range16(7232LLU,7241LLU,1LLU),_234223e9b_Range16(7248LLU,7257LLU,1LLU),_234223e9b_Range16(42528LLU,42537LLU,1LLU),_234223e9b_Range16(43216LLU,43225LLU,1LLU),_234223e9b_Range16(43264LLU,43273LLU,1LLU),_234223e9b_Range16(43472LLU,43481LLU,1LLU),_234223e9b_Range16(43504LLU,43513LLU,1LLU),_234223e9b_Range16(43600LLU,43609LLU,1LLU),_234223e9b_Range16(44016LLU,44025LLU,1LLU),_234223e9b_Range16(65296LLU,65305LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66720LLU,66729LLU,1LLU),_234223e9b_Range32(68912LLU,68921LLU,1LLU),_234223e9b_Range32(69734LLU,69743LLU,1LLU),_234223e9b_Range32(69872LLU,69881LLU,1LLU),_234223e9b_Range32(69942LLU,69951LLU,1LLU),_234223e9b_Range32(70096LLU,70105LLU,1LLU),_234223e9b_Range32(70384LLU,70393LLU,1LLU),_234223e9b_Range32(70736LLU,70745LLU,1LLU),_234223e9b_Range32(70864LLU,70873LLU,1LLU),_234223e9b_Range32(71248LLU,71257LLU,1LLU),_234223e9b_Range32(71360LLU,71369LLU,1LLU),_234223e9b_Range32(71472LLU,71481LLU,1LLU),_234223e9b_Range32(71904LLU,71913LLU,1LLU),_234223e9b_Range32(72016LLU,72025LLU,1LLU),_234223e9b_Range32(72784LLU,72793LLU,1LLU),_234223e9b_Range32(73040LLU,73049LLU,1LLU),_234223e9b_Range32(73120LLU,73129LLU,1LLU),_234223e9b_Range32(73552LLU,73561LLU,1LLU),_234223e9b_Range32(92768LLU,92777LLU,1LLU),_234223e9b_Range32(92864LLU,92873LLU,1LLU),_234223e9b_Range32(93008LLU,93017LLU,1LLU),_234223e9b_Range32(120782LLU,120831LLU,1LLU),_234223e9b_Range32(123200LLU,123209LLU,1LLU),_234223e9b_Range32(123632LLU,123641LLU,1LLU),_234223e9b_Range32(124144LLU,124153LLU,1LLU),_234223e9b_Range32(125264LLU,125273LLU,1LLU),_234223e9b_Range32(130032LLU,130041LLU,1LLU)}),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5870LLU,5872LLU,1LLU),_234223e9b_Range16(8544LLU,8578LLU,1LLU),_234223e9b_Range16(8581LLU,8584LLU,1LLU),_234223e9b_Range16(12295LLU,12321LLU,26LLU),_234223e9b_Range16(12322LLU,12329LLU,1LLU),_234223e9b_Range16(12344LLU,12346LLU,1LLU),_234223e9b_Range16(42726LLU,42735LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65856LLU,65908LLU,1LLU),_234223e9b_Range32(66369LLU,66378LLU,9LLU),_234223e9b_Range32(66513LLU,66517LLU,1LLU),_234223e9b_Range32(74752LLU,74862LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(178LLU,179LLU,1LLU),_234223e9b_Range16(185LLU,188LLU,3LLU),_234223e9b_Range16(189LLU,190LLU,1LLU),_234223e9b_Range16(2548LLU,2553LLU,1LLU),_234223e9b_Range16(2930LLU,2935LLU,1LLU),_234223e9b_Range16(3056LLU,3058LLU,1LLU),_234223e9b_Range16(3192LLU,3198LLU,1LLU),_234223e9b_Range16(3416LLU,3422LLU,1LLU),_234223e9b_Range16(3440LLU,3448LLU,1LLU),_234223e9b_Range16(3882LLU,3891LLU,1LLU),_234223e9b_Range16(4969LLU,4988LLU,1LLU),_234223e9b_Range16(6128LLU,6137LLU,1LLU),_234223e9b_Range16(6618LLU,8304LLU,1686LLU),_234223e9b_Range16(8308LLU,8313LLU,1LLU),_234223e9b_Range16(8320LLU,8329LLU,1LLU),_234223e9b_Range16(8528LLU,8543LLU,1LLU),_234223e9b_Range16(8585LLU,9312LLU,727LLU),_234223e9b_Range16(9313LLU,9371LLU,1LLU),_234223e9b_Range16(9450LLU,9471LLU,1LLU),_234223e9b_Range16(10102LLU,10131LLU,1LLU),_234223e9b_Range16(11517LLU,12690LLU,1173LLU),_234223e9b_Range16(12691LLU,12693LLU,1LLU),_234223e9b_Range16(12832LLU,12841LLU,1LLU),_234223e9b_Range16(12872LLU,12879LLU,1LLU),_234223e9b_Range16(12881LLU,12895LLU,1LLU),_234223e9b_Range16(12928LLU,12937LLU,1LLU),_234223e9b_Range16(12977LLU,12991LLU,1LLU),_234223e9b_Range16(43056LLU,43061LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65799LLU,65843LLU,1LLU),_234223e9b_Range32(65909LLU,65912LLU,1LLU),_234223e9b_Range32(65930LLU,65931LLU,1LLU),_234223e9b_Range32(66273LLU,66299LLU,1LLU),_234223e9b_Range32(66336LLU,66339LLU,1LLU),_234223e9b_Range32(67672LLU,67679LLU,1LLU),_234223e9b_Range32(67705LLU,67711LLU,1LLU),_234223e9b_Range32(67751LLU,67759LLU,1LLU),_234223e9b_Range32(67835LLU,67839LLU,1LLU),_234223e9b_Range32(67862LLU,67867LLU,1LLU),_234223e9b_Range32(68028LLU,68029LLU,1LLU),_234223e9b_Range32(68032LLU,68047LLU,1LLU),_234223e9b_Range32(68050LLU,68095LLU,1LLU),_234223e9b_Range32(68160LLU,68168LLU,1LLU),_234223e9b_Range32(68221LLU,68222LLU,1LLU),_234223e9b_Range32(68253LLU,68255LLU,1LLU),_234223e9b_Range32(68331LLU,68335LLU,1LLU),_234223e9b_Range32(68440LLU,68447LLU,1LLU),_234223e9b_Range32(68472LLU,68479LLU,1LLU),_234223e9b_Range32(68521LLU,68527LLU,1LLU),_234223e9b_Range32(68858LLU,68863LLU,1LLU),_234223e9b_Range32(69216LLU,69246LLU,1LLU),_234223e9b_Range32(69405LLU,69414LLU,1LLU),_234223e9b_Range32(69457LLU,69460LLU,1LLU),_234223e9b_Range32(69573LLU,69579LLU,1LLU),_234223e9b_Range32(69714LLU,69733LLU,1LLU),_234223e9b_Range32(70113LLU,70132LLU,1LLU),_234223e9b_Range32(71482LLU,71483LLU,1LLU),_234223e9b_Range32(71914LLU,71922LLU,1LLU),_234223e9b_Range32(72794LLU,72812LLU,1LLU),_234223e9b_Range32(73664LLU,73684LLU,1LLU),_234223e9b_Range32(93019LLU,93025LLU,1LLU),_234223e9b_Range32(93824LLU,93846LLU,1LLU),_234223e9b_Range32(119488LLU,119507LLU,1LLU),_234223e9b_Range32(119520LLU,119539LLU,1LLU),_234223e9b_Range32(119648LLU,119672LLU,1LLU),_234223e9b_Range32(125127LLU,125135LLU,1LLU),_234223e9b_Range32(126065LLU,126123LLU,1LLU),_234223e9b_Range32(126125LLU,126127LLU,1LLU),_234223e9b_Range32(126129LLU,126132LLU,1LLU),_234223e9b_Range32(126209LLU,126253LLU,1LLU),_234223e9b_Range32(126255LLU,126269LLU,1LLU),_234223e9b_Range32(127232LLU,127244LLU,1LLU)}),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__P = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(33LLU,35LLU,1LLU),_234223e9b_Range16(37LLU,42LLU,1LLU),_234223e9b_Range16(44LLU,47LLU,1LLU),_234223e9b_Range16(58LLU,59LLU,1LLU),_234223e9b_Range16(63LLU,64LLU,1LLU),_234223e9b_Range16(91LLU,93LLU,1LLU),_234223e9b_Range16(95LLU,123LLU,28LLU),_234223e9b_Range16(125LLU,161LLU,36LLU),_234223e9b_Range16(167LLU,171LLU,4LLU),_234223e9b_Range16(182LLU,183LLU,1LLU),_234223e9b_Range16(187LLU,191LLU,4LLU),_234223e9b_Range16(894LLU,903LLU,9LLU),_234223e9b_Range16(1370LLU,1375LLU,1LLU),_234223e9b_Range16(1417LLU,1418LLU,1LLU),_234223e9b_Range16(1470LLU,1472LLU,2LLU),_234223e9b_Range16(1475LLU,1478LLU,3LLU),_234223e9b_Range16(1523LLU,1524LLU,1LLU),_234223e9b_Range16(1545LLU,1546LLU,1LLU),_234223e9b_Range16(1548LLU,1549LLU,1LLU),_234223e9b_Range16(1563LLU,1565LLU,2LLU),_234223e9b_Range16(1566LLU,1567LLU,1LLU),_234223e9b_Range16(1642LLU,1645LLU,1LLU),_234223e9b_Range16(1748LLU,1792LLU,44LLU),_234223e9b_Range16(1793LLU,1805LLU,1LLU),_234223e9b_Range16(2039LLU,2041LLU,1LLU),_234223e9b_Range16(2096LLU,2110LLU,1LLU),_234223e9b_Range16(2142LLU,2404LLU,262LLU),_234223e9b_Range16(2405LLU,2416LLU,11LLU),_234223e9b_Range16(2557LLU,2678LLU,121LLU),_234223e9b_Range16(2800LLU,3191LLU,391LLU),_234223e9b_Range16(3204LLU,3572LLU,368LLU),_234223e9b_Range16(3663LLU,3674LLU,11LLU),_234223e9b_Range16(3675LLU,3844LLU,169LLU),_234223e9b_Range16(3845LLU,3858LLU,1LLU),_234223e9b_Range16(3860LLU,3898LLU,38LLU),_234223e9b_Range16(3899LLU,3901LLU,1LLU),_234223e9b_Range16(3973LLU,4048LLU,75LLU),_234223e9b_Range16(4049LLU,4052LLU,1LLU),_234223e9b_Range16(4057LLU,4058LLU,1LLU),_234223e9b_Range16(4170LLU,4175LLU,1LLU),_234223e9b_Range16(4347LLU,4960LLU,613LLU),_234223e9b_Range16(4961LLU,4968LLU,1LLU),_234223e9b_Range16(5120LLU,5742LLU,622LLU),_234223e9b_Range16(5787LLU,5788LLU,1LLU),_234223e9b_Range16(5867LLU,5869LLU,1LLU),_234223e9b_Range16(5941LLU,5942LLU,1LLU),_234223e9b_Range16(6100LLU,6102LLU,1LLU),_234223e9b_Range16(6104LLU,6106LLU,1LLU),_234223e9b_Range16(6144LLU,6154LLU,1LLU),_234223e9b_Range16(6468LLU,6469LLU,1LLU),_234223e9b_Range16(6686LLU,6687LLU,1LLU),_234223e9b_Range16(6816LLU,6822LLU,1LLU),_234223e9b_Range16(6824LLU,6829LLU,1LLU),_234223e9b_Range16(7002LLU,7008LLU,1LLU),_234223e9b_Range16(7037LLU,7038LLU,1LLU),_234223e9b_Range16(7164LLU,7167LLU,1LLU),_234223e9b_Range16(7227LLU,7231LLU,1LLU),_234223e9b_Range16(7294LLU,7295LLU,1LLU),_234223e9b_Range16(7360LLU,7367LLU,1LLU),_234223e9b_Range16(7379LLU,8208LLU,829LLU),_234223e9b_Range16(8209LLU,8231LLU,1LLU),_234223e9b_Range16(8240LLU,8259LLU,1LLU),_234223e9b_Range16(8261LLU,8273LLU,1LLU),_234223e9b_Range16(8275LLU,8286LLU,1LLU),_234223e9b_Range16(8317LLU,8318LLU,1LLU),_234223e9b_Range16(8333LLU,8334LLU,1LLU),_234223e9b_Range16(8968LLU,8971LLU,1LLU),_234223e9b_Range16(9001LLU,9002LLU,1LLU),_234223e9b_Range16(10088LLU,10101LLU,1LLU),_234223e9b_Range16(10181LLU,10182LLU,1LLU),_234223e9b_Range16(10214LLU,10223LLU,1LLU),_234223e9b_Range16(10627LLU,10648LLU,1LLU),_234223e9b_Range16(10712LLU,10715LLU,1LLU),_234223e9b_Range16(10748LLU,10749LLU,1LLU),_234223e9b_Range16(11513LLU,11516LLU,1LLU),_234223e9b_Range16(11518LLU,11519LLU,1LLU),_234223e9b_Range16(11632LLU,11776LLU,144LLU),_234223e9b_Range16(11777LLU,11822LLU,1LLU),_234223e9b_Range16(11824LLU,11855LLU,1LLU),_234223e9b_Range16(11858LLU,11869LLU,1LLU),_234223e9b_Range16(12289LLU,12291LLU,1LLU),_234223e9b_Range16(12296LLU,12305LLU,1LLU),_234223e9b_Range16(12308LLU,12319LLU,1LLU),_234223e9b_Range16(12336LLU,12349LLU,13LLU),_234223e9b_Range16(12448LLU,12539LLU,91LLU),_234223e9b_Range16(42238LLU,42239LLU,1LLU),_234223e9b_Range16(42509LLU,42511LLU,1LLU),_234223e9b_Range16(42611LLU,42622LLU,11LLU),_234223e9b_Range16(42738LLU,42743LLU,1LLU),_234223e9b_Range16(43124LLU,43127LLU,1LLU),_234223e9b_Range16(43214LLU,43215LLU,1LLU),_234223e9b_Range16(43256LLU,43258LLU,1LLU),_234223e9b_Range16(43260LLU,43310LLU,50LLU),_234223e9b_Range16(43311LLU,43359LLU,48LLU),_234223e9b_Range16(43457LLU,43469LLU,1LLU),_234223e9b_Range16(43486LLU,43487LLU,1LLU),_234223e9b_Range16(43612LLU,43615LLU,1LLU),_234223e9b_Range16(43742LLU,43743LLU,1LLU),_234223e9b_Range16(43760LLU,43761LLU,1LLU),_234223e9b_Range16(44011LLU,64830LLU,20819LLU),_234223e9b_Range16(64831LLU,65040LLU,209LLU),_234223e9b_Range16(65041LLU,65049LLU,1LLU),_234223e9b_Range16(65072LLU,65106LLU,1LLU),_234223e9b_Range16(65108LLU,65121LLU,1LLU),_234223e9b_Range16(65123LLU,65128LLU,5LLU),_234223e9b_Range16(65130LLU,65131LLU,1LLU),_234223e9b_Range16(65281LLU,65283LLU,1LLU),_234223e9b_Range16(65285LLU,65290LLU,1LLU),_234223e9b_Range16(65292LLU,65295LLU,1LLU),_234223e9b_Range16(65306LLU,65307LLU,1LLU),_234223e9b_Range16(65311LLU,65312LLU,1LLU),_234223e9b_Range16(65339LLU,65341LLU,1LLU),_234223e9b_Range16(65343LLU,65371LLU,28LLU),_234223e9b_Range16(65373LLU,65375LLU,2LLU),_234223e9b_Range16(65376LLU,65381LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65792LLU,65794LLU,1LLU),_234223e9b_Range32(66463LLU,66512LLU,49LLU),_234223e9b_Range32(66927LLU,67671LLU,744LLU),_234223e9b_Range32(67871LLU,67903LLU,32LLU),_234223e9b_Range32(68176LLU,68184LLU,1LLU),_234223e9b_Range32(68223LLU,68336LLU,113LLU),_234223e9b_Range32(68337LLU,68342LLU,1LLU),_234223e9b_Range32(68409LLU,68415LLU,1LLU),_234223e9b_Range32(68505LLU,68508LLU,1LLU),_234223e9b_Range32(69293LLU,69461LLU,168LLU),_234223e9b_Range32(69462LLU,69465LLU,1LLU),_234223e9b_Range32(69510LLU,69513LLU,1LLU),_234223e9b_Range32(69703LLU,69709LLU,1LLU),_234223e9b_Range32(69819LLU,69820LLU,1LLU),_234223e9b_Range32(69822LLU,69825LLU,1LLU),_234223e9b_Range32(69952LLU,69955LLU,1LLU),_234223e9b_Range32(70004LLU,70005LLU,1LLU),_234223e9b_Range32(70085LLU,70088LLU,1LLU),_234223e9b_Range32(70093LLU,70107LLU,14LLU),_234223e9b_Range32(70109LLU,70111LLU,1LLU),_234223e9b_Range32(70200LLU,70205LLU,1LLU),_234223e9b_Range32(70313LLU,70731LLU,418LLU),_234223e9b_Range32(70732LLU,70735LLU,1LLU),_234223e9b_Range32(70746LLU,70747LLU,1LLU),_234223e9b_Range32(70749LLU,70854LLU,105LLU),_234223e9b_Range32(71105LLU,71127LLU,1LLU),_234223e9b_Range32(71233LLU,71235LLU,1LLU),_234223e9b_Range32(71264LLU,71276LLU,1LLU),_234223e9b_Range32(71353LLU,71484LLU,131LLU),_234223e9b_Range32(71485LLU,71486LLU,1LLU),_234223e9b_Range32(71739LLU,72004LLU,265LLU),_234223e9b_Range32(72005LLU,72006LLU,1LLU),_234223e9b_Range32(72162LLU,72255LLU,93LLU),_234223e9b_Range32(72256LLU,72262LLU,1LLU),_234223e9b_Range32(72346LLU,72348LLU,1LLU),_234223e9b_Range32(72350LLU,72354LLU,1LLU),_234223e9b_Range32(72448LLU,72457LLU,1LLU),_234223e9b_Range32(72769LLU,72773LLU,1LLU),_234223e9b_Range32(72816LLU,72817LLU,1LLU),_234223e9b_Range32(73463LLU,73464LLU,1LLU),_234223e9b_Range32(73539LLU,73551LLU,1LLU),_234223e9b_Range32(73727LLU,74864LLU,1137LLU),_234223e9b_Range32(74865LLU,74868LLU,1LLU),_234223e9b_Range32(77809LLU,77810LLU,1LLU),_234223e9b_Range32(92782LLU,92783LLU,1LLU),_234223e9b_Range32(92917LLU,92983LLU,66LLU),_234223e9b_Range32(92984LLU,92987LLU,1LLU),_234223e9b_Range32(92996LLU,93847LLU,851LLU),_234223e9b_Range32(93848LLU,93850LLU,1LLU),_234223e9b_Range32(94178LLU,113823LLU,19645LLU),_234223e9b_Range32(121479LLU,121483LLU,1LLU),_234223e9b_Range32(125278LLU,125279LLU,1LLU)}),11LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(95LLU,8255LLU,8160LLU),_234223e9b_Range16(8256LLU,8276LLU,20LLU),_234223e9b_Range16(65075LLU,65076LLU,1LLU),_234223e9b_Range16(65101LLU,65103LLU,1LLU),_234223e9b_Range16(65343LLU,65343LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PD = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(45LLU,1418LLU,1373LLU),_234223e9b_Range16(1470LLU,5120LLU,3650LLU),_234223e9b_Range16(6150LLU,8208LLU,2058LLU),_234223e9b_Range16(8209LLU,8213LLU,1LLU),_234223e9b_Range16(11799LLU,11802LLU,3LLU),_234223e9b_Range16(11834LLU,11835LLU,1LLU),_234223e9b_Range16(11840LLU,11869LLU,29LLU),_234223e9b_Range16(12316LLU,12336LLU,20LLU),_234223e9b_Range16(12448LLU,65073LLU,52625LLU),_234223e9b_Range16(65074LLU,65112LLU,38LLU),_234223e9b_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(41LLU,93LLU,52LLU),_234223e9b_Range16(125LLU,3899LLU,3774LLU),_234223e9b_Range16(3901LLU,5788LLU,1887LLU),_234223e9b_Range16(8262LLU,8318LLU,56LLU),_234223e9b_Range16(8334LLU,8969LLU,635LLU),_234223e9b_Range16(8971LLU,9002LLU,31LLU),_234223e9b_Range16(10089LLU,10101LLU,2LLU),_234223e9b_Range16(10182LLU,10215LLU,33LLU),_234223e9b_Range16(10217LLU,10223LLU,2LLU),_234223e9b_Range16(10628LLU,10648LLU,2LLU),_234223e9b_Range16(10713LLU,10715LLU,2LLU),_234223e9b_Range16(10749LLU,11811LLU,1062LLU),_234223e9b_Range16(11813LLU,11817LLU,2LLU),_234223e9b_Range16(11862LLU,11868LLU,2LLU),_234223e9b_Range16(12297LLU,12305LLU,2LLU),_234223e9b_Range16(12309LLU,12315LLU,2LLU),_234223e9b_Range16(12318LLU,12319LLU,1LLU),_234223e9b_Range16(64830LLU,65048LLU,218LLU),_234223e9b_Range16(65078LLU,65092LLU,2LLU),_234223e9b_Range16(65096LLU,65114LLU,18LLU),_234223e9b_Range16(65116LLU,65118LLU,2LLU),_234223e9b_Range16(65289LLU,65341LLU,52LLU),_234223e9b_Range16(65373LLU,65379LLU,3LLU)}),jule::Slice<_234223e9b_Range32>(),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PF = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(187LLU,8217LLU,8030LLU),_234223e9b_Range16(8221LLU,8250LLU,29LLU),_234223e9b_Range16(11779LLU,11781LLU,2LLU),_234223e9b_Range16(11786LLU,11789LLU,3LLU),_234223e9b_Range16(11805LLU,11809LLU,4LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(171LLU,8216LLU,8045LLU),_234223e9b_Range16(8219LLU,8220LLU,1LLU),_234223e9b_Range16(8223LLU,8249LLU,26LLU),_234223e9b_Range16(11778LLU,11780LLU,2LLU),_234223e9b_Range16(11785LLU,11788LLU,3LLU),_234223e9b_Range16(11804LLU,11808LLU,4LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(33LLU,35LLU,1LLU),_234223e9b_Range16(37LLU,39LLU,1LLU),_234223e9b_Range16(42LLU,46LLU,2LLU),_234223e9b_Range16(47LLU,58LLU,11LLU),_234223e9b_Range16(59LLU,63LLU,4LLU),_234223e9b_Range16(64LLU,92LLU,28LLU),_234223e9b_Range16(161LLU,167LLU,6LLU),_234223e9b_Range16(182LLU,183LLU,1LLU),_234223e9b_Range16(191LLU,894LLU,703LLU),_234223e9b_Range16(903LLU,1370LLU,467LLU),_234223e9b_Range16(1371LLU,1375LLU,1LLU),_234223e9b_Range16(1417LLU,1472LLU,55LLU),_234223e9b_Range16(1475LLU,1478LLU,3LLU),_234223e9b_Range16(1523LLU,1524LLU,1LLU),_234223e9b_Range16(1545LLU,1546LLU,1LLU),_234223e9b_Range16(1548LLU,1549LLU,1LLU),_234223e9b_Range16(1563LLU,1565LLU,2LLU),_234223e9b_Range16(1566LLU,1567LLU,1LLU),_234223e9b_Range16(1642LLU,1645LLU,1LLU),_234223e9b_Range16(1748LLU,1792LLU,44LLU),_234223e9b_Range16(1793LLU,1805LLU,1LLU),_234223e9b_Range16(2039LLU,2041LLU,1LLU),_234223e9b_Range16(2096LLU,2110LLU,1LLU),_234223e9b_Range16(2142LLU,2404LLU,262LLU),_234223e9b_Range16(2405LLU,2416LLU,11LLU),_234223e9b_Range16(2557LLU,2678LLU,121LLU),_234223e9b_Range16(2800LLU,3191LLU,391LLU),_234223e9b_Range16(3204LLU,3572LLU,368LLU),_234223e9b_Range16(3663LLU,3674LLU,11LLU),_234223e9b_Range16(3675LLU,3844LLU,169LLU),_234223e9b_Range16(3845LLU,3858LLU,1LLU),_234223e9b_Range16(3860LLU,3973LLU,113LLU),_234223e9b_Range16(4048LLU,4052LLU,1LLU),_234223e9b_Range16(4057LLU,4058LLU,1LLU),_234223e9b_Range16(4170LLU,4175LLU,1LLU),_234223e9b_Range16(4347LLU,4960LLU,613LLU),_234223e9b_Range16(4961LLU,4968LLU,1LLU),_234223e9b_Range16(5742LLU,5867LLU,125LLU),_234223e9b_Range16(5868LLU,5869LLU,1LLU),_234223e9b_Range16(5941LLU,5942LLU,1LLU),_234223e9b_Range16(6100LLU,6102LLU,1LLU),_234223e9b_Range16(6104LLU,6106LLU,1LLU),_234223e9b_Range16(6144LLU,6149LLU,1LLU),_234223e9b_Range16(6151LLU,6154LLU,1LLU),_234223e9b_Range16(6468LLU,6469LLU,1LLU),_234223e9b_Range16(6686LLU,6687LLU,1LLU),_234223e9b_Range16(6816LLU,6822LLU,1LLU),_234223e9b_Range16(6824LLU,6829LLU,1LLU),_234223e9b_Range16(7002LLU,7008LLU,1LLU),_234223e9b_Range16(7037LLU,7038LLU,1LLU),_234223e9b_Range16(7164LLU,7167LLU,1LLU),_234223e9b_Range16(7227LLU,7231LLU,1LLU),_234223e9b_Range16(7294LLU,7295LLU,1LLU),_234223e9b_Range16(7360LLU,7367LLU,1LLU),_234223e9b_Range16(7379LLU,8214LLU,835LLU),_234223e9b_Range16(8215LLU,8224LLU,9LLU),_234223e9b_Range16(8225LLU,8231LLU,1LLU),_234223e9b_Range16(8240LLU,8248LLU,1LLU),_234223e9b_Range16(8251LLU,8254LLU,1LLU),_234223e9b_Range16(8257LLU,8259LLU,1LLU),_234223e9b_Range16(8263LLU,8273LLU,1LLU),_234223e9b_Range16(8275LLU,8277LLU,2LLU),_234223e9b_Range16(8278LLU,8286LLU,1LLU),_234223e9b_Range16(11513LLU,11516LLU,1LLU),_234223e9b_Range16(11518LLU,11519LLU,1LLU),_234223e9b_Range16(11632LLU,11776LLU,144LLU),_234223e9b_Range16(11777LLU,11782LLU,5LLU),_234223e9b_Range16(11783LLU,11784LLU,1LLU),_234223e9b_Range16(11787LLU,11790LLU,3LLU),_234223e9b_Range16(11791LLU,11798LLU,1LLU),_234223e9b_Range16(11800LLU,11801LLU,1LLU),_234223e9b_Range16(11803LLU,11806LLU,3LLU),_234223e9b_Range16(11807LLU,11818LLU,11LLU),_234223e9b_Range16(11819LLU,11822LLU,1LLU),_234223e9b_Range16(11824LLU,11833LLU,1LLU),_234223e9b_Range16(11836LLU,11839LLU,1LLU),_234223e9b_Range16(11841LLU,11843LLU,2LLU),_234223e9b_Range16(11844LLU,11855LLU,1LLU),_234223e9b_Range16(11858LLU,11860LLU,1LLU),_234223e9b_Range16(12289LLU,12291LLU,1LLU),_234223e9b_Range16(12349LLU,12539LLU,190LLU),_234223e9b_Range16(42238LLU,42239LLU,1LLU),_234223e9b_Range16(42509LLU,42511LLU,1LLU),_234223e9b_Range16(42611LLU,42622LLU,11LLU),_234223e9b_Range16(42738LLU,42743LLU,1LLU),_234223e9b_Range16(43124LLU,43127LLU,1LLU),_234223e9b_Range16(43214LLU,43215LLU,1LLU),_234223e9b_Range16(43256LLU,43258LLU,1LLU),_234223e9b_Range16(43260LLU,43310LLU,50LLU),_234223e9b_Range16(43311LLU,43359LLU,48LLU),_234223e9b_Range16(43457LLU,43469LLU,1LLU),_234223e9b_Range16(43486LLU,43487LLU,1LLU),_234223e9b_Range16(43612LLU,43615LLU,1LLU),_234223e9b_Range16(43742LLU,43743LLU,1LLU),_234223e9b_Range16(43760LLU,43761LLU,1LLU),_234223e9b_Range16(44011LLU,65040LLU,21029LLU),_234223e9b_Range16(65041LLU,65046LLU,1LLU),_234223e9b_Range16(65049LLU,65072LLU,23LLU),_234223e9b_Range16(65093LLU,65094LLU,1LLU),_234223e9b_Range16(65097LLU,65100LLU,1LLU),_234223e9b_Range16(65104LLU,65106LLU,1LLU),_234223e9b_Range16(65108LLU,65111LLU,1LLU),_234223e9b_Range16(65119LLU,65121LLU,1LLU),_234223e9b_Range16(65128LLU,65130LLU,2LLU),_234223e9b_Range16(65131LLU,65281LLU,150LLU),_234223e9b_Range16(65282LLU,65283LLU,1LLU),_234223e9b_Range16(65285LLU,65287LLU,1LLU),_234223e9b_Range16(65290LLU,65294LLU,2LLU),_234223e9b_Range16(65295LLU,65306LLU,11LLU),_234223e9b_Range16(65307LLU,65311LLU,4LLU),_234223e9b_Range16(65312LLU,65340LLU,28LLU),_234223e9b_Range16(65377LLU,65380LLU,3LLU),_234223e9b_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65792LLU,65794LLU,1LLU),_234223e9b_Range32(66463LLU,66512LLU,49LLU),_234223e9b_Range32(66927LLU,67671LLU,744LLU),_234223e9b_Range32(67871LLU,67903LLU,32LLU),_234223e9b_Range32(68176LLU,68184LLU,1LLU),_234223e9b_Range32(68223LLU,68336LLU,113LLU),_234223e9b_Range32(68337LLU,68342LLU,1LLU),_234223e9b_Range32(68409LLU,68415LLU,1LLU),_234223e9b_Range32(68505LLU,68508LLU,1LLU),_234223e9b_Range32(69461LLU,69465LLU,1LLU),_234223e9b_Range32(69510LLU,69513LLU,1LLU),_234223e9b_Range32(69703LLU,69709LLU,1LLU),_234223e9b_Range32(69819LLU,69820LLU,1LLU),_234223e9b_Range32(69822LLU,69825LLU,1LLU),_234223e9b_Range32(69952LLU,69955LLU,1LLU),_234223e9b_Range32(70004LLU,70005LLU,1LLU),_234223e9b_Range32(70085LLU,70088LLU,1LLU),_234223e9b_Range32(70093LLU,70107LLU,14LLU),_234223e9b_Range32(70109LLU,70111LLU,1LLU),_234223e9b_Range32(70200LLU,70205LLU,1LLU),_234223e9b_Range32(70313LLU,70731LLU,418LLU),_234223e9b_Range32(70732LLU,70735LLU,1LLU),_234223e9b_Range32(70746LLU,70747LLU,1LLU),_234223e9b_Range32(70749LLU,70854LLU,105LLU),_234223e9b_Range32(71105LLU,71127LLU,1LLU),_234223e9b_Range32(71233LLU,71235LLU,1LLU),_234223e9b_Range32(71264LLU,71276LLU,1LLU),_234223e9b_Range32(71353LLU,71484LLU,131LLU),_234223e9b_Range32(71485LLU,71486LLU,1LLU),_234223e9b_Range32(71739LLU,72004LLU,265LLU),_234223e9b_Range32(72005LLU,72006LLU,1LLU),_234223e9b_Range32(72162LLU,72255LLU,93LLU),_234223e9b_Range32(72256LLU,72262LLU,1LLU),_234223e9b_Range32(72346LLU,72348LLU,1LLU),_234223e9b_Range32(72350LLU,72354LLU,1LLU),_234223e9b_Range32(72448LLU,72457LLU,1LLU),_234223e9b_Range32(72769LLU,72773LLU,1LLU),_234223e9b_Range32(72816LLU,72817LLU,1LLU),_234223e9b_Range32(73463LLU,73464LLU,1LLU),_234223e9b_Range32(73539LLU,73551LLU,1LLU),_234223e9b_Range32(73727LLU,74864LLU,1137LLU),_234223e9b_Range32(74865LLU,74868LLU,1LLU),_234223e9b_Range32(77809LLU,77810LLU,1LLU),_234223e9b_Range32(92782LLU,92783LLU,1LLU),_234223e9b_Range32(92917LLU,92983LLU,66LLU),_234223e9b_Range32(92984LLU,92987LLU,1LLU),_234223e9b_Range32(92996LLU,93847LLU,851LLU),_234223e9b_Range32(93848LLU,93850LLU,1LLU),_234223e9b_Range32(94178LLU,113823LLU,19645LLU),_234223e9b_Range32(121479LLU,121483LLU,1LLU),_234223e9b_Range32(125278LLU,125279LLU,1LLU)}),8LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PS = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(40LLU,91LLU,51LLU),_234223e9b_Range16(123LLU,3898LLU,3775LLU),_234223e9b_Range16(3900LLU,5787LLU,1887LLU),_234223e9b_Range16(8218LLU,8222LLU,4LLU),_234223e9b_Range16(8261LLU,8317LLU,56LLU),_234223e9b_Range16(8333LLU,8968LLU,635LLU),_234223e9b_Range16(8970LLU,9001LLU,31LLU),_234223e9b_Range16(10088LLU,10100LLU,2LLU),_234223e9b_Range16(10181LLU,10214LLU,33LLU),_234223e9b_Range16(10216LLU,10222LLU,2LLU),_234223e9b_Range16(10627LLU,10647LLU,2LLU),_234223e9b_Range16(10712LLU,10714LLU,2LLU),_234223e9b_Range16(10748LLU,11810LLU,1062LLU),_234223e9b_Range16(11812LLU,11816LLU,2LLU),_234223e9b_Range16(11842LLU,11861LLU,19LLU),_234223e9b_Range16(11863LLU,11867LLU,2LLU),_234223e9b_Range16(12296LLU,12304LLU,2LLU),_234223e9b_Range16(12308LLU,12314LLU,2LLU),_234223e9b_Range16(12317LLU,64831LLU,52514LLU),_234223e9b_Range16(65047LLU,65077LLU,30LLU),_234223e9b_Range16(65079LLU,65091LLU,2LLU),_234223e9b_Range16(65095LLU,65113LLU,18LLU),_234223e9b_Range16(65115LLU,65117LLU,2LLU),_234223e9b_Range16(65288LLU,65339LLU,51LLU),_234223e9b_Range16(65371LLU,65375LLU,4LLU),_234223e9b_Range16(65378LLU,65378LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__S = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(36LLU,43LLU,7LLU),_234223e9b_Range16(60LLU,62LLU,1LLU),_234223e9b_Range16(94LLU,96LLU,2LLU),_234223e9b_Range16(124LLU,126LLU,2LLU),_234223e9b_Range16(162LLU,166LLU,1LLU),_234223e9b_Range16(168LLU,169LLU,1LLU),_234223e9b_Range16(172LLU,174LLU,2LLU),_234223e9b_Range16(175LLU,177LLU,1LLU),_234223e9b_Range16(180LLU,184LLU,4LLU),_234223e9b_Range16(215LLU,247LLU,32LLU),_234223e9b_Range16(706LLU,709LLU,1LLU),_234223e9b_Range16(722LLU,735LLU,1LLU),_234223e9b_Range16(741LLU,747LLU,1LLU),_234223e9b_Range16(749LLU,751LLU,2LLU),_234223e9b_Range16(752LLU,767LLU,1LLU),_234223e9b_Range16(885LLU,900LLU,15LLU),_234223e9b_Range16(901LLU,1014LLU,113LLU),_234223e9b_Range16(1154LLU,1421LLU,267LLU),_234223e9b_Range16(1422LLU,1423LLU,1LLU),_234223e9b_Range16(1542LLU,1544LLU,1LLU),_234223e9b_Range16(1547LLU,1550LLU,3LLU),_234223e9b_Range16(1551LLU,1758LLU,207LLU),_234223e9b_Range16(1769LLU,1789LLU,20LLU),_234223e9b_Range16(1790LLU,2038LLU,248LLU),_234223e9b_Range16(2046LLU,2047LLU,1LLU),_234223e9b_Range16(2184LLU,2546LLU,362LLU),_234223e9b_Range16(2547LLU,2554LLU,7LLU),_234223e9b_Range16(2555LLU,2801LLU,246LLU),_234223e9b_Range16(2928LLU,3059LLU,131LLU),_234223e9b_Range16(3060LLU,3066LLU,1LLU),_234223e9b_Range16(3199LLU,3407LLU,208LLU),_234223e9b_Range16(3449LLU,3647LLU,198LLU),_234223e9b_Range16(3841LLU,3843LLU,1LLU),_234223e9b_Range16(3859LLU,3861LLU,2LLU),_234223e9b_Range16(3862LLU,3863LLU,1LLU),_234223e9b_Range16(3866LLU,3871LLU,1LLU),_234223e9b_Range16(3892LLU,3896LLU,2LLU),_234223e9b_Range16(4030LLU,4037LLU,1LLU),_234223e9b_Range16(4039LLU,4044LLU,1LLU),_234223e9b_Range16(4046LLU,4047LLU,1LLU),_234223e9b_Range16(4053LLU,4056LLU,1LLU),_234223e9b_Range16(4254LLU,4255LLU,1LLU),_234223e9b_Range16(5008LLU,5017LLU,1LLU),_234223e9b_Range16(5741LLU,6107LLU,366LLU),_234223e9b_Range16(6464LLU,6622LLU,158LLU),_234223e9b_Range16(6623LLU,6655LLU,1LLU),_234223e9b_Range16(7009LLU,7018LLU,1LLU),_234223e9b_Range16(7028LLU,7036LLU,1LLU),_234223e9b_Range16(8125LLU,8127LLU,2LLU),_234223e9b_Range16(8128LLU,8129LLU,1LLU),_234223e9b_Range16(8141LLU,8143LLU,1LLU),_234223e9b_Range16(8157LLU,8159LLU,1LLU),_234223e9b_Range16(8173LLU,8175LLU,1LLU),_234223e9b_Range16(8189LLU,8190LLU,1LLU),_234223e9b_Range16(8260LLU,8274LLU,14LLU),_234223e9b_Range16(8314LLU,8316LLU,1LLU),_234223e9b_Range16(8330LLU,8332LLU,1LLU),_234223e9b_Range16(8352LLU,8384LLU,1LLU),_234223e9b_Range16(8448LLU,8449LLU,1LLU),_234223e9b_Range16(8451LLU,8454LLU,1LLU),_234223e9b_Range16(8456LLU,8457LLU,1LLU),_234223e9b_Range16(8468LLU,8470LLU,2LLU),_234223e9b_Range16(8471LLU,8472LLU,1LLU),_234223e9b_Range16(8478LLU,8483LLU,1LLU),_234223e9b_Range16(8485LLU,8489LLU,2LLU),_234223e9b_Range16(8494LLU,8506LLU,12LLU),_234223e9b_Range16(8507LLU,8512LLU,5LLU),_234223e9b_Range16(8513LLU,8516LLU,1LLU),_234223e9b_Range16(8522LLU,8525LLU,1LLU),_234223e9b_Range16(8527LLU,8586LLU,59LLU),_234223e9b_Range16(8587LLU,8592LLU,5LLU),_234223e9b_Range16(8593LLU,8967LLU,1LLU),_234223e9b_Range16(8972LLU,9000LLU,1LLU),_234223e9b_Range16(9003LLU,9254LLU,1LLU),_234223e9b_Range16(9280LLU,9290LLU,1LLU),_234223e9b_Range16(9372LLU,9449LLU,1LLU),_234223e9b_Range16(9472LLU,10087LLU,1LLU),_234223e9b_Range16(10132LLU,10180LLU,1LLU),_234223e9b_Range16(10183LLU,10213LLU,1LLU),_234223e9b_Range16(10224LLU,10626LLU,1LLU),_234223e9b_Range16(10649LLU,10711LLU,1LLU),_234223e9b_Range16(10716LLU,10747LLU,1LLU),_234223e9b_Range16(10750LLU,11123LLU,1LLU),_234223e9b_Range16(11126LLU,11157LLU,1LLU),_234223e9b_Range16(11159LLU,11263LLU,1LLU),_234223e9b_Range16(11493LLU,11498LLU,1LLU),_234223e9b_Range16(11856LLU,11857LLU,1LLU),_234223e9b_Range16(11904LLU,11929LLU,1LLU),_234223e9b_Range16(11931LLU,12019LLU,1LLU),_234223e9b_Range16(12032LLU,12245LLU,1LLU),_234223e9b_Range16(12272LLU,12283LLU,1LLU),_234223e9b_Range16(12292LLU,12306LLU,14LLU),_234223e9b_Range16(12307LLU,12320LLU,13LLU),_234223e9b_Range16(12342LLU,12343LLU,1LLU),_234223e9b_Range16(12350LLU,12351LLU,1LLU),_234223e9b_Range16(12443LLU,12444LLU,1LLU),_234223e9b_Range16(12688LLU,12689LLU,1LLU),_234223e9b_Range16(12694LLU,12703LLU,1LLU),_234223e9b_Range16(12736LLU,12771LLU,1LLU),_234223e9b_Range16(12800LLU,12830LLU,1LLU),_234223e9b_Range16(12842LLU,12871LLU,1LLU),_234223e9b_Range16(12880LLU,12896LLU,16LLU),_234223e9b_Range16(12897LLU,12927LLU,1LLU),_234223e9b_Range16(12938LLU,12976LLU,1LLU),_234223e9b_Range16(12992LLU,13311LLU,1LLU),_234223e9b_Range16(19904LLU,19967LLU,1LLU),_234223e9b_Range16(42128LLU,42182LLU,1LLU),_234223e9b_Range16(42752LLU,42774LLU,1LLU),_234223e9b_Range16(42784LLU,42785LLU,1LLU),_234223e9b_Range16(42889LLU,42890LLU,1LLU),_234223e9b_Range16(43048LLU,43051LLU,1LLU),_234223e9b_Range16(43062LLU,43065LLU,1LLU),_234223e9b_Range16(43639LLU,43641LLU,1LLU),_234223e9b_Range16(43867LLU,43882LLU,15LLU),_234223e9b_Range16(43883LLU,64297LLU,20414LLU),_234223e9b_Range16(64434LLU,64450LLU,1LLU),_234223e9b_Range16(64832LLU,64847LLU,1LLU),_234223e9b_Range16(64975LLU,65020LLU,45LLU),_234223e9b_Range16(65021LLU,65023LLU,1LLU),_234223e9b_Range16(65122LLU,65124LLU,2LLU),_234223e9b_Range16(65125LLU,65126LLU,1LLU),_234223e9b_Range16(65129LLU,65284LLU,155LLU),_234223e9b_Range16(65291LLU,65308LLU,17LLU),_234223e9b_Range16(65309LLU,65310LLU,1LLU),_234223e9b_Range16(65342LLU,65344LLU,2LLU),_234223e9b_Range16(65372LLU,65374LLU,2LLU),_234223e9b_Range16(65504LLU,65510LLU,1LLU),_234223e9b_Range16(65512LLU,65518LLU,1LLU),_234223e9b_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65847LLU,65855LLU,1LLU),_234223e9b_Range32(65913LLU,65929LLU,1LLU),_234223e9b_Range32(65932LLU,65934LLU,1LLU),_234223e9b_Range32(65936LLU,65948LLU,1LLU),_234223e9b_Range32(65952LLU,66000LLU,48LLU),_234223e9b_Range32(66001LLU,66044LLU,1LLU),_234223e9b_Range32(67703LLU,67704LLU,1LLU),_234223e9b_Range32(68296LLU,71487LLU,3191LLU),_234223e9b_Range32(73685LLU,73713LLU,1LLU),_234223e9b_Range32(92988LLU,92991LLU,1LLU),_234223e9b_Range32(92997LLU,113820LLU,20823LLU),_234223e9b_Range32(118608LLU,118723LLU,1LLU),_234223e9b_Range32(118784LLU,119029LLU,1LLU),_234223e9b_Range32(119040LLU,119078LLU,1LLU),_234223e9b_Range32(119081LLU,119140LLU,1LLU),_234223e9b_Range32(119146LLU,119148LLU,1LLU),_234223e9b_Range32(119171LLU,119172LLU,1LLU),_234223e9b_Range32(119180LLU,119209LLU,1LLU),_234223e9b_Range32(119214LLU,119274LLU,1LLU),_234223e9b_Range32(119296LLU,119361LLU,1LLU),_234223e9b_Range32(119365LLU,119552LLU,187LLU),_234223e9b_Range32(119553LLU,119638LLU,1LLU),_234223e9b_Range32(120513LLU,120539LLU,26LLU),_234223e9b_Range32(120571LLU,120597LLU,26LLU),_234223e9b_Range32(120629LLU,120655LLU,26LLU),_234223e9b_Range32(120687LLU,120713LLU,26LLU),_234223e9b_Range32(120745LLU,120771LLU,26LLU),_234223e9b_Range32(120832LLU,121343LLU,1LLU),_234223e9b_Range32(121399LLU,121402LLU,1LLU),_234223e9b_Range32(121453LLU,121460LLU,1LLU),_234223e9b_Range32(121462LLU,121475LLU,1LLU),_234223e9b_Range32(121477LLU,121478LLU,1LLU),_234223e9b_Range32(123215LLU,123647LLU,432LLU),_234223e9b_Range32(126124LLU,126128LLU,4LLU),_234223e9b_Range32(126254LLU,126704LLU,450LLU),_234223e9b_Range32(126705LLU,126976LLU,271LLU),_234223e9b_Range32(126977LLU,127019LLU,1LLU),_234223e9b_Range32(127024LLU,127123LLU,1LLU),_234223e9b_Range32(127136LLU,127150LLU,1LLU),_234223e9b_Range32(127153LLU,127167LLU,1LLU),_234223e9b_Range32(127169LLU,127183LLU,1LLU),_234223e9b_Range32(127185LLU,127221LLU,1LLU),_234223e9b_Range32(127245LLU,127405LLU,1LLU),_234223e9b_Range32(127462LLU,127490LLU,1LLU),_234223e9b_Range32(127504LLU,127547LLU,1LLU),_234223e9b_Range32(127552LLU,127560LLU,1LLU),_234223e9b_Range32(127568LLU,127569LLU,1LLU),_234223e9b_Range32(127584LLU,127589LLU,1LLU),_234223e9b_Range32(127744LLU,128727LLU,1LLU),_234223e9b_Range32(128732LLU,128748LLU,1LLU),_234223e9b_Range32(128752LLU,128764LLU,1LLU),_234223e9b_Range32(128768LLU,128886LLU,1LLU),_234223e9b_Range32(128891LLU,128985LLU,1LLU),_234223e9b_Range32(128992LLU,129003LLU,1LLU),_234223e9b_Range32(129008LLU,129024LLU,16LLU),_234223e9b_Range32(129025LLU,129035LLU,1LLU),_234223e9b_Range32(129040LLU,129095LLU,1LLU),_234223e9b_Range32(129104LLU,129113LLU,1LLU),_234223e9b_Range32(129120LLU,129159LLU,1LLU),_234223e9b_Range32(129168LLU,129197LLU,1LLU),_234223e9b_Range32(129200LLU,129201LLU,1LLU),_234223e9b_Range32(129280LLU,129619LLU,1LLU),_234223e9b_Range32(129632LLU,129645LLU,1LLU),_234223e9b_Range32(129648LLU,129660LLU,1LLU),_234223e9b_Range32(129664LLU,129672LLU,1LLU),_234223e9b_Range32(129680LLU,129725LLU,1LLU),_234223e9b_Range32(129727LLU,129733LLU,1LLU),_234223e9b_Range32(129742LLU,129755LLU,1LLU),_234223e9b_Range32(129760LLU,129768LLU,1LLU),_234223e9b_Range32(129776LLU,129784LLU,1LLU),_234223e9b_Range32(129792LLU,129938LLU,1LLU),_234223e9b_Range32(129940LLU,129994LLU,1LLU)}),10LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(36LLU,162LLU,126LLU),_234223e9b_Range16(163LLU,165LLU,1LLU),_234223e9b_Range16(1423LLU,1547LLU,124LLU),_234223e9b_Range16(2046LLU,2047LLU,1LLU),_234223e9b_Range16(2546LLU,2547LLU,1LLU),_234223e9b_Range16(2555LLU,2801LLU,246LLU),_234223e9b_Range16(3065LLU,3647LLU,582LLU),_234223e9b_Range16(6107LLU,8352LLU,2245LLU),_234223e9b_Range16(8353LLU,8384LLU,1LLU),_234223e9b_Range16(43064LLU,65020LLU,21956LLU),_234223e9b_Range16(65129LLU,65284LLU,155LLU),_234223e9b_Range16(65504LLU,65505LLU,1LLU),_234223e9b_Range16(65509LLU,65510LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73693LLU,73696LLU,1LLU),_234223e9b_Range32(123647LLU,126128LLU,2481LLU)}),2LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(94LLU,96LLU,2LLU),_234223e9b_Range16(168LLU,175LLU,7LLU),_234223e9b_Range16(180LLU,184LLU,4LLU),_234223e9b_Range16(706LLU,709LLU,1LLU),_234223e9b_Range16(722LLU,735LLU,1LLU),_234223e9b_Range16(741LLU,747LLU,1LLU),_234223e9b_Range16(749LLU,751LLU,2LLU),_234223e9b_Range16(752LLU,767LLU,1LLU),_234223e9b_Range16(885LLU,900LLU,15LLU),_234223e9b_Range16(901LLU,2184LLU,1283LLU),_234223e9b_Range16(8125LLU,8127LLU,2LLU),_234223e9b_Range16(8128LLU,8129LLU,1LLU),_234223e9b_Range16(8141LLU,8143LLU,1LLU),_234223e9b_Range16(8157LLU,8159LLU,1LLU),_234223e9b_Range16(8173LLU,8175LLU,1LLU),_234223e9b_Range16(8189LLU,8190LLU,1LLU),_234223e9b_Range16(12443LLU,12444LLU,1LLU),_234223e9b_Range16(42752LLU,42774LLU,1LLU),_234223e9b_Range16(42784LLU,42785LLU,1LLU),_234223e9b_Range16(42889LLU,42890LLU,1LLU),_234223e9b_Range16(43867LLU,43882LLU,15LLU),_234223e9b_Range16(43883LLU,64434LLU,20551LLU),_234223e9b_Range16(64435LLU,64450LLU,1LLU),_234223e9b_Range16(65342LLU,65344LLU,2LLU),_234223e9b_Range16(65507LLU,65507LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(127995LLU,127999LLU,1LLU)}),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43LLU,60LLU,17LLU),_234223e9b_Range16(61LLU,62LLU,1LLU),_234223e9b_Range16(124LLU,126LLU,2LLU),_234223e9b_Range16(172LLU,177LLU,5LLU),_234223e9b_Range16(215LLU,247LLU,32LLU),_234223e9b_Range16(1014LLU,1542LLU,528LLU),_234223e9b_Range16(1543LLU,1544LLU,1LLU),_234223e9b_Range16(8260LLU,8274LLU,14LLU),_234223e9b_Range16(8314LLU,8316LLU,1LLU),_234223e9b_Range16(8330LLU,8332LLU,1LLU),_234223e9b_Range16(8472LLU,8512LLU,40LLU),_234223e9b_Range16(8513LLU,8516LLU,1LLU),_234223e9b_Range16(8523LLU,8592LLU,69LLU),_234223e9b_Range16(8593LLU,8596LLU,1LLU),_234223e9b_Range16(8602LLU,8603LLU,1LLU),_234223e9b_Range16(8608LLU,8614LLU,3LLU),_234223e9b_Range16(8622LLU,8654LLU,32LLU),_234223e9b_Range16(8655LLU,8658LLU,3LLU),_234223e9b_Range16(8660LLU,8692LLU,32LLU),_234223e9b_Range16(8693LLU,8959LLU,1LLU),_234223e9b_Range16(8992LLU,8993LLU,1LLU),_234223e9b_Range16(9084LLU,9115LLU,31LLU),_234223e9b_Range16(9116LLU,9139LLU,1LLU),_234223e9b_Range16(9180LLU,9185LLU,1LLU),_234223e9b_Range16(9655LLU,9665LLU,10LLU),_234223e9b_Range16(9720LLU,9727LLU,1LLU),_234223e9b_Range16(9839LLU,10176LLU,337LLU),_234223e9b_Range16(10177LLU,10180LLU,1LLU),_234223e9b_Range16(10183LLU,10213LLU,1LLU),_234223e9b_Range16(10224LLU,10239LLU,1LLU),_234223e9b_Range16(10496LLU,10626LLU,1LLU),_234223e9b_Range16(10649LLU,10711LLU,1LLU),_234223e9b_Range16(10716LLU,10747LLU,1LLU),_234223e9b_Range16(10750LLU,11007LLU,1LLU),_234223e9b_Range16(11056LLU,11076LLU,1LLU),_234223e9b_Range16(11079LLU,11084LLU,1LLU),_234223e9b_Range16(64297LLU,65122LLU,825LLU),_234223e9b_Range16(65124LLU,65126LLU,1LLU),_234223e9b_Range16(65291LLU,65308LLU,17LLU),_234223e9b_Range16(65309LLU,65310LLU,1LLU),_234223e9b_Range16(65372LLU,65374LLU,2LLU),_234223e9b_Range16(65506LLU,65513LLU,7LLU),_234223e9b_Range16(65514LLU,65516LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(120513LLU,120539LLU,26LLU),_234223e9b_Range32(120571LLU,120597LLU,26LLU),_234223e9b_Range32(120629LLU,120655LLU,26LLU),_234223e9b_Range32(120687LLU,120713LLU,26LLU),_234223e9b_Range32(120745LLU,120771LLU,26LLU),_234223e9b_Range32(126704LLU,126705LLU,1LLU)}),5LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(166LLU,169LLU,3LLU),_234223e9b_Range16(174LLU,176LLU,2LLU),_234223e9b_Range16(1154LLU,1421LLU,267LLU),_234223e9b_Range16(1422LLU,1550LLU,128LLU),_234223e9b_Range16(1551LLU,1758LLU,207LLU),_234223e9b_Range16(1769LLU,1789LLU,20LLU),_234223e9b_Range16(1790LLU,2038LLU,248LLU),_234223e9b_Range16(2554LLU,2928LLU,374LLU),_234223e9b_Range16(3059LLU,3064LLU,1LLU),_234223e9b_Range16(3066LLU,3199LLU,133LLU),_234223e9b_Range16(3407LLU,3449LLU,42LLU),_234223e9b_Range16(3841LLU,3843LLU,1LLU),_234223e9b_Range16(3859LLU,3861LLU,2LLU),_234223e9b_Range16(3862LLU,3863LLU,1LLU),_234223e9b_Range16(3866LLU,3871LLU,1LLU),_234223e9b_Range16(3892LLU,3896LLU,2LLU),_234223e9b_Range16(4030LLU,4037LLU,1LLU),_234223e9b_Range16(4039LLU,4044LLU,1LLU),_234223e9b_Range16(4046LLU,4047LLU,1LLU),_234223e9b_Range16(4053LLU,4056LLU,1LLU),_234223e9b_Range16(4254LLU,4255LLU,1LLU),_234223e9b_Range16(5008LLU,5017LLU,1LLU),_234223e9b_Range16(5741LLU,6464LLU,723LLU),_234223e9b_Range16(6622LLU,6655LLU,1LLU),_234223e9b_Range16(7009LLU,7018LLU,1LLU),_234223e9b_Range16(7028LLU,7036LLU,1LLU),_234223e9b_Range16(8448LLU,8449LLU,1LLU),_234223e9b_Range16(8451LLU,8454LLU,1LLU),_234223e9b_Range16(8456LLU,8457LLU,1LLU),_234223e9b_Range16(8468LLU,8470LLU,2LLU),_234223e9b_Range16(8471LLU,8478LLU,7LLU),_234223e9b_Range16(8479LLU,8483LLU,1LLU),_234223e9b_Range16(8485LLU,8489LLU,2LLU),_234223e9b_Range16(8494LLU,8506LLU,12LLU),_234223e9b_Range16(8507LLU,8522LLU,15LLU),_234223e9b_Range16(8524LLU,8525LLU,1LLU),_234223e9b_Range16(8527LLU,8586LLU,59LLU),_234223e9b_Range16(8587LLU,8597LLU,10LLU),_234223e9b_Range16(8598LLU,8601LLU,1LLU),_234223e9b_Range16(8604LLU,8607LLU,1LLU),_234223e9b_Range16(8609LLU,8610LLU,1LLU),_234223e9b_Range16(8612LLU,8613LLU,1LLU),_234223e9b_Range16(8615LLU,8621LLU,1LLU),_234223e9b_Range16(8623LLU,8653LLU,1LLU),_234223e9b_Range16(8656LLU,8657LLU,1LLU),_234223e9b_Range16(8659LLU,8661LLU,2LLU),_234223e9b_Range16(8662LLU,8691LLU,1LLU),_234223e9b_Range16(8960LLU,8967LLU,1LLU),_234223e9b_Range16(8972LLU,8991LLU,1LLU),_234223e9b_Range16(8994LLU,9000LLU,1LLU),_234223e9b_Range16(9003LLU,9083LLU,1LLU),_234223e9b_Range16(9085LLU,9114LLU,1LLU),_234223e9b_Range16(9140LLU,9179LLU,1LLU),_234223e9b_Range16(9186LLU,9254LLU,1LLU),_234223e9b_Range16(9280LLU,9290LLU,1LLU),_234223e9b_Range16(9372LLU,9449LLU,1LLU),_234223e9b_Range16(9472LLU,9654LLU,1LLU),_234223e9b_Range16(9656LLU,9664LLU,1LLU),_234223e9b_Range16(9666LLU,9719LLU,1LLU),_234223e9b_Range16(9728LLU,9838LLU,1LLU),_234223e9b_Range16(9840LLU,10087LLU,1LLU),_234223e9b_Range16(10132LLU,10175LLU,1LLU),_234223e9b_Range16(10240LLU,10495LLU,1LLU),_234223e9b_Range16(11008LLU,11055LLU,1LLU),_234223e9b_Range16(11077LLU,11078LLU,1LLU),_234223e9b_Range16(11085LLU,11123LLU,1LLU),_234223e9b_Range16(11126LLU,11157LLU,1LLU),_234223e9b_Range16(11159LLU,11263LLU,1LLU),_234223e9b_Range16(11493LLU,11498LLU,1LLU),_234223e9b_Range16(11856LLU,11857LLU,1LLU),_234223e9b_Range16(11904LLU,11929LLU,1LLU),_234223e9b_Range16(11931LLU,12019LLU,1LLU),_234223e9b_Range16(12032LLU,12245LLU,1LLU),_234223e9b_Range16(12272LLU,12283LLU,1LLU),_234223e9b_Range16(12292LLU,12306LLU,14LLU),_234223e9b_Range16(12307LLU,12320LLU,13LLU),_234223e9b_Range16(12342LLU,12343LLU,1LLU),_234223e9b_Range16(12350LLU,12351LLU,1LLU),_234223e9b_Range16(12688LLU,12689LLU,1LLU),_234223e9b_Range16(12694LLU,12703LLU,1LLU),_234223e9b_Range16(12736LLU,12771LLU,1LLU),_234223e9b_Range16(12800LLU,12830LLU,1LLU),_234223e9b_Range16(12842LLU,12871LLU,1LLU),_234223e9b_Range16(12880LLU,12896LLU,16LLU),_234223e9b_Range16(12897LLU,12927LLU,1LLU),_234223e9b_Range16(12938LLU,12976LLU,1LLU),_234223e9b_Range16(12992LLU,13311LLU,1LLU),_234223e9b_Range16(19904LLU,19967LLU,1LLU),_234223e9b_Range16(42128LLU,42182LLU,1LLU),_234223e9b_Range16(43048LLU,43051LLU,1LLU),_234223e9b_Range16(43062LLU,43063LLU,1LLU),_234223e9b_Range16(43065LLU,43639LLU,574LLU),_234223e9b_Range16(43640LLU,43641LLU,1LLU),_234223e9b_Range16(64832LLU,64847LLU,1LLU),_234223e9b_Range16(64975LLU,65021LLU,46LLU),_234223e9b_Range16(65022LLU,65023LLU,1LLU),_234223e9b_Range16(65508LLU,65512LLU,4LLU),_234223e9b_Range16(65517LLU,65518LLU,1LLU),_234223e9b_Range16(65532LLU,65533LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65847LLU,65855LLU,1LLU),_234223e9b_Range32(65913LLU,65929LLU,1LLU),_234223e9b_Range32(65932LLU,65934LLU,1LLU),_234223e9b_Range32(65936LLU,65948LLU,1LLU),_234223e9b_Range32(65952LLU,66000LLU,48LLU),_234223e9b_Range32(66001LLU,66044LLU,1LLU),_234223e9b_Range32(67703LLU,67704LLU,1LLU),_234223e9b_Range32(68296LLU,71487LLU,3191LLU),_234223e9b_Range32(73685LLU,73692LLU,1LLU),_234223e9b_Range32(73697LLU,73713LLU,1LLU),_234223e9b_Range32(92988LLU,92991LLU,1LLU),_234223e9b_Range32(92997LLU,113820LLU,20823LLU),_234223e9b_Range32(118608LLU,118723LLU,1LLU),_234223e9b_Range32(118784LLU,119029LLU,1LLU),_234223e9b_Range32(119040LLU,119078LLU,1LLU),_234223e9b_Range32(119081LLU,119140LLU,1LLU),_234223e9b_Range32(119146LLU,119148LLU,1LLU),_234223e9b_Range32(119171LLU,119172LLU,1LLU),_234223e9b_Range32(119180LLU,119209LLU,1LLU),_234223e9b_Range32(119214LLU,119274LLU,1LLU),_234223e9b_Range32(119296LLU,119361LLU,1LLU),_234223e9b_Range32(119365LLU,119552LLU,187LLU),_234223e9b_Range32(119553LLU,119638LLU,1LLU),_234223e9b_Range32(120832LLU,121343LLU,1LLU),_234223e9b_Range32(121399LLU,121402LLU,1LLU),_234223e9b_Range32(121453LLU,121460LLU,1LLU),_234223e9b_Range32(121462LLU,121475LLU,1LLU),_234223e9b_Range32(121477LLU,121478LLU,1LLU),_234223e9b_Range32(123215LLU,126124LLU,2909LLU),_234223e9b_Range32(126254LLU,126976LLU,722LLU),_234223e9b_Range32(126977LLU,127019LLU,1LLU),_234223e9b_Range32(127024LLU,127123LLU,1LLU),_234223e9b_Range32(127136LLU,127150LLU,1LLU),_234223e9b_Range32(127153LLU,127167LLU,1LLU),_234223e9b_Range32(127169LLU,127183LLU,1LLU),_234223e9b_Range32(127185LLU,127221LLU,1LLU),_234223e9b_Range32(127245LLU,127405LLU,1LLU),_234223e9b_Range32(127462LLU,127490LLU,1LLU),_234223e9b_Range32(127504LLU,127547LLU,1LLU),_234223e9b_Range32(127552LLU,127560LLU,1LLU),_234223e9b_Range32(127568LLU,127569LLU,1LLU),_234223e9b_Range32(127584LLU,127589LLU,1LLU),_234223e9b_Range32(127744LLU,127994LLU,1LLU),_234223e9b_Range32(128000LLU,128727LLU,1LLU),_234223e9b_Range32(128732LLU,128748LLU,1LLU),_234223e9b_Range32(128752LLU,128764LLU,1LLU),_234223e9b_Range32(128768LLU,128886LLU,1LLU),_234223e9b_Range32(128891LLU,128985LLU,1LLU),_234223e9b_Range32(128992LLU,129003LLU,1LLU),_234223e9b_Range32(129008LLU,129024LLU,16LLU),_234223e9b_Range32(129025LLU,129035LLU,1LLU),_234223e9b_Range32(129040LLU,129095LLU,1LLU),_234223e9b_Range32(129104LLU,129113LLU,1LLU),_234223e9b_Range32(129120LLU,129159LLU,1LLU),_234223e9b_Range32(129168LLU,129197LLU,1LLU),_234223e9b_Range32(129200LLU,129201LLU,1LLU),_234223e9b_Range32(129280LLU,129619LLU,1LLU),_234223e9b_Range32(129632LLU,129645LLU,1LLU),_234223e9b_Range32(129648LLU,129660LLU,1LLU),_234223e9b_Range32(129664LLU,129672LLU,1LLU),_234223e9b_Range32(129680LLU,129725LLU,1LLU),_234223e9b_Range32(129727LLU,129733LLU,1LLU),_234223e9b_Range32(129742LLU,129755LLU,1LLU),_234223e9b_Range32(129760LLU,129768LLU,1LLU),_234223e9b_Range32(129776LLU,129784LLU,1LLU),_234223e9b_Range32(129792LLU,129938LLU,1LLU),_234223e9b_Range32(129940LLU,129994LLU,1LLU)}),2LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__Z = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(32LLU,160LLU,128LLU),_234223e9b_Range16(5760LLU,8192LLU,2432LLU),_234223e9b_Range16(8193LLU,8202LLU,1LLU),_234223e9b_Range16(8232LLU,8233LLU,1LLU),_234223e9b_Range16(8239LLU,8287LLU,48LLU),_234223e9b_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ZL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(8232LLU,8232LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ZP = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(8233LLU,8233LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ZS = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(32LLU,160LLU,128LLU),_234223e9b_Range16(5760LLU,8192LLU,2432LLU),_234223e9b_Range16(8193LLU,8202LLU,1LLU),_234223e9b_Range16(8239LLU,8287LLU,48LLU),_234223e9b_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ADLAM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(125184LLU,125259LLU,1LLU),_234223e9b_Range32(125264LLU,125273LLU,1LLU),_234223e9b_Range32(125278LLU,125279LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__AHOM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71424LLU,71450LLU,1LLU),_234223e9b_Range32(71453LLU,71467LLU,1LLU),_234223e9b_Range32(71472LLU,71494LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ANATOLIAN_HIEROGLYPHS = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(82944LLU,83526LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ARABIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1536LLU,1540LLU,1LLU),_234223e9b_Range16(1542LLU,1547LLU,1LLU),_234223e9b_Range16(1549LLU,1562LLU,1LLU),_234223e9b_Range16(1564LLU,1566LLU,1LLU),_234223e9b_Range16(1568LLU,1599LLU,1LLU),_234223e9b_Range16(1601LLU,1610LLU,1LLU),_234223e9b_Range16(1622LLU,1647LLU,1LLU),_234223e9b_Range16(1649LLU,1756LLU,1LLU),_234223e9b_Range16(1758LLU,1791LLU,1LLU),_234223e9b_Range16(1872LLU,1919LLU,1LLU),_234223e9b_Range16(2160LLU,2190LLU,1LLU),_234223e9b_Range16(2192LLU,2193LLU,1LLU),_234223e9b_Range16(2200LLU,2273LLU,1LLU),_234223e9b_Range16(2275LLU,2303LLU,1LLU),_234223e9b_Range16(64336LLU,64450LLU,1LLU),_234223e9b_Range16(64467LLU,64829LLU,1LLU),_234223e9b_Range16(64832LLU,64911LLU,1LLU),_234223e9b_Range16(64914LLU,64967LLU,1LLU),_234223e9b_Range16(64975LLU,65008LLU,33LLU),_234223e9b_Range16(65009LLU,65023LLU,1LLU),_234223e9b_Range16(65136LLU,65140LLU,1LLU),_234223e9b_Range16(65142LLU,65276LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69216LLU,69246LLU,1LLU),_234223e9b_Range32(69373LLU,69375LLU,1LLU),_234223e9b_Range32(126464LLU,126467LLU,1LLU),_234223e9b_Range32(126469LLU,126495LLU,1LLU),_234223e9b_Range32(126497LLU,126498LLU,1LLU),_234223e9b_Range32(126500LLU,126503LLU,3LLU),_234223e9b_Range32(126505LLU,126514LLU,1LLU),_234223e9b_Range32(126516LLU,126519LLU,1LLU),_234223e9b_Range32(126521LLU,126523LLU,2LLU),_234223e9b_Range32(126530LLU,126535LLU,5LLU),_234223e9b_Range32(126537LLU,126541LLU,2LLU),_234223e9b_Range32(126542LLU,126543LLU,1LLU),_234223e9b_Range32(126545LLU,126546LLU,1LLU),_234223e9b_Range32(126548LLU,126551LLU,3LLU),_234223e9b_Range32(126553LLU,126561LLU,2LLU),_234223e9b_Range32(126562LLU,126564LLU,2LLU),_234223e9b_Range32(126567LLU,126570LLU,1LLU),_234223e9b_Range32(126572LLU,126578LLU,1LLU),_234223e9b_Range32(126580LLU,126583LLU,1LLU),_234223e9b_Range32(126585LLU,126588LLU,1LLU),_234223e9b_Range32(126590LLU,126592LLU,2LLU),_234223e9b_Range32(126593LLU,126601LLU,1LLU),_234223e9b_Range32(126603LLU,126619LLU,1LLU),_234223e9b_Range32(126625LLU,126627LLU,1LLU),_234223e9b_Range32(126629LLU,126633LLU,1LLU),_234223e9b_Range32(126635LLU,126651LLU,1LLU),_234223e9b_Range32(126704LLU,126705LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ARMENIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1329LLU,1366LLU,1LLU),_234223e9b_Range16(1369LLU,1418LLU,1LLU),_234223e9b_Range16(1421LLU,1423LLU,1LLU),_234223e9b_Range16(64275LLU,64279LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__AVESTAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68352LLU,68405LLU,1LLU),_234223e9b_Range32(68409LLU,68415LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BALINESE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6912LLU,6988LLU,1LLU),_234223e9b_Range16(6992LLU,7038LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BAMUM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(42656LLU,42743LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(92160LLU,92728LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BASSA_VAH = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(92880LLU,92909LLU,1LLU),_234223e9b_Range32(92912LLU,92917LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BATAK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(7104LLU,7155LLU,1LLU),_234223e9b_Range16(7164LLU,7167LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BENGALI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2432LLU,2435LLU,1LLU),_234223e9b_Range16(2437LLU,2444LLU,1LLU),_234223e9b_Range16(2447LLU,2448LLU,1LLU),_234223e9b_Range16(2451LLU,2472LLU,1LLU),_234223e9b_Range16(2474LLU,2480LLU,1LLU),_234223e9b_Range16(2482LLU,2486LLU,4LLU),_234223e9b_Range16(2487LLU,2489LLU,1LLU),_234223e9b_Range16(2492LLU,2500LLU,1LLU),_234223e9b_Range16(2503LLU,2504LLU,1LLU),_234223e9b_Range16(2507LLU,2510LLU,1LLU),_234223e9b_Range16(2519LLU,2524LLU,5LLU),_234223e9b_Range16(2525LLU,2527LLU,2LLU),_234223e9b_Range16(2528LLU,2531LLU,1LLU),_234223e9b_Range16(2534LLU,2558LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BHAIKSUKI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72704LLU,72712LLU,1LLU),_234223e9b_Range32(72714LLU,72758LLU,1LLU),_234223e9b_Range32(72760LLU,72773LLU,1LLU),_234223e9b_Range32(72784LLU,72812LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BOPOMOFO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(746LLU,747LLU,1LLU),_234223e9b_Range16(12549LLU,12591LLU,1LLU),_234223e9b_Range16(12704LLU,12735LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BRAHMI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69632LLU,69709LLU,1LLU),_234223e9b_Range32(69714LLU,69749LLU,1LLU),_234223e9b_Range32(69759LLU,69759LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BRAILLE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(10240LLU,10495LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BUGINESE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6656LLU,6683LLU,1LLU),_234223e9b_Range16(6686LLU,6687LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BUHID = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5952LLU,5971LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CANADIAN_ABORIGINAL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5120LLU,5759LLU,1LLU),_234223e9b_Range16(6320LLU,6389LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72368LLU,72383LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CARIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66208LLU,66256LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CAUCASIAN_ALBANIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66864LLU,66915LLU,1LLU),_234223e9b_Range32(66927LLU,66927LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CHAKMA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69888LLU,69940LLU,1LLU),_234223e9b_Range32(69942LLU,69959LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CHAM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43520LLU,43574LLU,1LLU),_234223e9b_Range16(43584LLU,43597LLU,1LLU),_234223e9b_Range16(43600LLU,43609LLU,1LLU),_234223e9b_Range16(43612LLU,43615LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CHEROKEE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5024LLU,5109LLU,1LLU),_234223e9b_Range16(5112LLU,5117LLU,1LLU),_234223e9b_Range16(43888LLU,43967LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CHORASMIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69552LLU,69579LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__COMMON = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(0LLU,64LLU,1LLU),_234223e9b_Range16(91LLU,96LLU,1LLU),_234223e9b_Range16(123LLU,169LLU,1LLU),_234223e9b_Range16(171LLU,185LLU,1LLU),_234223e9b_Range16(187LLU,191LLU,1LLU),_234223e9b_Range16(215LLU,247LLU,32LLU),_234223e9b_Range16(697LLU,735LLU,1LLU),_234223e9b_Range16(741LLU,745LLU,1LLU),_234223e9b_Range16(748LLU,767LLU,1LLU),_234223e9b_Range16(884LLU,894LLU,10LLU),_234223e9b_Range16(901LLU,903LLU,2LLU),_234223e9b_Range16(1541LLU,1548LLU,7LLU),_234223e9b_Range16(1563LLU,1567LLU,4LLU),_234223e9b_Range16(1600LLU,1757LLU,157LLU),_234223e9b_Range16(2274LLU,2404LLU,130LLU),_234223e9b_Range16(2405LLU,3647LLU,1242LLU),_234223e9b_Range16(4053LLU,4056LLU,1LLU),_234223e9b_Range16(4347LLU,5867LLU,1520LLU),_234223e9b_Range16(5868LLU,5869LLU,1LLU),_234223e9b_Range16(5941LLU,5942LLU,1LLU),_234223e9b_Range16(6146LLU,6147LLU,1LLU),_234223e9b_Range16(6149LLU,7379LLU,1230LLU),_234223e9b_Range16(7393LLU,7401LLU,8LLU),_234223e9b_Range16(7402LLU,7404LLU,1LLU),_234223e9b_Range16(7406LLU,7411LLU,1LLU),_234223e9b_Range16(7413LLU,7415LLU,1LLU),_234223e9b_Range16(7418LLU,8192LLU,774LLU),_234223e9b_Range16(8193LLU,8203LLU,1LLU),_234223e9b_Range16(8206LLU,8292LLU,1LLU),_234223e9b_Range16(8294LLU,8304LLU,1LLU),_234223e9b_Range16(8308LLU,8318LLU,1LLU),_234223e9b_Range16(8320LLU,8334LLU,1LLU),_234223e9b_Range16(8352LLU,8384LLU,1LLU),_234223e9b_Range16(8448LLU,8485LLU,1LLU),_234223e9b_Range16(8487LLU,8489LLU,1LLU),_234223e9b_Range16(8492LLU,8497LLU,1LLU),_234223e9b_Range16(8499LLU,8525LLU,1LLU),_234223e9b_Range16(8527LLU,8543LLU,1LLU),_234223e9b_Range16(8585LLU,8587LLU,1LLU),_234223e9b_Range16(8592LLU,9254LLU,1LLU),_234223e9b_Range16(9280LLU,9290LLU,1LLU),_234223e9b_Range16(9312LLU,10239LLU,1LLU),_234223e9b_Range16(10496LLU,11123LLU,1LLU),_234223e9b_Range16(11126LLU,11157LLU,1LLU),_234223e9b_Range16(11159LLU,11263LLU,1LLU),_234223e9b_Range16(11776LLU,11869LLU,1LLU),_234223e9b_Range16(12272LLU,12283LLU,1LLU),_234223e9b_Range16(12288LLU,12292LLU,1LLU),_234223e9b_Range16(12294LLU,12296LLU,2LLU),_234223e9b_Range16(12297LLU,12320LLU,1LLU),_234223e9b_Range16(12336LLU,12343LLU,1LLU),_234223e9b_Range16(12348LLU,12351LLU,1LLU),_234223e9b_Range16(12443LLU,12444LLU,1LLU),_234223e9b_Range16(12448LLU,12539LLU,91LLU),_234223e9b_Range16(12540LLU,12688LLU,148LLU),_234223e9b_Range16(12689LLU,12703LLU,1LLU),_234223e9b_Range16(12736LLU,12771LLU,1LLU),_234223e9b_Range16(12832LLU,12895LLU,1LLU),_234223e9b_Range16(12927LLU,13007LLU,1LLU),_234223e9b_Range16(13055LLU,13144LLU,89LLU),_234223e9b_Range16(13145LLU,13311LLU,1LLU),_234223e9b_Range16(19904LLU,19967LLU,1LLU),_234223e9b_Range16(42752LLU,42785LLU,1LLU),_234223e9b_Range16(42888LLU,42890LLU,1LLU),_234223e9b_Range16(43056LLU,43065LLU,1LLU),_234223e9b_Range16(43310LLU,43471LLU,161LLU),_234223e9b_Range16(43867LLU,43882LLU,15LLU),_234223e9b_Range16(43883LLU,64830LLU,20947LLU),_234223e9b_Range16(64831LLU,65040LLU,209LLU),_234223e9b_Range16(65041LLU,65049LLU,1LLU),_234223e9b_Range16(65072LLU,65106LLU,1LLU),_234223e9b_Range16(65108LLU,65126LLU,1LLU),_234223e9b_Range16(65128LLU,65131LLU,1LLU),_234223e9b_Range16(65279LLU,65281LLU,2LLU),_234223e9b_Range16(65282LLU,65312LLU,1LLU),_234223e9b_Range16(65339LLU,65344LLU,1LLU),_234223e9b_Range16(65371LLU,65381LLU,1LLU),_234223e9b_Range16(65392LLU,65438LLU,46LLU),_234223e9b_Range16(65439LLU,65504LLU,65LLU),_234223e9b_Range16(65505LLU,65510LLU,1LLU),_234223e9b_Range16(65512LLU,65518LLU,1LLU),_234223e9b_Range16(65529LLU,65533LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65792LLU,65794LLU,1LLU),_234223e9b_Range32(65799LLU,65843LLU,1LLU),_234223e9b_Range32(65847LLU,65855LLU,1LLU),_234223e9b_Range32(65936LLU,65948LLU,1LLU),_234223e9b_Range32(66000LLU,66044LLU,1LLU),_234223e9b_Range32(66273LLU,66299LLU,1LLU),_234223e9b_Range32(113824LLU,113827LLU,1LLU),_234223e9b_Range32(118608LLU,118723LLU,1LLU),_234223e9b_Range32(118784LLU,119029LLU,1LLU),_234223e9b_Range32(119040LLU,119078LLU,1LLU),_234223e9b_Range32(119081LLU,119142LLU,1LLU),_234223e9b_Range32(119146LLU,119162LLU,1LLU),_234223e9b_Range32(119171LLU,119172LLU,1LLU),_234223e9b_Range32(119180LLU,119209LLU,1LLU),_234223e9b_Range32(119214LLU,119274LLU,1LLU),_234223e9b_Range32(119488LLU,119507LLU,1LLU),_234223e9b_Range32(119520LLU,119539LLU,1LLU),_234223e9b_Range32(119552LLU,119638LLU,1LLU),_234223e9b_Range32(119648LLU,119672LLU,1LLU),_234223e9b_Range32(119808LLU,119892LLU,1LLU),_234223e9b_Range32(119894LLU,119964LLU,1LLU),_234223e9b_Range32(119966LLU,119967LLU,1LLU),_234223e9b_Range32(119970LLU,119973LLU,3LLU),_234223e9b_Range32(119974LLU,119977LLU,3LLU),_234223e9b_Range32(119978LLU,119980LLU,1LLU),_234223e9b_Range32(119982LLU,119993LLU,1LLU),_234223e9b_Range32(119995LLU,119997LLU,2LLU),_234223e9b_Range32(119998LLU,120003LLU,1LLU),_234223e9b_Range32(120005LLU,120069LLU,1LLU),_234223e9b_Range32(120071LLU,120074LLU,1LLU),_234223e9b_Range32(120077LLU,120084LLU,1LLU),_234223e9b_Range32(120086LLU,120092LLU,1LLU),_234223e9b_Range32(120094LLU,120121LLU,1LLU),_234223e9b_Range32(120123LLU,120126LLU,1LLU),_234223e9b_Range32(120128LLU,120132LLU,1LLU),_234223e9b_Range32(120134LLU,120138LLU,4LLU),_234223e9b_Range32(120139LLU,120144LLU,1LLU),_234223e9b_Range32(120146LLU,120485LLU,1LLU),_234223e9b_Range32(120488LLU,120779LLU,1LLU),_234223e9b_Range32(120782LLU,120831LLU,1LLU),_234223e9b_Range32(126065LLU,126132LLU,1LLU),_234223e9b_Range32(126209LLU,126269LLU,1LLU),_234223e9b_Range32(126976LLU,127019LLU,1LLU),_234223e9b_Range32(127024LLU,127123LLU,1LLU),_234223e9b_Range32(127136LLU,127150LLU,1LLU),_234223e9b_Range32(127153LLU,127167LLU,1LLU),_234223e9b_Range32(127169LLU,127183LLU,1LLU),_234223e9b_Range32(127185LLU,127221LLU,1LLU),_234223e9b_Range32(127232LLU,127405LLU,1LLU),_234223e9b_Range32(127462LLU,127487LLU,1LLU),_234223e9b_Range32(127489LLU,127490LLU,1LLU),_234223e9b_Range32(127504LLU,127547LLU,1LLU),_234223e9b_Range32(127552LLU,127560LLU,1LLU),_234223e9b_Range32(127568LLU,127569LLU,1LLU),_234223e9b_Range32(127584LLU,127589LLU,1LLU),_234223e9b_Range32(127744LLU,128727LLU,1LLU),_234223e9b_Range32(128732LLU,128748LLU,1LLU),_234223e9b_Range32(128752LLU,128764LLU,1LLU),_234223e9b_Range32(128768LLU,128886LLU,1LLU),_234223e9b_Range32(128891LLU,128985LLU,1LLU),_234223e9b_Range32(128992LLU,129003LLU,1LLU),_234223e9b_Range32(129008LLU,129024LLU,16LLU),_234223e9b_Range32(129025LLU,129035LLU,1LLU),_234223e9b_Range32(129040LLU,129095LLU,1LLU),_234223e9b_Range32(129104LLU,129113LLU,1LLU),_234223e9b_Range32(129120LLU,129159LLU,1LLU),_234223e9b_Range32(129168LLU,129197LLU,1LLU),_234223e9b_Range32(129200LLU,129201LLU,1LLU),_234223e9b_Range32(129280LLU,129619LLU,1LLU),_234223e9b_Range32(129632LLU,129645LLU,1LLU),_234223e9b_Range32(129648LLU,129660LLU,1LLU),_234223e9b_Range32(129664LLU,129672LLU,1LLU),_234223e9b_Range32(129680LLU,129725LLU,1LLU),_234223e9b_Range32(129727LLU,129733LLU,1LLU),_234223e9b_Range32(129742LLU,129755LLU,1LLU),_234223e9b_Range32(129760LLU,129768LLU,1LLU),_234223e9b_Range32(129776LLU,129784LLU,1LLU),_234223e9b_Range32(129792LLU,129938LLU,1LLU),_234223e9b_Range32(129940LLU,129994LLU,1LLU),_234223e9b_Range32(130032LLU,130041LLU,1LLU),_234223e9b_Range32(917505LLU,917536LLU,31LLU),_234223e9b_Range32(917537LLU,917631LLU,1LLU)}),6LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__COPTIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(994LLU,1007LLU,1LLU),_234223e9b_Range16(11392LLU,11507LLU,1LLU),_234223e9b_Range16(11513LLU,11519LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CUNEIFORM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73728LLU,74649LLU,1LLU),_234223e9b_Range32(74752LLU,74862LLU,1LLU),_234223e9b_Range32(74864LLU,74868LLU,1LLU),_234223e9b_Range32(74880LLU,75075LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CYPRIOT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67584LLU,67589LLU,1LLU),_234223e9b_Range32(67592LLU,67594LLU,2LLU),_234223e9b_Range32(67595LLU,67637LLU,1LLU),_234223e9b_Range32(67639LLU,67640LLU,1LLU),_234223e9b_Range32(67644LLU,67647LLU,3LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CYPRO_MINOAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(77712LLU,77810LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__CYRILLIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1024LLU,1156LLU,1LLU),_234223e9b_Range16(1159LLU,1327LLU,1LLU),_234223e9b_Range16(7296LLU,7304LLU,1LLU),_234223e9b_Range16(7467LLU,7544LLU,77LLU),_234223e9b_Range16(11744LLU,11775LLU,1LLU),_234223e9b_Range16(42560LLU,42655LLU,1LLU),_234223e9b_Range16(65070LLU,65071LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(122928LLU,122989LLU,1LLU),_234223e9b_Range32(123023LLU,123023LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DESERET = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66560LLU,66639LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DEVANAGARI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2304LLU,2384LLU,1LLU),_234223e9b_Range16(2389LLU,2403LLU,1LLU),_234223e9b_Range16(2406LLU,2431LLU,1LLU),_234223e9b_Range16(43232LLU,43263LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72448LLU,72457LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DIVES_AKURU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71936LLU,71942LLU,1LLU),_234223e9b_Range32(71945LLU,71948LLU,3LLU),_234223e9b_Range32(71949LLU,71955LLU,1LLU),_234223e9b_Range32(71957LLU,71958LLU,1LLU),_234223e9b_Range32(71960LLU,71989LLU,1LLU),_234223e9b_Range32(71991LLU,71992LLU,1LLU),_234223e9b_Range32(71995LLU,72006LLU,1LLU),_234223e9b_Range32(72016LLU,72025LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DOGRA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71680LLU,71739LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DUPLOYAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(113664LLU,113770LLU,1LLU),_234223e9b_Range32(113776LLU,113788LLU,1LLU),_234223e9b_Range32(113792LLU,113800LLU,1LLU),_234223e9b_Range32(113808LLU,113817LLU,1LLU),_234223e9b_Range32(113820LLU,113823LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__EGYPTIAN_HIEROGLYPHS = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(77824LLU,78933LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ELBASAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66816LLU,66855LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ELYMAIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69600LLU,69622LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ETHIOPIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(4608LLU,4680LLU,1LLU),_234223e9b_Range16(4682LLU,4685LLU,1LLU),_234223e9b_Range16(4688LLU,4694LLU,1LLU),_234223e9b_Range16(4696LLU,4698LLU,2LLU),_234223e9b_Range16(4699LLU,4701LLU,1LLU),_234223e9b_Range16(4704LLU,4744LLU,1LLU),_234223e9b_Range16(4746LLU,4749LLU,1LLU),_234223e9b_Range16(4752LLU,4784LLU,1LLU),_234223e9b_Range16(4786LLU,4789LLU,1LLU),_234223e9b_Range16(4792LLU,4798LLU,1LLU),_234223e9b_Range16(4800LLU,4802LLU,2LLU),_234223e9b_Range16(4803LLU,4805LLU,1LLU),_234223e9b_Range16(4808LLU,4822LLU,1LLU),_234223e9b_Range16(4824LLU,4880LLU,1LLU),_234223e9b_Range16(4882LLU,4885LLU,1LLU),_234223e9b_Range16(4888LLU,4954LLU,1LLU),_234223e9b_Range16(4957LLU,4988LLU,1LLU),_234223e9b_Range16(4992LLU,5017LLU,1LLU),_234223e9b_Range16(11648LLU,11670LLU,1LLU),_234223e9b_Range16(11680LLU,11686LLU,1LLU),_234223e9b_Range16(11688LLU,11694LLU,1LLU),_234223e9b_Range16(11696LLU,11702LLU,1LLU),_234223e9b_Range16(11704LLU,11710LLU,1LLU),_234223e9b_Range16(11712LLU,11718LLU,1LLU),_234223e9b_Range16(11720LLU,11726LLU,1LLU),_234223e9b_Range16(11728LLU,11734LLU,1LLU),_234223e9b_Range16(11736LLU,11742LLU,1LLU),_234223e9b_Range16(43777LLU,43782LLU,1LLU),_234223e9b_Range16(43785LLU,43790LLU,1LLU),_234223e9b_Range16(43793LLU,43798LLU,1LLU),_234223e9b_Range16(43808LLU,43814LLU,1LLU),_234223e9b_Range16(43816LLU,43822LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(124896LLU,124902LLU,1LLU),_234223e9b_Range32(124904LLU,124907LLU,1LLU),_234223e9b_Range32(124909LLU,124910LLU,1LLU),_234223e9b_Range32(124912LLU,124926LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GEORGIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(4256LLU,4293LLU,1LLU),_234223e9b_Range16(4295LLU,4301LLU,6LLU),_234223e9b_Range16(4304LLU,4346LLU,1LLU),_234223e9b_Range16(4348LLU,4351LLU,1LLU),_234223e9b_Range16(7312LLU,7354LLU,1LLU),_234223e9b_Range16(7357LLU,7359LLU,1LLU),_234223e9b_Range16(11520LLU,11557LLU,1LLU),_234223e9b_Range16(11559LLU,11565LLU,6LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GLAGOLITIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(11264LLU,11359LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(122880LLU,122886LLU,1LLU),_234223e9b_Range32(122888LLU,122904LLU,1LLU),_234223e9b_Range32(122907LLU,122913LLU,1LLU),_234223e9b_Range32(122915LLU,122916LLU,1LLU),_234223e9b_Range32(122918LLU,122922LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GOTHIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66352LLU,66378LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GRANTHA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70400LLU,70403LLU,1LLU),_234223e9b_Range32(70405LLU,70412LLU,1LLU),_234223e9b_Range32(70415LLU,70416LLU,1LLU),_234223e9b_Range32(70419LLU,70440LLU,1LLU),_234223e9b_Range32(70442LLU,70448LLU,1LLU),_234223e9b_Range32(70450LLU,70451LLU,1LLU),_234223e9b_Range32(70453LLU,70457LLU,1LLU),_234223e9b_Range32(70460LLU,70468LLU,1LLU),_234223e9b_Range32(70471LLU,70472LLU,1LLU),_234223e9b_Range32(70475LLU,70477LLU,1LLU),_234223e9b_Range32(70480LLU,70487LLU,7LLU),_234223e9b_Range32(70493LLU,70499LLU,1LLU),_234223e9b_Range32(70502LLU,70508LLU,1LLU),_234223e9b_Range32(70512LLU,70516LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GREEK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(880LLU,883LLU,1LLU),_234223e9b_Range16(885LLU,887LLU,1LLU),_234223e9b_Range16(890LLU,893LLU,1LLU),_234223e9b_Range16(895LLU,900LLU,5LLU),_234223e9b_Range16(902LLU,904LLU,2LLU),_234223e9b_Range16(905LLU,906LLU,1LLU),_234223e9b_Range16(908LLU,910LLU,2LLU),_234223e9b_Range16(911LLU,929LLU,1LLU),_234223e9b_Range16(931LLU,993LLU,1LLU),_234223e9b_Range16(1008LLU,1023LLU,1LLU),_234223e9b_Range16(7462LLU,7466LLU,1LLU),_234223e9b_Range16(7517LLU,7521LLU,1LLU),_234223e9b_Range16(7526LLU,7530LLU,1LLU),_234223e9b_Range16(7615LLU,7936LLU,321LLU),_234223e9b_Range16(7937LLU,7957LLU,1LLU),_234223e9b_Range16(7960LLU,7965LLU,1LLU),_234223e9b_Range16(7968LLU,8005LLU,1LLU),_234223e9b_Range16(8008LLU,8013LLU,1LLU),_234223e9b_Range16(8016LLU,8023LLU,1LLU),_234223e9b_Range16(8025LLU,8031LLU,2LLU),_234223e9b_Range16(8032LLU,8061LLU,1LLU),_234223e9b_Range16(8064LLU,8116LLU,1LLU),_234223e9b_Range16(8118LLU,8132LLU,1LLU),_234223e9b_Range16(8134LLU,8147LLU,1LLU),_234223e9b_Range16(8150LLU,8155LLU,1LLU),_234223e9b_Range16(8157LLU,8175LLU,1LLU),_234223e9b_Range16(8178LLU,8180LLU,1LLU),_234223e9b_Range16(8182LLU,8190LLU,1LLU),_234223e9b_Range16(8486LLU,43877LLU,35391LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65856LLU,65934LLU,1LLU),_234223e9b_Range32(65952LLU,119296LLU,53344LLU),_234223e9b_Range32(119297LLU,119365LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GUJARATI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2689LLU,2691LLU,1LLU),_234223e9b_Range16(2693LLU,2701LLU,1LLU),_234223e9b_Range16(2703LLU,2705LLU,1LLU),_234223e9b_Range16(2707LLU,2728LLU,1LLU),_234223e9b_Range16(2730LLU,2736LLU,1LLU),_234223e9b_Range16(2738LLU,2739LLU,1LLU),_234223e9b_Range16(2741LLU,2745LLU,1LLU),_234223e9b_Range16(2748LLU,2757LLU,1LLU),_234223e9b_Range16(2759LLU,2761LLU,1LLU),_234223e9b_Range16(2763LLU,2765LLU,1LLU),_234223e9b_Range16(2768LLU,2784LLU,16LLU),_234223e9b_Range16(2785LLU,2787LLU,1LLU),_234223e9b_Range16(2790LLU,2801LLU,1LLU),_234223e9b_Range16(2809LLU,2815LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GUNJALA_GONDI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73056LLU,73061LLU,1LLU),_234223e9b_Range32(73063LLU,73064LLU,1LLU),_234223e9b_Range32(73066LLU,73102LLU,1LLU),_234223e9b_Range32(73104LLU,73105LLU,1LLU),_234223e9b_Range32(73107LLU,73112LLU,1LLU),_234223e9b_Range32(73120LLU,73129LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__GURMUKHI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2561LLU,2563LLU,1LLU),_234223e9b_Range16(2565LLU,2570LLU,1LLU),_234223e9b_Range16(2575LLU,2576LLU,1LLU),_234223e9b_Range16(2579LLU,2600LLU,1LLU),_234223e9b_Range16(2602LLU,2608LLU,1LLU),_234223e9b_Range16(2610LLU,2611LLU,1LLU),_234223e9b_Range16(2613LLU,2614LLU,1LLU),_234223e9b_Range16(2616LLU,2617LLU,1LLU),_234223e9b_Range16(2620LLU,2622LLU,2LLU),_234223e9b_Range16(2623LLU,2626LLU,1LLU),_234223e9b_Range16(2631LLU,2632LLU,1LLU),_234223e9b_Range16(2635LLU,2637LLU,1LLU),_234223e9b_Range16(2641LLU,2649LLU,8LLU),_234223e9b_Range16(2650LLU,2652LLU,1LLU),_234223e9b_Range16(2654LLU,2662LLU,8LLU),_234223e9b_Range16(2663LLU,2678LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(11904LLU,11929LLU,1LLU),_234223e9b_Range16(11931LLU,12019LLU,1LLU),_234223e9b_Range16(12032LLU,12245LLU,1LLU),_234223e9b_Range16(12293LLU,12295LLU,2LLU),_234223e9b_Range16(12321LLU,12329LLU,1LLU),_234223e9b_Range16(12344LLU,12347LLU,1LLU),_234223e9b_Range16(13312LLU,19903LLU,1LLU),_234223e9b_Range16(19968LLU,40959LLU,1LLU),_234223e9b_Range16(63744LLU,64109LLU,1LLU),_234223e9b_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(94178LLU,94179LLU,1LLU),_234223e9b_Range32(94192LLU,94193LLU,1LLU),_234223e9b_Range32(131072LLU,173791LLU,1LLU),_234223e9b_Range32(173824LLU,177977LLU,1LLU),_234223e9b_Range32(177984LLU,178205LLU,1LLU),_234223e9b_Range32(178208LLU,183969LLU,1LLU),_234223e9b_Range32(183984LLU,191456LLU,1LLU),_234223e9b_Range32(194560LLU,195101LLU,1LLU),_234223e9b_Range32(196608LLU,201546LLU,1LLU),_234223e9b_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HANGUL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(4352LLU,4607LLU,1LLU),_234223e9b_Range16(12334LLU,12335LLU,1LLU),_234223e9b_Range16(12593LLU,12686LLU,1LLU),_234223e9b_Range16(12800LLU,12830LLU,1LLU),_234223e9b_Range16(12896LLU,12926LLU,1LLU),_234223e9b_Range16(43360LLU,43388LLU,1LLU),_234223e9b_Range16(44032LLU,55203LLU,1LLU),_234223e9b_Range16(55216LLU,55238LLU,1LLU),_234223e9b_Range16(55243LLU,55291LLU,1LLU),_234223e9b_Range16(65440LLU,65470LLU,1LLU),_234223e9b_Range16(65474LLU,65479LLU,1LLU),_234223e9b_Range16(65482LLU,65487LLU,1LLU),_234223e9b_Range16(65490LLU,65495LLU,1LLU),_234223e9b_Range16(65498LLU,65500LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HANIFI_ROHINGYA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68864LLU,68903LLU,1LLU),_234223e9b_Range32(68912LLU,68921LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HANUNOO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5920LLU,5940LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HATRAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67808LLU,67826LLU,1LLU),_234223e9b_Range32(67828LLU,67829LLU,1LLU),_234223e9b_Range32(67835LLU,67839LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HEBREW = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1425LLU,1479LLU,1LLU),_234223e9b_Range16(1488LLU,1514LLU,1LLU),_234223e9b_Range16(1519LLU,1524LLU,1LLU),_234223e9b_Range16(64285LLU,64310LLU,1LLU),_234223e9b_Range16(64312LLU,64316LLU,1LLU),_234223e9b_Range16(64318LLU,64320LLU,2LLU),_234223e9b_Range16(64321LLU,64323LLU,2LLU),_234223e9b_Range16(64324LLU,64326LLU,2LLU),_234223e9b_Range16(64327LLU,64335LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HIRAGANA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(12353LLU,12438LLU,1LLU),_234223e9b_Range16(12445LLU,12447LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(110593LLU,110879LLU,1LLU),_234223e9b_Range32(110898LLU,110928LLU,30LLU),_234223e9b_Range32(110929LLU,110930LLU,1LLU),_234223e9b_Range32(127488LLU,127488LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__IMPERIAL_ARAMAIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67648LLU,67669LLU,1LLU),_234223e9b_Range32(67671LLU,67679LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__INHERITED = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(768LLU,879LLU,1LLU),_234223e9b_Range16(1157LLU,1158LLU,1LLU),_234223e9b_Range16(1611LLU,1621LLU,1LLU),_234223e9b_Range16(1648LLU,2385LLU,737LLU),_234223e9b_Range16(2386LLU,2388LLU,1LLU),_234223e9b_Range16(6832LLU,6862LLU,1LLU),_234223e9b_Range16(7376LLU,7378LLU,1LLU),_234223e9b_Range16(7380LLU,7392LLU,1LLU),_234223e9b_Range16(7394LLU,7400LLU,1LLU),_234223e9b_Range16(7405LLU,7412LLU,7LLU),_234223e9b_Range16(7416LLU,7417LLU,1LLU),_234223e9b_Range16(7616LLU,7679LLU,1LLU),_234223e9b_Range16(8204LLU,8205LLU,1LLU),_234223e9b_Range16(8400LLU,8432LLU,1LLU),_234223e9b_Range16(12330LLU,12333LLU,1LLU),_234223e9b_Range16(12441LLU,12442LLU,1LLU),_234223e9b_Range16(65024LLU,65039LLU,1LLU),_234223e9b_Range16(65056LLU,65069LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66045LLU,66272LLU,227LLU),_234223e9b_Range32(70459LLU,118528LLU,48069LLU),_234223e9b_Range32(118529LLU,118573LLU,1LLU),_234223e9b_Range32(118576LLU,118598LLU,1LLU),_234223e9b_Range32(119143LLU,119145LLU,1LLU),_234223e9b_Range32(119163LLU,119170LLU,1LLU),_234223e9b_Range32(119173LLU,119179LLU,1LLU),_234223e9b_Range32(119210LLU,119213LLU,1LLU),_234223e9b_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__INSCRIPTIONAL_PAHLAVI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68448LLU,68466LLU,1LLU),_234223e9b_Range32(68472LLU,68479LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__INSCRIPTIONAL_PARTHIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68416LLU,68437LLU,1LLU),_234223e9b_Range32(68440LLU,68447LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__JAVANESE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43392LLU,43469LLU,1LLU),_234223e9b_Range16(43472LLU,43481LLU,1LLU),_234223e9b_Range16(43486LLU,43487LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KAITHI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69760LLU,69826LLU,1LLU),_234223e9b_Range32(69837LLU,69837LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KANNADA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3200LLU,3212LLU,1LLU),_234223e9b_Range16(3214LLU,3216LLU,1LLU),_234223e9b_Range16(3218LLU,3240LLU,1LLU),_234223e9b_Range16(3242LLU,3251LLU,1LLU),_234223e9b_Range16(3253LLU,3257LLU,1LLU),_234223e9b_Range16(3260LLU,3268LLU,1LLU),_234223e9b_Range16(3270LLU,3272LLU,1LLU),_234223e9b_Range16(3274LLU,3277LLU,1LLU),_234223e9b_Range16(3285LLU,3286LLU,1LLU),_234223e9b_Range16(3293LLU,3294LLU,1LLU),_234223e9b_Range16(3296LLU,3299LLU,1LLU),_234223e9b_Range16(3302LLU,3311LLU,1LLU),_234223e9b_Range16(3313LLU,3315LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KATAKANA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(12449LLU,12538LLU,1LLU),_234223e9b_Range16(12541LLU,12543LLU,1LLU),_234223e9b_Range16(12784LLU,12799LLU,1LLU),_234223e9b_Range16(13008LLU,13054LLU,1LLU),_234223e9b_Range16(13056LLU,13143LLU,1LLU),_234223e9b_Range16(65382LLU,65391LLU,1LLU),_234223e9b_Range16(65393LLU,65437LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(110576LLU,110579LLU,1LLU),_234223e9b_Range32(110581LLU,110587LLU,1LLU),_234223e9b_Range32(110589LLU,110590LLU,1LLU),_234223e9b_Range32(110592LLU,110880LLU,288LLU),_234223e9b_Range32(110881LLU,110882LLU,1LLU),_234223e9b_Range32(110933LLU,110948LLU,15LLU),_234223e9b_Range32(110949LLU,110951LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KAWI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73472LLU,73488LLU,1LLU),_234223e9b_Range32(73490LLU,73530LLU,1LLU),_234223e9b_Range32(73534LLU,73561LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KAYAH_LI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43264LLU,43309LLU,1LLU),_234223e9b_Range16(43311LLU,43311LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KHAROSHTHI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68096LLU,68099LLU,1LLU),_234223e9b_Range32(68101LLU,68102LLU,1LLU),_234223e9b_Range32(68108LLU,68115LLU,1LLU),_234223e9b_Range32(68117LLU,68119LLU,1LLU),_234223e9b_Range32(68121LLU,68149LLU,1LLU),_234223e9b_Range32(68152LLU,68154LLU,1LLU),_234223e9b_Range32(68159LLU,68168LLU,1LLU),_234223e9b_Range32(68176LLU,68184LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KHITAN_SMALL_SCRIPT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(94180LLU,101120LLU,6940LLU),_234223e9b_Range32(101121LLU,101589LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KHMER = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6016LLU,6109LLU,1LLU),_234223e9b_Range16(6112LLU,6121LLU,1LLU),_234223e9b_Range16(6128LLU,6137LLU,1LLU),_234223e9b_Range16(6624LLU,6655LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KHOJKI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70144LLU,70161LLU,1LLU),_234223e9b_Range32(70163LLU,70209LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__KHUDAWADI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70320LLU,70378LLU,1LLU),_234223e9b_Range32(70384LLU,70393LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LAO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3713LLU,3714LLU,1LLU),_234223e9b_Range16(3716LLU,3718LLU,2LLU),_234223e9b_Range16(3719LLU,3722LLU,1LLU),_234223e9b_Range16(3724LLU,3747LLU,1LLU),_234223e9b_Range16(3749LLU,3751LLU,2LLU),_234223e9b_Range16(3752LLU,3773LLU,1LLU),_234223e9b_Range16(3776LLU,3780LLU,1LLU),_234223e9b_Range16(3782LLU,3784LLU,2LLU),_234223e9b_Range16(3785LLU,3790LLU,1LLU),_234223e9b_Range16(3792LLU,3801LLU,1LLU),_234223e9b_Range16(3804LLU,3807LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LATIN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(65LLU,90LLU,1LLU),_234223e9b_Range16(97LLU,122LLU,1LLU),_234223e9b_Range16(170LLU,186LLU,16LLU),_234223e9b_Range16(192LLU,214LLU,1LLU),_234223e9b_Range16(216LLU,246LLU,1LLU),_234223e9b_Range16(248LLU,696LLU,1LLU),_234223e9b_Range16(736LLU,740LLU,1LLU),_234223e9b_Range16(7424LLU,7461LLU,1LLU),_234223e9b_Range16(7468LLU,7516LLU,1LLU),_234223e9b_Range16(7522LLU,7525LLU,1LLU),_234223e9b_Range16(7531LLU,7543LLU,1LLU),_234223e9b_Range16(7545LLU,7614LLU,1LLU),_234223e9b_Range16(7680LLU,7935LLU,1LLU),_234223e9b_Range16(8305LLU,8319LLU,14LLU),_234223e9b_Range16(8336LLU,8348LLU,1LLU),_234223e9b_Range16(8490LLU,8491LLU,1LLU),_234223e9b_Range16(8498LLU,8526LLU,28LLU),_234223e9b_Range16(8544LLU,8584LLU,1LLU),_234223e9b_Range16(11360LLU,11391LLU,1LLU),_234223e9b_Range16(42786LLU,42887LLU,1LLU),_234223e9b_Range16(42891LLU,42954LLU,1LLU),_234223e9b_Range16(42960LLU,42961LLU,1LLU),_234223e9b_Range16(42963LLU,42965LLU,2LLU),_234223e9b_Range16(42966LLU,42969LLU,1LLU),_234223e9b_Range16(42994LLU,43007LLU,1LLU),_234223e9b_Range16(43824LLU,43866LLU,1LLU),_234223e9b_Range16(43868LLU,43876LLU,1LLU),_234223e9b_Range16(43878LLU,43881LLU,1LLU),_234223e9b_Range16(64256LLU,64262LLU,1LLU),_234223e9b_Range16(65313LLU,65338LLU,1LLU),_234223e9b_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67456LLU,67461LLU,1LLU),_234223e9b_Range32(67463LLU,67504LLU,1LLU),_234223e9b_Range32(67506LLU,67514LLU,1LLU),_234223e9b_Range32(122624LLU,122654LLU,1LLU),_234223e9b_Range32(122661LLU,122666LLU,1LLU)}),5LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LEPCHA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(7168LLU,7223LLU,1LLU),_234223e9b_Range16(7227LLU,7241LLU,1LLU),_234223e9b_Range16(7245LLU,7247LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LIMBU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6400LLU,6430LLU,1LLU),_234223e9b_Range16(6432LLU,6443LLU,1LLU),_234223e9b_Range16(6448LLU,6459LLU,1LLU),_234223e9b_Range16(6464LLU,6468LLU,4LLU),_234223e9b_Range16(6469LLU,6479LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LINEAR_A = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67072LLU,67382LLU,1LLU),_234223e9b_Range32(67392LLU,67413LLU,1LLU),_234223e9b_Range32(67424LLU,67431LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LINEAR_B = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(65536LLU,65547LLU,1LLU),_234223e9b_Range32(65549LLU,65574LLU,1LLU),_234223e9b_Range32(65576LLU,65594LLU,1LLU),_234223e9b_Range32(65596LLU,65597LLU,1LLU),_234223e9b_Range32(65599LLU,65613LLU,1LLU),_234223e9b_Range32(65616LLU,65629LLU,1LLU),_234223e9b_Range32(65664LLU,65786LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LISU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(42192LLU,42239LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73648LLU,73648LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LYCIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66176LLU,66204LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LYDIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67872LLU,67897LLU,1LLU),_234223e9b_Range32(67903LLU,67903LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MAHAJANI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69968LLU,70006LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MAKASAR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73440LLU,73464LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MALAYALAM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3328LLU,3340LLU,1LLU),_234223e9b_Range16(3342LLU,3344LLU,1LLU),_234223e9b_Range16(3346LLU,3396LLU,1LLU),_234223e9b_Range16(3398LLU,3400LLU,1LLU),_234223e9b_Range16(3402LLU,3407LLU,1LLU),_234223e9b_Range16(3412LLU,3427LLU,1LLU),_234223e9b_Range16(3430LLU,3455LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MANDAIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2112LLU,2139LLU,1LLU),_234223e9b_Range16(2142LLU,2142LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MANICHAEAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68288LLU,68326LLU,1LLU),_234223e9b_Range32(68331LLU,68342LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MARCHEN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72816LLU,72847LLU,1LLU),_234223e9b_Range32(72850LLU,72871LLU,1LLU),_234223e9b_Range32(72873LLU,72886LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MASARAM_GONDI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72960LLU,72966LLU,1LLU),_234223e9b_Range32(72968LLU,72969LLU,1LLU),_234223e9b_Range32(72971LLU,73014LLU,1LLU),_234223e9b_Range32(73018LLU,73020LLU,2LLU),_234223e9b_Range32(73021LLU,73023LLU,2LLU),_234223e9b_Range32(73024LLU,73031LLU,1LLU),_234223e9b_Range32(73040LLU,73049LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MEDEFAIDRIN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(93760LLU,93850LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MEETEI_MAYEK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43744LLU,43766LLU,1LLU),_234223e9b_Range16(43968LLU,44013LLU,1LLU),_234223e9b_Range16(44016LLU,44025LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MENDE_KIKAKUI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(124928LLU,125124LLU,1LLU),_234223e9b_Range32(125127LLU,125142LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MEROITIC_CURSIVE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68000LLU,68023LLU,1LLU),_234223e9b_Range32(68028LLU,68047LLU,1LLU),_234223e9b_Range32(68050LLU,68095LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MEROITIC_HIEROGLYPHS = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67968LLU,67999LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MIAO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(93952LLU,94026LLU,1LLU),_234223e9b_Range32(94031LLU,94087LLU,1LLU),_234223e9b_Range32(94095LLU,94111LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MODI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71168LLU,71236LLU,1LLU),_234223e9b_Range32(71248LLU,71257LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MONGOLIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6144LLU,6145LLU,1LLU),_234223e9b_Range16(6148LLU,6150LLU,2LLU),_234223e9b_Range16(6151LLU,6169LLU,1LLU),_234223e9b_Range16(6176LLU,6264LLU,1LLU),_234223e9b_Range16(6272LLU,6314LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71264LLU,71276LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MRO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(92736LLU,92766LLU,1LLU),_234223e9b_Range32(92768LLU,92777LLU,1LLU),_234223e9b_Range32(92782LLU,92783LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MULTANI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70272LLU,70278LLU,1LLU),_234223e9b_Range32(70280LLU,70282LLU,2LLU),_234223e9b_Range32(70283LLU,70285LLU,1LLU),_234223e9b_Range32(70287LLU,70301LLU,1LLU),_234223e9b_Range32(70303LLU,70313LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__MYANMAR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(4096LLU,4255LLU,1LLU),_234223e9b_Range16(43488LLU,43518LLU,1LLU),_234223e9b_Range16(43616LLU,43647LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NABATAEAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67712LLU,67742LLU,1LLU),_234223e9b_Range32(67751LLU,67759LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NAG_MUNDARI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(124112LLU,124153LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NANDINAGARI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72096LLU,72103LLU,1LLU),_234223e9b_Range32(72106LLU,72151LLU,1LLU),_234223e9b_Range32(72154LLU,72164LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NEW_TAI_LUE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6528LLU,6571LLU,1LLU),_234223e9b_Range16(6576LLU,6601LLU,1LLU),_234223e9b_Range16(6608LLU,6618LLU,1LLU),_234223e9b_Range16(6622LLU,6623LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NEWA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70656LLU,70747LLU,1LLU),_234223e9b_Range32(70749LLU,70753LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NKO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1984LLU,2042LLU,1LLU),_234223e9b_Range16(2045LLU,2047LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NUSHU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(94177LLU,110960LLU,16783LLU),_234223e9b_Range32(110961LLU,111355LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NYIAKENG_PUACHUE_HMONG = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(123136LLU,123180LLU,1LLU),_234223e9b_Range32(123184LLU,123197LLU,1LLU),_234223e9b_Range32(123200LLU,123209LLU,1LLU),_234223e9b_Range32(123214LLU,123215LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OGHAM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5760LLU,5788LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OL_CHIKI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(7248LLU,7295LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_HUNGARIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68736LLU,68786LLU,1LLU),_234223e9b_Range32(68800LLU,68850LLU,1LLU),_234223e9b_Range32(68858LLU,68863LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_ITALIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66304LLU,66339LLU,1LLU),_234223e9b_Range32(66349LLU,66351LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_NORTH_ARABIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68224LLU,68255LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_PERMIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66384LLU,66426LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_PERSIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66464LLU,66499LLU,1LLU),_234223e9b_Range32(66504LLU,66517LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_SOGDIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69376LLU,69415LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_SOUTH_ARABIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68192LLU,68223LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_TURKIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68608LLU,68680LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OLD_UYGHUR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69488LLU,69513LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ORIYA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2817LLU,2819LLU,1LLU),_234223e9b_Range16(2821LLU,2828LLU,1LLU),_234223e9b_Range16(2831LLU,2832LLU,1LLU),_234223e9b_Range16(2835LLU,2856LLU,1LLU),_234223e9b_Range16(2858LLU,2864LLU,1LLU),_234223e9b_Range16(2866LLU,2867LLU,1LLU),_234223e9b_Range16(2869LLU,2873LLU,1LLU),_234223e9b_Range16(2876LLU,2884LLU,1LLU),_234223e9b_Range16(2887LLU,2888LLU,1LLU),_234223e9b_Range16(2891LLU,2893LLU,1LLU),_234223e9b_Range16(2901LLU,2903LLU,1LLU),_234223e9b_Range16(2908LLU,2909LLU,1LLU),_234223e9b_Range16(2911LLU,2915LLU,1LLU),_234223e9b_Range16(2918LLU,2935LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OSAGE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66736LLU,66771LLU,1LLU),_234223e9b_Range32(66776LLU,66811LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OSMANYA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66688LLU,66717LLU,1LLU),_234223e9b_Range32(66720LLU,66729LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PAHAWH_HMONG = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(92928LLU,92997LLU,1LLU),_234223e9b_Range32(93008LLU,93017LLU,1LLU),_234223e9b_Range32(93019LLU,93025LLU,1LLU),_234223e9b_Range32(93027LLU,93047LLU,1LLU),_234223e9b_Range32(93053LLU,93071LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PALMYRENE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67680LLU,67711LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PAU_CIN_HAU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72384LLU,72440LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PHAGS_PA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43072LLU,43127LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PHOENICIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67840LLU,67867LLU,1LLU),_234223e9b_Range32(67871LLU,67871LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PSALTER_PAHLAVI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68480LLU,68497LLU,1LLU),_234223e9b_Range32(68505LLU,68508LLU,1LLU),_234223e9b_Range32(68521LLU,68527LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__REJANG = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43312LLU,43347LLU,1LLU),_234223e9b_Range16(43359LLU,43359LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__RUNIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5792LLU,5866LLU,1LLU),_234223e9b_Range16(5870LLU,5880LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SAMARITAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2048LLU,2093LLU,1LLU),_234223e9b_Range16(2096LLU,2110LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SAURASHTRA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43136LLU,43205LLU,1LLU),_234223e9b_Range16(43214LLU,43225LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SHARADA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70016LLU,70111LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SHAVIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66640LLU,66687LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SIDDHAM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71040LLU,71093LLU,1LLU),_234223e9b_Range32(71096LLU,71133LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SIGN_WRITING = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(120832LLU,121483LLU,1LLU),_234223e9b_Range32(121499LLU,121503LLU,1LLU),_234223e9b_Range32(121505LLU,121519LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SINHALA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3457LLU,3459LLU,1LLU),_234223e9b_Range16(3461LLU,3478LLU,1LLU),_234223e9b_Range16(3482LLU,3505LLU,1LLU),_234223e9b_Range16(3507LLU,3515LLU,1LLU),_234223e9b_Range16(3517LLU,3520LLU,3LLU),_234223e9b_Range16(3521LLU,3526LLU,1LLU),_234223e9b_Range16(3530LLU,3535LLU,5LLU),_234223e9b_Range16(3536LLU,3540LLU,1LLU),_234223e9b_Range16(3542LLU,3544LLU,2LLU),_234223e9b_Range16(3545LLU,3551LLU,1LLU),_234223e9b_Range16(3558LLU,3567LLU,1LLU),_234223e9b_Range16(3570LLU,3572LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70113LLU,70132LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SOGDIAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69424LLU,69465LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SORA_SOMPENG = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69840LLU,69864LLU,1LLU),_234223e9b_Range32(69872LLU,69881LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SOYOMBO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72272LLU,72354LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SUNDANESE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(7040LLU,7103LLU,1LLU),_234223e9b_Range16(7360LLU,7367LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SYLOTI_NAGRI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43008LLU,43052LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SYRIAC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1792LLU,1805LLU,1LLU),_234223e9b_Range16(1807LLU,1866LLU,1LLU),_234223e9b_Range16(1869LLU,1871LLU,1LLU),_234223e9b_Range16(2144LLU,2154LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAGALOG = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5888LLU,5909LLU,1LLU),_234223e9b_Range16(5919LLU,5919LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAGBANWA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(5984LLU,5996LLU,1LLU),_234223e9b_Range16(5998LLU,6000LLU,1LLU),_234223e9b_Range16(6002LLU,6003LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAI_LE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6480LLU,6509LLU,1LLU),_234223e9b_Range16(6512LLU,6516LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAI_THAM = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6688LLU,6750LLU,1LLU),_234223e9b_Range16(6752LLU,6780LLU,1LLU),_234223e9b_Range16(6783LLU,6793LLU,1LLU),_234223e9b_Range16(6800LLU,6809LLU,1LLU),_234223e9b_Range16(6816LLU,6829LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAI_VIET = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(43648LLU,43714LLU,1LLU),_234223e9b_Range16(43739LLU,43743LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAKRI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71296LLU,71353LLU,1LLU),_234223e9b_Range32(71360LLU,71369LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TAMIL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2946LLU,2947LLU,1LLU),_234223e9b_Range16(2949LLU,2954LLU,1LLU),_234223e9b_Range16(2958LLU,2960LLU,1LLU),_234223e9b_Range16(2962LLU,2965LLU,1LLU),_234223e9b_Range16(2969LLU,2970LLU,1LLU),_234223e9b_Range16(2972LLU,2974LLU,2LLU),_234223e9b_Range16(2975LLU,2979LLU,4LLU),_234223e9b_Range16(2980LLU,2984LLU,4LLU),_234223e9b_Range16(2985LLU,2986LLU,1LLU),_234223e9b_Range16(2990LLU,3001LLU,1LLU),_234223e9b_Range16(3006LLU,3010LLU,1LLU),_234223e9b_Range16(3014LLU,3016LLU,1LLU),_234223e9b_Range16(3018LLU,3021LLU,1LLU),_234223e9b_Range16(3024LLU,3031LLU,7LLU),_234223e9b_Range16(3046LLU,3066LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(73664LLU,73713LLU,1LLU),_234223e9b_Range32(73727LLU,73727LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TANGSA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(92784LLU,92862LLU,1LLU),_234223e9b_Range32(92864LLU,92873LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TANGUT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(94176LLU,94208LLU,32LLU),_234223e9b_Range32(94209LLU,100343LLU,1LLU),_234223e9b_Range32(100352LLU,101119LLU,1LLU),_234223e9b_Range32(101632LLU,101640LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TELUGU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3072LLU,3084LLU,1LLU),_234223e9b_Range16(3086LLU,3088LLU,1LLU),_234223e9b_Range16(3090LLU,3112LLU,1LLU),_234223e9b_Range16(3114LLU,3129LLU,1LLU),_234223e9b_Range16(3132LLU,3140LLU,1LLU),_234223e9b_Range16(3142LLU,3144LLU,1LLU),_234223e9b_Range16(3146LLU,3149LLU,1LLU),_234223e9b_Range16(3157LLU,3158LLU,1LLU),_234223e9b_Range16(3160LLU,3162LLU,1LLU),_234223e9b_Range16(3165LLU,3168LLU,3LLU),_234223e9b_Range16(3169LLU,3171LLU,1LLU),_234223e9b_Range16(3174LLU,3183LLU,1LLU),_234223e9b_Range16(3191LLU,3199LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__THAANA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1920LLU,1969LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__THAI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3585LLU,3642LLU,1LLU),_234223e9b_Range16(3648LLU,3675LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TIBETAN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3840LLU,3911LLU,1LLU),_234223e9b_Range16(3913LLU,3948LLU,1LLU),_234223e9b_Range16(3953LLU,3991LLU,1LLU),_234223e9b_Range16(3993LLU,4028LLU,1LLU),_234223e9b_Range16(4030LLU,4044LLU,1LLU),_234223e9b_Range16(4046LLU,4052LLU,1LLU),_234223e9b_Range16(4057LLU,4058LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TIFINAGH = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(11568LLU,11623LLU,1LLU),_234223e9b_Range16(11631LLU,11632LLU,1LLU),_234223e9b_Range16(11647LLU,11647LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TIRHUTA = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70784LLU,70855LLU,1LLU),_234223e9b_Range32(70864LLU,70873LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TOTO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(123536LLU,123566LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__UGARITIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66432LLU,66461LLU,1LLU),_234223e9b_Range32(66463LLU,66463LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__VAI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(42240LLU,42539LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__VITHKUQI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66928LLU,66938LLU,1LLU),_234223e9b_Range32(66940LLU,66954LLU,1LLU),_234223e9b_Range32(66956LLU,66962LLU,1LLU),_234223e9b_Range32(66964LLU,66965LLU,1LLU),_234223e9b_Range32(66967LLU,66977LLU,1LLU),_234223e9b_Range32(66979LLU,66993LLU,1LLU),_234223e9b_Range32(66995LLU,67001LLU,1LLU),_234223e9b_Range32(67003LLU,67004LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__WANCHO = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(123584LLU,123641LLU,1LLU),_234223e9b_Range32(123647LLU,123647LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__WARANG_CITI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(71840LLU,71922LLU,1LLU),_234223e9b_Range32(71935LLU,71935LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__YEZIDI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69248LLU,69289LLU,1LLU),_234223e9b_Range32(69291LLU,69293LLU,1LLU),_234223e9b_Range32(69296LLU,69297LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__YI = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(40960LLU,42124LLU,1LLU),_234223e9b_Range16(42128LLU,42182LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ZANABAZAR_SQUARE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(72192LLU,72263LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__ASCII_HEX_DIGIT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(48LLU,57LLU,1LLU),_234223e9b_Range16(65LLU,70LLU,1LLU),_234223e9b_Range16(97LLU,102LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__BIDI_CONTROL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1564LLU,8206LLU,6642LLU),_234223e9b_Range16(8207LLU,8234LLU,27LLU),_234223e9b_Range16(8235LLU,8238LLU,1LLU),_234223e9b_Range16(8294LLU,8297LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DASH = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(45LLU,1418LLU,1373LLU),_234223e9b_Range16(1470LLU,5120LLU,3650LLU),_234223e9b_Range16(6150LLU,8208LLU,2058LLU),_234223e9b_Range16(8209LLU,8213LLU,1LLU),_234223e9b_Range16(8275LLU,8315LLU,40LLU),_234223e9b_Range16(8331LLU,8722LLU,391LLU),_234223e9b_Range16(11799LLU,11802LLU,3LLU),_234223e9b_Range16(11834LLU,11835LLU,1LLU),_234223e9b_Range16(11840LLU,11869LLU,29LLU),_234223e9b_Range16(12316LLU,12336LLU,20LLU),_234223e9b_Range16(12448LLU,65073LLU,52625LLU),_234223e9b_Range16(65074LLU,65112LLU,38LLU),_234223e9b_Range16(65123LLU,65293LLU,170LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69293LLU,69293LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DEPRECATED = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(329LLU,1651LLU,1322LLU),_234223e9b_Range16(3959LLU,3961LLU,2LLU),_234223e9b_Range16(6051LLU,6052LLU,1LLU),_234223e9b_Range16(8298LLU,8303LLU,1LLU),_234223e9b_Range16(9001LLU,9002LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(917505LLU,917505LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__DIACRITIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(94LLU,96LLU,2LLU),_234223e9b_Range16(168LLU,175LLU,7LLU),_234223e9b_Range16(180LLU,183LLU,3LLU),_234223e9b_Range16(184LLU,688LLU,504LLU),_234223e9b_Range16(689LLU,846LLU,1LLU),_234223e9b_Range16(848LLU,855LLU,1LLU),_234223e9b_Range16(861LLU,866LLU,1LLU),_234223e9b_Range16(884LLU,885LLU,1LLU),_234223e9b_Range16(890LLU,900LLU,10LLU),_234223e9b_Range16(901LLU,1155LLU,254LLU),_234223e9b_Range16(1156LLU,1159LLU,1LLU),_234223e9b_Range16(1369LLU,1425LLU,56LLU),_234223e9b_Range16(1426LLU,1441LLU,1LLU),_234223e9b_Range16(1443LLU,1469LLU,1LLU),_234223e9b_Range16(1471LLU,1473LLU,2LLU),_234223e9b_Range16(1474LLU,1476LLU,2LLU),_234223e9b_Range16(1611LLU,1618LLU,1LLU),_234223e9b_Range16(1623LLU,1624LLU,1LLU),_234223e9b_Range16(1759LLU,1760LLU,1LLU),_234223e9b_Range16(1765LLU,1766LLU,1LLU),_234223e9b_Range16(1770LLU,1772LLU,1LLU),_234223e9b_Range16(1840LLU,1866LLU,1LLU),_234223e9b_Range16(1958LLU,1968LLU,1LLU),_234223e9b_Range16(2027LLU,2037LLU,1LLU),_234223e9b_Range16(2072LLU,2073LLU,1LLU),_234223e9b_Range16(2200LLU,2207LLU,1LLU),_234223e9b_Range16(2249LLU,2258LLU,1LLU),_234223e9b_Range16(2275LLU,2302LLU,1LLU),_234223e9b_Range16(2364LLU,2381LLU,17LLU),_234223e9b_Range16(2385LLU,2388LLU,1LLU),_234223e9b_Range16(2417LLU,2492LLU,75LLU),_234223e9b_Range16(2509LLU,2620LLU,111LLU),_234223e9b_Range16(2637LLU,2748LLU,111LLU),_234223e9b_Range16(2765LLU,2813LLU,48LLU),_234223e9b_Range16(2814LLU,2815LLU,1LLU),_234223e9b_Range16(2876LLU,2893LLU,17LLU),_234223e9b_Range16(2901LLU,3021LLU,120LLU),_234223e9b_Range16(3132LLU,3149LLU,17LLU),_234223e9b_Range16(3260LLU,3277LLU,17LLU),_234223e9b_Range16(3387LLU,3388LLU,1LLU),_234223e9b_Range16(3405LLU,3655LLU,125LLU),_234223e9b_Range16(3656LLU,3660LLU,1LLU),_234223e9b_Range16(3662LLU,3770LLU,108LLU),_234223e9b_Range16(3784LLU,3788LLU,1LLU),_234223e9b_Range16(3864LLU,3865LLU,1LLU),_234223e9b_Range16(3893LLU,3897LLU,2LLU),_234223e9b_Range16(3902LLU,3903LLU,1LLU),_234223e9b_Range16(3970LLU,3972LLU,1LLU),_234223e9b_Range16(3974LLU,3975LLU,1LLU),_234223e9b_Range16(4038LLU,4151LLU,113LLU),_234223e9b_Range16(4153LLU,4154LLU,1LLU),_234223e9b_Range16(4195LLU,4196LLU,1LLU),_234223e9b_Range16(4201LLU,4205LLU,1LLU),_234223e9b_Range16(4231LLU,4237LLU,1LLU),_234223e9b_Range16(4239LLU,4250LLU,11LLU),_234223e9b_Range16(4251LLU,4957LLU,706LLU),_234223e9b_Range16(4958LLU,4959LLU,1LLU),_234223e9b_Range16(5908LLU,5909LLU,1LLU),_234223e9b_Range16(6089LLU,6099LLU,1LLU),_234223e9b_Range16(6109LLU,6457LLU,348LLU),_234223e9b_Range16(6458LLU,6459LLU,1LLU),_234223e9b_Range16(6773LLU,6780LLU,1LLU),_234223e9b_Range16(6783LLU,6832LLU,49LLU),_234223e9b_Range16(6833LLU,6846LLU,1LLU),_234223e9b_Range16(6849LLU,6859LLU,1LLU),_234223e9b_Range16(6964LLU,6980LLU,16LLU),_234223e9b_Range16(7019LLU,7027LLU,1LLU),_234223e9b_Range16(7082LLU,7083LLU,1LLU),_234223e9b_Range16(7222LLU,7223LLU,1LLU),_234223e9b_Range16(7288LLU,7293LLU,1LLU),_234223e9b_Range16(7376LLU,7400LLU,1LLU),_234223e9b_Range16(7405LLU,7412LLU,7LLU),_234223e9b_Range16(7415LLU,7417LLU,1LLU),_234223e9b_Range16(7468LLU,7530LLU,1LLU),_234223e9b_Range16(7620LLU,7631LLU,1LLU),_234223e9b_Range16(7669LLU,7679LLU,1LLU),_234223e9b_Range16(8125LLU,8127LLU,2LLU),_234223e9b_Range16(8128LLU,8129LLU,1LLU),_234223e9b_Range16(8141LLU,8143LLU,1LLU),_234223e9b_Range16(8157LLU,8159LLU,1LLU),_234223e9b_Range16(8173LLU,8175LLU,1LLU),_234223e9b_Range16(8189LLU,8190LLU,1LLU),_234223e9b_Range16(11503LLU,11505LLU,1LLU),_234223e9b_Range16(11823LLU,12330LLU,507LLU),_234223e9b_Range16(12331LLU,12335LLU,1LLU),_234223e9b_Range16(12441LLU,12444LLU,1LLU),_234223e9b_Range16(12540LLU,42607LLU,30067LLU),_234223e9b_Range16(42620LLU,42621LLU,1LLU),_234223e9b_Range16(42623LLU,42652LLU,29LLU),_234223e9b_Range16(42653LLU,42736LLU,83LLU),_234223e9b_Range16(42737LLU,42752LLU,15LLU),_234223e9b_Range16(42753LLU,42785LLU,1LLU),_234223e9b_Range16(42888LLU,42890LLU,1LLU),_234223e9b_Range16(43000LLU,43001LLU,1LLU),_234223e9b_Range16(43204LLU,43232LLU,28LLU),_234223e9b_Range16(43233LLU,43249LLU,1LLU),_234223e9b_Range16(43307LLU,43310LLU,1LLU),_234223e9b_Range16(43347LLU,43443LLU,96LLU),_234223e9b_Range16(43456LLU,43493LLU,37LLU),_234223e9b_Range16(43643LLU,43645LLU,1LLU),_234223e9b_Range16(43711LLU,43714LLU,1LLU),_234223e9b_Range16(43766LLU,43867LLU,101LLU),_234223e9b_Range16(43868LLU,43871LLU,1LLU),_234223e9b_Range16(43881LLU,43883LLU,1LLU),_234223e9b_Range16(44012LLU,44013LLU,1LLU),_234223e9b_Range16(64286LLU,65056LLU,770LLU),_234223e9b_Range16(65057LLU,65071LLU,1LLU),_234223e9b_Range16(65342LLU,65344LLU,2LLU),_234223e9b_Range16(65392LLU,65438LLU,46LLU),_234223e9b_Range16(65439LLU,65507LLU,68LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66272LLU,67456LLU,1184LLU),_234223e9b_Range32(67457LLU,67461LLU,1LLU),_234223e9b_Range32(67463LLU,67504LLU,1LLU),_234223e9b_Range32(67506LLU,67514LLU,1LLU),_234223e9b_Range32(68325LLU,68326LLU,1LLU),_234223e9b_Range32(68898LLU,68903LLU,1LLU),_234223e9b_Range32(69373LLU,69375LLU,1LLU),_234223e9b_Range32(69446LLU,69456LLU,1LLU),_234223e9b_Range32(69506LLU,69509LLU,1LLU),_234223e9b_Range32(69702LLU,69744LLU,42LLU),_234223e9b_Range32(69817LLU,69818LLU,1LLU),_234223e9b_Range32(69939LLU,69940LLU,1LLU),_234223e9b_Range32(70003LLU,70080LLU,77LLU),_234223e9b_Range32(70090LLU,70092LLU,1LLU),_234223e9b_Range32(70197LLU,70198LLU,1LLU),_234223e9b_Range32(70377LLU,70378LLU,1LLU),_234223e9b_Range32(70460LLU,70477LLU,17LLU),_234223e9b_Range32(70502LLU,70508LLU,1LLU),_234223e9b_Range32(70512LLU,70516LLU,1LLU),_234223e9b_Range32(70722LLU,70726LLU,4LLU),_234223e9b_Range32(70850LLU,70851LLU,1LLU),_234223e9b_Range32(71103LLU,71104LLU,1LLU),_234223e9b_Range32(71231LLU,71350LLU,119LLU),_234223e9b_Range32(71351LLU,71467LLU,116LLU),_234223e9b_Range32(71737LLU,71738LLU,1LLU),_234223e9b_Range32(71997LLU,71998LLU,1LLU),_234223e9b_Range32(72003LLU,72160LLU,157LLU),_234223e9b_Range32(72244LLU,72263LLU,19LLU),_234223e9b_Range32(72345LLU,72767LLU,422LLU),_234223e9b_Range32(73026LLU,73028LLU,2LLU),_234223e9b_Range32(73029LLU,73111LLU,82LLU),_234223e9b_Range32(78919LLU,78933LLU,1LLU),_234223e9b_Range32(92912LLU,92916LLU,1LLU),_234223e9b_Range32(92976LLU,92982LLU,1LLU),_234223e9b_Range32(94095LLU,94111LLU,1LLU),_234223e9b_Range32(94192LLU,94193LLU,1LLU),_234223e9b_Range32(110576LLU,110579LLU,1LLU),_234223e9b_Range32(110581LLU,110587LLU,1LLU),_234223e9b_Range32(110589LLU,110590LLU,1LLU),_234223e9b_Range32(118528LLU,118573LLU,1LLU),_234223e9b_Range32(118576LLU,118598LLU,1LLU),_234223e9b_Range32(119143LLU,119145LLU,1LLU),_234223e9b_Range32(119149LLU,119154LLU,1LLU),_234223e9b_Range32(119163LLU,119170LLU,1LLU),_234223e9b_Range32(119173LLU,119179LLU,1LLU),_234223e9b_Range32(119210LLU,119213LLU,1LLU),_234223e9b_Range32(122928LLU,122989LLU,1LLU),_234223e9b_Range32(123184LLU,123190LLU,1LLU),_234223e9b_Range32(123566LLU,123628LLU,62LLU),_234223e9b_Range32(123629LLU,123631LLU,1LLU),_234223e9b_Range32(125136LLU,125142LLU,1LLU),_234223e9b_Range32(125252LLU,125254LLU,1LLU),_234223e9b_Range32(125256LLU,125258LLU,1LLU)}),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__EXTENDER = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(183LLU,720LLU,537LLU),_234223e9b_Range16(721LLU,1600LLU,879LLU),_234223e9b_Range16(2042LLU,2901LLU,859LLU),_234223e9b_Range16(3654LLU,3782LLU,128LLU),_234223e9b_Range16(6154LLU,6211LLU,57LLU),_234223e9b_Range16(6823LLU,7222LLU,399LLU),_234223e9b_Range16(7291LLU,12293LLU,5002LLU),_234223e9b_Range16(12337LLU,12341LLU,1LLU),_234223e9b_Range16(12445LLU,12446LLU,1LLU),_234223e9b_Range16(12540LLU,12542LLU,1LLU),_234223e9b_Range16(40981LLU,42508LLU,1527LLU),_234223e9b_Range16(43471LLU,43494LLU,23LLU),_234223e9b_Range16(43632LLU,43741LLU,109LLU),_234223e9b_Range16(43763LLU,43764LLU,1LLU),_234223e9b_Range16(65392LLU,65392LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67457LLU,67458LLU,1LLU),_234223e9b_Range32(70493LLU,71110LLU,617LLU),_234223e9b_Range32(71111LLU,71112LLU,1LLU),_234223e9b_Range32(72344LLU,92994LLU,20650LLU),_234223e9b_Range32(92995LLU,94176LLU,1181LLU),_234223e9b_Range32(94177LLU,94179LLU,2LLU),_234223e9b_Range32(123196LLU,123197LLU,1LLU),_234223e9b_Range32(125252LLU,125254LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HEX_DIGIT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(48LLU,57LLU,1LLU),_234223e9b_Range16(65LLU,70LLU,1LLU),_234223e9b_Range16(97LLU,102LLU,1LLU),_234223e9b_Range16(65296LLU,65305LLU,1LLU),_234223e9b_Range16(65313LLU,65318LLU,1LLU),_234223e9b_Range16(65345LLU,65350LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__HYPHEN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(45LLU,173LLU,128LLU),_234223e9b_Range16(1418LLU,6150LLU,4732LLU),_234223e9b_Range16(8208LLU,8209LLU,1LLU),_234223e9b_Range16(11799LLU,12539LLU,740LLU),_234223e9b_Range16(65123LLU,65293LLU,170LLU),_234223e9b_Range16(65381LLU,65381LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__IDS_BINARY_OPERATOR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(12272LLU,12273LLU,1LLU),_234223e9b_Range16(12276LLU,12283LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__IDS_TRINARY_OPERATOR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(12274LLU,12275LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__IDEOGRAPHIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(12294LLU,12295LLU,1LLU),_234223e9b_Range16(12321LLU,12329LLU,1LLU),_234223e9b_Range16(12344LLU,12346LLU,1LLU),_234223e9b_Range16(13312LLU,19903LLU,1LLU),_234223e9b_Range16(19968LLU,40959LLU,1LLU),_234223e9b_Range16(63744LLU,64109LLU,1LLU),_234223e9b_Range16(64112LLU,64217LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(94180LLU,94208LLU,28LLU),_234223e9b_Range32(94209LLU,100343LLU,1LLU),_234223e9b_Range32(100352LLU,101589LLU,1LLU),_234223e9b_Range32(101632LLU,101640LLU,1LLU),_234223e9b_Range32(110960LLU,111355LLU,1LLU),_234223e9b_Range32(131072LLU,173791LLU,1LLU),_234223e9b_Range32(173824LLU,177977LLU,1LLU),_234223e9b_Range32(177984LLU,178205LLU,1LLU),_234223e9b_Range32(178208LLU,183969LLU,1LLU),_234223e9b_Range32(183984LLU,191456LLU,1LLU),_234223e9b_Range32(194560LLU,195101LLU,1LLU),_234223e9b_Range32(196608LLU,201546LLU,1LLU),_234223e9b_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__JOIN_CONTROL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(8204LLU,8205LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__LOGICAL_ORDER_EXCEPTION = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(3648LLU,3652LLU,1LLU),_234223e9b_Range16(3776LLU,3780LLU,1LLU),_234223e9b_Range16(6581LLU,6583LLU,1LLU),_234223e9b_Range16(6586LLU,43701LLU,37115LLU),_234223e9b_Range16(43702LLU,43705LLU,3LLU),_234223e9b_Range16(43707LLU,43708LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__NONCHARACTER_CODE_POINT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(64976LLU,65007LLU,1LLU),_234223e9b_Range16(65534LLU,65535LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(131070LLU,131071LLU,1LLU),_234223e9b_Range32(196606LLU,196607LLU,1LLU),_234223e9b_Range32(262142LLU,262143LLU,1LLU),_234223e9b_Range32(327678LLU,327679LLU,1LLU),_234223e9b_Range32(393214LLU,393215LLU,1LLU),_234223e9b_Range32(458750LLU,458751LLU,1LLU),_234223e9b_Range32(524286LLU,524287LLU,1LLU),_234223e9b_Range32(589822LLU,589823LLU,1LLU),_234223e9b_Range32(655358LLU,655359LLU,1LLU),_234223e9b_Range32(720894LLU,720895LLU,1LLU),_234223e9b_Range32(786430LLU,786431LLU,1LLU),_234223e9b_Range32(851966LLU,851967LLU,1LLU),_234223e9b_Range32(917502LLU,917503LLU,1LLU),_234223e9b_Range32(983038LLU,983039LLU,1LLU),_234223e9b_Range32(1048574LLU,1048575LLU,1LLU),_234223e9b_Range32(1114110LLU,1114111LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_ALPHABETIC = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(837LLU,1456LLU,619LLU),_234223e9b_Range16(1457LLU,1469LLU,1LLU),_234223e9b_Range16(1471LLU,1473LLU,2LLU),_234223e9b_Range16(1474LLU,1476LLU,2LLU),_234223e9b_Range16(1477LLU,1479LLU,2LLU),_234223e9b_Range16(1552LLU,1562LLU,1LLU),_234223e9b_Range16(1611LLU,1623LLU,1LLU),_234223e9b_Range16(1625LLU,1631LLU,1LLU),_234223e9b_Range16(1648LLU,1750LLU,102LLU),_234223e9b_Range16(1751LLU,1756LLU,1LLU),_234223e9b_Range16(1761LLU,1764LLU,1LLU),_234223e9b_Range16(1767LLU,1768LLU,1LLU),_234223e9b_Range16(1773LLU,1809LLU,36LLU),_234223e9b_Range16(1840LLU,1855LLU,1LLU),_234223e9b_Range16(1958LLU,1968LLU,1LLU),_234223e9b_Range16(2070LLU,2071LLU,1LLU),_234223e9b_Range16(2075LLU,2083LLU,1LLU),_234223e9b_Range16(2085LLU,2087LLU,1LLU),_234223e9b_Range16(2089LLU,2092LLU,1LLU),_234223e9b_Range16(2260LLU,2271LLU,1LLU),_234223e9b_Range16(2275LLU,2281LLU,1LLU),_234223e9b_Range16(2288LLU,2307LLU,1LLU),_234223e9b_Range16(2362LLU,2363LLU,1LLU),_234223e9b_Range16(2366LLU,2380LLU,1LLU),_234223e9b_Range16(2382LLU,2383LLU,1LLU),_234223e9b_Range16(2389LLU,2391LLU,1LLU),_234223e9b_Range16(2402LLU,2403LLU,1LLU),_234223e9b_Range16(2433LLU,2435LLU,1LLU),_234223e9b_Range16(2494LLU,2500LLU,1LLU),_234223e9b_Range16(2503LLU,2504LLU,1LLU),_234223e9b_Range16(2507LLU,2508LLU,1LLU),_234223e9b_Range16(2519LLU,2530LLU,11LLU),_234223e9b_Range16(2531LLU,2561LLU,30LLU),_234223e9b_Range16(2562LLU,2563LLU,1LLU),_234223e9b_Range16(2622LLU,2626LLU,1LLU),_234223e9b_Range16(2631LLU,2632LLU,1LLU),_234223e9b_Range16(2635LLU,2636LLU,1LLU),_234223e9b_Range16(2641LLU,2672LLU,31LLU),_234223e9b_Range16(2673LLU,2677LLU,4LLU),_234223e9b_Range16(2689LLU,2691LLU,1LLU),_234223e9b_Range16(2750LLU,2757LLU,1LLU),_234223e9b_Range16(2759LLU,2761LLU,1LLU),_234223e9b_Range16(2763LLU,2764LLU,1LLU),_234223e9b_Range16(2786LLU,2787LLU,1LLU),_234223e9b_Range16(2810LLU,2812LLU,1LLU),_234223e9b_Range16(2817LLU,2819LLU,1LLU),_234223e9b_Range16(2878LLU,2884LLU,1LLU),_234223e9b_Range16(2887LLU,2888LLU,1LLU),_234223e9b_Range16(2891LLU,2892LLU,1LLU),_234223e9b_Range16(2902LLU,2903LLU,1LLU),_234223e9b_Range16(2914LLU,2915LLU,1LLU),_234223e9b_Range16(2946LLU,3006LLU,60LLU),_234223e9b_Range16(3007LLU,3010LLU,1LLU),_234223e9b_Range16(3014LLU,3016LLU,1LLU),_234223e9b_Range16(3018LLU,3020LLU,1LLU),_234223e9b_Range16(3031LLU,3072LLU,41LLU),_234223e9b_Range16(3073LLU,3076LLU,1LLU),_234223e9b_Range16(3134LLU,3140LLU,1LLU),_234223e9b_Range16(3142LLU,3144LLU,1LLU),_234223e9b_Range16(3146LLU,3148LLU,1LLU),_234223e9b_Range16(3157LLU,3158LLU,1LLU),_234223e9b_Range16(3170LLU,3171LLU,1LLU),_234223e9b_Range16(3201LLU,3203LLU,1LLU),_234223e9b_Range16(3262LLU,3268LLU,1LLU),_234223e9b_Range16(3270LLU,3272LLU,1LLU),_234223e9b_Range16(3274LLU,3276LLU,1LLU),_234223e9b_Range16(3285LLU,3286LLU,1LLU),_234223e9b_Range16(3298LLU,3299LLU,1LLU),_234223e9b_Range16(3315LLU,3328LLU,13LLU),_234223e9b_Range16(3329LLU,3331LLU,1LLU),_234223e9b_Range16(3390LLU,3396LLU,1LLU),_234223e9b_Range16(3398LLU,3400LLU,1LLU),_234223e9b_Range16(3402LLU,3404LLU,1LLU),_234223e9b_Range16(3415LLU,3426LLU,11LLU),_234223e9b_Range16(3427LLU,3457LLU,30LLU),_234223e9b_Range16(3458LLU,3459LLU,1LLU),_234223e9b_Range16(3535LLU,3540LLU,1LLU),_234223e9b_Range16(3542LLU,3544LLU,2LLU),_234223e9b_Range16(3545LLU,3551LLU,1LLU),_234223e9b_Range16(3570LLU,3571LLU,1LLU),_234223e9b_Range16(3633LLU,3636LLU,3LLU),_234223e9b_Range16(3637LLU,3642LLU,1LLU),_234223e9b_Range16(3661LLU,3761LLU,100LLU),_234223e9b_Range16(3764LLU,3769LLU,1LLU),_234223e9b_Range16(3771LLU,3772LLU,1LLU),_234223e9b_Range16(3789LLU,3953LLU,164LLU),_234223e9b_Range16(3954LLU,3971LLU,1LLU),_234223e9b_Range16(3981LLU,3991LLU,1LLU),_234223e9b_Range16(3993LLU,4028LLU,1LLU),_234223e9b_Range16(4139LLU,4150LLU,1LLU),_234223e9b_Range16(4152LLU,4155LLU,3LLU),_234223e9b_Range16(4156LLU,4158LLU,1LLU),_234223e9b_Range16(4182LLU,4185LLU,1LLU),_234223e9b_Range16(4190LLU,4192LLU,1LLU),_234223e9b_Range16(4194LLU,4196LLU,1LLU),_234223e9b_Range16(4199LLU,4205LLU,1LLU),_234223e9b_Range16(4209LLU,4212LLU,1LLU),_234223e9b_Range16(4226LLU,4237LLU,1LLU),_234223e9b_Range16(4239LLU,4250LLU,11LLU),_234223e9b_Range16(4251LLU,4253LLU,1LLU),_234223e9b_Range16(5906LLU,5907LLU,1LLU),_234223e9b_Range16(5938LLU,5939LLU,1LLU),_234223e9b_Range16(5970LLU,5971LLU,1LLU),_234223e9b_Range16(6002LLU,6003LLU,1LLU),_234223e9b_Range16(6070LLU,6088LLU,1LLU),_234223e9b_Range16(6277LLU,6278LLU,1LLU),_234223e9b_Range16(6313LLU,6432LLU,119LLU),_234223e9b_Range16(6433LLU,6443LLU,1LLU),_234223e9b_Range16(6448LLU,6456LLU,1LLU),_234223e9b_Range16(6679LLU,6683LLU,1LLU),_234223e9b_Range16(6741LLU,6750LLU,1LLU),_234223e9b_Range16(6753LLU,6772LLU,1LLU),_234223e9b_Range16(6847LLU,6848LLU,1LLU),_234223e9b_Range16(6860LLU,6862LLU,1LLU),_234223e9b_Range16(6912LLU,6916LLU,1LLU),_234223e9b_Range16(6965LLU,6979LLU,1LLU),_234223e9b_Range16(7040LLU,7042LLU,1LLU),_234223e9b_Range16(7073LLU,7081LLU,1LLU),_234223e9b_Range16(7084LLU,7085LLU,1LLU),_234223e9b_Range16(7143LLU,7153LLU,1LLU),_234223e9b_Range16(7204LLU,7222LLU,1LLU),_234223e9b_Range16(7655LLU,7668LLU,1LLU),_234223e9b_Range16(9398LLU,9449LLU,1LLU),_234223e9b_Range16(11744LLU,11775LLU,1LLU),_234223e9b_Range16(42612LLU,42619LLU,1LLU),_234223e9b_Range16(42654LLU,42655LLU,1LLU),_234223e9b_Range16(43010LLU,43019LLU,9LLU),_234223e9b_Range16(43043LLU,43047LLU,1LLU),_234223e9b_Range16(43136LLU,43137LLU,1LLU),_234223e9b_Range16(43188LLU,43203LLU,1LLU),_234223e9b_Range16(43205LLU,43263LLU,58LLU),_234223e9b_Range16(43302LLU,43306LLU,1LLU),_234223e9b_Range16(43335LLU,43346LLU,1LLU),_234223e9b_Range16(43392LLU,43395LLU,1LLU),_234223e9b_Range16(43444LLU,43455LLU,1LLU),_234223e9b_Range16(43493LLU,43561LLU,68LLU),_234223e9b_Range16(43562LLU,43574LLU,1LLU),_234223e9b_Range16(43587LLU,43596LLU,9LLU),_234223e9b_Range16(43597LLU,43643LLU,46LLU),_234223e9b_Range16(43644LLU,43645LLU,1LLU),_234223e9b_Range16(43696LLU,43698LLU,2LLU),_234223e9b_Range16(43699LLU,43700LLU,1LLU),_234223e9b_Range16(43703LLU,43704LLU,1LLU),_234223e9b_Range16(43710LLU,43755LLU,45LLU),_234223e9b_Range16(43756LLU,43759LLU,1LLU),_234223e9b_Range16(43765LLU,44003LLU,238LLU),_234223e9b_Range16(44004LLU,44010LLU,1LLU),_234223e9b_Range16(64286LLU,64286LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66422LLU,66426LLU,1LLU),_234223e9b_Range32(68097LLU,68099LLU,1LLU),_234223e9b_Range32(68101LLU,68102LLU,1LLU),_234223e9b_Range32(68108LLU,68111LLU,1LLU),_234223e9b_Range32(68900LLU,68903LLU,1LLU),_234223e9b_Range32(69291LLU,69292LLU,1LLU),_234223e9b_Range32(69632LLU,69634LLU,1LLU),_234223e9b_Range32(69688LLU,69701LLU,1LLU),_234223e9b_Range32(69747LLU,69748LLU,1LLU),_234223e9b_Range32(69760LLU,69762LLU,1LLU),_234223e9b_Range32(69808LLU,69816LLU,1LLU),_234223e9b_Range32(69826LLU,69888LLU,62LLU),_234223e9b_Range32(69889LLU,69890LLU,1LLU),_234223e9b_Range32(69927LLU,69938LLU,1LLU),_234223e9b_Range32(69957LLU,69958LLU,1LLU),_234223e9b_Range32(70016LLU,70018LLU,1LLU),_234223e9b_Range32(70067LLU,70079LLU,1LLU),_234223e9b_Range32(70094LLU,70095LLU,1LLU),_234223e9b_Range32(70188LLU,70196LLU,1LLU),_234223e9b_Range32(70199LLU,70206LLU,7LLU),_234223e9b_Range32(70209LLU,70367LLU,158LLU),_234223e9b_Range32(70368LLU,70376LLU,1LLU),_234223e9b_Range32(70400LLU,70403LLU,1LLU),_234223e9b_Range32(70462LLU,70468LLU,1LLU),_234223e9b_Range32(70471LLU,70472LLU,1LLU),_234223e9b_Range32(70475LLU,70476LLU,1LLU),_234223e9b_Range32(70487LLU,70498LLU,11LLU),_234223e9b_Range32(70499LLU,70709LLU,210LLU),_234223e9b_Range32(70710LLU,70721LLU,1LLU),_234223e9b_Range32(70723LLU,70725LLU,1LLU),_234223e9b_Range32(70832LLU,70849LLU,1LLU),_234223e9b_Range32(71087LLU,71093LLU,1LLU),_234223e9b_Range32(71096LLU,71102LLU,1LLU),_234223e9b_Range32(71132LLU,71133LLU,1LLU),_234223e9b_Range32(71216LLU,71230LLU,1LLU),_234223e9b_Range32(71232LLU,71339LLU,107LLU),_234223e9b_Range32(71340LLU,71349LLU,1LLU),_234223e9b_Range32(71453LLU,71466LLU,1LLU),_234223e9b_Range32(71724LLU,71736LLU,1LLU),_234223e9b_Range32(71984LLU,71989LLU,1LLU),_234223e9b_Range32(71991LLU,71992LLU,1LLU),_234223e9b_Range32(71995LLU,71996LLU,1LLU),_234223e9b_Range32(72000LLU,72002LLU,2LLU),_234223e9b_Range32(72145LLU,72151LLU,1LLU),_234223e9b_Range32(72154LLU,72159LLU,1LLU),_234223e9b_Range32(72164LLU,72193LLU,29LLU),_234223e9b_Range32(72194LLU,72202LLU,1LLU),_234223e9b_Range32(72245LLU,72249LLU,1LLU),_234223e9b_Range32(72251LLU,72254LLU,1LLU),_234223e9b_Range32(72273LLU,72283LLU,1LLU),_234223e9b_Range32(72330LLU,72343LLU,1LLU),_234223e9b_Range32(72751LLU,72758LLU,1LLU),_234223e9b_Range32(72760LLU,72766LLU,1LLU),_234223e9b_Range32(72850LLU,72871LLU,1LLU),_234223e9b_Range32(72873LLU,72886LLU,1LLU),_234223e9b_Range32(73009LLU,73014LLU,1LLU),_234223e9b_Range32(73018LLU,73020LLU,2LLU),_234223e9b_Range32(73021LLU,73023LLU,2LLU),_234223e9b_Range32(73024LLU,73025LLU,1LLU),_234223e9b_Range32(73027LLU,73031LLU,4LLU),_234223e9b_Range32(73098LLU,73102LLU,1LLU),_234223e9b_Range32(73104LLU,73105LLU,1LLU),_234223e9b_Range32(73107LLU,73110LLU,1LLU),_234223e9b_Range32(73459LLU,73462LLU,1LLU),_234223e9b_Range32(73472LLU,73473LLU,1LLU),_234223e9b_Range32(73475LLU,73524LLU,49LLU),_234223e9b_Range32(73525LLU,73530LLU,1LLU),_234223e9b_Range32(73534LLU,73536LLU,1LLU),_234223e9b_Range32(94031LLU,94033LLU,2LLU),_234223e9b_Range32(94034LLU,94087LLU,1LLU),_234223e9b_Range32(94095LLU,94098LLU,1LLU),_234223e9b_Range32(94192LLU,94193LLU,1LLU),_234223e9b_Range32(113822LLU,122880LLU,9058LLU),_234223e9b_Range32(122881LLU,122886LLU,1LLU),_234223e9b_Range32(122888LLU,122904LLU,1LLU),_234223e9b_Range32(122907LLU,122913LLU,1LLU),_234223e9b_Range32(122915LLU,122916LLU,1LLU),_234223e9b_Range32(122918LLU,122922LLU,1LLU),_234223e9b_Range32(123023LLU,125255LLU,2232LLU),_234223e9b_Range32(127280LLU,127305LLU,1LLU),_234223e9b_Range32(127312LLU,127337LLU,1LLU),_234223e9b_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_DEFAULT_IGNORABLE_CODE_POINT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(847LLU,4447LLU,3600LLU),_234223e9b_Range16(4448LLU,6068LLU,1620LLU),_234223e9b_Range16(6069LLU,8293LLU,2224LLU),_234223e9b_Range16(12644LLU,65440LLU,52796LLU),_234223e9b_Range16(65520LLU,65528LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(917504LLU,917506LLU,2LLU),_234223e9b_Range32(917507LLU,917535LLU,1LLU),_234223e9b_Range32(917632LLU,917759LLU,1LLU),_234223e9b_Range32(918000LLU,921599LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_GRAPHEME_EXTEND = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(2494LLU,2519LLU,25LLU),_234223e9b_Range16(2878LLU,2903LLU,25LLU),_234223e9b_Range16(3006LLU,3031LLU,25LLU),_234223e9b_Range16(3266LLU,3285LLU,19LLU),_234223e9b_Range16(3286LLU,3390LLU,104LLU),_234223e9b_Range16(3415LLU,3535LLU,120LLU),_234223e9b_Range16(3551LLU,6965LLU,3414LLU),_234223e9b_Range16(8204LLU,12334LLU,4130LLU),_234223e9b_Range16(12335LLU,65438LLU,53103LLU),_234223e9b_Range16(65439LLU,65439LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(70462LLU,70487LLU,25LLU),_234223e9b_Range32(70832LLU,70845LLU,13LLU),_234223e9b_Range32(71087LLU,71984LLU,897LLU),_234223e9b_Range32(119141LLU,119150LLU,9LLU),_234223e9b_Range32(119151LLU,119154LLU,1LLU),_234223e9b_Range32(917536LLU,917631LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_ID_CONTINUE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(183LLU,903LLU,720LLU),_234223e9b_Range16(4969LLU,4977LLU,1LLU),_234223e9b_Range16(6618LLU,6618LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_ID_START = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6277LLU,6278LLU,1LLU),_234223e9b_Range16(8472LLU,8494LLU,22LLU),_234223e9b_Range16(12443LLU,12444LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_LOWERCASE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(170LLU,186LLU,16LLU),_234223e9b_Range16(688LLU,696LLU,1LLU),_234223e9b_Range16(704LLU,705LLU,1LLU),_234223e9b_Range16(736LLU,740LLU,1LLU),_234223e9b_Range16(837LLU,890LLU,53LLU),_234223e9b_Range16(4348LLU,7468LLU,3120LLU),_234223e9b_Range16(7469LLU,7530LLU,1LLU),_234223e9b_Range16(7544LLU,7579LLU,35LLU),_234223e9b_Range16(7580LLU,7615LLU,1LLU),_234223e9b_Range16(8305LLU,8319LLU,14LLU),_234223e9b_Range16(8336LLU,8348LLU,1LLU),_234223e9b_Range16(8560LLU,8575LLU,1LLU),_234223e9b_Range16(9424LLU,9449LLU,1LLU),_234223e9b_Range16(11388LLU,11389LLU,1LLU),_234223e9b_Range16(42652LLU,42653LLU,1LLU),_234223e9b_Range16(42864LLU,42994LLU,130LLU),_234223e9b_Range16(42995LLU,42996LLU,1LLU),_234223e9b_Range16(43000LLU,43001LLU,1LLU),_234223e9b_Range16(43868LLU,43871LLU,1LLU),_234223e9b_Range16(43881LLU,43881LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(67456LLU,67459LLU,3LLU),_234223e9b_Range32(67460LLU,67461LLU,1LLU),_234223e9b_Range32(67463LLU,67504LLU,1LLU),_234223e9b_Range32(67506LLU,67514LLU,1LLU),_234223e9b_Range32(122928LLU,122989LLU,1LLU)}),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_MATH = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(94LLU,976LLU,882LLU),_234223e9b_Range16(977LLU,978LLU,1LLU),_234223e9b_Range16(981LLU,1008LLU,27LLU),_234223e9b_Range16(1009LLU,1012LLU,3LLU),_234223e9b_Range16(1013LLU,8214LLU,7201LLU),_234223e9b_Range16(8242LLU,8244LLU,1LLU),_234223e9b_Range16(8256LLU,8289LLU,33LLU),_234223e9b_Range16(8290LLU,8292LLU,1LLU),_234223e9b_Range16(8317LLU,8318LLU,1LLU),_234223e9b_Range16(8333LLU,8334LLU,1LLU),_234223e9b_Range16(8400LLU,8412LLU,1LLU),_234223e9b_Range16(8417LLU,8421LLU,4LLU),_234223e9b_Range16(8422LLU,8427LLU,5LLU),_234223e9b_Range16(8428LLU,8431LLU,1LLU),_234223e9b_Range16(8450LLU,8455LLU,5LLU),_234223e9b_Range16(8458LLU,8467LLU,1LLU),_234223e9b_Range16(8469LLU,8473LLU,4LLU),_234223e9b_Range16(8474LLU,8477LLU,1LLU),_234223e9b_Range16(8484LLU,8488LLU,4LLU),_234223e9b_Range16(8489LLU,8492LLU,3LLU),_234223e9b_Range16(8493LLU,8495LLU,2LLU),_234223e9b_Range16(8496LLU,8497LLU,1LLU),_234223e9b_Range16(8499LLU,8504LLU,1LLU),_234223e9b_Range16(8508LLU,8511LLU,1LLU),_234223e9b_Range16(8517LLU,8521LLU,1LLU),_234223e9b_Range16(8597LLU,8601LLU,1LLU),_234223e9b_Range16(8604LLU,8607LLU,1LLU),_234223e9b_Range16(8609LLU,8610LLU,1LLU),_234223e9b_Range16(8612LLU,8613LLU,1LLU),_234223e9b_Range16(8615LLU,8617LLU,2LLU),_234223e9b_Range16(8618LLU,8621LLU,1LLU),_234223e9b_Range16(8624LLU,8625LLU,1LLU),_234223e9b_Range16(8630LLU,8631LLU,1LLU),_234223e9b_Range16(8636LLU,8653LLU,1LLU),_234223e9b_Range16(8656LLU,8657LLU,1LLU),_234223e9b_Range16(8659LLU,8661LLU,2LLU),_234223e9b_Range16(8662LLU,8667LLU,1LLU),_234223e9b_Range16(8669LLU,8676LLU,7LLU),_234223e9b_Range16(8677LLU,8968LLU,291LLU),_234223e9b_Range16(8969LLU,8971LLU,1LLU),_234223e9b_Range16(9140LLU,9141LLU,1LLU),_234223e9b_Range16(9143LLU,9168LLU,25LLU),_234223e9b_Range16(9186LLU,9632LLU,446LLU),_234223e9b_Range16(9633LLU,9646LLU,13LLU),_234223e9b_Range16(9647LLU,9654LLU,1LLU),_234223e9b_Range16(9660LLU,9664LLU,1LLU),_234223e9b_Range16(9670LLU,9671LLU,1LLU),_234223e9b_Range16(9674LLU,9675LLU,1LLU),_234223e9b_Range16(9679LLU,9683LLU,1LLU),_234223e9b_Range16(9698LLU,9700LLU,2LLU),_234223e9b_Range16(9703LLU,9708LLU,1LLU),_234223e9b_Range16(9733LLU,9734LLU,1LLU),_234223e9b_Range16(9792LLU,9794LLU,2LLU),_234223e9b_Range16(9824LLU,9827LLU,1LLU),_234223e9b_Range16(9837LLU,9838LLU,1LLU),_234223e9b_Range16(10181LLU,10182LLU,1LLU),_234223e9b_Range16(10214LLU,10223LLU,1LLU),_234223e9b_Range16(10627LLU,10648LLU,1LLU),_234223e9b_Range16(10712LLU,10715LLU,1LLU),_234223e9b_Range16(10748LLU,10749LLU,1LLU),_234223e9b_Range16(65121LLU,65123LLU,2LLU),_234223e9b_Range16(65128LLU,65340LLU,212LLU),_234223e9b_Range16(65342LLU,65342LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(119808LLU,119892LLU,1LLU),_234223e9b_Range32(119894LLU,119964LLU,1LLU),_234223e9b_Range32(119966LLU,119967LLU,1LLU),_234223e9b_Range32(119970LLU,119973LLU,3LLU),_234223e9b_Range32(119974LLU,119977LLU,3LLU),_234223e9b_Range32(119978LLU,119980LLU,1LLU),_234223e9b_Range32(119982LLU,119993LLU,1LLU),_234223e9b_Range32(119995LLU,119997LLU,2LLU),_234223e9b_Range32(119998LLU,120003LLU,1LLU),_234223e9b_Range32(120005LLU,120069LLU,1LLU),_234223e9b_Range32(120071LLU,120074LLU,1LLU),_234223e9b_Range32(120077LLU,120084LLU,1LLU),_234223e9b_Range32(120086LLU,120092LLU,1LLU),_234223e9b_Range32(120094LLU,120121LLU,1LLU),_234223e9b_Range32(120123LLU,120126LLU,1LLU),_234223e9b_Range32(120128LLU,120132LLU,1LLU),_234223e9b_Range32(120134LLU,120138LLU,4LLU),_234223e9b_Range32(120139LLU,120144LLU,1LLU),_234223e9b_Range32(120146LLU,120485LLU,1LLU),_234223e9b_Range32(120488LLU,120512LLU,1LLU),_234223e9b_Range32(120514LLU,120538LLU,1LLU),_234223e9b_Range32(120540LLU,120570LLU,1LLU),_234223e9b_Range32(120572LLU,120596LLU,1LLU),_234223e9b_Range32(120598LLU,120628LLU,1LLU),_234223e9b_Range32(120630LLU,120654LLU,1LLU),_234223e9b_Range32(120656LLU,120686LLU,1LLU),_234223e9b_Range32(120688LLU,120712LLU,1LLU),_234223e9b_Range32(120714LLU,120744LLU,1LLU),_234223e9b_Range32(120746LLU,120770LLU,1LLU),_234223e9b_Range32(120772LLU,120779LLU,1LLU),_234223e9b_Range32(120782LLU,120831LLU,1LLU),_234223e9b_Range32(126464LLU,126467LLU,1LLU),_234223e9b_Range32(126469LLU,126495LLU,1LLU),_234223e9b_Range32(126497LLU,126498LLU,1LLU),_234223e9b_Range32(126500LLU,126503LLU,3LLU),_234223e9b_Range32(126505LLU,126514LLU,1LLU),_234223e9b_Range32(126516LLU,126519LLU,1LLU),_234223e9b_Range32(126521LLU,126523LLU,2LLU),_234223e9b_Range32(126530LLU,126535LLU,5LLU),_234223e9b_Range32(126537LLU,126541LLU,2LLU),_234223e9b_Range32(126542LLU,126543LLU,1LLU),_234223e9b_Range32(126545LLU,126546LLU,1LLU),_234223e9b_Range32(126548LLU,126551LLU,3LLU),_234223e9b_Range32(126553LLU,126561LLU,2LLU),_234223e9b_Range32(126562LLU,126564LLU,2LLU),_234223e9b_Range32(126567LLU,126570LLU,1LLU),_234223e9b_Range32(126572LLU,126578LLU,1LLU),_234223e9b_Range32(126580LLU,126583LLU,1LLU),_234223e9b_Range32(126585LLU,126588LLU,1LLU),_234223e9b_Range32(126590LLU,126592LLU,2LLU),_234223e9b_Range32(126593LLU,126601LLU,1LLU),_234223e9b_Range32(126603LLU,126619LLU,1LLU),_234223e9b_Range32(126625LLU,126627LLU,1LLU),_234223e9b_Range32(126629LLU,126633LLU,1LLU),_234223e9b_Range32(126635LLU,126651LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__OTHER_UPPERCASE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(8544LLU,8559LLU,1LLU),_234223e9b_Range16(9398LLU,9423LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(127280LLU,127305LLU,1LLU),_234223e9b_Range32(127312LLU,127337LLU,1LLU),_234223e9b_Range32(127344LLU,127369LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PATTERN_SYNTAX = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(33LLU,47LLU,1LLU),_234223e9b_Range16(58LLU,64LLU,1LLU),_234223e9b_Range16(91LLU,94LLU,1LLU),_234223e9b_Range16(96LLU,123LLU,27LLU),_234223e9b_Range16(124LLU,126LLU,1LLU),_234223e9b_Range16(161LLU,167LLU,1LLU),_234223e9b_Range16(169LLU,171LLU,2LLU),_234223e9b_Range16(172LLU,176LLU,2LLU),_234223e9b_Range16(177LLU,187LLU,5LLU),_234223e9b_Range16(191LLU,215LLU,24LLU),_234223e9b_Range16(247LLU,8208LLU,7961LLU),_234223e9b_Range16(8209LLU,8231LLU,1LLU),_234223e9b_Range16(8240LLU,8254LLU,1LLU),_234223e9b_Range16(8257LLU,8275LLU,1LLU),_234223e9b_Range16(8277LLU,8286LLU,1LLU),_234223e9b_Range16(8592LLU,9311LLU,1LLU),_234223e9b_Range16(9472LLU,10101LLU,1LLU),_234223e9b_Range16(10132LLU,11263LLU,1LLU),_234223e9b_Range16(11776LLU,11903LLU,1LLU),_234223e9b_Range16(12289LLU,12291LLU,1LLU),_234223e9b_Range16(12296LLU,12320LLU,1LLU),_234223e9b_Range16(12336LLU,64830LLU,52494LLU),_234223e9b_Range16(64831LLU,65093LLU,262LLU),_234223e9b_Range16(65094LLU,65094LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),10LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PATTERN_WHITE_SPACE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(9LLU,13LLU,1LLU),_234223e9b_Range16(32LLU,133LLU,101LLU),_234223e9b_Range16(8206LLU,8207LLU,1LLU),_234223e9b_Range16(8232LLU,8233LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),2LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__PREPENDED_CONCATENATION_MARK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(1536LLU,1541LLU,1LLU),_234223e9b_Range16(1757LLU,1807LLU,50LLU),_234223e9b_Range16(2192LLU,2193LLU,1LLU),_234223e9b_Range16(2274LLU,2274LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(69821LLU,69837LLU,16LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__QUOTATION_MARK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(34LLU,39LLU,5LLU),_234223e9b_Range16(171LLU,187LLU,16LLU),_234223e9b_Range16(8216LLU,8223LLU,1LLU),_234223e9b_Range16(8249LLU,8250LLU,1LLU),_234223e9b_Range16(11842LLU,12300LLU,458LLU),_234223e9b_Range16(12301LLU,12303LLU,1LLU),_234223e9b_Range16(12317LLU,12319LLU,1LLU),_234223e9b_Range16(65089LLU,65092LLU,1LLU),_234223e9b_Range16(65282LLU,65287LLU,5LLU),_234223e9b_Range16(65378LLU,65379LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),2LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__RADICAL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(11904LLU,11929LLU,1LLU),_234223e9b_Range16(11931LLU,12019LLU,1LLU),_234223e9b_Range16(12032LLU,12245LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__REGIONAL_INDICATOR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(127462LLU,127487LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SENTENCE_TERMINAL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(33LLU,46LLU,13LLU),_234223e9b_Range16(63LLU,1417LLU,1354LLU),_234223e9b_Range16(1565LLU,1567LLU,1LLU),_234223e9b_Range16(1748LLU,1792LLU,44LLU),_234223e9b_Range16(1793LLU,1794LLU,1LLU),_234223e9b_Range16(2041LLU,2103LLU,62LLU),_234223e9b_Range16(2105LLU,2109LLU,4LLU),_234223e9b_Range16(2110LLU,2404LLU,294LLU),_234223e9b_Range16(2405LLU,4170LLU,1765LLU),_234223e9b_Range16(4171LLU,4962LLU,791LLU),_234223e9b_Range16(4967LLU,4968LLU,1LLU),_234223e9b_Range16(5742LLU,5941LLU,199LLU),_234223e9b_Range16(5942LLU,6147LLU,205LLU),_234223e9b_Range16(6153LLU,6468LLU,315LLU),_234223e9b_Range16(6469LLU,6824LLU,355LLU),_234223e9b_Range16(6825LLU,6827LLU,1LLU),_234223e9b_Range16(7002LLU,7003LLU,1LLU),_234223e9b_Range16(7006LLU,7007LLU,1LLU),_234223e9b_Range16(7037LLU,7038LLU,1LLU),_234223e9b_Range16(7227LLU,7228LLU,1LLU),_234223e9b_Range16(7294LLU,7295LLU,1LLU),_234223e9b_Range16(8252LLU,8253LLU,1LLU),_234223e9b_Range16(8263LLU,8265LLU,1LLU),_234223e9b_Range16(11822LLU,11836LLU,14LLU),_234223e9b_Range16(11859LLU,11860LLU,1LLU),_234223e9b_Range16(12290LLU,42239LLU,29949LLU),_234223e9b_Range16(42510LLU,42511LLU,1LLU),_234223e9b_Range16(42739LLU,42743LLU,4LLU),_234223e9b_Range16(43126LLU,43127LLU,1LLU),_234223e9b_Range16(43214LLU,43215LLU,1LLU),_234223e9b_Range16(43311LLU,43464LLU,153LLU),_234223e9b_Range16(43465LLU,43613LLU,148LLU),_234223e9b_Range16(43614LLU,43615LLU,1LLU),_234223e9b_Range16(43760LLU,43761LLU,1LLU),_234223e9b_Range16(44011LLU,65106LLU,21095LLU),_234223e9b_Range16(65110LLU,65111LLU,1LLU),_234223e9b_Range16(65281LLU,65294LLU,13LLU),_234223e9b_Range16(65311LLU,65377LLU,66LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(68182LLU,68183LLU,1LLU),_234223e9b_Range32(69461LLU,69465LLU,1LLU),_234223e9b_Range32(69510LLU,69513LLU,1LLU),_234223e9b_Range32(69703LLU,69704LLU,1LLU),_234223e9b_Range32(69822LLU,69825LLU,1LLU),_234223e9b_Range32(69953LLU,69955LLU,1LLU),_234223e9b_Range32(70085LLU,70086LLU,1LLU),_234223e9b_Range32(70093LLU,70110LLU,17LLU),_234223e9b_Range32(70111LLU,70200LLU,89LLU),_234223e9b_Range32(70201LLU,70203LLU,2LLU),_234223e9b_Range32(70204LLU,70313LLU,109LLU),_234223e9b_Range32(70731LLU,70732LLU,1LLU),_234223e9b_Range32(71106LLU,71107LLU,1LLU),_234223e9b_Range32(71113LLU,71127LLU,1LLU),_234223e9b_Range32(71233LLU,71234LLU,1LLU),_234223e9b_Range32(71484LLU,71486LLU,1LLU),_234223e9b_Range32(72004LLU,72006LLU,2LLU),_234223e9b_Range32(72258LLU,72259LLU,1LLU),_234223e9b_Range32(72347LLU,72348LLU,1LLU),_234223e9b_Range32(72769LLU,72770LLU,1LLU),_234223e9b_Range32(73463LLU,73464LLU,1LLU),_234223e9b_Range32(73539LLU,73540LLU,1LLU),_234223e9b_Range32(92782LLU,92783LLU,1LLU),_234223e9b_Range32(92917LLU,92983LLU,66LLU),_234223e9b_Range32(92984LLU,92996LLU,12LLU),_234223e9b_Range32(93848LLU,113823LLU,19975LLU),_234223e9b_Range32(121480LLU,121480LLU,1LLU)}),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__SOFT_DOTTED = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(105LLU,106LLU,1LLU),_234223e9b_Range16(303LLU,585LLU,282LLU),_234223e9b_Range16(616LLU,669LLU,53LLU),_234223e9b_Range16(690LLU,1011LLU,321LLU),_234223e9b_Range16(1110LLU,1112LLU,2LLU),_234223e9b_Range16(7522LLU,7574LLU,52LLU),_234223e9b_Range16(7588LLU,7592LLU,4LLU),_234223e9b_Range16(7725LLU,7883LLU,158LLU),_234223e9b_Range16(8305LLU,8520LLU,215LLU),_234223e9b_Range16(8521LLU,11388LLU,2867LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(119842LLU,119843LLU,1LLU),_234223e9b_Range32(119894LLU,119895LLU,1LLU),_234223e9b_Range32(119946LLU,119947LLU,1LLU),_234223e9b_Range32(119998LLU,119999LLU,1LLU),_234223e9b_Range32(120050LLU,120051LLU,1LLU),_234223e9b_Range32(120102LLU,120103LLU,1LLU),_234223e9b_Range32(120154LLU,120155LLU,1LLU),_234223e9b_Range32(120206LLU,120207LLU,1LLU),_234223e9b_Range32(120258LLU,120259LLU,1LLU),_234223e9b_Range32(120310LLU,120311LLU,1LLU),_234223e9b_Range32(120362LLU,120363LLU,1LLU),_234223e9b_Range32(120414LLU,120415LLU,1LLU),_234223e9b_Range32(120466LLU,120467LLU,1LLU),_234223e9b_Range32(122650LLU,122956LLU,306LLU),_234223e9b_Range32(122957LLU,122984LLU,27LLU)}),1LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__TERMINAL_PUNCTUATION = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(33LLU,44LLU,11LLU),_234223e9b_Range16(46LLU,58LLU,12LLU),_234223e9b_Range16(59LLU,63LLU,4LLU),_234223e9b_Range16(894LLU,903LLU,9LLU),_234223e9b_Range16(1417LLU,1475LLU,58LLU),_234223e9b_Range16(1548LLU,1563LLU,15LLU),_234223e9b_Range16(1565LLU,1567LLU,1LLU),_234223e9b_Range16(1748LLU,1792LLU,44LLU),_234223e9b_Range16(1793LLU,1802LLU,1LLU),_234223e9b_Range16(1804LLU,2040LLU,236LLU),_234223e9b_Range16(2041LLU,2096LLU,55LLU),_234223e9b_Range16(2097LLU,2110LLU,1LLU),_234223e9b_Range16(2142LLU,2404LLU,262LLU),_234223e9b_Range16(2405LLU,3674LLU,1269LLU),_234223e9b_Range16(3675LLU,3848LLU,173LLU),_234223e9b_Range16(3853LLU,3858LLU,1LLU),_234223e9b_Range16(4170LLU,4171LLU,1LLU),_234223e9b_Range16(4961LLU,4968LLU,1LLU),_234223e9b_Range16(5742LLU,5867LLU,125LLU),_234223e9b_Range16(5868LLU,5869LLU,1LLU),_234223e9b_Range16(5941LLU,5942LLU,1LLU),_234223e9b_Range16(6100LLU,6102LLU,1LLU),_234223e9b_Range16(6106LLU,6146LLU,40LLU),_234223e9b_Range16(6147LLU,6149LLU,1LLU),_234223e9b_Range16(6152LLU,6153LLU,1LLU),_234223e9b_Range16(6468LLU,6469LLU,1LLU),_234223e9b_Range16(6824LLU,6827LLU,1LLU),_234223e9b_Range16(7002LLU,7003LLU,1LLU),_234223e9b_Range16(7005LLU,7007LLU,1LLU),_234223e9b_Range16(7037LLU,7038LLU,1LLU),_234223e9b_Range16(7227LLU,7231LLU,1LLU),_234223e9b_Range16(7294LLU,7295LLU,1LLU),_234223e9b_Range16(8252LLU,8253LLU,1LLU),_234223e9b_Range16(8263LLU,8265LLU,1LLU),_234223e9b_Range16(11822LLU,11836LLU,14LLU),_234223e9b_Range16(11841LLU,11852LLU,11LLU),_234223e9b_Range16(11854LLU,11855LLU,1LLU),_234223e9b_Range16(11859LLU,11860LLU,1LLU),_234223e9b_Range16(12289LLU,12290LLU,1LLU),_234223e9b_Range16(42238LLU,42239LLU,1LLU),_234223e9b_Range16(42509LLU,42511LLU,1LLU),_234223e9b_Range16(42739LLU,42743LLU,1LLU),_234223e9b_Range16(43126LLU,43127LLU,1LLU),_234223e9b_Range16(43214LLU,43215LLU,1LLU),_234223e9b_Range16(43311LLU,43463LLU,152LLU),_234223e9b_Range16(43464LLU,43465LLU,1LLU),_234223e9b_Range16(43613LLU,43615LLU,1LLU),_234223e9b_Range16(43743LLU,43760LLU,17LLU),_234223e9b_Range16(43761LLU,44011LLU,250LLU),_234223e9b_Range16(65104LLU,65106LLU,1LLU),_234223e9b_Range16(65108LLU,65111LLU,1LLU),_234223e9b_Range16(65281LLU,65292LLU,11LLU),_234223e9b_Range16(65294LLU,65306LLU,12LLU),_234223e9b_Range16(65307LLU,65311LLU,4LLU),_234223e9b_Range16(65377LLU,65380LLU,3LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66463LLU,66512LLU,49LLU),_234223e9b_Range32(67671LLU,67871LLU,200LLU),_234223e9b_Range32(68182LLU,68183LLU,1LLU),_234223e9b_Range32(68336LLU,68341LLU,1LLU),_234223e9b_Range32(68410LLU,68415LLU,1LLU),_234223e9b_Range32(68505LLU,68508LLU,1LLU),_234223e9b_Range32(69461LLU,69465LLU,1LLU),_234223e9b_Range32(69510LLU,69513LLU,1LLU),_234223e9b_Range32(69703LLU,69709LLU,1LLU),_234223e9b_Range32(69822LLU,69825LLU,1LLU),_234223e9b_Range32(69953LLU,69955LLU,1LLU),_234223e9b_Range32(70085LLU,70086LLU,1LLU),_234223e9b_Range32(70093LLU,70110LLU,17LLU),_234223e9b_Range32(70111LLU,70200LLU,89LLU),_234223e9b_Range32(70201LLU,70204LLU,1LLU),_234223e9b_Range32(70313LLU,70731LLU,418LLU),_234223e9b_Range32(70732LLU,70733LLU,1LLU),_234223e9b_Range32(70746LLU,70747LLU,1LLU),_234223e9b_Range32(71106LLU,71109LLU,1LLU),_234223e9b_Range32(71113LLU,71127LLU,1LLU),_234223e9b_Range32(71233LLU,71234LLU,1LLU),_234223e9b_Range32(71484LLU,71486LLU,1LLU),_234223e9b_Range32(72004LLU,72006LLU,2LLU),_234223e9b_Range32(72258LLU,72259LLU,1LLU),_234223e9b_Range32(72347LLU,72348LLU,1LLU),_234223e9b_Range32(72353LLU,72354LLU,1LLU),_234223e9b_Range32(72769LLU,72771LLU,1LLU),_234223e9b_Range32(72817LLU,73463LLU,646LLU),_234223e9b_Range32(73464LLU,73539LLU,75LLU),_234223e9b_Range32(73540LLU,74864LLU,1324LLU),_234223e9b_Range32(74865LLU,74868LLU,1LLU),_234223e9b_Range32(92782LLU,92783LLU,1LLU),_234223e9b_Range32(92917LLU,92983LLU,66LLU),_234223e9b_Range32(92984LLU,92985LLU,1LLU),_234223e9b_Range32(92996LLU,93847LLU,851LLU),_234223e9b_Range32(93848LLU,113823LLU,19975LLU),_234223e9b_Range32(121479LLU,121482LLU,1LLU)}),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__UNIFIED_IDEOGRAPH = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(13312LLU,19903LLU,1LLU),_234223e9b_Range16(19968LLU,40959LLU,1LLU),_234223e9b_Range16(64014LLU,64015LLU,1LLU),_234223e9b_Range16(64017LLU,64019LLU,2LLU),_234223e9b_Range16(64020LLU,64031LLU,11LLU),_234223e9b_Range16(64033LLU,64035LLU,2LLU),_234223e9b_Range16(64036LLU,64039LLU,3LLU),_234223e9b_Range16(64040LLU,64041LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(131072LLU,173791LLU,1LLU),_234223e9b_Range32(173824LLU,177977LLU,1LLU),_234223e9b_Range32(177984LLU,178205LLU,1LLU),_234223e9b_Range32(178208LLU,183969LLU,1LLU),_234223e9b_Range32(183984LLU,191456LLU,1LLU),_234223e9b_Range32(196608LLU,201546LLU,1LLU),_234223e9b_Range32(201552LLU,205743LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__VARIATION_SELECTOR = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(6155LLU,6157LLU,1LLU),_234223e9b_Range16(6159LLU,65024LLU,58865LLU),_234223e9b_Range16(65025LLU,65039LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(917760LLU,917999LLU,1LLU)}),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d__WHITE_SPACE = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(9LLU,13LLU,1LLU),_234223e9b_Range16(32LLU,133LLU,101LLU),_234223e9b_Range16(160LLU,5760LLU,5600LLU),_234223e9b_Range16(8192LLU,8202LLU,1LLU),_234223e9b_Range16(8232LLU,8233LLU,1LLU),_234223e9b_Range16(8239LLU,8287LLU,48LLU),_234223e9b_Range16(12288LLU,12288LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),2LL));
static jule::Array<jule::U16,128> _23380876d_ASCII_FOLD = jule::Array<jule::U16,128>({0LLU,1LLU,2LLU,3LLU,4LLU,5LLU,6LLU,7LLU,8LLU,9LLU,10LLU,11LLU,12LLU,13LLU,14LLU,15LLU,16LLU,17LLU,18LLU,19LLU,20LLU,21LLU,22LLU,23LLU,24LLU,25LLU,26LLU,27LLU,28LLU,29LLU,30LLU,31LLU,32LLU,33LLU,34LLU,35LLU,36LLU,37LLU,38LLU,39LLU,40LLU,41LLU,42LLU,43LLU,44LLU,45LLU,46LLU,47LLU,48LLU,49LLU,50LLU,51LLU,52LLU,53LLU,54LLU,55LLU,56LLU,57LLU,58LLU,59LLU,60LLU,61LLU,62LLU,63LLU,64LLU,97LLU,98LLU,99LLU,100LLU,101LLU,102LLU,103LLU,104LLU,105LLU,106LLU,107LLU,108LLU,109LLU,110LLU,111LLU,112LLU,113LLU,114LLU,115LLU,116LLU,117LLU,118LLU,119LLU,120LLU,121LLU,122LLU,91LLU,92LLU,93LLU,94LLU,95LLU,96LLU,65LLU,66LLU,67LLU,68LLU,69LLU,70LLU,71LLU,72LLU,73LLU,74LLU,8490LLU,76LLU,77LLU,78LLU,79LLU,80LLU,81LLU,82LLU,383LLU,84LLU,85LLU,86LLU,87LLU,88LLU,89LLU,90LLU,123LLU,124LLU,125LLU,126LLU,127LLU});
static jule::Slice<_234223e9b_FoldPair> _23380876d_CASE_ORBIT = jule::Slice<_234223e9b_FoldPair>({_234223e9b_FoldPair(75LLU,107LLU),_234223e9b_FoldPair(83LLU,115LLU),_234223e9b_FoldPair(107LLU,8490LLU),_234223e9b_FoldPair(115LLU,383LLU),_234223e9b_FoldPair(181LLU,924LLU),_234223e9b_FoldPair(197LLU,229LLU),_234223e9b_FoldPair(223LLU,7838LLU),_234223e9b_FoldPair(229LLU,8491LLU),_234223e9b_FoldPair(304LLU,304LLU),_234223e9b_FoldPair(305LLU,305LLU),_234223e9b_FoldPair(383LLU,83LLU),_234223e9b_FoldPair(452LLU,453LLU),_234223e9b_FoldPair(453LLU,454LLU),_234223e9b_FoldPair(454LLU,452LLU),_234223e9b_FoldPair(455LLU,456LLU),_234223e9b_FoldPair(456LLU,457LLU),_234223e9b_FoldPair(457LLU,455LLU),_234223e9b_FoldPair(458LLU,459LLU),_234223e9b_FoldPair(459LLU,460LLU),_234223e9b_FoldPair(460LLU,458LLU),_234223e9b_FoldPair(497LLU,498LLU),_234223e9b_FoldPair(498LLU,499LLU),_234223e9b_FoldPair(499LLU,497LLU),_234223e9b_FoldPair(837LLU,921LLU),_234223e9b_FoldPair(914LLU,946LLU),_234223e9b_FoldPair(917LLU,949LLU),_234223e9b_FoldPair(920LLU,952LLU),_234223e9b_FoldPair(921LLU,953LLU),_234223e9b_FoldPair(922LLU,954LLU),_234223e9b_FoldPair(924LLU,956LLU),_234223e9b_FoldPair(928LLU,960LLU),_234223e9b_FoldPair(929LLU,961LLU),_234223e9b_FoldPair(931LLU,962LLU),_234223e9b_FoldPair(934LLU,966LLU),_234223e9b_FoldPair(937LLU,969LLU),_234223e9b_FoldPair(946LLU,976LLU),_234223e9b_FoldPair(949LLU,1013LLU),_234223e9b_FoldPair(952LLU,977LLU),_234223e9b_FoldPair(953LLU,8126LLU),_234223e9b_FoldPair(954LLU,1008LLU),_234223e9b_FoldPair(956LLU,181LLU),_234223e9b_FoldPair(960LLU,982LLU),_234223e9b_FoldPair(961LLU,1009LLU),_234223e9b_FoldPair(962LLU,963LLU),_234223e9b_FoldPair(963LLU,931LLU),_234223e9b_FoldPair(966LLU,981LLU),_234223e9b_FoldPair(969LLU,8486LLU),_234223e9b_FoldPair(976LLU,914LLU),_234223e9b_FoldPair(977LLU,1012LLU),_234223e9b_FoldPair(981LLU,934LLU),_234223e9b_FoldPair(982LLU,928LLU),_234223e9b_FoldPair(1008LLU,922LLU),_234223e9b_FoldPair(1009LLU,929LLU),_234223e9b_FoldPair(1012LLU,920LLU),_234223e9b_FoldPair(1013LLU,917LLU),_234223e9b_FoldPair(1042LLU,1074LLU),_234223e9b_FoldPair(1044LLU,1076LLU),_234223e9b_FoldPair(1054LLU,1086LLU),_234223e9b_FoldPair(1057LLU,1089LLU),_234223e9b_FoldPair(1058LLU,1090LLU),_234223e9b_FoldPair(1066LLU,1098LLU),_234223e9b_FoldPair(1074LLU,7296LLU),_234223e9b_FoldPair(1076LLU,7297LLU),_234223e9b_FoldPair(1086LLU,7298LLU),_234223e9b_FoldPair(1089LLU,7299LLU),_234223e9b_FoldPair(1090LLU,7300LLU),_234223e9b_FoldPair(1098LLU,7302LLU),_234223e9b_FoldPair(1122LLU,1123LLU),_234223e9b_FoldPair(1123LLU,7303LLU),_234223e9b_FoldPair(7296LLU,1042LLU),_234223e9b_FoldPair(7297LLU,1044LLU),_234223e9b_FoldPair(7298LLU,1054LLU),_234223e9b_FoldPair(7299LLU,1057LLU),_234223e9b_FoldPair(7300LLU,7301LLU),_234223e9b_FoldPair(7301LLU,1058LLU),_234223e9b_FoldPair(7302LLU,1066LLU),_234223e9b_FoldPair(7303LLU,1122LLU),_234223e9b_FoldPair(7304LLU,42570LLU),_234223e9b_FoldPair(7776LLU,7777LLU),_234223e9b_FoldPair(7777LLU,7835LLU),_234223e9b_FoldPair(7835LLU,7776LLU),_234223e9b_FoldPair(7838LLU,223LLU),_234223e9b_FoldPair(8126LLU,837LLU),_234223e9b_FoldPair(8486LLU,937LLU),_234223e9b_FoldPair(8490LLU,75LLU),_234223e9b_FoldPair(8491LLU,197LLU),_234223e9b_FoldPair(42570LLU,42571LLU),_234223e9b_FoldPair(42571LLU,7304LLU)});
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_L = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(837LLU,837LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_LL = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(65LLU,90LLU,1LLU),_234223e9b_Range16(192LLU,214LLU,1LLU),_234223e9b_Range16(216LLU,222LLU,1LLU),_234223e9b_Range16(256LLU,302LLU,2LLU),_234223e9b_Range16(306LLU,310LLU,2LLU),_234223e9b_Range16(313LLU,327LLU,2LLU),_234223e9b_Range16(330LLU,376LLU,2LLU),_234223e9b_Range16(377LLU,381LLU,2LLU),_234223e9b_Range16(385LLU,386LLU,1LLU),_234223e9b_Range16(388LLU,390LLU,2LLU),_234223e9b_Range16(391LLU,393LLU,2LLU),_234223e9b_Range16(394LLU,395LLU,1LLU),_234223e9b_Range16(398LLU,401LLU,1LLU),_234223e9b_Range16(403LLU,404LLU,1LLU),_234223e9b_Range16(406LLU,408LLU,1LLU),_234223e9b_Range16(412LLU,413LLU,1LLU),_234223e9b_Range16(415LLU,416LLU,1LLU),_234223e9b_Range16(418LLU,422LLU,2LLU),_234223e9b_Range16(423LLU,425LLU,2LLU),_234223e9b_Range16(428LLU,430LLU,2LLU),_234223e9b_Range16(431LLU,433LLU,2LLU),_234223e9b_Range16(434LLU,435LLU,1LLU),_234223e9b_Range16(437LLU,439LLU,2LLU),_234223e9b_Range16(440LLU,444LLU,4LLU),_234223e9b_Range16(452LLU,453LLU,1LLU),_234223e9b_Range16(455LLU,456LLU,1LLU),_234223e9b_Range16(458LLU,459LLU,1LLU),_234223e9b_Range16(461LLU,475LLU,2LLU),_234223e9b_Range16(478LLU,494LLU,2LLU),_234223e9b_Range16(497LLU,498LLU,1LLU),_234223e9b_Range16(500LLU,502LLU,2LLU),_234223e9b_Range16(503LLU,504LLU,1LLU),_234223e9b_Range16(506LLU,562LLU,2LLU),_234223e9b_Range16(570LLU,571LLU,1LLU),_234223e9b_Range16(573LLU,574LLU,1LLU),_234223e9b_Range16(577LLU,579LLU,2LLU),_234223e9b_Range16(580LLU,582LLU,1LLU),_234223e9b_Range16(584LLU,590LLU,2LLU),_234223e9b_Range16(837LLU,880LLU,43LLU),_234223e9b_Range16(882LLU,886LLU,4LLU),_234223e9b_Range16(895LLU,902LLU,7LLU),_234223e9b_Range16(904LLU,906LLU,1LLU),_234223e9b_Range16(908LLU,910LLU,2LLU),_234223e9b_Range16(911LLU,913LLU,2LLU),_234223e9b_Range16(914LLU,929LLU,1LLU),_234223e9b_Range16(931LLU,939LLU,1LLU),_234223e9b_Range16(975LLU,984LLU,9LLU),_234223e9b_Range16(986LLU,1006LLU,2LLU),_234223e9b_Range16(1012LLU,1015LLU,3LLU),_234223e9b_Range16(1017LLU,1018LLU,1LLU),_234223e9b_Range16(1021LLU,1071LLU,1LLU),_234223e9b_Range16(1120LLU,1152LLU,2LLU),_234223e9b_Range16(1162LLU,1216LLU,2LLU),_234223e9b_Range16(1217LLU,1229LLU,2LLU),_234223e9b_Range16(1232LLU,1326LLU,2LLU),_234223e9b_Range16(1329LLU,1366LLU,1LLU),_234223e9b_Range16(4256LLU,4293LLU,1LLU),_234223e9b_Range16(4295LLU,4301LLU,6LLU),_234223e9b_Range16(5024LLU,5109LLU,1LLU),_234223e9b_Range16(7312LLU,7354LLU,1LLU),_234223e9b_Range16(7357LLU,7359LLU,1LLU),_234223e9b_Range16(7680LLU,7828LLU,2LLU),_234223e9b_Range16(7838LLU,7934LLU,2LLU),_234223e9b_Range16(7944LLU,7951LLU,1LLU),_234223e9b_Range16(7960LLU,7965LLU,1LLU),_234223e9b_Range16(7976LLU,7983LLU,1LLU),_234223e9b_Range16(7992LLU,7999LLU,1LLU),_234223e9b_Range16(8008LLU,8013LLU,1LLU),_234223e9b_Range16(8025LLU,8031LLU,2LLU),_234223e9b_Range16(8040LLU,8047LLU,1LLU),_234223e9b_Range16(8072LLU,8079LLU,1LLU),_234223e9b_Range16(8088LLU,8095LLU,1LLU),_234223e9b_Range16(8104LLU,8111LLU,1LLU),_234223e9b_Range16(8120LLU,8124LLU,1LLU),_234223e9b_Range16(8136LLU,8140LLU,1LLU),_234223e9b_Range16(8152LLU,8155LLU,1LLU),_234223e9b_Range16(8168LLU,8172LLU,1LLU),_234223e9b_Range16(8184LLU,8188LLU,1LLU),_234223e9b_Range16(8486LLU,8490LLU,4LLU),_234223e9b_Range16(8491LLU,8498LLU,7LLU),_234223e9b_Range16(8579LLU,11264LLU,2685LLU),_234223e9b_Range16(11265LLU,11311LLU,1LLU),_234223e9b_Range16(11360LLU,11362LLU,2LLU),_234223e9b_Range16(11363LLU,11364LLU,1LLU),_234223e9b_Range16(11367LLU,11373LLU,2LLU),_234223e9b_Range16(11374LLU,11376LLU,1LLU),_234223e9b_Range16(11378LLU,11381LLU,3LLU),_234223e9b_Range16(11390LLU,11392LLU,1LLU),_234223e9b_Range16(11394LLU,11490LLU,2LLU),_234223e9b_Range16(11499LLU,11501LLU,2LLU),_234223e9b_Range16(11506LLU,42560LLU,31054LLU),_234223e9b_Range16(42562LLU,42604LLU,2LLU),_234223e9b_Range16(42624LLU,42650LLU,2LLU),_234223e9b_Range16(42786LLU,42798LLU,2LLU),_234223e9b_Range16(42802LLU,42862LLU,2LLU),_234223e9b_Range16(42873LLU,42877LLU,2LLU),_234223e9b_Range16(42878LLU,42886LLU,2LLU),_234223e9b_Range16(42891LLU,42893LLU,2LLU),_234223e9b_Range16(42896LLU,42898LLU,2LLU),_234223e9b_Range16(42902LLU,42922LLU,2LLU),_234223e9b_Range16(42923LLU,42926LLU,1LLU),_234223e9b_Range16(42928LLU,42932LLU,1LLU),_234223e9b_Range16(42934LLU,42948LLU,2LLU),_234223e9b_Range16(42949LLU,42951LLU,1LLU),_234223e9b_Range16(42953LLU,42960LLU,7LLU),_234223e9b_Range16(42966LLU,42968LLU,2LLU),_234223e9b_Range16(42997LLU,65313LLU,22316LLU),_234223e9b_Range16(65314LLU,65338LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66560LLU,66599LLU,1LLU),_234223e9b_Range32(66736LLU,66771LLU,1LLU),_234223e9b_Range32(66928LLU,66938LLU,1LLU),_234223e9b_Range32(66940LLU,66954LLU,1LLU),_234223e9b_Range32(66956LLU,66962LLU,1LLU),_234223e9b_Range32(66964LLU,66965LLU,1LLU),_234223e9b_Range32(68736LLU,68786LLU,1LLU),_234223e9b_Range32(71840LLU,71871LLU,1LLU),_234223e9b_Range32(93760LLU,93791LLU,1LLU),_234223e9b_Range32(125184LLU,125217LLU,1LLU)}),3LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_LT = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(452LLU,454LLU,2LLU),_234223e9b_Range16(455LLU,457LLU,2LLU),_234223e9b_Range16(458LLU,460LLU,2LLU),_234223e9b_Range16(497LLU,499LLU,2LLU),_234223e9b_Range16(8064LLU,8071LLU,1LLU),_234223e9b_Range16(8080LLU,8087LLU,1LLU),_234223e9b_Range16(8096LLU,8103LLU,1LLU),_234223e9b_Range16(8115LLU,8131LLU,16LLU),_234223e9b_Range16(8179LLU,8179LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_LU = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(97LLU,122LLU,1LLU),_234223e9b_Range16(181LLU,223LLU,42LLU),_234223e9b_Range16(224LLU,246LLU,1LLU),_234223e9b_Range16(248LLU,255LLU,1LLU),_234223e9b_Range16(257LLU,303LLU,2LLU),_234223e9b_Range16(307LLU,311LLU,2LLU),_234223e9b_Range16(314LLU,328LLU,2LLU),_234223e9b_Range16(331LLU,375LLU,2LLU),_234223e9b_Range16(378LLU,382LLU,2LLU),_234223e9b_Range16(383LLU,384LLU,1LLU),_234223e9b_Range16(387LLU,389LLU,2LLU),_234223e9b_Range16(392LLU,396LLU,4LLU),_234223e9b_Range16(402LLU,405LLU,3LLU),_234223e9b_Range16(409LLU,410LLU,1LLU),_234223e9b_Range16(414LLU,417LLU,3LLU),_234223e9b_Range16(419LLU,421LLU,2LLU),_234223e9b_Range16(424LLU,429LLU,5LLU),_234223e9b_Range16(432LLU,436LLU,4LLU),_234223e9b_Range16(438LLU,441LLU,3LLU),_234223e9b_Range16(445LLU,447LLU,2LLU),_234223e9b_Range16(453LLU,454LLU,1LLU),_234223e9b_Range16(456LLU,457LLU,1LLU),_234223e9b_Range16(459LLU,460LLU,1LLU),_234223e9b_Range16(462LLU,476LLU,2LLU),_234223e9b_Range16(477LLU,495LLU,2LLU),_234223e9b_Range16(498LLU,499LLU,1LLU),_234223e9b_Range16(501LLU,505LLU,4LLU),_234223e9b_Range16(507LLU,543LLU,2LLU),_234223e9b_Range16(547LLU,563LLU,2LLU),_234223e9b_Range16(572LLU,575LLU,3LLU),_234223e9b_Range16(576LLU,578LLU,2LLU),_234223e9b_Range16(583LLU,591LLU,2LLU),_234223e9b_Range16(592LLU,596LLU,1LLU),_234223e9b_Range16(598LLU,599LLU,1LLU),_234223e9b_Range16(601LLU,603LLU,2LLU),_234223e9b_Range16(604LLU,608LLU,4LLU),_234223e9b_Range16(609LLU,613LLU,2LLU),_234223e9b_Range16(614LLU,616LLU,2LLU),_234223e9b_Range16(617LLU,620LLU,1LLU),_234223e9b_Range16(623LLU,625LLU,2LLU),_234223e9b_Range16(626LLU,629LLU,3LLU),_234223e9b_Range16(637LLU,640LLU,3LLU),_234223e9b_Range16(642LLU,643LLU,1LLU),_234223e9b_Range16(647LLU,652LLU,1LLU),_234223e9b_Range16(658LLU,669LLU,11LLU),_234223e9b_Range16(670LLU,837LLU,167LLU),_234223e9b_Range16(881LLU,883LLU,2LLU),_234223e9b_Range16(887LLU,891LLU,4LLU),_234223e9b_Range16(892LLU,893LLU,1LLU),_234223e9b_Range16(940LLU,943LLU,1LLU),_234223e9b_Range16(945LLU,974LLU,1LLU),_234223e9b_Range16(976LLU,977LLU,1LLU),_234223e9b_Range16(981LLU,983LLU,1LLU),_234223e9b_Range16(985LLU,1007LLU,2LLU),_234223e9b_Range16(1008LLU,1011LLU,1LLU),_234223e9b_Range16(1013LLU,1019LLU,3LLU),_234223e9b_Range16(1072LLU,1119LLU,1LLU),_234223e9b_Range16(1121LLU,1153LLU,2LLU),_234223e9b_Range16(1163LLU,1215LLU,2LLU),_234223e9b_Range16(1218LLU,1230LLU,2LLU),_234223e9b_Range16(1231LLU,1327LLU,2LLU),_234223e9b_Range16(1377LLU,1414LLU,1LLU),_234223e9b_Range16(4304LLU,4346LLU,1LLU),_234223e9b_Range16(4349LLU,4351LLU,1LLU),_234223e9b_Range16(5112LLU,5117LLU,1LLU),_234223e9b_Range16(7296LLU,7304LLU,1LLU),_234223e9b_Range16(7545LLU,7549LLU,4LLU),_234223e9b_Range16(7566LLU,7681LLU,115LLU),_234223e9b_Range16(7683LLU,7829LLU,2LLU),_234223e9b_Range16(7835LLU,7841LLU,6LLU),_234223e9b_Range16(7843LLU,7935LLU,2LLU),_234223e9b_Range16(7936LLU,7943LLU,1LLU),_234223e9b_Range16(7952LLU,7957LLU,1LLU),_234223e9b_Range16(7968LLU,7975LLU,1LLU),_234223e9b_Range16(7984LLU,7991LLU,1LLU),_234223e9b_Range16(8000LLU,8005LLU,1LLU),_234223e9b_Range16(8017LLU,8023LLU,2LLU),_234223e9b_Range16(8032LLU,8039LLU,1LLU),_234223e9b_Range16(8048LLU,8061LLU,1LLU),_234223e9b_Range16(8112LLU,8113LLU,1LLU),_234223e9b_Range16(8126LLU,8144LLU,18LLU),_234223e9b_Range16(8145LLU,8160LLU,15LLU),_234223e9b_Range16(8161LLU,8165LLU,4LLU),_234223e9b_Range16(8526LLU,8580LLU,54LLU),_234223e9b_Range16(11312LLU,11359LLU,1LLU),_234223e9b_Range16(11361LLU,11365LLU,4LLU),_234223e9b_Range16(11366LLU,11372LLU,2LLU),_234223e9b_Range16(11379LLU,11382LLU,3LLU),_234223e9b_Range16(11393LLU,11491LLU,2LLU),_234223e9b_Range16(11500LLU,11502LLU,2LLU),_234223e9b_Range16(11507LLU,11520LLU,13LLU),_234223e9b_Range16(11521LLU,11557LLU,1LLU),_234223e9b_Range16(11559LLU,11565LLU,6LLU),_234223e9b_Range16(42561LLU,42605LLU,2LLU),_234223e9b_Range16(42625LLU,42651LLU,2LLU),_234223e9b_Range16(42787LLU,42799LLU,2LLU),_234223e9b_Range16(42803LLU,42863LLU,2LLU),_234223e9b_Range16(42874LLU,42876LLU,2LLU),_234223e9b_Range16(42879LLU,42887LLU,2LLU),_234223e9b_Range16(42892LLU,42897LLU,5LLU),_234223e9b_Range16(42899LLU,42900LLU,1LLU),_234223e9b_Range16(42903LLU,42921LLU,2LLU),_234223e9b_Range16(42933LLU,42947LLU,2LLU),_234223e9b_Range16(42952LLU,42954LLU,2LLU),_234223e9b_Range16(42961LLU,42967LLU,6LLU),_234223e9b_Range16(42969LLU,42998LLU,29LLU),_234223e9b_Range16(43859LLU,43888LLU,29LLU),_234223e9b_Range16(43889LLU,43967LLU,1LLU),_234223e9b_Range16(65345LLU,65370LLU,1LLU)}),jule::Slice<_234223e9b_Range32>({_234223e9b_Range32(66600LLU,66639LLU,1LLU),_234223e9b_Range32(66776LLU,66811LLU,1LLU),_234223e9b_Range32(66967LLU,66977LLU,1LLU),_234223e9b_Range32(66979LLU,66993LLU,1LLU),_234223e9b_Range32(66995LLU,67001LLU,1LLU),_234223e9b_Range32(67003LLU,67004LLU,1LLU),_234223e9b_Range32(68800LLU,68850LLU,1LLU),_234223e9b_Range32(71872LLU,71903LLU,1LLU),_234223e9b_Range32(93792LLU,93823LLU,1LLU),_234223e9b_Range32(125218LLU,125251LLU,1LLU)}),4LL));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_M = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(921LLU,953LLU,32LLU),_234223e9b_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_MN = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(921LLU,953LLU,32LLU),_234223e9b_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_COMMON = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(924LLU,956LLU,32LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_GREEK = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(181LLU,837LLU,656LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Ptr<_234223e9b_RangeTable> _23380876d_FOLD_INHERITED = jule::new_struct<_234223e9b_RangeTable>(new( std::nothrow ) _234223e9b_RangeTable(jule::Slice<_234223e9b_Range16>({_234223e9b_Range16(921LLU,953LLU,32LLU),_234223e9b_Range16(8126LLU,8126LLU,1LLU)}),jule::Slice<_234223e9b_Range32>(),jule::Int()));
static jule::Array<jule::I32,33> _2336ea198_PUNCTS = jule::Array<jule::I32,33>({'!','#','$',',','.','\'','\"',':',';','<','>','=','?','-','+','*','(',')','[',']','{','}','%','&','/','\\','@','^','_','`','|','~',166LL});
static jule::Array<jule::I32,5> _2336ea198_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _2336ea198_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,13> _2336ea198_BIN_OPS = jule::Array<jule::Str,13>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("!", 1),jule::Str("&&", 2),jule::Str("||", 2)});
static jule::Array<jule::Str,2> _2336ea198_WEAK_OPS = jule::Array<jule::Str,2>({jule::Str("...", 3),jule::Str(":", 1)});
static jule::Array<jule::Str,2> _2336ea198_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _2336ea198_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_2334d2db5_KindPair,46> _2334d2db5_KEYWORDS = jule::Array<_2334d2db5_KindPair,46>({_2334d2db5_KindPair(jule::Str("i8", 2),1LLU),_2334d2db5_KindPair(jule::Str("i16", 3),1LLU),_2334d2db5_KindPair(jule::Str("i32", 3),1LLU),_2334d2db5_KindPair(jule::Str("i64", 3),1LLU),_2334d2db5_KindPair(jule::Str("u8", 2),1LLU),_2334d2db5_KindPair(jule::Str("u16", 3),1LLU),_2334d2db5_KindPair(jule::Str("u32", 3),1LLU),_2334d2db5_KindPair(jule::Str("u64", 3),1LLU),_2334d2db5_KindPair(jule::Str("f32", 3),1LLU),_2334d2db5_KindPair(jule::Str("f64", 3),1LLU),_2334d2db5_KindPair(jule::Str("uint", 4),1LLU),_2334d2db5_KindPair(jule::Str("int", 3),1LLU),_2334d2db5_KindPair(jule::Str("uintptr", 7),1LLU),_2334d2db5_KindPair(jule::Str("bool", 4),1LLU),_2334d2db5_KindPair(jule::Str("str", 3),1LLU),_2334d2db5_KindPair(jule::Str("any", 3),1LLU),_2334d2db5_KindPair(jule::Str("true", 4),6LLU),_2334d2db5_KindPair(jule::Str("false", 5),6LLU),_2334d2db5_KindPair(jule::Str("nil", 3),6LLU),_2334d2db5_KindPair(jule::Str("const", 5),9LLU),_2334d2db5_KindPair(jule::Str("ret", 3),4LLU),_2334d2db5_KindPair(jule::Str("type", 4),10LLU),_2334d2db5_KindPair(jule::Str("for", 3),12LLU),_2334d2db5_KindPair(jule::Str("break", 5),13LLU),_2334d2db5_KindPair(jule::Str("continue", 8),14LLU),_2334d2db5_KindPair(jule::Str("in", 2),15LLU),_2334d2db5_KindPair(jule::Str("if", 2),16LLU),_2334d2db5_KindPair(jule::Str("else", 4),17LLU),_2334d2db5_KindPair(jule::Str("use", 3),19LLU),_2334d2db5_KindPair(jule::Str("pub", 3),21LLU),_2334d2db5_KindPair(jule::Str("goto", 4),22LLU),_2334d2db5_KindPair(jule::Str("enum", 4),24LLU),_2334d2db5_KindPair(jule::Str("struct", 6),25LLU),_2334d2db5_KindPair(jule::Str("co", 2),26LLU),_2334d2db5_KindPair(jule::Str("match", 5),27LLU),_2334d2db5_KindPair(jule::Str("self", 4),28LLU),_2334d2db5_KindPair(jule::Str("trait", 5),29LLU),_2334d2db5_KindPair(jule::Str("impl", 4),30LLU),_2334d2db5_KindPair(jule::Str("cpp", 3),31LLU),_2334d2db5_KindPair(jule::Str("fall", 4),32LLU),_2334d2db5_KindPair(jule::Str("fn", 2),33LLU),_2334d2db5_KindPair(jule::Str("let", 3),34LLU),_2334d2db5_KindPair(jule::Str("unsafe", 6),35LLU),_2334d2db5_KindPair(jule::Str("mut", 3),36LLU),_2334d2db5_KindPair(jule::Str("defer", 5),37LLU),_2334d2db5_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_2334d2db5_KindPair,38> _2334d2db5_BASIC_OPS = jule::Array<_2334d2db5_KindPair,38>({_2334d2db5_KindPair(jule::Str("::", 2),23LLU),_2334d2db5_KindPair(jule::Str(":", 1),11LLU),_2334d2db5_KindPair(jule::Str(";", 1),5LLU),_2334d2db5_KindPair(jule::Str(",", 1),8LLU),_2334d2db5_KindPair(jule::Str("...", 3),7LLU),_2334d2db5_KindPair(jule::Str(".", 1),20LLU),_2334d2db5_KindPair(jule::Str("+=", 2),7LLU),_2334d2db5_KindPair(jule::Str("-=", 2),7LLU),_2334d2db5_KindPair(jule::Str("*=", 2),7LLU),_2334d2db5_KindPair(jule::Str("/=", 2),7LLU),_2334d2db5_KindPair(jule::Str("%=", 2),7LLU),_2334d2db5_KindPair(jule::Str("<<=", 3),7LLU),_2334d2db5_KindPair(jule::Str(">>=", 3),7LLU),_2334d2db5_KindPair(jule::Str("^=", 2),7LLU),_2334d2db5_KindPair(jule::Str("&=", 2),7LLU),_2334d2db5_KindPair(jule::Str("|=", 2),7LLU),_2334d2db5_KindPair(jule::Str("==", 2),7LLU),_2334d2db5_KindPair(jule::Str("!=", 2),7LLU),_2334d2db5_KindPair(jule::Str(">=", 2),7LLU),_2334d2db5_KindPair(jule::Str("<=", 2),7LLU),_2334d2db5_KindPair(jule::Str("&&", 2),7LLU),_2334d2db5_KindPair(jule::Str("||", 2),7LLU),_2334d2db5_KindPair(jule::Str("<<", 2),7LLU),_2334d2db5_KindPair(jule::Str(">>", 2),7LLU),_2334d2db5_KindPair(jule::Str("++", 2),7LLU),_2334d2db5_KindPair(jule::Str("--", 2),7LLU),_2334d2db5_KindPair(jule::Str("+", 1),7LLU),_2334d2db5_KindPair(jule::Str("-", 1),7LLU),_2334d2db5_KindPair(jule::Str("*", 1),7LLU),_2334d2db5_KindPair(jule::Str("/", 1),7LLU),_2334d2db5_KindPair(jule::Str("%", 1),7LLU),_2334d2db5_KindPair(jule::Str("&", 1),7LLU),_2334d2db5_KindPair(jule::Str("|", 1),7LLU),_2334d2db5_KindPair(jule::Str("^", 1),7LLU),_2334d2db5_KindPair(jule::Str("!", 1),7LLU),_2334d2db5_KindPair(jule::Str("<", 1),7LLU),_2334d2db5_KindPair(jule::Str(">", 1),7LLU),_2334d2db5_KindPair(jule::Str("=", 1),7LLU)});
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_OUT = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_OUTLN = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_NEW = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_PANIC = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_MAKE = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_APPEND = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_RECOVER = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_CLONE = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns());
static jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_BUILTIN_FN_COPY = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(),jule::Bool(),jule::Bool()));
static jule::Ptr<_200d010d9_TypeAlias> _1d67e4c4b_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(jule::Ptr<_233464770_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_2336ea198_Token(),jule::Str(),jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_200d010d9_TypeAlias> _1d67e4c4b_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(jule::Ptr<_233464770_ScopeTree>(),true,jule::Bool(),jule::Bool(),jule::Bool(),_2336ea198_Token(),jule::Str(),jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ptr<_2185da36c_Trait> _1d67e4c4b_BUILTIN_TRAIT_ERROR = jule::new_struct_ptr<_2185da36c_Trait>(new( std::nothrow ) _2185da36c_Trait(_2336ea198_Token(),jule::Str("Error", 5),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_2185d51ad_Fn>>({jule::new_struct_ptr<_2185d51ad_Fn>(new( std::nothrow ) _2185d51ad_Fn(jule::Ptr<_1eec2c632_Sema>(),_2336ea198_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Str(),jule::Ptr<_233464770_ScopeTree>(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),jule::new_struct<_2185d51ad_RetType>(new( std::nothrow ) _2185d51ad_RetType(jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2336ea198_Token(),jule::Any(jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_2336ea198_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ptr<_233464770_TypeDecl>>()))))),jule::Ptr<_200d010d9_TypeKind>())),jule::Slice<_2336ea198_Token>())),jule::Slice<jule::Ptr<_2185d51ad_Param>>({jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_23461aa35_Struct>(),jule::Slice<jule::Ptr<_2185d51ad_FnIns>>()))}),jule::Slice<jule::Ptr<_23461aa35_Struct>>()));
static jule::Ptr<_2185da36c_Trait> _1d67e4c4b_BUILTIN_TRAIT_DISPOSE = jule::new_struct_ptr<_2185da36c_Trait>(new( std::nothrow ) _2185da36c_Trait(_2336ea198_Token(),jule::Str("Dispose", 7),true,jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_2185d51ad_Fn>>({jule::new_struct_ptr<_2185d51ad_Fn>(new( std::nothrow ) _2185d51ad_Fn(jule::Ptr<_1eec2c632_Sema>(),_2336ea198_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("dispose", 7),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Str(),jule::Ptr<_233464770_ScopeTree>(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),jule::Ptr<_2185d51ad_RetType>(),jule::Slice<jule::Ptr<_2185d51ad_Param>>({jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ptr<_23461aa35_Struct>(),jule::Slice<jule::Ptr<_2185d51ad_FnIns>>()))}),jule::Slice<jule::Ptr<_23461aa35_Struct>>()));
static jule::Slice<jule::Str> _23314edea_FLAGS = nullptr;
static jule::Slice<jule::Any> _231e62d30_deads = nullptr;
static jule::Slice<jule::Any> _231e62d30_checking = nullptr;
static jule::Any _231e62d30_current = jule::Any(nullptr);
static jule::Any _231e62d30_main_current = jule::Any(nullptr);
static jule::Array<jule::Int,12> _1d6d86650_MDAYS = jule::Array<jule::Int,12>({31LL,30LL,31LL,30LL,31LL,31LL,30LL,31LL,30LL,31LL,31LL,29LL});
static jule::Slice<jule::U8> _1d6c4a2c2_INDENT = nullptr;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_COMMON = _23380876d__COMMON;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_COPTIC = _23380876d__COPTIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CUNEIFORM = _23380876d__CUNEIFORM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CYPRIOT = _23380876d__CYPRIOT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CYPRO_MINOAN = _23380876d__CYPRO_MINOAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CYRILLIC = _23380876d__CYRILLIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DESERET = _23380876d__DESERET;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DEVANAGARI = _23380876d__DEVANAGARI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DIVES_AKURU = _23380876d__DIVES_AKURU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DOGRA = _23380876d__DOGRA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DUPLOYAN = _23380876d__DUPLOYAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_EGYPTIAN_HIEROGLYPHS = _23380876d__EGYPTIAN_HIEROGLYPHS;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ELBASAN = _23380876d__ELBASAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ELYMAIC = _23380876d__ELYMAIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ETHIOPIC = _23380876d__ETHIOPIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GEORGIAN = _23380876d__GEORGIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GLAGOLITIC = _23380876d__GLAGOLITIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GOTHIC = _23380876d__GOTHIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GRANTHA = _23380876d__GRANTHA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GREEK = _23380876d__GREEK;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GUJARATI = _23380876d__GUJARATI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GUNJALA_GONDI = _23380876d__GUNJALA_GONDI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_GURMUKHI = _23380876d__GURMUKHI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HAN = _23380876d__HAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HANGUL = _23380876d__HANGUL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HANIFI_ROHINGYA = _23380876d__HANIFI_ROHINGYA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HANUNOO = _23380876d__HANUNOO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HATRAN = _23380876d__HATRAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HEBREW = _23380876d__HEBREW;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HIRAGANA = _23380876d__HIRAGANA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_IMPERIAL_ARAMAIC = _23380876d__IMPERIAL_ARAMAIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_INHERITED = _23380876d__INHERITED;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_INSCRIPTIONAL_PAHLAVI = _23380876d__INSCRIPTIONAL_PAHLAVI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_INSCRIPTIONAL_PARTHIAN = _23380876d__INSCRIPTIONAL_PARTHIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_JAVANESE = _23380876d__JAVANESE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KAITHI = _23380876d__KAITHI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KANNADA = _23380876d__KANNADA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KATAKANA = _23380876d__KATAKANA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KAWI = _23380876d__KAWI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KAYAH_LI = _23380876d__KAYAH_LI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KHAROSHTHI = _23380876d__KHAROSHTHI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KHITAN_SMALL_SCRIPT = _23380876d__KHITAN_SMALL_SCRIPT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KHMER = _23380876d__KHMER;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KHOJKI = _23380876d__KHOJKI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_KHUDAWADI = _23380876d__KHUDAWADI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LAO = _23380876d__LAO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LATIN = _23380876d__LATIN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LEPCHA = _23380876d__LEPCHA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LIMBU = _23380876d__LIMBU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LINEAR_A = _23380876d__LINEAR_A;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LINEAR_B = _23380876d__LINEAR_B;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LISU = _23380876d__LISU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LYCIAN = _23380876d__LYCIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LYDIAN = _23380876d__LYDIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MAHAJANI = _23380876d__MAHAJANI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MAKASAR = _23380876d__MAKASAR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MALAYALAM = _23380876d__MALAYALAM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MANDAIC = _23380876d__MANDAIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MANICHAEAN = _23380876d__MANICHAEAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MARCHEN = _23380876d__MARCHEN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MASARAM_GONDI = _23380876d__MASARAM_GONDI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MEDEFAIDRIN = _23380876d__MEDEFAIDRIN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MEETEI_MAYEK = _23380876d__MEETEI_MAYEK;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MENDE_KIKAKUI = _23380876d__MENDE_KIKAKUI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MEROITIC_CURSIVE = _23380876d__MEROITIC_CURSIVE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MEROITIC_HIEROGLYPHS = _23380876d__MEROITIC_HIEROGLYPHS;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MIAO = _23380876d__MIAO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MODI = _23380876d__MODI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MONGOLIAN = _23380876d__MONGOLIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MRO = _23380876d__MRO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MULTANI = _23380876d__MULTANI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MYANMAR = _23380876d__MYANMAR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NABATAEAN = _23380876d__NABATAEAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NAG_MUNDARI = _23380876d__NAG_MUNDARI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NANDINAGARI = _23380876d__NANDINAGARI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NEW_TAI_LUE = _23380876d__NEW_TAI_LUE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NEWA = _23380876d__NEWA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NKO = _23380876d__NKO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NUSHU = _23380876d__NUSHU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NYIAKENG_PUACHUE_HMONG = _23380876d__NYIAKENG_PUACHUE_HMONG;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OGHAM = _23380876d__OGHAM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OL_CHIKI = _23380876d__OL_CHIKI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_HUNGARIAN = _23380876d__OLD_HUNGARIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_ITALIC = _23380876d__OLD_ITALIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_NORTH_ARABIAN = _23380876d__OLD_NORTH_ARABIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_PERMIC = _23380876d__OLD_PERMIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_PERSIAN = _23380876d__OLD_PERSIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_SOGDIAN = _23380876d__OLD_SOGDIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_SOUTH_ARABIAN = _23380876d__OLD_SOUTH_ARABIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_TURKIC = _23380876d__OLD_TURKIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OLD_UYGHUR = _23380876d__OLD_UYGHUR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ORIYA = _23380876d__ORIYA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OSAGE = _23380876d__OSAGE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OSMANYA = _23380876d__OSMANYA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PAHAWH_HMONG = _23380876d__PAHAWH_HMONG;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PALMYRENE = _23380876d__PALMYRENE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PAU_CIN_HAU = _23380876d__PAU_CIN_HAU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PHAGS_PA = _23380876d__PHAGS_PA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PHOENICIAN = _23380876d__PHOENICIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PSALTER_PAHLAVI = _23380876d__PSALTER_PAHLAVI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_REJANG = _23380876d__REJANG;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_RUNIC = _23380876d__RUNIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SAMARITAN = _23380876d__SAMARITAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SAURASHTRA = _23380876d__SAURASHTRA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SHARADA = _23380876d__SHARADA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SHAVIAN = _23380876d__SHAVIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SIDDHAM = _23380876d__SIDDHAM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SIGN_WRITING = _23380876d__SIGN_WRITING;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SINHALA = _23380876d__SINHALA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SOGDIAN = _23380876d__SOGDIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SORA_SOMPENG = _23380876d__SORA_SOMPENG;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SOYOMBO = _23380876d__SOYOMBO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SUNDANESE = _23380876d__SUNDANESE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SYLOTI_NAGRI = _23380876d__SYLOTI_NAGRI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SYRIAC = _23380876d__SYRIAC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAGALOG = _23380876d__TAGALOG;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAGBANWA = _23380876d__TAGBANWA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAI_LE = _23380876d__TAI_LE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAI_THAM = _23380876d__TAI_THAM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAI_VIET = _23380876d__TAI_VIET;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAKRI = _23380876d__TAKRI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TAMIL = _23380876d__TAMIL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TANGSA = _23380876d__TANGSA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TANGUT = _23380876d__TANGUT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TELUGU = _23380876d__TELUGU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_THAANA = _23380876d__THAANA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_THAI = _23380876d__THAI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TIBETAN = _23380876d__TIBETAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TIFINAGH = _23380876d__TIFINAGH;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TIRHUTA = _23380876d__TIRHUTA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TOTO = _23380876d__TOTO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_UGARITIC = _23380876d__UGARITIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_VAI = _23380876d__VAI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_VITHKUQI = _23380876d__VITHKUQI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_WANCHO = _23380876d__WANCHO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_WARANG_CITI = _23380876d__WARANG_CITI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_YEZIDI = _23380876d__YEZIDI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_YI = _23380876d__YI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ZANABAZAR_SQUARE = _23380876d__ZANABAZAR_SQUARE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CC = _23380876d__CC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CF = _23380876d__CF;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CO = _23380876d__CO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CS = _23380876d__CS;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DIGIT = _23380876d__ND;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ND = _23380876d__ND;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LETTER = _23380876d__L;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_L = _23380876d__L;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LM = _23380876d__LM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LO = _23380876d__LO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LOWER = _23380876d__LL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LL = _23380876d__LL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MARK = _23380876d__M;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_M = _23380876d__M;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MC = _23380876d__MC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ME = _23380876d__ME;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_MN = _23380876d__MN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NL = _23380876d__NL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NO = _23380876d__NO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NUMBER = _23380876d__N;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_N = _23380876d__N;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER = _23380876d__C;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_C = _23380876d__C;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PC = _23380876d__PC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PD = _23380876d__PD;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PE = _23380876d__PE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PF = _23380876d__PF;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PI = _23380876d__PI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PO = _23380876d__PO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PS = _23380876d__PS;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PUNCT = _23380876d__P;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_P = _23380876d__P;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SC = _23380876d__SC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ASCII_HEX_DIGIT = _23380876d__ASCII_HEX_DIGIT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BIDI_CONTROL = _23380876d__BIDI_CONTROL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DASH = _23380876d__DASH;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DEPRECATED = _23380876d__DEPRECATED;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_DIACRITIC = _23380876d__DIACRITIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_EXTENDER = _23380876d__EXTENDER;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HEX_DIGIT = _23380876d__HEX_DIGIT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_HYPHEN = _23380876d__HYPHEN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_IDS_BINARY_OPERATOR = _23380876d__IDS_BINARY_OPERATOR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_IDS_TRINARY_OPERATOR = _23380876d__IDS_TRINARY_OPERATOR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_IDEOGRAPHIC = _23380876d__IDEOGRAPHIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_JOIN_CONTROL = _23380876d__JOIN_CONTROL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LOGICAL_ORDER_EXCEPTION = _23380876d__LOGICAL_ORDER_EXCEPTION;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_NONCHARACTER_CODE_POINT = _23380876d__NONCHARACTER_CODE_POINT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_ALPHABETIC = _23380876d__OTHER_ALPHABETIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_DEFAULT_IGNORABLE_CODE_POINT = _23380876d__OTHER_DEFAULT_IGNORABLE_CODE_POINT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_GRAPHEME_EXTEND = _23380876d__OTHER_GRAPHEME_EXTEND;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_ID_CONTINUE = _23380876d__OTHER_ID_CONTINUE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_ID_START = _23380876d__OTHER_ID_START;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_LOWERCASE = _23380876d__OTHER_LOWERCASE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_MATH = _23380876d__OTHER_MATH;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_OTHER_UPPERCASE = _23380876d__OTHER_UPPERCASE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PATTERN_SYNTAX = _23380876d__PATTERN_SYNTAX;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PATTERN_WHITE_SPACE = _23380876d__PATTERN_WHITE_SPACE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_PREPENDED_CONCATENATION_MARK = _23380876d__PREPENDED_CONCATENATION_MARK;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_QUOTATION_MARK = _23380876d__QUOTATION_MARK;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_RADICAL = _23380876d__RADICAL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_REGIONAL_INDICATOR = _23380876d__REGIONAL_INDICATOR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SENTENCE_TERMINAL = _23380876d__SENTENCE_TERMINAL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SOFT_DOTTED = _23380876d__SOFT_DOTTED;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TERMINAL_PUNCTUATION = _23380876d__TERMINAL_PUNCTUATION;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_UNIFIED_IDEOGRAPH = _23380876d__UNIFIED_IDEOGRAPH;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_VARIATION_SELECTOR = _23380876d__VARIATION_SELECTOR;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_WHITE_SPACE = _23380876d__WHITE_SPACE;
static jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>> _23380876d_PROPERTIES = jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>>({{jule::Str("ASCII_HEX_DIGIT", 15),_23380876d_ASCII_HEX_DIGIT},{jule::Str("BIDI_CONTROL", 12),_23380876d_BIDI_CONTROL},{jule::Str("DASH", 4),_23380876d_DASH},{jule::Str("DEPRECATED", 10),_23380876d_DEPRECATED},{jule::Str("DIACRITIC", 9),_23380876d_DIACRITIC},{jule::Str("EXTENDER", 8),_23380876d_EXTENDER},{jule::Str("HEX_DIGIT", 9),_23380876d_HEX_DIGIT},{jule::Str("HYPHEN", 6),_23380876d_HYPHEN},{jule::Str("IDS_BINARY_OPERATOR", 19),_23380876d_IDS_BINARY_OPERATOR},{jule::Str("IDS_TRINARY_OPERATOR", 20),_23380876d_IDS_TRINARY_OPERATOR},{jule::Str("IDEOGRAPHIC", 11),_23380876d_IDEOGRAPHIC},{jule::Str("JOIN_CONTROL", 12),_23380876d_JOIN_CONTROL},{jule::Str("LOGICAL_ORDER_EXCEPTION", 23),_23380876d_LOGICAL_ORDER_EXCEPTION},{jule::Str("NONCHARACTER_CODE_POINT", 23),_23380876d_NONCHARACTER_CODE_POINT},{jule::Str("OTHER_ALPHABETIC", 16),_23380876d_OTHER_ALPHABETIC},{jule::Str("OTHER_DEFAULT_IGNORABLE_CODE_POINT", 34),_23380876d_OTHER_DEFAULT_IGNORABLE_CODE_POINT},{jule::Str("OTHER_GRAPHEME_EXTEND", 21),_23380876d_OTHER_GRAPHEME_EXTEND},{jule::Str("OTHER_ID_CONTINUE", 17),_23380876d_OTHER_ID_CONTINUE},{jule::Str("OTHER_ID_START", 14),_23380876d_OTHER_ID_START},{jule::Str("OTHER_LOWERCASE", 15),_23380876d_OTHER_LOWERCASE},{jule::Str("OTHER_MATH", 10),_23380876d_OTHER_MATH},{jule::Str("OTHER_UPPERCASE", 15),_23380876d_OTHER_UPPERCASE},{jule::Str("PATTERN_SYNTAX", 14),_23380876d_PATTERN_SYNTAX},{jule::Str("PATTERN_WHITE_SPACE", 19),_23380876d_PATTERN_WHITE_SPACE},{jule::Str("PREPENDED_CONCATENATION_MARK", 28),_23380876d_PREPENDED_CONCATENATION_MARK},{jule::Str("QUOTATION_MARK", 14),_23380876d_QUOTATION_MARK},{jule::Str("RADICAL", 7),_23380876d_RADICAL},{jule::Str("REGIONAL_INDICATOR", 18),_23380876d_REGIONAL_INDICATOR},{jule::Str("SENTENCE_TERMINAL", 17),_23380876d_SENTENCE_TERMINAL},{jule::Str("SOFT_DOTTED", 11),_23380876d_SOFT_DOTTED},{jule::Str("TERMINAL_PUNCTUATION", 20),_23380876d_TERMINAL_PUNCTUATION},{jule::Str("UNIFIED_IDEOGRAPH", 17),_23380876d_UNIFIED_IDEOGRAPH},{jule::Str("VARIATION_SELECTOR", 18),_23380876d_VARIATION_SELECTOR},{jule::Str("WHITE_SPACE", 11),_23380876d_WHITE_SPACE}});
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SK = _23380876d__SK;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SM = _23380876d__SM;
static jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>> _23380876d_FOLD_CATEGORY = jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>>({{jule::Str("L", 1),_23380876d_FOLD_L},{jule::Str("LL", 2),_23380876d_FOLD_LL},{jule::Str("LT", 2),_23380876d_FOLD_LT},{jule::Str("LU", 2),_23380876d_FOLD_LU},{jule::Str("M", 1),_23380876d_FOLD_M},{jule::Str("MN", 2),_23380876d_FOLD_MN}});
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SO = _23380876d__SO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SPACE = _23380876d__Z;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_Z = _23380876d__Z;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_SYMBOL = _23380876d__S;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_S = _23380876d__S;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_TITLE = _23380876d__LT;
static jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>> _23380876d_FOLD_SCRIPT = jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>>({{jule::Str("Common", 6),_23380876d_FOLD_COMMON},{jule::Str("Greek", 5),_23380876d_FOLD_GREEK},{jule::Str("Inherited", 9),_23380876d_FOLD_INHERITED}});
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LT = _23380876d__LT;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_UPPER = _23380876d__LU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_LU = _23380876d__LU;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ZL = _23380876d__ZL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ZP = _23380876d__ZP;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ZS = _23380876d__ZS;
static jule::Slice<jule::Ptr<_234223e9b_RangeTable>> _2337a3707_GRAPHIC_RANGES = jule::Slice<jule::Ptr<_234223e9b_RangeTable>>({_23380876d_L,_23380876d_M,_23380876d_N,_23380876d_P,_23380876d_S,_23380876d_ZS});
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ADLAM = _23380876d__ADLAM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_AHOM = _23380876d__AHOM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ANATOLIAN_HIEROGLYPHS = _23380876d__ANATOLIAN_HIEROGLYPHS;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ARABIC = _23380876d__ARABIC;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_ARMENIAN = _23380876d__ARMENIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_AVESTAN = _23380876d__AVESTAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BALINESE = _23380876d__BALINESE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BAMUM = _23380876d__BAMUM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BASSA_VAH = _23380876d__BASSA_VAH;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BATAK = _23380876d__BATAK;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BENGALI = _23380876d__BENGALI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BHAIKSUKI = _23380876d__BHAIKSUKI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BOPOMOFO = _23380876d__BOPOMOFO;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BRAHMI = _23380876d__BRAHMI;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BRAILLE = _23380876d__BRAILLE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BUGINESE = _23380876d__BUGINESE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_BUHID = _23380876d__BUHID;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CANADIAN_ABORIGINAL = _23380876d__CANADIAN_ABORIGINAL;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CARIAN = _23380876d__CARIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CAUCASIAN_ALBANIAN = _23380876d__CAUCASIAN_ALBANIAN;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CHAKMA = _23380876d__CHAKMA;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CHAM = _23380876d__CHAM;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CHEROKEE = _23380876d__CHEROKEE;
static jule::Ptr<_234223e9b_RangeTable> _23380876d_CHORASMIAN = _23380876d__CHORASMIAN;
static jule::Str _231e610d6_ARCH = jule::Str("arm64", 5);
static jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>> _23380876d_CATEGORIES = jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>>({{jule::Str("C", 1),_23380876d_C},{jule::Str("CC", 2),_23380876d_CC},{jule::Str("CF", 2),_23380876d_CF},{jule::Str("CO", 2),_23380876d_CO},{jule::Str("CS", 2),_23380876d_CS},{jule::Str("L", 1),_23380876d_L},{jule::Str("LL", 2),_23380876d_LL},{jule::Str("LM", 2),_23380876d_LM},{jule::Str("LO", 2),_23380876d_LO},{jule::Str("LT", 2),_23380876d_LT},{jule::Str("LU", 2),_23380876d_LU},{jule::Str("M", 1),_23380876d_M},{jule::Str("MC", 2),_23380876d_MC},{jule::Str("ME", 2),_23380876d_ME},{jule::Str("MN", 2),_23380876d_MN},{jule::Str("N", 1),_23380876d_N},{jule::Str("ND", 2),_23380876d_ND},{jule::Str("NL", 2),_23380876d_NL},{jule::Str("NO", 2),_23380876d_NO},{jule::Str("P", 1),_23380876d_P},{jule::Str("PC", 2),_23380876d_PC},{jule::Str("PD", 2),_23380876d_PD},{jule::Str("PE", 2),_23380876d_PE},{jule::Str("PF", 2),_23380876d_PF},{jule::Str("PI", 2),_23380876d_PI},{jule::Str("PO", 2),_23380876d_PO},{jule::Str("PS", 2),_23380876d_PS},{jule::Str("S", 1),_23380876d_S},{jule::Str("SC", 2),_23380876d_SC},{jule::Str("SK", 2),_23380876d_SK},{jule::Str("SM", 2),_23380876d_SM},{jule::Str("SO", 2),_23380876d_SO},{jule::Str("Z", 1),_23380876d_Z},{jule::Str("ZL", 2),_23380876d_ZL},{jule::Str("ZP", 2),_23380876d_ZP},{jule::Str("ZS", 2),_23380876d_ZS}});
static jule::Array<jule::U8,256> _23380876d__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
static jule::Array<jule::Array<jule::Str,2>,4> _231dc6612_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,4>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)})});
static jule::Slice<_234223e9b_CaseRange> _23380876d__CASE_RANGES = jule::Slice<_234223e9b_CaseRange>({_234223e9b_CaseRange(65LLU,90LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(97LLU,122LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(181LLU,181LLU,jule::Array<jule::I32,3>({743LL,0LL,743LL})),_234223e9b_CaseRange(192LLU,214LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(216LLU,222LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(224LLU,246LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(248LLU,254LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(255LLU,255LLU,jule::Array<jule::I32,3>({121LL,0LL,121LL})),_234223e9b_CaseRange(256LLU,303LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(304LLU,304LLU,jule::Array<jule::I32,3>({0LL,-199LL,0LL})),_234223e9b_CaseRange(305LLU,305LLU,jule::Array<jule::I32,3>({-232LL,0LL,-232LL})),_234223e9b_CaseRange(306LLU,311LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(313LLU,328LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(330LLU,375LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(376LLU,376LLU,jule::Array<jule::I32,3>({0LL,-121LL,0LL})),_234223e9b_CaseRange(377LLU,382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(383LLU,383LLU,jule::Array<jule::I32,3>({-300LL,0LL,-300LL})),_234223e9b_CaseRange(384LLU,384LLU,jule::Array<jule::I32,3>({195LL,0LL,195LL})),_234223e9b_CaseRange(385LLU,385LLU,jule::Array<jule::I32,3>({0LL,210LL,0LL})),_234223e9b_CaseRange(386LLU,389LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(390LLU,390LLU,jule::Array<jule::I32,3>({0LL,206LL,0LL})),_234223e9b_CaseRange(391LLU,392LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(393LLU,394LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_234223e9b_CaseRange(395LLU,396LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(398LLU,398LLU,jule::Array<jule::I32,3>({0LL,79LL,0LL})),_234223e9b_CaseRange(399LLU,399LLU,jule::Array<jule::I32,3>({0LL,202LL,0LL})),_234223e9b_CaseRange(400LLU,400LLU,jule::Array<jule::I32,3>({0LL,203LL,0LL})),_234223e9b_CaseRange(401LLU,402LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(403LLU,403LLU,jule::Array<jule::I32,3>({0LL,205LL,0LL})),_234223e9b_CaseRange(404LLU,404LLU,jule::Array<jule::I32,3>({0LL,207LL,0LL})),_234223e9b_CaseRange(405LLU,405LLU,jule::Array<jule::I32,3>({97LL,0LL,97LL})),_234223e9b_CaseRange(406LLU,406LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_234223e9b_CaseRange(407LLU,407LLU,jule::Array<jule::I32,3>({0LL,209LL,0LL})),_234223e9b_CaseRange(408LLU,409LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(410LLU,410LLU,jule::Array<jule::I32,3>({163LL,0LL,163LL})),_234223e9b_CaseRange(412LLU,412LLU,jule::Array<jule::I32,3>({0LL,211LL,0LL})),_234223e9b_CaseRange(413LLU,413LLU,jule::Array<jule::I32,3>({0LL,213LL,0LL})),_234223e9b_CaseRange(414LLU,414LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_234223e9b_CaseRange(415LLU,415LLU,jule::Array<jule::I32,3>({0LL,214LL,0LL})),_234223e9b_CaseRange(416LLU,421LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(422LLU,422LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_234223e9b_CaseRange(423LLU,424LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(425LLU,425LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_234223e9b_CaseRange(428LLU,429LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(430LLU,430LLU,jule::Array<jule::I32,3>({0LL,218LL,0LL})),_234223e9b_CaseRange(431LLU,432LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(433LLU,434LLU,jule::Array<jule::I32,3>({0LL,217LL,0LL})),_234223e9b_CaseRange(435LLU,438LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(439LLU,439LLU,jule::Array<jule::I32,3>({0LL,219LL,0LL})),_234223e9b_CaseRange(440LLU,441LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(444LLU,445LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(447LLU,447LLU,jule::Array<jule::I32,3>({56LL,0LL,56LL})),_234223e9b_CaseRange(452LLU,452LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_234223e9b_CaseRange(453LLU,453LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_234223e9b_CaseRange(454LLU,454LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_234223e9b_CaseRange(455LLU,455LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_234223e9b_CaseRange(456LLU,456LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_234223e9b_CaseRange(457LLU,457LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_234223e9b_CaseRange(458LLU,458LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_234223e9b_CaseRange(459LLU,459LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_234223e9b_CaseRange(460LLU,460LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_234223e9b_CaseRange(461LLU,476LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(477LLU,477LLU,jule::Array<jule::I32,3>({-79LL,0LL,-79LL})),_234223e9b_CaseRange(478LLU,495LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(497LLU,497LLU,jule::Array<jule::I32,3>({0LL,2LL,1LL})),_234223e9b_CaseRange(498LLU,498LLU,jule::Array<jule::I32,3>({-1LL,1LL,0LL})),_234223e9b_CaseRange(499LLU,499LLU,jule::Array<jule::I32,3>({-2LL,0LL,-1LL})),_234223e9b_CaseRange(500LLU,501LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(502LLU,502LLU,jule::Array<jule::I32,3>({0LL,-97LL,0LL})),_234223e9b_CaseRange(503LLU,503LLU,jule::Array<jule::I32,3>({0LL,-56LL,0LL})),_234223e9b_CaseRange(504LLU,543LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(544LLU,544LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_234223e9b_CaseRange(546LLU,563LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(570LLU,570LLU,jule::Array<jule::I32,3>({0LL,10795LL,0LL})),_234223e9b_CaseRange(571LLU,572LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(573LLU,573LLU,jule::Array<jule::I32,3>({0LL,-163LL,0LL})),_234223e9b_CaseRange(574LLU,574LLU,jule::Array<jule::I32,3>({0LL,10792LL,0LL})),_234223e9b_CaseRange(575LLU,576LLU,jule::Array<jule::I32,3>({10815LL,0LL,10815LL})),_234223e9b_CaseRange(577LLU,578LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(579LLU,579LLU,jule::Array<jule::I32,3>({0LL,-195LL,0LL})),_234223e9b_CaseRange(580LLU,580LLU,jule::Array<jule::I32,3>({0LL,69LL,0LL})),_234223e9b_CaseRange(581LLU,581LLU,jule::Array<jule::I32,3>({0LL,71LL,0LL})),_234223e9b_CaseRange(582LLU,591LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(592LLU,592LLU,jule::Array<jule::I32,3>({10783LL,0LL,10783LL})),_234223e9b_CaseRange(593LLU,593LLU,jule::Array<jule::I32,3>({10780LL,0LL,10780LL})),_234223e9b_CaseRange(594LLU,594LLU,jule::Array<jule::I32,3>({10782LL,0LL,10782LL})),_234223e9b_CaseRange(595LLU,595LLU,jule::Array<jule::I32,3>({-210LL,0LL,-210LL})),_234223e9b_CaseRange(596LLU,596LLU,jule::Array<jule::I32,3>({-206LL,0LL,-206LL})),_234223e9b_CaseRange(598LLU,599LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_234223e9b_CaseRange(601LLU,601LLU,jule::Array<jule::I32,3>({-202LL,0LL,-202LL})),_234223e9b_CaseRange(603LLU,603LLU,jule::Array<jule::I32,3>({-203LL,0LL,-203LL})),_234223e9b_CaseRange(604LLU,604LLU,jule::Array<jule::I32,3>({42319LL,0LL,42319LL})),_234223e9b_CaseRange(608LLU,608LLU,jule::Array<jule::I32,3>({-205LL,0LL,-205LL})),_234223e9b_CaseRange(609LLU,609LLU,jule::Array<jule::I32,3>({42315LL,0LL,42315LL})),_234223e9b_CaseRange(611LLU,611LLU,jule::Array<jule::I32,3>({-207LL,0LL,-207LL})),_234223e9b_CaseRange(613LLU,613LLU,jule::Array<jule::I32,3>({42280LL,0LL,42280LL})),_234223e9b_CaseRange(614LLU,614LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_234223e9b_CaseRange(616LLU,616LLU,jule::Array<jule::I32,3>({-209LL,0LL,-209LL})),_234223e9b_CaseRange(617LLU,617LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_234223e9b_CaseRange(618LLU,618LLU,jule::Array<jule::I32,3>({42308LL,0LL,42308LL})),_234223e9b_CaseRange(619LLU,619LLU,jule::Array<jule::I32,3>({10743LL,0LL,10743LL})),_234223e9b_CaseRange(620LLU,620LLU,jule::Array<jule::I32,3>({42305LL,0LL,42305LL})),_234223e9b_CaseRange(623LLU,623LLU,jule::Array<jule::I32,3>({-211LL,0LL,-211LL})),_234223e9b_CaseRange(625LLU,625LLU,jule::Array<jule::I32,3>({10749LL,0LL,10749LL})),_234223e9b_CaseRange(626LLU,626LLU,jule::Array<jule::I32,3>({-213LL,0LL,-213LL})),_234223e9b_CaseRange(629LLU,629LLU,jule::Array<jule::I32,3>({-214LL,0LL,-214LL})),_234223e9b_CaseRange(637LLU,637LLU,jule::Array<jule::I32,3>({10727LL,0LL,10727LL})),_234223e9b_CaseRange(640LLU,640LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_234223e9b_CaseRange(642LLU,642LLU,jule::Array<jule::I32,3>({42307LL,0LL,42307LL})),_234223e9b_CaseRange(643LLU,643LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_234223e9b_CaseRange(647LLU,647LLU,jule::Array<jule::I32,3>({42282LL,0LL,42282LL})),_234223e9b_CaseRange(648LLU,648LLU,jule::Array<jule::I32,3>({-218LL,0LL,-218LL})),_234223e9b_CaseRange(649LLU,649LLU,jule::Array<jule::I32,3>({-69LL,0LL,-69LL})),_234223e9b_CaseRange(650LLU,651LLU,jule::Array<jule::I32,3>({-217LL,0LL,-217LL})),_234223e9b_CaseRange(652LLU,652LLU,jule::Array<jule::I32,3>({-71LL,0LL,-71LL})),_234223e9b_CaseRange(658LLU,658LLU,jule::Array<jule::I32,3>({-219LL,0LL,-219LL})),_234223e9b_CaseRange(669LLU,669LLU,jule::Array<jule::I32,3>({42261LL,0LL,42261LL})),_234223e9b_CaseRange(670LLU,670LLU,jule::Array<jule::I32,3>({42258LL,0LL,42258LL})),_234223e9b_CaseRange(837LLU,837LLU,jule::Array<jule::I32,3>({84LL,0LL,84LL})),_234223e9b_CaseRange(880LLU,883LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(886LLU,887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(891LLU,893LLU,jule::Array<jule::I32,3>({130LL,0LL,130LL})),_234223e9b_CaseRange(895LLU,895LLU,jule::Array<jule::I32,3>({0LL,116LL,0LL})),_234223e9b_CaseRange(902LLU,902LLU,jule::Array<jule::I32,3>({0LL,38LL,0LL})),_234223e9b_CaseRange(904LLU,906LLU,jule::Array<jule::I32,3>({0LL,37LL,0LL})),_234223e9b_CaseRange(908LLU,908LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_234223e9b_CaseRange(910LLU,911LLU,jule::Array<jule::I32,3>({0LL,63LL,0LL})),_234223e9b_CaseRange(913LLU,929LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(931LLU,939LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(940LLU,940LLU,jule::Array<jule::I32,3>({-38LL,0LL,-38LL})),_234223e9b_CaseRange(941LLU,943LLU,jule::Array<jule::I32,3>({-37LL,0LL,-37LL})),_234223e9b_CaseRange(945LLU,961LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(962LLU,962LLU,jule::Array<jule::I32,3>({-31LL,0LL,-31LL})),_234223e9b_CaseRange(963LLU,971LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(972LLU,972LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_234223e9b_CaseRange(973LLU,974LLU,jule::Array<jule::I32,3>({-63LL,0LL,-63LL})),_234223e9b_CaseRange(975LLU,975LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_234223e9b_CaseRange(976LLU,976LLU,jule::Array<jule::I32,3>({-62LL,0LL,-62LL})),_234223e9b_CaseRange(977LLU,977LLU,jule::Array<jule::I32,3>({-57LL,0LL,-57LL})),_234223e9b_CaseRange(981LLU,981LLU,jule::Array<jule::I32,3>({-47LL,0LL,-47LL})),_234223e9b_CaseRange(982LLU,982LLU,jule::Array<jule::I32,3>({-54LL,0LL,-54LL})),_234223e9b_CaseRange(983LLU,983LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_234223e9b_CaseRange(984LLU,1007LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1008LLU,1008LLU,jule::Array<jule::I32,3>({-86LL,0LL,-86LL})),_234223e9b_CaseRange(1009LLU,1009LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_234223e9b_CaseRange(1010LLU,1010LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_234223e9b_CaseRange(1011LLU,1011LLU,jule::Array<jule::I32,3>({-116LL,0LL,-116LL})),_234223e9b_CaseRange(1012LLU,1012LLU,jule::Array<jule::I32,3>({0LL,-60LL,0LL})),_234223e9b_CaseRange(1013LLU,1013LLU,jule::Array<jule::I32,3>({-96LL,0LL,-96LL})),_234223e9b_CaseRange(1015LLU,1016LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1017LLU,1017LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_234223e9b_CaseRange(1018LLU,1019LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1021LLU,1023LLU,jule::Array<jule::I32,3>({0LL,-130LL,0LL})),_234223e9b_CaseRange(1024LLU,1039LLU,jule::Array<jule::I32,3>({0LL,80LL,0LL})),_234223e9b_CaseRange(1040LLU,1071LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(1072LLU,1103LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(1104LLU,1119LLU,jule::Array<jule::I32,3>({-80LL,0LL,-80LL})),_234223e9b_CaseRange(1120LLU,1153LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1162LLU,1215LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1216LLU,1216LLU,jule::Array<jule::I32,3>({0LL,15LL,0LL})),_234223e9b_CaseRange(1217LLU,1230LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1231LLU,1231LLU,jule::Array<jule::I32,3>({-15LL,0LL,-15LL})),_234223e9b_CaseRange(1232LLU,1327LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(1329LLU,1366LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_234223e9b_CaseRange(1377LLU,1414LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_234223e9b_CaseRange(4256LLU,4293LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_234223e9b_CaseRange(4295LLU,4295LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_234223e9b_CaseRange(4301LLU,4301LLU,jule::Array<jule::I32,3>({0LL,7264LL,0LL})),_234223e9b_CaseRange(4304LLU,4346LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_234223e9b_CaseRange(4349LLU,4351LLU,jule::Array<jule::I32,3>({3008LL,0LL,0LL})),_234223e9b_CaseRange(5024LLU,5103LLU,jule::Array<jule::I32,3>({0LL,38864LL,0LL})),_234223e9b_CaseRange(5104LLU,5109LLU,jule::Array<jule::I32,3>({0LL,8LL,0LL})),_234223e9b_CaseRange(5112LLU,5117LLU,jule::Array<jule::I32,3>({-8LL,0LL,-8LL})),_234223e9b_CaseRange(7296LLU,7296LLU,jule::Array<jule::I32,3>({-6254LL,0LL,-6254LL})),_234223e9b_CaseRange(7297LLU,7297LLU,jule::Array<jule::I32,3>({-6253LL,0LL,-6253LL})),_234223e9b_CaseRange(7298LLU,7298LLU,jule::Array<jule::I32,3>({-6244LL,0LL,-6244LL})),_234223e9b_CaseRange(7299LLU,7300LLU,jule::Array<jule::I32,3>({-6242LL,0LL,-6242LL})),_234223e9b_CaseRange(7301LLU,7301LLU,jule::Array<jule::I32,3>({-6243LL,0LL,-6243LL})),_234223e9b_CaseRange(7302LLU,7302LLU,jule::Array<jule::I32,3>({-6236LL,0LL,-6236LL})),_234223e9b_CaseRange(7303LLU,7303LLU,jule::Array<jule::I32,3>({-6181LL,0LL,-6181LL})),_234223e9b_CaseRange(7304LLU,7304LLU,jule::Array<jule::I32,3>({35266LL,0LL,35266LL})),_234223e9b_CaseRange(7312LLU,7354LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_234223e9b_CaseRange(7357LLU,7359LLU,jule::Array<jule::I32,3>({0LL,-3008LL,0LL})),_234223e9b_CaseRange(7545LLU,7545LLU,jule::Array<jule::I32,3>({35332LL,0LL,35332LL})),_234223e9b_CaseRange(7549LLU,7549LLU,jule::Array<jule::I32,3>({3814LL,0LL,3814LL})),_234223e9b_CaseRange(7566LLU,7566LLU,jule::Array<jule::I32,3>({35384LL,0LL,35384LL})),_234223e9b_CaseRange(7680LLU,7829LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(7835LLU,7835LLU,jule::Array<jule::I32,3>({-59LL,0LL,-59LL})),_234223e9b_CaseRange(7838LLU,7838LLU,jule::Array<jule::I32,3>({0LL,-7615LL,0LL})),_234223e9b_CaseRange(7840LLU,7935LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(7936LLU,7943LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(7944LLU,7951LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(7952LLU,7957LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(7960LLU,7965LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(7968LLU,7975LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(7976LLU,7983LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(7984LLU,7991LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(7992LLU,7999LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8000LLU,8005LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8008LLU,8013LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8017LLU,8017LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8019LLU,8019LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8021LLU,8021LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8023LLU,8023LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8025LLU,8025LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8027LLU,8027LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8029LLU,8029LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8031LLU,8031LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8032LLU,8039LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8040LLU,8047LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8048LLU,8049LLU,jule::Array<jule::I32,3>({74LL,0LL,74LL})),_234223e9b_CaseRange(8050LLU,8053LLU,jule::Array<jule::I32,3>({86LL,0LL,86LL})),_234223e9b_CaseRange(8054LLU,8055LLU,jule::Array<jule::I32,3>({100LL,0LL,100LL})),_234223e9b_CaseRange(8056LLU,8057LLU,jule::Array<jule::I32,3>({128LL,0LL,128LL})),_234223e9b_CaseRange(8058LLU,8059LLU,jule::Array<jule::I32,3>({112LL,0LL,112LL})),_234223e9b_CaseRange(8060LLU,8061LLU,jule::Array<jule::I32,3>({126LL,0LL,126LL})),_234223e9b_CaseRange(8064LLU,8071LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8072LLU,8079LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8080LLU,8087LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8088LLU,8095LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8096LLU,8103LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8104LLU,8111LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8112LLU,8113LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8115LLU,8115LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_234223e9b_CaseRange(8120LLU,8121LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8122LLU,8123LLU,jule::Array<jule::I32,3>({0LL,-74LL,0LL})),_234223e9b_CaseRange(8124LLU,8124LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_234223e9b_CaseRange(8126LLU,8126LLU,jule::Array<jule::I32,3>({-7205LL,0LL,-7205LL})),_234223e9b_CaseRange(8131LLU,8131LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_234223e9b_CaseRange(8136LLU,8139LLU,jule::Array<jule::I32,3>({0LL,-86LL,0LL})),_234223e9b_CaseRange(8140LLU,8140LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_234223e9b_CaseRange(8144LLU,8145LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8152LLU,8153LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8154LLU,8155LLU,jule::Array<jule::I32,3>({0LL,-100LL,0LL})),_234223e9b_CaseRange(8160LLU,8161LLU,jule::Array<jule::I32,3>({8LL,0LL,8LL})),_234223e9b_CaseRange(8165LLU,8165LLU,jule::Array<jule::I32,3>({7LL,0LL,7LL})),_234223e9b_CaseRange(8168LLU,8169LLU,jule::Array<jule::I32,3>({0LL,-8LL,0LL})),_234223e9b_CaseRange(8170LLU,8171LLU,jule::Array<jule::I32,3>({0LL,-112LL,0LL})),_234223e9b_CaseRange(8172LLU,8172LLU,jule::Array<jule::I32,3>({0LL,-7LL,0LL})),_234223e9b_CaseRange(8179LLU,8179LLU,jule::Array<jule::I32,3>({9LL,0LL,9LL})),_234223e9b_CaseRange(8184LLU,8185LLU,jule::Array<jule::I32,3>({0LL,-128LL,0LL})),_234223e9b_CaseRange(8186LLU,8187LLU,jule::Array<jule::I32,3>({0LL,-126LL,0LL})),_234223e9b_CaseRange(8188LLU,8188LLU,jule::Array<jule::I32,3>({0LL,-9LL,0LL})),_234223e9b_CaseRange(8486LLU,8486LLU,jule::Array<jule::I32,3>({0LL,-7517LL,0LL})),_234223e9b_CaseRange(8490LLU,8490LLU,jule::Array<jule::I32,3>({0LL,-8383LL,0LL})),_234223e9b_CaseRange(8491LLU,8491LLU,jule::Array<jule::I32,3>({0LL,-8262LL,0LL})),_234223e9b_CaseRange(8498LLU,8498LLU,jule::Array<jule::I32,3>({0LL,28LL,0LL})),_234223e9b_CaseRange(8526LLU,8526LLU,jule::Array<jule::I32,3>({-28LL,0LL,-28LL})),_234223e9b_CaseRange(8544LLU,8559LLU,jule::Array<jule::I32,3>({0LL,16LL,0LL})),_234223e9b_CaseRange(8560LLU,8575LLU,jule::Array<jule::I32,3>({-16LL,0LL,-16LL})),_234223e9b_CaseRange(8579LLU,8580LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(9398LLU,9423LLU,jule::Array<jule::I32,3>({0LL,26LL,0LL})),_234223e9b_CaseRange(9424LLU,9449LLU,jule::Array<jule::I32,3>({-26LL,0LL,-26LL})),_234223e9b_CaseRange(11264LLU,11311LLU,jule::Array<jule::I32,3>({0LL,48LL,0LL})),_234223e9b_CaseRange(11312LLU,11359LLU,jule::Array<jule::I32,3>({-48LL,0LL,-48LL})),_234223e9b_CaseRange(11360LLU,11361LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11362LLU,11362LLU,jule::Array<jule::I32,3>({0LL,-10743LL,0LL})),_234223e9b_CaseRange(11363LLU,11363LLU,jule::Array<jule::I32,3>({0LL,-3814LL,0LL})),_234223e9b_CaseRange(11364LLU,11364LLU,jule::Array<jule::I32,3>({0LL,-10727LL,0LL})),_234223e9b_CaseRange(11365LLU,11365LLU,jule::Array<jule::I32,3>({-10795LL,0LL,-10795LL})),_234223e9b_CaseRange(11366LLU,11366LLU,jule::Array<jule::I32,3>({-10792LL,0LL,-10792LL})),_234223e9b_CaseRange(11367LLU,11372LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11373LLU,11373LLU,jule::Array<jule::I32,3>({0LL,-10780LL,0LL})),_234223e9b_CaseRange(11374LLU,11374LLU,jule::Array<jule::I32,3>({0LL,-10749LL,0LL})),_234223e9b_CaseRange(11375LLU,11375LLU,jule::Array<jule::I32,3>({0LL,-10783LL,0LL})),_234223e9b_CaseRange(11376LLU,11376LLU,jule::Array<jule::I32,3>({0LL,-10782LL,0LL})),_234223e9b_CaseRange(11378LLU,11379LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11381LLU,11382LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11390LLU,11391LLU,jule::Array<jule::I32,3>({0LL,-10815LL,0LL})),_234223e9b_CaseRange(11392LLU,11491LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11499LLU,11502LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11506LLU,11507LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(11520LLU,11557LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_234223e9b_CaseRange(11559LLU,11559LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_234223e9b_CaseRange(11565LLU,11565LLU,jule::Array<jule::I32,3>({-7264LL,0LL,-7264LL})),_234223e9b_CaseRange(42560LLU,42605LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42624LLU,42651LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42786LLU,42799LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42802LLU,42863LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42873LLU,42876LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42877LLU,42877LLU,jule::Array<jule::I32,3>({0LL,-35332LL,0LL})),_234223e9b_CaseRange(42878LLU,42887LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42891LLU,42892LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42893LLU,42893LLU,jule::Array<jule::I32,3>({0LL,-42280LL,0LL})),_234223e9b_CaseRange(42896LLU,42899LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42900LLU,42900LLU,jule::Array<jule::I32,3>({48LL,0LL,48LL})),_234223e9b_CaseRange(42902LLU,42921LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42922LLU,42922LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_234223e9b_CaseRange(42923LLU,42923LLU,jule::Array<jule::I32,3>({0LL,-42319LL,0LL})),_234223e9b_CaseRange(42924LLU,42924LLU,jule::Array<jule::I32,3>({0LL,-42315LL,0LL})),_234223e9b_CaseRange(42925LLU,42925LLU,jule::Array<jule::I32,3>({0LL,-42305LL,0LL})),_234223e9b_CaseRange(42926LLU,42926LLU,jule::Array<jule::I32,3>({0LL,-42308LL,0LL})),_234223e9b_CaseRange(42928LLU,42928LLU,jule::Array<jule::I32,3>({0LL,-42258LL,0LL})),_234223e9b_CaseRange(42929LLU,42929LLU,jule::Array<jule::I32,3>({0LL,-42282LL,0LL})),_234223e9b_CaseRange(42930LLU,42930LLU,jule::Array<jule::I32,3>({0LL,-42261LL,0LL})),_234223e9b_CaseRange(42931LLU,42931LLU,jule::Array<jule::I32,3>({0LL,928LL,0LL})),_234223e9b_CaseRange(42932LLU,42947LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42948LLU,42948LLU,jule::Array<jule::I32,3>({0LL,-48LL,0LL})),_234223e9b_CaseRange(42949LLU,42949LLU,jule::Array<jule::I32,3>({0LL,-42307LL,0LL})),_234223e9b_CaseRange(42950LLU,42950LLU,jule::Array<jule::I32,3>({0LL,-35384LL,0LL})),_234223e9b_CaseRange(42951LLU,42954LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42960LLU,42961LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42966LLU,42969LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(42997LLU,42998LLU,jule::Array<jule::I32,3>({1114112LL,1114112LL,1114112LL})),_234223e9b_CaseRange(43859LLU,43859LLU,jule::Array<jule::I32,3>({-928LL,0LL,-928LL})),_234223e9b_CaseRange(43888LLU,43967LLU,jule::Array<jule::I32,3>({-38864LL,0LL,-38864LL})),_234223e9b_CaseRange(65313LLU,65338LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(65345LLU,65370LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(66560LLU,66599LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_234223e9b_CaseRange(66600LLU,66639LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_234223e9b_CaseRange(66736LLU,66771LLU,jule::Array<jule::I32,3>({0LL,40LL,0LL})),_234223e9b_CaseRange(66776LLU,66811LLU,jule::Array<jule::I32,3>({-40LL,0LL,-40LL})),_234223e9b_CaseRange(66928LLU,66938LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_234223e9b_CaseRange(66940LLU,66954LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_234223e9b_CaseRange(66956LLU,66962LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_234223e9b_CaseRange(66964LLU,66965LLU,jule::Array<jule::I32,3>({0LL,39LL,0LL})),_234223e9b_CaseRange(66967LLU,66977LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_234223e9b_CaseRange(66979LLU,66993LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_234223e9b_CaseRange(66995LLU,67001LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_234223e9b_CaseRange(67003LLU,67004LLU,jule::Array<jule::I32,3>({-39LL,0LL,-39LL})),_234223e9b_CaseRange(68736LLU,68786LLU,jule::Array<jule::I32,3>({0LL,64LL,0LL})),_234223e9b_CaseRange(68800LLU,68850LLU,jule::Array<jule::I32,3>({-64LL,0LL,-64LL})),_234223e9b_CaseRange(71840LLU,71871LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(71872LLU,71903LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(93760LLU,93791LLU,jule::Array<jule::I32,3>({0LL,32LL,0LL})),_234223e9b_CaseRange(93792LLU,93823LLU,jule::Array<jule::I32,3>({-32LL,0LL,-32LL})),_234223e9b_CaseRange(125184LLU,125217LLU,jule::Array<jule::I32,3>({0LL,34LL,0LL})),_234223e9b_CaseRange(125218LLU,125251LLU,jule::Array<jule::I32,3>({-34LL,0LL,-34LL}))});
static jule::Slice<_234223e9b_CaseRange> _23380876d_CASE_RANGES = _23380876d__CASE_RANGES;
static jule::Array<jule::U8,256> _23381108e_FIRST = jule::Array<jule::U8,256>({});
static jule::Array<_23381108e_accept_range,16> _23381108e_ACCEPT_RANGES = jule::Array<_23381108e_accept_range,16>({_23381108e_accept_range(128LLU,191LLU),_23381108e_accept_range(160LLU,191LLU),_23381108e_accept_range(128LLU,159LLU),_23381108e_accept_range(144LLU,191LLU),_23381108e_accept_range(128LLU,143LLU)});
static jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>> _23380876d_SCRIPTS = jule::Map<jule::Str,jule::Ptr<_234223e9b_RangeTable>>({{jule::Str("Adlam", 5),_23380876d_ADLAM},{jule::Str("Ahom", 4),_23380876d_AHOM},{jule::Str("Anatolian_Hieroglyphs", 21),_23380876d_ANATOLIAN_HIEROGLYPHS},{jule::Str("Arabic", 6),_23380876d_ARABIC},{jule::Str("Armenian", 8),_23380876d_ARMENIAN},{jule::Str("Avestan", 7),_23380876d_AVESTAN},{jule::Str("Balinese", 8),_23380876d_BALINESE},{jule::Str("Bamum", 5),_23380876d_BAMUM},{jule::Str("Bassa_Vah", 9),_23380876d_BASSA_VAH},{jule::Str("Batak", 5),_23380876d_BATAK},{jule::Str("Bengali", 7),_23380876d_BENGALI},{jule::Str("Bhaiksuki", 9),_23380876d_BHAIKSUKI},{jule::Str("Bopomofo", 8),_23380876d_BOPOMOFO},{jule::Str("Brahmi", 6),_23380876d_BRAHMI},{jule::Str("Braille", 7),_23380876d_BRAILLE},{jule::Str("Buginese", 8),_23380876d_BUGINESE},{jule::Str("Buhid", 5),_23380876d_BUHID},{jule::Str("Canadian_Aboriginal", 19),_23380876d_CANADIAN_ABORIGINAL},{jule::Str("Carian", 6),_23380876d_CARIAN},{jule::Str("Caucasian_Albanian", 18),_23380876d_CAUCASIAN_ALBANIAN},{jule::Str("Chakma", 6),_23380876d_CHAKMA},{jule::Str("Cham", 4),_23380876d_CHAM},{jule::Str("Cherokee", 8),_23380876d_CHEROKEE},{jule::Str("Chorasmian", 10),_23380876d_CHORASMIAN},{jule::Str("Common", 6),_23380876d_COMMON},{jule::Str("Coptic", 6),_23380876d_COPTIC},{jule::Str("Cuneiform", 9),_23380876d_CUNEIFORM},{jule::Str("Cypriot", 7),_23380876d_CYPRIOT},{jule::Str("Cypro_Minoan", 12),_23380876d_CYPRO_MINOAN},{jule::Str("Cyrillic", 8),_23380876d_CYRILLIC},{jule::Str("Deseret", 7),_23380876d_DESERET},{jule::Str("Devanagari", 10),_23380876d_DEVANAGARI},{jule::Str("Dives_Akuru", 11),_23380876d_DIVES_AKURU},{jule::Str("Dogra", 5),_23380876d_DOGRA},{jule::Str("Duployan", 8),_23380876d_DUPLOYAN},{jule::Str("Egyptian_Hieroglyphs", 20),_23380876d_EGYPTIAN_HIEROGLYPHS},{jule::Str("Elbasan", 7),_23380876d_ELBASAN},{jule::Str("Elymaic", 7),_23380876d_ELYMAIC},{jule::Str("Ethiopic", 8),_23380876d_ETHIOPIC},{jule::Str("Georgian", 8),_23380876d_GEORGIAN},{jule::Str("Glagolitic", 10),_23380876d_GLAGOLITIC},{jule::Str("Gothic", 6),_23380876d_GOTHIC},{jule::Str("Grantha", 7),_23380876d_GRANTHA},{jule::Str("Greek", 5),_23380876d_GREEK},{jule::Str("Gujarati", 8),_23380876d_GUJARATI},{jule::Str("Gunjala_Gondi", 13),_23380876d_GUNJALA_GONDI},{jule::Str("Gurmukhi", 8),_23380876d_GURMUKHI},{jule::Str("Han", 3),_23380876d_HAN},{jule::Str("Hangul", 6),_23380876d_HANGUL},{jule::Str("Hanifi_Rohingya", 15),_23380876d_HANIFI_ROHINGYA},{jule::Str("Hanunoo", 7),_23380876d_HANUNOO},{jule::Str("Hatran", 6),_23380876d_HATRAN},{jule::Str("Hebrew", 6),_23380876d_HEBREW},{jule::Str("Hiragana", 8),_23380876d_HIRAGANA},{jule::Str("Imperial_Aramaic", 16),_23380876d_IMPERIAL_ARAMAIC},{jule::Str("Inherited", 9),_23380876d_INHERITED},{jule::Str("Inscriptional_Pahlavi", 21),_23380876d_INSCRIPTIONAL_PAHLAVI},{jule::Str("Inscriptional_Parthian", 22),_23380876d_INSCRIPTIONAL_PARTHIAN},{jule::Str("Javanese", 8),_23380876d_JAVANESE},{jule::Str("Kaithi", 6),_23380876d_KAITHI},{jule::Str("Kannada", 7),_23380876d_KANNADA},{jule::Str("Katakana", 8),_23380876d_KATAKANA},{jule::Str("Kawi", 4),_23380876d_KAWI},{jule::Str("Kayah_Li", 8),_23380876d_KAYAH_LI},{jule::Str("Kharoshthi", 10),_23380876d_KHAROSHTHI},{jule::Str("Khitan_Small_Script", 19),_23380876d_KHITAN_SMALL_SCRIPT},{jule::Str("Khmer", 5),_23380876d_KHMER},{jule::Str("Khojki", 6),_23380876d_KHOJKI},{jule::Str("Khudawadi", 9),_23380876d_KHUDAWADI},{jule::Str("Lao", 3),_23380876d_LAO},{jule::Str("Latin", 5),_23380876d_LATIN},{jule::Str("Lepcha", 6),_23380876d_LEPCHA},{jule::Str("Limbu", 5),_23380876d_LIMBU},{jule::Str("Linear_A", 8),_23380876d_LINEAR_A},{jule::Str("Linear_B", 8),_23380876d_LINEAR_B},{jule::Str("Lisu", 4),_23380876d_LISU},{jule::Str("Lycian", 6),_23380876d_LYCIAN},{jule::Str("Lydian", 6),_23380876d_LYDIAN},{jule::Str("Mahajani", 8),_23380876d_MAHAJANI},{jule::Str("Makasar", 7),_23380876d_MAKASAR},{jule::Str("Malayalam", 9),_23380876d_MALAYALAM},{jule::Str("Mandaic", 7),_23380876d_MANDAIC},{jule::Str("Manichaean", 10),_23380876d_MANICHAEAN},{jule::Str("Marchen", 7),_23380876d_MARCHEN},{jule::Str("Masaram_Gondi", 13),_23380876d_MASARAM_GONDI},{jule::Str("Medefaidrin", 11),_23380876d_MEDEFAIDRIN},{jule::Str("Meetei_Mayek", 12),_23380876d_MEETEI_MAYEK},{jule::Str("Mende_Kikakui", 13),_23380876d_MENDE_KIKAKUI},{jule::Str("Meroitic_Cursive", 16),_23380876d_MEROITIC_CURSIVE},{jule::Str("Meroitic_Hieroglyphs", 20),_23380876d_MEROITIC_HIEROGLYPHS},{jule::Str("Miao", 4),_23380876d_MIAO},{jule::Str("Modi", 4),_23380876d_MODI},{jule::Str("Mongolian", 9),_23380876d_MONGOLIAN},{jule::Str("Mro", 3),_23380876d_MRO},{jule::Str("Multani", 7),_23380876d_MULTANI},{jule::Str("Myanmar", 7),_23380876d_MYANMAR},{jule::Str("Nabataean", 9),_23380876d_NABATAEAN},{jule::Str("Nag_Mundari", 11),_23380876d_NAG_MUNDARI},{jule::Str("Nandinagari", 11),_23380876d_NANDINAGARI},{jule::Str("New_Tai_Lue", 11),_23380876d_NEW_TAI_LUE},{jule::Str("Newa", 4),_23380876d_NEWA},{jule::Str("Nko", 3),_23380876d_NKO},{jule::Str("Nushu", 5),_23380876d_NUSHU},{jule::Str("Nyiakeng_Puachue_Hmong", 22),_23380876d_NYIAKENG_PUACHUE_HMONG},{jule::Str("Ogham", 5),_23380876d_OGHAM},{jule::Str("Ol_Chiki", 8),_23380876d_OL_CHIKI},{jule::Str("Old_Hungarian", 13),_23380876d_OLD_HUNGARIAN},{jule::Str("Old_Italic", 10),_23380876d_OLD_ITALIC},{jule::Str("Old_North_Arabian", 17),_23380876d_OLD_NORTH_ARABIAN},{jule::Str("Old_Permic", 10),_23380876d_OLD_PERMIC},{jule::Str("Old_Persian", 11),_23380876d_OLD_PERSIAN},{jule::Str("Old_Sogdian", 11),_23380876d_OLD_SOGDIAN},{jule::Str("Old_South_Arabian", 17),_23380876d_OLD_SOUTH_ARABIAN},{jule::Str("Old_Turkic", 10),_23380876d_OLD_TURKIC},{jule::Str("Old_Uyghur", 10),_23380876d_OLD_UYGHUR},{jule::Str("Oriya", 5),_23380876d_ORIYA},{jule::Str("Osage", 5),_23380876d_OSAGE},{jule::Str("Osmanya", 7),_23380876d_OSMANYA},{jule::Str("Pahawh_Hmong", 12),_23380876d_PAHAWH_HMONG},{jule::Str("Palmyrene", 9),_23380876d_PALMYRENE},{jule::Str("Pau_Cin_Hau", 11),_23380876d_PAU_CIN_HAU},{jule::Str("Phags_Pa", 8),_23380876d_PHAGS_PA},{jule::Str("Phoenician", 10),_23380876d_PHOENICIAN},{jule::Str("Psalter_Pahlavi", 15),_23380876d_PSALTER_PAHLAVI},{jule::Str("Rejang", 6),_23380876d_REJANG},{jule::Str("Runic", 5),_23380876d_RUNIC},{jule::Str("Samaritan", 9),_23380876d_SAMARITAN},{jule::Str("Saurashtra", 10),_23380876d_SAURASHTRA},{jule::Str("Sharada", 7),_23380876d_SHARADA},{jule::Str("Shavian", 7),_23380876d_SHAVIAN},{jule::Str("Siddham", 7),_23380876d_SIDDHAM},{jule::Str("SignWriting", 11),_23380876d_SIGN_WRITING},{jule::Str("Sinhala", 7),_23380876d_SINHALA},{jule::Str("Sogdian", 7),_23380876d_SOGDIAN},{jule::Str("Sora_Sompeng", 12),_23380876d_SORA_SOMPENG},{jule::Str("Soyombo", 7),_23380876d_SOYOMBO},{jule::Str("Sundanese", 9),_23380876d_SUNDANESE},{jule::Str("Syloti_Nagri", 12),_23380876d_SYLOTI_NAGRI},{jule::Str("Syriac", 6),_23380876d_SYRIAC},{jule::Str("Tagalog", 7),_23380876d_TAGALOG},{jule::Str("Tagbanwa", 8),_23380876d_TAGBANWA},{jule::Str("Tai_Le", 6),_23380876d_TAI_LE},{jule::Str("Tai_Tham", 8),_23380876d_TAI_THAM},{jule::Str("Tai_Viet", 8),_23380876d_TAI_VIET},{jule::Str("Takri", 5),_23380876d_TAKRI},{jule::Str("Tamil", 5),_23380876d_TAMIL},{jule::Str("Tangsa", 6),_23380876d_TANGSA},{jule::Str("Tangut", 6),_23380876d_TANGUT},{jule::Str("Telugu", 6),_23380876d_TELUGU},{jule::Str("Thaana", 6),_23380876d_THAANA},{jule::Str("Thai", 4),_23380876d_THAI},{jule::Str("Tibetan", 7),_23380876d_TIBETAN},{jule::Str("Tifinagh", 8),_23380876d_TIFINAGH},{jule::Str("Tirhuta", 7),_23380876d_TIRHUTA},{jule::Str("Toto", 4),_23380876d_TOTO},{jule::Str("Ugaritic", 8),_23380876d_UGARITIC},{jule::Str("Vai", 3),_23380876d_VAI},{jule::Str("Vithkuqi", 8),_23380876d_VITHKUQI},{jule::Str("Wancho", 6),_23380876d_WANCHO},{jule::Str("Warang_Citi", 11),_23380876d_WARANG_CITI},{jule::Str("Yezidi", 6),_23380876d_YEZIDI},{jule::Str("Yi", 2),_23380876d_YI},{jule::Str("Zanabazar_Square", 16),_23380876d_ZANABAZAR_SQUARE}});
static jule::Str _231e610d6_OS = jule::Str("darwin", 6);

void _231dc726c_AnsiEscape::_static_method_reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



void _231dc726c_AnsiEscape::_static_method_print(jule::Str _2021_escape,jule::Str _2034_text) {
	jule::out(_2021_escape);
	jule::out(_2034_text);
	_231dc726c_AnsiEscape::_static_method_reset();
}







std::ostream &operator<<(std::ostream &_Stream, const _231dc726c_AnsiEscape &_Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



void _231dc726c_Logger::_static_method_log_flat(_231e4202e_Log& _3125_l) {
	jule::outln(_3125_l._field_text);
}



void _231dc726c_Logger::_static_method_log_error(_231e4202e_Log& _3426_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out(_3426_l._field_text);
	_231dc726c_AnsiEscape::_static_method_reset();
	if (_3426_l._field_path.len() != 0LL) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out(_3426_l._field_path);
	}
	if ((_3426_l._field_row != 0LL) && (_3426_l._field_column != 0LL)) {
		jule::out(jule::Str(":", 1));
		jule::out(_232e766a0_itoa(_3426_l._field_row));
		jule::out(jule::Str(":", 1));
		jule::out(_232e766a0_itoa(_3426_l._field_column));
	}
	if (_3426_l._field_line.len() != 0LL) {
		jule::Str _5121_line = _3426_l._field_line.ltrim(jule::Str("\r\n\v\b ", 5));
		jule::I64 _5221_offset = (_3426_l._field_line.len() - _5121_line.len()) + 1LL;
		jule::I64 _5321_old_len = _5121_line.len();
		_5121_line=_5121_line.ltrim(jule::Str("\t", 1));
		if (_5321_old_len != _5121_line.len()) {
			_5221_offset+=static_cast<jule::I64>((_5321_old_len - _5121_line.len()) * 8LL);
		}
		jule::out(jule::Str("\n  ", 3));
		jule::Str _5917_row = _232e766a0_itoa(_3426_l._field_row);
		jule::out(_5917_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_5121_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_231dc6612_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_231dc6612_str_repeat(jule::Str(" ", 1),static_cast<jule::Int>(_3426_l._field_column - _5221_offset)));
		jule::out(jule::Str("^", 1));
		if (_3426_l._field_suggestion.len() != 0LL) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_231dc6612_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>(_5917_row.len())));
			jule::out(jule::Str(" | ", 3));
			_231dc726c_AnsiEscape::_static_method_print(jule::Str("\033[95m", 5),jule::Str("suggestion: ", 12));
			jule::out(_3426_l._field_suggestion);
		}
	}
	jule::outln(jule::Str("\n", 1));
}



void _231dc726c_Logger::_static_method_log(_231e4202e_Log& _8020_l) {
	{
		auto _match_expr{ _8020_l._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_4886787232; }
		_case_begin_4886787232:;
		{
			_231dc726c_Logger::_static_method_log_flat(_8020_l);
		}
		goto _match_end_4886787104;
		_case_end_4886787232:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4886787328; }
		_case_begin_4886787328:;
		{
			_231dc726c_Logger::_static_method_log_error(_8020_l);
		}
		goto _match_end_4886787104;
		_case_end_4886787328:;
		_match_end_4886787104:;
	}
}



void _231dc726c_Logger::_static_method_print_logs(jule::Slice<_231e4202e_Log>& _8827_logs) {
	{
		auto expr = _8827_logs;
		auto it = expr.begin();
		_iter_begin_4886790768:;
		if (it != expr.end()) {
			_231e4202e_Log _231dc726c_l = *it;
			{
				_231dc726c_Logger::_static_method_log(_231dc726c_l);
			}
			_iter_next_4886790768:;
			++it;
			goto _iter_begin_4886790768;
		}
		_iter_end_4886790768:;
	}
	jule::out(jule::Str("=== ", 4));
	jule::out(_232e766a0_itoa(static_cast<jule::I64>(_8827_logs.len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, const _231dc726c_Logger &_Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



jule::U8 _231ed2cb2_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[_5324_i];
	}
	return (*this)._field_path[_5324_i];
}



void _231ed2cb2_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[(*this)._field_w] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::I64>((*this)._field_path.len()));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,(*this)._field_w)));
	}
	(*this)._field_buff[(*this)._field_w]=_6025_c;
	((*this)._field_w)++;
}



jule::Str _231ed2cb2_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len + (*this)._field_w);
	}
	return (*this)._field_vol_and_path.slice(0LL,(*this)._field_vol_len) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,(*this)._field_w));
}







std::ostream &operator<<(std::ostream &_Stream, const _231ed2cb2_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _231e4202e_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text << ", ";
	_Stream << "line:" << _Src._field_line << ", ";
	_Stream << "suggestion:" << _Src._field_suggestion;
	_Stream << "}";
	return _Stream;
}



jule::Str _23363dc35_bits_error::_method_error(void) {
	return jule::Str("runtime error: ", 15) + (*this)._field_message;
}







std::ostream &operator<<(std::ostream &_Stream, const _23363dc35_bits_error &_Src) {
	_Stream << "bits_error{";
	_Stream << "message:" << _Src._field_message;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _231e5e5ce_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _231e5e5ce_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _232e74d1e_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



jule::Bool _232e74d1e_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[_23017_i] == '+'))) { goto _case_end_4867180128; }
		_case_begin_4867180128:;
		{
			(_23017_i)++;
		}
		goto _match_end_4867179680;
		_case_end_4867180128:;
		if (!((_22922_s[_23017_i] == '-'))) { goto _case_end_4867180224; }
		_case_begin_4867180224:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4867179680;
		_case_end_4867180224:;
		_match_end_4867179680:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	for (; _23017_i < _22922_s.len(); (_23017_i)++) {
		{
			{
				if (!((_22922_s[_23017_i] == '.'))) { goto _case_end_4867185936; }
				_case_begin_4867185936:;
				{
					if (_24717_sawdot) {
						return _22932_ok;
					}
					_24717_sawdot=true;
					(*this)._field_dp=(*this)._field_nd;
					goto _iter_next_4867184160;
				}
				goto _match_end_4867185712;
				_case_end_4867185936:;
				if (!((('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')))) { goto _case_end_4867186048; }
				_case_begin_4867186048:;
				{
					_24817_sawdigits=true;
					if ((_22922_s[_23017_i] == '0') && ((*this)._field_nd == 0LL)) {
						((*this)._field_dp)--;
						goto _iter_next_4867184160;
					}
					if ((*this)._field_nd < 800LL) {
						(*this)._field_d[(*this)._field_nd]=_22922_s[_23017_i];
						((*this)._field_nd)++;
					} else if (_22922_s[_23017_i] != '0') {
						(*this)._field_trunc=true;
					}
					goto _iter_next_4867184160;
				}
				goto _match_end_4867185712;
				_case_end_4867186048:;
				_match_end_4867185712:;
			}
			goto _iter_end_4867184160;
		}
	_iter_next_4867184160:;
	}
	_iter_end_4867184160:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_231e6dda2_lower(_22922_s[_23017_i]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[_23017_i] == '+') {
			(_23017_i)++;
		} else if (_22922_s[_23017_i] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[_23017_i] < '0')) || (_22922_s[_23017_i] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		for (; (_23017_i < _22922_s.len()) && (('0' <= _22922_s[_23017_i]) && (_22922_s[_23017_i] <= '9')); (_23017_i)++) {
			{
				if (_30121_e < 10000LL) {
					_30121_e=static_cast<jule::Int>(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[_23017_i])) - '0');
				}
			}
		_iter_next_4867203584:;
		}
		_iter_end_4867203584:;
		(*this)._field_dp+=static_cast<jule::Int>(_30121_e * _29121_esign);
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



std::tuple<jule::U64,jule::Bool> _232e74d1e_Decimal::_method_float_bits(_231e5e5ce_FloatInfo& _31830_flt) {
	jule::U64 _31848_b = jule::U64();
	jule::Bool _31856_overflow = jule::Bool();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	while ((*this)._field_dp > 0LL) {
		{
			jule::Int _34521_n = 0LL;
			if ((*this)._field_dp >= _232d42e62_POWTAB.len()) {
				_34521_n=27LL;
			} else {
				_34521_n=_232d42e62_POWTAB[(*this)._field_dp];
			}
			(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
			_31917_exp+=_34521_n;
		}
	_iter_next_4867223264:;
	}
	_iter_end_4867223264:;
	while (((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[0LL] < '5'))) {
		{
			jule::Int _35521_n = 0LL;
			if ((-((*this)._field_dp)) >= _232d42e62_POWTAB.len()) {
				_35521_n=27LL;
			} else {
				_35521_n=_232d42e62_POWTAB[(-((*this)._field_dp))];
			}
			(*this)._method_shift(_35521_n);
			_31917_exp-=_35521_n;
		}
	_iter_next_4867228624:;
	}
	_iter_end_4867228624:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



void _232e74d1e_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	while (_15229_v > 0LL) {
		{
			jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
			_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
			_15317_buf[_15617_n]=static_cast<jule::U8>(_15229_v + '0');
			(_15617_n)++;
			_15229_v=_15817_v1;
		}
	_iter_next_4867258432:;
	}
	_iter_end_4867258432:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	for (; _15617_n >= 0LL; (_15617_n)--) {
		{
			(*this)._field_d[(*this)._field_nd]=_15317_buf[_15617_n];
			((*this)._field_nd)++;
		}
	_iter_next_4867263056:;
	}
	_iter_end_4867263056:;
	(*this)._field_dp=(*this)._field_nd;
	_232e74d1e_trim((*this));
}



void _232e74d1e_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_4867268064; }
		goto _match_end_4867267824;
		_case_end_4867268064:;
		if (!((_17728_k > 0LL))) { goto _case_end_4867268176; }
		_case_begin_4867268176:;
		{
			while (_17728_k > 60LLU) {
				{
					_232e74d1e_left_shift((*this),60LLU);
					_17728_k-=60LLU;
				}
			_iter_next_4867269360:;
			}
			_iter_end_4867269360:;
			_232e74d1e_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_4867267824;
		_case_end_4867268176:;
		if (!((_17728_k < 0LL))) { goto _case_end_4867268288; }
		_case_begin_4867268288:;
		{
			while (_17728_k < -60LL) {
				{
					_232e74d1e_right_shift((*this),60LLU);
					_17728_k+=60LLU;
				}
			_iter_next_4867272160:;
			}
			_iter_end_4867272160:;
			_232e74d1e_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_4867267824;
		_case_end_4867268288:;
		_match_end_4867267824:;
	}
}



void _232e74d1e_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_232e74d1e_trim((*this));
}



void _232e74d1e_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	for (; _21217_i >= 0LL; (_21217_i)--) {
		{
			jule::U8 _21417_c = (*this)._field_d[_21217_i];
			if (_21417_c < '9') {
				((*this)._field_d[_21217_i])++;
				(*this)._field_nd=static_cast<jule::Int>(_21217_i + 1LL);
				return;
			}
		}
	_iter_next_4867279600:;
	}
	_iter_end_4867279600:;
	(*this)._field_d[0LL]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



void _232e74d1e_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_232e74d1e_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



jule::U64 _232e74d1e_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	for (; (_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd); (_25017_i)++) {
		{
			_25117_n=static_cast<jule::U64>((_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[_25017_i] - '0'));
		}
	_iter_next_4867289264:;
	}
	_iter_end_4867289264:;
	for (; _25017_i < (*this)._field_dp; (_25017_i)++) {
		{
			_25117_n*=10LL;
		}
	_iter_next_4867294752:;
	}
	_iter_end_4867294752:;
	if (_232e74d1e_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _232e74d1e_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233463670_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Slice<jule::Ptr<_233463670_DirEntry>>,jule::Int> _233463670_Directory::_static_method_read(jule::Str _1624_path) {
	jule::Slice<jule::Ptr<_233463670_DirEntry>> _1637_dirents = jule::Slice<jule::Ptr<_233463670_DirEntry>>();
	jule::Int _1659_err = 0LLU;
	DIR* _1717_dir = _23204ea43_opendir((&(_1624_path[0LL])));
	if (_1717_dir == nullptr) {
		_1659_err=_233414049_get_last_fs_error();
		return std::make_tuple(_1637_dirents,_1659_err);
	}
	for (;;) {
		{
			struct dirent* _2317_dirent = _23204ea43_readdir(_1717_dir);
			if (_2317_dirent == nullptr) {
				goto _iter_end_4867368032;
			}
			jule::Str _2717_name = _2320c1d90_byte_ptr_to_str(((jule::U8*)(_2317_dirent->d_name)));
			jule::Ptr<_2334b9671_Status> _2822_stat;
			jule::Int _2828_serr;
			std::tie(_2822_stat,_2828_serr) = _2334b9671_Status::_static_method_of(_231ed2cb2_join(jule::Slice<jule::Str>({_1624_path,_2717_name})));
			if (_2828_serr != 0LLU) {
				_1659_err=_2828_serr;
				_1637_dirents=nullptr;
				goto _iter_end_4867368032;
			}
			_1637_dirents=jule::append(_1637_dirents,jule::Slice<jule::Ptr<_233463670_DirEntry>>({jule::new_struct<_233463670_DirEntry>(new( std::nothrow ) _233463670_DirEntry(_2717_name,_2822_stat))}));
		}
	_iter_next_4867368032:;
	}
	_iter_end_4867368032:;
	_23204ea43_closedir(_1717_dir);
	return std::make_tuple(_1637_dirents,_1659_err);
}



jule::Int _233463670_Directory::_static_method_create(jule::Str _4626_path) {
	if (_23204ea43_mkdir((&(_4626_path[0LL])),448LL) == 0LL) {
		return 0LLU;
	}
	return _233414049_get_last_fs_error();
}



jule::Int _233463670_Directory::_static_method_remove(jule::Str _5926_path) {
	if (_23204ea43_rmdir((&(_5926_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _233414049_get_last_fs_error();
}







std::ostream &operator<<(std::ostream &_Stream, const _233463670_Directory &_Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Ptr<_2334d2447_File>,jule::Int> _2334d2447_File::_static_method_open(jule::Str _1924_path,jule::Int _1935_flag,jule::Int _1948_mode) {
	jule::Int _2013_handle = _23204ea43_open((&(_1924_path[0LL])),static_cast<jule::Int>(_1935_flag),_1948_mode);
	if (_2013_handle == -1LL) {
		return std::make_tuple(_2334d2447_File::_static_method_new(0LLU),_233414049_get_last_fs_error());
	}
	return std::make_tuple(_2334d2447_File::_static_method_new(static_cast<jule::Uintptr>(_2013_handle)),0LLU);
}



jule::Int _2334d2447_File::_static_method_remove(jule::Str _3126_path) {
	if (_23204ea43_unlink((&(_3126_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _233414049_get_last_fs_error();
}



std::tuple<jule::Int,jule::Int> _2334d2447_File::_method_write(jule::Slice<jule::U8> _4728_buff) {
	jule::Int _4744_n = jule::Int();
	if (_4728_buff.len() == 0LL) {
		_4744_n = 0LL;
		return std::make_tuple(_4744_n,0LLU);
	}
	_4744_n=static_cast<jule::Int>(static_cast<jule::Int>(_23206ca0b_write(static_cast<jule::Int>((*this)._field_handle),(&(_4728_buff[0LL])),static_cast<jule::Uint>(_4728_buff.len()))));
	if (_4744_n == -1LL) {
		_4744_n = 0LL;
		return std::make_tuple(_4744_n,_233414049_get_last_fs_error());
	}
	_4744_n = _4744_n;
	return std::make_tuple(_4744_n,0LLU);
}



std::tuple<jule::Int,jule::Int> _2334d2447_File::_method_read(jule::Slice<jule::U8> _6931_buff) {
	jule::Int _6947_n = jule::Int();
	if (_6931_buff.len() == 0LL) {
		_6947_n = 0LL;
		return std::make_tuple(_6947_n,0LLU);
	}
	_6947_n=static_cast<jule::Int>(static_cast<jule::Int>(_23206ca0b_read(static_cast<jule::Int>((*this)._field_handle),(&(_6931_buff[0LL])),static_cast<jule::Uint>(_6931_buff.len()))));
	if (_6947_n == -1LL) {
		_6947_n=0LL;
		_6947_n = _6947_n;
		return std::make_tuple(_6947_n,_233414049_get_last_fs_error());
	}
	_6947_n = _6947_n;
	return std::make_tuple(_6947_n,0LLU);
}



jule::Ptr<_2334d2447_File> _2334d2447_File::_static_method_new(jule::Uintptr _4523_handle) {
	return jule::new_struct<_2334d2447_File>(new( std::nothrow ) _2334d2447_File(_4523_handle));
}



std::tuple<jule::Ptr<_2334d2447_File>,jule::Int> _2334d2447_File::_static_method_create(jule::Str _5526_path) {
	jule::Ptr<_2334d2447_File> _5618_f;
	jule::Int _5621_err;
	std::tie(_5618_f,_5621_err) = _2334d2447_File::_static_method_open(_5526_path,1538LL,438LL);
	return std::make_tuple(_5618_f,_5621_err);
}



std::tuple<jule::Slice<jule::U8>,jule::Int> _2334d2447_File::_static_method_read(jule::Str _6824_path) {
	jule::Ptr<_2334b9671_Status> _6914_s;
	jule::Int _6921_err;
	std::tie(_6914_s,_6921_err) = _2334b9671_Status::_static_method_of(_6824_path);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	if ((!(_6914_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_6914_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(0LL),0LLU);
	}
	jule::Ptr<_2334d2447_File> _8218_f;
	std::tie(_8218_f,_6921_err) = _2334d2447_File::_static_method_open(_6824_path,0LL,0LL);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	__JULE_DEFER({
		_8218_f->_method_close();
	});
	jule::Slice<jule::U8> _8817_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_6914_s->_field_size));
	jule::Int _8914_n;
	std::tie(_8914_n,_6921_err) = _8218_f->_method_read(_8817_buff);
	if (_6921_err != 0LLU) {
		return std::make_tuple(nullptr,_6921_err);
	}
	return std::make_tuple(_8817_buff.slice(0LL,_8914_n),0LLU);
}



jule::Int _2334d2447_File::_static_method_write(jule::Str _10125_path,jule::Slice<jule::U8> _10136_data,jule::Int _10150_perm) {
	jule::Ptr<_2334d2447_File> _10218_f;
	jule::Int _10225_err;
	std::tie(_10218_f,_10225_err) = _2334d2447_File::_static_method_open(_10125_path,1537LL,_10150_perm);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	std::tie(std::ignore,_10225_err) = _10218_f->_method_write(_10136_data);
	if (_10225_err != 0LLU) {
		return _10225_err;
	}
	return _10218_f->_method_close();
}



std::tuple<jule::I64,jule::Int> _2334d2447_File::_method_seek(jule::I64 _12227_offset,jule::Int _12240_origin) {
	jule::I64 _12313_pos = _23206ca0b_seek(static_cast<jule::Int>((*this)._field_handle),_12227_offset,static_cast<jule::Int>(_12240_origin));
	return std::make_tuple(_12313_pos,0LLU);
}



jule::Int _2334d2447_File::_method_close(void) {
	if (_23206ca0b_close(static_cast<jule::Int>((*this)._field_handle)) == -1LL) {
		return _233414049_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _2334d2447_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Ptr<_2334b9671_Status>,jule::Int> _2334b9671_Status::_static_method_of(jule::Str _1222_path) {
	jule::Ptr<_2334b9671_Status> _1235_s = jule::Ptr<_2334b9671_Status>();
	jule::Int _1247_err = 0LLU;
	struct stat _1317_handle = (struct stat){};
	jule::Int _1413_code = _23204ea43_stat((&(_1222_path[0LL])),(&(_1317_handle)));
	if (_1413_code != -1LL) {
		_1247_err=0LLU;
		_1235_s=jule::new_struct<_2334b9671_Status>(new( std::nothrow ) _2334b9671_Status(static_cast<jule::Uint>(_1317_handle.st_mode),static_cast<jule::Uint>(_1317_handle.st_size)));
	} else {
		_1247_err=_233414049_get_last_fs_error();
	}
	return std::make_tuple(_1235_s,_1247_err);
}



jule::Bool _2334b9671_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



jule::Bool _2334b9671_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _2334b9671_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _234223e9b_FoldPair &_Src) {
	_Stream << "FoldPair{";
	_Stream << "from:" << _Src._field_from << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _234223e9b_CaseRange &_Src) {
	_Stream << "CaseRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "delta:" << _Src._field_delta;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _234223e9b_Range16 &_Src) {
	_Stream << "Range16{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _234223e9b_Range32 &_Src) {
	_Stream << "Range32{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi << ", ";
	_Stream << "stride:" << _Src._field_stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _234223e9b_RangeTable &_Src) {
	_Stream << "RangeTable{";
	_Stream << "r16:" << _Src._field_r16 << ", ";
	_Stream << "r32:" << _Src._field_r32 << ", ";
	_Stream << "latin_offset:" << _Src._field_latin_offset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23381108e_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



jule::Int _2336ea198_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_4872778160; }
		_case_begin_4872778160:;
		{
			return 5LL;
		}
		goto _match_end_4872776592;
		_case_end_4872778160:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4872778256; }
		_case_begin_4872778256:;
		{
			return 4LL;
		}
		goto _match_end_4872776592;
		_case_end_4872778256:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4872778512; }
		_case_begin_4872778512:;
		{
			return 3LL;
		}
		goto _match_end_4872776592;
		_case_end_4872778512:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4872778608; }
		_case_begin_4872778608:;
		{
			return 2LL;
		}
		goto _match_end_4872776592;
		_case_end_4872778608:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4872778704; }
		_case_begin_4872778704:;
		{
			return 1LL;
		}
		goto _match_end_4872776592;
		_case_end_4872778704:;
		_case_begin_4872776848:;
		{
			return -1LL;
		}
		goto _match_end_4872776592;
		_case_end_4872776848:;
		_match_end_4872776592:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _2336ea198_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2334d2d3d_File::_method_is_ok(void) {
	jule::Int _1917_err;
	std::tie(std::ignore,_1917_err) = _2334b9671_Status::_static_method_of((*this)._field__path);
	return _1917_err == 0LLU;
}



void _2334d2d3d_File::_method_fill(jule::Slice<jule::U8> _2431_data) {
	(*this)._field_data=_2431_data;
}



jule::Str _2334d2d3d_File::_method_path(void) {
	return (*this)._field__path;
}



jule::Str _2334d2d3d_File::_method_dir(void) {
	return _231ed2cb2_dir((*this)._field__path);
}



jule::Str _2334d2d3d_File::_method_name(void) {
	return _231ed2cb2_base((*this)._field__path);
}



jule::Uintptr _2334d2d3d_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



jule::Slice<_2336ea198_Token> _2334d2d3d_File::_method_tokens(void) {
	return (*this)._field__tokens;
}



jule::Str _2334d2d3d_File::_method_get_row(jule::Int _4426_row) {
	jule::Int _4517_n = 0LL;
	jule::Int _4617_line_start = 0LL;
	jule::Int _4717_i = 0LL;
	for (; _4717_i < (*this)._field_data.len(); (_4717_i)++) {
		{
			if ((*this)._field_data[_4717_i] != '\n') {
				goto _iter_next_4872798832;
			}
			(_4517_n)++;
			if (_4517_n == _4426_row) {
				return static_cast<jule::Str>((*this)._field_data.slice(_4617_line_start,_4717_i));
			}
			_4617_line_start=static_cast<jule::Int>(_4717_i + 1LL);
		}
	_iter_next_4872798832:;
	}
	_iter_end_4872798832:;
	return jule::Str();
}







std::ostream &operator<<(std::ostream &_Stream, const _2334d2d3d_File &_Src) {
	_Stream << "File{";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2334d2db5_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



void _2334d2db5_Lex::_method_push_err(jule::Str _40227_fmt,jule::Slice<jule::Any> _40240_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_231e4202e_Log>({_2334d2db5_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_40227_fmt,_40240_args)}));
}



void _2334d2db5_Lex::_method_push_err_tok(_2336ea198_Token& _40732_token,jule::Str _40746_fmt) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_231e4202e_Log>({_2334d2db5_make_err(_40732_token._field_row,_40732_token._field_column,(*this)._field_file,_40746_fmt,jule::Slice<jule::Any>({}))}));
}



void _2334d2db5_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			_2336ea198_Token _41721_token = (*this)._method_token();
			if (_41721_token._field_id != 0LLU) {
				(*this)._field_tokens=jule::append((*this)._field_tokens,jule::Slice<_2336ea198_Token>({_41721_token}));
			}
		}
	_iter_next_4872812320:;
	}
	_iter_end_4872812320:;
}



jule::Str _2334d2db5_Lex::_method_id(jule::Slice<jule::U8>& _42622_ln) {
	if (_42622_ln.len() == 0LL) {
		return jule::Str();
	}
	jule::I32 _43014_r;
	jule::Int _43021_i;
	std::tie(_43014_r,_43021_i) = _23381108e_decode_rune(_42622_ln);
	if ((_43014_r != '_') && (!(_2336ea198_is_letter(_43014_r)))) {
		return jule::Str();
	}
	while (_43021_i < _42622_ln.len()) {
		{
			jule::I32 _43618_r;
			jule::Int _43621_n;
			std::tie(_43618_r,_43621_n) = _23381108e_decode_rune(_42622_ln.slice(_43021_i));
			if (((_43618_r != '_') && (!(_2336ea198_is_decimal(static_cast<jule::U8>(_43618_r))))) && (!(_2336ea198_is_letter(_43618_r)))) {
				(*this)._field_pos+=_43021_i;
				return static_cast<jule::Str>(_42622_ln.slice(0LL,_43021_i));
			}
			_43021_i+=_43621_n;
		}
	_iter_next_4872826160:;
	}
	_iter_end_4872826160:;
	(*this)._field_pos+=static_cast<jule::I64>(_42622_ln.len());
	return static_cast<jule::Str>(_42622_ln);
}



jule::Slice<jule::U8> _2334d2db5_Lex::_method_resume(void) {
	jule::Int _45117_i = (*this)._field_pos;
	for (; _45117_i < (*this)._field_file->_field_data.len(); (_45117_i)++) {
		{
			jule::I32 _45317_r = static_cast<jule::I32>((*this)._field_file->_field_data[_45117_i]);
			if (_2336ea198_is_space(_45317_r)) {
				((*this)._field_pos)++;
				{
					auto _match_expr{ _45317_r };
					if (!(('\n') == _match_expr)) { goto _case_end_4872838704; }
					_case_begin_4872838704:;
					{
						(*this)._method_new_line();
					}
					goto _match_end_4872838608;
					_case_end_4872838704:;
					if (!(('\t') == _match_expr)) { goto _case_end_4872840176; }
					_case_begin_4872840176:;
					{
						(*this)._field_column+=8LL;
					}
					goto _match_end_4872838608;
					_case_end_4872840176:;
					_case_begin_4872837920:;
					{
						((*this)._field_column)++;
					}
					goto _match_end_4872838608;
					_case_end_4872837920:;
					_match_end_4872838608:;
				}
				goto _iter_next_4872833840;
			}
			jule::Int _46421_j = _45117_i;
			for (; _46421_j < (*this)._field_file->_field_data.len(); (_46421_j)++) {
				{
					if ((*this)._field_file->_field_data[_46421_j] == '\n') {
						goto _iter_end_4872837104;
					}
				}
			_iter_next_4872837104:;
			}
			_iter_end_4872837104:;
			return (*this)._field_file->_field_data.slice(_45117_i,_46421_j);
		}
	_iter_next_4872833840:;
	}
	_iter_end_4872833840:;
	return nullptr;
}



void _2334d2db5_Lex::_method_lex_line_comment(_2336ea198_Token& _47640_token) {
	jule::Int _47713_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _48117_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if ((_48117_r == '\n') || (_48117_r == '\r')) {
				if ((*this)._method_is_first_token_of_line()) {
					_47640_token._field_id=18LLU;
					_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47713_start,(*this)._field_pos));
				}
				return;
			}
		}
	_iter_next_4872848304:;
	}
	_iter_end_4872848304:;
	if ((*this)._method_is_first_token_of_line()) {
		_47640_token._field_id=18LLU;
		_47640_token._field_kind=static_cast<jule::Str>((*this)._field_file->_field_data.slice(_47713_start));
	}
}



void _2334d2db5_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	for (; (*this)._field_pos < (*this)._field_file->_field_data.len(); ((*this)._field_pos)++) {
		{
			jule::U8 _50017_r = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_50017_r == '\r') {
				goto _iter_next_4872859232;
			}
			if (_50017_r == '\n') {
				(*this)._method_new_line();
				goto _iter_next_4872859232;
			}
			(*this)._field_column+=1LL;
			if (((((*this)._field_pos + 1LL) < (*this)._field_file->_field_data.len()) && (_50017_r == '*')) && ((*this)._field_file->_field_data[(*this)._field_pos + 1LL] == '/')) {
				(*this)._field_column+=2LL;
				(*this)._field_pos+=2LL;
				return;
			}
		}
	_iter_next_4872859232:;
	}
	_iter_end_4872859232:;
	(*this)._method_push_err(jule::Str("missing block comment close", 27),jule::Slice<jule::Any>({}));
}



jule::Str _2334d2db5_Lex::_method_num(jule::Slice<jule::U8>& _52123_txt) {
	jule::Str _52138_lit = jule::Str();
	_52138_lit=_2334d2db5_hex_num(_52123_txt);
	if (_52138_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52138_lit=_2334d2db5_octal_num(_52123_txt);
	if (_52138_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52138_lit=_2334d2db5_binary_num(_52123_txt);
	if (_52138_lit != jule::Str()) {
		goto _julec_label_end;
	}
	_52138_lit=_2334d2db5_common_num(_52123_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_52138_lit.len());
	return _52138_lit;
}



jule::Str _2334d2db5_Lex::_method_escape_seq(jule::Slice<jule::U8>& _54030_txt) {
	jule::Str _54117_seq = jule::Str();
	if (_54030_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _54030_txt[1LL] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_4872886928; }
		_case_begin_4872886928:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_54030_txt.slice(0LL,2LL));
		}
		goto _match_end_4872886096;
		_case_end_4872886928:;
		if (!(('U') == _match_expr)) { goto _case_end_4872887136; }
		_case_begin_4872887136:;
		{
			_54117_seq=_2334d2db5_big_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4872886096;
		_case_end_4872887136:;
		if (!(('u') == _match_expr)) { goto _case_end_4872887232; }
		_case_begin_4872887232:;
		{
			_54117_seq=_2334d2db5_little_unicode_point_escape(_54030_txt);
		}
		goto _match_end_4872886096;
		_case_end_4872887232:;
		if (!(('x') == _match_expr)) { goto _case_end_4872887984; }
		_case_begin_4872887984:;
		{
			_54117_seq=_2334d2db5_hex_byte_escape(_54030_txt);
		}
		goto _match_end_4872886096;
		_case_end_4872887984:;
		_case_begin_4872884800:;
		{
			_54117_seq=_2334d2db5_byte_escape(_54030_txt);
		}
		goto _match_end_4872886096;
		_case_end_4872884800:;
		_match_end_4872886096:;
	}
	_julec_label_end:;
	if (_54117_seq == jule::Str()) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid escape sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str();
	}
	(*this)._field_pos+=static_cast<jule::I64>(_54117_seq.len());
	return _54117_seq;
}



jule::Str _2334d2db5_Lex::_method_get_rune(jule::Slice<jule::U8>& _57428_txt,jule::Bool _57441_raw) {
	if ((!(_57441_raw)) && (_57428_txt[0LL] == '\\')) {
		return (*this)._method_escape_seq(_57428_txt);
	}
	jule::I32 _57914_r;
	jule::Int _57917_n;
	std::tie(_57914_r,_57917_n) = _23381108e_decode_rune(_57428_txt);
	(*this)._field_pos+=_57917_n;
	return static_cast<jule::Str>(_57914_r);
}



jule::Str _2334d2db5_Lex::_method_lex_rune(jule::Slice<jule::U8>& _58428_txt) {
	jule::Str _58517_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58717_n = 0LL;
	jule::Int _58817_i = 1LL;
	for (; _58817_i < _58428_txt.len(); (_58817_i)++) {
		{
			if (_58428_txt[_58817_i] == '\r') {
				goto _iter_next_4872904832;
			}
			if (_58428_txt[_58817_i] == '\n') {
				(*this)._method_push_err(jule::Str("rune is not finished", 20),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				(*this)._method_new_line();
				return jule::Str();
			}
			jule::Slice<jule::U8> _60017_part = _58428_txt.slice(_58817_i);
			jule::Str _60117_r = (*this)._method_get_rune(_60017_part,false);
			_58517_run+=_60117_r;
			jule::I64 _60317_length = _60117_r.len();
			(*this)._field_column+=_60317_length;
			if (_60117_r == jule::Str("'", 1)) {
				((*this)._field_pos)++;
				goto _iter_end_4872904832;
			}
			if (_60317_length > 1LL) {
				_58817_i+=static_cast<jule::I64>(_60317_length - 1LL);
			}
			(_58717_n)++;
		}
	_iter_next_4872904832:;
	}
	_iter_end_4872904832:;
	if (_58717_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune is cannot empty", 20),jule::Slice<jule::Any>({}));
	} else if (_58717_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune is should be single", 24),jule::Slice<jule::Any>({}));
	}
	return _58517_run;
}



jule::Str _2334d2db5_Lex::_method_lex_str(void) {
	jule::Str _62517_s = jule::Str();
	jule::U8 _62613_mark = (*this)._field_file->_field_data[(*this)._field_pos];
	((*this)._field_pos)++;
	jule::Bool _62813_raw = _62613_mark == '`';
	_62517_s+=static_cast<jule::Str>(_62613_mark);
	((*this)._field_column)++;
	while ((*this)._field_pos < (*this)._field_file->_field_data.len()) {
		{
			jule::U8 _63317_ch = (*this)._field_file->_field_data[(*this)._field_pos];
			if (_63317_ch == '\r') {
				goto _iter_next_4872925280;
			}
			if (_63317_ch == '\n') {
				(*this)._method_new_line();
				if ((!(_62813_raw))) {
					(*this)._method_push_err(jule::Str("string is not finished", 22),jule::Slice<jule::Any>({}));
					((*this)._field_pos)++;
					return jule::Str();
				}
			}
			jule::Slice<jule::U8> _64521_part = (*this)._field_file->_field_data.slice((*this)._field_pos);
			jule::Str _64617_r = (*this)._method_get_rune(_64521_part,_62813_raw);
			_62517_s+=_64617_r;
			(*this)._field_column+=static_cast<jule::I64>(_64617_r.len());
			if (_63317_ch == _62613_mark) {
				goto _iter_end_4872925280;
			}
		}
	_iter_next_4872925280:;
	}
	_iter_end_4872925280:;
	return _62517_s;
}



jule::Bool _2334d2db5_Lex::_method_is_first_token_of_line(void) {
	return (*this)._field_column == 1LL;
}



void _2334d2db5_Lex::_method_new_line(void) {
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



jule::Bool _2334d2db5_Lex::_method_is_op(jule::Slice<jule::U8>& _66625_txt,jule::Str _66638_kind,jule::Uint _66649_id,_2336ea198_Token& _66667_t) {
	if ((!(_2334d2db5_bytes_has_prefix(_66625_txt,_66638_kind)))) {
		return false;
	}
	_66667_t._field_kind=_66638_kind;
	_66667_t._field_id=_66649_id;
	(*this)._field_pos+=static_cast<jule::I64>(_66638_kind.len());
	return true;
}



jule::Bool _2334d2db5_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _67732_txt,_2336ea198_Token& _67750_tok) {
	{
		auto expr = _2334d2db5_BASIC_OPS;
		auto it = expr.begin();
		_iter_begin_4872950736:;
		if (it != expr.end()) {
			_2334d2db5_KindPair _2334d2db5_pair = *it;
			{
				if ((*this)._method_is_op(_67732_txt,_2334d2db5_pair._field_kind,_2334d2db5_pair._field_id,_67750_tok)) {
					return true;
				}
			}
			_iter_next_4872950736:;
			++it;
			goto _iter_begin_4872950736;
		}
		_iter_end_4872950736:;
	}
	return false;
}



jule::Bool _2334d2db5_Lex::_method_lex_id(jule::Slice<jule::U8>& _68726_txt,_2336ea198_Token& _68744_t) {
	jule::Str _68813_lex = (*this)._method_id(_68726_txt);
	if (_68813_lex == jule::Str()) {
		return false;
	}
	_68744_t._field_kind=_68813_lex;
	_68744_t._field_id=2LLU;
	return true;
}



jule::Bool _2334d2db5_Lex::_method_lex_num(jule::Slice<jule::U8>& _69827_txt,_2336ea198_Token& _69845_t) {
	jule::Str _69913_lex = (*this)._method_num(_69827_txt);
	if (_69913_lex == jule::Str()) {
		return false;
	}
	_69845_t._field_kind=_69913_lex;
	_69845_t._field_id=6LLU;
	return true;
}



_2336ea198_Token _2334d2db5_Lex::_method_token(void) {
	_2336ea198_Token _71117_t = _2336ea198_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _71313_txt = (*this)._method_resume();
	if (_71313_txt == nullptr) {
		return _71117_t;
	}
	_71117_t._field_column=(*this)._field_column;
	_71117_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_71313_txt,_71117_t)))) { goto _case_end_4872972864; }
		goto _match_end_4872969104;
		_case_end_4872972864:;
		if (!((_71313_txt[0LL] == '\''))) { goto _case_end_4872972960; }
		_case_begin_4872972960:;
		{
			_71117_t._field_kind=(*this)._method_lex_rune(_71313_txt);
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4872969104;
		_case_end_4872972960:;
		if (!(((_71313_txt[0LL] == '\"') || (_71313_txt[0LL] == '`')))) { goto _case_end_4872970624; }
		_case_begin_4872970624:;
		{
			_71117_t._field_kind=(*this)._method_lex_str();
			_71117_t._field_id=6LLU;
			return _71117_t;
		}
		goto _match_end_4872969104;
		_case_end_4872970624:;
		if (!((_2334d2db5_bytes_has_prefix(_71313_txt,jule::Str("//", 2))))) { goto _case_end_4872970720; }
		_case_begin_4872970720:;
		{
			(*this)._method_lex_line_comment(_71117_t);
			return _71117_t;
		}
		goto _match_end_4872969104;
		_case_end_4872970720:;
		if (!((_2334d2db5_bytes_has_prefix(_71313_txt,jule::Str("/*", 2))))) { goto _case_end_4872970816; }
		_case_begin_4872970816:;
		{
			(*this)._method_lex_range_comment();
			return _71117_t;
		}
		goto _match_end_4872969104;
		_case_end_4872970816:;
		if (!(((*this)._method_is_op(_71313_txt,jule::Str("(", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str(")", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("{", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("}", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("[", 1),3LLU,_71117_t)) || ((*this)._method_is_op(_71313_txt,jule::Str("]", 1),3LLU,_71117_t)) || ((*this)._method_lex_basic_ops(_71313_txt,_71117_t)))) { goto _case_end_4872970912; }
		goto _match_end_4872969104;
		_case_end_4872970912:;
		if (!(((*this)._method_lex_id(_71313_txt,_71117_t)))) { goto _case_end_4872975248; }
		_case_begin_4872975248:;
		{
			{
				auto expr = _2334d2db5_KEYWORDS;
				auto it = expr.begin();
				_iter_begin_4872990144:;
				if (it != expr.end()) {
					_2334d2db5_KindPair _2334d2db5_pair = *it;
					{
						if (_2334d2db5_pair._field_kind == _71117_t._field_kind) {
							_71117_t._field_id=_2334d2db5_pair._field_id;
							goto _iter_end_4872990144;
						}
					}
					_iter_next_4872990144:;
					++it;
					goto _iter_begin_4872990144;
				}
				_iter_end_4872990144:;
			}
		}
		goto _match_end_4872969104;
		_case_end_4872975248:;
		_case_begin_4872968592:;
		{
			jule::I32 _76318_r;
			jule::Int _76321_sz;
			std::tie(_76318_r,_76321_sz) = _23381108e_decode_rune(_71313_txt);
			(*this)._method_push_err(jule::Str("undefined code content: @", 25),jule::Slice<jule::Any>({jule::Any(_76318_r)}));
			((*this)._field_column)++;
			(*this)._field_pos+=_76321_sz;
			return _71117_t;
		}
		goto _match_end_4872969104;
		_case_end_4872968592:;
		_match_end_4872969104:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_71117_t._field_kind.len());
	return _71117_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _2334d2db5_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23346420e_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_SptrTypeDecl &_Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_PtrTypeDecl::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_ArrTypeDecl::_method_auto_sized(void) {
	return (*this)._field_size == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2334e3821_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2334e3821_PackageInfo &_Src) {
	_Stream << "PackageInfo{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2337c95da_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



void _2337c95da_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



jule::Bool _2337c95da_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



jule::Bool _2337c95da_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



jule::Bool _2337c95da_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



void _2337c95da_ScopeParser::_method_push_err(_2336ea198_Token _17627_token,jule::Str _17641_fmt) {
	(*this)._field_p->_method_push_err(_17627_token,_17641_fmt,jule::Slice<jule::Any>({}));
}



void _2337c95da_ScopeParser::_method_push_suggestion(jule::Str _17934_fmt,jule::Slice<jule::Any> _17947_args) {
	(*this)._field_p->_method_push_suggestion(_17934_fmt,_17947_args);
}



void _2337c95da_ScopeParser::_method_insert_as_next(jule::Slice<_2336ea198_Token>& _18338_tokens) {
	(*this)._field_stms=jule::append((*this)._field_stms.slice(0LL,(*this)._field_pos + 1LL),(*this)._field_stms.slice((*this)._field_pos));
	(*this)._field_stms[(*this)._field_pos + 1LL]=jule::new_struct<_2337c95da_Stmt>(new( std::nothrow ) _2337c95da_Stmt(_18338_tokens,jule::Bool()));
}



jule::Ptr<_2337c95da_Stmt> _2337c95da_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[(*this)._field_pos];
}



jule::Ptr<_233464770_ScopeTree> _2337c95da_ScopeParser::_method_build_scope(jule::Slice<_2336ea198_Token>& _19335_tokens) {
	jule::Ptr<_233464770_ScopeTree> _19417_s = _2337c95da_new_scope();
	_19417_s->_field_parent=(*this)._field_s;
	_2337c95da_ScopeParser _19617_ssp = _2337c95da_ScopeParser((*this)._field_p,jule::Ptr<_233464770_ScopeTree>(),jule::Slice<jule::Ptr<_2337c95da_Stmt>>(),jule::Int());
	_19617_ssp._method_build(_19335_tokens,_19417_s);
	return _19417_s;
}



jule::Any _2337c95da_ScopeParser::_method_build_var_st(jule::Slice<_2336ea198_Token>& _20336_tokens) {
	jule::Ptr<_233464770_VarDecl> _20417_v = (*this)._field_p->_method_build_var(_20336_tokens);
	_20417_v->_field_scope=(*this)._field_s;
	return jule::Any(_20417_v);
}



jule::Any _2337c95da_ScopeParser::_method_build_ret_st(jule::Slice<_2336ea198_Token> _20935_tokens) {
	jule::Ptr<_233464770_RetSt> _21017_st = jule::new_struct<_233464770_RetSt>(new( std::nothrow ) _233464770_RetSt(_20935_tokens[0LL],jule::Ptr<_233464770_Expr>()));
	if (_20935_tokens.len() > 1LL) {
		_20935_tokens=_20935_tokens.slice(1LL);
		_21017_st->_field_expr=(*this)._field_p->_method_build_expr(_20935_tokens);
	}
	return jule::Any(_21017_st);
}



jule::Any _2337c95da_ScopeParser::_method_build_while_next_iter(jule::Ptr<_2337c95da_Stmt>& _22045_s) {
	jule::Ptr<_233464770_Iter> _22117_it = jule::new_struct<_233464770_Iter>(new( std::nothrow ) _233464770_Iter(_22045_s->_field_tokens[0LL],jule::Any(),jule::Ptr<_233464770_ScopeTree>()));
	jule::Slice<_2336ea198_Token> _22417_tokens = _22045_s->_field_tokens.slice(1LL);
	jule::Ptr<_233464770_WhileKind> _22517_kind = jule::new_struct<_233464770_WhileKind>(new( std::nothrow ) _233464770_WhileKind());
	if (_22417_tokens.len() > 0LL) {
		_22517_kind->_field_expr=(*this)._field_p->_method_build_expr(_22417_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_22117_it->_field_token,jule::Str("invalid syntax", 14));
		return jule::Any(nullptr);
	}
	_22417_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_2336ea198_Token> _23717_st_tokens = _2337db201_get_block_expr(_22417_tokens);
	if (_23717_st_tokens.len() > 0LL) {
		jule::Ptr<_2337c95da_Stmt> _23921_stmt = jule::new_struct<_2337c95da_Stmt>(new( std::nothrow ) _2337c95da_Stmt(_23717_st_tokens,_22045_s->_field_terminated));
		_22517_kind->_field_next_token=_23717_st_tokens[0LL];
		_22517_kind->_field_next=(*this)._method_build_st(_23921_stmt);
	}
	jule::I64 _24717_i = _23717_st_tokens.len();
	jule::Slice<_2336ea198_Token> _24817_block_tokens = _23441cd43_range(_24717_i,jule::Str("{", 1),jule::Str("}", 1),_22417_tokens);
	if (_24817_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_22117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_24717_i < _22417_tokens.len()) {
		(*this)._method_push_err(_22417_tokens[_24717_i],jule::Str("invalid syntax", 14));
	}
	_22117_it->_field_scope=(*this)._method_build_scope(_24817_block_tokens);
	_22117_it->_field_kind=jule::Any(_22517_kind);
	return jule::Any(_22117_it);
}



jule::Ptr<_233464770_WhileKind> _2337c95da_ScopeParser::_method_build_while_iter_kind(jule::Slice<_2336ea198_Token>& _26545_tokens) {
	return jule::new_struct<_233464770_WhileKind>(new( std::nothrow ) _233464770_WhileKind((*this)._field_p->_method_build_expr(_26545_tokens),jule::Any(),_2336ea198_Token()));
}



jule::Slice<jule::Slice<_2336ea198_Token>> _2337c95da_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_2336ea198_Token>& _27150_toks) {
	jule::Slice<jule::Slice<_2336ea198_Token>> _27218_vars;
	jule::Slice<_231e4202e_Log> _27224_errs;
	std::tie(_27218_vars,_27224_errs) = _23441cd43_parts(_27150_toks,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_27224_errs);
	return _27218_vars;
}



jule::Ptr<_233464770_VarDecl> _2337c95da_ScopeParser::_method_build_range_kind_key(jule::Slice<_2336ea198_Token>& _27744_tokens) {
	if (_27744_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_233464770_VarDecl> _28117_key = jule::new_struct<_233464770_VarDecl>(new( std::nothrow ) _233464770_VarDecl(jule::Ptr<_233464770_ScopeTree>(),_27744_tokens[0LL],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_233464770_CommentGroup>(),jule::Ptr<_233464770_TypeDecl>(),jule::Ptr<_233464770_Expr>()));
	if (_28117_key->_field_token._field_id == 36LLU) {
		_28117_key->_field_mutable=true;
		if (_27744_tokens.len() == 1LL) {
			(*this)._method_push_err(_28117_key->_field_token,jule::Str("invalid syntax", 14));
		}
		_28117_key->_field_token=_27744_tokens[1LL];
	} else if (_27744_tokens.len() > 1LL) {
		(*this)._method_push_err(_27744_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	if (_28117_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_28117_key->_field_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_28117_key->_field_ident=_28117_key->_field_token._field_kind;
	return _28117_key;
}



jule::Slice<jule::Ptr<_233464770_VarDecl>> _2337c95da_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_2336ea198_Token>>& _30245_parts) {
	jule::Slice<jule::Ptr<_233464770_VarDecl>> _30317_keys = nullptr;
	{
		auto expr = _30245_parts;
		auto it = expr.begin();
		_iter_begin_4873735232:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337c95da_tokens = *it;
			{
				_30317_keys=jule::append(_30317_keys,jule::Slice<jule::Ptr<_233464770_VarDecl>>({(*this)._method_build_range_kind_key(_2337c95da_tokens)}));
			}
			_iter_next_4873735232:;
			++it;
			goto _iter_begin_4873735232;
		}
		_iter_end_4873735232:;
	}
	return _30317_keys;
}



void _2337c95da_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ptr<_233464770_RangeKind>& _31051_rng,jule::Slice<_2336ea198_Token>& _31073_tokens) {
	jule::Slice<jule::Slice<_2336ea198_Token>> _31117_key_tokens = (*this)._method_get_range_kind_keys_tokens(_31073_tokens);
	if (_31117_key_tokens.len() == 0LL) {
		return;
	}
	if (_31117_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_31051_rng->_field_in_token,jule::Str("range variables can be maximum two", 34));
	}
	jule::Slice<jule::Ptr<_233464770_VarDecl>> _31817_keys = (*this)._method_build_range_kind_keys(_31117_key_tokens);
	_31051_rng->_field_key_a=_31817_keys[0LL];
	if (_31817_keys.len() > 1LL) {
		_31051_rng->_field_key_b=_31817_keys[1LL];
	}
}



void _2337c95da_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ptr<_233464770_RangeKind>& _32554_rng,jule::Slice<_2336ea198_Token>& _32576_tokens) {
	jule::Int _32617_i = 0LL;
	jule::Slice<_2336ea198_Token> _32717_rang = _23441cd43_range(_32617_i,jule::Str("(", 1),jule::Str(")", 1),_32576_tokens);
	if (_32617_i < _32576_tokens.len()) {
		(*this)._method_push_err(_32554_rng->_field_in_token,jule::Str("invalid syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_32554_rng,_32717_rang);
}



void _2337c95da_ScopeParser::_method_setup_range_kind_keys(jule::Ptr<_233464770_RangeKind>& _33445_rng,jule::Slice<_2336ea198_Token>& _33467_tokens) {
	if (_33467_tokens[0LL]._field_id == 3LLU) {
		if (_33467_tokens[0LL]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_33467_tokens[0LL],jule::Str("invalid syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_33445_rng,_33467_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_33445_rng,_33467_tokens);
}



jule::Ptr<_233464770_RangeKind> _2337c95da_ScopeParser::_method_build_range_iter_kind(jule::Slice<_2336ea198_Token>& _34645_var_tokens,jule::Slice<_2336ea198_Token>& _34714_expr_tokens,_2336ea198_Token& _34741_in_token) {
	jule::Ptr<_233464770_RangeKind> _34817_rng = jule::new_struct<_233464770_RangeKind>(new( std::nothrow ) _233464770_RangeKind(_34741_in_token,jule::Ptr<_233464770_Expr>(),jule::Ptr<_233464770_VarDecl>(),jule::Ptr<_233464770_VarDecl>()));
	if (_34714_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_34817_rng->_field_in_token,jule::Str("expression missing", 18));
		return _34817_rng;
	}
	_34817_rng->_field_expr=(*this)._field_p->_method_build_expr(_34714_expr_tokens);
	if (_34645_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_34817_rng,_34645_var_tokens);
	}
	return _34817_rng;
}



jule::Any _2337c95da_ScopeParser::_method_build_common_iter_kind(jule::Slice<_2336ea198_Token>& _36246_tokens,_2336ea198_Token& _36264_err_tok) {
	jule::Int _36317_brace_n = 0LL;
	{
		auto expr = _36246_tokens;
		auto it = expr.begin();
		_iter_begin_4873777728:;
		if (it != expr.end()) {
			jule::Int _2337c95da_i = it - expr.begin();
			_2336ea198_Token _2337c95da_tok = *it;
			{
				if (_2337c95da_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _2337c95da_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873799040; }
						_case_begin_4873799040:;
						{
							(_36317_brace_n)++;
							goto _iter_next_4873777728;
						}
						goto _match_end_4873781168;
						_case_end_4873799040:;
						_case_begin_4873780480:;
						{
							(_36317_brace_n)--;
						}
						goto _match_end_4873781168;
						_case_end_4873780480:;
						_match_end_4873781168:;
					}
				}
				if (_36317_brace_n != 0LL) {
					goto _iter_next_4873777728;
				}
				{
					auto _match_expr{ _2337c95da_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_4873779920; }
					_case_begin_4873779920:;
					{
						jule::Slice<_2336ea198_Token> _38225_decl_tokens = _36246_tokens.slice(0LL,_2337c95da_i);
						jule::Slice<_2336ea198_Token> _38325_expr_tokens = _36246_tokens.slice(_2337c95da_i + 1LL);
						return jule::Any((*this)._method_build_range_iter_kind(_38225_decl_tokens,_38325_expr_tokens,_2337c95da_tok));
					}
					goto _match_end_4873799568;
					_case_end_4873779920:;
					_match_end_4873799568:;
				}
			}
			_iter_next_4873777728:;
			++it;
			_2337c95da_i++;
			goto _iter_begin_4873777728;
		}
		_iter_end_4873777728:;
	}
	return jule::Any((*this)._method_build_while_iter_kind(_36246_tokens));
}



jule::Any _2337c95da_ScopeParser::_method_build_common_iter(jule::Slice<_2336ea198_Token> _39040_tokens) {
	jule::Ptr<_233464770_Iter> _39117_it = jule::new_struct<_233464770_Iter>(new( std::nothrow ) _233464770_Iter(_39040_tokens[0LL],jule::Any(),jule::Ptr<_233464770_ScopeTree>()));
	_39040_tokens=_39040_tokens.slice(1LL);
	if (_39040_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_39117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	jule::Slice<_2336ea198_Token> _40117_expr_tokens = _2337db201_get_block_expr(_39040_tokens);
	if (_40117_expr_tokens.len() > 0LL) {
		_39117_it->_field_kind=(*this)._method_build_common_iter_kind(_40117_expr_tokens,_39117_it->_field_token);
	}
	jule::I64 _40517_i = _40117_expr_tokens.len();
	jule::Slice<_2336ea198_Token> _40617_scope_tokens = _23441cd43_range(_40517_i,jule::Str("{", 1),jule::Str("}", 1),_39040_tokens);
	if (_40617_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_39117_it->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	if (_40517_i < _39040_tokens.len()) {
		(*this)._method_push_err(_39040_tokens[_40517_i],jule::Str("invalid syntax", 14));
	}
	_39117_it->_field_scope=(*this)._method_build_scope(_40617_scope_tokens);
	return jule::Any(_39117_it);
}



jule::Any _2337c95da_ScopeParser::_method_buid_iter_st(jule::Ptr<_2337c95da_Stmt>& _42036_st) {
	if (_42036_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_42036_st);
	}
	return (*this)._method_build_common_iter(_42036_st->_field_tokens);
}



jule::Any _2337c95da_ScopeParser::_method_build_break_st(jule::Slice<_2336ea198_Token>& _42738_tokens) {
	jule::Ptr<_233464770_BreakSt> _42817_brk = jule::new_struct<_233464770_BreakSt>(new( std::nothrow ) _233464770_BreakSt(_42738_tokens[0LL],_2336ea198_Token()));
	if (_42738_tokens.len() > 1LL) {
		if (_42738_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_42738_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_42817_brk->_field_label=_42738_tokens[1LL];
			if (_42738_tokens.len() > 2LL) {
				(*this)._method_push_err(_42738_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_42817_brk);
}



jule::Any _2337c95da_ScopeParser::_method_build_cont_st(jule::Slice<_2336ea198_Token>& _44537_tokens) {
	jule::Ptr<_233464770_ContSt> _44617_cont = jule::new_struct<_233464770_ContSt>(new( std::nothrow ) _233464770_ContSt(_44537_tokens[0LL],_2336ea198_Token()));
	if (_44537_tokens.len() > 1LL) {
		if (_44537_tokens[1LL]._field_id != 2LLU) {
			(*this)._method_push_err(_44537_tokens[1LL],jule::Str("invalid syntax", 14));
			(*this)._method_push_suggestion(jule::Str("write a label identifier because label expected", 47),jule::Slice<jule::Any>({}));
		} else {
			_44617_cont->_field_label=_44537_tokens[1LL];
			if (_44537_tokens.len() > 2LL) {
				(*this)._method_push_err(_44537_tokens[1LL],jule::Str("invalid syntax", 14));
			}
		}
	}
	return jule::Any(_44617_cont);
}



jule::Ptr<_233464770_If> _2337c95da_ScopeParser::_method_build_if(jule::Slice<_2336ea198_Token>& _46332_tokens) {
	jule::Ptr<_233464770_If> _46417_model = jule::new_struct<_233464770_If>(new( std::nothrow ) _233464770_If(_46332_tokens[0LL],jule::Ptr<_233464770_Expr>(),jule::Ptr<_233464770_ScopeTree>()));
	_46332_tokens=_46332_tokens.slice(1LL);
	jule::Slice<_2336ea198_Token> _46817_expr_tokens = _2337db201_get_block_expr(_46332_tokens);
	jule::Int _46917_i = 0LL;
	if (_46817_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_46417_model->_field_token,jule::Str("expression missing", 18));
	} else {
		_46917_i=static_cast<jule::I64>(_46817_expr_tokens.len());
	}
	jule::Slice<_2336ea198_Token> _47517_scope_tokens = _23441cd43_range(_46917_i,jule::Str("{", 1),jule::Str("}", 1),_46332_tokens);
	if (_47517_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_46417_model->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_46917_i < _46332_tokens.len()) {
		if (_46332_tokens[_46917_i]._field_id == 17LLU) {
			_46332_tokens=_46332_tokens.slice(_46917_i);
		} else {
			(*this)._method_push_err(_46332_tokens[_46917_i],jule::Str("invalid syntax", 14));
			_46332_tokens=nullptr;
		}
	}
	_46417_model->_field_expr=(*this)._field_p->_method_build_expr(_46817_expr_tokens);
	_46417_model->_field_scope=(*this)._method_build_scope(_47517_scope_tokens);
	return _46417_model;
}



jule::Ptr<_233464770_Else> _2337c95da_ScopeParser::_method_build_else(jule::Slice<_2336ea198_Token>& _49534_tokens) {
	jule::Ptr<_233464770_Else> _49617_els = jule::new_struct<_233464770_Else>(new( std::nothrow ) _233464770_Else(_49534_tokens[0LL],jule::Ptr<_233464770_ScopeTree>()));
	_49534_tokens=_49534_tokens.slice(1LL);
	jule::Int _50017_i = 0LL;
	jule::Slice<_2336ea198_Token> _50117_scope_tokens = _23441cd43_range(_50017_i,jule::Str("{", 1),jule::Str("}", 1),_49534_tokens);
	if (_50117_scope_tokens == nullptr) {
		if (_50017_i < _49534_tokens.len()) {
			(*this)._method_push_err(_49617_els->_field_token,jule::Str("else's cannot have any expression", 33));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_49617_els->_field_token,jule::Str("body is not exist", 17));
			(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		}
		return nullptr;
	}
	if (_50017_i < _49534_tokens.len()) {
		(*this)._method_push_err(_49534_tokens[_50017_i],jule::Str("invalid syntax", 14));
	}
	_49617_els->_field_scope=(*this)._method_build_scope(_50117_scope_tokens);
	return _49617_els;
}



jule::Any _2337c95da_ScopeParser::_method_build_if_else_chain(jule::Slice<_2336ea198_Token> _51942_tokens) {
	jule::Ptr<_233464770_Conditional> _52017_chain = jule::new_struct<_233464770_Conditional>(new( std::nothrow ) _233464770_Conditional((*this)._method_build_if(_51942_tokens),jule::Slice<jule::Ptr<_233464770_If>>(),jule::Ptr<_233464770_Else>()));
	if (_52017_chain->_field_head == nullptr) {
		return jule::Any(nullptr);
	}
	while (_51942_tokens != nullptr) {
		{
			if (_51942_tokens[0LL]._field_id != 17LLU) {
				goto _iter_end_4873888208;
			}
			if ((_51942_tokens.len() > 1LL) && (_51942_tokens[1LL]._field_id == 16LLU)) {
				_51942_tokens=_51942_tokens.slice(1LL);
				jule::Ptr<_233464770_If> _53225_elif = (*this)._method_build_if(_51942_tokens);
				_52017_chain->_field_tail=jule::append(_52017_chain->_field_tail,jule::Slice<jule::Ptr<_233464770_If>>({_53225_elif}));
				goto _iter_next_4873888208;
			}
			_52017_chain->_field_default=(*this)._method_build_else(_51942_tokens);
			goto _iter_end_4873888208;
		}
	_iter_next_4873888208:;
	}
	_iter_end_4873888208:;
	return jule::Any(_52017_chain);
}



jule::Any _2337c95da_ScopeParser::_method_build_comment_st(_2336ea198_Token& _54236_token) {
	return jule::Any(_23441cd43_build_comment(_54236_token));
}



jule::Any _2337c95da_ScopeParser::_method_build_call_st(jule::Slice<_2336ea198_Token>& _54637_tokens) {
	_2336ea198_Token _54713_token = _54637_tokens[0LL];
	if (_2337db201_is_fn_call(_54637_tokens) == nullptr) {
		(*this)._method_push_err(_54713_token,jule::Str("statement must have function call expression", 44));
	}
	jule::Ptr<_233464770_Expr> _55117_expr = (*this)._field_p->_method_build_expr(_54637_tokens);
	if ((_55117_expr != nullptr) && (!(_55117_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_54713_token,jule::Str("invalid syntax", 14));
	}
	return jule::Any(_55117_expr);
}



jule::Any _2337c95da_ScopeParser::_method_build_co_call_st(jule::Slice<_2336ea198_Token> _55839_tokens) {
	_55839_tokens=_55839_tokens.slice(1LL);
	jule::Any _56017_cc = (*this)._method_build_call_st(_55839_tokens);
	_56017_cc.operator jule::Ptr<_233464770_Expr>()->_field_kind.operator jule::Ptr<_233464770_FnCallExpr>()->_field_concurrent=true;
	return _56017_cc;
}



jule::Any _2337c95da_ScopeParser::_method_build_goto_st(jule::Slice<_2336ea198_Token>& _56537_tokens) {
	jule::Ptr<_233464770_GotoSt> _56617_gt = jule::new_struct<_233464770_GotoSt>(new( std::nothrow ) _233464770_GotoSt(_56537_tokens[0LL],_2336ea198_Token()));
	if (_56537_tokens.len() == 1LL) {
		(*this)._method_push_err(_56617_gt->_field_token,jule::Str("missing label identifier for goto statement", 43));
		return jule::Any(nullptr);
	} else if (_56537_tokens.len() > 2LL) {
		(*this)._method_push_err(_56537_tokens[2LL],jule::Str("invalid syntax", 14));
	}
	_2336ea198_Token _57517_ident_token = _56537_tokens[1LL];
	if (_57517_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_57517_ident_token,jule::Str("invalid syntax", 14));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return jule::Any(_56617_gt);
	}
	_56617_gt->_field_label=_57517_ident_token;
	return jule::Any(_56617_gt);
}



jule::Any _2337c95da_ScopeParser::_method_build_fall_st(jule::Slice<_2336ea198_Token>& _58537_tokens) {
	jule::Ptr<_233464770_FallSt> _58617_fll = jule::new_struct<_233464770_FallSt>(new( std::nothrow ) _233464770_FallSt(_58537_tokens[0LL]));
	if (_58537_tokens.len() > 1LL) {
		(*this)._method_push_err(_58537_tokens[1LL],jule::Str("invalid syntax", 14));
	}
	return jule::Any(_58617_fll);
}



jule::Any _2337c95da_ScopeParser::_method_build_type_alias_st(jule::Slice<_2336ea198_Token>& _59543_tokens) {
	jule::Ptr<_233464770_TypeAliasDecl> _59617_tad = (*this)._field_p->_method_build_type_alias_decl(_59543_tokens);
	_59617_tad->_field_scope=(*this)._field_s;
	return jule::Any(_59617_tad);
}



void _2337c95da_ScopeParser::_method_push_case_expr(jule::Slice<_2336ea198_Token> _60137_tokens,_2336ea198_Token _60158_token,jule::Bool _6029_type_match,jule::Slice<jule::Ptr<_233464770_Expr>>& _60232_exprs) {
	if (_60137_tokens.len() == 0LL) {
		return;
	}
	if (_6029_type_match) {
		jule::Int _60821_i = 0LL;
		jule::Ptr<_233464770_TypeDecl> _60922_t;
		jule::Bool _60925_ok;
		std::tie(_60922_t,_60925_ok) = (*this)._field_p->_method_build_type(_60137_tokens,(&(_60821_i)),true);
		if (_60925_ok) {
			_60232_exprs=jule::append(_60232_exprs,jule::Slice<jule::Ptr<_233464770_Expr>>({jule::new_struct<_233464770_Expr>(new( std::nothrow ) _233464770_Expr(_60158_token,jule::Any(_60922_t)))}));
		}
		if (_60821_i < _60137_tokens.len()) {
			(*this)._method_push_err(_60137_tokens[_60821_i],jule::Str("invalid syntax", 14));
		}
		return;
	}
	_60232_exprs=jule::append(_60232_exprs,jule::Slice<jule::Ptr<_233464770_Expr>>({(*this)._field_p->_method_build_expr(_60137_tokens)}));
}



jule::Slice<jule::Ptr<_233464770_Expr>> _2337c95da_ScopeParser::_method_build_case_exprs(jule::Slice<_2336ea198_Token>& _62440_tokens,jule::Bool _62457_type_match) {
	jule::Slice<jule::Ptr<_233464770_Expr>> _62517_exprs = jule::Slice<jule::Ptr<_233464770_Expr>>::alloc(0LL,1LL);
	jule::Int _62717_brace_n = 0LL;
	jule::Int _62817_j = 0LL;
	{
		auto expr = _62440_tokens;
		auto it = expr.begin();
		_iter_begin_4873958208:;
		if (it != expr.end()) {
			jule::Int _2337c95da_i = it - expr.begin();
			_2336ea198_Token _2337c95da_tok = *it;
			{
				if (_2337c95da_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _2337c95da_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4873963056; }
						_case_begin_4873963056:;
						{
							(_62717_brace_n)++;
						}
						goto _match_end_4873961696;
						_case_end_4873963056:;
						_case_begin_4873961008:;
						{
							(_62717_brace_n)--;
						}
						goto _match_end_4873961696;
						_case_end_4873961008:;
						_match_end_4873961696:;
					}
					goto _iter_next_4873958208;
				} else if (_62717_brace_n != 0LL) {
					goto _iter_next_4873958208;
				}
				{
					if (!(((_2337c95da_tok._field_id == 7LLU) && (_2337c95da_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_4873963536; }
					_case_begin_4873963536:;
					{
						jule::Slice<_2336ea198_Token> _64621_expr_tokens = _62440_tokens.slice(_62817_j,_2337c95da_i);
						if (_64621_expr_tokens.len() == 0LL) {
							(*this)._method_push_err(_2337c95da_tok,jule::Str("expression missing", 18));
						} else {
							(*this)._method_push_case_expr(_62440_tokens.slice(_62817_j,_2337c95da_i),_2337c95da_tok,_62457_type_match,_62517_exprs);
						}
						_62817_j=static_cast<jule::Int>(_2337c95da_i + 1LL);
					}
					goto _match_end_4873963904;
					_case_end_4873963536:;
					if (!((_2337c95da_tok._field_id == 11LLU))) { goto _case_end_4873963632; }
					_case_begin_4873963632:;
					{
						(*this)._method_push_case_expr(_62440_tokens.slice(_62817_j,_2337c95da_i),_2337c95da_tok,_62457_type_match,_62517_exprs);
						_62440_tokens=_62440_tokens.slice(_2337c95da_i + 1LL);
						return _62517_exprs;
					}
					goto _match_end_4873963904;
					_case_end_4873963632:;
					_match_end_4873963904:;
				}
			}
			_iter_next_4873958208:;
			++it;
			_2337c95da_i++;
			goto _iter_begin_4873958208;
		}
		_iter_end_4873958208:;
	}
	(*this)._method_push_err(_62440_tokens[0LL],jule::Str("invalid syntax", 14));
	_62440_tokens=nullptr;
	return nullptr;
}



jule::Ptr<_233464770_ScopeTree> _2337c95da_ScopeParser::_method_build_case_scope(jule::Slice<_2336ea198_Token>& _66540_tokens) {
	jule::Int _66617_n = 0LL;
	for (;;) {
		{
			jule::Int _66821_i = 0LL;
			jule::Slice<_2336ea198_Token> _66922_next;
			std::tie(_66922_next,std::ignore) = _2337c95da_skip_st(_66821_i,_66540_tokens.slice(_66617_n));
			if (_66922_next.len() == 0LL) {
				goto _iter_end_4873975440;
			}
			_2336ea198_Token _67317_tok = _66922_next[0LL];
			if ((_67317_tok._field_id != 7LLU) || (_67317_tok._field_kind != jule::Str("|", 1))) {
				_66617_n+=_66821_i;
				goto _iter_next_4873975440;
			}
			jule::Slice<_2336ea198_Token> _67821_scope_tokens = _66540_tokens.slice(0LL,_66617_n);
			jule::Ptr<_233464770_ScopeTree> _67921_scope = (*this)._method_build_scope(_67821_scope_tokens);
			_66540_tokens=_66540_tokens.slice(_66617_n);
			return _67921_scope;
		}
	_iter_next_4873975440:;
	}
	_iter_end_4873975440:;
	jule::Ptr<_233464770_ScopeTree> _68317_scope = (*this)._method_build_scope(_66540_tokens);
	_66540_tokens=nullptr;
	return _68317_scope;
}



std::tuple<jule::Ptr<_233464770_Case>,jule::Bool> _2337c95da_ScopeParser::_method_build_case(jule::Slice<_2336ea198_Token>& _68834_tokens,jule::Bool _68851_type_match) {
	jule::Ptr<_233464770_Case> _68917_c = jule::new_struct<_233464770_Case>(new( std::nothrow ) _233464770_Case(_68834_tokens[0LL],jule::Ptr<_233464770_ScopeTree>(),jule::Slice<jule::Ptr<_233464770_Expr>>()));
	_68834_tokens=_68834_tokens.slice(1LL);
	_68917_c->_field_exprs=(*this)._method_build_case_exprs(_68834_tokens,_68851_type_match);
	_68917_c->_field_scope=(*this)._method_build_case_scope(_68834_tokens);
	jule::Bool _69513_is_default = _68917_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_68917_c,_69513_is_default);
}



std::tuple<jule::Slice<jule::Ptr<_233464770_Case>>,jule::Ptr<_233464770_Else>> _2337c95da_ScopeParser::_method_build_cases(jule::Slice<_2336ea198_Token> _69934_tokens,jule::Bool _69951_type_match) {
	jule::Slice<jule::Ptr<_233464770_Case>> _70017_cases = nullptr;
	jule::Ptr<_233464770_Else> _70117_def = nullptr;
	jule::Bool _70217_def_not_last = false;
	while (_69934_tokens.len() > 0LL) {
		{
			_2336ea198_Token _70421_tok = _69934_tokens[0LL];
			if (_70421_tok._field_id == 18LLU) {
				_69934_tokens=_69934_tokens.slice(1LL);
				goto _iter_next_4873999568;
			}
			if ((_70421_tok._field_id != 7LLU) || (_70421_tok._field_kind != jule::Str("|", 1))) {
				(*this)._method_push_err(_70421_tok,jule::Str("invalid syntax", 14));
				goto _iter_end_4873999568;
			}
			jule::Ptr<_233464770_Case> _71522_c;
			jule::Bool _71525_is_default;
			std::tie(_71522_c,_71525_is_default) = (*this)._method_build_case(_69934_tokens,_69951_type_match);
			if (_71525_is_default) {
				_71522_c->_field_token=_70421_tok;
				if (_70117_def == nullptr) {
					_70117_def=jule::new_struct<_233464770_Else>(new( std::nothrow ) _233464770_Else(_71522_c->_field_token,_71522_c->_field_scope));
				} else {
					(*this)._method_push_err(_70421_tok,jule::Str("invalid syntax", 14));
				}
			} else {
				_70217_def_not_last=_70217_def_not_last || (_70117_def != nullptr);
				_70017_cases=jule::append(_70017_cases,jule::Slice<jule::Ptr<_233464770_Case>>({_71522_c}));
			}
		}
	_iter_next_4873999568:;
	}
	_iter_end_4873999568:;
	if (_70217_def_not_last) {
		(*this)._method_push_err(_70117_def->_field_token,jule::Str("default case should be last case", 32));
	}
	return std::make_tuple(_70017_cases,_70117_def);
}



jule::Ptr<_233464770_MatchCase> _2337c95da_ScopeParser::_method_build_match_case(jule::Slice<_2336ea198_Token> _73939_tokens) {
	jule::Ptr<_233464770_MatchCase> _74017_m = jule::new_struct<_233464770_MatchCase>(new( std::nothrow ) _233464770_MatchCase(_73939_tokens[0LL],jule::Bool(),jule::Ptr<_233464770_Expr>(),jule::Slice<jule::Ptr<_233464770_Case>>(),jule::Ptr<_233464770_Else>()));
	_73939_tokens=_73939_tokens.slice(1LL);
	if ((_73939_tokens.len() > 0LL) && (_73939_tokens[0LL]._field_id == 10LLU)) {
		_74017_m->_field_type_match=true;
		_73939_tokens=_73939_tokens.slice(1LL);
	}
	jule::Slice<_2336ea198_Token> _75017_expr_tokens = _2337db201_get_block_expr(_73939_tokens);
	if (_75017_expr_tokens.len() > 0LL) {
		_74017_m->_field_expr=(*this)._field_p->_method_build_expr(_75017_expr_tokens);
	} else if (_74017_m->_field_type_match) {
		(*this)._method_push_err(_74017_m->_field_token,jule::Str("expression missing", 18));
	}
	jule::I64 _75717_i = _75017_expr_tokens.len();
	jule::Slice<_2336ea198_Token> _75817_block_toks = _23441cd43_range(_75717_i,jule::Str("{", 1),jule::Str("}", 1),_73939_tokens);
	if (_75817_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_74017_m->_field_token,jule::Str("body is not exist", 17));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	std::tie(_74017_m->_field_cases,_74017_m->_field_default) = (*this)._method_build_cases(_75817_block_toks,_74017_m->_field_type_match);
	return _74017_m;
}



jule::Ptr<_233464770_ScopeTree> _2337c95da_ScopeParser::_method_build_scope_st(jule::Slice<_2336ea198_Token> _77037_tokens) {
	jule::Bool _77117_is_unsafe = false;
	jule::Bool _77217_is_deferred = false;
	_2336ea198_Token _77317_token = _77037_tokens[0LL];
	if (_77317_token._field_id == 35LLU) {
		_77117_is_unsafe=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if (_77037_tokens.len() == 0LL) {
			(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		_77317_token=_77037_tokens[0LL];
		if (_77317_token._field_id == 37LLU) {
			_77217_is_deferred=true;
			_77037_tokens=_77037_tokens.slice(1LL);
			if (_77037_tokens.len() == 0LL) {
				(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
				return nullptr;
			}
		}
	} else if (_77317_token._field_id == 37LLU) {
		_77217_is_deferred=true;
		_77037_tokens=_77037_tokens.slice(1LL);
		if (_77037_tokens.len() == 0LL) {
			(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
	}
	jule::Int _79917_i = 0LL;
	jule::Slice<_2336ea198_Token> _80017_scope_tokens = _23441cd43_range(_79917_i,jule::Str("{", 1),jule::Str("}", 1),_77037_tokens);
	if (_80017_scope_tokens == nullptr) {
		(*this)._method_push_err(_77317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	} else if (_79917_i < _77037_tokens.len()) {
		(*this)._method_push_err(_77037_tokens[_79917_i],jule::Str("invalid syntax", 14));
	}
	jule::Ptr<_233464770_ScopeTree> _80717_scope = (*this)._method_build_scope(_80017_scope_tokens);
	_80717_scope->_field_unsafety=_77117_is_unsafe;
	_80717_scope->_field_deferred=_77217_is_deferred;
	return _80717_scope;
}



jule::Ptr<_233464770_LabelSt> _2337c95da_ScopeParser::_method_build_label_st(jule::Slice<_2336ea198_Token>& _81338_tokens) {
	jule::Ptr<_233464770_LabelSt> _81417_lbl = jule::new_struct<_233464770_LabelSt>(new( std::nothrow ) _233464770_LabelSt(_81338_tokens[0LL],_81338_tokens[0LL]._field_kind));
	if (_81338_tokens.len() > 2LL) {
		_81338_tokens=_81338_tokens.slice(2LL);
		(*this)._method_insert_as_next(_81338_tokens);
	}
	return _81417_lbl;
}



std::tuple<jule::Any,jule::Bool> _2337c95da_ScopeParser::_method_build_id_st(jule::Slice<_2336ea198_Token>& _82835_tokens) {
	jule::Bool _82864_ok = jule::Bool();
	if (_82835_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_82864_ok);
	}
	_2336ea198_Token _83317_token = _82835_tokens[1LL];
	{
		auto _match_expr{ _83317_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_4874064336; }
		_case_begin_4874064336:;
		{
			_82864_ok = true;
			return std::make_tuple(jule::Any((*this)._method_build_label_st(_82835_tokens)),_82864_ok);
		}
		goto _match_end_4874067328;
		_case_end_4874064336:;
		_match_end_4874067328:;
	}
	return std::make_tuple(jule::Any(),_82864_ok);
}



jule::Ptr<_23441b814_AssignInfo> _2337c95da_ScopeParser::_method_build_assign_info(jule::Slice<_2336ea198_Token>& _84241_tokens) {
	jule::Ptr<_23441b814_AssignInfo> _84317_info = jule::new_struct<_23441b814_AssignInfo>(new( std::nothrow ) _23441b814_AssignInfo(jule::Slice<_2336ea198_Token>(),jule::Slice<_2336ea198_Token>(),_2336ea198_Token(),true));
	jule::Int _84617_brace_n = 0LL;
	{
		auto expr = _84241_tokens;
		auto it = expr.begin();
		_iter_begin_4874074592:;
		if (it != expr.end()) {
			jule::Int _2337c95da_i = it - expr.begin();
			_2336ea198_Token _2337c95da_token = *it;
			{
				if (_2337c95da_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2337c95da_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4874079328; }
						_case_begin_4874079328:;
						{
							(_84617_brace_n)++;
						}
						goto _match_end_4874077968;
						_case_end_4874079328:;
						_case_begin_4874077280:;
						{
							(_84617_brace_n)--;
						}
						goto _match_end_4874077968;
						_case_end_4874077280:;
						_match_end_4874077968:;
					}
				}
				{
					if (!((_84617_brace_n > 0LL))) { goto _case_end_4874076864; }
					_case_begin_4874076864:;
					{
						goto _iter_next_4874074592;
					}
					goto _match_end_4874077056;
					_case_end_4874076864:;
					if (!((_2337c95da_token._field_id != 7LLU))) { goto _case_end_4874079648; }
					_case_begin_4874079648:;
					{
						goto _iter_next_4874074592;
					}
					goto _match_end_4874077056;
					_case_end_4874079648:;
					if (!(((!(_2336ea198_is_assign_op(_2337c95da_token._field_kind)))))) { goto _case_end_4874079744; }
					_case_begin_4874079744:;
					{
						goto _iter_next_4874074592;
					}
					goto _match_end_4874077056;
					_case_end_4874079744:;
					_match_end_4874077056:;
				}
				_84317_info->_field_l=_84241_tokens.slice(0LL,_2337c95da_i);
				if (_84317_info->_field_l.len() == 0LL) {
					_84317_info->_field_ok=false;
				}
				_84317_info->_field_setter=_2337c95da_token;
				if ((_2337c95da_i + 1LL) >= _84241_tokens.len()) {
					_84317_info->_field_r=nullptr;
					_84317_info->_field_ok=_2336ea198_is_postfix_op(_84317_info->_field_setter._field_kind);
					goto _iter_end_4874074592;
				}
				_84317_info->_field_r=_84241_tokens.slice(_2337c95da_i + 1LL);
				if (_2336ea198_is_postfix_op(_84317_info->_field_setter._field_kind)) {
					if (_84317_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_84317_info->_field_r[0LL],jule::Str("invalid syntax", 14));
						_84317_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4874074592;
			}
			_iter_next_4874074592:;
			++it;
			_2337c95da_i++;
			goto _iter_begin_4874074592;
		}
		_iter_end_4874074592:;
	}
	return _84317_info;
}



jule::Ptr<_233464770_AssignLeft> _2337c95da_ScopeParser::_method_build_assign_l(jule::Slice<_2336ea198_Token>& _88938_tokens) {
	jule::Ptr<_233464770_AssignLeft> _89017_l = jule::new_struct<_233464770_AssignLeft>(new( std::nothrow ) _233464770_AssignLeft(_88938_tokens[0LL],jule::Bool(),jule::Bool(),jule::Str(),jule::Ptr<_233464770_Expr>()));
	if (_88938_tokens[0LL]._field_id == 2LLU) {
		_89017_l->_field_ident=_89017_l->_field_token._field_kind;
	}
	_89017_l->_field_expr=(*this)._field_p->_method_build_expr(_88938_tokens);
	return _89017_l;
}



jule::Slice<jule::Ptr<_233464770_AssignLeft>> _2337c95da_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_2336ea198_Token>>& _90239_parts) {
	jule::Slice<jule::Ptr<_233464770_AssignLeft>> _90317_lefts = nullptr;
	{
		auto expr = _90239_parts;
		auto it = expr.begin();
		_iter_begin_4874101232:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337c95da_part = *it;
			{
				jule::Ptr<_233464770_AssignLeft> _90521_l = (*this)._method_build_assign_l(_2337c95da_part);
				_90317_lefts=jule::append(_90317_lefts,jule::Slice<jule::Ptr<_233464770_AssignLeft>>({_90521_l}));
			}
			_iter_next_4874101232:;
			++it;
			goto _iter_begin_4874101232;
		}
		_iter_end_4874101232:;
	}
	return _90317_lefts;
}



std::tuple<jule::Ptr<_233464770_AssignSt>,jule::Bool> _2337c95da_ScopeParser::_method_build_plain_assign(jule::Slice<_2336ea198_Token>& _91242_tokens) {
	jule::Ptr<_23441b814_AssignInfo> _91317_info = (*this)._method_build_assign_info(_91242_tokens);
	if ((!(_91317_info->_field_ok))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_233464770_AssignSt> _91817_assign = jule::new_struct<_233464770_AssignSt>(new( std::nothrow ) _233464770_AssignSt(jule::Bool(),_91317_info->_field_setter,jule::Slice<jule::Ptr<_233464770_AssignLeft>>(),jule::Ptr<_233464770_Expr>()));
	jule::Slice<jule::Slice<_2336ea198_Token>> _92218_parts;
	jule::Slice<_231e4202e_Log> _92225_errs;
	std::tie(_92218_parts,_92225_errs) = _23441cd43_parts(_91317_info->_field_l,8LLU,true);
	if (_92225_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_92225_errs);
		return std::make_tuple(nullptr,false);
	}
	_91817_assign->_field_left=(*this)._method_build_assign_ls(_92218_parts);
	if (_91317_info->_field_r != nullptr) {
		_91817_assign->_field_right=(*this)._field_p->_method_build_expr(_91317_info->_field_r);
	}
	return std::make_tuple(_91817_assign,true);
}



std::tuple<jule::Ptr<_233464770_AssignSt>,jule::Bool> _2337c95da_ScopeParser::_method_build_decl_assign(jule::Slice<_2336ea198_Token> _93640_tokens) {
	if (_93640_tokens.len() < 1LL) {
		return std::make_tuple(nullptr,false);
	}
	_93640_tokens=_93640_tokens.slice(1LL);
	_2336ea198_Token _94217_token = _93640_tokens[0LL];
	if ((_94217_token._field_id != 3LLU) || (_94217_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(nullptr,false);
	}
	jule::Ptr<_233464770_AssignSt> _94717_assign = jule::new_struct<_233464770_AssignSt>(new( std::nothrow ) _233464770_AssignSt(true,_2336ea198_Token(),jule::Slice<jule::Ptr<_233464770_AssignLeft>>(),jule::Ptr<_233464770_Expr>()));
	jule::Int _95117_i = 0LL;
	jule::Slice<_2336ea198_Token> _95217_rang = _23441cd43_range(_95117_i,jule::Str("(", 1),jule::Str(")", 1),_93640_tokens);
	if (_95217_rang == nullptr) {
		(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
		return std::make_tuple(nullptr,false);
	} else if ((_95117_i + 1LL) < _93640_tokens.len()) {
		_94717_assign->_field_setter=_93640_tokens[_95117_i];
		(_95117_i)++;
		jule::Slice<_2336ea198_Token> _95921_expr_tokens = _93640_tokens.slice(_95117_i);
		_94717_assign->_field_right=(*this)._field_p->_method_build_expr(_95921_expr_tokens);
	}
	jule::Slice<jule::Slice<_2336ea198_Token>> _96418_parts;
	jule::Slice<_231e4202e_Log> _96425_errs;
	std::tie(_96418_parts,_96425_errs) = _23441cd43_parts(_95217_rang,8LLU,true);
	if (_96425_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_96425_errs);
		return std::make_tuple(nullptr,false);
	}
	{
		auto expr = _96418_parts;
		auto it = expr.begin();
		_iter_begin_4874137856:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337c95da_part = *it;
			{
				jule::Bool _97121_is_mut = false;
				jule::Bool _97221_is_ref = false;
				_94217_token=_2337c95da_part[0LL];
				if (_94217_token._field_id == 36LLU) {
					_97121_is_mut=true;
					_2337c95da_part=_2337c95da_part.slice(1LL);
					if (_2337c95da_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4874137856;
					}
				}
				if ((_2337c95da_part[0LL]._field_id == 7LLU) && (_2337c95da_part[0LL]._field_kind == jule::Str("&", 1))) {
					_97221_is_ref=true;
					_2337c95da_part=_2337c95da_part.slice(1LL);
					if (_2337c95da_part.len() == 0LL) {
						(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
						goto _iter_next_4874137856;
					}
				}
				if (((_2337c95da_part[0LL]._field_id != 2LLU) && (_2337c95da_part[0LL]._field_id != 3LLU)) && (_2337c95da_part[0LL]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_94217_token,jule::Str("invalid syntax", 14));
					goto _iter_next_4874137856;
				}
				jule::Ptr<_233464770_AssignLeft> _100021_l = (*this)._method_build_assign_l(_2337c95da_part);
				_100021_l->_field_mutable=_97121_is_mut;
				_100021_l->_field_reference=_97221_is_ref;
				_94717_assign->_field_left=jule::append(_94717_assign->_field_left,jule::Slice<jule::Ptr<_233464770_AssignLeft>>({_100021_l}));
			}
			_iter_next_4874137856:;
			++it;
			goto _iter_begin_4874137856;
		}
		_iter_end_4874137856:;
	}
	return std::make_tuple(_94717_assign,true);
}



std::tuple<jule::Ptr<_233464770_AssignSt>,jule::Bool> _2337c95da_ScopeParser::_method_build_assign_st(jule::Slice<_2336ea198_Token>& _100939_tokens) {
	jule::Ptr<_233464770_AssignSt> _100958_st = jule::Ptr<_233464770_AssignSt>();
	jule::Bool _100973_ok = jule::Bool();
	if ((!(_23441b814_check_assign_tokens(_100939_tokens)))) {
		_100958_st = nullptr;
		_100973_ok = false;
		return std::make_tuple(_100958_st,_100973_ok);
	}
	{
		auto _match_expr{ _100939_tokens[0LL]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_4874165888; }
		_case_begin_4874165888:;
		{
			std::tie(_100958_st,_100973_ok) = (*this)._method_build_decl_assign(_100939_tokens);
		}
		goto _match_end_4874164256;
		_case_end_4874165888:;
		_case_begin_4874163648:;
		{
			std::tie(_100958_st,_100973_ok) = (*this)._method_build_plain_assign(_100939_tokens);
		}
		goto _match_end_4874164256;
		_case_end_4874163648:;
		_match_end_4874164256:;
	}
	return std::make_tuple(_100958_st,_100973_ok);
}



jule::Any _2337c95da_ScopeParser::_method_build_st(jule::Ptr<_2337c95da_Stmt>& _102232_st) {
	_2336ea198_Token _102317_token = _102232_st->_field_tokens[0LL];
	if (_102317_token._field_id == 2LLU) {
		jule::Any _102522_s;
		jule::Bool _102525_ok;
		std::tie(_102522_s,_102525_ok) = (*this)._method_build_id_st(_102232_st->_field_tokens);
		if (_102525_ok) {
			return _102522_s;
		}
	}
	jule::Ptr<_233464770_AssignSt> _103118_s;
	jule::Bool _103121_ok;
	std::tie(_103118_s,_103121_ok) = (*this)._method_build_assign_st(_102232_st->_field_tokens);
	if (_103121_ok) {
		return jule::Any(_103118_s);
	}
	{
		auto _match_expr{ _102317_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_4874178688; }
		_case_begin_4874178688:;
		{
			return (*this)._method_build_var_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874178688:;
		if (!((4LLU) == _match_expr)) { goto _case_end_4874176608; }
		_case_begin_4874176608:;
		{
			return (*this)._method_build_ret_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874176608:;
		if (!((12LLU) == _match_expr)) { goto _case_end_4874176704; }
		_case_begin_4874176704:;
		{
			return (*this)._method_buid_iter_st(_102232_st);
		}
		goto _match_end_4874175616;
		_case_end_4874176704:;
		if (!((13LLU) == _match_expr)) { goto _case_end_4874176800; }
		_case_begin_4874176800:;
		{
			return (*this)._method_build_break_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874176800:;
		if (!((14LLU) == _match_expr)) { goto _case_end_4874176896; }
		_case_begin_4874176896:;
		{
			return (*this)._method_build_cont_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874176896:;
		if (!((16LLU) == _match_expr)) { goto _case_end_4874177072; }
		_case_begin_4874177072:;
		{
			return (*this)._method_build_if_else_chain(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874177072:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4874177168; }
		_case_begin_4874177168:;
		{
			return (*this)._method_build_comment_st(_102317_token);
		}
		goto _match_end_4874175616;
		_case_end_4874177168:;
		if (!((26LLU) == _match_expr)) { goto _case_end_4874177264; }
		_case_begin_4874177264:;
		{
			return (*this)._method_build_co_call_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874177264:;
		if (!((22LLU) == _match_expr)) { goto _case_end_4874177360; }
		_case_begin_4874177360:;
		{
			return (*this)._method_build_goto_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874177360:;
		if (!((32LLU) == _match_expr)) { goto _case_end_4874177456; }
		_case_begin_4874177456:;
		{
			return (*this)._method_build_fall_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874177456:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4874179440; }
		_case_begin_4874179440:;
		{
			return (*this)._method_build_type_alias_st(_102232_st->_field_tokens);
		}
		goto _match_end_4874175616;
		_case_end_4874179440:;
		if (!((27LLU) == _match_expr)) { goto _case_end_4874179536; }
		_case_begin_4874179536:;
		{
			return jule::Any((*this)._method_build_match_case(_102232_st->_field_tokens));
		}
		goto _match_end_4874175616;
		_case_end_4874179536:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_4874179632; }
		_case_begin_4874179632:;
		{
			return jule::Any((*this)._method_build_scope_st(_102232_st->_field_tokens));
		}
		goto _match_end_4874175616;
		_case_end_4874179632:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4874179728; }
		_case_begin_4874179728:;
		{
			if (_102317_token._field_kind == jule::Str("{", 1)) {
				return jule::Any((*this)._method_build_scope_st(_102232_st->_field_tokens));
			}
		}
		goto _match_end_4874175616;
		_case_end_4874179728:;
		_case_begin_4874175904:;
		{
			if (_2337db201_is_fn_call(_102232_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_102232_st->_field_tokens);
			}
		}
		goto _match_end_4874175616;
		_case_end_4874175904:;
		_match_end_4874175616:;
	}
	(*this)._method_push_err(_102317_token,jule::Str("invalid syntax", 14));
	return jule::Any(nullptr);
}



void _2337c95da_ScopeParser::_method_build(jule::Slice<_2336ea198_Token>& _109829_tokens,jule::Ptr<_233464770_ScopeTree>& _109851_s) {
	if (_109851_s == nullptr) {
		return;
	}
	(*this)._field_stms=_2337c95da_split_stms(_109829_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_109851_s;
	while ((!((*this)._method_is_last_st())) && (!((*this)._method_finished()))) {
		{
			jule::Ptr<_2337c95da_Stmt> _110721_st = (*this)._method_next();
			jule::Any _110821_data = (*this)._method_build_st(_110721_st);
			if (_110821_data != nullptr) {
				(*this)._field_s->_field_stmts=jule::append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_110821_data}));
			}
			if ((*this)._method_stopped()) {
				goto _iter_end_4874197920;
			}
		}
	_iter_next_4874197920:;
	}
	_iter_end_4874197920:;
}







std::ostream &operator<<(std::ostream &_Stream, const _2337c95da_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2337db201_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



void _2337db201_Precedencer::_method_set(jule::Int _15622_level,jule::Any _15634_expr) {
	{
		auto expr = (*this)._field_pairs;
		auto it = expr.begin();
		_iter_begin_4874208096:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			jule::Slice<jule::Any> _2337db201_pair = *it;
			{
				jule::Int _15817_pair_level = _2337db201_pair[0LL].operator jule::Int();
				if (_15622_level > _15817_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _16025_first = (*this)._field_pairs.slice(0LL,_2337db201_i);
					jule::Slice<jule::Slice<jule::Any>> _16125_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16225_appended = jule::append(_16125_buffer,(*this)._field_pairs.slice(_2337db201_i));
					(*this)._field_pairs=jule::append(_16025_first,_16225_appended);
					return;
				}
			}
			_iter_next_4874208096:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4874208096;
		}
		_iter_end_4874208096:;
	}
	(*this)._field_pairs=jule::append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15622_level),_15634_expr})}));
}



jule::Any _2337db201_Precedencer::_method_get_lower(void) {
	jule::I64 _17117_i = (*this)._field_pairs.len() - 1LL;
	for (; _17117_i >= 0LL; (_17117_i)--) {
		{
			jule::Any _17321_data = (*this)._field_pairs[_17117_i][1LL];
			if (_17321_data != nullptr) {
				return _17321_data;
			}
		}
	_iter_next_4874217696:;
	}
	_iter_end_4874217696:;
	return jule::Any(nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _2337db201_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



void _2337db201_ExprBuilder::_method_push_err(_2336ea198_Token _29927_token,jule::Str _29941_fmt,jule::Slice<jule::Any> _29954_args) {
	(*this)._field_p->_method_push_err(_29927_token,_29941_fmt,_29954_args);
}



void _2337db201_ExprBuilder::_method_push_suggestion(jule::Str _30434_fmt,jule::Slice<jule::Any> _30447_args) {
	(*this)._field_p->_method_push_suggestion(_30434_fmt,_30447_args);
}



jule::Ptr<_233464770_TupleExpr> _2337db201_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_2336ea198_Token>>& _30835_parts) {
	jule::Ptr<_233464770_TupleExpr> _30917_tuple = jule::new_struct<_233464770_TupleExpr>(new( std::nothrow ) _233464770_TupleExpr(jule::Slice<jule::Ptr<_233464770_Expr>>::alloc(0LL,static_cast<jule::I64>(_30835_parts.len()))));
	{
		auto expr = _30835_parts;
		auto it = expr.begin();
		_iter_begin_4874254624:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337db201_part = *it;
			{
				_30917_tuple->_field_expr=jule::append(_30917_tuple->_field_expr,jule::Slice<jule::Ptr<_233464770_Expr>>({(*this)._method_build_from_tokens(_2337db201_part)}));
			}
			_iter_next_4874254624:;
			++it;
			goto _iter_begin_4874254624;
		}
		_iter_end_4874254624:;
	}
	return _30917_tuple;
}



jule::Ptr<_233464770_LitExpr> _2337db201_ExprBuilder::_method_build_lit(_2336ea198_Token _31828_token) {
	return jule::new_struct<_233464770_LitExpr>(new( std::nothrow ) _233464770_LitExpr(_31828_token,_31828_token._field_kind));
}



jule::Ptr<_233464770_TypeDecl> _2337db201_ExprBuilder::_method_build_primitive_type(_2336ea198_Token& _32540_token) {
	return _23473c948_build_prim_type(_32540_token);
}



jule::Any _2337db201_ExprBuilder::_method_build_single(_2336ea198_Token _32935_token) {
	{
		auto _match_expr{ _32935_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_4874265728; }
		_case_begin_4874265728:;
		{
			return jule::Any((*this)._method_build_lit(_32935_token));
		}
		goto _match_end_4874264944;
		_case_end_4874265728:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_4874267808; }
		_case_begin_4874267808:;
		{
			return jule::Any(_2337db201_build_ident_expr(_32935_token));
		}
		goto _match_end_4874264944;
		_case_end_4874267808:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4874265280; }
		_case_begin_4874265280:;
		{
			return jule::Any((*this)._method_build_primitive_type(_32935_token));
		}
		goto _match_end_4874264944;
		_case_end_4874265280:;
		_case_begin_4874264400:;
		{
			(*this)._method_push_err(_32935_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4874264944;
		_case_end_4874264400:;
		_match_end_4874264944:;
	}
}



jule::Ptr<_233464770_IdentExpr> _2337db201_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_2336ea198_Token>& _34746_tokens) {
	if (_34746_tokens[0LL]._field_id != 31LLU) {
		return nullptr;
	} else if (_34746_tokens[1LL]._field_id != 20LLU) {
		(*this)._method_push_err(_34746_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("use dot (.) to access cpp-linked defines", 40),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_2336ea198_Token _35517_token = _34746_tokens[2LL];
	if (_35517_token._field_id != 2LLU) {
		(*this)._method_push_err(_34746_tokens[2LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_233464770_IdentExpr> _36117_expr = _2337db201_build_ident_expr(_35517_token);
	_36117_expr->_field_cpp_linked=true;
	return _36117_expr;
}



jule::Ptr<_233464770_UnaryExpr> _2337db201_ExprBuilder::_method_build_unary(jule::Slice<_2336ea198_Token> _36634_tokens) {
	_2336ea198_Token _36717_op = _36634_tokens[0LL];
	if (_36634_tokens.len() == 1LL) {
		(*this)._method_push_err(_36717_op,jule::Str("missing expression for unary operator", 37),jule::Slice<jule::Any>({}));
		return nullptr;
	} else if ((!(_2336ea198_is_unary_op(_36717_op._field_kind)))) {
		(*this)._method_push_err(_36717_op,jule::Str("invalid_operator_for_unary: @", 29),jule::Slice<jule::Any>({jule::Any(_36717_op._field_kind)}));
		return nullptr;
	}
	_36634_tokens=_36634_tokens.slice(1LL);
	return jule::new_struct<_233464770_UnaryExpr>(new( std::nothrow ) _233464770_UnaryExpr(_36717_op,(*this)._method_build(_36634_tokens)));
}



jule::Ptr<_233464770_SubIdentExpr> _2337db201_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_2336ea198_Token> _38742_tokens) {
	jule::I64 _38817_i = _38742_tokens.len() - 1LL;
	_2336ea198_Token _38917_ident_token = _38742_tokens[_38817_i];
	(_38817_i)--;
	_38742_tokens=_38742_tokens.slice(0LL,_38817_i);
	if (_38742_tokens.len() == 0LL) {
		(*this)._method_push_err(_38917_ident_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return jule::new_struct<_233464770_SubIdentExpr>(new( std::nothrow ) _233464770_SubIdentExpr(jule::Bool(),(*this)._method_build(_38742_tokens),_38917_ident_token));
}



jule::Ptr<_233464770_NsSelectionExpr> _2337db201_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_2336ea198_Token>& _40242_tokens) {
	jule::Ptr<_233464770_NsSelectionExpr> _40317_ns = jule::new_struct<_233464770_NsSelectionExpr>(new( std::nothrow ) _233464770_NsSelectionExpr());
	{
		auto expr = _40242_tokens;
		auto it = expr.begin();
		_iter_begin_4874305328:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_token = *it;
			{
				if (jule::mod(_2337db201_i,2LL) == 0LL) {
					if (_2337db201_token._field_id != 2LLU) {
						(*this)._method_push_err(_2337db201_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					}
					_40317_ns->_field_ns=jule::append(_40317_ns->_field_ns,jule::Slice<_2336ea198_Token>({_2337db201_token}));
				} else if (_2337db201_token._field_id != 23LLU) {
					(*this)._method_push_err(_2337db201_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("expected double colon \"::\"", 26),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4874305328:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4874305328;
		}
		_iter_end_4874305328:;
	}
	_40317_ns->_field_ident=_40317_ns->_field_ns[_40317_ns->_field_ns.len() - 1LL];
	_40317_ns->_field_ns=_40317_ns->_field_ns.slice(0LL,_40317_ns->_field_ns.len() - 1LL);
	return _40317_ns;
}



jule::Ptr<_233464770_TypeDecl> _2337db201_ExprBuilder::_method_build_type(jule::Slice<_2336ea198_Token>& _42134_tokens) {
	jule::Int _42217_i = 0LL;
	jule::Ptr<_233464770_TypeDecl> _42318_t;
	jule::Bool _42321_ok;
	std::tie(_42318_t,_42321_ok) = (*this)._field_p->_method_build_type(_42134_tokens,(&(_42217_i)),false);
	if ((!(_42321_ok))) {
		(*this)._method_push_err(_42134_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_42217_i < _42134_tokens.len()) {
		(*this)._method_push_err(_42134_tokens[_42217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _42318_t;
}



jule::Any _2337db201_ExprBuilder::_method_build_sub_ident(jule::Slice<_2336ea198_Token>& _43539_tokens) {
	jule::I64 _43613_i = _43539_tokens.len() - 2LL;
	_2336ea198_Token _43713_token = _43539_tokens[_43613_i];
	{
		auto _match_expr{ _43713_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_4874331376; }
		_case_begin_4874331376:;
		{
			return jule::Any((*this)._method_build_obj_sub_ident(_43539_tokens));
		}
		goto _match_end_4874331184;
		_case_end_4874331376:;
		if (!((23LLU) == _match_expr)) { goto _case_end_4874331472; }
		_case_begin_4874331472:;
		{
			return jule::Any((*this)._method_build_ns_sub_ident(_43539_tokens));
		}
		goto _match_end_4874331184;
		_case_end_4874331472:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4874331568; }
		_case_begin_4874331568:;
		{
			if (_43713_token._field_kind == jule::Str("]", 1)) {
				return jule::Any((*this)._method_build_type(_43539_tokens));
			}
		}
		goto _match_end_4874331184;
		_case_end_4874331568:;
		_match_end_4874331184:;
	}
	(*this)._method_push_err(_43713_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



jule::Ptr<_233464770_VariadicExpr> _2337db201_ExprBuilder::_method_build_variadic(jule::Slice<_2336ea198_Token> _45637_tokens) {
	_2336ea198_Token _45717_token = _45637_tokens[_45637_tokens.len() - 1LL];
	_45637_tokens=_45637_tokens.slice(0LL,_45637_tokens.len() - 1LL);
	return jule::new_struct<_233464770_VariadicExpr>(new( std::nothrow ) _233464770_VariadicExpr(_45717_token,(*this)._method_build(_45637_tokens)));
}



jule::Any _2337db201_ExprBuilder::_method_build_op_right(jule::Slice<_2336ea198_Token>& _46538_tokens) {
	_2336ea198_Token _46617_token = _46538_tokens[_46538_tokens.len() - 1LL];
	{
		auto _match_expr{ _46617_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_4874349392; }
		_case_begin_4874349392:;
		{
			return jule::Any((*this)._method_build_variadic(_46538_tokens));
		}
		goto _match_end_4874346704;
		_case_end_4874349392:;
		_case_begin_4874344800:;
		{
			(*this)._method_push_err(_46617_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4874346704;
		_case_end_4874344800:;
		_match_end_4874346704:;
	}
}



jule::Any _2337db201_ExprBuilder::_method_build_between_parentheses(jule::Slice<_2336ea198_Token> _47748_tokens) {
	_2336ea198_Token _47813_token = _47748_tokens[0LL];
	_47748_tokens=_47748_tokens.slice(1LL,_47748_tokens.len() - 1LL);
	if (_47748_tokens.len() == 0LL) {
		(*this)._method_push_err(_47813_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("empty parentheses are not valid expression, must include an expression in range", 79),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	return (*this)._method_build(_47748_tokens);
}



jule::Ptr<_233464770_CastExpr> _2337db201_ExprBuilder::_method_try_build_cast(jule::Slice<_2336ea198_Token>& _48838_tokens) {
	jule::Int _48917_range_n = 0LL;
	{
		auto expr = _48838_tokens;
		auto it = expr.begin();
		_iter_begin_4874360496:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_token = *it;
			{
				if (_2337db201_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2337db201_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4874365296; }
						_case_begin_4874365296:;
						{
							(_48917_range_n)++;
							goto _iter_next_4874360496;
						}
						goto _match_end_4874363936;
						_case_end_4874365296:;
						_case_begin_4874363248:;
						{
							(_48917_range_n)--;
						}
						goto _match_end_4874363936;
						_case_end_4874363248:;
						_match_end_4874363936:;
					}
				}
				if (_48917_range_n > 0LL) {
					goto _iter_next_4874360496;
				} else if ((_2337db201_i + 1LL) == _48838_tokens.len()) {
					return nullptr;
				}
				jule::Slice<_2336ea198_Token> _51021_type_tokens = _48838_tokens.slice(0LL,_2337db201_i + 1LL);
				jule::Slice<_2336ea198_Token> _51121_expr_tokens = _48838_tokens.slice(_2337db201_i + 1LL);
				if (_51121_expr_tokens.len() == 0LL) {
					return nullptr;
				}
				_2336ea198_Token _51817_tok = _51121_expr_tokens[0LL];
				if ((_51817_tok._field_id != 3LLU) || (_51817_tok._field_kind != jule::Str("(", 1))) {
					return nullptr;
				}
				jule::Ptr<_233464770_CastExpr> _52321_cast = jule::new_struct<_233464770_CastExpr>(new( std::nothrow ) _233464770_CastExpr());
				if (_51121_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_51121_expr_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("give an expression for casting", 30),jule::Slice<jule::Any>({}));
				}
				if (_51021_type_tokens.len() == 2LL) {
					(*this)._method_push_err(_51021_type_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("type declaration expected for casting", 37),jule::Slice<jule::Any>({}));
				} else {
					_51021_type_tokens=_51021_type_tokens.slice(1LL,_51021_type_tokens.len() - 1LL);
					jule::Int _53725_type_index = 0LL;
					jule::Ptr<_233464770_TypeDecl> _53826_t;
					jule::Bool _53829_ok;
					std::tie(_53826_t,_53829_ok) = (*this)._field_p->_method_build_type(_51021_type_tokens,(&(_53725_type_index)),true);
					if (_53829_ok && (_53725_type_index < _51021_type_tokens.len())) {
						(*this)._method_push_err(_51021_type_tokens[_53725_type_index],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					} else if ((!(_53829_ok))) {
						return _52321_cast;
					}
					_52321_cast->_field_kind=_53826_t;
					if (_51121_expr_tokens.len() > 2LL) {
						jule::Int _54829_j = 0LL;
						_23441cd43_range(_54829_j,jule::Str("(", 1),jule::Str(")", 1),_51121_expr_tokens);
						if (_54829_j < _51121_expr_tokens.len()) {
							return nullptr;
						}
						_51121_expr_tokens=_51121_expr_tokens.slice(0LL,_54829_j);
						_52321_cast->_field_expr=(*this)._method_build(_51121_expr_tokens);
					}
				}
				return _52321_cast;
			}
			_iter_next_4874360496:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4874360496;
		}
		_iter_end_4874360496:;
	}
	return nullptr;
}



void _2337db201_ExprBuilder::_method_push_arg(jule::Slice<jule::Ptr<_233464770_Expr>>& _56332_args,jule::Slice<_2336ea198_Token> _56351_tokens,_2336ea198_Token _56368_err_token) {
	if (_56351_tokens.len() == 0LL) {
		(*this)._method_push_err(_56368_err_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_56332_args=jule::append(_56332_args,jule::Slice<jule::Ptr<_233464770_Expr>>({(*this)._method_build_from_tokens(_56351_tokens)}));
}



jule::Slice<jule::Ptr<_233464770_Expr>> _2337db201_ExprBuilder::_method_build_args(jule::Slice<_2336ea198_Token> _57233_tokens) {
	if (_57233_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_233464770_Expr>> _57817_args = nullptr;
	jule::Int _57917_last = 0LL;
	jule::Int _58017_range_n = 0LL;
	_57233_tokens=_57233_tokens.slice(1LL,_57233_tokens.len() - 1LL);
	{
		auto expr = _57233_tokens;
		auto it = expr.begin();
		_iter_begin_4874404192:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_token = *it;
			{
				if (_2337db201_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2337db201_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4874409504; }
						_case_begin_4874409504:;
						{
							(_58017_range_n)++;
						}
						goto _match_end_4874408144;
						_case_end_4874409504:;
						_case_begin_4874407456:;
						{
							(_58017_range_n)--;
						}
						goto _match_end_4874408144;
						_case_end_4874407456:;
						_match_end_4874408144:;
					}
				}
				if ((_58017_range_n > 0LL) || (_2337db201_token._field_id != 8LLU)) {
					goto _iter_next_4874404192;
				}
				(*this)._method_push_arg(_57817_args,_57233_tokens.slice(_57917_last,_2337db201_i),_2337db201_token);
				_57917_last=static_cast<jule::Int>(_2337db201_i + 1LL);
			}
			_iter_next_4874404192:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4874404192;
		}
		_iter_end_4874404192:;
	}
	if (_57917_last < _57233_tokens.len()) {
		if (_57917_last == 0LL) {
			if (_57233_tokens.len() > 0LL) {
				(*this)._method_push_arg(_57817_args,_57233_tokens.slice(_57917_last),_57233_tokens[_57917_last]);
			}
		} else {
			(*this)._method_push_arg(_57817_args,_57233_tokens.slice(_57917_last),_57233_tokens[_57917_last - 1LL]);
		}
	}
	return _57817_args;
}



jule::Slice<jule::Ptr<_233464770_TypeDecl>> _2337db201_ExprBuilder::_method_build_call_generics(jule::Slice<_2336ea198_Token> _61542_tokens) {
	if (_61542_tokens.len() == 0LL) {
		return nullptr;
	}
	_61542_tokens=_61542_tokens.slice(1LL,_61542_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_2336ea198_Token>> _62118_parts;
	jule::Slice<_231e4202e_Log> _62125_errs;
	std::tie(_62118_parts,_62125_errs) = _23441cd43_parts(_61542_tokens,8LLU,true);
	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _62217_generics = jule::Slice<jule::Ptr<_233464770_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_62118_parts.len()));
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_62125_errs);
	{
		auto expr = _62118_parts;
		auto it = expr.begin();
		_iter_begin_4874426384:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337db201_part = *it;
			{
				if (_2337db201_part.len() == 0LL) {
					goto _iter_next_4874426384;
				}
				jule::Int _62821_j = 0LL;
				jule::Ptr<_233464770_TypeDecl> _62922_generic;
				std::tie(_62922_generic,std::ignore) = (*this)._field_p->_method_build_type(_2337db201_part,(&(_62821_j)),true);
				if (_62821_j < _2337db201_part.len()) {
					(*this)._method_push_err(_2337db201_part[_62821_j],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_62217_generics=jule::append(_62217_generics,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({_62922_generic}));
			}
			_iter_next_4874426384:;
			++it;
			goto _iter_begin_4874426384;
		}
		_iter_end_4874426384:;
	}
	return _62217_generics;
}



jule::Ptr<_233464770_FnCallExpr> _2337db201_ExprBuilder::_method_build_fn_call(_2336ea198_Token& _63937_token,jule::Ptr<_2337db201_CallData>& _63956_data) {
	return jule::new_struct<_233464770_FnCallExpr>(new( std::nothrow ) _233464770_FnCallExpr(_63937_token,(*this)._method_build_from_tokens(_63956_data->_field_expr_tokens),(*this)._method_build_call_generics(_63956_data->_field_generics_tokens),(*this)._method_build_args(_63956_data->_field_args_tokens),jule::Bool()));
}



jule::Any _2337db201_ExprBuilder::_method_build_parentheses_range(jule::Slice<_2336ea198_Token>& _64847_tokens) {
	_2336ea198_Token _64917_token = _64847_tokens[0LL];
	{
		auto _match_expr{ _64917_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4874439920; }
		_case_begin_4874439920:;
		{
			{
				auto _match_expr{ _64917_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4874443104; }
				_case_begin_4874443104:;
				{
					jule::Ptr<_233464770_CastExpr> _65425_expr = (*this)._method_try_build_cast(_64847_tokens);
					if (_65425_expr != nullptr) {
						return jule::Any(_65425_expr);
					}
				}
				goto _match_end_4874442944;
				_case_end_4874443104:;
				_match_end_4874442944:;
			}
		}
		goto _match_end_4874441520;
		_case_end_4874439920:;
		_match_end_4874441520:;
	}
	jule::Ptr<_2337db201_CallData> _66117_data = _2337db201_get_call_data(_64847_tokens);
	if (_66117_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_66117_data->_field_args_tokens);
	}
	return jule::Any((*this)._method_build_fn_call(_64917_token,_66117_data));
}



jule::Ptr<_233464770_UnsafeExpr> _2337db201_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_2336ea198_Token> _67240_tokens) {
	_2336ea198_Token _67317_token = _67240_tokens[0LL];
	_67240_tokens=_67240_tokens.slice(1LL);
	jule::Int _67517_i = 0LL;
	jule::Slice<_2336ea198_Token> _67617_range_tokens = _23441cd43_range(_67517_i,jule::Str("{", 1),jule::Str("}", 1),_67240_tokens);
	if (_67617_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_67240_tokens[0LL],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return jule::new_struct<_233464770_UnsafeExpr>(new( std::nothrow ) _233464770_UnsafeExpr(_67317_token,(*this)._method_build_from_tokens(_67617_range_tokens)->_field_kind));
}



jule::Ptr<_233464770_FnDecl> _2337db201_ExprBuilder::_method_build_anon_fn(jule::Slice<_2336ea198_Token>& _68737_tokens) {
	jule::Ptr<_233464770_FnDecl> _68817_f = (*this)._field_p->_method_build_fn(_68737_tokens,false,false);
	if ((!(_68817_f->_method_is_anon()))) {
		(*this)._method_push_err(_68817_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("anonymous function expected, remove identifier of function", 58),jule::Slice<jule::Any>({}));
	}
	return _68817_f;
}



jule::Any _2337db201_ExprBuilder::_method_build_unsafe(jule::Slice<_2336ea198_Token>& _69636_tokens) {
	{
		auto _match_expr{ _69636_tokens[1LL]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_4874470896; }
		_case_begin_4874470896:;
		{
			return jule::Any((*this)._method_build_anon_fn(_69636_tokens));
		}
		goto _match_end_4874469488;
		_case_end_4874470896:;
		_case_begin_4874468432:;
		{
			return jule::Any((*this)._method_build_unsafe_expr(_69636_tokens));
		}
		goto _match_end_4874469488;
		_case_end_4874468432:;
		_match_end_4874469488:;
	}
}



void _2337db201_ExprBuilder::_method_push_range_lit_part(jule::Slice<_2336ea198_Token> _70742_part,_2336ea198_Token _7089_error_token,jule::Slice<jule::Slice<_2336ea198_Token>>& _70834_parts) {
	if (_70742_part.len() == 0LL) {
		(*this)._method_push_err(_7089_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("an expression expected", 22),jule::Slice<jule::Any>({}));
		return;
	}
	_70834_parts=jule::append(_70834_parts,jule::Slice<jule::Slice<_2336ea198_Token>>({_70742_part}));
}



jule::Slice<jule::Slice<_2336ea198_Token>> _2337db201_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_2336ea198_Token> _71853_tokens) {
	if (_71853_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_2336ea198_Token>> _72417_parts = nullptr;
	jule::Int _72617_last = 0LL;
	jule::Int _72717_range_n = 0LL;
	_71853_tokens=_71853_tokens.slice(1LL,_71853_tokens.len() - 1LL);
	{
		auto expr = _71853_tokens;
		auto it = expr.begin();
		_iter_begin_4874485728:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_token = *it;
			{
				if (_2337db201_token._field_id == 3LLU) {
					{
						auto _match_expr{ _2337db201_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4874491040; }
						_case_begin_4874491040:;
						{
							(_72717_range_n)++;
						}
						goto _match_end_4874489680;
						_case_end_4874491040:;
						_case_begin_4874488992:;
						{
							(_72717_range_n)--;
						}
						goto _match_end_4874489680;
						_case_end_4874488992:;
						_match_end_4874489680:;
					}
				}
				if ((_72717_range_n > 0LL) || (_2337db201_token._field_id != 8LLU)) {
					goto _iter_next_4874485728;
				}
				(*this)._method_push_range_lit_part(_71853_tokens.slice(_72617_last,_2337db201_i),_2337db201_token,_72417_parts);
				_72617_last=static_cast<jule::Int>(_2337db201_i + 1LL);
			}
			_iter_next_4874485728:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4874485728;
		}
		_iter_end_4874485728:;
	}
	if (_72617_last < _71853_tokens.len()) {
		if (_72617_last == 0LL) {
			if (_71853_tokens.len() > 0LL) {
				(*this)._method_push_range_lit_part(_71853_tokens.slice(_72617_last),_71853_tokens[_72617_last],_72417_parts);
			}
		} else {
			(*this)._method_push_range_lit_part(_71853_tokens.slice(_72617_last),_71853_tokens[_72617_last - 1LL],_72417_parts);
		}
	}
	return _72417_parts;
}



jule::Ptr<_233464770_FieldExprPair> _2337db201_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_2336ea198_Token> _76144_tokens) {
	jule::Ptr<_233464770_FieldExprPair> _76217_pair = jule::new_struct<_233464770_FieldExprPair>(new( std::nothrow ) _233464770_FieldExprPair(_76144_tokens[0LL],jule::Any()));
	_76144_tokens=_76144_tokens.slice(2LL);
	_76217_pair->_field_expr=(*this)._method_build_from_tokens(_76144_tokens)->_field_kind;
	return _76217_pair;
}



jule::Any _2337db201_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_2336ea198_Token>& _77045_tokens) {
	_2336ea198_Token _77117_token = _77045_tokens[0LL];
	if (_77117_token._field_id == 2LLU) {
		if (_77045_tokens.len() > 1LL) {
			_77117_token=_77045_tokens[1LL];
			if (_77117_token._field_id == 11LLU) {
				return jule::Any((*this)._method_build_field_expr_pair(_77045_tokens));
			}
		}
	}
	return jule::Any((*this)._method_build_from_tokens(_77045_tokens));
}



jule::Slice<jule::Any> _2337db201_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_2336ea198_Token>& _78346_tokens) {
	jule::Slice<jule::Slice<_2336ea198_Token>> _78417_parts = (*this)._method_get_brace_range_lit_expr_parts(_78346_tokens);
	if (_78417_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _78917_pairs = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_78417_parts.len()));
	{
		auto expr = _78417_parts;
		auto it = expr.begin();
		_iter_begin_4874516256:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337db201_part = *it;
			{
				_78917_pairs=jule::append(_78917_pairs,jule::Slice<jule::Any>({(*this)._method_build_struct_lit_expr(_2337db201_part)}));
			}
			_iter_next_4874516256:;
			++it;
			goto _iter_begin_4874516256;
		}
		_iter_end_4874516256:;
	}
	return _78917_pairs;
}



jule::Ptr<_233464770_StructLit> _2337db201_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_2336ea198_Token> _79649_tokens) {
	jule::Int _79717_i = 0LL;
	jule::Ptr<_233464770_TypeDecl> _79818_t;
	jule::Bool _79821_ok;
	std::tie(_79818_t,_79821_ok) = (*this)._field_p->_method_build_type(_79649_tokens,(&(_79717_i)),true);
	if ((!(_79821_ok))) {
		return nullptr;
	} else if (_79717_i >= _79649_tokens.len()) {
		(*this)._method_push_err(_79649_tokens[_79717_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_79649_tokens=_79649_tokens.slice(_79717_i);
	_2336ea198_Token _80713_token = _79649_tokens[0LL];
	if ((_80713_token._field_id != 3LLU) || (_80713_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_80713_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return jule::new_struct<_233464770_StructLit>(new( std::nothrow ) _233464770_StructLit(_79818_t,(*this)._method_build_struct_lit_exprs(_79649_tokens)));
}



jule::Any _2337db201_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_2336ea198_Token>& _81944_tokens) {
	jule::Slice<_2336ea198_Token> _82018_l;
	jule::Slice<_2336ea198_Token> _82025_r;
	std::tie(_82018_l,_82025_r) = _2337db201_split_colon(_81944_tokens);
	if (_82018_l != nullptr) {
		return jule::Any(jule::new_struct<_233464770_KeyValPair>(new( std::nothrow ) _233464770_KeyValPair((*this)._method_build_from_tokens(_82018_l)->_field_kind,(*this)._method_build_from_tokens(_82025_r)->_field_kind,_81944_tokens[_82018_l.len()])));
	}
	return jule::Any((*this)._method_build_from_tokens(_81944_tokens));
}



jule::Ptr<_233464770_BraceLit> _2337db201_ExprBuilder::_method_build_brace_lit(jule::Slice<_2336ea198_Token>& _83239_tokens) {
	jule::Ptr<_233464770_BraceLit> _83317_lit = jule::new_struct<_233464770_BraceLit>(new( std::nothrow ) _233464770_BraceLit(_83239_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_2336ea198_Token>> _83717_parts = (*this)._method_get_brace_range_lit_expr_parts(_83239_tokens);
	if (_83717_parts == nullptr) {
		return _83317_lit;
	}
	_83317_lit->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_83717_parts.len()));
	{
		auto expr = _83717_parts;
		auto it = expr.begin();
		_iter_begin_4874547152:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337db201_part = *it;
			{
				_83317_lit->_field_exprs=jule::append(_83317_lit->_field_exprs,jule::Slice<jule::Any>({(*this)._method_build_brace_lit_part(_2337db201_part)}));
			}
			_iter_next_4874547152:;
			++it;
			goto _iter_begin_4874547152;
		}
		_iter_end_4874547152:;
	}
	return _83317_lit;
}



jule::Any _2337db201_ExprBuilder::_method_build_brace_range(jule::Slice<_2336ea198_Token>& _85041_tokens) {
	jule::Slice<_2336ea198_Token> _85114_expr_tokens;
	jule::Int _85127_range_n;
	std::tie(_85114_expr_tokens,_85127_range_n) = _2337db201_get_range_expr_tokens(_85041_tokens);
	{
		if (!((_85114_expr_tokens.len() == 0LL))) { goto _case_end_4874553504; }
		_case_begin_4874553504:;
		{
			return jule::Any((*this)._method_build_brace_lit(_85041_tokens));
		}
		goto _match_end_4874553376;
		_case_end_4874553504:;
		if (!((_85127_range_n > 0LL))) { goto _case_end_4874553600; }
		_case_begin_4874553600:;
		{
			(*this)._method_push_err(_85041_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4874553376;
		_case_end_4874553600:;
		_match_end_4874553376:;
	}
	{
		auto _match_expr{ _85114_expr_tokens[0LL]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_4874561568; }
		_case_begin_4874561568:;
		{
			return (*this)._method_build_unsafe(_85041_tokens);
		}
		goto _match_end_4874557936;
		_case_end_4874561568:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4874558560; }
		_case_begin_4874558560:;
		{
			return jule::Any((*this)._method_build_anon_fn(_85041_tokens));
		}
		goto _match_end_4874557936;
		_case_end_4874558560:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_4874558656; }
		_case_begin_4874558656:;
		{
			return jule::Any((*this)._method_build_typed_struct_literal(_85041_tokens));
		}
		goto _match_end_4874557936;
		_case_end_4874558656:;
		_case_begin_4874557648:;
		{
			(*this)._method_push_err(_85114_expr_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4874557936;
		_case_end_4874557648:;
		_match_end_4874557936:;
	}
}



jule::Slice<jule::Slice<_2336ea198_Token>> _2337db201_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_2336ea198_Token> _88043_tokens) {
	_88043_tokens=_88043_tokens.slice(1LL,_88043_tokens.len() - 1LL);
	jule::Slice<jule::Slice<_2336ea198_Token>> _88218_parts;
	jule::Slice<_231e4202e_Log> _88225_errors;
	std::tie(_88218_parts,_88225_errors) = _23441cd43_parts(_88043_tokens,8LLU,true);
	(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_88225_errors);
	return _88218_parts;
}



jule::Ptr<_233464770_SliceExpr> _2337db201_ExprBuilder::_method_build_slice(jule::Slice<_2336ea198_Token> _88734_tokens) {
	jule::Ptr<_233464770_SliceExpr> _88817_slc = jule::new_struct<_233464770_SliceExpr>(new( std::nothrow ) _233464770_SliceExpr(_88734_tokens[0LL],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_2336ea198_Token>> _89217_parts = (*this)._method_get_enumerable_parts(_88734_tokens);
	if (_89217_parts.len() == 0LL) {
		return _88817_slc;
	}
	_88817_slc->_field_elems=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_89217_parts.len()));
	{
		auto expr = _89217_parts;
		auto it = expr.begin();
		_iter_begin_4874575360:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _2337db201_p = *it;
			{
				_88817_slc->_field_elems=jule::append(_88817_slc->_field_elems,jule::Slice<jule::Any>({(*this)._method_build_from_tokens(_2337db201_p)->_field_kind}));
			}
			_iter_next_4874575360:;
			++it;
			goto _iter_begin_4874575360;
		}
		_iter_end_4874575360:;
	}
	return _88817_slc;
}



jule::Ptr<_233464770_IndexingExpr> _2337db201_ExprBuilder::_method_build_indexing(jule::Slice<_2336ea198_Token> _90537_expr_tokens,jule::Slice<_2336ea198_Token> _90613_tokens,_2336ea198_Token _90634_error_token) {
	_90613_tokens=_90613_tokens.slice(1LL,_90613_tokens.len() - 1LL);
	return jule::new_struct<_233464770_IndexingExpr>(new( std::nothrow ) _233464770_IndexingExpr(_90634_error_token,(*this)._method_build_from_tokens(_90537_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_90613_tokens)->_field_kind));
}



jule::Ptr<_233464770_SlicingExpr> _2337db201_ExprBuilder::_method_build_slicing(jule::Slice<_2336ea198_Token>& _91537_expr_tokens,jule::Slice<_2336ea198_Token>& _91564_slicing_tokens,jule::Int& _91610_colon,_2336ea198_Token& _91627_error_token) {
	jule::Ptr<_233464770_SlicingExpr> _91717_slc = jule::new_struct<_233464770_SlicingExpr>(new( std::nothrow ) _233464770_SlicingExpr(_91627_error_token,(*this)._method_build_from_tokens(_91537_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_2336ea198_Token> _92217_start_expr_tokens = _91564_slicing_tokens.slice(0LL,_91610_colon);
	if (_92217_start_expr_tokens.len() > 0LL) {
		_91717_slc->_field_start=(*this)._method_build_from_tokens(_92217_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_2336ea198_Token> _92717_to_expr_tokens = _91564_slicing_tokens.slice(_91610_colon + 1LL);
	if (_92717_to_expr_tokens.len() > 0LL) {
		_91717_slc->_field_to=(*this)._method_build_from_tokens(_92717_to_expr_tokens)->_field_kind;
	}
	return _91717_slc;
}



jule::Any _2337db201_ExprBuilder::_method_build_bracket_range(jule::Slice<_2336ea198_Token> _93542_tokens) {
	_2336ea198_Token _93617_error_token = _93542_tokens[0LL];
	jule::Slice<_2336ea198_Token> _93718_expr_tokens;
	jule::Int _93731_range_n;
	std::tie(_93718_expr_tokens,_93731_range_n) = _2337db201_get_range_expr_tokens(_93542_tokens);
	{
		if (!((_93718_expr_tokens.len() == 0LL))) { goto _case_end_4874602976; }
		_case_begin_4874602976:;
		{
			return jule::Any((*this)._method_build_slice(_93542_tokens));
		}
		goto _match_end_4874602816;
		_case_end_4874602976:;
		if (!(((_93718_expr_tokens.len() == 0LL) || (_93731_range_n > 0LL)))) { goto _case_end_4874603088; }
		_case_begin_4874603088:;
		{
			(*this)._method_push_err(_93617_error_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4874602816;
		_case_end_4874603088:;
		_match_end_4874602816:;
	}
	_93542_tokens=_93542_tokens.slice(_93718_expr_tokens.len());
	jule::Int _95617_i = 0LL;
	jule::Slice<_2336ea198_Token> _95718_slicing_tokens;
	jule::Int _95734_colon;
	std::tie(_95718_slicing_tokens,_95734_colon) = _23473c948_split_map_range(_93542_tokens,_95617_i);
	if (_95734_colon != -1LL) {
		return jule::Any((*this)._method_build_slicing(_93718_expr_tokens,_95718_slicing_tokens,_95734_colon,_93617_error_token));
	}
	return jule::Any((*this)._method_build_indexing(_93718_expr_tokens,_93542_tokens,_93617_error_token));
}



jule::Any _2337db201_ExprBuilder::_method_build_ternary(jule::Slice<_2336ea198_Token> _96436_tokens) {
	jule::Ptr<_233464770_TernaryExpr> _96517_ter = jule::new_struct<_233464770_TernaryExpr>(new( std::nothrow ) _233464770_TernaryExpr());
	_96517_ter->_field_token=_96436_tokens[0LL];
	_96436_tokens=_96436_tokens.slice(1LL);
	jule::Slice<_2336ea198_Token> _96917_expr_tokens = _2337db201_get_block_expr(_96436_tokens);
	if (_96917_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_96517_ter->_field_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	_96517_ter->_field_condition=(*this)._method_build_kind(_96917_expr_tokens);
	jule::I64 _97617_i = _96917_expr_tokens.len();
	jule::Slice<_2336ea198_Token> _97717_true_expr = _23441cd43_range(_97617_i,jule::Str("{", 1),jule::Str("}", 1),_96436_tokens);
	if (_97717_true_expr == nullptr) {
		(*this)._method_push_err(_96517_ter->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	} else if (_97717_true_expr.len() == 0LL) {
		(*this)._method_push_err(_96436_tokens[_96917_expr_tokens.len()],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_97617_i >= _96436_tokens.len()) {
		(*this)._method_push_err(_96517_ter->_field_token,jule::Str("else block missed for ternary operator", 38),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	}
	_2336ea198_Token _99113_else_token = _96436_tokens[_97617_i];
	if (_99113_else_token._field_id != 17LLU) {
		(*this)._method_push_err(_99113_else_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("else keyword expected for else block of ternary operator", 56),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	}
	(_97617_i)++;
	jule::I64 _99913_j = _97617_i;
	jule::Slice<_2336ea198_Token> _100017_false_expr = _23441cd43_range(_97617_i,jule::Str("{", 1),jule::Str("}", 1),_96436_tokens);
	if (_100017_false_expr == nullptr) {
		(*this)._method_push_err(_99113_else_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return jule::Any(_96517_ter);
	} else if (_100017_false_expr.len() == 0LL) {
		(*this)._method_push_err(_96436_tokens[_99913_j],jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
	}
	if (_97617_i < _96436_tokens.len()) {
		(*this)._method_push_err(_96436_tokens[_97617_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_96517_ter->_field_true_expr=(*this)._method_build_kind(_97717_true_expr);
	_96517_ter->_field_false_expr=(*this)._method_build_kind(_100017_false_expr);
	return jule::Any(_96517_ter);
}



jule::Any _2337db201_ExprBuilder::_method_build_data(jule::Slice<_2336ea198_Token>& _101934_tokens) {
	{
		auto _match_expr{ _101934_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4874647872; }
		_case_begin_4874647872:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4874647424;
		_case_end_4874647872:;
		if (!((1LL) == _match_expr)) { goto _case_end_4874647968; }
		_case_begin_4874647968:;
		{
			return (*this)._method_build_single(_101934_tokens[0LL]);
		}
		goto _match_end_4874647424;
		_case_end_4874647968:;
		if (!((3LL) == _match_expr)) { goto _case_end_4874648064; }
		_case_begin_4874648064:;
		{
			if (_101934_tokens[0LL]._field_id == 31LLU) {
				return jule::Any((*this)._method_build_cpp_linked_ident(_101934_tokens));
			}
		}
		goto _match_end_4874647424;
		_case_end_4874648064:;
		_match_end_4874647424:;
	}
	_2336ea198_Token _103317_token = _101934_tokens[0LL];
	{
		auto _match_expr{ _103317_token._field_id };
		if (!((16LLU) == _match_expr)) { goto _case_end_4874654480; }
		_case_begin_4874654480:;
		{
			return (*this)._method_build_ternary(_101934_tokens);
		}
		goto _match_end_4874654272;
		_case_end_4874654480:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4874654576; }
		_case_begin_4874654576:;
		{
			if ((_101934_tokens.len() > 1LL) && (_103317_token._field_kind == jule::Str("*", 1))) {
				_103317_token=_101934_tokens[1LL];
				if ((_103317_token._field_id == 1LLU) || (_103317_token._field_id == 35LLU)) {
					return jule::Any((*this)._method_build_type(_101934_tokens));
				}
			}
			return jule::Any((*this)._method_build_unary(_101934_tokens));
		}
		goto _match_end_4874654272;
		_case_end_4874654576:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4874654672; }
		_case_begin_4874654672:;
		{
			if (_101934_tokens.len() < 3LL) {
				goto _match_end_4874654272;
			}
			if (_101934_tokens.len() > 3LL) {
				_2336ea198_Token _105621_t = _101934_tokens[_101934_tokens.len() - 1LL];
				if ((_105621_t._field_id == 3LLU) && (_105621_t._field_kind == jule::Str(")", 1))) {
					goto _match_end_4874654272;
				}
			}
			_2336ea198_Token _106217_next = _101934_tokens[1LL];
			if ((_106217_next._field_id != 3LLU) || (_106217_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_4874654272;
			}
			return jule::Any((*this)._method_build_type(_101934_tokens));
		}
		goto _match_end_4874654272;
		_case_end_4874654672:;
		_match_end_4874654272:;
	}
	_103317_token=_101934_tokens[_101934_tokens.len() - 1LL];
	{
		auto _match_expr{ _103317_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_4874655600; }
		_case_begin_4874655600:;
		{
			return (*this)._method_build_sub_ident(_101934_tokens);
		}
		goto _match_end_4874655520;
		_case_end_4874655600:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4874669856; }
		_case_begin_4874669856:;
		{
			return jule::Any((*this)._method_build_type(_101934_tokens));
		}
		goto _match_end_4874655520;
		_case_end_4874669856:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4874669952; }
		_case_begin_4874669952:;
		{
			return (*this)._method_build_op_right(_101934_tokens);
		}
		goto _match_end_4874655520;
		_case_end_4874669952:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4874670048; }
		_case_begin_4874670048:;
		{
			{
				auto _match_expr{ _103317_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4874674112; }
				_case_begin_4874674112:;
				{
					return (*this)._method_build_parentheses_range(_101934_tokens);
				}
				goto _match_end_4874673984;
				_case_end_4874674112:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4874674208; }
				_case_begin_4874674208:;
				{
					return (*this)._method_build_brace_range(_101934_tokens);
				}
				goto _match_end_4874673984;
				_case_end_4874674208:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4874674384; }
				_case_begin_4874674384:;
				{
					return (*this)._method_build_bracket_range(_101934_tokens);
				}
				goto _match_end_4874673984;
				_case_end_4874674384:;
				_match_end_4874673984:;
			}
		}
		goto _match_end_4874655520;
		_case_end_4874670048:;
		_match_end_4874655520:;
	}
	(*this)._method_push_err(_103317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return jule::Any(nullptr);
}



jule::Ptr<_233464770_BinopExpr> _2337db201_ExprBuilder::_method_build_binop(jule::Slice<_2336ea198_Token>& _109935_tokens,jule::Int _109952_i) {
	jule::Slice<_2336ea198_Token> _110017_left_tokens = _109935_tokens.slice(0LL,_109952_i);
	jule::Slice<_2336ea198_Token> _110117_right_tokens = _109935_tokens.slice(_109952_i + 1LL);
	if (_110017_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_109935_tokens[_109952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("left operand expected for binary operator", 41),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_110117_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_109935_tokens[_109952_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("right operand expected for binary operator", 42),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return jule::new_struct<_233464770_BinopExpr>(new( std::nothrow ) _233464770_BinopExpr((*this)._method_build(_110017_left_tokens),(*this)._method_build(_110117_right_tokens),_109935_tokens[_109952_i]));
}



jule::Any _2337db201_ExprBuilder::_method_build(jule::Slice<_2336ea198_Token>& _112229_tokens) {
	jule::Int _112313_i = _2337db201_find_lowest_prec_op(_112229_tokens);
	if (_112313_i == -1LL) {
		return (*this)._method_build_data(_112229_tokens);
	}
	return jule::Any((*this)._method_build_binop(_112229_tokens,_112313_i));
}



jule::Any _2337db201_ExprBuilder::_method_build_kind(jule::Slice<_2336ea198_Token>& _113034_tokens) {
	jule::Slice<jule::Slice<_2336ea198_Token>> _113118_parts;
	jule::Slice<_231e4202e_Log> _113125_errors;
	std::tie(_113118_parts,_113125_errors) = _23441cd43_parts(_113034_tokens,8LLU,true);
	if (_113125_errors != nullptr) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_113125_errors);
		return jule::Any(nullptr);
	} else if (_113118_parts.len() > 1LL) {
		return jule::Any((*this)._method_build_tuple(_113118_parts));
	}
	return (*this)._method_build(_113034_tokens);
}



jule::Ptr<_233464770_Expr> _2337db201_ExprBuilder::_method_build_from_tokens(jule::Slice<_2336ea198_Token> _114140_tokens) {
	_114140_tokens=_2337db201_eliminate_comments(_114140_tokens);
	if (_114140_tokens.len() == 0LL) {
		return nullptr;
	}
	return jule::new_struct<_233464770_Expr>(new( std::nothrow ) _233464770_Expr(_114140_tokens[0LL],(*this)._method_build_kind(_114140_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _2337db201_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



void _23441cd43_Parser::_method_stop(void) {
	(*this)._field_ast=nullptr;
}



jule::Bool _23441cd43_Parser::_method_stopped(void) {
	return (*this)._field_ast == nullptr;
}



void _23441cd43_Parser::_method_push_err(_2336ea198_Token _24027_token,jule::Str _24041_fmt,jule::Slice<jule::Any> _24054_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_231e4202e_Log>({_23441cd43_compiler_err(_24027_token,_24041_fmt,_24054_args)}));
}



void _23441cd43_Parser::_method_push_suggestion(jule::Str _24534_fmt,jule::Slice<jule::Any> _24547_args) {
	{
		_23441cd43_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_24534_fmt,_24547_args);
	}
}



jule::Ptr<_233464770_Expr> _23441cd43_Parser::_method_build_expr(jule::Slice<_2336ea198_Token>& _24935_tokens) {
	jule::Ptr<_2337db201_ExprBuilder> _25017_ep = jule::new_struct<_2337db201_ExprBuilder>(new( std::nothrow ) _2337db201_ExprBuilder(this->self));
	jule::Ptr<_233464770_Expr> _25117_expr = _25017_ep->_method_build_from_tokens(_24935_tokens);
	return _25117_expr;
}



jule::Ptr<_233464770_Directive> _23441cd43_Parser::_method_get_directive(jule::Ptr<_233464770_Comment> _25532_c) {
	if (_25532_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return nullptr;
	}
	jule::Ptr<_233464770_Directive> _26017_d = jule::new_struct<_233464770_Directive>(new( std::nothrow ) _233464770_Directive(_25532_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _26413_pragma = _25532_c->_field_token._field_kind.slice(jule::Str("jule:", 5).len());
	jule::Slice<jule::Str> _26517_parts = _26413_pragma.split(jule::Str(" ", 1),-1LL);
	_26017_d->_field_tag=_26517_parts[0LL];
	_26017_d->_field_args=_26517_parts.slice(1LL);
	jule::Bool _27117_ok = false;
	{
		auto expr = _231e59e26_DIRECTIVES;
		auto it = expr.begin();
		_iter_begin_4874733376:;
		if (it != expr.end()) {
			jule::Str _23441cd43_kind = *it;
			{
				if (_26017_d->_field_tag == _23441cd43_kind) {
					_27117_ok=true;
					goto _iter_end_4874733376;
				}
			}
			_iter_next_4874733376:;
			++it;
			goto _iter_begin_4874733376;
		}
		_iter_end_4874733376:;
	}
	if ((!(_27117_ok))) {
		return nullptr;
	}
	return _26017_d;
}



void _23441cd43_Parser::_method_push_directive(jule::Ptr<_233464770_Comment>& _28538_c) {
	jule::Ptr<_233464770_Directive> _28617_d = (*this)._method_get_directive(_28538_c);
	if (_28617_d == nullptr) {
		return;
	}
	{
		auto expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4874738256:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Directive> _23441cd43_pd = *it;
			{
				if (_28617_d->_field_tag == _23441cd43_pd->_field_tag) {
					return;
				}
			}
			_iter_next_4874738256:;
			++it;
			goto _iter_begin_4874738256;
		}
		_iter_end_4874738256:;
	}
	(*this)._field_directives=jule::append((*this)._field_directives,jule::Slice<jule::Ptr<_233464770_Directive>>({_28617_d}));
}



void _23441cd43_Parser::_method_process_comment(jule::Ptr<_233464770_Comment>& _30139_c) {
	if (_30139_c->_method_is_directive()) {
		(*this)._method_push_directive(_30139_c);
		return;
	}
	if ((*this)._field_comment_group == nullptr) {
		(*this)._field_comment_group=jule::new_struct<_233464770_CommentGroup>(new( std::nothrow ) _233464770_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=jule::append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ptr<_233464770_Comment>>({_30139_c}));
}



jule::Ptr<_233464770_ScopeTree> _23441cd43_Parser::_method_build_scope(jule::Slice<_2336ea198_Token>& _31236_tokens) {
	jule::Ptr<_233464770_ScopeTree> _31317_s = _2337c95da_new_scope();
	_2337c95da_ScopeParser _31417_sp = _2337c95da_ScopeParser(this->self,jule::Ptr<_233464770_ScopeTree>(),jule::Slice<jule::Ptr<_2337c95da_Stmt>>(),jule::Int());
	_31417_sp._method_build(_31236_tokens,_31317_s);
	return _31317_s;
}



std::tuple<jule::Ptr<_233464770_TypeDecl>,jule::Bool> _23441cd43_Parser::_method___build_type(jule::Slice<_2336ea198_Token>& _32144_tokens,jule::Int* _32213_i,jule::Bool _32222_err) {
	_23473c948_TypeBuilder _32317_tb = _23473c948_TypeBuilder(this->self,_32144_tokens,_32213_i,_32222_err);
	jule::Ptr<_233464770_TypeDecl> _32918_decl;
	jule::Bool _32924_ok;
	std::tie(_32918_decl,_32924_ok) = _32317_tb._method_build();
	return std::make_tuple(_32918_decl,_32924_ok);
}



std::tuple<jule::Ptr<_233464770_TypeDecl>,jule::Bool> _23441cd43_Parser::_method_build_type(jule::Slice<_2336ea198_Token>& _33442_tokens,jule::Int* _33513_i,jule::Bool _33522_err) {
	_2336ea198_Token _33613_token = _33442_tokens[(*(_33513_i))];
	jule::Ptr<_233464770_TypeDecl> _33718_t;
	jule::Bool _33721_ok;
	std::tie(_33718_t,_33721_ok) = this->self->_method___build_type(_33442_tokens,_33513_i,_33522_err);
	if (_33522_err && (!(_33721_ok))) {
		this->self->_method_push_err(_33613_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_33718_t,_33721_ok);
}



jule::Ptr<_233464770_TypeAliasDecl> _23441cd43_Parser::_method_build_type_alias_decl(jule::Slice<_2336ea198_Token>& _34446_tokens) {
	jule::Int _34517_i = 1LL;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_233464770_TypeAliasDecl> _35017_tad = jule::new_struct<_233464770_TypeAliasDecl>(new( std::nothrow ) _233464770_TypeAliasDecl(jule::Ptr<_233464770_ScopeTree>(),jule::Bool(),jule::Bool(),_34446_tokens[1LL],_34446_tokens[1LL]._field_kind,jule::Ptr<_233464770_TypeDecl>(),jule::Ptr<_233464770_CommentGroup>()));
	_2336ea198_Token _35417_token = _34446_tokens[_34517_i];
	if (_35417_token._field_id != 2LLU) {
		this->self->_method_push_err(_35417_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	_35417_token=_34446_tokens[_34517_i];
	if (_35417_token._field_id != 11LLU) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected colon \":\"", 18),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	(_34517_i)++;
	if (_34517_i >= _34446_tokens.len()) {
		this->self->_method_push_err(_34446_tokens[_34517_i - 1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return _35017_tad;
	}
	jule::Ptr<_233464770_TypeDecl> _37518_t;
	jule::Bool _37521_ok;
	std::tie(_37518_t,_37521_ok) = this->self->_method_build_type(_34446_tokens,(&(_34517_i)),true);
	_35017_tad->_field_kind=_37518_t;
	if (_37521_ok && (_34517_i < _34446_tokens.len())) {
		this->self->_method_push_err(_34446_tokens[_34517_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _35017_tad;
}



void _23441cd43_Parser::_method_build_var_type_and_expr(jule::Ptr<_233464770_VarDecl>& _38348_v,jule::Slice<_2336ea198_Token>& _38366_tokens) {
	jule::Int _38417_i = 0LL;
	_2336ea198_Token _38517_tok = _38366_tokens[_38417_i];
	if (_38517_tok._field_id == 11LLU) {
		(_38417_i)++;
		if ((_38417_i >= _38366_tokens.len()) || ((_38366_tokens[_38417_i]._field_id == 7LLU) && (_38366_tokens[_38417_i]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_38517_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ptr<_233464770_TypeDecl> _39322_t;
		jule::Bool _39325_ok;
		std::tie(_39322_t,_39325_ok) = this->self->_method_build_type(_38366_tokens,(&(_38417_i)),true);
		if (_39325_ok) {
			_38348_v->_field_kind=_39322_t;
			if (_38417_i >= _38366_tokens.len()) {
				return;
			}
			_38517_tok=_38366_tokens[_38417_i];
		}
	}
	if (_38517_tok._field_id == 7LLU) {
		if (_38517_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_2336ea198_Token> _40821_expr_tokens = _38366_tokens.slice(_38417_i + 1LL);
		if (_40821_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_38517_tok,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
			return;
		}
		_38348_v->_field_expr=this->self->_method_build_expr(_40821_expr_tokens);
	} else {
		this->self->_method_push_err(_38517_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



void _23441cd43_Parser::_method_build_var_common(jule::Ptr<_233464770_VarDecl>& _41941_v,jule::Slice<_2336ea198_Token> _41958_tokens) {
	_41941_v->_field_token=_41958_tokens[0LL];
	if (_41941_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_41941_v->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	_41941_v->_field_ident=_41941_v->_field_token._field_kind;
	_41941_v->_field_kind=nullptr;
	if (_41958_tokens.len() > 1LL) {
		_41958_tokens=_41958_tokens.slice(1LL);
		this->self->_method_build_var_type_and_expr(_41941_v,_41958_tokens);
	}
}



void _23441cd43_Parser::_method_build_var_begin(jule::Ptr<_233464770_VarDecl>& _43439_v,jule::Ptr<jule::Int> _43456_i,jule::Slice<_2336ea198_Token>& _43466_tokens) {
	_2336ea198_Token _43513_tok = _43466_tokens[(*(_43456_i))];
	{
		auto _match_expr{ _43513_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_4874859792; }
		_case_begin_4874859792:;
		{
			_43439_v->_field_statically=true;
			goto _case_begin_4874859888;
		}
		goto _match_end_4874857744;
		_case_end_4874859792:;
		if (!((34LLU) == _match_expr)) { goto _case_end_4874859888; }
		_case_begin_4874859888:;
		{
			((*(_43456_i)))++;
			if ((*(_43456_i)) >= _43466_tokens.len()) {
				(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			if (_43466_tokens[(*(_43456_i))]._field_id == 36LLU) {
				_43439_v->_field_mutable=true;
				((*(_43456_i)))++;
			}
		}
		goto _match_end_4874857744;
		_case_end_4874859888:;
		if (!((9LLU) == _match_expr)) { goto _case_end_4874858016; }
		_case_begin_4874858016:;
		{
			((*(_43456_i)))++;
			_43439_v->_field_constant=true;
		}
		goto _match_end_4874857744;
		_case_end_4874858016:;
		_case_begin_4874856352:;
		{
			(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4874857744;
		_case_end_4874856352:;
		_match_end_4874857744:;
	}
	if ((*(_43456_i)) >= _43466_tokens.len()) {
		(*this)._method_push_err(_43513_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



jule::Ptr<_233464770_VarDecl> _23441cd43_Parser::_method_build_var(jule::Slice<_2336ea198_Token> _46833_tokens) {
	jule::Ptr<jule::Int> _46917_i = jule::new_ptr<jule::Int>(0LL);
	jule::Ptr<_233464770_VarDecl> _47017_v = jule::new_struct<_233464770_VarDecl>(new( std::nothrow ) _233464770_VarDecl(jule::Ptr<_233464770_ScopeTree>(),_46833_tokens[(*(_46917_i))],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_233464770_CommentGroup>(),jule::Ptr<_233464770_TypeDecl>(),jule::Ptr<_233464770_Expr>()));
	this->self->_method_build_var_begin(_47017_v,_46917_i,_46833_tokens);
	if ((*(_46917_i)) >= _46833_tokens.len()) {
		return nullptr;
	}
	_46833_tokens=_46833_tokens.slice((*(_46917_i)));
	if ((_46833_tokens[0LL]._field_id == 7LLU) && (_46833_tokens[0LL]._field_kind == jule::Str("&", 1))) {
		_47017_v->_field_reference=true;
		if (_46833_tokens.len() == 1LL) {
			return nullptr;
		}
		_46833_tokens=_46833_tokens.slice(1LL);
	}
	this->self->_method_build_var_common(_47017_v,_46833_tokens);
	return _47017_v;
}



jule::Ptr<_233464770_GenericDecl> _23441cd43_Parser::_method_build_generic(jule::Slice<_2336ea198_Token>& _49037_tokens) {
	if (_49037_tokens.len() > 1LL) {
		(*this)._method_push_err(_49037_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_233464770_GenericDecl> _49417_g = jule::new_struct<_233464770_GenericDecl>(new( std::nothrow ) _233464770_GenericDecl(_49037_tokens[0LL],jule::Str()));
	if (_49417_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_49417_g->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_49417_g->_field_ident=_49417_g->_field_token._field_kind;
	return _49417_g;
}



jule::Slice<jule::Ptr<_233464770_GenericDecl>> _23441cd43_Parser::_method_build_generics(jule::Slice<_2336ea198_Token>& _50538_tokens,_2336ea198_Token& _50556_error_token) {
	if (_50538_tokens.len() == 0LL) {
		(*this)._method_push_err(_50556_error_token,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_2336ea198_Token>> _51118_parts;
	jule::Slice<_231e4202e_Log> _51125_errors;
	std::tie(_51118_parts,_51125_errors) = _23441cd43_parts(_50538_tokens,8LLU,true);
	if (_51125_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_51125_errors);
		return nullptr;
	}
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _51717_generics = jule::Slice<jule::Ptr<_233464770_GenericDecl>>::alloc(0LL,static_cast<jule::I64>(_51118_parts.len()));
	{
		auto expr = _51118_parts;
		auto it = expr.begin();
		_iter_begin_4874896928:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _23441cd43_part = *it;
			{
				_51717_generics=jule::append(_51717_generics,jule::Slice<jule::Ptr<_233464770_GenericDecl>>({(*this)._method_build_generic(_23441cd43_part)}));
			}
			_iter_next_4874896928:;
			++it;
			goto _iter_begin_4874896928;
		}
		_iter_end_4874896928:;
	}
	return _51717_generics;
}



jule::Ptr<_233464770_ParamDecl> _23441cd43_Parser::_method_build_self_param(jule::Slice<_2336ea198_Token> _52539_tokens) {
	if (_52539_tokens.len() == 0LL) {
		return nullptr;
	}
	jule::Ptr<_233464770_ParamDecl> _53017_param = jule::new_struct<_233464770_ParamDecl>(new( std::nothrow ) _233464770_ParamDecl());
	jule::Int _53317_i = 0LL;
	if (_52539_tokens[_53317_i]._field_id == 36LLU) {
		_53017_param->_field_mutable=true;
		(_53317_i)++;
		if (_53317_i >= _52539_tokens.len()) {
			(*this)._method_push_err(_52539_tokens[_53317_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
	}
	if (_52539_tokens[_53317_i]._field_kind == jule::Str("&", 1)) {
		_53017_param->_field_ident=jule::Str("&", 1);
		(_53317_i)++;
		if (_53317_i >= _52539_tokens.len()) {
			(*this)._method_push_err(_52539_tokens[_53317_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
	}
	if (_52539_tokens[_53317_i]._field_id == 28LLU) {
		_53017_param->_field_ident+=jule::Str("self", 4);
		_53017_param->_field_token=_52539_tokens[_53317_i];
		(_53317_i)++;
		if (_53317_i < _52539_tokens.len()) {
			(*this)._method_push_err(_52539_tokens[_53317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _53017_param;
}



void _23441cd43_Parser::_method_param_type_begin(jule::Ptr<_233464770_ParamDecl>& _56440_param,jule::Int& _56464_i,jule::Slice<_2336ea198_Token>& _56473_tokens) {
	for (; _56464_i < _56473_tokens.len(); (_56464_i)++) {
		{
			_2336ea198_Token _56617_token = _56473_tokens[_56464_i];
			if (_56617_token._field_id != 7LLU) {
				return;
			} else if (_56617_token._field_kind != jule::Str("...", 3)) {
				return;
			}
			if (_56440_param->_field_variadic) {
				(*this)._method_push_err(_56617_token,jule::Str("define is already variadic", 26),jule::Slice<jule::Any>({}));
				goto _iter_next_4874922336;
			}
			_56440_param->_field_variadic=true;
		}
	_iter_next_4874922336:;
	}
	_iter_end_4874922336:;
}



void _23441cd43_Parser::_method_build_param_type(jule::Ptr<_233464770_ParamDecl>& _58141_param,jule::Slice<_2336ea198_Token>& _58165_tokens) {
	jule::Int _58217_i = 0LL;
	this->self->_method_param_type_begin(_58141_param,_58217_i,_58165_tokens);
	if (_58217_i >= _58165_tokens.len()) {
		return;
	}
	std::tie(_58141_param->_field_kind,std::ignore) = this->self->_method_build_type(_58165_tokens,(&(_58217_i)),true);
	if (_58217_i < _58165_tokens.len()) {
		this->self->_method_push_err(_58165_tokens[_58217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
}



void _23441cd43_Parser::_method_param_body_id(jule::Ptr<_233464770_ParamDecl> _59432_param,_2336ea198_Token _59451_token) {
	if (_2336ea198_is_ignore_ident(_59451_token._field_kind)) {
		_59432_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_59432_param->_field_ident=_59451_token._field_kind;
}



void _23441cd43_Parser::_method_build_param_body(jule::Ptr<_233464770_ParamDecl>& _60241_param,jule::Ptr<jule::Int> _60264_i,jule::Slice<_2336ea198_Token> _60277_tokens) {
	this->self->_method_param_body_id(_60241_param,_60277_tokens[(*(_60264_i))]);
	_2336ea198_Token _60417_tok = _60277_tokens[(*(_60264_i))];
	if (((*(_60264_i)) + 1LL) >= _60277_tokens.len()) {
		return;
	} else if (((_60277_tokens.len() - (*(_60264_i))) - 1LL) < 2LL) {
		this->self->_method_push_err(_60417_tok,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return;
	}
	_60417_tok=_60277_tokens[(*(_60264_i)) + 1LL];
	if (_60417_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_60241_param,_60277_tokens);
		return;
	}
	_60277_tokens=_60277_tokens.slice((*(_60264_i)) + 2LL);
	this->self->_method_build_param_type(_60241_param,_60277_tokens);
}



jule::Ptr<_233464770_ParamDecl> _23441cd43_Parser::_method_build_param(jule::Slice<_2336ea198_Token> _62335_tokens) {
	jule::Ptr<_233464770_ParamDecl> _62417_param = jule::new_struct<_233464770_ParamDecl>(new( std::nothrow ) _233464770_ParamDecl(_62335_tokens[0LL],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_233464770_TypeDecl>(),jule::Str()));
	if (_62417_param->_field_token._field_id == 36LLU) {
		_62417_param->_field_mutable=true;
		if (_62335_tokens.len() == 1LL) {
			this->self->_method_push_err(_62335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_62335_tokens=_62335_tokens.slice(1LL);
		_62417_param->_field_token=_62335_tokens[0LL];
	}
	if (_62335_tokens.len() >= 3LL) {
		if ((_62417_param->_field_token._field_id == 7LLU) && (_62417_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_62335_tokens.len() == 1LL) {
				this->self->_method_push_err(_62335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return nullptr;
			}
			if ((_62335_tokens[1LL]._field_id == 2LLU) && (_62335_tokens[2LL]._field_id == 11LLU)) {
				_62417_param->_field_reference=true;
				_62335_tokens=_62335_tokens.slice(1LL);
				_62417_param->_field_token=_62335_tokens[0LL];
			}
		}
	}
	if (_62417_param->_field_token._field_id != 2LLU) {
		_62417_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_62417_param,_62335_tokens);
	} else {
		jule::Ptr<jule::Int> _66021_i = jule::new_ptr<jule::Int>(0LL);
		this->self->_method_build_param_body(_62417_param,_66021_i,_62335_tokens);
	}
	return _62417_param;
}



void _23441cd43_Parser::_method_check_params(jule::Slice<jule::Ptr<_233464770_ParamDecl>>& _66736_params) {
	{
		auto expr = _66736_params;
		auto it = expr.begin();
		_iter_begin_4874978400:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_ParamDecl> _23441cd43_param = *it;
			{
				if (_23441cd43_param->_method_is_self() || (_23441cd43_param->_field_kind != nullptr)) {
					goto _iter_next_4874978400;
				}
				if (_23441cd43_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_23441cd43_param->_field_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				} else {
					_23441cd43_param->_field_kind=jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_23441cd43_param->_field_token,jule::Any(jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_23441cd43_param->_field_token,_23441cd43_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ptr<_233464770_TypeDecl>>())))));
					_23441cd43_param->_field_ident=jule::Str("<anonymous>", 11);
					_23441cd43_param->_field_token=_2336ea198_Token();
				}
			}
			_iter_next_4874978400:;
			++it;
			goto _iter_begin_4874978400;
		}
		_iter_end_4874978400:;
	}
}



jule::Slice<jule::Ptr<_233464770_ParamDecl>> _23441cd43_Parser::_method_build_params(jule::Slice<_2336ea198_Token>& _68837_tokens,jule::Bool _68854_method) {
	jule::Slice<jule::Slice<_2336ea198_Token>> _68918_parts;
	jule::Slice<_231e4202e_Log> _68925_errs;
	std::tie(_68918_parts,_68925_errs) = _23441cd43_parts(_68837_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_68925_errs);
	if (_68918_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_233464770_ParamDecl>> _69517_params = nullptr;
	if (_68854_method && (_68918_parts.len() > 0LL)) {
		jule::Ptr<_233464770_ParamDecl> _69721_param = this->self->_method_build_self_param(_68918_parts[0LL]);
		if ((_69721_param != nullptr) && _69721_param->_method_is_self()) {
			_69517_params=jule::append(_69517_params,jule::Slice<jule::Ptr<_233464770_ParamDecl>>({_69721_param}));
			_68918_parts=_68918_parts.slice(1LL);
		}
	}
	{
		auto expr = _68918_parts;
		auto it = expr.begin();
		_iter_begin_4874997296:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _23441cd43_part = *it;
			{
				jule::Ptr<_233464770_ParamDecl> _70521_param = this->self->_method_build_param(_23441cd43_part);
				if (_70521_param != nullptr) {
					_69517_params=jule::append(_69517_params,jule::Slice<jule::Ptr<_233464770_ParamDecl>>({_70521_param}));
				}
			}
			_iter_next_4874997296:;
			++it;
			goto _iter_begin_4874997296;
		}
		_iter_end_4874997296:;
	}
	this->self->_method_check_params(_69517_params);
	return _69517_params;
}



std::tuple<jule::Ptr<_233464770_RetTypeDecl>,jule::Bool> _23441cd43_Parser::_method_build_multi_ret_type(jule::Slice<_2336ea198_Token>& _71545_tokens,jule::Int& _71567_i) {
	jule::Ptr<_233464770_RetTypeDecl> _71577_t = jule::Ptr<_233464770_RetTypeDecl>();
	jule::Bool _71594_ok = jule::Bool();
	_71577_t=jule::new_struct<_233464770_RetTypeDecl>(new( std::nothrow ) _233464770_RetTypeDecl());
	(_71567_i)++;
	if (_71567_i >= _71545_tokens.len()) {
		(_71567_i)--;
		std::tie(_71577_t->_field_kind,_71594_ok) = this->self->_method_build_type(_71545_tokens,(&(_71567_i)),false);
		return std::make_tuple(_71577_t,_71594_ok);
	}
	(_71567_i)--;
	jule::Slice<_2336ea198_Token> _72517_range_tokens = _23441cd43_range(_71567_i,jule::Str("(", 1),jule::Str(")", 1),_71545_tokens);
	jule::Slice<jule::Slice<_2336ea198_Token>> _72718_parts;
	jule::Slice<_231e4202e_Log> _72725_errs;
	std::tie(_72718_parts,_72725_errs) = _23441cd43_parts(_72517_range_tokens,8LLU,true);
	this->self->_field_errors=jule::append(this->self->_field_errors,_72725_errs);
	if (_72718_parts.len() == 0LL) {
		return std::make_tuple(_71577_t,_71594_ok);
	}
	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _73317_types = jule::Slice<jule::Ptr<_233464770_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_72718_parts.len()));
	_71577_t->_field_idents=jule::Slice<_2336ea198_Token>::alloc(0LL,static_cast<jule::I64>(_72718_parts.len()));
	{
		auto expr = _72718_parts;
		auto it = expr.begin();
		_iter_begin_4875014688:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _23441cd43_part = *it;
			{
				_2336ea198_Token _73621_token = _23441cd43_part[0LL];
				jule::Int _73721_offset = 0LL;
				if (_23441cd43_part.len() > 1LL) {
					_73621_token=_23441cd43_part[1LL];
					if (_73621_token._field_id == 11LLU) {
						_73721_offset=2LL;
						if (_23441cd43_part.len() < 3LL) {
							this->self->_method_push_err(_73621_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4875014688;
						}
					}
				}
				_73621_token=_23441cd43_part[0LL];
				if (_73721_offset == 2LL) {
					if (_73621_token._field_id != 2LLU) {
					}
					_71577_t->_field_idents=jule::append(_71577_t->_field_idents,jule::Slice<_2336ea198_Token>({_73621_token}));
				} else {
					_73621_token._field_kind=jule::Str("_", 1);
					_71577_t->_field_idents=jule::append(_71577_t->_field_idents,jule::Slice<_2336ea198_Token>({_73621_token}));
				}
				jule::Ptr<_233464770_TypeDecl> _76222_t;
				std::tie(_76222_t,std::ignore) = this->self->_method_build_type(_23441cd43_part,(&(_73721_offset)),true);
				if (_73721_offset < _23441cd43_part.len()) {
					this->self->_method_push_err(_23441cd43_part[_73721_offset],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_73317_types=jule::append(_73317_types,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({_76222_t}));
			}
			_iter_next_4875014688:;
			++it;
			goto _iter_begin_4875014688;
		}
		_iter_end_4875014688:;
	}
	if (_73317_types.len() > 1LL) {
		_71577_t->_field_kind=jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_71545_tokens[0LL],jule::Any(jule::new_struct<_233464770_TupleTypeDecl>(new( std::nothrow ) _233464770_TupleTypeDecl(_73317_types)))));
	} else {
		_71577_t->_field_kind=_73317_types[0LL];
	}
	_71594_ok=true;
	return std::make_tuple(_71577_t,_71594_ok);
}



std::tuple<jule::Ptr<_233464770_RetTypeDecl>,jule::Bool> _23441cd43_Parser::_method_build_ret_type(jule::Slice<_2336ea198_Token>& _78539_tokens,jule::Int& _78561_i) {
	jule::Ptr<_233464770_RetTypeDecl> _78571_t = jule::Ptr<_233464770_RetTypeDecl>();
	jule::Bool _78588_ok = jule::Bool();
	_78571_t=jule::new_struct<_233464770_RetTypeDecl>(new( std::nothrow ) _233464770_RetTypeDecl());
	if (_78561_i >= _78539_tokens.len()) {
		return std::make_tuple(_78571_t,_78588_ok);
	}
	_2336ea198_Token _79117_token = _78539_tokens[_78561_i];
	{
		auto _match_expr{ _79117_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_4875042400; }
		_case_begin_4875042400:;
		{
			if (_79117_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_78571_t,_78588_ok);
			}
		}
		goto _match_end_4875043952;
		_case_end_4875042400:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4875044032; }
		_case_begin_4875044032:;
		{
			if (_79117_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_78571_t,_78588_ok);
			}
		}
		goto _match_end_4875043952;
		_case_end_4875044032:;
		if (!((11LLU) == _match_expr)) { goto _case_end_4875044144; }
		_case_begin_4875044144:;
		{
			if ((_78561_i + 1LL) >= _78539_tokens.len()) {
				this->self->_method_push_err(_79117_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
				return std::make_tuple(_78571_t,_78588_ok);
			}
			(_78561_i)++;
			_79117_token=_78539_tokens[_78561_i];
			if (_79117_token._field_id == 3LLU) {
				{
					auto _match_expr{ _79117_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4875051600; }
					_case_begin_4875051600:;
					{
						jule::Ptr<_233464770_RetTypeDecl> _81430_decl;
						jule::Bool _81436_ok;
						std::tie(_81430_decl,_81436_ok) = this->self->_method_build_multi_ret_type(_78539_tokens,_78561_i);
						_78571_t = _81430_decl;
						_78588_ok = _81436_ok;
						return std::make_tuple(_78571_t,_78588_ok);
					}
					goto _match_end_4875051520;
					_case_end_4875051600:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4875051696; }
					_case_begin_4875051696:;
					{
						this->self->_method_push_err(_79117_token,jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
						return std::make_tuple(_78571_t,_78588_ok);
					}
					goto _match_end_4875051520;
					_case_end_4875051696:;
					_match_end_4875051520:;
				}
			}
			std::tie(_78571_t->_field_kind,_78588_ok) = this->self->_method_build_type(_78539_tokens,(&(_78561_i)),true);
			return std::make_tuple(_78571_t,_78588_ok);
		}
		goto _match_end_4875043952;
		_case_end_4875044144:;
		_match_end_4875043952:;
	}
	(_78561_i)++;
	this->self->_method_push_err(_79117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_78571_t,_78588_ok);
}



jule::Ptr<_233464770_FnDecl> _23441cd43_Parser::_method_build_fn_prototype(jule::Slice<_2336ea198_Token>& _83343_tokens,jule::Int& _83365_i,jule::Bool _83373_method) {
	jule::Ptr<_233464770_FnDecl> _83417_f = jule::new_struct<_233464770_FnDecl>(new( std::nothrow ) _233464770_FnDecl(_83343_tokens[_83365_i],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_233464770_CommentGroup>(),jule::Ptr<_233464770_ScopeTree>(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),jule::Ptr<_233464770_RetTypeDecl>(),jule::Slice<jule::Ptr<_233464770_ParamDecl>>()));
	if (_83417_f->_field_token._field_id == 38LLU) {
		_83417_f->_field_statically=true;
		(_83365_i)++;
		if (_83365_i >= _83343_tokens.len()) {
			this->self->_method_push_err(_83417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_83417_f->_field_token=_83343_tokens[_83365_i];
	}
	if (_83417_f->_field_token._field_id == 35LLU) {
		_83417_f->_field_unsafety=true;
		(_83365_i)++;
		if (_83365_i >= _83343_tokens.len()) {
			this->self->_method_push_err(_83417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_83417_f->_field_token=_83343_tokens[_83365_i];
	}
	(_83365_i)++;
	if (_83365_i >= _83343_tokens.len()) {
		this->self->_method_push_err(_83417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_2336ea198_Token _86713_tok = _83343_tokens[_83365_i];
	if (_86713_tok._field_id == 2LLU) {
		(_83365_i)++;
		if (_83365_i >= _83343_tokens.len()) {
			this->self->_method_push_err(_83417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_83417_f->_field_ident=_86713_tok._field_kind;
	} else {
		_83417_f->_field_ident=jule::Str("<anonymous>", 11);
	}
	_2336ea198_Token _87913_error_token = _83343_tokens[_83365_i];
	jule::Slice<_2336ea198_Token> _88017_generics_tokens = _23441cd43_range(_83365_i,jule::Str("[", 1),jule::Str("]", 1),_83343_tokens);
	if (_88017_generics_tokens != nullptr) {
		_83417_f->_field_generics=this->self->_method_build_generics(_88017_generics_tokens,_87913_error_token);
	}
	if (_83343_tokens[_83365_i]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_83343_tokens[_83365_i],jule::Str("missing function parentheses", 28),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<_2336ea198_Token> _89017_params_toks = _23441cd43_range(_83365_i,jule::Str("(", 1),jule::Str(")", 1),_83343_tokens);
	if (_89017_params_toks.len() > 0LL) {
		_83417_f->_field_params=this->self->_method_build_params(_89017_params_toks,_83373_method);
	}
	std::tie(_83417_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_83343_tokens,_83365_i);
	return _83417_f;
}



jule::Ptr<_233464770_FnDecl> _23441cd43_Parser::_method_build_fn(jule::Slice<_2336ea198_Token>& _90133_tokens,jule::Bool _90150_method,jule::Bool _90164_prototype) {
	jule::Int _90217_i = 0LL;
	jule::Ptr<_233464770_FnDecl> _90317_f = this->self->_method_build_fn_prototype(_90133_tokens,_90217_i,_90150_method);
	if (_90164_prototype) {
		if (_90217_i < _90133_tokens.len()) {
			this->self->_method_push_err(_90133_tokens[_90217_i + 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _90317_f;
	} else if (_90317_f == nullptr) {
		return _90317_f;
	}
	if (_90217_i >= _90133_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_90317_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<_2336ea198_Token> _91917_block_tokens = _23441cd43_range(_90217_i,jule::Str("{", 1),jule::Str("}", 1),_90133_tokens);
	if (_91917_block_tokens != nullptr) {
		_90317_f->_field_scope=this->self->_method_build_scope(_91917_block_tokens);
		_90317_f->_field_scope->_field_unsafety=_90317_f->_field_unsafety;
		if (_90217_i < _90133_tokens.len()) {
			this->self->_method_push_err(_90133_tokens[_90217_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_90317_f->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return _90317_f;
}



jule::Slice<_2336ea198_Token> _23441cd43_Parser::_method_get_use_decl_selectors(jule::Slice<_2336ea198_Token> _93545_tokens) {
	jule::Int _93617_i = 0LL;
	_93545_tokens=_23441cd43_range(_93617_i,jule::Str("{", 1),jule::Str("}", 1),_93545_tokens);
	jule::Slice<jule::Slice<_2336ea198_Token>> _93818_parts;
	jule::Slice<_231e4202e_Log> _93825_errs;
	std::tie(_93818_parts,_93825_errs) = _23441cd43_parts(_93545_tokens,8LLU,true);
	if (_93825_errs.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_93825_errs);
		return nullptr;
	}
	jule::Slice<_2336ea198_Token> _94417_selectors = jule::Slice<_2336ea198_Token>::alloc(0LL,static_cast<jule::I64>(_93818_parts.len()));
	{
		auto expr = _93818_parts;
		auto it = expr.begin();
		_iter_begin_4875114336:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _23441cd43_part = *it;
			{
				if (_23441cd43_part.len() > 1LL) {
					(*this)._method_push_err(_23441cd43_part[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
				_2336ea198_Token _94921_tok = _23441cd43_part[0LL];
				if ((_94921_tok._field_id != 2LLU) && (_94921_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_94921_tok,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
					goto _iter_next_4875114336;
				}
				_94417_selectors=jule::append(_94417_selectors,jule::Slice<_2336ea198_Token>({_94921_tok}));
			}
			_iter_next_4875114336:;
			++it;
			goto _iter_begin_4875114336;
		}
		_iter_end_4875114336:;
	}
	return _94417_selectors;
}



void _23441cd43_Parser::_method_build_cpp_use_decl(jule::Ptr<_233464770_UseDecl>& _96042_decl,jule::Slice<_2336ea198_Token>& _96059_tokens) {
	if (_96059_tokens.len() > 1LL) {
		(*this)._method_push_err(_96059_tokens[1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_2336ea198_Token _96413_token = _96059_tokens[0LL];
	if ((_96413_token._field_id != 6LLU) || ((_96413_token._field_kind[0LL] != '`') && (_96413_token._field_kind[0LL] != '\"'))) {
		(*this)._method_push_err(_96413_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return;
	}
	_96042_decl->_field_cpp_linked=true;
	_96042_decl->_field_link_path=_96413_token._field_kind.slice(1LL,_96413_token._field_kind.len() - 1LL);
	if ((!(_231e4edb6_is_std_header_path(_96042_decl->_field_link_path)))) {
		_96042_decl->_field_link_path=_231ed2cb2_join(jule::Slice<jule::Str>({_96413_token._field_file->_method_dir(),_96042_decl->_field_link_path}));
	}
}



void _23441cd43_Parser::_method_build_std_use_decl(jule::Ptr<_233464770_UseDecl>& _97642_decl,jule::Slice<_2336ea198_Token> _97662_tokens) {
	_97642_decl->_field_std=true;
	_2336ea198_Token _97917_token = _97662_tokens[0LL];
	if (_97662_tokens.len() < 3LL) {
		(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_97662_tokens=_97662_tokens.slice(2LL);
	_97917_token=_97662_tokens[_97662_tokens.len() - 1LL];
	{
		auto _match_expr{ _97917_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4875149712; }
		_case_begin_4875149712:;
		{
			(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4875149632;
		_case_end_4875149712:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4875149888; }
		_case_begin_4875149888:;
		{
			if (_97917_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_2336ea198_Token> _99721_selectors = nullptr;
			std::tie(_97662_tokens,_99721_selectors) = _23441cd43_range_last(_97662_tokens);
			_97642_decl->_field_selected=(*this)._method_get_use_decl_selectors(_99721_selectors);
			if (_97662_tokens.len() == 0LL) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97917_token=_97662_tokens[_97662_tokens.len() - 1LL];
			if (_97917_token._field_id != 23LLU) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97662_tokens=_97662_tokens.slice(0LL,_97662_tokens.len() - 1LL);
			if (_97662_tokens.len() == 0LL) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4875149632;
		_case_end_4875149888:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4875149984; }
		_case_begin_4875149984:;
		{
			if (_97917_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97662_tokens=_97662_tokens.slice(0LL,_97662_tokens.len() - 1LL);
			if (_97662_tokens.len() == 0LL) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97917_token=_97662_tokens[_97662_tokens.len() - 1LL];
			if (_97917_token._field_id != 23LLU) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97662_tokens=_97662_tokens.slice(0LL,_97662_tokens.len() - 1LL);
			if (_97662_tokens.len() == 0LL) {
				(*this)._method_push_err(_97917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_97642_decl->_field_full=true;
		}
		goto _match_end_4875149632;
		_case_end_4875149984:;
		_match_end_4875149632:;
	}
	_97642_decl->_field_link_path=jule::Str("std::", 5) + _23441cd43_tokstoa(_97662_tokens);
}



void _23441cd43_Parser::_method_build_ident_use_decl(jule::Ptr<_233464770_UseDecl>& _104044_decl,jule::Slice<_2336ea198_Token> _104064_tokens) {
	_104044_decl->_field_std=false;
	_2336ea198_Token _104317_token = _104064_tokens[_104064_tokens.len() - 1LL];
	{
		auto _match_expr{ _104317_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_4875179264; }
		_case_begin_4875179264:;
		{
			(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4875179072;
		_case_end_4875179264:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4875179360; }
		_case_begin_4875179360:;
		{
			if (_104317_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_2336ea198_Token> _105521_selectors = nullptr;
			std::tie(_104064_tokens,_105521_selectors) = _23441cd43_range_last(_104064_tokens);
			_104044_decl->_field_selected=(*this)._method_get_use_decl_selectors(_105521_selectors);
			if (_104064_tokens.len() == 0LL) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104317_token=_104064_tokens[_104064_tokens.len() - 1LL];
			if (_104317_token._field_id != 23LLU) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104064_tokens=_104064_tokens.slice(0LL,_104064_tokens.len() - 1LL);
			if (_104064_tokens.len() == 0LL) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4875179072;
		_case_end_4875179360:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4875179456; }
		_case_begin_4875179456:;
		{
			if (_104317_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104064_tokens=_104064_tokens.slice(0LL,_104064_tokens.len() - 1LL);
			if (_104064_tokens.len() == 0LL) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104317_token=_104064_tokens[_104064_tokens.len() - 1LL];
			if (_104317_token._field_id != 23LLU) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104064_tokens=_104064_tokens.slice(0LL,_104064_tokens.len() - 1LL);
			if (_104064_tokens.len() == 0LL) {
				(*this)._method_push_err(_104317_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_104044_decl->_field_full=true;
		}
		goto _match_end_4875179072;
		_case_end_4875179456:;
		_match_end_4875179072:;
	}
	_104044_decl->_field_link_path=_23441cd43_tokstoa(_104064_tokens);
}



void _23441cd43_Parser::_method_parse_use_decl(jule::Ptr<_233464770_UseDecl>& _110538_decl,jule::Slice<_2336ea198_Token> _110558_tokens) {
	if (_110538_decl->_field_cpp_linked) {
		(*this)._method_build_cpp_use_decl(_110538_decl,_110558_tokens);
		return;
	}
	_2336ea198_Token _111117_token = _110558_tokens[0LL];
	if (_111117_token._field_id != 2LLU) {
		(*this)._method_push_err(_111117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return;
	}
	if ((_110558_tokens.len() > 2LL) && (_110558_tokens[1LL]._field_id == 12LLU)) {
		_110538_decl->_field_alias=_111117_token._field_kind;
		if (_110558_tokens[2LL]._field_id != 2LLU) {
			(*this)._method_push_err(_111117_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			return;
		}
		_110558_tokens=_110558_tokens.slice(2LL);
		_111117_token=_110558_tokens[0LL];
	}
	
	{
		if (!((_111117_token._field_kind == jule::Str("std", 3)))) { goto _case_end_4875219648; }
		_case_begin_4875219648:;
		{
			(*this)._method_build_std_use_decl(_110538_decl,_110558_tokens);
		}
		goto _match_end_4875218720;
		_case_end_4875219648:;
		_case_begin_4875218832:;
		{
			(*this)._method_build_ident_use_decl(_110538_decl,_110558_tokens);
		}
		goto _match_end_4875218720;
		_case_end_4875218832:;
		_match_end_4875218720:;
	}
}



jule::Ptr<_233464770_UseDecl> _23441cd43_Parser::_method_build_use_decl(jule::Slice<_2336ea198_Token> _114037_tokens,jule::Bool _114054_cpp_linked) {
	jule::Ptr<_233464770_UseDecl> _114117_decl = jule::new_struct<_233464770_UseDecl>(new( std::nothrow ) _233464770_UseDecl(_114037_tokens[0LL],jule::Str(),jule::Str(),jule::Bool(),jule::Slice<_2336ea198_Token>(),_114054_cpp_linked,jule::Bool()));
	if (_114037_tokens.len() < 2LL) {
		(*this)._method_push_err(_114117_decl->_field_token,jule::Str("missing path of use statement", 29),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_114037_tokens=_114037_tokens.slice(1LL);
	(*this)._method_parse_use_decl(_114117_decl,_114037_tokens);
	return _114117_decl;
}



jule::Ptr<_233464770_Expr> _23441cd43_Parser::_method_build_enum_item_expr(jule::Ptr<jule::Int> _115444_i,jule::Slice<_2336ea198_Token>& _115458_tokens) {
	jule::Int _115517_brace_n = 0LL;
	jule::Int _115613_expr_start = (*(_115444_i));
	for (; (*(_115444_i)) < _115458_tokens.len(); ((*(_115444_i)))++) {
		{
			_2336ea198_Token _115817_t = _115458_tokens[(*(_115444_i))];
			if (_115817_t._field_id == 3LLU) {
				{
					auto _match_expr{ _115817_t._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4875239872; }
					_case_begin_4875239872:;
					{
						(_115517_brace_n)++;
						goto _iter_next_4875234672;
					}
					goto _match_end_4875238512;
					_case_end_4875239872:;
					_case_begin_4875237824:;
					{
						(_115517_brace_n)--;
					}
					goto _match_end_4875238512;
					_case_end_4875237824:;
					_match_end_4875238512:;
				}
			}
			if (_115517_brace_n > 0LL) {
				goto _iter_next_4875234672;
			}
			if ((_115817_t._field_id == 8LLU) || (((*(_115444_i)) + 1LL) >= _115458_tokens.len())) {
				jule::Slice<_2336ea198_Token> _117725_expr_tokens = nullptr;
				if (_115817_t._field_id == 8LLU) {
					_117725_expr_tokens=_115458_tokens.slice(_115613_expr_start,(*(_115444_i)));
				} else {
					_117725_expr_tokens=_115458_tokens.slice(_115613_expr_start);
				}
				return this->self->_method_build_expr(_117725_expr_tokens);
			}
		}
	_iter_next_4875234672:;
	}
	_iter_end_4875234672:;
	return nullptr;
}



jule::Slice<jule::Ptr<_233464770_EnumItemDecl>> _23441cd43_Parser::_method_build_enum_items(jule::Slice<_2336ea198_Token>& _118941_tokens) {
	jule::Slice<jule::Ptr<_233464770_EnumItemDecl>> _119017_items = jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>::alloc(0LL,1LL);
	jule::Ptr<jule::Int> _119117_i = jule::new_ptr<jule::Int>(0LL);
	for (; (*(_119117_i)) < _118941_tokens.len(); ((*(_119117_i)))++) {
		{
			_2336ea198_Token _119321_t = _118941_tokens[(*(_119117_i))];
			if (_119321_t._field_id == 18LLU) {
				goto _iter_next_4875248592;
			}
			jule::Ptr<_233464770_EnumItemDecl> _119821_item = jule::new_struct<_233464770_EnumItemDecl>(new( std::nothrow ) _233464770_EnumItemDecl());
			_119821_item->_field_token=_119321_t;
			if (_119821_item->_field_token._field_id != 2LLU) {
				this->self->_method_push_err(_119821_item->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
			}
			_119821_item->_field_ident=_119821_item->_field_token._field_kind;
			if ((((*(_119117_i)) + 1LL) >= _118941_tokens.len()) || (_118941_tokens[(*(_119117_i)) + 1LL]._field_id == 8LLU)) {
				if (((*(_119117_i)) + 1LL) < _118941_tokens.len()) {
					((*(_119117_i)))++;
				}
				_119017_items=jule::append(_119017_items,jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>({_119821_item}));
				goto _iter_next_4875248592;
			}
			((*(_119117_i)))++;
			_119321_t=_118941_tokens[(*(_119117_i))];
			((*(_119117_i)))++;
			if ((_119321_t._field_id != 7LLU) || (_119321_t._field_kind != jule::Str("=", 1))) {
				this->self->_method_push_err(_119321_t,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				this->self->_method_push_suggestion(jule::Str("expected equals \"=\" for assignment", 34),jule::Slice<jule::Any>({}));
				goto _iter_next_4875248592;
			}
			if (((*(_119117_i)) >= _118941_tokens.len()) || (_118941_tokens[(*(_119117_i))]._field_id == 8LLU)) {
				this->self->_method_push_err(_119321_t,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
				goto _iter_next_4875248592;
			}
			_119821_item->_field_expr=this->self->_method_build_enum_item_expr(_119117_i,_118941_tokens);
			_119017_items=jule::append(_119017_items,jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>({_119821_item}));
		}
	_iter_next_4875248592:;
	}
	_iter_end_4875248592:;
	return _119017_items;
}



jule::Ptr<_233464770_EnumDecl> _23441cd43_Parser::_method_build_enum_decl(jule::Slice<_2336ea198_Token>& _123040_tokens) {
	if ((_123040_tokens.len() < 2LL) || (_123040_tokens.len() < 3LL)) {
		this->self->_method_push_err(_123040_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_233464770_EnumDecl> _123517_e = jule::new_struct<_233464770_EnumDecl>(new( std::nothrow ) _233464770_EnumDecl(_123040_tokens[1LL],jule::Bool(),jule::Str(),jule::Ptr<_233464770_TypeDecl>(),jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>(),jule::Ptr<_233464770_CommentGroup>()));
	if (_123517_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_123517_e->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_123517_e->_field_ident=_123517_e->_field_token._field_kind;
	jule::Int _124317_i = 2LL;
	if (_123040_tokens[_124317_i]._field_id == 11LLU) {
		(_124317_i)++;
		if (_124317_i >= _123040_tokens.len()) {
			this->self->_method_push_err(_123040_tokens[_124317_i - 1LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return _123517_e;
		}
		std::tie(_123517_e->_field_kind,std::ignore) = this->self->_method_build_type(_123040_tokens,(&(_124317_i)),true);
		if (_124317_i >= _123040_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_123517_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
			this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
			return _123517_e;
		}
	} else {
		_123517_e->_field_kind=nullptr;
	}
	jule::Slice<_2336ea198_Token> _126017_item_tokens = _23441cd43_range(_124317_i,jule::Str("{", 1),jule::Str("}", 1),_123040_tokens);
	if (_126017_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_123517_e->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _123517_e;
	} else if (_124317_i < _123040_tokens.len()) {
		this->self->_method_push_err(_123040_tokens[_124317_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_123517_e->_field_items=this->self->_method_build_enum_items(_126017_item_tokens);
	return _123517_e;
}



jule::Ptr<_233464770_FieldDecl> _23441cd43_Parser::_method_build_field(jule::Slice<_2336ea198_Token> _127335_tokens) {
	jule::Ptr<_233464770_FieldDecl> _127417_f = jule::new_struct<_233464770_FieldDecl>(new( std::nothrow ) _233464770_FieldDecl());
	_127417_f->_field_public=_127335_tokens[0LL]._field_id == 21LLU;
	if (_127417_f->_field_public) {
		if (_127335_tokens.len() == 1LL) {
			this->self->_method_push_err(_127335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_127335_tokens=_127335_tokens.slice(1LL);
	}
	_127417_f->_field_mutable=_127335_tokens[0LL]._field_id == 36LLU;
	if (_127417_f->_field_mutable) {
		if (_127335_tokens.len() == 1LL) {
			this->self->_method_push_err(_127335_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_127335_tokens=_127335_tokens.slice(1LL);
	}
	_127417_f->_field_token=_127335_tokens[0LL];
	if (_127417_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_127417_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_127417_f->_field_ident=_127417_f->_field_token._field_kind;
	if (_127335_tokens.len() == 1LL) {
		this->self->_method_push_err(_127335_tokens[0LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return nullptr;
	} else if (_127335_tokens[1LL]._field_id != 11LLU) {
		this->self->_method_push_err(_127335_tokens[1LL],jule::Str("data-type missing", 17),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_127335_tokens=_127335_tokens.slice(2LL);
	jule::Int _131117_i = 0LL;
	std::tie(_127417_f->_field_kind,std::ignore) = this->self->_method_build_type(_127335_tokens,(&(_131117_i)),true);
	if (_131117_i < _127335_tokens.len()) {
		this->self->_method_push_err(_127335_tokens[_131117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return _127417_f;
}



jule::Slice<jule::Ptr<_233464770_FieldDecl>> _23441cd43_Parser::_method_build_struct_decl_fields(jule::Slice<_2336ea198_Token> _132148_tokens) {
	jule::Slice<jule::Ptr<_233464770_FieldDecl>> _132217_fields = nullptr;
	jule::Slice<jule::Ptr<_2337c95da_Stmt>> _132317_stms = _2337c95da_split_stms(_132148_tokens);
	{
		auto expr = _132317_stms;
		auto it = expr.begin();
		_iter_begin_4875329408:;
		if (it != expr.end()) {
			jule::Ptr<_2337c95da_Stmt> _23441cd43_st = *it;
			{
				_132148_tokens=_23441cd43_st->_field_tokens;
				if (_132148_tokens[0LL]._field_id == 18LLU) {
					goto _iter_next_4875329408;
				}
				jule::Ptr<_233464770_FieldDecl> _132921_f = this->self->_method_build_field(_132148_tokens);
				_132217_fields=jule::append(_132217_fields,jule::Slice<jule::Ptr<_233464770_FieldDecl>>({_132921_f}));
			}
			_iter_next_4875329408:;
			++it;
			goto _iter_begin_4875329408;
		}
		_iter_end_4875329408:;
	}
	return _132217_fields;
}



jule::Ptr<_233464770_StructDecl> _23441cd43_Parser::_method_build_struct_decl(jule::Slice<_2336ea198_Token>& _133542_tokens) {
	if (_133542_tokens.len() < 3LL) {
		this->self->_method_push_err(_133542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Int _134117_i = 1LL;
	jule::Ptr<_233464770_StructDecl> _134217_s = jule::new_struct<_233464770_StructDecl>(new( std::nothrow ) _233464770_StructDecl(_133542_tokens[_134117_i],jule::Str(),jule::Slice<jule::Ptr<_233464770_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_233464770_CommentGroup>(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>()));
	if (_134217_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_134217_s->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	(_134117_i)++;
	if (_134117_i >= _133542_tokens.len()) {
		this->self->_method_push_err(_133542_tokens[_134117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134217_s;
	}
	_134217_s->_field_ident=_134217_s->_field_token._field_kind;
	_2336ea198_Token _135613_error_token = _133542_tokens[_134117_i];
	jule::Slice<_2336ea198_Token> _135717_generics_tokens = _23441cd43_range(_134117_i,jule::Str("[", 1),jule::Str("]", 1),_133542_tokens);
	if (_135717_generics_tokens != nullptr) {
		_134217_s->_field_generics=this->self->_method_build_generics(_135717_generics_tokens,_135613_error_token);
	}
	if (_134117_i >= _133542_tokens.len()) {
		this->self->_method_push_err(_133542_tokens[_134117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return _134217_s;
	}
	jule::Slice<_2336ea198_Token> _136617_body_tokens = _23441cd43_range(_134117_i,jule::Str("{", 1),jule::Str("}", 1),_133542_tokens);
	if (_136617_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_134217_s->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return _134217_s;
	}
	if (_134117_i < _133542_tokens.len()) {
		this->self->_method_push_err(_133542_tokens[_134117_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_134217_s->_field_fields=this->self->_method_build_struct_decl_fields(_136617_body_tokens);
	return _134217_s;
}



void _23441cd43_Parser::_method_check_method_receiver(jule::Ptr<_233464770_FnDecl>& _138041_f) {
	if (_138041_f->_field_statically) {
		if ((_138041_f->_field_params.len() > 0LL) && _138041_f->_field_params[0LL]->_method_is_self()) {
			(*this)._method_push_err(_138041_f->_field_token,jule::Str("static functions cannot have receiver parameter", 47),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_138041_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_138041_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ptr<_233464770_ParamDecl> _139313_param = _138041_f->_field_params[0LL];
	if ((!(_139313_param->_method_is_self()))) {
		(*this)._method_push_err(_138041_f->_field_token,jule::Str("missing receiver parameter", 26),jule::Slice<jule::Any>({}));
		return;
	}
}



jule::Slice<jule::Ptr<_233464770_FnDecl>> _23441cd43_Parser::_method_build_trait_methods(jule::Slice<_2336ea198_Token> _140043_tokens) {
	jule::Slice<jule::Ptr<_233464770_FnDecl>> _140117_methods = nullptr;
	jule::Slice<jule::Ptr<_2337c95da_Stmt>> _140217_stms = _2337c95da_split_stms(_140043_tokens);
	{
		auto expr = _140217_stms;
		auto it = expr.begin();
		_iter_begin_4875377568:;
		if (it != expr.end()) {
			jule::Ptr<_2337c95da_Stmt> _23441cd43_st = *it;
			{
				_140043_tokens=_2337db201_eliminate_comments(_23441cd43_st->_field_tokens);
				if (_140043_tokens.len() == 0LL) {
					goto _iter_next_4875377568;
				}
				jule::Bool _140921_is_pub = false;
				if (_140043_tokens[0LL]._field_id == 21LLU) {
					_140921_is_pub=true;
					if (_140043_tokens.len() == 1LL) {
						this->self->_method_push_err(_140043_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4875377568;
					}
					_140043_tokens=_140043_tokens.slice(1LL);
				}
				jule::Ptr<_233464770_FnDecl> _141921_f = this->self->_method_build_fn(_140043_tokens,true,true);
				if (_141921_f != nullptr) {
					if (_141921_f->_method_is_anon()) {
						this->self->_method_push_err(_141921_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_method_receiver(_141921_f);
					if (_141921_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_141921_f->_field_token,jule::Str("trait methods cannot have generics", 34),jule::Slice<jule::Any>({}));
					}
					_141921_f->_field_public=_140921_is_pub;
					_140117_methods=jule::append(_140117_methods,jule::Slice<jule::Ptr<_233464770_FnDecl>>({_141921_f}));
				}
			}
			_iter_next_4875377568:;
			++it;
			goto _iter_begin_4875377568;
		}
		_iter_end_4875377568:;
	}
	return _140117_methods;
}



jule::Ptr<_233464770_TraitDecl> _23441cd43_Parser::_method_build_trait_decl(jule::Slice<_2336ea198_Token>& _143541_tokens) {
	if (_143541_tokens.len() < 3LL) {
		this->self->_method_push_err(_143541_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_233464770_TraitDecl> _144017_t = jule::new_struct<_233464770_TraitDecl>(new( std::nothrow ) _233464770_TraitDecl(_143541_tokens[1LL],jule::Str(),jule::Bool(),jule::Ptr<_233464770_CommentGroup>(),jule::Slice<jule::Ptr<_233464770_FnDecl>>()));
	if (_144017_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_144017_t->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
	}
	_144017_t->_field_ident=_144017_t->_field_token._field_kind;
	jule::Int _144817_i = 2LL;
	jule::Slice<_2336ea198_Token> _144917_body_tokens = _23441cd43_range(_144817_i,jule::Str("{", 1),jule::Str("}", 1),_143541_tokens);
	if (_144917_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_144017_t->_field_token,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_144817_i < _143541_tokens.len()) {
		this->self->_method_push_err(_143541_tokens[_144817_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	_144017_t->_field_methods=this->self->_method_build_trait_methods(_144917_body_tokens);
	return _144017_t;
}



jule::Ptr<_233464770_FnDecl> _23441cd43_Parser::_method_build_cpp_link_fn(jule::Slice<_2336ea198_Token> _146341_tokens) {
	_146341_tokens=_146341_tokens.slice(1LL);
	jule::Ptr<_233464770_FnDecl> _146517_f = this->self->_method_build_fn(_146341_tokens,false,true);
	if (_146517_f != nullptr) {
		if (_146517_f->_method_is_anon()) {
			this->self->_method_push_err(_146517_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		_146517_f->_field_cpp_linked=true;
	}
	return _146517_f;
}



jule::Ptr<_233464770_VarDecl> _23441cd43_Parser::_method_build_cpp_link_var(jule::Slice<_2336ea198_Token> _147542_tokens) {
	_147542_tokens=_147542_tokens.slice(1LL);
	jule::Ptr<_233464770_VarDecl> _147717_v = this->self->_method_build_var(_147542_tokens);
	if (_147717_v != nullptr) {
		_147717_v->_field_cpp_linked=true;
		if (_147717_v->_field_expr != nullptr) {
			this->self->_method_push_err(_147717_v->_field_token,jule::Str("cpp linked variables cannot have expression", 43),jule::Slice<jule::Any>({}));
		}
	}
	return _147717_v;
}



jule::Ptr<_233464770_StructDecl> _23441cd43_Parser::_method_build_cpp_link_struct(jule::Slice<_2336ea198_Token> _148745_tokens) {
	_148745_tokens=_148745_tokens.slice(1LL);
	jule::Ptr<_233464770_StructDecl> _148917_s = this->self->_method_build_struct_decl(_148745_tokens);
	if (_148917_s != nullptr) {
		_148917_s->_field_cpp_linked=true;
	}
	return _148917_s;
}



jule::Ptr<_233464770_TypeAliasDecl> _23441cd43_Parser::_method_build_cpp_link_type_alias(jule::Slice<_2336ea198_Token> _149649_tokens) {
	_149649_tokens=_149649_tokens.slice(1LL);
	jule::Ptr<_233464770_TypeAliasDecl> _149817_t = this->self->_method_build_type_alias_decl(_149649_tokens);
	if (_149817_t != nullptr) {
		_149817_t->_field_cpp_linked=true;
	}
	return _149817_t;
}



jule::Ptr<_233464770_UseDecl> _23441cd43_Parser::_method_build_cpp_link_use(jule::Slice<_2336ea198_Token> _150542_tokens) {
	if (_150542_tokens.len() == 1LL) {
		this->self->_method_push_err(_150542_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_150542_tokens=_150542_tokens.slice(1LL);
	
	return this->self->_method_build_use_decl(_150542_tokens,true);
}



jule::Any _23441cd43_Parser::_method_build_cpp_link(jule::Slice<_2336ea198_Token>& _151639_tokens) {
	_2336ea198_Token _151717_token = _151639_tokens[0LL];
	if (_151639_tokens.len() == 1LL) {
		this->self->_method_push_err(_151717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return jule::Any(nullptr);
	}
	_151717_token=_151639_tokens[1LL];
	{
		auto _match_expr{ _151717_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4875450496; }
		_case_begin_4875450496:;
		{
			return jule::Any(this->self->_method_build_cpp_link_use(_151639_tokens));
		}
		goto _match_end_4875448944;
		_case_end_4875450496:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4875449392; }
		_case_begin_4875449392:;
		{
			return jule::Any(this->self->_method_build_cpp_link_fn(_151639_tokens));
		}
		goto _match_end_4875448944;
		_case_end_4875449392:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_4875449488; }
		_case_begin_4875449488:;
		{
			return jule::Any(this->self->_method_build_cpp_link_var(_151639_tokens));
		}
		goto _match_end_4875448944;
		_case_end_4875449488:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4875449584; }
		_case_begin_4875449584:;
		{
			return jule::Any(this->self->_method_build_cpp_link_struct(_151639_tokens));
		}
		goto _match_end_4875448944;
		_case_end_4875449584:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4875449680; }
		_case_begin_4875449680:;
		{
			return jule::Any(this->self->_method_build_cpp_link_type_alias(_151639_tokens));
		}
		goto _match_end_4875448944;
		_case_end_4875449680:;
		_case_begin_4875447712:;
		{
			this->self->_method_push_err(_151717_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4875448944;
		_case_end_4875447712:;
		_match_end_4875448944:;
	}
	return jule::Any(nullptr);
}



jule::Ptr<_233464770_FnDecl> _23441cd43_Parser::_method_get_method(jule::Slice<_2336ea198_Token>& _154735_tokens) {
	jule::Int _154817_i = 0LL;
	_2336ea198_Token _154917_token = _154735_tokens[_154817_i];
	if (_154917_token._field_id == 38LLU) {
		if ((_154817_i + 1LL) >= _154735_tokens.len()) {
			this->self->_method_push_err(_154917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		(_154817_i)++;
		_154917_token=_154735_tokens[_154817_i];
	}
	if (_154917_token._field_id == 35LLU) {
		if ((_154817_i + 1LL) >= _154735_tokens.len()) {
			this->self->_method_push_err(_154917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		(_154817_i)++;
		_154917_token=_154735_tokens[_154817_i];
	}
	if (_154917_token._field_id != 33LLU) {
		this->self->_method_push_err(_154917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_233464770_FnDecl> _157317_f = this->self->_method_build_fn(_154735_tokens,true,false);
	if ((_157317_f != nullptr) && _157317_f->_method_is_anon()) {
		this->self->_method_push_err(_157317_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _157317_f;
}



void _23441cd43_Parser::_method_parse_impl_body(jule::Ptr<_233464770_Impl>& _158040_ipl,jule::Slice<_2336ea198_Token>& _158057_tokens) {
	jule::Slice<jule::Ptr<_2337c95da_Stmt>> _158117_stms = _2337c95da_split_stms(_158057_tokens);
	{
		auto expr = _158117_stms;
		auto it = expr.begin();
		_iter_begin_4875477104:;
		if (it != expr.end()) {
			jule::Ptr<_2337c95da_Stmt> _23441cd43_st = *it;
			{
				_158057_tokens=_23441cd43_st->_field_tokens;
				_2336ea198_Token _158421_token = _158057_tokens[0LL];
				jule::Bool _158521_is_pub = false;
				{
					auto _match_expr{ _158421_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_4875481056; }
					_case_begin_4875481056:;
					{
						goto _iter_next_4875477104;
					}
					goto _match_end_4875481472;
					_case_end_4875481056:;
					if (!((21LLU) == _match_expr)) { goto _case_end_4875481616; }
					_case_begin_4875481616:;
					{
						_158521_is_pub=true;
						if (_158057_tokens.len() == 1LL) {
							this->self->_method_push_err(_158057_tokens[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4875477104;
						}
						_158057_tokens=_158057_tokens.slice(1LL);
						if (_158057_tokens.len() > 0LL) {
							_158421_token=_158057_tokens[0LL];
						}
					}
					goto _match_end_4875481472;
					_case_end_4875481616:;
					_match_end_4875481472:;
				}
				{
					auto _match_expr{ _158421_token._field_id };
					if (!((9LLU) == _match_expr)) { goto _case_end_4875488992; }
					_case_begin_4875488992:;
					{
						jule::Ptr<_233464770_VarDecl> _160525_v = this->self->_method_build_var(_158057_tokens);
						if (_160525_v != nullptr) {
							_160525_v->_field_public=_158521_is_pub;
							_158040_ipl->_field_statics=jule::append(_158040_ipl->_field_statics,jule::Slice<jule::Ptr<_233464770_VarDecl>>({_160525_v}));
						}
					}
					goto _match_end_4875482032;
					_case_end_4875488992:;
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4875486720; }
					_case_begin_4875486720:;
					{
						jule::Ptr<_233464770_FnDecl> _161425_f = this->self->_method_get_method(_158057_tokens);
						if (_161425_f != nullptr) {
							_161425_f->_field_public=_158521_is_pub;
							this->self->_method_check_method_receiver(_161425_f);
							_158040_ipl->_field_methods=jule::append(_158040_ipl->_field_methods,jule::Slice<jule::Ptr<_233464770_FnDecl>>({_161425_f}));
						}
					}
					goto _match_end_4875482032;
					_case_end_4875486720:;
					_case_begin_4875483200:;
					{
						this->self->_method_push_err(_158421_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4875477104;
					}
					goto _match_end_4875482032;
					_case_end_4875483200:;
					_match_end_4875482032:;
				}
			}
			_iter_next_4875477104:;
			++it;
			goto _iter_begin_4875477104;
		}
		_iter_end_4875477104:;
	}
}



jule::Ptr<_233464770_Impl> _23441cd43_Parser::_method_build_impl(jule::Slice<_2336ea198_Token> _162834_tokens) {
	_2336ea198_Token _162917_token = _162834_tokens[0LL];
	if (_162834_tokens.len() < 2LL) {
		this->self->_method_push_err(_162917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_162917_token=_162834_tokens[1LL];
	if (_162917_token._field_id != 2LLU) {
		this->self->_method_push_err(_162917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_162834_tokens.len() < 3LL) {
		this->self->_method_push_err(_162917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_233464770_Impl> _164417_ipl = jule::new_struct<_233464770_Impl>(new( std::nothrow ) _233464770_Impl(_162917_token,_2336ea198_Token(),jule::Slice<jule::Ptr<_233464770_FnDecl>>(),jule::Slice<jule::Ptr<_233464770_VarDecl>>()));
	_162917_token=_162834_tokens[2LL];
	if (_162917_token._field_id != 12LLU) {
		if ((_162917_token._field_id == 3LLU) && (_162917_token._field_kind == jule::Str("{", 1))) {
			std::tie(_164417_ipl->_field_base,_164417_ipl->_field_dest) = std::make_tuple(_164417_ipl->_field_dest,_164417_ipl->_field_base);
			_162834_tokens=_162834_tokens.slice(2LL);
			goto _julec_label_body;
		}
		this->self->_method_push_err(_162917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_162834_tokens.len() < 4LL) {
		this->self->_method_push_err(_162917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_162917_token=_162834_tokens[3LL];
	if (_162917_token._field_id != 2LLU) {
		this->self->_method_push_err(_162917_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_164417_ipl->_field_dest=_162917_token;
	_162834_tokens=_162834_tokens.slice(4LL);
	_julec_label_body:;
	jule::Int _167417_i = 0LL;
	jule::Slice<_2336ea198_Token> _167517_body_tokens = _23441cd43_range(_167417_i,jule::Str("{", 1),jule::Str("}", 1),_162834_tokens);
	if (_167517_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_164417_ipl->_field_base,jule::Str("body is not exist", 17),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_167417_i < _162834_tokens.len()) {
		this->self->_method_push_err(_162834_tokens[_167417_i],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_164417_ipl,_167517_body_tokens);
	return _164417_ipl;
}



jule::Any _23441cd43_Parser::_method_build_node_data(jule::Slice<_2336ea198_Token>& _168940_tokens) {
	_2336ea198_Token _169017_token = _168940_tokens[0LL];
	{
		auto _match_expr{ _169017_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_4875536000; }
		_case_begin_4875536000:;
		{
			
			return jule::Any(this->self->_method_build_use_decl(_168940_tokens,false));
		}
		goto _match_end_4875533968;
		_case_end_4875536000:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_4875536656; }
		_case_begin_4875536656:;
		{
			jule::Ptr<_233464770_FnDecl> _169821_f = this->self->_method_build_fn(_168940_tokens,false,false);
			if (_169821_f != nullptr) {
				_169821_f->_field_global=true;
				if (_169821_f->_method_is_anon()) {
					this->self->_method_push_err(_169821_f->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			return jule::Any(_169821_f);
		}
		goto _match_end_4875533968;
		_case_end_4875536656:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_4875536160; }
		_case_begin_4875536160:;
		{
			return jule::Any(this->self->_method_build_var(_168940_tokens));
		}
		goto _match_end_4875533968;
		_case_end_4875536160:;
		if (!((10LLU) == _match_expr)) { goto _case_end_4875534240; }
		_case_begin_4875534240:;
		{
			return jule::Any(this->self->_method_build_type_alias_decl(_168940_tokens));
		}
		goto _match_end_4875533968;
		_case_end_4875534240:;
		if (!((24LLU) == _match_expr)) { goto _case_end_4875534336; }
		_case_begin_4875534336:;
		{
			return jule::Any(this->self->_method_build_enum_decl(_168940_tokens));
		}
		goto _match_end_4875533968;
		_case_end_4875534336:;
		if (!((25LLU) == _match_expr)) { goto _case_end_4875534432; }
		_case_begin_4875534432:;
		{
			return jule::Any(this->self->_method_build_struct_decl(_168940_tokens));
		}
		goto _match_end_4875533968;
		_case_end_4875534432:;
		if (!((29LLU) == _match_expr)) { goto _case_end_4875534528; }
		_case_begin_4875534528:;
		{
			return jule::Any(this->self->_method_build_trait_decl(_168940_tokens));
		}
		goto _match_end_4875533968;
		_case_end_4875534528:;
		if (!((30LLU) == _match_expr)) { goto _case_end_4875536800; }
		_case_begin_4875536800:;
		{
			return jule::Any(this->self->_method_build_impl(_168940_tokens));
		}
		goto _match_end_4875533968;
		_case_end_4875536800:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4875536896; }
		_case_begin_4875536896:;
		{
			return this->self->_method_build_cpp_link(_168940_tokens);
		}
		goto _match_end_4875533968;
		_case_end_4875536896:;
		if (!((18LLU) == _match_expr)) { goto _case_end_4875536992; }
		_case_begin_4875536992:;
		{
			jule::Ptr<_233464770_Comment> _173521_c = _23441cd43_build_comment(_169017_token);
			this->self->_method_process_comment(_173521_c);
			return jule::Any(_173521_c);
		}
		goto _match_end_4875533968;
		_case_end_4875536992:;
		_case_begin_4875532368:;
		{
			this->self->_method_push_err(_169017_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return jule::Any(nullptr);
		}
		goto _match_end_4875533968;
		_case_end_4875532368:;
		_match_end_4875533968:;
	}
}



void _23441cd43_Parser::_method_check_comment_group(_233464770_Node& _174539_node) {
	if ((*this)._field_comment_group == nullptr) {
		return;
	}
	{
		auto _match_expr{ _174539_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Comment>>() || _match_expr.type_is<jule::Ptr<_233464770_Directive>>())) { goto _case_end_4875556224; }
		goto _match_end_4875554448;
		_case_end_4875556224:;
		_case_begin_4875554896:;
		{
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_4875554448;
		_case_end_4875554896:;
		_match_end_4875554448:;
	}
}



void _23441cd43_Parser::_method_check_directive(_233464770_Node& _175935_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto _match_expr{ _175935_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Directive>>() || _match_expr.type_is<jule::Ptr<_233464770_Comment>>())) { goto _case_end_4875560960; }
		goto _match_end_4875559184;
		_case_end_4875560960:;
		_case_begin_4875559632:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4875559184;
		_case_end_4875559632:;
		_match_end_4875559184:;
	}
}



void _23441cd43_Parser::_method_apply_meta(_233464770_Node& _177434_node,jule::Bool _177450_is_pub) {
	{
		auto _match_expr{ _177434_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_VarDecl>>())) { goto _case_end_4875564192; }
		_case_begin_4875564192:;
		{
			jule::Ptr<_233464770_VarDecl> _177721_v = _177434_node._field_data.operator jule::Ptr<_233464770_VarDecl>();
			if (_177721_v == nullptr) {
				return;
			}
			_177721_v->_field_public=_177450_is_pub;
			_177450_is_pub=false;
			_177721_v->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_177721_v->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4875564672;
		_case_end_4875564192:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnDecl>>())) { goto _case_end_4875564928; }
		_case_begin_4875564928:;
		{
			jule::Ptr<_233464770_FnDecl> _179121_f = _177434_node._field_data.operator jule::Ptr<_233464770_FnDecl>();
			if (_179121_f == nullptr) {
				return;
			}
			_179121_f->_field_public=_177450_is_pub;
			_177450_is_pub=false;
			_179121_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_179121_f->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_4875564672;
		_case_end_4875564928:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TypeAliasDecl>>())) { goto _case_end_4875565024; }
		_case_begin_4875565024:;
		{
			jule::Ptr<_233464770_TypeAliasDecl> _180421_tad = _177434_node._field_data.operator jule::Ptr<_233464770_TypeAliasDecl>();
			if (_180421_tad == nullptr) {
				return;
			}
			_180421_tad->_field_public=_177450_is_pub;
			_177450_is_pub=false;
			_180421_tad->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
		}
		goto _match_end_4875564672;
		_case_end_4875565024:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_EnumDecl>>())) { goto _case_end_4875565120; }
		_case_begin_4875565120:;
		{
			jule::Ptr<_233464770_EnumDecl> _181421_ed = _177434_node._field_data.operator jule::Ptr<_233464770_EnumDecl>();
			if (_181421_ed == nullptr) {
				return;
			}
			_181421_ed->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_181421_ed->_field_public=_177450_is_pub;
			_177450_is_pub=false;
		}
		goto _match_end_4875564672;
		_case_end_4875565120:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_StructDecl>>())) { goto _case_end_4875565216; }
		_case_begin_4875565216:;
		{
			jule::Ptr<_233464770_StructDecl> _182421_sd = _177434_node._field_data.operator jule::Ptr<_233464770_StructDecl>();
			if (_182421_sd == nullptr) {
				return;
			}
			_182421_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_182421_sd->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_182421_sd->_field_public=_177450_is_pub;
			_177450_is_pub=false;
		}
		goto _match_end_4875564672;
		_case_end_4875565216:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TraitDecl>>())) { goto _case_end_4875565312; }
		_case_begin_4875565312:;
		{
			jule::Ptr<_233464770_TraitDecl> _183621_td = _177434_node._field_data.operator jule::Ptr<_233464770_TraitDecl>();
			if (_183621_td == nullptr) {
				return;
			}
			_183621_td->_field_doc_comments=(*this)._field_comment_group;
			(*this)._field_comment_group=nullptr;
			_183621_td->_field_public=_177450_is_pub;
			_177450_is_pub=false;
		}
		goto _match_end_4875564672;
		_case_end_4875565312:;
		_match_end_4875564672:;
	}
	if (_177450_is_pub) {
		(*this)._method_push_err(_177434_node._field_token,jule::Str("define is not supports pub modifier", 35),jule::Slice<jule::Any>({}));
	}
}



void _23441cd43_Parser::_method_check_use_decl(_233464770_Node& _185034_node) {
	{
		auto _match_expr{ _185034_node._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_UseDecl>>())) { goto _case_end_4875596064; }
		goto _match_end_4875595136;
		_case_end_4875596064:;
		_case_begin_4875594592:;
		{
			return;
		}
		goto _match_end_4875595136;
		_case_end_4875594592:;
		_match_end_4875595136:;
	}
	if ((*this)._field_ast->_field_decls.len() > 0LL) {
		(*this)._method_push_err(_185034_node._field_token,jule::Str("use declarations must declared before other declarations", 56),jule::Slice<jule::Any>({}));
		(*this)._method_push_suggestion(jule::Str("move this use declaration to top of source file", 47),jule::Slice<jule::Any>({}));
	}
}



std::tuple<jule::Bool,jule::Any> _23441cd43_Parser::_method_build_general_scope_node_data(jule::Slice<_2336ea198_Token> _186553_st) {
	jule::Bool _186568_is_pub = jule::Bool();
	jule::Any _186582_data = jule::Any();
	if (_186553_st[0LL]._field_id == 21LLU) {
		_186568_is_pub=true;
		_186553_st=_186553_st.slice(1LL);
		if (_186553_st.len() == 0LL) {
			this->self->_method_push_err(_186553_st[0LL],jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_186568_is_pub,_186582_data);
		}
	}
	_186582_data=this->self->_method_build_node_data(_186553_st);
	_186568_is_pub = _186568_is_pub;
	_186582_data = _186582_data;
	return std::make_tuple(_186568_is_pub,_186582_data);
}



_233464770_Node _23441cd43_Parser::_method_parse_node(jule::Slice<_2336ea198_Token>& _188035_st) {
	_233464770_Node _188117_node = _233464770_Node(_188035_st[0LL],jule::Any());
	jule::Bool _188514_is_pub;
	jule::Any _188526_data;
	std::tie(_188514_is_pub,_188526_data) = this->self->_method_build_general_scope_node_data(_188035_st);
	if (_188526_data == nullptr) {
		return _188117_node;
	}
	_188117_node._field_data=_188526_data;
	this->self->_method_apply_meta(_188117_node,_188514_is_pub);
	this->self->_method_check_comment_group(_188117_node);
	this->self->_method_check_directive(_188117_node);
	this->self->_method_check_use_decl(_188117_node);
	return _188117_node;
}



void _23441cd43_Parser::_method_append_node(jule::Slice<_2336ea198_Token>& _189936_st) {
	if (_189936_st.len() == 0LL) {
		return;
	}
	_233464770_Node _190417_node = this->self->_method_parse_node(_189936_st);
	if ((_190417_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_190417_node._method_is_use_decl()))) { goto _case_end_4875626848; }
		_case_begin_4875626848:;
		{
			this->self->_field_ast->_field_use_decls=jule::append(this->self->_field_ast->_field_use_decls,jule::Slice<jule::Ptr<_233464770_UseDecl>>({_190417_node._field_data.operator jule::Ptr<_233464770_UseDecl>()}));
		}
		goto _match_end_4875624560;
		_case_end_4875626848:;
		if (!((_190417_node._method_is_decl()))) { goto _case_end_4875626944; }
		_case_begin_4875626944:;
		{
			this->self->_field_ast->_field_decls=jule::append(this->self->_field_ast->_field_decls,jule::Slice<_233464770_Node>({_190417_node}));
		}
		goto _match_end_4875624560;
		_case_end_4875626944:;
		if (!((_190417_node._method_is_comment()))) { goto _case_end_4875625360; }
		_case_begin_4875625360:;
		{
			jule::Ptr<_233464770_Comment> _191921_c = _190417_node._field_data.operator jule::Ptr<_233464770_Comment>();
			this->self->_field_ast->_field_comments=jule::append(this->self->_field_ast->_field_comments,jule::Slice<jule::Ptr<_233464770_Comment>>({_191921_c}));
		}
		goto _match_end_4875624560;
		_case_end_4875625360:;
		if (!((_190417_node._method_is_impl()))) { goto _case_end_4875625456; }
		_case_begin_4875625456:;
		{
			this->self->_field_ast->_field_impls=jule::append(this->self->_field_ast->_field_impls,jule::Slice<jule::Ptr<_233464770_Impl>>({_190417_node._field_data.operator jule::Ptr<_233464770_Impl>()}));
		}
		goto _match_end_4875624560;
		_case_end_4875625456:;
		_case_begin_4875624640:;
		{
			this->self->_method_push_err(_190417_node._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4875624560;
		_case_end_4875624640:;
		_match_end_4875624560:;
	}
}



void _23441cd43_Parser::_method_remove_range(jule::Int _193031_i,jule::Str _193039_kind,jule::Slice<_2336ea198_Token>& _193051_tokens,jule::Slice<jule::Int>& _193073_ranges) {
	jule::Str _193113_close = _23441cd43_get_close_kind_of_brace(_193039_kind);
	for (; _193031_i >= 0LL; (_193031_i)--) {
		{
			_2336ea198_Token _193317_tok = _193051_tokens[_193073_ranges[_193031_i]];
			if (_193317_tok._field_kind != _193113_close) {
				goto _iter_next_4875637648;
			}
			_193073_ranges=jule::append(_193073_ranges.slice(0LL,_193031_i),_193073_ranges.slice(_193031_i + 1LL));
			goto _iter_end_4875637648;
		}
	_iter_next_4875637648:;
	}
	_iter_end_4875637648:;
}



void _23441cd43_Parser::_method_push_wrong_order_close_err(_2336ea198_Token& _194346_t,jule::Slice<_2336ea198_Token>& _194357_tokens,jule::Slice<jule::Int>& _194375_ranges) {
	{
		auto _match_expr{ _194357_tokens[_194375_ranges[_194375_ranges.len() - 1LL]]._field_kind };
		if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4875651696; }
		_case_begin_4875651696:;
		{
			(*this)._method_push_err(_194346_t,jule::Str("was expected parentheses close", 30),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4875651536;
		_case_end_4875651696:;
		if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4875651792; }
		_case_begin_4875651792:;
		{
			(*this)._method_push_err(_194346_t,jule::Str("was expected brace close", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4875651536;
		_case_end_4875651792:;
		if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4875651888; }
		_case_begin_4875651888:;
		{
			(*this)._method_push_err(_194346_t,jule::Str("was expected bracket close", 26),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4875651536;
		_case_end_4875651888:;
		_match_end_4875651536:;
	}
}



void _23441cd43_Parser::_method_push_range_close(_2336ea198_Token _195135_t,jule::Str _195145_left,jule::Slice<_2336ea198_Token>& _195157_tokens,jule::Slice<jule::Int>& _195179_ranges) {
	jule::I64 _195213_n = _195179_ranges.len();
	if (_195213_n == 0LL) {
		{
			auto _match_expr{ _195135_t._field_kind };
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4875662928; }
			_case_begin_4875662928:;
			{
				(*this)._method_push_err(_195135_t,jule::Str("extra closed brackets", 21),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4875662784;
			_case_end_4875662928:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4875663024; }
			_case_begin_4875663024:;
			{
				(*this)._method_push_err(_195135_t,jule::Str("extra closed braces", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4875662784;
			_case_end_4875663024:;
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4875663120; }
			_case_begin_4875663120:;
			{
				(*this)._method_push_err(_195135_t,jule::Str("extra closed parentheses", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4875662784;
			_case_end_4875663120:;
			_match_end_4875662784:;
		}
		return;
	} else if (_195157_tokens[_195179_ranges[_195213_n - 1LL]]._field_kind != _195145_left) {
		(*this)._method_push_wrong_order_close_err(_195135_t,_195157_tokens,_195179_ranges);
	}
	(*this)._method_remove_range(static_cast<jule::I64>(_195213_n - 1LL),_195135_t._field_kind,_195157_tokens,_195179_ranges);
}



void _23441cd43_Parser::_method_check_ranges(jule::Slice<_2336ea198_Token>& _196632_tokens) {
	jule::Slice<jule::Int> _196717_ranges = nullptr;
	{
		auto expr = _196632_tokens;
		auto it = expr.begin();
		_iter_begin_4875673904:;
		if (it != expr.end()) {
			jule::Int _23441cd43_i = it - expr.begin();
			_2336ea198_Token _23441cd43_token = *it;
			{
				if (_23441cd43_token._field_id != 3LLU) {
					goto _iter_next_4875673904;
				}
				{
					auto _match_expr{ _23441cd43_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4875677040; }
					_case_begin_4875677040:;
					{
						_196717_ranges=jule::append(_196717_ranges,jule::Slice<jule::Int>({_23441cd43_i}));
					}
					goto _match_end_4875676960;
					_case_end_4875677040:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4875677472; }
					_case_begin_4875677472:;
					{
						(*this)._method_push_range_close(_23441cd43_token,jule::Str("(", 1),_196632_tokens,_196717_ranges);
					}
					goto _match_end_4875676960;
					_case_end_4875677472:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4875677568; }
					_case_begin_4875677568:;
					{
						(*this)._method_push_range_close(_23441cd43_token,jule::Str("{", 1),_196632_tokens,_196717_ranges);
					}
					goto _match_end_4875676960;
					_case_end_4875677568:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4875677664; }
					_case_begin_4875677664:;
					{
						(*this)._method_push_range_close(_23441cd43_token,jule::Str("[", 1),_196632_tokens,_196717_ranges);
					}
					goto _match_end_4875676960;
					_case_end_4875677664:;
					_match_end_4875676960:;
				}
			}
			_iter_next_4875673904:;
			++it;
			_23441cd43_i++;
			goto _iter_begin_4875673904;
		}
		_iter_end_4875673904:;
	}
	{
		auto expr = _196717_ranges;
		auto it = expr.begin();
		_iter_begin_4875679680:;
		if (it != expr.end()) {
			jule::Int _23441cd43_i = *it;
			{
				_2336ea198_Token _199217_token = _196632_tokens[_23441cd43_i];
				{
					auto _match_expr{ _199217_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4875685216; }
					_case_begin_4875685216:;
					{
						(*this)._method_push_err(_199217_token,jule::Str("parentheses waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4875685136;
					_case_end_4875685216:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4875685312; }
					_case_begin_4875685312:;
					{
						(*this)._method_push_err(_199217_token,jule::Str("brace waiting to close", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4875685136;
					_case_end_4875685312:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4875685408; }
					_case_begin_4875685408:;
					{
						(*this)._method_push_err(_199217_token,jule::Str("bracket are waiting to close", 28),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4875685136;
					_case_end_4875685408:;
					_match_end_4875685136:;
				}
			}
			_iter_next_4875679680:;
			++it;
			goto _iter_begin_4875679680;
		}
		_iter_end_4875679680:;
	}
}



void _23441cd43_Parser::_method_parse(jule::Ptr<_2334d2d3d_File>& _200130_f) {
	this->self->_field_ast=jule::new_struct<_23346420e_Ast>(new( std::nothrow ) _23346420e_Ast(_200130_f,jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Slice<jule::Ptr<_233464770_UseDecl>>(),jule::Slice<jule::Ptr<_233464770_Impl>>(),jule::Slice<jule::Ptr<_233464770_Comment>>(),jule::Slice<_233464770_Node>()));
	jule::Slice<_2336ea198_Token> _200617_tokens = _200130_f->_method_tokens();
	this->self->_method_check_ranges(_200617_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_2337c95da_Stmt>> _201217_stms = _2337c95da_split_stms(_200617_tokens);
	jule::Int _201517_i = 0LL;
	for (; _201517_i < _201217_stms.len(); (_201517_i)++) {
		{
			jule::Ptr<_2337c95da_Stmt> _201721_st = _201217_stms[_201517_i];
			if (_201721_st->_field_tokens.len() == 0LL) {
				return;
			}
			jule::Any _202225_data;
			std::tie(std::ignore,_202225_data) = this->self->_method_build_general_scope_node_data(_201721_st->_field_tokens);
			if (_202225_data == nullptr) {
				goto _iter_end_4875675488;
			}
			if (this->self->_method_stopped()) {
				return;
			}
			_233464770_Node _203121_node = _233464770_Node(_2336ea198_Token(),_202225_data);
			if (_203121_node._method_is_comment()) {
				jule::Ptr<_233464770_Directive> _203325_d = this->self->_method_get_directive(_203121_node._field_data.operator jule::Ptr<_233464770_Comment>());
				if ((_203325_d != nullptr) && _231e59e26_is_top_directive(_203325_d->_field_tag)) {
					this->self->_field_ast->_field_top_directives=jule::append(this->self->_field_ast->_field_top_directives,jule::Slice<jule::Ptr<_233464770_Directive>>({_203325_d}));
				}
			} else {
				goto _iter_end_4875675488;
			}
		}
	_iter_next_4875675488:;
	}
	_iter_end_4875675488:;
	this->self->_field_errors=nullptr;
	for (; _201517_i < _201217_stms.len(); (_201517_i)++) {
		{
			jule::Ptr<_2337c95da_Stmt> _204621_st = _201217_stms[_201517_i];
			this->self->_method_append_node(_204621_st->_field_tokens);
			if (this->self->_method_stopped()) {
				goto _iter_end_4875702832;
			}
		}
	_iter_next_4875702832:;
	}
	_iter_end_4875702832:;
}







std::ostream &operator<<(std::ostream &_Stream, const _23441cd43_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



void _23473c948_TypeBuilder::_method_push_err(_2336ea198_Token _7827_token,jule::Str _7841_fmt) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7827_token,_7841_fmt,jule::Slice<jule::Any>({}));
	}
}



void _23473c948_TypeBuilder::_method_push_suggestion(jule::Str _8534_fmt,jule::Slice<jule::Any> _8547_args) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_suggestion(_8534_fmt,_8547_args);
	}
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_prim(void) {
	jule::Ptr<_233464770_TypeDecl> _9217_t = _23473c948_build_prim_type((*this)._field_tokens[(*((*this)._field_i))]);
	((*((*this)._field_i)))++;
	return _9217_t;
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_namespace(void) {
	jule::Ptr<_233464770_TypeDecl> _9817_t = jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl((*this)._field_tokens[(*((*this)._field_i))],jule::Any()));
	jule::Ptr<_233464770_NamespaceTypeDecl> _10217_nst = jule::new_struct<_233464770_NamespaceTypeDecl>(new( std::nothrow ) _233464770_NamespaceTypeDecl());
	jule::Int _10317_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_2336ea198_Token _10521_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (jule::mod(_10317_n,2LL) == 0LL) {
				if (_10521_token._field_id != 2LLU) {
					(*this)._method_push_err(_10521_token,jule::Str("invalid syntax", 14));
					(*this)._method_push_suggestion(jule::Str("write an identifier because identifier expected", 47),jule::Slice<jule::Any>({}));
				}
				_10217_nst->_field_idents=jule::append(_10217_nst->_field_idents,jule::Slice<_2336ea198_Token>({_10521_token}));
			} else if (_10521_token._field_id != 23LLU) {
				goto _iter_end_4875726320;
			}
			(_10317_n)++;
		}
	_iter_next_4875726320:;
	}
	_iter_end_4875726320:;
	_10217_nst->_field_idents=_10217_nst->_field_idents.slice(0LL,_10217_nst->_field_idents.len() - 1LL);
	((*((*this)._field_i)))--;
	_10217_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ptr<_233464770_IdentTypeDecl>();
	_9817_t->_field_kind=jule::Any(_10217_nst);
	return _9817_t;
}



jule::Slice<jule::Ptr<_233464770_TypeDecl>> _23473c948_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_2336ea198_Token _13113_token = (*this)._field_tokens[(*((*this)._field_i))];
	if ((_13113_token._field_id != 3LLU) || (_13113_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_2336ea198_Token>> _13617_parts = (*this)._method_ident_generics();
	if (_13617_parts.len() == 0LL) {
		(*this)._method_push_err(_13113_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ptr<_233464770_TypeDecl>> _14217_types = jule::Slice<jule::Ptr<_233464770_TypeDecl>>::alloc(0LL,static_cast<jule::I64>(_13617_parts.len()));
	{
		auto expr = _13617_parts;
		auto it = expr.begin();
		_iter_begin_4875753216:;
		if (it != expr.end()) {
			jule::Slice<_2336ea198_Token> _23473c948_part = *it;
			{
				jule::Int _14421_j = 0LL;
				jule::Ptr<_233464770_TypeDecl> _14522_t;
				std::tie(_14522_t,std::ignore) = (*this)._field_p->_method_build_type(_23473c948_part,(&(_14421_j)),true);
				if (_14421_j < _23473c948_part.len()) {
					(*this)._method_push_err(_23473c948_part[_14421_j],jule::Str("invalid syntax", 14));
				}
				_14217_types=jule::append(_14217_types,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({_14522_t}));
			}
			_iter_next_4875753216:;
			++it;
			goto _iter_begin_4875753216;
		}
		_iter_end_4875753216:;
	}
	return _14217_types;
}



jule::Slice<jule::Slice<_2336ea198_Token>> _23473c948_TypeBuilder::_method_ident_generics(void) {
	jule::Int _15513_first = (*((*this)._field_i));
	jule::Int _15617_range_n = 0LL;
	for (; (*((*this)._field_i)) < (*this)._field_tokens.len(); ((*((*this)._field_i)))++) {
		{
			_2336ea198_Token _15817_token = (*this)._field_tokens[(*((*this)._field_i))];
			if (_15817_token._field_id == 3LLU) {
				{
					auto _match_expr{ _15817_token._field_kind };
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_4875765008; }
					_case_begin_4875765008:;
					{
						(_15617_range_n)++;
					}
					goto _match_end_4875764928;
					_case_end_4875765008:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4875765104; }
					_case_begin_4875765104:;
					{
						(_15617_range_n)--;
					}
					goto _match_end_4875764928;
					_case_end_4875765104:;
					_match_end_4875764928:;
				}
			}
			if (_15617_range_n == 0LL) {
				((*((*this)._field_i)))++;
				goto _iter_end_4875759184;
			}
		}
	_iter_next_4875759184:;
	}
	_iter_end_4875759184:;
	jule::Slice<_2336ea198_Token> _17017_tokens = (*this)._field_tokens.slice(_15513_first + 1LL,(*((*this)._field_i)) - 1LL);
	jule::Slice<jule::Slice<_2336ea198_Token>> _17118_parts;
	jule::Slice<_231e4202e_Log> _17125_errors;
	std::tie(_17118_parts,_17125_errors) = _23441cd43_parts(_17017_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=jule::append((*this)._field_p->_field_errors,_17125_errors);
	}
	return _17118_parts;
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_2336ea198_Token _18217_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_233464770_IdentTypeDecl> _18317_it = jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_18217_token,_18217_token._field_kind,false,jule::Slice<jule::Ptr<_233464770_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_18317_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_18217_token,jule::Any(_18317_it)));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[(*((*this)._field_i)) + 1LL]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i))],jule::Str("invalid syntax", 14));
		return nullptr;
	}
	(*((*this)._field_i))+=2LL;
	jule::Ptr<_233464770_TypeDecl> _20217_t = (*this)._method_build_ident();
	_20217_t->_field_kind.operator jule::Ptr<_233464770_IdentTypeDecl>()->_field_cpp_linked=true;
	return _20217_t;
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_fn(void) {
	_2336ea198_Token _20817_token = (*this)._field_tokens[(*((*this)._field_i))];
	jule::Ptr<_233464770_FnDecl> _20917_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false);
	if (_20917_f == nullptr) {
		return nullptr;
	}
	if ((!(_20917_f->_method_is_anon()))) {
		(*this)._method_push_err(_20917_f->_field_token,jule::Str("invalid syntax", 14));
	}
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_20817_token,jule::Any(_20917_f)));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_ptr(void) {
	_2336ea198_Token _22317_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_22317_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[(*((*this)._field_i))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_22317_token,jule::Any(jule::new_struct<_233464770_PtrTypeDecl>(new( std::nothrow ) _233464770_PtrTypeDecl(nullptr)))));
	}
	jule::Ptr<_233464770_TypeDecl> _24017_elem = (*this)._method_step();
	if (_24017_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_22317_token,jule::Any(jule::new_struct<_233464770_PtrTypeDecl>(new( std::nothrow ) _233464770_PtrTypeDecl(_24017_elem)))));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_sptr(void) {
	_2336ea198_Token _25417_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_25417_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	jule::Ptr<_233464770_TypeDecl> _26117_elem = (*this)._method_step();
	if (_26117_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_25417_token,jule::Any(jule::new_struct<_233464770_SptrTypeDecl>(new( std::nothrow ) _233464770_SptrTypeDecl(_26117_elem)))));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_op(void) {
	_2336ea198_Token _27517_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto _match_expr{ _27517_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4875824496; }
		_case_begin_4875824496:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4875822560;
		_case_end_4875824496:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4875824592; }
		_case_begin_4875824592:;
		{
			return (*this)._method_build_sptr();
		}
		goto _match_end_4875822560;
		_case_end_4875824592:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4875824688; }
		_case_begin_4875824688:;
		{
			return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2336ea198_Token(),jule::Any(jule::new_struct<_233464770_SptrTypeDecl>(new( std::nothrow ) _233464770_SptrTypeDecl((*this)._method_build_sptr())))));
		}
		goto _match_end_4875822560;
		_case_end_4875824688:;
		_case_begin_4875820704:;
		{
			(*this)._method_push_err(_27517_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		goto _match_end_4875822560;
		_case_end_4875820704:;
		_match_end_4875822560:;
	}
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_slc(void) {
	_2336ea198_Token _29717_token = (*this)._field_tokens[(*((*this)._field_i))];
	((*((*this)._field_i)))++;
	jule::Ptr<_233464770_TypeDecl> _29917_elem = (*this)._method_step();
	if (_29917_elem == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_29717_token,jule::Any(jule::new_struct<_233464770_SlcTypeDecl>(new( std::nothrow ) _233464770_SlcTypeDecl(_29917_elem)))));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[(*((*this)._field_i)) - 1LL],jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Int _32013_expr_delta = (*((*this)._field_i));
	jule::Ptr<_233464770_TypeDecl> _32217_elem = (*this)._method_step();
	if (_32217_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_233464770_ArrTypeDecl> _32717_arrt = jule::new_struct<_233464770_ArrTypeDecl>(new( std::nothrow ) _233464770_ArrTypeDecl(_32217_elem,jule::Ptr<_233464770_Expr>()));
	jule::Slice<_2336ea198_Token> _33117_expr_tokens = (*this)._field_tokens.slice(0LL,_32013_expr_delta);
	std::tie(std::ignore,_33117_expr_tokens) = _23441cd43_range_last(_33117_expr_tokens);
	_33117_expr_tokens=_33117_expr_tokens.slice(1LL,_33117_expr_tokens.len() - 1LL);
	_2336ea198_Token _33417_token = _33117_expr_tokens[0LL];
	if (((_33117_expr_tokens.len() == 1LL) && (_33417_token._field_id == 7LLU)) && (_33417_token._field_kind == jule::Str("...", 3))) {
	} else {
		_32717_arrt->_field_size=(*this)._field_p->_method_build_expr(_33117_expr_tokens);
	}
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_33417_token,jule::Any(_32717_arrt)));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_map(jule::Int _34728_colon,jule::Slice<_2336ea198_Token>& _34745_tokens) {
	_2336ea198_Token _34817_colon_token = (*this)._field_tokens[_34728_colon];
	if ((_34728_colon == 0LL) || ((_34728_colon + 1LL) >= _34745_tokens.len())) {
		(*this)._method_push_err(_34817_colon_token,jule::Str("data-type missing", 17));
		return nullptr;
	}
	jule::Slice<_2336ea198_Token> _35317_key_tokens = _34745_tokens.slice(0LL,_34728_colon);
	jule::Slice<_2336ea198_Token> _35417_val_tokens = _34745_tokens.slice(_34728_colon + 1LL);
	jule::Ptr<_233464770_MapTypeDecl> _35517_mapt = jule::new_struct<_233464770_MapTypeDecl>(new( std::nothrow ) _233464770_MapTypeDecl());
	jule::Int _35717_j = 0LL;
	jule::Ptr<_233464770_TypeDecl> _35818_keyt;
	jule::Bool _35828_ok;
	std::tie(_35818_keyt,_35828_ok) = (*this)._field_p->_method_build_type(_35317_key_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35317_key_tokens.len()) {
		(*this)._method_push_err(_35317_key_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_key=_35818_keyt;
	_35717_j=0LL;
	jule::Ptr<_233464770_TypeDecl> _36718_valt;
	std::tie(_36718_valt,_35828_ok) = (*this)._field_p->_method_build_type(_35417_val_tokens,(&(_35717_j)),(*this)._field_err);
	if ((!(_35828_ok))) {
		return nullptr;
	} else if (_35717_j < _35417_val_tokens.len()) {
		(*this)._method_push_err(_35417_val_tokens[_35717_j],jule::Str("invalid syntax", 14));
	}
	_35517_mapt->_field_val=_36718_valt;
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_34817_colon_token,jule::Any(_35517_mapt)));
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_build_enumerable(void) {
	_2336ea198_Token _38217_token = (*this)._field_tokens[(*((*this)._field_i))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_38217_token._field_id != 3LLU)) || (_38217_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_38217_token,jule::Str("invalid syntax", 14));
		return nullptr;
	}
	((*((*this)._field_i)))++;
	_38217_token=(*this)._field_tokens[(*((*this)._field_i))];
	if ((_38217_token._field_id == 3LLU) && (_38217_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_2336ea198_Token> _39618_map_tokens;
	jule::Int _39630_colon;
	std::tie(_39618_map_tokens,_39630_colon) = _23473c948_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_39630_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_39630_colon,_39618_map_tokens);
}



jule::Ptr<_233464770_TypeDecl> _23473c948_TypeBuilder::_method_step(void) {
	_2336ea198_Token _40513_token = (*this)._field_tokens[(*((*this)._field_i))];
	{
		auto _match_expr{ _40513_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_4875903360; }
		_case_begin_4875903360:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4875903072;
		_case_end_4875903360:;
		if (!((2LLU) == _match_expr)) { goto _case_end_4875903456; }
		_case_begin_4875903456:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4875903072;
		_case_end_4875903456:;
		if (!((31LLU) == _match_expr)) { goto _case_end_4875903552; }
		_case_begin_4875903552:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4875903072;
		_case_end_4875903552:;
		if (!((33LLU) == _match_expr)) { goto _case_end_4875903648; }
		_case_begin_4875903648:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4875903072;
		_case_end_4875903648:;
		if (!((7LLU) == _match_expr)) { goto _case_end_4875905552; }
		_case_begin_4875905552:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4875903072;
		_case_end_4875905552:;
		if (!((3LLU) == _match_expr)) { goto _case_end_4875905648; }
		_case_begin_4875905648:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4875903072;
		_case_end_4875905648:;
		_case_begin_4875901360:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_40513_token,jule::Str("invalid syntax", 14));
			return nullptr;
		}
		goto _match_end_4875903072;
		_case_end_4875901360:;
		_match_end_4875903072:;
	}
}



std::tuple<jule::Ptr<_233464770_TypeDecl>,jule::Bool> _23473c948_TypeBuilder::_method_build(void) {
	jule::Bool _43444_ok = jule::Bool();
	jule::Ptr<_233464770_TypeDecl> _43517_root = (*this)._method_step();
	if (_43517_root == nullptr) {
		_43444_ok = false;
		return std::make_tuple(_23473c948_build_void_type(),_43444_ok);
	}
	_43444_ok = true;
	return std::make_tuple(_43517_root,_43444_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _23473c948_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_1d68bd462_Const> _1d68bd462_Const::_static_method_new_i64(jule::I64 _1327_x) {
	return jule::new_struct<_1d68bd462_Const>(new( std::nothrow ) _1d68bd462_Const(jule::Any(_1327_x)));
}



jule::Ptr<_1d68bd462_Const> _1d68bd462_Const::_static_method_new_u64(jule::U64 _1527_x) {
	return jule::new_struct<_1d68bd462_Const>(new( std::nothrow ) _1d68bd462_Const(jule::Any(_1527_x)));
}



jule::Ptr<_1d68bd462_Const> _1d68bd462_Const::_static_method_new_bool(jule::Bool _1728_x) {
	return jule::new_struct<_1d68bd462_Const>(new( std::nothrow ) _1d68bd462_Const(jule::Any(_1728_x)));
}



jule::Ptr<_1d68bd462_Const> _1d68bd462_Const::_static_method_new_str(jule::Str _1927_x) {
	return jule::new_struct<_1d68bd462_Const>(new( std::nothrow ) _1d68bd462_Const(jule::Any(_1927_x)));
}



jule::Ptr<_1d68bd462_Const> _1d68bd462_Const::_static_method_new_f64(jule::F64 _2127_x) {
	return jule::new_struct<_1d68bd462_Const>(new( std::nothrow ) _1d68bd462_Const(jule::Any(_2127_x)));
}



jule::Ptr<_1d68bd462_Const> _1d68bd462_Const::_static_method_new_nil(void) {
	return jule::new_struct<_1d68bd462_Const>(new( std::nothrow ) _1d68bd462_Const(jule::Any(nullptr)));
}



jule::I64 _1d68bd462_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



jule::U64 _1d68bd462_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



jule::Bool _1d68bd462_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



jule::Str _1d68bd462_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str();
	}
	return (*this)._field_data.operator jule::Str();
}



jule::F64 _1d68bd462_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



jule::I64 _1d68bd462_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4875990560; }
		_case_begin_4875990560:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4875989264;
		_case_end_4875990560:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4875990896; }
		_case_begin_4875990896:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4875989264;
		_case_end_4875990896:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4875990992; }
		_case_begin_4875990992:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4875989264;
		_case_end_4875990992:;
		_case_begin_4875988736:;
		{
			return 0LL;
		}
		goto _match_end_4875989264;
		_case_end_4875988736:;
		_match_end_4875989264:;
	}
}



jule::U64 _1d68bd462_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4875996064; }
		_case_begin_4875996064:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4875989824;
		_case_end_4875996064:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4875996400; }
		_case_begin_4875996400:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4875989824;
		_case_end_4875996400:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4875996496; }
		_case_begin_4875996496:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4875989824;
		_case_end_4875996496:;
		_case_begin_4875994160:;
		{
			return 0LL;
		}
		goto _match_end_4875989824;
		_case_end_4875994160:;
		_match_end_4875989824:;
	}
}



jule::F64 _1d68bd462_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4876002304; }
		_case_begin_4876002304:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4876001008;
		_case_end_4876002304:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4876002640; }
		_case_begin_4876002640:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4876001008;
		_case_end_4876002640:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4876002736; }
		_case_begin_4876002736:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4876001008;
		_case_end_4876002736:;
		_case_begin_4876000496:;
		{
			return 0LL;
		}
		goto _match_end_4876001008;
		_case_end_4876000496:;
		_match_end_4876001008:;
	}
}



void _1d68bd462_Const::_method_set_i64(jule::I64 _13930_x) {
	(*this)._field_data=jule::Any(_13930_x);
}



void _1d68bd462_Const::_method_set_u64(jule::U64 _14130_x) {
	(*this)._field_data=jule::Any(_14130_x);
}



void _1d68bd462_Const::_method_set_bool(jule::Bool _14331_x) {
	(*this)._field_data=jule::Any(_14331_x);
}



void _1d68bd462_Const::_method_set_str(jule::Str _14530_x) {
	(*this)._field_data=jule::Any(_14530_x);
}



void _1d68bd462_Const::_method_set_f64(jule::F64 _14730_x) {
	(*this)._field_data=jule::Any(_14730_x);
}



void _1d68bd462_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



jule::Bool _1d68bd462_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4876021168; }
		_case_begin_4876021168:;
		{
			return true;
		}
		goto _match_end_4876020768;
		_case_end_4876021168:;
		_case_begin_4876020000:;
		{
			return false;
		}
		goto _match_end_4876020768;
		_case_end_4876020000:;
		_match_end_4876020768:;
	}
}



jule::Bool _1d68bd462_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4876023408; }
		_case_begin_4876023408:;
		{
			return true;
		}
		goto _match_end_4876023056;
		_case_end_4876023408:;
		_case_begin_4876022480:;
		{
			return false;
		}
		goto _match_end_4876023056;
		_case_end_4876022480:;
		_match_end_4876023056:;
	}
}



jule::Bool _1d68bd462_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4876025680; }
		_case_begin_4876025680:;
		{
			return true;
		}
		goto _match_end_4876025328;
		_case_end_4876025680:;
		_case_begin_4876024752:;
		{
			return false;
		}
		goto _match_end_4876025328;
		_case_end_4876024752:;
		_match_end_4876025328:;
	}
}



jule::Bool _1d68bd462_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4876027952; }
		_case_begin_4876027952:;
		{
			return true;
		}
		goto _match_end_4876027600;
		_case_end_4876027952:;
		_case_begin_4876027024:;
		{
			return false;
		}
		goto _match_end_4876027600;
		_case_end_4876027024:;
		_match_end_4876027600:;
	}
}



jule::Bool _1d68bd462_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4876030224; }
		_case_begin_4876030224:;
		{
			return true;
		}
		goto _match_end_4876029872;
		_case_end_4876030224:;
		_case_begin_4876029296:;
		{
			return false;
		}
		goto _match_end_4876029872;
		_case_end_4876029296:;
		_match_end_4876029872:;
	}
}



jule::Bool _1d68bd462_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



jule::Bool _1d68bd462_Const::_method_are_same_types(_1d68bd462_Const _19933_x) {
	{
		if (!(((*this)._method_is_i64() == _19933_x._method_is_i64()))) { goto _case_end_4876037120; }
		_case_begin_4876037120:;
		{
			return true;
		}
		goto _match_end_4876035264;
		_case_end_4876037120:;
		if (!(((*this)._method_is_u64() == _19933_x._method_is_u64()))) { goto _case_end_4876037216; }
		_case_begin_4876037216:;
		{
			return true;
		}
		goto _match_end_4876035264;
		_case_end_4876037216:;
		if (!(((*this)._method_is_f64() == _19933_x._method_is_f64()))) { goto _case_end_4876035728; }
		_case_begin_4876035728:;
		{
			return true;
		}
		goto _match_end_4876035264;
		_case_end_4876035728:;
		if (!(((*this)._method_is_bool() == _19933_x._method_is_bool()))) { goto _case_end_4876035824; }
		_case_begin_4876035824:;
		{
			return true;
		}
		goto _match_end_4876035264;
		_case_end_4876035824:;
		if (!(((*this)._method_is_str() == _19933_x._method_is_str()))) { goto _case_end_4876035920; }
		_case_begin_4876035920:;
		{
			return true;
		}
		goto _match_end_4876035264;
		_case_end_4876035920:;
		if (!(((*this)._method_is_nil() == _19933_x._method_is_nil()))) { goto _case_end_4876036016; }
		_case_begin_4876036016:;
		{
			return true;
		}
		goto _match_end_4876035264;
		_case_end_4876036016:;
		_case_begin_4876035440:;
		{
			return false;
		}
		goto _match_end_4876035264;
		_case_end_4876035440:;
		_match_end_4876035264:;
	}
}



jule::Bool _1d68bd462_Const::_method_and(_1d68bd462_Const _21722_x) {
	{
		if (!(((*this)._method_is_bool() && _21722_x._method_is_bool()))) { goto _case_end_4876047552; }
		_case_begin_4876047552:;
		{
			return (*this)._method_read_bool() && _21722_x._method_read_bool();
		}
		goto _match_end_4876045776;
		_case_end_4876047552:;
		_case_begin_4876045952:;
		{
			return false;
		}
		goto _match_end_4876045776;
		_case_end_4876045952:;
		_match_end_4876045776:;
	}
}



jule::Bool _1d68bd462_Const::_method_or(_1d68bd462_Const _22921_x) {
	{
		if (!(((*this)._method_is_bool() && _22921_x._method_is_bool()))) { goto _case_end_4876052656; }
		_case_begin_4876052656:;
		{
			return (*this)._method_read_bool() || _22921_x._method_read_bool();
		}
		goto _match_end_4876050880;
		_case_end_4876052656:;
		_case_begin_4876051056:;
		{
			return false;
		}
		goto _match_end_4876050880;
		_case_end_4876051056:;
		_match_end_4876050880:;
	}
}



jule::Bool _1d68bd462_Const::_method_eqs(_1d68bd462_Const _24122_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_4876057680; }
		_case_begin_4876057680:;
		{
			return _24122_x._method_is_nil();
		}
		goto _match_end_4876055824;
		_case_end_4876057680:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_4876057776; }
		_case_begin_4876057776:;
		{
			return _24122_x._method_is_bool() && ((*this)._method_read_bool() == _24122_x._method_read_bool());
		}
		goto _match_end_4876055824;
		_case_end_4876057776:;
		if (!(((*this)._method_is_str()))) { goto _case_end_4876056288; }
		_case_begin_4876056288:;
		{
			return _24122_x._method_is_str() && ((*this)._method_read_str() == _24122_x._method_read_str());
		}
		goto _match_end_4876055824;
		_case_end_4876056288:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876056384; }
		_case_begin_4876056384:;
		{
			return (*this)._method_read_i64() == _24122_x._method_as_i64();
		}
		goto _match_end_4876055824;
		_case_end_4876056384:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876056480; }
		_case_begin_4876056480:;
		{
			return (*this)._method_read_u64() == _24122_x._method_as_u64();
		}
		goto _match_end_4876055824;
		_case_end_4876056480:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876056576; }
		_case_begin_4876056576:;
		{
			return (*this)._method_read_f64() == _24122_x._method_as_f64();
		}
		goto _match_end_4876055824;
		_case_end_4876056576:;
		_case_begin_4876056000:;
		{
			return false;
		}
		goto _match_end_4876055824;
		_case_end_4876056000:;
		_match_end_4876055824:;
	}
}



jule::Bool _1d68bd462_Const::_method_lt(_1d68bd462_Const _27321_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876071088; }
		_case_begin_4876071088:;
		{
			return (*this)._method_read_i64() < _27321_x._method_as_i64();
		}
		goto _match_end_4876069280;
		_case_end_4876071088:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876071184; }
		_case_begin_4876071184:;
		{
			return (*this)._method_read_u64() < _27321_x._method_as_u64();
		}
		goto _match_end_4876069280;
		_case_end_4876071184:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876071296; }
		_case_begin_4876071296:;
		{
			return (*this)._method_read_f64() < _27321_x._method_as_f64();
		}
		goto _match_end_4876069280;
		_case_end_4876071296:;
		_case_begin_4876069456:;
		{
			return false;
		}
		goto _match_end_4876069280;
		_case_end_4876069456:;
		_match_end_4876069280:;
	}
}



jule::Bool _1d68bd462_Const::_method_gt(_1d68bd462_Const _29621_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876078672; }
		_case_begin_4876078672:;
		{
			return (*this)._method_read_i64() > _29621_x._method_as_i64();
		}
		goto _match_end_4876076864;
		_case_end_4876078672:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876078768; }
		_case_begin_4876078768:;
		{
			return (*this)._method_read_u64() > _29621_x._method_as_u64();
		}
		goto _match_end_4876076864;
		_case_end_4876078768:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876078880; }
		_case_begin_4876078880:;
		{
			return (*this)._method_read_f64() > _29621_x._method_as_f64();
		}
		goto _match_end_4876076864;
		_case_end_4876078880:;
		_case_begin_4876077040:;
		{
			return false;
		}
		goto _match_end_4876076864;
		_case_end_4876077040:;
		_match_end_4876076864:;
	}
}



jule::Bool _1d68bd462_Const::_method_add(_1d68bd462_Const _31826_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_4876086592; }
		_case_begin_4876086592:;
		{
			if ((!(_31826_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _31826_x._method_read_str());
		}
		goto _match_end_4876084768;
		_case_end_4876086592:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876086688; }
		_case_begin_4876086688:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() + _31826_x._method_as_f64()));
		}
		goto _match_end_4876084768;
		_case_end_4876086688:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876086800; }
		_case_begin_4876086800:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() + _31826_x._method_as_i64()));
			}
		}
		goto _match_end_4876084768;
		_case_end_4876086800:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876085232; }
		_case_begin_4876085232:;
		{
			if (_31826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() + _31826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() + _31826_x._method_as_u64()));
			}
		}
		goto _match_end_4876084768;
		_case_end_4876085232:;
		_case_begin_4876084944:;
		{
			return false;
		}
		goto _match_end_4876084768;
		_case_end_4876084944:;
		_match_end_4876084768:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_sub(_1d68bd462_Const _35126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876104224; }
		_case_begin_4876104224:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() - _35126_x._method_as_f64()));
		}
		goto _match_end_4876102416;
		_case_end_4876104224:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876104320; }
		_case_begin_4876104320:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() - _35126_x._method_as_i64()));
			}
		}
		goto _match_end_4876102416;
		_case_end_4876104320:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876104432; }
		_case_begin_4876104432:;
		{
			if (_35126_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() - _35126_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() - _35126_x._method_as_u64()));
			}
		}
		goto _match_end_4876102416;
		_case_end_4876104432:;
		_case_begin_4876102592:;
		{
			return false;
		}
		goto _match_end_4876102416;
		_case_end_4876102592:;
		_match_end_4876102416:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_mul(_1d68bd462_Const _37826_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876119056; }
		_case_begin_4876119056:;
		{
			(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_read_f64() * _37826_x._method_as_f64()));
		}
		goto _match_end_4876117248;
		_case_end_4876119056:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876119152; }
		_case_begin_4876119152:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() * _37826_x._method_as_i64()));
			}
		}
		goto _match_end_4876117248;
		_case_end_4876119152:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876119264; }
		_case_begin_4876119264:;
		{
			if (_37826_x._method_is_f64()) {
				(*this)._method_set_f64(static_cast<jule::F64>((*this)._method_as_f64() * _37826_x._method_read_f64()));
			} else {
				(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() * _37826_x._method_as_u64()));
			}
		}
		goto _match_end_4876117248;
		_case_end_4876119264:;
		_case_begin_4876117424:;
		{
			return false;
		}
		goto _match_end_4876117248;
		_case_end_4876117424:;
		_match_end_4876117248:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_div(_1d68bd462_Const _40926_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_4876133504; }
		_case_begin_4876133504:;
		{
			jule::F64 _41217_l = _40926_x._method_as_f64();
			if (_41217_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_41217_l)));
		}
		goto _match_end_4876131696;
		_case_end_4876133504:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876133600; }
		_case_begin_4876133600:;
		{
			jule::F64 _41917_l = _40926_x._method_as_f64();
			if (_41917_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_41917_l)));
		}
		goto _match_end_4876131696;
		_case_end_4876133600:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876133712; }
		_case_begin_4876133712:;
		{
			jule::F64 _42617_l = _40926_x._method_as_f64();
			if (_42617_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_42617_l)));
		}
		goto _match_end_4876131696;
		_case_end_4876133712:;
		_case_begin_4876131872:;
		{
			return false;
		}
		goto _match_end_4876131696;
		_case_end_4876131872:;
		_match_end_4876131696:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_mod(_1d68bd462_Const _44126_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876147872; }
		_case_begin_4876147872:;
		{
			jule::I64 _44417_l = _44126_x._method_as_i64();
			if (_44417_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>(jule::mod((*this)._method_read_i64(),_44417_l)));
		}
		goto _match_end_4876146080;
		_case_end_4876147872:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876147968; }
		_case_begin_4876147968:;
		{
			jule::U64 _45117_l = _44126_x._method_as_u64();
			if (_45117_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>(jule::mod((*this)._method_read_u64(),_45117_l)));
		}
		goto _match_end_4876146080;
		_case_end_4876147968:;
		_case_begin_4876146256:;
		{
			return false;
		}
		goto _match_end_4876146080;
		_case_end_4876146256:;
		_match_end_4876146080:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_bitwise_and(_1d68bd462_Const _46534_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876158608; }
		_case_begin_4876158608:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _46534_x._method_as_i64()));
		}
		goto _match_end_4876156816;
		_case_end_4876158608:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876158704; }
		_case_begin_4876158704:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _46534_x._method_as_u64()));
		}
		goto _match_end_4876156816;
		_case_end_4876158704:;
		_case_begin_4876156992:;
		{
			return false;
		}
		goto _match_end_4876156816;
		_case_end_4876156992:;
		_match_end_4876156816:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_bitwise_or(_1d68bd462_Const _48133_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876166272; }
		_case_begin_4876166272:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _48133_x._method_as_i64()));
		}
		goto _match_end_4876164480;
		_case_end_4876166272:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876166368; }
		_case_begin_4876166368:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _48133_x._method_as_u64()));
		}
		goto _match_end_4876164480;
		_case_end_4876166368:;
		_case_begin_4876164656:;
		{
			return false;
		}
		goto _match_end_4876164480;
		_case_end_4876164656:;
		_match_end_4876164480:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_xor(_1d68bd462_Const _49726_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876173808; }
		_case_begin_4876173808:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _49726_x._method_as_i64()));
		}
		goto _match_end_4876172016;
		_case_end_4876173808:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876173904; }
		_case_begin_4876173904:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _49726_x._method_as_u64()));
		}
		goto _match_end_4876172016;
		_case_end_4876173904:;
		_case_begin_4876172192:;
		{
			return false;
		}
		goto _match_end_4876172016;
		_case_end_4876172192:;
		_match_end_4876172016:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_lshift(_1d68bd462_Const _51329_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876181472; }
		_case_begin_4876181472:;
		{
			jule::I64 _51617_l = (*this)._method_as_i64();
			if (_51617_l < 0LL) {
				jule::U64 _51821_r = _51329_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_51617_l << _51821_r));
			} else {
				_1d68bd462_lshift_unsig((*this),_51329_x);
			}
		}
		goto _match_end_4876179680;
		_case_end_4876181472:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876181568; }
		_case_begin_4876181568:;
		{
			_1d68bd462_lshift_unsig((*this),_51329_x);
		}
		goto _match_end_4876179680;
		_case_end_4876181568:;
		_case_begin_4876179856:;
		{
			return false;
		}
		goto _match_end_4876179680;
		_case_end_4876179856:;
		_match_end_4876179680:;
	}
	return true;
}



jule::Bool _1d68bd462_Const::_method_rshift(_1d68bd462_Const _53629_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_4876190720; }
		_case_begin_4876190720:;
		{
			jule::I64 _53917_l = (*this)._method_as_i64();
			if (_53917_l < 0LL) {
				jule::U64 _54121_r = _53629_x._method_as_u64();
				(*this)._method_set_i64(static_cast<jule::I64>(_53917_l >> _54121_r));
			} else {
				_1d68bd462_rshift_unsig((*this),_53629_x);
			}
		}
		goto _match_end_4876188928;
		_case_end_4876190720:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_4876190816; }
		_case_begin_4876190816:;
		{
			_1d68bd462_rshift_unsig((*this),_53629_x);
		}
		goto _match_end_4876188928;
		_case_end_4876190816:;
		_case_begin_4876189104:;
		{
			return false;
		}
		goto _match_end_4876188928;
		_case_end_4876189104:;
		_match_end_4876188928:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d68bd462_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23461aa35_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _23461aa35_StructIns::_method_to_str(void) {
	jule::Str _22117_kind = jule::Str();
	_22117_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_22117_kind+=jule::Str("[", 1);
		{
			auto expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4878329536:;
			if (it != expr.end()) {
				jule::Ptr<_200d010d9_TypeKind> _23461aa35_g = *it;
				{
					_22117_kind+=_23461aa35_g->_method_to_str();
					_22117_kind+=jule::Str(",", 1);
				}
				_iter_next_4878329536:;
				++it;
				goto _iter_begin_4878329536;
			}
			_iter_end_4878329536:;
		}
		_22117_kind=_22117_kind.slice(0LL,_22117_kind.len() - 1LL);
		_22117_kind+=jule::Str("]", 1);
	}
	return _22117_kind;
}



jule::Bool _23461aa35_StructIns::_method_equals(jule::Ptr<_200d010d9_TypeKind> _23622_other) {
	jule::Ptr<_23461aa35_StructIns> _23713_s = (*((&(_23622_other))))->_method_strct();
	if (_23713_s == nullptr) {
		return false;
	}
	if (this->self->_field_decl != _23713_s->_field_decl) {
		return false;
	}
	if (this->self->_field_generics.len() != _23713_s->_field_generics.len()) {
		return false;
	}
	jule::Int _25017_i = 0LL;
	for (; _25017_i < this->self->_field_generics.len(); (_25017_i)++) {
		{
			if ((!(this->self->_field_generics[_25017_i]->_method_equals(_23713_s->_field_generics[_25017_i])))) {
				return false;
			}
		}
	_iter_next_4878338928:;
	}
	_iter_end_4878338928:;
	return true;
}



jule::Bool _23461aa35_StructIns::_method_same(jule::Ptr<_23461aa35_StructIns> _26423_s) {
	if (((*this)._field_decl != _26423_s->_field_decl) || (_26423_s->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4878348496:;
		if (it != expr.end()) {
			jule::Int _23461aa35_i = it - expr.begin();
			jule::Ptr<_200d010d9_TypeKind> _23461aa35_g = *it;
			{
				if ((!(_23461aa35_g->_method_equals(_26423_s->_field_generics[_23461aa35_i])))) {
					return false;
				}
			}
			_iter_next_4878348496:;
			++it;
			_23461aa35_i++;
			goto _iter_begin_4878348496;
		}
		_iter_end_4878348496:;
	}
	return true;
}



jule::Ptr<_2185d51ad_Fn> _23461aa35_StructIns::_method_find_method(jule::Str _27934_ident,jule::Bool _27946_statically) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4878354928:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _23461aa35_f = *it;
			{
				if ((_23461aa35_f->_field_statically == _27946_statically) && (_23461aa35_f->_field_ident == _27934_ident)) {
					return _23461aa35_f;
				}
			}
			_iter_next_4878354928:;
			++it;
			goto _iter_begin_4878354928;
		}
		_iter_end_4878354928:;
	}
	return nullptr;
}



jule::Ptr<_23461aa35_FieldIns> _23461aa35_StructIns::_method_find_field(jule::Str _29033_ident) {
	{
		auto expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4878359712:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_FieldIns> _23461aa35_f = *it;
			{
				if (_23461aa35_f->_field_decl->_field_ident == _29033_ident) {
					return _23461aa35_f;
				}
			}
			_iter_next_4878359712:;
			++it;
			goto _iter_begin_4878359712;
		}
		_iter_end_4878359712:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _23461aa35_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "references:" << _Src._field_references;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2185d51ad_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



jule::Str _2185d51ad_ParamIns::_method_to_str(void) {
	jule::Str _17917_s = jule::Str();
	if ((*this)._field_decl->_field_mutable) {
		_17917_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_17917_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_17917_s+=jule::Str("&", 1);
		}
		_17917_s+=jule::Str("self", 4);
		return _17917_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_17917_s+=jule::Str("...", 3);
	}
	if ((*this)._field_kind != nullptr) {
		_17917_s+=(*this)._field_kind->_method_to_str();
	}
	return _17917_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _2185d51ad_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _2185d51ad_FnIns::_method_to_str(void) {
	
	return (*this)._method_get_kind_str(false);
}



jule::Bool _2185d51ad_FnIns::_method_equals(jule::Ptr<_200d010d9_TypeKind> _23422_other) {
	jule::Ptr<_2185d51ad_FnIns> _23513_f = (*((&(_23422_other))))->_method_fnc();
	if (_23513_f == nullptr) {
		return false;
	}
	if (this->self->_field_decl->_field_statically != _23513_f->_field_decl->_field_statically) {
		return false;
	}
	if (this->self->_field_decl->_field_unsafety != _23513_f->_field_decl->_field_unsafety) {
		return false;
	}
	if (this->self->_field_generics.len() != _23513_f->_field_generics.len()) {
		return false;
	}
	if (this->self->_field_decl->_method_is_void() != _23513_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _25617_i = 0LL;
	for (; _25617_i < this->self->_field_generics.len(); (_25617_i)++) {
		{
			if ((!(this->self->_field_generics[_25617_i]->_method_equals(_23513_f->_field_generics[_25617_i])))) {
				return false;
			}
		}
	_iter_next_4878441024:;
	}
	_iter_end_4878441024:;
	jule::Fn<jule::Bool(jule::Ptr<_2185d51ad_ParamIns>,jule::Ptr<_2185d51ad_ParamIns>)> _26313_check_params = jule::Fn<jule::Bool(jule::Ptr<_2185d51ad_ParamIns>,jule::Ptr<_2185d51ad_ParamIns>)>([=](jule::Ptr<_2185d51ad_ParamIns> _26331_p1,jule::Ptr<_2185d51ad_ParamIns> _26346_p2) mutable -> jule::Bool {
		if (_26331_p1->_field_decl->_field_mutable != _26346_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_26331_p1->_field_decl->_method_is_self()) {
			if ((!(_26346_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_26331_p1->_field_decl->_method_is_ref() != _26346_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_26331_p1->_field_decl->_field_reference != _26346_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_26331_p1->_field_decl->_field_variadic != _26346_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _26331_p1->_field_kind->_method_equals(_26346_p2->_field_kind);
	});
	_25617_i=0LL;
	for (; _25617_i < this->self->_field_params.len(); (_25617_i)++) {
		{
			if ((!(_26313_check_params(this->self->_field_params[_25617_i],_23513_f->_field_params[_25617_i])))) {
				return false;
			}
		}
	_iter_next_4878456464:;
	}
	_iter_end_4878456464:;
	if ((!(this->self->_field_decl->_method_is_void()))) {
		if ((!(this->self->_field_result->_method_equals(_23513_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



jule::Bool _2185d51ad_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



jule::Bool _2185d51ad_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (((*this)._field_decl != nullptr) && (*this)._field_decl->_method_is_anon());
}



jule::Bool _2185d51ad_FnIns::_method_same(jule::Ptr<_2185d51ad_FnIns> _31723_f) {
	if (((*this)._field_decl != _31723_f->_field_decl) || (_31723_f->_field_generics.len() != (*this)._field_generics.len())) {
		return false;
	}
	{
		auto expr = (*this)._field_generics;
		auto it = expr.begin();
		_iter_begin_4878471936:;
		if (it != expr.end()) {
			jule::Int _2185d51ad_i = it - expr.begin();
			jule::Ptr<_200d010d9_TypeKind> _2185d51ad_g = *it;
			{
				if ((!(_2185d51ad_g->_method_equals(_31723_f->_field_generics[_2185d51ad_i])))) {
					return false;
				}
			}
			_iter_next_4878471936:;
			++it;
			_2185d51ad_i++;
			goto _iter_begin_4878471936;
		}
		_iter_end_4878471936:;
	}
	return true;
}



jule::Str _2185d51ad_FnIns::_method_get_kind_str(jule::Bool _33331_ident) {
	jule::Str _33417_s = jule::Str();
	if ((*this)._field_decl->_field_statically) {
		_33417_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_33417_s+=jule::Str("unsafe ", 7);
	}
	_33417_s+=jule::Str("fn", 2);
	if (_33331_ident && ((*this)._field_decl != nullptr)) {
		_33417_s+=jule::Str(" ", 1) + (*this)._field_decl->_field_ident;
	}
	if ((*this)._field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			auto expr = (*this)._field_generics;
			auto it = expr.begin();
			_iter_begin_4878482400:;
			if (it != expr.end()) {
				jule::Int _2185d51ad_i = it - expr.begin();
				jule::Ptr<_200d010d9_TypeKind> _2185d51ad_t = *it;
				{
					_33417_s+=_2185d51ad_t->_method_to_str();
					if ((_2185d51ad_i + 1LL) < (*this)._field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4878482400:;
				++it;
				_2185d51ad_i++;
				goto _iter_begin_4878482400;
			}
			_iter_end_4878482400:;
		}
		_33417_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_33417_s+=jule::Str("[", 1);
		{
			auto expr = (*this)._field_decl->_field_generics;
			auto it = expr.begin();
			_iter_begin_4878487088:;
			if (it != expr.end()) {
				jule::Int _2185d51ad_i = it - expr.begin();
				jule::Ptr<_233464770_GenericDecl> _2185d51ad_g = *it;
				{
					_33417_s+=_2185d51ad_g->_field_ident;
					if ((_2185d51ad_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_33417_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4878487088:;
				++it;
				_2185d51ad_i++;
				goto _iter_begin_4878487088;
			}
			_iter_end_4878487088:;
		}
		_33417_s+=jule::Str("]", 1);
	}
	_33417_s+=jule::Str("(", 1);
	jule::I64 _37113_n = (*this)._field_params.len();
	if (_37113_n > 0LL) {
		{
			auto expr = (*this)._field_params;
			auto it = expr.begin();
			_iter_begin_4878493344:;
			if (it != expr.end()) {
				jule::Ptr<_2185d51ad_ParamIns> _2185d51ad_p = *it;
				{
					_33417_s+=_2185d51ad_p->_method_to_str();
					_33417_s+=jule::Str(",", 1);
				}
				_iter_next_4878493344:;
				++it;
				goto _iter_begin_4878493344;
			}
			_iter_end_4878493344:;
		}
		_33417_s=_33417_s.slice(0LL,_33417_s.len() - 1LL);
	}
	_33417_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_33417_s+=jule::Str(":", 1);
		_33417_s+=(*this)._field_result->_method_to_str();
	}
	return _33417_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _2185d51ad_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_21862cb1d_ReferenceStack> _21862cb1d_ReferenceStack::_static_method_new(void) {
	return jule::new_struct<_21862cb1d_ReferenceStack>(new( std::nothrow ) _21862cb1d_ReferenceStack());
}



jule::Int _21862cb1d_ReferenceStack::_method_len(void) {
	return static_cast<jule::I64>((*this)._field_buffer.len());
}



jule::Any _21862cb1d_ReferenceStack::_method_at(jule::Int _5825_i) {
	return (*this)._field_buffer[_5825_i];
}



void _21862cb1d_ReferenceStack::_method_push(jule::Any _6331_ref) {
	(*this)._field_buffer=jule::append((*this)._field_buffer,jule::Slice<jule::Any>({_6331_ref}));
}



jule::Bool _21862cb1d_ReferenceStack::_method_exist_0(jule::Ptr<_200c58948_Var> _6827_t) {
	{
		auto expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4881634736:;
		if (it != expr.end()) {
			jule::Any _21862cb1d_ref = *it;
			{
				{
					auto _match_expr{ _21862cb1d_ref };
					if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4881635936; }
					_case_begin_4881635936:;
					{
						if (_21862cb1d_ref.operator jule::Ptr<_200c58948_Var>() == _6827_t) {
							return true;
						}
					}
					goto _match_end_4881636400;
					_case_end_4881635936:;
					_match_end_4881636400:;
				}
			}
			_iter_next_4881634736:;
			++it;
			goto _iter_begin_4881634736;
		}
		_iter_end_4881634736:;
	}
	return false;
}

jule::Bool _21862cb1d_ReferenceStack::_method_exist_1(jule::Ptr<_2185d51ad_FnIns> _6827_t) {
	{
		auto expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4881644592:;
		if (it != expr.end()) {
			jule::Any _21862cb1d_ref = *it;
			{
				{
					auto _match_expr{ _21862cb1d_ref };
					if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4881645792; }
					_case_begin_4881645792:;
					{
						if (_21862cb1d_ref.operator jule::Ptr<_2185d51ad_FnIns>() == _6827_t) {
							return true;
						}
					}
					goto _match_end_4881646256;
					_case_end_4881645792:;
					_match_end_4881646256:;
				}
			}
			_iter_next_4881644592:;
			++it;
			goto _iter_begin_4881644592;
		}
		_iter_end_4881644592:;
	}
	return false;
}

jule::Bool _21862cb1d_ReferenceStack::_method_exist_2(jule::Ptr<_23461aa35_StructIns> _6827_t) {
	{
		auto expr = (*this)._field_buffer;
		auto it = expr.begin();
		_iter_begin_4881680192:;
		if (it != expr.end()) {
			jule::Any _21862cb1d_ref = *it;
			{
				{
					auto _match_expr{ _21862cb1d_ref };
					if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4881681392; }
					_case_begin_4881681392:;
					{
						if (_21862cb1d_ref.operator jule::Ptr<_23461aa35_StructIns>() == _6827_t) {
							return true;
						}
					}
					goto _match_end_4881681856;
					_case_end_4881681392:;
					_match_end_4881681856:;
				}
			}
			_iter_next_4881680192:;
			++it;
			goto _iter_begin_4881680192;
		}
		_iter_end_4881680192:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _21862cb1d_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_21862cb1d_SymbolBuilder> _21862cb1d_SymbolBuilder::_method_get_root(void) {
	jule::Ptr<_21862cb1d_SymbolBuilder> _31417_root = this->self;
	while (_31417_root->_field_owner != nullptr) {
		{
			_31417_root=_31417_root->_field_owner;
		}
	_iter_next_4878507824:;
	}
	_iter_end_4878507824:;
	return _31417_root;
}



void _21862cb1d_SymbolBuilder::_method_push_err(_2336ea198_Token& _32128_token,jule::Str _32142_fmt,jule::Slice<jule::Any> _32155_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_231e4202e_Log>({_1eec2c632_compiler_err(_32128_token,true,_32142_fmt,_32155_args)}));
}



void _21862cb1d_SymbolBuilder::_method_push_err_text(_2336ea198_Token& _32533_token,jule::Str _32547_fmt,jule::Slice<jule::Any> _32560_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_231e4202e_Log>({_1eec2c632_compiler_err(_32533_token,false,_32547_fmt,_32560_args)}));
}



void _21862cb1d_SymbolBuilder::_method_push_suggestion(jule::Str _33034_fmt,jule::Slice<jule::Any> _33047_args) {
	{
		_1eec2c632_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_33034_fmt,_33047_args);
	}
}



jule::Bool _21862cb1d_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ptr<_233464770_UseDecl>& _33443_decl) {
	jule::Bool _33461_ok = jule::Bool();
	if (_231e4edb6_is_std_header_path(_33443_decl->_field_link_path)) {
		_33461_ok = true;
		return _33461_ok;
	}
	jule::Str _33913_ext = _231ed2cb2_ext(_33443_decl->_field_link_path);
	if ((!(_231e4edb6_is_valid_header_ext(_33913_ext))) && (!(_231e4edb6_is_valid_cpp_ext(_33913_ext)))) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("invalid C++ extension: @", 24),jule::Slice<jule::Any>({jule::Any(_33913_ext)}));
		_33461_ok = false;
		return _33461_ok;
	}
	jule::Ptr<_2334b9671_Status> _34514_info;
	jule::Int _34520_err;
	std::tie(_34514_info,_34520_err) = _2334b9671_Status::_static_method_of(_33443_decl->_field_link_path);
	if ((_34520_err != 0LLU) || _34514_info->_method_is_dir()) {
		(*this)._method_push_err(_33443_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_33443_decl->_field_link_path)}));
		_33461_ok = false;
		return _33461_ok;
	}
	_33461_ok = true;
	return _33461_ok;
}



jule::Ptr<_218848bd5_ImportInfo> _21862cb1d_SymbolBuilder::_method_build_cpp_header_import(jule::Ptr<_233464770_UseDecl>& _35547_decl) {
	jule::Str _35617_path = _35547_decl->_field_link_path;
	if ((!(_231e4edb6_is_std_header_path(_35547_decl->_field_link_path)))) {
		jule::Bool _35921_ok = (*this)._method_check_cpp_use_decl_path(_35547_decl);
		if ((!(_35921_ok))) {
			return nullptr;
		}
		std::tie(_35617_path,_35921_ok) = _231ed2cb2_abs(_35547_decl->_field_link_path);
		if ((!(_35921_ok))) {
			(*this)._method_push_err(_35547_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_35547_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_218848bd5_ImportInfo>(new( std::nothrow ) _218848bd5_ImportInfo(_35547_decl->_field_token,_35617_path,_35547_decl->_field_link_path,jule::Str(),jule::Str(),jule::Bool(),true,false,jule::Bool(),jule::Slice<_2336ea198_Token>(),nullptr));
}



jule::Ptr<_218848bd5_ImportInfo> _21862cb1d_SymbolBuilder::_method_build_std_import(jule::Ptr<_233464770_UseDecl>& _38240_decl) {
	jule::Str _38317_path = _38240_decl->_field_link_path.slice(jule::Str("std::", 5).len());
	_38317_path=_38317_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_38317_path=_231ed2cb2_join(jule::Slice<jule::Str>({_231e881a7_PATH_STDLIB,_38317_path}));
	jule::Bool _38620_ok;
	std::tie(_38317_path,_38620_ok) = _231ed2cb2_abs(_38317_path);
	if ((!(_38620_ok))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_2334b9671_Status> _39214_info;
	jule::Int _39220_err;
	std::tie(_39214_info,_39220_err) = _2334b9671_Status::_static_method_of(_38317_path);
	if ((_39220_err != 0LLU) || (!(_39214_info->_method_is_dir()))) {
		(*this)._method_push_err(_38240_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_38240_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _40013_ident = _38240_decl->_field_link_path.slice(_38240_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_218848bd5_ImportInfo>(new( std::nothrow ) _218848bd5_ImportInfo(_38240_decl->_field_token,_38317_path,_38240_decl->_field_link_path,_40013_ident,_38240_decl->_field_alias,jule::Bool(),false,true,_38240_decl->_field_full,jule::Slice<_2336ea198_Token>(),jule::new_struct<_218848bd5_Package>(new( std::nothrow ) _218848bd5_Package(nullptr))));
}



jule::Ptr<_218848bd5_ImportInfo> _21862cb1d_SymbolBuilder::_method_build_ident_import(jule::Ptr<_233464770_UseDecl>& _41743_decl) {
	jule::Str _41817_path = _41743_decl->_field_link_path;
	_41817_path=_41817_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41817_path=_231ed2cb2_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41817_path}));
	jule::Bool _42220_ok;
	std::tie(_41817_path,_42220_ok) = _231ed2cb2_abs(_41817_path);
	if ((!(_42220_ok))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Ptr<_2334b9671_Status> _42814_info;
	jule::Int _42820_err;
	std::tie(_42814_info,_42820_err) = _2334b9671_Status::_static_method_of(_41817_path);
	if ((_42820_err != 0LLU) || (!(_42814_info->_method_is_dir()))) {
		this->self->_method_push_err(_41743_decl->_field_token,jule::Str("used directory path not found/access: @", 39),jule::Slice<jule::Any>({jule::Any(_41743_decl->_field_link_path)}));
		return nullptr;
	}
	jule::Str _43613_ident = _41743_decl->_field_link_path.slice(_41743_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL);
	return jule::new_struct<_218848bd5_ImportInfo>(new( std::nothrow ) _218848bd5_ImportInfo(_41743_decl->_field_token,_41817_path,_41743_decl->_field_link_path,_43613_ident,_41743_decl->_field_alias,jule::Bool(),false,false,_41743_decl->_field_full,jule::Slice<_2336ea198_Token>(),jule::new_struct<_218848bd5_Package>(new( std::nothrow ) _218848bd5_Package(nullptr))));
}



jule::Ptr<_218848bd5_ImportInfo> _21862cb1d_SymbolBuilder::_method_build_import(jule::Ptr<_233464770_UseDecl>& _45337_decl) {
	{
		if (!((_45337_decl->_field_cpp_linked))) { goto _case_end_4878591360; }
		_case_begin_4878591360:;
		{
			return this->self->_method_build_cpp_header_import(_45337_decl);
		}
		goto _match_end_4878589840;
		_case_end_4878591360:;
		if (!((_45337_decl->_field_std))) { goto _case_end_4878590992; }
		_case_begin_4878590992:;
		{
			return this->self->_method_build_std_import(_45337_decl);
		}
		goto _match_end_4878589840;
		_case_end_4878590992:;
		_case_begin_4878590016:;
		{
			return this->self->_method_build_ident_import(_45337_decl);
		}
		goto _match_end_4878589840;
		_case_end_4878590016:;
		_match_end_4878589840:;
	}
}



jule::Bool _21862cb1d_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ptr<_218848bd5_ImportInfo>& _46144_pkg) {
	jule::Bool _46164_ok = jule::Bool();
	jule::Ptr<_218848bd5_ImportInfo> _46313_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>([=](jule::Ptr<_218848bd5_ImportInfo> _46349_spkg) mutable -> jule::Bool {
		return _46144_pkg->_field_path == _46349_spkg->_field_path;
	}));
	if (_46313_lpkg == nullptr) {
		_46164_ok = true;
		return _46164_ok;
	}
	(*this)._method_push_err(_46144_pkg->_field_token,jule::Str("duplicate use declaration: @", 28),jule::Slice<jule::Any>({jule::Any(_46144_pkg->_field_link_path)}));
	(*this)._method_push_suggestion(jule::Str("remove this use declaration, already used, it is safe", 53),jule::Slice<jule::Any>({}));
	_46164_ok = false;
	return _46164_ok;
}



void _21862cb1d_SymbolBuilder::_method_impl_import_selections(jule::Ptr<_218848bd5_ImportInfo>& _47546_imp,jule::Ptr<_233464770_UseDecl>& _47569_decl) {
	{
		auto expr = _47569_decl->_field_selected;
		auto it = expr.begin();
		_iter_begin_4878610176:;
		if (it != expr.end()) {
			_2336ea198_Token _21862cb1d_ident = *it;
			{
				if (_47546_imp->_method_exist_ident(_21862cb1d_ident._field_kind)) {
					(*this)._method_push_err(_21862cb1d_ident,jule::Str("duplicated identifier selection: @", 34),jule::Slice<jule::Any>({jule::Any(_21862cb1d_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("remove this use selection, already selected, it is safe", 55),jule::Slice<jule::Any>({}));
					goto _iter_next_4878610176;
				}
				_47546_imp->_field_selected=jule::append(_47546_imp->_field_selected,jule::Slice<_2336ea198_Token>({_21862cb1d_ident}));
			}
			_iter_next_4878610176:;
			++it;
			goto _iter_begin_4878610176;
		}
		_iter_end_4878610176:;
	}
}



jule::Str _21862cb1d_SymbolBuilder::_method_get_as_link_path(jule::Str _48740_path) {
	if (_48740_path.has_prefix(_231e881a7_PATH_STDLIB)) {
		_48740_path=_48740_path.slice(_231e881a7_PATH_STDLIB.len());
		return jule::Str("std", 3) + _48740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _49314_root;
	std::tie(_49314_root,std::ignore) = _231ed2cb2_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_48740_path=_48740_path.slice(_49314_root.len());
	if (_48740_path[0LL] == 47LL) {
		_48740_path=_48740_path.slice(1LL);
	}
	return _48740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



void _21862cb1d_SymbolBuilder::_method_push_cycle_error(jule::Ptr<_21862cb1d_SymbolBuilder>& _50137_sb,jule::Str _50157_path,jule::Str& _50173_message) {
	
	jule::Str _50413_refers_to = _231e4202e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_50137_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_50157_path))}));
	_50173_message=((_21862cb1d_str_repeat(jule::Str(" ", 1),4LL) + _50413_refers_to) + jule::Str("\n", 1)) + _50173_message;
}



void _21862cb1d_SymbolBuilder::_method_push_cross_cycle_error(jule::Ptr<_21862cb1d_SymbolBuilder>& _51143_target,jule::Ptr<_218848bd5_ImportInfo>& _51168_imp,_2336ea198_Token& _51187_error_token) {
	jule::Str _51217_message = jule::Str();
	this->self->_method_push_cycle_error(this->self,_51168_imp->_field_path,_51217_message);
	jule::Ptr<_21862cb1d_SymbolBuilder> _51617_owner = this->self->_field_owner;
	jule::Ptr<_21862cb1d_SymbolBuilder> _51717_old = this->self;
	while (_51617_owner->_field_owner != nullptr) {
		{
			this->self->_method_push_cycle_error(_51717_old->_field_owner,_51717_old->_field_table->_field_file->_method_dir(),_51217_message);
			if (_51617_owner->_field_owner == _51143_target) {
				this->self->_method_push_cycle_error(_51143_target,_51617_owner->_field_table->_field_file->_method_dir(),_51217_message);
				goto _iter_end_4878644272;
			}
			_51717_old=_51617_owner;
			_51617_owner=_51617_owner->_field_owner;
		}
	_iter_next_4878644272:;
	}
	_iter_end_4878644272:;
	this->self->_method_push_err(_51187_error_token,jule::Str("illegal cross cycle in use declarations;\n@", 42),jule::Slice<jule::Any>({jule::Any(_51217_message)}));
}



jule::Bool _21862cb1d_SymbolBuilder::_method_check_import_cycles(jule::Ptr<_218848bd5_ImportInfo> _53439_imp,jule::Ptr<_233464770_UseDecl>& _53458_decl) {
	if (_53439_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_53458_decl->_field_token,jule::Str("illegal cycle in use declaration, package @ refers to itself", 60),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_53439_imp->_field_path))}));
		return false;
	}
	if (this->self->_field_owner == nullptr) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	jule::Ptr<_21862cb1d_SymbolBuilder> _54917_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_54917_owner->_field_table->_field_file->_method_dir() == _53439_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_54917_owner,_53439_imp,_53458_decl->_field_token);
		return false;
	}
	if (_54917_owner->_field_owner != nullptr) {
		_54917_owner=_54917_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



jule::Bool _21862cb1d_SymbolBuilder::_method_import_package(jule::Ptr<_218848bd5_ImportInfo>& _56439_imp,jule::Ptr<_233464770_UseDecl>& _56462_decl) {
	jule::Bool _56480_ok = jule::Bool();
	if (_56439_imp->_field_cpp_linked) {
		_56480_ok = true;
		return _56480_ok;
	}
	jule::Ptr<_218848bd5_ImportInfo> _56917_port = this->self->_field_importer.get()._method_get_import(_56439_imp->_field_path);
	if (_56917_port != nullptr) {
		_56439_imp->_field_package=_56917_port->_field_package;
		_56439_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_56439_imp,_56462_decl)))) {
			_56480_ok = false;
			return _56480_ok;
		}
		jule::Slice<jule::Ptr<_23346420e_Ast>> _57822_asts;
		jule::Slice<_231e4202e_Log> _57828_errors;
		std::tie(_57822_asts,_57828_errors) = this->self->_field_importer.get()._method_import_package(_56439_imp->_field_path);
		if (_57828_errors.len() > 0LL) {
			this->self->_field_errors=jule::append(this->self->_field_errors,_57828_errors);
			_56480_ok = false;
			return _56480_ok;
		}
		{
			auto expr = _57822_asts;
			auto it = expr.begin();
			_iter_begin_4878683296:;
			if (it != expr.end()) {
				jule::Ptr<_23346420e_Ast> _21862cb1d_ast = *it;
				{
					jule::Ptr<_218737b7e_SymbolTable> _58526_table;
					jule::Slice<_231e4202e_Log> _58533_errors;
					std::tie(_58526_table,_58533_errors) = _1d67cdc79_build_symbols(_21862cb1d_ast,this->self->_field_importer,this->self);
					if (_58533_errors.len() > 0LL) {
						this->self->_field_errors=jule::append(this->self->_field_errors,_58533_errors);
						this->self->_method_push_err_text(_56439_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_56439_imp->_field_link_path)}));
						_56480_ok = false;
						return _56480_ok;
					}
					_56439_imp->_field_package->_field_files=jule::append(_56439_imp->_field_package->_field_files,jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>({_58526_table}));
				}
				_iter_next_4878683296:;
				++it;
				goto _iter_begin_4878683296;
			}
			_iter_end_4878683296:;
		}
	}
	this->self->_method_impl_import_selections(_56439_imp,_56462_decl);
	_56480_ok = true;
	return _56480_ok;
}



jule::Ptr<_218848bd5_ImportInfo> _21862cb1d_SymbolBuilder::_method_import_use_decl(jule::Ptr<_233464770_UseDecl>& _60340_decl) {
	jule::Ptr<_218848bd5_ImportInfo> _60417_imp = this->self->_method_build_import(_60340_decl);
	if (_60417_imp == nullptr) {
		return nullptr;
	}
	jule::Bool _61017_ok = this->self->_method_check_duplicate_use_decl(_60417_imp);
	if ((!(_61017_ok))) {
		return nullptr;
	}
	if ((_60417_imp->_field_alias.len() != 0LL) && (_60340_decl->_field_selected.len() > 0LL)) {
		this->self->_method_push_err(_60340_decl->_field_token,jule::Str("use aliases cannot useable for selected package defines", 55),jule::Slice<jule::Any>({}));
	}
	_61017_ok=this->self->_method_import_package(_60417_imp,_60340_decl);
	this->self->_field_table->_field_imports=jule::append(this->self->_field_table->_field_imports,jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>({_60417_imp}));
	if (_61017_ok) {
		this->self->_field_importer.get()._method_imported(_60417_imp);
		return _60417_imp;
	}
	return nullptr;
}



void _21862cb1d_SymbolBuilder::_method_import_use_decls(void) {
	{
		auto expr = this->self->_field_ast->_field_use_decls;
		auto it = expr.begin();
		_iter_begin_4878706976:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_UseDecl> _21862cb1d_decl = *it;
			{
				this->self->_method_import_use_decl(_21862cb1d_decl);
				if (this->self->_field_errors.len() > 0LL) {
					goto _iter_end_4878706976;
				}
			}
			_iter_next_4878706976:;
			++it;
			goto _iter_begin_4878706976;
		}
		_iter_end_4878706976:;
	}
}



void _21862cb1d_SymbolBuilder::_method_append_decl(_233464770_Node& _63935_decl) {
	{
		auto _match_expr{ _63935_decl._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TypeAliasDecl>>())) { goto _case_end_4878712208; }
		_case_begin_4878712208:;
		{
			jule::Ptr<_200d010d9_TypeAlias> _64221_ta = _21862cb1d_build_type_alias(_63935_decl._field_data.operator jule::Ptr<_233464770_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases=jule::append((*this)._field_table->_field_type_aliases,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({_64221_ta}));
		}
		goto _match_end_4878711760;
		_case_end_4878712208:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_StructDecl>>())) { goto _case_end_4878712304; }
		_case_begin_4878712304:;
		{
			jule::Ptr<_23461aa35_Struct> _64621_srct = _21862cb1d_build_struct(_63935_decl._field_data.operator jule::Ptr<_233464770_StructDecl>());
			(*this)._field_table->_field_structs=jule::append((*this)._field_table->_field_structs,jule::Slice<jule::Ptr<_23461aa35_Struct>>({_64621_srct}));
		}
		goto _match_end_4878711760;
		_case_end_4878712304:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnDecl>>())) { goto _case_end_4878712400; }
		_case_begin_4878712400:;
		{
			jule::Ptr<_2185d51ad_Fn> _65021_f = _21862cb1d_build_fn(_63935_decl._field_data.operator jule::Ptr<_233464770_FnDecl>());
			(*this)._field_table->_field_funcs=jule::append((*this)._field_table->_field_funcs,jule::Slice<jule::Ptr<_2185d51ad_Fn>>({_65021_f}));
		}
		goto _match_end_4878711760;
		_case_end_4878712400:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TraitDecl>>())) { goto _case_end_4878712496; }
		_case_begin_4878712496:;
		{
			jule::Ptr<_2185da36c_Trait> _65421_t = _21862cb1d_build_trait(_63935_decl._field_data.operator jule::Ptr<_233464770_TraitDecl>());
			(*this)._field_table->_field_traits=jule::append((*this)._field_table->_field_traits,jule::Slice<jule::Ptr<_2185da36c_Trait>>({_65421_t}));
		}
		goto _match_end_4878711760;
		_case_end_4878712496:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_VarDecl>>())) { goto _case_end_4878713920; }
		_case_begin_4878713920:;
		{
			jule::Ptr<_200c58948_Var> _65821_v = _21862cb1d_build_var(_63935_decl._field_data.operator jule::Ptr<_233464770_VarDecl>());
			(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_65821_v}));
		}
		goto _match_end_4878711760;
		_case_end_4878713920:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_EnumDecl>>())) { goto _case_end_4878714016; }
		_case_begin_4878714016:;
		{
			jule::Ptr<_2186be3da_Enum> _66221_e = _21862cb1d_build_enum(_63935_decl._field_data.operator jule::Ptr<_233464770_EnumDecl>());
			(*this)._field_table->_field_enums=jule::append((*this)._field_table->_field_enums,jule::Slice<jule::Ptr<_2186be3da_Enum>>({_66221_e}));
		}
		goto _match_end_4878711760;
		_case_end_4878714016:;
		_case_begin_4878711216:;
		{
			(*this)._method_push_err(_63935_decl._field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4878711760;
		_case_end_4878711216:;
		_match_end_4878711760:;
	}
}



void _21862cb1d_SymbolBuilder::_method_append_decls(void) {
	{
		auto expr = (*this)._field_ast->_field_decls;
		auto it = expr.begin();
		_iter_begin_4878733824:;
		if (it != expr.end()) {
			_233464770_Node _21862cb1d_decl = *it;
			{
				(*this)._method_append_decl(_21862cb1d_decl);
			}
			_iter_next_4878733824:;
			++it;
			goto _iter_begin_4878733824;
		}
		_iter_end_4878733824:;
	}
}



void _21862cb1d_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=jule::Slice<jule::Ptr<_2185e0064_Impl>>::alloc(0LL,static_cast<jule::I64>((*this)._field_ast->_field_impls.len()));
	{
		auto expr = (*this)._field_ast->_field_impls;
		auto it = expr.begin();
		_iter_begin_4878738640:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Impl> _21862cb1d_decl = *it;
			{
				(*this)._field_table->_field_impls=jule::append((*this)._field_table->_field_impls,jule::Slice<jule::Ptr<_2185e0064_Impl>>({_21862cb1d_build_impl(_21862cb1d_decl)}));
			}
			_iter_next_4878738640:;
			++it;
			goto _iter_begin_4878738640;
		}
		_iter_end_4878738640:;
	}
}



void _21862cb1d_SymbolBuilder::_method_push_directive_pass(jule::Ptr<_233464770_Directive>& _68343_d) {
	_21862cb1d_Pass _68417_pass = _21862cb1d_Pass(_68343_d->_field_token,jule::Str());
	{
		auto expr = _68343_d->_field_args;
		auto it = expr.begin();
		_iter_begin_4878746688:;
		if (it != expr.end()) {
			jule::Str _21862cb1d_arg = *it;
			{
				if (_21862cb1d_arg != jule::Str()) {
					_68417_pass._field_text+=_21862cb1d_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_4878746688:;
			++it;
			goto _iter_begin_4878746688;
		}
		_iter_end_4878746688:;
	}
	_68417_pass._field_text=_68417_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes=jule::append((*this)._field_table->_field_passes,jule::Slice<_21862cb1d_Pass>({_68417_pass}));
}



void _21862cb1d_SymbolBuilder::_method_append_top_directives(void) {
	{
		auto expr = (*this)._field_ast->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4878751712:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Directive> _21862cb1d_d = *it;
			{
				{
					auto _match_expr{ _21862cb1d_d->_field_tag };
					if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_4878755152; }
					_case_begin_4878755152:;
					{
						(*this)._method_push_directive_pass(_21862cb1d_d);
					}
					goto _match_end_4878755072;
					_case_end_4878755152:;
					_match_end_4878755072:;
				}
			}
			_iter_next_4878751712:;
			++it;
			goto _iter_begin_4878751712;
		}
		_iter_end_4878751712:;
	}
}



void _21862cb1d_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_218737b7e_SymbolTable>(new( std::nothrow ) _218737b7e_SymbolTable(this->self->_field_ast->_field_file,jule::Slice<_21862cb1d_Pass>(),jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>(),jule::Slice<jule::Ptr<_200c58948_Var>>(),jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>(),jule::Slice<jule::Ptr<_23461aa35_Struct>>(),jule::Slice<jule::Ptr<_2185d51ad_Fn>>(),jule::Slice<jule::Ptr<_2185da36c_Trait>>(),jule::Slice<jule::Ptr<_2186be3da_Enum>>(),jule::Slice<jule::Ptr<_2185e0064_Impl>>()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _21862cb1d_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2186ce186_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2186ce186_Match::_method_is_generic_type_match(void) {
	return ((*this)._field_type_match && ((*this)._field_expr != nullptr)) && (*this)._field_expr->_field_kind->_field_generic;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2186ce186_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "scope_owner:" << _Src._field_scope_owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_218848bd5_ImportInfo> _2186ce186_ScopeChecker::_method_find_package(jule::Str _42235_ident) {
	return (*this)._field_s->_method_find_package(_42235_ident);
}



jule::Ptr<_218848bd5_ImportInfo> _2186ce186_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)> _43237_selector) {
	return (*this)._field_s->_method_select_package(_43237_selector);
}



jule::Ptr<_200c58948_Var> _2186ce186_ScopeChecker::_method_find_var(jule::Str _44331_ident,jule::Bool _44343_cpp_linked) {
	
	jule::Ptr<_200c58948_Var> _44617_v = (*this)._field_table->_method___find_var(_44331_ident,_44343_cpp_linked,true);
	if (_44617_v != nullptr) {
		return _44617_v;
	}
	jule::Ptr<_2186ce186_ScopeChecker> _45117_parent = (*this)._field_parent;
	while (_45117_parent != nullptr) {
		{
			_44617_v=_45117_parent->_field_table->_method___find_var(_44331_ident,_44343_cpp_linked,true);
			if (_44617_v != nullptr) {
				return _44617_v;
			}
			_45117_parent=_45117_parent->_field_parent;
		}
	_iter_next_4878817552:;
	}
	_iter_end_4878817552:;
	return (*this)._field_s->_method_find_var(_44331_ident,_44343_cpp_linked);
}



jule::Ptr<_200d010d9_TypeAlias> _2186ce186_ScopeChecker::_method_find_type_alias(jule::Str _47038_ident,jule::Bool _47050_cpp_linked) {
	
	jule::Ptr<_200d010d9_TypeAlias> _47317_ta = (*this)._field_table->_method___find_type_alias(_47038_ident,_47050_cpp_linked,true);
	if (_47317_ta != nullptr) {
		return _47317_ta;
	}
	jule::Ptr<_2186ce186_ScopeChecker> _47817_parent = (*this)._field_parent;
	while (_47817_parent != nullptr) {
		{
			_47317_ta=_47817_parent->_field_table->_method___find_type_alias(_47038_ident,_47050_cpp_linked,true);
			if (_47317_ta != nullptr) {
				return _47317_ta;
			}
			_47817_parent=_47817_parent->_field_parent;
		}
	_iter_next_4878830512:;
	}
	_iter_end_4878830512:;
	return (*this)._field_s->_method_find_type_alias(_47038_ident,_47050_cpp_linked);
}



jule::Ptr<_23461aa35_Struct> _2186ce186_ScopeChecker::_method_find_struct(jule::Str _49534_ident,jule::Bool _49546_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_49534_ident,_49546_cpp_linked);
}



jule::Ptr<_2185d51ad_Fn> _2186ce186_ScopeChecker::_method_find_fn(jule::Str _50430_ident,jule::Bool _50442_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_50430_ident,_50442_cpp_linked);
}



jule::Ptr<_2185da36c_Trait> _2186ce186_ScopeChecker::_method_find_trait(jule::Str _51333_ident) {
	return (*this)._field_s->_method_find_trait(_51333_ident);
}



jule::Ptr<_2186be3da_Enum> _2186ce186_ScopeChecker::_method_find_enum(jule::Str _52232_ident) {
	return (*this)._field_s->_method_find_enum(_52232_ident);
}



jule::Bool _2186ce186_ScopeChecker::_method_is_unsafe(void) {
	jule::Ptr<_2186ce186_ScopeChecker> _53017_scope = this->self;
	_julec_label_iter:;
	if (_53017_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (_53017_scope->_field_parent != nullptr) {
		_53017_scope=_53017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



jule::Bool _2186ce186_ScopeChecker::_method_is_root(void) {
	return ((*this)._field_parent == nullptr) || ((*this)._field_owner != nullptr);
}



jule::Ptr<_2186ce186_ScopeChecker> _2186ce186_ScopeChecker::_method_get_root(void) {
	jule::Ptr<_2186ce186_ScopeChecker> _55217_root = this->self;
	while ((_55217_root->_field_parent != nullptr) && (_55217_root->_field_owner == nullptr)) {
		{
			_55217_root=_55217_root->_field_parent;
		}
	_iter_next_4878865264:;
	}
	_iter_end_4878865264:;
	return _55217_root;
}



jule::Ptr<_2186ce186_Label> _2186ce186_ScopeChecker::_method_find_label(jule::Str _56229_ident) {
	{
		auto expr = (*this)._field_scope->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4878870208:;
		if (it != expr.end()) {
			jule::Any _2186ce186_st = *it;
			{
				{
					auto _match_expr{ _2186ce186_st };
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Label>>())) { goto _case_end_4878871424; }
					_case_begin_4878871424:;
					{
						jule::Ptr<_2186ce186_Label> _56625_label = _2186ce186_st.operator jule::Ptr<_2186ce186_Label>();
						if (_56625_label->_field_ident == _56229_ident) {
							return _56625_label;
						}
					}
					goto _match_end_4878871888;
					_case_end_4878871424:;
					_match_end_4878871888:;
				}
			}
			_iter_next_4878870208:;
			++it;
			goto _iter_begin_4878870208;
		}
		_iter_end_4878870208:;
	}
	return nullptr;
}



jule::Ptr<_2186ce186_ScopeLabel> _2186ce186_ScopeChecker::_method_find_label_scope(jule::Str _57836_ident) {
	jule::Ptr<_2186ce186_ScopeLabel> _57917_label = this->self->_method_find_label_all(_57836_ident);
	if ((_57917_label != nullptr) && (_57917_label->_field_scope == this->self)) {
		return _57917_label;
	}
	return nullptr;
}



jule::Ptr<_2186ce186_ScopeLabel> _2186ce186_ScopeChecker::_method_find_label_all(jule::Str _59033_ident) {
	{
		auto expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4878880176:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_ScopeLabel> _2186ce186_lbl = *it;
			{
				if (_2186ce186_lbl->_field_label->_field_ident == _59033_ident) {
					return _2186ce186_lbl;
				}
			}
			_iter_next_4878880176:;
			++it;
			goto _iter_begin_4878880176;
		}
		_iter_end_4878880176:;
	}
	return nullptr;
}



jule::Bool _2186ce186_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _60238_itself,jule::Str _60255_ident) {
	jule::Ptr<_200c58948_Var> _60313_v = (*this)._method_find_var(_60255_ident,false);
	if ((_60313_v != nullptr) && (static_cast<jule::Uintptr>(_60313_v) != _60238_itself)) {
		if (_60313_v->_field_scope == nullptr) {
			return false;
		}
		return (_60313_v->_field_scope == (*this)._field_scope) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	jule::Ptr<_200d010d9_TypeAlias> _61113_ta = (*this)._method_find_type_alias(_60255_ident,false);
	if ((_61113_ta != nullptr) && (static_cast<jule::Uintptr>(_61113_ta) != _60238_itself)) {
		if (_61113_ta->_field_scope == nullptr) {
			return false;
		}
		return (_61113_ta->_field_scope == (*this)._field_tree) || (!((*this)._field_s->_method_is_flag(1LL)));
	}
	return false;
}



void _2186ce186_ScopeChecker::_method_check_var_decl(jule::Ptr<_233464770_VarDecl> _62238_decl) {
	jule::Ptr<_200c58948_Var> _62317_v = _21862cb1d_build_var(_62238_decl);
	_62317_v->_field_scope=this->self->_field_scope;
	__JULE_DEFER({
		this->self->_field_table->_field_vars=jule::append(this->self->_field_table->_field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_62317_v}));
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_62317_v)}));
	});
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_62317_v),_62317_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_62317_v->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_62317_v->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_var_decl(_62317_v,this->self);
	if ((!(_62317_v->_method_is_type_inferred())) && ((_62317_v->_field_kind == nullptr) || (_62317_v->_field_kind->_field_kind == nullptr))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_62317_v,this->self);
}



void _2186ce186_ScopeChecker::_method_check_type_alias_decl(jule::Ptr<_233464770_TypeAliasDecl> _64445_decl) {
	jule::Ptr<_200d010d9_TypeAlias> _64517_ta = _21862cb1d_build_type_alias(_64445_decl);
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_64517_ta),_64517_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_64517_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_64517_ta->_field_ident)}));
		this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_64517_ta,this->self);
	this->self->_field_table->_field_type_aliases=jule::append(this->self->_field_table->_field_type_aliases,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({_64517_ta}));
}



jule::Ptr<_2186ce186_Scope> _2186ce186_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_2186ce186_Scope>(new( std::nothrow ) _2186ce186_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),jule::Slice<jule::Any>()));
}



void _2186ce186_ScopeChecker::_method_check_child_ssc(jule::Ptr<_233464770_ScopeTree>& _66140_tree,jule::Ptr<_2186ce186_Scope>& _66163_s,jule::Ptr<_2186ce186_ScopeChecker>& _66179_ssc) {
	_66179_ssc->_field_parent=this->self;
	_66179_ssc->_method_check(_66140_tree,_66163_s);
}



jule::Ptr<_2186ce186_Scope> _2186ce186_ScopeChecker::_method_check_child_sc(jule::Ptr<_233464770_ScopeTree>& _66639_tree,jule::Ptr<_2186ce186_ScopeChecker>& _66662_ssc) {
	jule::Ptr<_2186ce186_Scope> _66717_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_66639_tree,_66717_s,_66662_ssc);
	return _66717_s;
}



jule::Ptr<_2186ce186_Scope> _2186ce186_ScopeChecker::_method_check_child(jule::Ptr<_233464770_ScopeTree>& _67236_tree) {
	jule::Ptr<_2186ce186_ScopeChecker> _67317_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_67236_tree,_67317_ssc);
}



void _2186ce186_ScopeChecker::_method_check_anon_scope(jule::Ptr<_233464770_ScopeTree> _67740_tree) {
	jule::Ptr<_2186ce186_Scope> _67817_s = this->self->_method_check_child(_67740_tree);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_67817_s)}));
}



jule::Bool _2186ce186_ScopeChecker::_method_try_call_recover(jule::Ptr<_218751758_Data>& _68241_d) {
	{
		auto _match_expr{ _68241_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Recover>>())) { goto _case_end_4878951792; }
		goto _match_end_4878951424;
		_case_end_4878951792:;
		_case_begin_4878950880:;
		{
			return false;
		}
		goto _match_end_4878951424;
		_case_end_4878950880:;
		_match_end_4878951424:;
	}
	jule::Ptr<_2186ce186_Recover> _68817_rec = _68241_d->_field_model.operator jule::Ptr<_2186ce186_Recover>();
	_68817_rec->_field_handler=_68241_d->_field_kind->_method_fnc();
	_68817_rec->_field_scope=jule::new_struct<_2186ce186_Scope>(new( std::nothrow ) _2186ce186_Scope());
	_68817_rec->_field_scope_owner=this->self->_method_get_root()->_field_owner;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_68817_rec)}));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(this->self->_field_i + 1LL);
	this->self->_field_scope=_68817_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



void _2186ce186_ScopeChecker::_method_check_expr(jule::Ptr<_233464770_Expr> _70134_expr) {
	jule::Ptr<_218751758_Data> _70217_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_70134_expr);
	if (_70217_d == nullptr) {
		return;
	}
	if (_70134_expr->_method_is_fn_call()) {
		jule::Bool _70817_ok = this->self->_method_try_call_recover(_70217_d);
		if (_70817_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_70217_d)}));
}



jule::Ptr<_2186ce186_If> _2186ce186_ScopeChecker::_method_check_if(jule::Ptr<_233464770_If> _71732_i) {
	jule::Ptr<_2186ce186_Scope> _71817_s = this->self->_method_check_child(_71732_i->_field_scope);
	jule::Ptr<_218751758_Data> _72017_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_71732_i->_field_expr);
	if (_72017_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_200d010d9_Prim> _72517_prim = _72017_d->_field_kind->_method_prim();
	if ((_72517_prim == nullptr) || (!(_72517_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_71732_i->_field_expr->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return jule::new_struct<_2186ce186_If>(new( std::nothrow ) _2186ce186_If(_72017_d->_field_model,_71817_s));
}



jule::Ptr<_2186ce186_Else> _2186ce186_ScopeChecker::_method_check_else(jule::Ptr<_233464770_Else> _73734_e) {
	return jule::new_struct<_2186ce186_Else>(new( std::nothrow ) _2186ce186_Else(this->self->_method_check_child(_73734_e->_field_scope)));
}



void _2186ce186_ScopeChecker::_method_check_conditional(jule::Ptr<_233464770_Conditional> _74341_conditional) {
	jule::Ptr<_2186ce186_Conditional> _74417_c = jule::new_struct<_2186ce186_Conditional>(new( std::nothrow ) _2186ce186_Conditional());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_74417_c)}));
	_74417_c->_field_elifs=jule::Slice<jule::Ptr<_2186ce186_If>>::alloc(0LL,static_cast<jule::I64>(_74341_conditional->_field_tail.len() + 1LL));
	_74417_c->_field_elifs=jule::append(_74417_c->_field_elifs,jule::Slice<jule::Ptr<_2186ce186_If>>({this->self->_method_check_if(_74341_conditional->_field_head)}));
	{
		auto expr = _74341_conditional->_field_tail;
		auto it = expr.begin();
		_iter_begin_4878990000:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_If> _2186ce186_elif = *it;
			{
				_74417_c->_field_elifs=jule::append(_74417_c->_field_elifs,jule::Slice<jule::Ptr<_2186ce186_If>>({this->self->_method_check_if(_2186ce186_elif)}));
			}
			_iter_next_4878990000:;
			++it;
			goto _iter_begin_4878990000;
		}
		_iter_end_4878990000:;
	}
	if (_74341_conditional->_field_default != nullptr) {
		_74417_c->_field_default=this->self->_method_check_else(_74341_conditional->_field_default);
	}
}



jule::Ptr<_2186ce186_Scope> _2186ce186_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _75939_it,jule::Ptr<_233464770_ScopeTree> _75956_tree,jule::Ptr<_2186ce186_ScopeChecker> _75978_ssc) {
	_75978_ssc->_field_it=_75939_it;
	return this->self->_method_check_child_sc(_75956_tree,_75978_ssc);
}



jule::Ptr<_2186ce186_Scope> _2186ce186_ScopeChecker::_method_check_iter_scope(jule::Uintptr _76436_it,jule::Ptr<_233464770_ScopeTree>& _76454_tree) {
	jule::Ptr<_2186ce186_ScopeChecker> _76517_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_76436_it,_76454_tree,_76517_ssc);
}



void _2186ce186_ScopeChecker::_method_check_inf_iter(jule::Ptr<_233464770_Iter>& _76939_it) {
	jule::Ptr<_2186ce186_InfIter> _77017_kind = jule::new_struct<_2186ce186_InfIter>(new( std::nothrow ) _2186ce186_InfIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_77017_kind)}));
	_77017_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_77017_kind),_76939_it->_field_scope);
}



void _2186ce186_ScopeChecker::_method_check_while_iter(jule::Ptr<_233464770_Iter>& _77741_it) {
	jule::Ptr<_233464770_WhileKind> _77817_wh = _77741_it->_field_kind.operator jule::Ptr<_233464770_WhileKind>();
	if ((_77817_wh->_field_expr == nullptr) && (_77817_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_77741_it);
		return;
	}
	jule::Ptr<_2186ce186_WhileIter> _78417_kind = jule::new_struct<_2186ce186_WhileIter>(new( std::nothrow ) _2186ce186_WhileIter());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_78417_kind)}));
	_78417_kind->_field_scope=this->self->_method_check_iter_scope(static_cast<jule::Uintptr>(_78417_kind),_77741_it->_field_scope);
	if (_77817_wh->_field_expr != nullptr) {
		jule::Ptr<_218751758_Data> _79121_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_77817_wh->_field_expr);
		if (_79121_d == nullptr) {
			return;
		}
		jule::Ptr<_200d010d9_Prim> _79617_prim = _79121_d->_field_kind->_method_prim();
		if (_79617_prim == nullptr) {
			this->self->_field_s->_method_push_err(_77741_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_79617_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_77741_it->_field_token,jule::Str("while iterations must be have boolean expression", 48),jule::Slice<jule::Any>({}));
			return;
		}
		_78417_kind->_field_expr=_79121_d->_field_model;
	}
	if (_77817_wh->_method_is_while_next()) {
		if ((!(_2186ce186_is_valid_ast_st_for_next_st(_77817_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_77817_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			return;
		}
		jule::I64 _81617_n = this->self->_field_scope->_field_stmts.len();
		this->self->_method_check_node(_77817_wh->_field_next);
		if (_81617_n < this->self->_field_scope->_field_stmts.len()) {
			jule::Any _81925_st = this->self->_field_scope->_field_stmts[_81617_n];
			this->self->_field_scope->_field_stmts=this->self->_field_scope->_field_stmts.slice(0LL,_81617_n);
			if ((!(_2186ce186_is_valid_st_for_next_st(_81925_st)))) {
				this->self->_field_s->_method_push_err(_77817_wh->_field_next_token,jule::Str("invalid statement for while-next", 32),jule::Slice<jule::Any>({}));
			}
			_78417_kind->_field_next=_81925_st;
		}
	}
}



void _2186ce186_ScopeChecker::_method_check_range_iter(jule::Ptr<_233464770_Iter>& _83041_it) {
	jule::Ptr<_233464770_RangeKind> _83117_rang = _83041_it->_field_kind.operator jule::Ptr<_233464770_RangeKind>();
	jule::Ptr<_218751758_Data> _83317_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_83117_rang->_field_expr);
	if (_83317_d == nullptr) {
		return;
	}
	jule::Ptr<_2186ce186_RangeIter> _83817_kind = jule::new_struct<_2186ce186_RangeIter>(new( std::nothrow ) _2186ce186_RangeIter(_83317_d,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_200c58948_Var>(),jule::Ptr<_200c58948_Var>()));
	_200c5bcc0_RangeChecker _84217_rc = _200c5bcc0_RangeChecker(this->self,_83117_rang,_83817_kind,_83317_d);
	jule::Bool _84813_ok = _84217_rc._method_check();
	if ((!(_84813_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_83817_kind)}));
	jule::Ptr<_2186ce186_ScopeChecker> _85517_ssc = this->self->_method_new_child_checker();
	if (_83817_kind->_field_key_a != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_83817_kind->_field_key_a->_field_ident)) {
			this->self->_field_s->_method_push_err(_83817_kind->_field_key_a->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_83817_kind->_field_key_a->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_85517_ssc->_field_table->_field_vars=jule::append(_85517_ssc->_field_table->_field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_83817_kind->_field_key_a}));
	}
	if (_83817_kind->_field_key_b != nullptr) {
		if ((!(this->self->_field_s->_method_is_flag(1LL))) && this->self->_method_is_duplicated_ident(0LLU,_83817_kind->_field_key_b->_field_ident)) {
			this->self->_field_s->_method_push_err(_83817_kind->_field_key_b->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_83817_kind->_field_key_b->_field_ident)}));
			this->self->_field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
		}
		_85517_ssc->_field_table->_field_vars=jule::append(_85517_ssc->_field_table->_field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_83817_kind->_field_key_b}));
	}
	_83817_kind->_field_scope=this->self->_method_check_iter_scope_sc(static_cast<jule::Uintptr>(_83817_kind),_83041_it->_field_scope,_85517_ssc);
}



void _2186ce186_ScopeChecker::_method_check_iter(jule::Ptr<_233464770_Iter> _87634_it) {
	if (_87634_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_87634_it);
		return;
	}
	{
		auto _match_expr{ _87634_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_WhileKind>>())) { goto _case_end_4879102560; }
		_case_begin_4879102560:;
		{
			this->self->_method_check_while_iter(_87634_it);
		}
		goto _match_end_4879101744;
		_case_end_4879102560:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_RangeKind>>())) { goto _case_end_4879103184; }
		_case_begin_4879103184:;
		{
			this->self->_method_check_range_iter(_87634_it);
		}
		goto _match_end_4879101744;
		_case_end_4879103184:;
		_case_begin_4879101408:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4879101744;
		_case_end_4879101408:;
		_match_end_4879101744:;
	}
}



jule::Bool _2186ce186_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _88942_it) {
	jule::Ptr<_2186ce186_ScopeChecker> _89017_scope = this->self;
	_julec_label_iter:;
	if (_89017_scope->_field_it == _88942_it) {
		return true;
	}
	if (_89017_scope->_field_parent != nullptr) {
		_89017_scope=_89017_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



jule::Bool _2186ce186_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _90543_ptr) {
	jule::Ptr<_2186ce186_ScopeChecker> _90617_scope = this->self;
	_julec_label_iter:;
	if (_90617_scope->_field_it == _90543_ptr) {
		return true;
	}
	if (_90617_scope->_field_cse != 0LL) {
		jule::Uintptr _91417_mtch = static_cast<jule::Uintptr>(((_2186ce186_Case*)(_90617_scope->_field_cse))->_field_owner);
		if (_91417_mtch == _90543_ptr) {
			return true;
		}
	}
	if (_90617_scope->_field_parent != nullptr) {
		_90617_scope=_90617_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



jule::Ptr<_2186ce186_ContSt> _2186ce186_ScopeChecker::_method_check_cont_valid_scope(jule::Ptr<_233464770_ContSt> _92842_c) {
	if (_92842_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_2186ce186_ContSt>(new( std::nothrow ) _2186ce186_ContSt());
	}
	jule::Ptr<_2186ce186_ScopeChecker> _93317_scope = this->self;
	_julec_label_iter:;
	{
		if (!((((_93317_scope->_field_it == 0LL) && (_93317_scope->_field_parent != nullptr)) && (_93317_scope->_field_owner == nullptr)))) { goto _case_end_4879127680; }
		_case_begin_4879127680:;
		{
			_93317_scope=_93317_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4879127520;
		_case_end_4879127680:;
		if (!((_93317_scope->_field_it != 0LL))) { goto _case_end_4879127792; }
		_case_begin_4879127792:;
		{
			return jule::new_struct<_2186ce186_ContSt>(new( std::nothrow ) _2186ce186_ContSt(_93317_scope->_field_it));
		}
		goto _match_end_4879127520;
		_case_end_4879127792:;
		_match_end_4879127520:;
	}
	this->self->_field_s->_method_push_err(_92842_c->_field_token,jule::Str("continue keyword is cannot used at out of iteration", 51),jule::Slice<jule::Any>({}));
	return nullptr;
}



void _2186ce186_ScopeChecker::_method_check_cont(jule::Ptr<_233464770_ContSt> _94830_c) {
	jule::Ptr<_2186ce186_ContSt> _94917_cont = this->self->_method_check_cont_valid_scope(_94830_c);
	if (_94917_cont == nullptr) {
		return;
	}
	if (_94830_c->_field_label._field_id != 0LLU) {
		jule::Ptr<_2186ce186_ScopeLabel> _95521_label = _2186ce186_find_label_parent(_94830_c->_field_label._field_kind,this->self->_field_parent);
		if (_95521_label == nullptr) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_94830_c->_field_label._field_kind)}));
			return;
		}
		_95521_label->_field_used=true;
		if ((_95521_label->_field_pos + 1LL) >= _95521_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _96817_i = _95521_label->_field_pos + 1LL;
		if (_96817_i >= _95521_label->_field_scope->_field_scope->_field_stmts.len()) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _97225_st = _95521_label->_field_scope->_field_scope->_field_stmts[_96817_i];
			{
				auto _match_expr{ _97225_st };
				if (!(_match_expr.type_is<jule::Ptr<_2186ce186_InfIter>>())) { goto _case_end_4879155328; }
				_case_begin_4879155328:;
				{
					_94917_cont->_field_it=static_cast<jule::Uintptr>(_97225_st.operator jule::Ptr<_2186ce186_InfIter>());
				}
				goto _match_end_4879153392;
				_case_end_4879155328:;
				if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RangeIter>>())) { goto _case_end_4879153776; }
				_case_begin_4879153776:;
				{
					_94917_cont->_field_it=static_cast<jule::Uintptr>(_97225_st.operator jule::Ptr<_2186ce186_RangeIter>());
				}
				goto _match_end_4879153392;
				_case_end_4879153776:;
				if (!(_match_expr.type_is<jule::Ptr<_2186ce186_WhileIter>>())) { goto _case_end_4879153872; }
				_case_begin_4879153872:;
				{
					_94917_cont->_field_it=static_cast<jule::Uintptr>(_97225_st.operator jule::Ptr<_2186ce186_WhileIter>());
				}
				goto _match_end_4879153392;
				_case_end_4879153872:;
				_case_begin_4879150928:;
				{
					this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4879153392;
				_case_end_4879150928:;
				_match_end_4879153392:;
			}
		}
	}
	if (_94917_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_94917_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_94830_c->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_94917_cont)}));
}



void _2186ce186_ScopeChecker::_method_check_label(jule::Ptr<_233464770_LabelSt> _99135_l) {
	if (this->self->_method_find_label(_99135_l->_field_ident) != nullptr) {
		this->self->_field_s->_method_push_err(_99135_l->_field_token,jule::Str("label is already exist in this identifier: @", 44),jule::Slice<jule::Any>({jule::Any(_99135_l->_field_ident)}));
		return;
	}
	jule::Ptr<_2186ce186_Label> _99717_label = jule::new_struct<_2186ce186_Label>(new( std::nothrow ) _2186ce186_Label(_99135_l->_field_ident));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_99717_label)}));
	(*(this->self->_field_labels))=jule::append((*(this->self->_field_labels)),jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>({jule::new_struct<_2186ce186_ScopeLabel>(new( std::nothrow ) _2186ce186_ScopeLabel(_99135_l->_field_token,_99717_label,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL),this->self,jule::Bool()))}));
}



void _2186ce186_ScopeChecker::_method_push_goto(jule::Ptr<_233464770_GotoSt> _101033_gt) {
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_2186ce186_GotoSt>(new( std::nothrow ) _2186ce186_GotoSt(_101033_gt->_field_label._field_kind)))}));
	(*(this->self->_field_gotos))=jule::append((*(this->self->_field_gotos)),jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>({jule::new_struct<_2186ce186_ScopeGoto>(new( std::nothrow ) _2186ce186_ScopeGoto(_101033_gt,this->self,static_cast<jule::I64>(this->self->_field_scope->_field_stmts.len() - 1LL)))}));
}



void _2186ce186_ScopeChecker::_method_check_postfix(jule::Ptr<_233464770_AssignSt> _102237_a) {
	if (_102237_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_102237_a->_field_setter,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ptr<_233464770_Expr> _102817_expr = _102237_a->_field_left[0LL]->_field_expr;
	jule::Ptr<_218751758_Data> _102917_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_102817_expr);
	if (_102917_d == nullptr) {
		return;
	}
	_2186ce186_check_assign(this->self->_field_s,_102917_d,nullptr,_102237_a->_field_setter);
	if (_102917_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_200d010d9_Ptr> _103721_ptr = _102917_d->_field_kind->_method_ptr();
		if (_103721_ptr->_method_is_unsafe()) {
			this->self->_field_s->_method_push_err(_102237_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_102237_a->_field_setter._field_kind),jule::Any(_102917_d->_field_kind->_method_to_str())}));
			return;
		}
	} else {
		if ((_102917_d->_field_kind->_method_prim() == nullptr) || (!(_1d68ce6a4_is_num(_102917_d->_field_kind->_method_prim()->_field_kind)))) {
			this->self->_field_s->_method_push_err(_102237_a->_field_setter,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any(_102237_a->_field_setter._field_kind),jule::Any(_102917_d->_field_kind->_method_to_str())}));
			return;
		}
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_2186ce186_Postfix>(new( std::nothrow ) _2186ce186_Postfix(_102917_d->_field_model,_102237_a->_field_setter._field_kind)))}));
}



jule::Bool _2186ce186_ScopeChecker::_method_is_new_assign_ident(jule::Str _105538_ident) {
	if (_2336ea198_is_ignore_ident(_105538_ident) || (_105538_ident == jule::Str())) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_105538_ident,false) == nullptr;
}



void _2186ce186_ScopeChecker::_method_check_single_assign(jule::Ptr<_233464770_AssignSt>& _106344_a) {
	jule::Ptr<_218751758_Data> _106417_l = nullptr;
	if ((!(_2336ea198_is_ignore_ident(_106344_a->_field_left[0LL]->_field_ident)))) {
		jule::Ptr<_233464770_Expr> _106721_expr = _106344_a->_field_left[0LL]->_field_expr;
		_106417_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_106721_expr);
		if (_106417_l == nullptr) {
			return;
		}
	}
	jule::Ptr<_218751758_Eval> _107417_eval = (((_106417_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_106417_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
	jule::Ptr<_218751758_Data> _107917_r = _107417_eval->_method_eval_expr(_106344_a->_field_right);
	if (_107917_r == nullptr) {
		return;
	}
	if (_106417_l == nullptr) {
		if (_107917_r->_field_kind->_method_void()) {
			this->self->_field_s->_method_push_err(_106344_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_107917_r)}));
		return;
	}
	if ((!(_2186ce186_check_assign(this->self->_field_s,_106417_l,_107917_r,_106344_a->_field_setter)))) {
		return;
	}
	if (_107917_r->_field_kind->_method_tup() != nullptr) {
		this->self->_field_s->_method_push_err(_106344_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_2186ce186_Assign>(new( std::nothrow ) _2186ce186_Assign(_106417_l->_field_model,_107917_r->_field_model,_106344_a->_field_setter._field_kind)))}));
	if (_106344_a->_field_setter._field_kind != jule::Str("=", 1)) {
		_106344_a->_field_setter._field_kind=_106344_a->_field_setter._field_kind.slice(0LL,_106344_a->_field_setter._field_kind.len() - 1LL);
		_218751758_BinopSolver _111121_solver = _218751758_BinopSolver(jule::new_struct_ptr<_218751758_Eval>(new( std::nothrow ) _218751758_Eval(this->self->_field_s,this->self,jule::Ptr<_200d010d9_TypeKind>(),this->self->_method_is_unsafe(),jule::Bool(),jule::Ptr<_200c58948_Var>())),jule::Ptr<_218751758_Data>(),jule::Ptr<_218751758_Data>(),_106344_a->_field_setter);
		_107917_r=_111121_solver._method_solve_explicit(_106417_l,_107917_r);
		if (_107917_r == nullptr) {
			return;
		}
		_106344_a->_field_setter._field_kind+=jule::Str("=", 1);
		return;
	}
	_200c5bcc0_AssignTypeChecker _112817_checker = _200c5bcc0_AssignTypeChecker(this->self->_field_s,_106417_l->_field_kind,_107917_r,_106344_a->_field_setter);
	_112817_checker._method_check();
}



void _2186ce186_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ptr<_2186ce186_MultiAssign> _113757_st,jule::Ptr<_233464770_AssignSt> _113813_a,jule::Ptr<_233464770_AssignLeft> _113831_lexpr,jule::Ptr<_218751758_Data> _113855_l,jule::Ptr<_218751758_Data> _113869_r) {
	if (_2336ea198_is_ignore_ident(_113831_lexpr->_field_ident)) {
		if (_113869_r->_field_kind->_method_void()) {
			(*this)._field_s->_method_push_err(_113813_a->_field_right->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		}
		_113757_st->_field_l=jule::append(_113757_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_113813_a->_field_declarative && (*this)._method_is_new_assign_ident(_113831_lexpr->_field_ident)) {
		jule::Ptr<_200c58948_Var> _115021_v = jule::new_struct<_200c58948_Var>(new( std::nothrow ) _200c58948_Var((*this)._field_scope,_113831_lexpr->_field_token,_113831_lexpr->_field_ident,jule::Bool(),jule::Bool(),_113831_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_113831_lexpr->_field_reference,jule::Str(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::new_struct<_218751758_Value>(new( std::nothrow ) _218751758_Value(_113813_a->_field_right,_113869_r)),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_200c58948_IterRelation>(),jule::Slice<jule::Ptr<_200c58948_Var>>()));
		(*this)._field_s->_method_check_var(_115021_v);
		_113757_st->_field_l=jule::append(_113757_st->_field_l,jule::Slice<jule::Any>({jule::Any(_115021_v)}));
		(*this)._field_table->_field_vars=jule::append((*this)._field_table->_field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_115021_v}));
		(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_115021_v)}));
		return;
	}
	if (_113831_lexpr->_field_mutable || _113831_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_113831_lexpr->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_113831_lexpr->_field_ident)}));
		(*this)._field_s->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if ((!(_2186ce186_check_assign((*this)._field_s,_113855_l,_113869_r,_113813_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_113855_l->_field_mutable,false,_113855_l->_field_kind,_113869_r,_113813_a->_field_setter);
	_200c5bcc0_AssignTypeChecker _118517_checker = _200c5bcc0_AssignTypeChecker((*this)._field_s,_113855_l->_field_kind,_113869_r,_113813_a->_field_setter);
	_118517_checker._method_check();
	_113757_st->_field_l=jule::append(_113757_st->_field_l,jule::Slice<jule::Any>({_113855_l->_field_model}));
}



void _2186ce186_ScopeChecker::_method_check_ret_multi_assign(jule::Ptr<_233464770_AssignSt>& _119647_a) {
	jule::Ptr<_218751758_Data> _119717_rd = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_119647_a->_field_right);
	if (_119717_rd == nullptr) {
		return;
	}
	jule::Slice<jule::Ptr<_218751758_Data>> _120217_r = _2186ce186_get_datas_from_tuple_data(_119717_rd);
	{
		if (!((_119647_a->_field_left.len() > _120217_r.len()))) { goto _case_end_4879300304; }
		_case_begin_4879300304:;
		{
			this->self->_field_s->_method_push_err(_119647_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4879300096;
		_case_end_4879300304:;
		if (!((_119647_a->_field_left.len() < _120217_r.len()))) { goto _case_end_4879300400; }
		_case_begin_4879300400:;
		{
			this->self->_field_s->_method_push_err(_119647_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4879300096;
		_case_end_4879300400:;
		_match_end_4879300096:;
	}
	jule::Ptr<_2186ce186_MultiAssign> _121417_st = jule::new_struct<_2186ce186_MultiAssign>(new( std::nothrow ) _2186ce186_MultiAssign(jule::Slice<jule::Any>(),_119717_rd->_field_model));
	if (_119717_rd->_field_kind->_method_tup() == nullptr) {
		_121417_st->_field_r=jule::Any(jule::new_struct<_2188586ea_TupleExprModel>(new( std::nothrow ) _2188586ea_TupleExprModel(_120217_r)));
	}
	{
		auto expr = _119647_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4879307328:;
		if (it != expr.end()) {
			jule::Int _2186ce186_i = it - expr.begin();
			{
				jule::Ptr<_233464770_AssignLeft> _122321_lexpr = _119647_a->_field_left[_2186ce186_i];
				jule::Ptr<_218751758_Data> _122421_l = nullptr;
				if ((!(_2336ea198_is_ignore_ident(_122321_lexpr->_field_ident))) && ((!(_119647_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_122321_lexpr->_field_ident))))) {
					_122421_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_122321_lexpr->_field_expr);
					if (_122421_l == nullptr) {
						goto _iter_next_4879307328;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_121417_st,_119647_a,_122321_lexpr,_122421_l,_120217_r[_2186ce186_i]);
			}
			_iter_next_4879307328:;
			++it;
			_2186ce186_i++;
			goto _iter_begin_4879307328;
		}
		_iter_end_4879307328:;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_121417_st)}));
}



void _2186ce186_ScopeChecker::_method_check_multi_assign(jule::Ptr<_233464770_AssignSt>& _124043_a) {
	{
		auto _match_expr{ _124043_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnCallExpr>>())) { goto _case_end_4879319952; }
		_case_begin_4879319952:;
		{
			this->self->_method_check_ret_multi_assign(_124043_a);
			return;
		}
		goto _match_end_4879322272;
		_case_end_4879319952:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_UnsafeExpr>>())) { goto _case_end_4879322352; }
		_case_begin_4879322352:;
		{
			{
				auto _match_expr{ _124043_a->_field_right->_field_kind.operator jule::Ptr<_233464770_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ptr<_233464770_FnCallExpr>>())) { goto _case_end_4879323264; }
				_case_begin_4879323264:;
				{
					this->self->_method_check_ret_multi_assign(_124043_a);
					return;
				}
				goto _match_end_4879326112;
				_case_end_4879323264:;
				_match_end_4879326112:;
			}
		}
		goto _match_end_4879322272;
		_case_end_4879322352:;
		_match_end_4879322272:;
	}
	jule::Slice<jule::Any> _125417_right = _2186ce186_get_expr_models(_124043_a->_field_right->_field_kind);
	{
		if (!((_124043_a->_field_left.len() > _125417_right.len()))) { goto _case_end_4879328832; }
		_case_begin_4879328832:;
		{
			this->self->_field_s->_method_push_err(_124043_a->_field_setter,jule::Str("overflow multi assignment identifers", 36),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4879328592;
		_case_end_4879328832:;
		if (!((_124043_a->_field_left.len() < _125417_right.len()))) { goto _case_end_4879328928; }
		_case_begin_4879328928:;
		{
			this->self->_field_s->_method_push_err(_124043_a->_field_setter,jule::Str("missing identifier(s) for multiple assignment", 45),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4879328592;
		_case_end_4879328928:;
		_match_end_4879328592:;
	}
	jule::Ptr<_2188586ea_TupleExprModel> _126617_right_tuple = jule::new_struct<_2188586ea_TupleExprModel>(new( std::nothrow ) _2188586ea_TupleExprModel());
	jule::Ptr<_2186ce186_MultiAssign> _126817_st = jule::new_struct<_2186ce186_MultiAssign>(new( std::nothrow ) _2186ce186_MultiAssign(jule::Slice<jule::Any>(),jule::Any(_126617_right_tuple)));
	{
		auto expr = _124043_a->_field_left;
		auto it = expr.begin();
		_iter_begin_4879337072:;
		if (it != expr.end()) {
			jule::Int _2186ce186_i = it - expr.begin();
			{
				jule::Ptr<_233464770_AssignLeft> _127321_lexpr = _124043_a->_field_left[_2186ce186_i];
				jule::Ptr<_218751758_Data> _127421_l = nullptr;
				if ((!(_2336ea198_is_ignore_ident(_127321_lexpr->_field_ident))) && ((!(_124043_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_127321_lexpr->_field_ident))))) {
					_127421_l=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_127321_lexpr->_field_expr);
					if (_127421_l == nullptr) {
						goto _iter_next_4879337072;
					}
				}
				jule::Ptr<_233464770_Expr> _128421_expr = jule::new_struct<_233464770_Expr>(new( std::nothrow ) _233464770_Expr(_124043_a->_field_right->_field_token,_125417_right[_2186ce186_i]));
				jule::Ptr<_218751758_Eval> _128521_eval = (((_127421_l != nullptr)) ? (this->self->_field_s->_method_evalp(this->self,_127421_l->_field_kind)) : (this->self->_field_s->_method_eval(this->self)));
				jule::Ptr<_218751758_Data> _129021_r = _128521_eval->_method_eval_expr(_128421_expr);
				if (_129021_r == nullptr) {
					goto _iter_next_4879337072;
				}
				_126617_right_tuple->_field_datas=jule::append(_126617_right_tuple->_field_datas,jule::Slice<jule::Ptr<_218751758_Data>>({_129021_r}));
				this->self->_method___process_end_part_of_multi_assign(_126817_st,_124043_a,_127321_lexpr,_127421_l,_129021_r);
			}
			_iter_next_4879337072:;
			++it;
			_2186ce186_i++;
			goto _iter_begin_4879337072;
		}
		_iter_end_4879337072:;
	}
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_126817_st)}));
}



void _2186ce186_ScopeChecker::_method_check_assign_st(jule::Ptr<_233464770_AssignSt> _130339_a) {
	if (_2336ea198_is_postfix_op(_130339_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_130339_a);
		return;
	}
	if ((_130339_a->_field_left.len() == 1LL) && (!(_130339_a->_field_declarative))) {
		this->self->_method_check_single_assign(_130339_a);
		return;
	}
	this->self->_method_check_multi_assign(_130339_a);
}



jule::Ptr<_2186ce186_Scope> _2186ce186_ScopeChecker::_method_check_case_scope(jule::Ptr<_2186ce186_Case>& _131737_c,jule::Ptr<_233464770_ScopeTree>& _131752_tree) {
	jule::Ptr<_2186ce186_ScopeChecker> _131817_ssc = this->self->_method_new_child_checker();
	_131817_ssc->_field_cse=static_cast<jule::Uintptr>(_131737_c);
	return this->self->_method_check_child_sc(_131752_tree,_131817_ssc);
}



jule::Ptr<_2186ce186_Case> _2186ce186_ScopeChecker::_method_check_case(jule::Ptr<_2186ce186_Match> _132334_m,jule::Int _132345_i,jule::Ptr<_233464770_Case> _132357_c,jule::Ptr<_218751758_Data> _132387_expr) {
	jule::Ptr<_2186ce186_Case> _132417__case = _132334_m->_field_cases[_132345_i];
	_132417__case->_field_exprs=jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_132357_c->_field_exprs.len()));
	jule::Bool _132617_generic_matched = false;
	{
		auto expr = _132357_c->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4879376432:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Expr> _2186ce186_e = *it;
			{
				if (_132334_m->_field_type_match) {
					jule::Ptr<_218751758_Eval> _133025_eval = jule::new_struct_ptr<_218751758_Eval>(new( std::nothrow ) _218751758_Eval(this->self->_field_s,this->self,jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Ptr<_200c58948_Var>()));
					jule::Ptr<_218751758_Data> _133525_d = _133025_eval->_method_eval(_2186ce186_e);
					if (_133525_d != nullptr) {
						_132417__case->_field_exprs=jule::append(_132417__case->_field_exprs,jule::Slice<jule::Any>({jule::Any(_133525_d->_field_kind)}));
						if (_2186ce186_count_match_type(_132334_m,_133525_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_2186ce186_e->_field_token,jule::Str("type is already checked: @", 26),jule::Slice<jule::Any>({jule::Any(_133525_d->_field_kind->_method_to_str())}));
						}
					}
					if (_132387_expr->_field_kind->_field_generic) {
						_132617_generic_matched=_132617_generic_matched || _132387_expr->_field_kind->_method_equals(_133525_d->_field_kind);
					} else {
						jule::Ptr<_2185da36c_Trait> _134625_trt = _132387_expr->_field_kind->_method_trt();
						if (_134625_trt != nullptr) {
							this->self->_field_s->_method_check_type_compatibility(_132387_expr->_field_kind,_133525_d->_field_kind,_2186ce186_e->_field_token);
						}
					}
					goto _iter_next_4879376432;
				}
				jule::Ptr<_218751758_Data> _135521_d = this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_2186ce186_e);
				if (_135521_d == nullptr) {
					goto _iter_next_4879376432;
				}
				_132417__case->_field_exprs=jule::append(_132417__case->_field_exprs,jule::Slice<jule::Any>({_135521_d->_field_model}));
				_200c5bcc0_AssignTypeChecker _136221_checker = _200c5bcc0_AssignTypeChecker(this->self->_field_s,_132387_expr->_field_kind,_135521_d,_2186ce186_e->_field_token);
				_136221_checker._method_check();
			}
			_iter_next_4879376432:;
			++it;
			goto _iter_begin_4879376432;
		}
		_iter_end_4879376432:;
	}
	if (((!(_132334_m->_field_type_match)) || (!(_132387_expr->_field_kind->_field_generic))) || _132617_generic_matched) {
		_132417__case->_field_scope=this->self->_method_check_case_scope(_132417__case,_132357_c->_field_scope);
	}
	return _132417__case;
}



void _2186ce186_ScopeChecker::_method_check_cases(jule::Ptr<_233464770_MatchCase>& _137736_m,jule::Ptr<_2186ce186_Match> _137755_rm,jule::Ptr<_218751758_Data> _137771_expr) {
	_137755_rm->_field_cases=jule::Slice<jule::Ptr<_2186ce186_Case>>::alloc(static_cast<jule::I64>(_137736_m->_field_cases.len()));
	{
		auto expr = _137736_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4879407168:;
		if (it != expr.end()) {
			jule::Int _2186ce186_i = it - expr.begin();
			{
				jule::Ptr<_2186ce186_Case> _138021__case = jule::new_struct<_2186ce186_Case>(new( std::nothrow ) _2186ce186_Case(_137755_rm,jule::Ptr<_2186ce186_Scope>(),jule::Slice<jule::Any>(),jule::Ptr<_2186ce186_Case>()));
				if (_2186ce186_i > 0LL) {
					_137755_rm->_field_cases[_2186ce186_i - 1LL]->_field_next=_138021__case;
				}
				_137755_rm->_field_cases[_2186ce186_i]=_138021__case;
			}
			_iter_next_4879407168:;
			++it;
			_2186ce186_i++;
			goto _iter_begin_4879407168;
		}
		_iter_end_4879407168:;
	}
	if ((_137755_rm->_field_default != nullptr) && (_137736_m->_field_cases.len() > 0LL)) {
		_137755_rm->_field_cases[_137755_rm->_field_cases.len() - 1LL]->_field_next=_137755_rm->_field_default;
	}
	{
		auto expr = _137736_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4879407696:;
		if (it != expr.end()) {
			jule::Int _2186ce186_i = it - expr.begin();
			jule::Ptr<_233464770_Case> _2186ce186_c = *it;
			{
				this->self->_method_check_case(_137755_rm,_2186ce186_i,_2186ce186_c,_137771_expr);
			}
			_iter_next_4879407696:;
			++it;
			_2186ce186_i++;
			goto _iter_begin_4879407696;
		}
		_iter_end_4879407696:;
	}
}



jule::Ptr<_2186ce186_Case> _2186ce186_ScopeChecker::_method_check_default(jule::Ptr<_2186ce186_Match> _140037_m,jule::Ptr<_233464770_Else> _140052_d) {
	jule::Ptr<_2186ce186_Case> _140117_def = jule::new_struct<_2186ce186_Case>(new( std::nothrow ) _2186ce186_Case(_140037_m,jule::Ptr<_2186ce186_Scope>(),jule::Slice<jule::Any>(),jule::Ptr<_2186ce186_Case>()));
	_140117_def->_field_scope=this->self->_method_check_case_scope(_140117_def,_140052_d->_field_scope);
	return _140117_def;
}



void _2186ce186_ScopeChecker::_method_check_comptime_panic(jule::Ptr<_2186ce186_Scope>& _140840_s,_2336ea198_Token _140851_error_token) {
	if (_140840_s->_field_stmts.len() != 1LL) {
		return;
	}
	jule::Any _141313_stmt = _140840_s->_field_stmts[0LL];
	{
		auto _match_expr{ _141313_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_218751758_Data>>())) { goto _case_end_4879427552; }
		_case_begin_4879427552:;
		{
			jule::Ptr<_218751758_Data> _141617_d = _141313_stmt.operator jule::Ptr<_218751758_Data>();
			{
				auto _match_expr{ _141617_d->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>>())) { goto _case_end_4879428944; }
				_case_begin_4879428944:;
				{
					jule::Ptr<_2188586ea_BuiltinPanicCallExprModel> _141921_m = _141617_d->_field_model.operator jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>();
					{
						auto _match_expr{ _141921_m->_field_expr };
						if (!(_match_expr.type_is<jule::Ptr<_1d68bd462_Const>>())) { goto _case_end_4879431856; }
						_case_begin_4879431856:;
						{
							jule::Ptr<_1d68bd462_Const> _142225_c = _141921_m->_field_expr.operator jule::Ptr<_1d68bd462_Const>();
							if (_142225_c->_method_is_str()) {
								(*this)._field_s->_method_push_err(_140851_error_token,jule::Str("compile-time panic: @", 21),jule::Slice<jule::Any>({jule::Any(_142225_c->_method_read_str())}));
							}
						}
						goto _match_end_4879434864;
						_case_end_4879431856:;
						_match_end_4879434864:;
					}
				}
				goto _match_end_4879431696;
				_case_end_4879428944:;
				_match_end_4879431696:;
			}
		}
		goto _match_end_4879428816;
		_case_end_4879427552:;
		_match_end_4879428816:;
	}
}



void _2186ce186_ScopeChecker::_method_push_type_match(jule::Ptr<_2186ce186_Match> _143139_tm,jule::Ptr<_233464770_MatchCase>& _143152_m) {
	if (_143139_tm->_field_expr->_field_kind->_field_generic) {
		{
			auto expr = _143139_tm->_field_cases;
			auto it = expr.begin();
			_iter_begin_4879442352:;
			if (it != expr.end()) {
				jule::Int _2186ce186_i = it - expr.begin();
				jule::Ptr<_2186ce186_Case> _2186ce186_c = *it;
				{
					if (_2186ce186_c->_field_scope != nullptr) {
						_143139_tm->_field_cases=nullptr;
						_143139_tm->_field_default=_2186ce186_c;
						this->self->_method_check_comptime_panic(_2186ce186_c->_field_scope,_143152_m->_field_cases[_2186ce186_i]->_field_token);
						goto _julec_label_push;
					}
				}
				_iter_next_4879442352:;
				++it;
				_2186ce186_i++;
				goto _iter_begin_4879442352;
			}
			_iter_end_4879442352:;
		}
		if (_143139_tm->_field_default != nullptr) {
			this->self->_method_check_comptime_panic(_143139_tm->_field_default->_field_scope,_143152_m->_field_default->_field_token);
		}
		_143139_tm->_field_cases=nullptr;
	}
	_julec_label_push:;
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_143139_tm)}));
}



void _2186ce186_ScopeChecker::_method_check_type_match(jule::Ptr<_233464770_MatchCase>& _145341_m) {
	jule::Ptr<_218751758_Data> _145417_d = this->self->_field_s->_method_eval(this->self)->_method_eval(_145341_m->_field_expr);
	if (_145417_d == nullptr) {
		return;
	}
	if ((!(_145417_d->_field_kind->_field_generic)) && (!(((_145417_d->_field_kind->_method_prim() != nullptr) && _145417_d->_field_kind->_method_prim()->_method_is_any()) || (_145417_d->_field_kind->_method_trt() != nullptr)))) {
		this->self->_field_s->_method_push_err(_145341_m->_field_expr->_field_token,jule::Str("type-case must be have <any>, <trait> or <generic> typed expression", 67),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ptr<_2186ce186_Match> _146517_tm = jule::new_struct<_2186ce186_Match>(new( std::nothrow ) _2186ce186_Match(_145417_d,true,jule::Slice<jule::Ptr<_2186ce186_Case>>(),jule::Ptr<_2186ce186_Case>()));
	if (_145341_m->_field_default != nullptr) {
		_146517_tm->_field_default=this->self->_method_check_default(_146517_tm,_145341_m->_field_default);
	}
	this->self->_method_check_cases(_145341_m,_146517_tm,_145417_d);
	this->self->_method_push_type_match(_146517_tm,_145341_m);
}



void _2186ce186_ScopeChecker::_method_check_common_match(jule::Ptr<_233464770_MatchCase>& _147843_m) {
	jule::Ptr<_218751758_Data> _147917_d = nullptr;
	if (_147843_m->_field_expr == nullptr) {
		_147917_d=jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1d68bd462_Const::_static_method_new_bool(true)));
		_147917_d->_field_model=jule::Any(_147917_d->_field_constant);
	} else {
		_147917_d=this->self->_field_s->_method_eval(this->self)->_method_eval_expr(_147843_m->_field_expr);
		if (_147917_d == nullptr) {
			return;
		}
	}
	jule::Ptr<_2186ce186_Match> _149317_mc = jule::new_struct<_2186ce186_Match>(new( std::nothrow ) _2186ce186_Match(_147917_d,jule::Bool(),jule::Slice<jule::Ptr<_2186ce186_Case>>(),jule::Ptr<_2186ce186_Case>()));
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_149317_mc)}));
	if (_147843_m->_field_default != nullptr) {
		_149317_mc->_field_default=this->self->_method_check_default(_149317_mc,_147843_m->_field_default);
	}
	this->self->_method_check_cases(_147843_m,_149317_mc,_147917_d);
}



void _2186ce186_ScopeChecker::_method_check_match(jule::Ptr<_233464770_MatchCase> _150535_m) {
	if (_150535_m->_field_type_match) {
		this->self->_method_check_type_match(_150535_m);
		return;
	}
	this->self->_method_check_common_match(_150535_m);
}



void _2186ce186_ScopeChecker::_method_check_fall(jule::Ptr<_233464770_FallSt> _151329_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts.len() + 1LL) < (*this)._field_scope->_field_stmts.len())) {
		(*this)._field_s->_method_push_err(_151329_f->_field_token,jule::Str("fallthrough keyword can only useable at end of the case scopes", 62),jule::Slice<jule::Any>({}));
		return;
	}
	_2186ce186_Case* _151917__case = ((_2186ce186_Case*)((*this)._field_cse));
	if (_151917__case->_field_next == nullptr) {
		(*this)._field_s->_method_push_err(_151329_f->_field_token,jule::Str("fallthrough cannot useable at final case", 40),jule::Slice<jule::Any>({}));
		(*this)._field_s->_method_push_suggestion(jule::Str("remove \"fall\" keyword", 21),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts=jule::append((*this)._field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(jule::new_struct<_2186ce186_FallSt>(new( std::nothrow ) _2186ce186_FallSt(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_151917__case->_field_next)))))}));
}



jule::Ptr<_2186ce186_BreakSt> _2186ce186_ScopeChecker::_method_check_break_with_label(jule::Ptr<_233464770_BreakSt> _153142_b) {
	jule::Ptr<_2186ce186_BreakSt> _153217_brk = this->self->_method_check_plain_break(_153142_b);
	if (_153217_brk == nullptr) {
		return nullptr;
	}
	_153217_brk->_field_it=0LL;
	_153217_brk->_field_mtch=0LL;
	jule::Ptr<_2186ce186_ScopeLabel> _154217_label = _2186ce186_find_label_parent(_153142_b->_field_label._field_kind,this->self->_field_parent);
	if (_154217_label == nullptr) {
		this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_153142_b->_field_label._field_kind)}));
		return nullptr;
	}
	_154217_label->_field_used=true;
	if ((_154217_label->_field_pos + 1LL) >= _154217_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Int _155513_i = _154217_label->_field_pos + 1LL;
	if (_155513_i >= _154217_label->_field_scope->_field_scope->_field_stmts.len()) {
		this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _155921_st = _154217_label->_field_scope->_field_scope->_field_stmts[_155513_i];
		{
			auto _match_expr{ _155921_st };
			if (!(_match_expr.type_is<jule::Ptr<_2186ce186_InfIter>>())) { goto _case_end_4879523008; }
			_case_begin_4879523008:;
			{
				_153217_brk->_field_it=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_2186ce186_InfIter>());
			}
			goto _match_end_4879521056;
			_case_end_4879523008:;
			if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RangeIter>>())) { goto _case_end_4879521440; }
			_case_begin_4879521440:;
			{
				_153217_brk->_field_it=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_2186ce186_RangeIter>());
			}
			goto _match_end_4879521056;
			_case_end_4879521440:;
			if (!(_match_expr.type_is<jule::Ptr<_2186ce186_WhileIter>>())) { goto _case_end_4879521536; }
			_case_begin_4879521536:;
			{
				_153217_brk->_field_it=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_2186ce186_WhileIter>());
			}
			goto _match_end_4879521056;
			_case_end_4879521536:;
			if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Match>>())) { goto _case_end_4879521632; }
			_case_begin_4879521632:;
			{
				_153217_brk->_field_mtch=static_cast<jule::Uintptr>(_155921_st.operator jule::Ptr<_2186ce186_Match>());
			}
			goto _match_end_4879521056;
			_case_end_4879521632:;
			_case_begin_4879518592:;
			{
				this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4879521056;
			_case_end_4879518592:;
			_match_end_4879521056:;
		}
	}
	if (_153217_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_153217_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_153217_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_153217_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_153142_b->_field_label,jule::Str("invalid label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _153217_brk;
}



jule::Ptr<_2186ce186_BreakSt> _2186ce186_ScopeChecker::_method_check_plain_break(jule::Ptr<_233464770_BreakSt> _158437_b) {
	jule::Ptr<_2186ce186_ScopeChecker> _158517_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_158517_scope->_field_it == 0LL) && (_158517_scope->_field_cse == 0LL)) && (_158517_scope->_field_parent != nullptr)) && (_158517_scope->_field_owner == nullptr)))) { goto _case_end_4879537296; }
		_case_begin_4879537296:;
		{
			_158517_scope=_158517_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4879537056;
		_case_end_4879537296:;
		if (!((_158517_scope->_field_it != 0LL))) { goto _case_end_4879537408; }
		_case_begin_4879537408:;
		{
			return jule::new_struct<_2186ce186_BreakSt>(new( std::nothrow ) _2186ce186_BreakSt(_158517_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4879537056;
		_case_end_4879537408:;
		if (!((_158517_scope->_field_cse != 0LL))) { goto _case_end_4879537520; }
		_case_begin_4879537520:;
		{
			return jule::new_struct<_2186ce186_BreakSt>(new( std::nothrow ) _2186ce186_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_2186ce186_Case*)(_158517_scope->_field_cse))->_field_owner))));
		}
		goto _match_end_4879537056;
		_case_end_4879537520:;
		_match_end_4879537056:;
	}
	this->self->_field_s->_method_push_err(_158437_b->_field_token,jule::Str("break keyword is cannot used at out of iteration and match cases", 64),jule::Slice<jule::Any>({}));
	return nullptr;
}



void _2186ce186_ScopeChecker::_method_check_break(jule::Ptr<_233464770_BreakSt> _160331_b) {
	if (_160331_b->_field_label._field_id != 0LLU) {
		jule::Ptr<_2186ce186_BreakSt> _160521_brk = this->self->_method_check_break_with_label(_160331_b);
		this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_160521_brk)}));
		return;
	}
	jule::Ptr<_2186ce186_BreakSt> _161017_brk = this->self->_method_check_plain_break(_160331_b);
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_161017_brk)}));
}



void _2186ce186_ScopeChecker::_method_check_ret(jule::Ptr<_233464770_RetSt> _161433_r) {
	jule::Ptr<_2186ce186_RetSt> _161517_rt = jule::new_struct<_2186ce186_RetSt>(new( std::nothrow ) _2186ce186_RetSt());
	this->self->_field_scope->_field_stmts=jule::append(this->self->_field_scope->_field_stmts,jule::Slice<jule::Any>({jule::Any(_161517_rt)}));
	jule::Ptr<_200c5bcc0_RetTypeChecker> _161817_rtc = jule::new_struct<_200c5bcc0_RetTypeChecker>(new( std::nothrow ) _200c5bcc0_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_233464770_Expr>>(),jule::Slice<jule::Ptr<_200c58948_Var>>(),_161433_r->_field_token,jule::Any()));
	jule::Bool _162313_ok = _161817_rtc->_method_check(_161433_r->_field_expr);
	if ((!(_162313_ok))) {
		return;
	}
	if ((_161433_r->_field_expr == nullptr) && (_161817_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_161517_rt->_field_vars=_161817_rtc->_field_vars;
	if (_161433_r->_field_expr != nullptr) {
		_161517_rt->_field_expr=_161817_rtc->_field_model;
	}
}



void _2186ce186_ScopeChecker::_method_check_node(jule::Any& _163935_node) {
	{
		auto _match_expr{ _163935_node };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Comment>>())) { goto _case_end_4879575936; }
		_case_begin_4879575936:;
		{
			goto _match_end_4879574640;
		}
		goto _match_end_4879574640;
		_case_end_4879575936:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_ScopeTree>>())) { goto _case_end_4879575472; }
		_case_begin_4879575472:;
		{
			this->self->_method_check_anon_scope(_163935_node.operator jule::Ptr<_233464770_ScopeTree>());
		}
		goto _match_end_4879574640;
		_case_end_4879575472:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_VarDecl>>())) { goto _case_end_4879575200; }
		_case_begin_4879575200:;
		{
			this->self->_method_check_var_decl(_163935_node.operator jule::Ptr<_233464770_VarDecl>());
		}
		goto _match_end_4879574640;
		_case_end_4879575200:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TypeAliasDecl>>())) { goto _case_end_4879575296; }
		_case_begin_4879575296:;
		{
			this->self->_method_check_type_alias_decl(_163935_node.operator jule::Ptr<_233464770_TypeAliasDecl>());
		}
		goto _match_end_4879574640;
		_case_end_4879575296:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Expr>>())) { goto _case_end_4879576368; }
		_case_begin_4879576368:;
		{
			this->self->_method_check_expr(_163935_node.operator jule::Ptr<_233464770_Expr>());
		}
		goto _match_end_4879574640;
		_case_end_4879576368:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Conditional>>())) { goto _case_end_4879576464; }
		_case_begin_4879576464:;
		{
			this->self->_method_check_conditional(_163935_node.operator jule::Ptr<_233464770_Conditional>());
		}
		goto _match_end_4879574640;
		_case_end_4879576464:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Iter>>())) { goto _case_end_4879576560; }
		_case_begin_4879576560:;
		{
			this->self->_method_check_iter(_163935_node.operator jule::Ptr<_233464770_Iter>());
		}
		goto _match_end_4879574640;
		_case_end_4879576560:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_ContSt>>())) { goto _case_end_4879576656; }
		_case_begin_4879576656:;
		{
			this->self->_method_check_cont(_163935_node.operator jule::Ptr<_233464770_ContSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879576656:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_LabelSt>>())) { goto _case_end_4879576752; }
		_case_begin_4879576752:;
		{
			this->self->_method_check_label(_163935_node.operator jule::Ptr<_233464770_LabelSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879576752:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_GotoSt>>())) { goto _case_end_4879576848; }
		_case_begin_4879576848:;
		{
			this->self->_method_push_goto(_163935_node.operator jule::Ptr<_233464770_GotoSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879576848:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_AssignSt>>())) { goto _case_end_4879576944; }
		_case_begin_4879576944:;
		{
			this->self->_method_check_assign_st(_163935_node.operator jule::Ptr<_233464770_AssignSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879576944:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_MatchCase>>())) { goto _case_end_4879577040; }
		_case_begin_4879577040:;
		{
			this->self->_method_check_match(_163935_node.operator jule::Ptr<_233464770_MatchCase>());
		}
		goto _match_end_4879574640;
		_case_end_4879577040:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FallSt>>())) { goto _case_end_4879577136; }
		_case_begin_4879577136:;
		{
			this->self->_method_check_fall(_163935_node.operator jule::Ptr<_233464770_FallSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879577136:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_BreakSt>>())) { goto _case_end_4879577232; }
		_case_begin_4879577232:;
		{
			this->self->_method_check_break(_163935_node.operator jule::Ptr<_233464770_BreakSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879577232:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_RetSt>>())) { goto _case_end_4879577328; }
		_case_begin_4879577328:;
		{
			this->self->_method_check_ret(_163935_node.operator jule::Ptr<_233464770_RetSt>());
		}
		goto _match_end_4879574640;
		_case_end_4879577328:;
		_case_begin_4879572800:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4879574640;
		_case_end_4879572800:;
		_match_end_4879574640:;
	}
}



void _2186ce186_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_tree->_field_stmts.len(); (this->self->_field_i)++) {
		{
			jule::Any _166321_stmt = this->self->_field_tree->_field_stmts[this->self->_field_i];
			this->self->_method_check_node(_166321_stmt);
		}
	_iter_next_4879602672:;
	}
	_iter_end_4879602672:;
}



void _2186ce186_ScopeChecker::_method_check_goto(jule::Ptr<_2186ce186_ScopeGoto>& _166834_gt,jule::Ptr<_2186ce186_ScopeLabel>& _166855_label) {
	jule::Ptr<_2186ce186_ScopeChecker> _166917_gtsc = _166834_gt->_field_scope;
	while ((_166917_gtsc->_field_child_index - 1LL) > _166855_label->_field_scope->_field_child_index) {
		{
			_166917_gtsc=_166917_gtsc->_field_parent;
		}
	_iter_next_4879609920:;
	}
	_iter_end_4879609920:;
	jule::Int _167417_n = 0LL;
	if (_166917_gtsc->_field_scope == _166855_label->_field_scope->_field_scope) {
		if (_166834_gt->_field_pos > _166855_label->_field_pos) {
			return;
		}
		_167417_n=_166834_gt->_field_pos;
	}
	jule::Int _168717_i = _166855_label->_field_pos - 1LL;
	if (_167417_n == 0LL) {
		{
			auto expr = _166855_label->_field_scope->_field_scope->_field_stmts;
			auto it = expr.begin();
			_iter_begin_4879617936:;
			if (it != expr.end()) {
				jule::Int _2186ce186_j = it - expr.begin();
				jule::Any _2186ce186_stmt = *it;
				{
					if (_2186ce186_stmt_is_goto_scope(_2186ce186_stmt,_166917_gtsc->_field_scope)) {
						_167417_n=_2186ce186_j;
						goto _iter_end_4879617936;
					}
				}
				_iter_next_4879617936:;
				++it;
				_2186ce186_j++;
				goto _iter_begin_4879617936;
			}
			_iter_end_4879617936:;
		}
	}
	for (; _168717_i >= _167417_n; (_168717_i)--) {
		{
			jule::Any _170021_stmt = _166855_label->_field_scope->_field_scope->_field_stmts[_168717_i];
			if (_2186ce186_st_is_def(_170021_stmt)) {
				(*this)._field_s->_method_push_err(_166834_gt->_field_gt->_field_token,jule::Str("goto @ jumps over declaration(s)", 32),jule::Slice<jule::Any>({jule::Any(_166834_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
		}
	_iter_next_4879618960:;
	}
	_iter_end_4879618960:;
}



void _2186ce186_ScopeChecker::_method_check_gotos(void) {
	{
		auto expr = (*((*this)._field_gotos));
		auto it = expr.begin();
		_iter_begin_4879626864:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_ScopeGoto> _2186ce186_gt = *it;
			{
				jule::Ptr<_2186ce186_ScopeLabel> _171021_label = (*this)._method_find_label_all(_2186ce186_gt->_field_gt->_field_label._field_kind);
				if (_171021_label == nullptr) {
					(*this)._field_s->_method_push_err(_2186ce186_gt->_field_gt->_field_token,jule::Str("not exist any label in this identifier: @", 41),jule::Slice<jule::Any>({jule::Any(_2186ce186_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4879626864;
				}
				_171021_label->_field_used=true;
				(*this)._method_check_goto(_2186ce186_gt,_171021_label);
			}
			_iter_next_4879626864:;
			++it;
			goto _iter_begin_4879626864;
		}
		_iter_end_4879626864:;
	}
}



void _2186ce186_ScopeChecker::_method_check_labels(void) {
	{
		auto expr = (*((*this)._field_labels));
		auto it = expr.begin();
		_iter_begin_4879635024:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_ScopeLabel> _2186ce186_l = *it;
			{
				if ((!(_2186ce186_l->_field_used))) {
					(*this)._field_s->_method_push_err(_2186ce186_l->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2186ce186_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4879635024:;
			++it;
			goto _iter_begin_4879635024;
		}
		_iter_end_4879635024:;
	}
}



void _2186ce186_ScopeChecker::_method_check_vars(void) {
	{
		auto expr = (*this)._field_table->_field_vars;
		auto it = expr.begin();
		_iter_begin_4879640464:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _2186ce186_v = *it;
			{
				if ((((!(_2186ce186_v->_field_used)) && (!(_2336ea198_is_ignore_ident(_2186ce186_v->_field_ident)))) && (!(_2336ea198_is_anon_ident(_2186ce186_v->_field_ident)))) && (_2186ce186_v->_field_ident != jule::Str("self", 4))) {
					(*this)._field_s->_method_push_err(_2186ce186_v->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2186ce186_v->_field_ident)}));
				}
			}
			_iter_next_4879640464:;
			++it;
			goto _iter_begin_4879640464;
		}
		_iter_end_4879640464:;
	}
}



void _2186ce186_ScopeChecker::_method_check_aliases(void) {
	{
		auto expr = (*this)._field_table->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4879647120:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeAlias> _2186ce186_a = *it;
			{
				if (((!(_2186ce186_a->_field_used)) && (!(_2336ea198_is_ignore_ident(_2186ce186_a->_field_ident)))) && (!(_2336ea198_is_anon_ident(_2186ce186_a->_field_ident)))) {
					(*this)._field_s->_method_push_err(_2186ce186_a->_field_token,jule::Str("@ declared but not used", 23),jule::Slice<jule::Any>({jule::Any(_2186ce186_a->_field_ident)}));
				}
			}
			_iter_next_4879647120:;
			++it;
			goto _iter_begin_4879647120;
		}
		_iter_end_4879647120:;
	}
}



void _2186ce186_ScopeChecker::_method_check(jule::Ptr<_233464770_ScopeTree>& _174630_tree,jule::Ptr<_2186ce186_Scope>& _174653_s) {
	_174653_s->_field_deferred=_174630_tree->_field_deferred;
	_174653_s->_field_unsafety=_174630_tree->_field_unsafety;
	jule::I64 _175013_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_174630_tree;
	this->self->_field_scope=_174653_s;
	this->self->_method_check_tree();
	if (_175013_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



jule::Ptr<_2186ce186_ScopeChecker> _2186ce186_ScopeChecker::_method_new_child_checker(void) {
	jule::Ptr<_2186ce186_ScopeChecker> _177017_base = _2186ce186_new_scope_checker_base(this->self->_field_s,nullptr);
	_177017_base->_field_parent=this->self;
	_177017_base->_field_labels=this->self->_field_labels;
	_177017_base->_field_gotos=this->self->_field_gotos;
	_177017_base->_field_child_index=static_cast<jule::Int>(this->self->_field_child_index + 1LL);
	return _177017_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinAppendCallExprModel &_Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "elements:" << _Src._field_elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_IntegratedToStrExprModel &_Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2188586ea_TernaryExprModel &_Src) {
	_Stream << "TernaryExprModel{";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_218848bd5_ImportInfo> _218848bd5_Package::_method_find_package(jule::Str ) {
	return nullptr;
}



jule::Ptr<_218848bd5_ImportInfo> _218848bd5_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)> ) {
	return nullptr;
}



jule::Ptr<_200c58948_Var> _218848bd5_Package::_method_find_var(jule::Str _26631_ident,jule::Bool _26643_cpp_linked) {
	return _218848bd5_find_var_in_package((*this)._field_files,_26631_ident,_26643_cpp_linked);
}



jule::Ptr<_200d010d9_TypeAlias> _218848bd5_Package::_method_find_type_alias(jule::Str _27238_ident,jule::Bool _27250_cpp_linked) {
	return _218848bd5_find_type_alias_in_package((*this)._field_files,_27238_ident,_27250_cpp_linked);
}



jule::Ptr<_23461aa35_Struct> _218848bd5_Package::_method_find_struct(jule::Str _27834_ident,jule::Bool _27846_cpp_linked) {
	return _218848bd5_find_struct_in_package((*this)._field_files,_27834_ident,_27846_cpp_linked);
}



jule::Ptr<_2185d51ad_Fn> _218848bd5_Package::_method_find_fn(jule::Str _28430_ident,jule::Bool _28442_cpp_linked) {
	return _218848bd5_find_fn_in_package((*this)._field_files,_28430_ident,_28442_cpp_linked);
}



jule::Ptr<_2185da36c_Trait> _218848bd5_Package::_method_find_trait(jule::Str _29033_ident) {
	return _218848bd5_find_trait_in_package((*this)._field_files,_29033_ident);
}



jule::Ptr<_2186be3da_Enum> _218848bd5_Package::_method_find_enum(jule::Str _29632_ident) {
	return _218848bd5_find_enum_in_package((*this)._field_files,_29632_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _218848bd5_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_Sema::_method_find_package(jule::Str _33435_ident) {
	return (*this)._field_file->_method_find_package(_33435_ident);
}



jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)> _34437_selector) {
	return (*this)._field_file->_method_select_package(_34437_selector);
}



jule::Ptr<_200c58948_Var> _1eec2c632_Sema::_method_find_var(jule::Str _35431_ident,jule::Bool _35443_cpp_linked) {
	jule::Ptr<_200c58948_Var> _35617_v = _218848bd5_find_var_in_package((*this)._field_files,_35431_ident,_35443_cpp_linked);
	if (_35617_v != nullptr) {
		return _35617_v;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879748208:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if ((!(_1eec2c632_imp_is_lookupable(_1eec2c632_imp,_35431_ident)))) {
					goto _iter_next_4879748208;
				}
				_35617_v=_1eec2c632_imp->_method_find_var(_35431_ident,_35443_cpp_linked);
				if ((_35617_v != nullptr) && (*this)._method_is_accessible_define(_35617_v->_field_public,_35617_v->_field_token)) {
					return _35617_v;
				}
			}
			_iter_next_4879748208:;
			++it;
			goto _iter_begin_4879748208;
		}
		_iter_end_4879748208:;
	}
	return nullptr;
}



jule::Ptr<_200d010d9_TypeAlias> _1eec2c632_Sema::_method_find_type_alias(jule::Str _38138_ident,jule::Bool _38150_cpp_linked) {
	jule::Ptr<_200d010d9_TypeAlias> _38317_ta = _218848bd5_find_type_alias_in_package((*this)._field_files,_38138_ident,_38150_cpp_linked);
	if (_38317_ta != nullptr) {
		return _38317_ta;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879757664:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if ((!(_1eec2c632_imp_is_lookupable(_1eec2c632_imp,_38138_ident)))) {
					goto _iter_next_4879757664;
				}
				_38317_ta=_1eec2c632_imp->_method_find_type_alias(_38138_ident,_38150_cpp_linked);
				if ((_38317_ta != nullptr) && (*this)._method_is_accessible_define(_38317_ta->_field_public,_38317_ta->_field_token)) {
					return _38317_ta;
				}
			}
			_iter_next_4879757664:;
			++it;
			goto _iter_begin_4879757664;
		}
		_iter_end_4879757664:;
	}
	return nullptr;
}



jule::Ptr<_23461aa35_Struct> _1eec2c632_Sema::_method_find_struct(jule::Str _40834_ident,jule::Bool _40846_cpp_linked) {
	jule::Ptr<_23461aa35_Struct> _41017_s = _218848bd5_find_struct_in_package((*this)._field_files,_40834_ident,_40846_cpp_linked);
	if (_41017_s != nullptr) {
		return _41017_s;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879765808:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if ((!(_1eec2c632_imp_is_lookupable(_1eec2c632_imp,_40834_ident)))) {
					goto _iter_next_4879765808;
				}
				_41017_s=_1eec2c632_imp->_method_find_struct(_40834_ident,_40846_cpp_linked);
				if ((_41017_s != nullptr) && (*this)._method_is_accessible_define(_41017_s->_field_public,_41017_s->_field_token)) {
					return _41017_s;
				}
			}
			_iter_next_4879765808:;
			++it;
			goto _iter_begin_4879765808;
		}
		_iter_end_4879765808:;
	}
	return nullptr;
}



jule::Ptr<_2185d51ad_Fn> _1eec2c632_Sema::_method_find_fn(jule::Str _43530_ident,jule::Bool _43542_cpp_linked) {
	jule::Ptr<_2185d51ad_Fn> _43717_f = _218848bd5_find_fn_in_package((*this)._field_files,_43530_ident,_43542_cpp_linked);
	if (_43717_f != nullptr) {
		return _43717_f;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879774080:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if ((!(_1eec2c632_imp_is_lookupable(_1eec2c632_imp,_43530_ident)))) {
					goto _iter_next_4879774080;
				}
				_43717_f=_1eec2c632_imp->_method_find_fn(_43530_ident,_43542_cpp_linked);
				if ((_43717_f != nullptr) && (*this)._method_is_accessible_define(_43717_f->_field_public,_43717_f->_field_token)) {
					return _43717_f;
				}
			}
			_iter_next_4879774080:;
			++it;
			goto _iter_begin_4879774080;
		}
		_iter_end_4879774080:;
	}
	return nullptr;
}



jule::Ptr<_2185da36c_Trait> _1eec2c632_Sema::_method_find_trait(jule::Str _46233_ident) {
	jule::Ptr<_2185da36c_Trait> _46417_t = _218848bd5_find_trait_in_package((*this)._field_files,_46233_ident);
	if (_46417_t != nullptr) {
		return _46417_t;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879781888:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if ((!(_1eec2c632_imp_is_lookupable(_1eec2c632_imp,_46233_ident)))) {
					goto _iter_next_4879781888;
				}
				_46417_t=_1eec2c632_imp->_method_find_trait(_46233_ident);
				if ((_46417_t != nullptr) && (*this)._method_is_accessible_define(_46417_t->_field_public,_46417_t->_field_token)) {
					return _46417_t;
				}
			}
			_iter_next_4879781888:;
			++it;
			goto _iter_begin_4879781888;
		}
		_iter_end_4879781888:;
	}
	return nullptr;
}



jule::Ptr<_2186be3da_Enum> _1eec2c632_Sema::_method_find_enum(jule::Str _48932_ident) {
	jule::Ptr<_2186be3da_Enum> _49117_e = _218848bd5_find_enum_in_package((*this)._field_files,_48932_ident);
	if (_49117_e != nullptr) {
		return _49117_e;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879789344:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if ((!(_1eec2c632_imp_is_lookupable(_1eec2c632_imp,_48932_ident)))) {
					goto _iter_next_4879789344;
				}
				_49117_e=_1eec2c632_imp->_method_find_enum(_48932_ident);
				if ((_49117_e != nullptr) && (*this)._method_is_accessible_define(_49117_e->_field_public,_49117_e->_field_token)) {
					return _49117_e;
				}
			}
			_iter_next_4879789344:;
			++it;
			goto _iter_begin_4879789344;
		}
		_iter_end_4879789344:;
	}
	return nullptr;
}



jule::Bool _1eec2c632_Sema::_method_is_flag(jule::Int _51322_flags) {
	return ((*this)._field_flags & _51322_flags) == _51322_flags;
}



void _1eec2c632_Sema::_method_set_current_file(jule::Ptr<_218737b7e_SymbolTable> _51539_f) {
	(*this)._field_file=_51539_f;
}



void _1eec2c632_Sema::_method_push_err(_2336ea198_Token _51727_token,jule::Str _51741_fmt,jule::Slice<jule::Any> _51754_args) {
	(*this)._field_errors=jule::append((*this)._field_errors,jule::Slice<_231e4202e_Log>({_1eec2c632_compiler_err(_51727_token,true,_51741_fmt,_51754_args)}));
}



void _1eec2c632_Sema::_method_push_suggestion(jule::Str _52234_fmt,jule::Slice<jule::Any> _52247_args) {
	{
		_1eec2c632_push_suggestion((&((*this)._field_errors[(*this)._field_errors.len() - 1LL])),_52234_fmt,_52247_args);
	}
}



jule::Bool _1eec2c632_Sema::_method_is_accessible_define(jule::Bool _52735_public,_2336ea198_Token _52749_token) {
	return (_52735_public || (_52749_token._field_file == nullptr)) || ((*this)._field_file->_field_file->_method_dir() == _52749_token._field_file->_method_dir());
}



jule::Bool _1eec2c632_Sema::_method_is_duplicated_ident(jule::Uintptr _53434_itself,jule::Str _53451_ident,jule::Bool _53463_cpp_linked) {
	{
		auto expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4879813696:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				if (_1eec2c632_f->_method_is_duplicated_ident(_53434_itself,_53451_ident,_53463_cpp_linked)) {
					return true;
				}
				{
					auto expr = _1eec2c632_f->_field_imports;
					auto it = expr.begin();
					_iter_begin_4879818352:;
					if (it != expr.end()) {
						jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
						{
							{
								auto expr = _1eec2c632_imp->_field_selected;
								auto it = expr.begin();
								_iter_begin_4879820144:;
								if (it != expr.end()) {
									_2336ea198_Token _1eec2c632_selected = *it;
									{
										if (_1eec2c632_selected._field_kind == _53451_ident) {
											return true;
										}
									}
									_iter_next_4879820144:;
									++it;
									goto _iter_begin_4879820144;
								}
								_iter_end_4879820144:;
							}
						}
						_iter_next_4879818352:;
						++it;
						goto _iter_begin_4879818352;
					}
					_iter_end_4879818352:;
				}
			}
			_iter_next_4879813696:;
			++it;
			goto _iter_begin_4879813696;
		}
		_iter_end_4879813696:;
	}
	return false;
}



jule::Bool _1eec2c632_Sema::_method_check_generic_quantity(jule::Int _55141_required,jule::Int _55156_given,_2336ea198_Token _55168_error_token) {
	jule::Bool _55190_ok = jule::Bool();
	{
		if (!(((_55141_required == 0LL) && (_55156_given > 0LL)))) { goto _case_end_4879826608; }
		_case_begin_4879826608:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4879824976;
		_case_end_4879826608:;
		if (!(((_55141_required > 0LL) && (_55156_given == 0LL)))) { goto _case_end_4879826128; }
		_case_begin_4879826128:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4879824976;
		_case_end_4879826128:;
		if (!((_55141_required < _55156_given))) { goto _case_end_4879826240; }
		_case_begin_4879826240:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("overflow generics", 17),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4879824976;
		_case_end_4879826240:;
		if (!((_55141_required > _55156_given))) { goto _case_end_4879826352; }
		_case_begin_4879826352:;
		{
			(*this)._method_push_err(_55168_error_token,jule::Str("missing generics", 16),jule::Slice<jule::Any>({}));
			_55190_ok = false;
			return _55190_ok;
		}
		goto _match_end_4879824976;
		_case_end_4879826352:;
		_case_begin_4879825152:;
		{
			_55190_ok = true;
			return _55190_ok;
		}
		goto _match_end_4879824976;
		_case_end_4879825152:;
		_match_end_4879824976:;
	}
}



jule::Bool _1eec2c632_Sema::_method_is_duplicated_import_selection(jule::Uintptr _57445_itself,jule::Str _57462_ident) {
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879836176:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
			{
				if (static_cast<jule::Uintptr>(_1eec2c632_imp) == _57445_itself) {
					goto _iter_end_4879836176;
				}
				if (_1eec2c632_imp->_method_exist_ident(_57462_ident)) {
					return true;
				}
			}
			_iter_next_4879836176:;
			++it;
			goto _iter_begin_4879836176;
		}
		_iter_end_4879836176:;
	}
	return false;
}



jule::Any _1eec2c632_Sema::_method_get_import_def(jule::Str _58929_ident,jule::Ptr<_218848bd5_ImportInfo>& _58946_imp) {
	if (_1d67e4c4b_find_package_builtin_def(_58946_imp->_field_link_path,_58929_ident) != nullptr) {
		return jule::Any(true);
	}
	{
		auto expr = _58946_imp->_field_package->_field_files;
		auto it = expr.begin();
		_iter_begin_4879842288:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				
				jule::Any _59621_def = _1eec2c632_f->_method_def_by_ident(_58929_ident,false);
				if (_59621_def != nullptr) {
					return _59621_def;
				}
			}
			_iter_next_4879842288:;
			++it;
			goto _iter_begin_4879842288;
		}
		_iter_end_4879842288:;
	}
	return jule::Any(nullptr);
}



void _1eec2c632_Sema::_method_check_import_selections(jule::Ptr<_218848bd5_ImportInfo>& _60547_imp) {
	{
		auto expr = _60547_imp->_field_selected;
		auto it = expr.begin();
		_iter_begin_4879849600:;
		if (it != expr.end()) {
			_2336ea198_Token _1eec2c632_ident = *it;
			{
				if (_1eec2c632_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_4879849600;
				}
				if ((*this)._method_is_duplicated_import_selection(static_cast<jule::Uintptr>(_60547_imp),_1eec2c632_ident._field_kind)) {
					(*this)._method_push_err(_1eec2c632_ident,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_ident._field_kind)}));
					(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
					goto _iter_next_4879849600;
				}
				jule::Any _61721_def = (*this)._method_get_import_def(_1eec2c632_ident._field_kind,_60547_imp);
				{
					auto _match_expr{ _61721_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4879858256; }
					_case_begin_4879858256:;
					{
						goto _iter_next_4879849600;
					}
					goto _match_end_4879857504;
					_case_end_4879858256:;
					if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4879857936; }
					_case_begin_4879857936:;
					{
						jule::Ptr<_200c58948_Var> _62425_v = _61721_def.operator jule::Ptr<_200c58948_Var>();
						if ((*this)._method_is_accessible_define(_62425_v->_field_public,_62425_v->_field_token)) {
							goto _iter_next_4879849600;
						}
					}
					goto _match_end_4879857504;
					_case_end_4879857936:;
					if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4879858032; }
					_case_begin_4879858032:;
					{
						jule::Ptr<_200d010d9_TypeAlias> _63025_ta = _61721_def.operator jule::Ptr<_200d010d9_TypeAlias>();
						if ((*this)._method_is_accessible_define(_63025_ta->_field_public,_63025_ta->_field_token)) {
							goto _iter_next_4879849600;
						}
					}
					goto _match_end_4879857504;
					_case_end_4879858032:;
					if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4879859952; }
					_case_begin_4879859952:;
					{
						jule::Ptr<_23461aa35_Struct> _63625_strct = _61721_def.operator jule::Ptr<_23461aa35_Struct>();
						if ((*this)._method_is_accessible_define(_63625_strct->_field_public,_63625_strct->_field_token)) {
							goto _iter_next_4879849600;
						}
					}
					goto _match_end_4879857504;
					_case_end_4879859952:;
					if (!(_match_expr.type_is<jule::Ptr<_2185da36c_Trait>>())) { goto _case_end_4879860048; }
					_case_begin_4879860048:;
					{
						jule::Ptr<_2185da36c_Trait> _64225_t = _61721_def.operator jule::Ptr<_2185da36c_Trait>();
						if ((*this)._method_is_accessible_define(_64225_t->_field_public,_64225_t->_field_token)) {
							goto _iter_next_4879849600;
						}
					}
					goto _match_end_4879857504;
					_case_end_4879860048:;
					if (!(_match_expr.type_is<jule::Ptr<_2186be3da_Enum>>())) { goto _case_end_4879860144; }
					_case_begin_4879860144:;
					{
						jule::Ptr<_2186be3da_Enum> _64825_e = _61721_def.operator jule::Ptr<_2186be3da_Enum>();
						if ((*this)._method_is_accessible_define(_64825_e->_field_public,_64825_e->_field_token)) {
							goto _iter_next_4879849600;
						}
					}
					goto _match_end_4879857504;
					_case_end_4879860144:;
					if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_Fn>>())) { goto _case_end_4879860240; }
					_case_begin_4879860240:;
					{
						jule::Ptr<_2185d51ad_Fn> _65425_f = _61721_def.operator jule::Ptr<_2185d51ad_Fn>();
						if ((*this)._method_is_accessible_define(_65425_f->_field_public,_65425_f->_field_token)) {
							goto _iter_next_4879849600;
						}
					}
					goto _match_end_4879857504;
					_case_end_4879860240:;
					_case_begin_4879854208:;
					{
						(*this)._method_push_err(_1eec2c632_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_1eec2c632_ident._field_kind)}));
						goto _iter_next_4879849600;
					}
					goto _match_end_4879857504;
					_case_end_4879854208:;
					_match_end_4879857504:;
				}
				(*this)._method_push_err(_1eec2c632_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_1eec2c632_ident._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
			}
			_iter_next_4879849600:;
			++it;
			goto _iter_begin_4879849600;
		}
		_iter_end_4879849600:;
	}
}



jule::Bool _1eec2c632_Sema::_method_is_use_alias_duplication(jule::Ptr<_218848bd5_ImportInfo>& _66944_imp) {
	if (_66944_imp->_field_alias.len() == 0LL) {
		return false;
	}
	{
		auto expr = (*this)._field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4879882368:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp2 = *it;
			{
				if (_1eec2c632_imp2 == _66944_imp) {
					goto _iter_end_4879882368;
				}
				if (_1eec2c632_imp2->_field_alias == _66944_imp->_field_alias) {
					return true;
				}
			}
			_iter_next_4879882368:;
			++it;
			goto _iter_begin_4879882368;
		}
		_iter_end_4879882368:;
	}
	return false;
}



jule::Bool _1eec2c632_Sema::_method_check_import(jule::Ptr<_218848bd5_ImportInfo>& _68536_imp) {
	if (_68536_imp->_field_cpp_linked || (_68536_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	if ((*this)._method_is_use_alias_duplication(_68536_imp)) {
		(*this)._method_push_err(_68536_imp->_field_token,jule::Str("identifier \"@\" is already used for another use declaration", 58),jule::Slice<jule::Any>({jule::Any(_68536_imp->_field_alias)}));
		(*this)._method_push_suggestion(jule::Str("rename alias for this use declaration to avoid duplication", 58),jule::Slice<jule::Any>({}));
	}
	if (_68536_imp->_field_duplicate) {
		return true;
	}
	jule::Ptr<_1eec2c632_Sema> _69917_sema = jule::new_struct_ptr<_1eec2c632_Sema>(new( std::nothrow ) _1eec2c632_Sema(jule::Slice<_231e4202e_Log>(),jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>(),jule::Ptr<_218737b7e_SymbolTable>(),(*this)._field_flags));
	_69917_sema->_method_check(_68536_imp->_field_package->_field_files);
	if (_69917_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=jule::append((*this)._field_errors,_69917_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_68536_imp);
	return true;
}



void _1eec2c632_Sema::_method_check_imports(void) {
	{
		auto expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4879900096:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_file = *it;
			{
				(*this)._method_set_current_file(_1eec2c632_file);
				{
					auto expr = _1eec2c632_file->_field_imports;
					auto it = expr.begin();
					_iter_begin_4879902912:;
					if (it != expr.end()) {
						jule::Ptr<_218848bd5_ImportInfo> _1eec2c632_imp = *it;
						{
							jule::Bool _71721_ok = (*this)._method_check_import(_1eec2c632_imp);
							if ((!(_71721_ok))) {
								(*this)._method_push_err(_1eec2c632_imp->_field_token,jule::Str("used package has errors: @", 26),jule::Slice<jule::Any>({jule::Any(_1eec2c632_imp->_field_link_path)}));
								return;
							}
						}
						_iter_next_4879902912:;
						++it;
						goto _iter_begin_4879902912;
					}
					_iter_end_4879902912:;
				}
			}
			_iter_next_4879900096:;
			++it;
			goto _iter_begin_4879900096;
		}
		_iter_end_4879900096:;
	}
}



void _1eec2c632_Sema::_method_impl_file_impls(void) {
	{
		auto expr = this->self->_field_file->_field_impls;
		auto it = expr.begin();
		_iter_begin_4879903856:;
		if (it != expr.end()) {
			jule::Ptr<_2185e0064_Impl> _1eec2c632_imp = *it;
			{
				this->self->_method_impl_impl(_1eec2c632_imp);
			}
			_iter_next_4879903856:;
			++it;
			goto _iter_begin_4879903856;
		}
		_iter_end_4879903856:;
	}
}



void _1eec2c632_Sema::_method_impl_impls(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4879912416:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_file = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4879912416:;
			++it;
			goto _iter_begin_4879912416;
		}
		_iter_end_4879912416:;
	}
}



void _1eec2c632_Sema::_method_check_enums(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4879916336:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_file = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4879916336:;
			++it;
			goto _iter_begin_4879916336;
		}
		_iter_end_4879916336:;
	}
}



jule::Bool _1eec2c632_Sema::_method_check_type_with_refers(jule::Ptr<_200d010d9_TypeSymbol>& _75047_t,jule::Trait<_1d6734eee_Lookup> _75113_l,jule::Ptr<_200d010d9_Referencer> _75128_referencer) {
	jule::Bool _75155_ok = jule::Bool();
	if (_75047_t->_method_checked()) {
		_75155_ok = true;
		return _75155_ok;
	}
	_200d010d9_TypeChecker _75517_tc = _200d010d9_TypeChecker(this->self,_75113_l,_75128_referencer,_2336ea198_Token(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>(),jule::Bool());
	_75517_tc._method_check(_75047_t);
	_75155_ok = _75047_t->_method_checked();
	return _75155_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_type(jule::Ptr<_200d010d9_TypeSymbol>& _76635_t,jule::Trait<_1d6734eee_Lookup> _76655_l) {
	jule::Bool _76668_ok = jule::Bool();
	_76668_ok = this->self->_method_check_type_with_refers(_76635_t,_76655_l,nullptr);
	return _76668_ok;
}



jule::Ptr<_200d010d9_TypeKind> _1eec2c632_Sema::_method_build_type_with_generics(jule::Ptr<_233464770_TypeDecl>& _77249_t,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _77313_generics) {
	jule::Ptr<_200d010d9_TypeChecker> _77417_tc = jule::new_struct<_200d010d9_TypeChecker>(new( std::nothrow ) _200d010d9_TypeChecker(this->self,this->self,jule::Ptr<_200d010d9_Referencer>(),_2336ea198_Token(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),_77313_generics,jule::Bool()));
	return _77417_tc->_method_check_decl(_77249_t);
}



jule::Ptr<_200d010d9_TypeKind> _1eec2c632_Sema::_method_build_type(jule::Ptr<_233464770_TypeDecl>& _78335_t) {
	return this->self->_method_build_type_with_generics(_78335_t,nullptr);
}



jule::Ptr<_218751758_Eval> _1eec2c632_Sema::_method_evalpd(jule::Trait<_1d6734eee_Lookup> _78930_l,jule::Ptr<_200d010d9_TypeKind> _78945_p,jule::Ptr<_200c58948_Var> _78963_owner) {
	jule::Ptr<_218751758_Eval> _79017_e = jule::new_struct_ptr<_218751758_Eval>(new( std::nothrow ) _218751758_Eval(this->self,_78930_l,jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),_78963_owner));
	{
		auto _match_expr{ _78930_l };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4879961488; }
		_case_begin_4879961488:;
		{
			_79017_e->_field_unsafety=_78930_l.operator jule::Ptr<_2186ce186_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4879962864;
		_case_end_4879961488:;
		_match_end_4879962864:;
	}
	_79017_e->_field_prefix=_78945_p;
	return _79017_e;
}



jule::Ptr<_218751758_Eval> _1eec2c632_Sema::_method_evalp(jule::Trait<_1d6734eee_Lookup> _80729_l,jule::Ptr<_200d010d9_TypeKind> _80744_p) {
	return this->self->_method_evalpd(_80729_l,_80744_p,nullptr);
}



jule::Ptr<_218751758_Eval> _1eec2c632_Sema::_method_eval(jule::Trait<_1d6734eee_Lookup> _81228_l) {
	return this->self->_method_evalp(_81228_l,nullptr);
}



void _1eec2c632_Sema::_method_check_assign_type(jule::Bool _81637_dest_is_ref,jule::Ptr<_200d010d9_TypeKind>& _81661_dest,jule::Ptr<_218751758_Data>& _81714_d,_2336ea198_Token _81728_error_token) {
	if (_81637_dest_is_ref) {
		if ((!(_81661_dest->_method_equals(_81714_d->_field_kind)))) {
			this->self->_method_push_err(_81728_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_81661_dest->_method_to_str()),jule::Any(_81714_d->_field_kind->_method_to_str())}));
		}
	} else {
		jule::Ptr<_200c5bcc0_AssignTypeChecker> _82321_atc = jule::new_struct<_200c5bcc0_AssignTypeChecker>(new( std::nothrow ) _200c5bcc0_AssignTypeChecker(this->self,_81661_dest,_81714_d,_81728_error_token));
		jule::Bool _82917_ok = _82321_atc->_method_check();
		if ((!(_82917_ok))) {
			return;
		}
	}
	if ((!(_81714_d->_method_is_const())) || (_81661_dest->_method_prim() == nullptr)) {
		return;
	}
	jule::Str _83917_kind = _81661_dest->_method_prim()->_field_kind;
	{
		if (!((_1d68ce6a4_is_sig_int(_83917_kind)))) { goto _case_end_4879983488; }
		_case_begin_4879983488:;
		{
			_81714_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_81714_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4879983344;
		_case_end_4879983488:;
		if (!((_1d68ce6a4_is_unsig_int(_83917_kind)))) { goto _case_end_4879983584; }
		_case_begin_4879983584:;
		{
			_81714_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_81714_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4879983344;
		_case_end_4879983584:;
		if (!((_1d68ce6a4_is_float(_83917_kind)))) { goto _case_end_4879983680; }
		_case_begin_4879983680:;
		{
			_81714_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_81714_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4879983344;
		_case_end_4879983680:;
		_match_end_4879983344:;
	}
}



jule::Bool _1eec2c632_Sema::_method_check_type_compatibility(jule::Ptr<_200d010d9_TypeKind>& _84849_dest,jule::Ptr<_200d010d9_TypeKind>& _84914_src,_2336ea198_Token& _84935_error_token) {
	if (_84914_src->_method_tup() != nullptr) {
		this->self->_method_push_err(_84935_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84849_dest->_method_to_str()),jule::Any(_84914_src->_method_to_str())}));
		return false;
	}
	jule::Ptr<_200c5bcc0_TypeCompatibilityChecker> _85717_tcc = jule::new_struct<_200c5bcc0_TypeCompatibilityChecker>(new( std::nothrow ) _200c5bcc0_TypeCompatibilityChecker(this->self,_84849_dest,_84914_src,_84935_error_token,jule::Bool()));
	jule::Bool _86313_ok = _85717_tcc->_method_check();
	if ((!(_86313_ok))) {
		this->self->_method_push_err(_84935_error_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_84849_dest->_method_to_str()),jule::Any(_84914_src->_method_to_str())}));
	}
	return _86313_ok;
}



jule::Ptr<_200d010d9_TypeKind> _1eec2c632_Sema::_method_build_non_generic_type_kind(jule::Ptr<_233464770_TypeDecl>& _87752_ast,jule::Slice<jule::Ptr<_233464770_GenericDecl>>& _87814_generics) {
	jule::Ptr<_200d010d9_TypeChecker> _87917_tc = jule::new_struct<_200d010d9_TypeChecker>(new( std::nothrow ) _200d010d9_TypeChecker(this->self,this->self,jule::Ptr<_200d010d9_Referencer>(),_2336ea198_Token(),_87814_generics,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>(),jule::Bool()));
	return _87917_tc->_method_check_decl(_87752_ast);
}



void _1eec2c632_Sema::_method_build_fn_non_generic_type_kinds(jule::Ptr<_2185d51ad_FnIns>& _88756_f) {
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _88817_generics = nullptr;
	if (_88756_f->_field_decl->_method_is_method()) {
		_88817_generics=jule::append(_88756_f->_field_decl->_field_generics,_88756_f->_field_decl->_field_owner->_field_generics);
	} else {
		_88817_generics=_88756_f->_field_decl->_field_generics;
	}
	{
		auto expr = _88756_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4880009520:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _1eec2c632_p = *it;
			{
				if ((!(_1eec2c632_p->_field_decl->_method_is_self()))) {
					_1eec2c632_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1eec2c632_p->_field_decl->_field_kind->_field_decl,_88817_generics);
				}
			}
			_iter_next_4880009520:;
			++it;
			goto _iter_begin_4880009520;
		}
		_iter_end_4880009520:;
	}
	if ((!(_88756_f->_field_decl->_method_is_void()))) {
		_88756_f->_field_result=this->self->_method_build_non_generic_type_kind(_88756_f->_field_decl->_field_result->_field_kind->_field_decl,_88817_generics);
	}
}



jule::Ptr<_2185d51ad_FnIns> _1eec2c632_Sema::_method_get_trait_check_fn_kind(jule::Ptr<_2185d51ad_Fn>& _90548_f) {
	jule::Ptr<_2185d51ad_FnIns> _90617_ins = _90548_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_90617_ins);
	return _90617_ins;
}



jule::Bool _1eec2c632_Sema::_method_reload_fn_ins_types(jule::Ptr<_2185d51ad_FnIns>& _91144_f) {
	jule::Bool _91157_ok = jule::Bool();
	if (_91144_f->_method_is_builtin() || _91144_f->_method_is_anon()) {
		_91157_ok = true;
		return _91157_ok;
	}
	jule::Ptr<_1eec2c632_Sema> _91617_sema = _91144_f->_field_decl->_field_sema;
	jule::Ptr<_218737b7e_SymbolTable> _91817_old = _91144_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_91144_f->_field_decl->_field_sema->_method_set_current_file(_91817_old);
	});
	jule::Ptr<_218737b7e_SymbolTable> _92017_file = _1eec2c632_find_file(_91144_f->_field_decl->_field_sema->_field_files,_91144_f->_field_decl->_field_token._field_file);
	if (_92017_file != nullptr) {
		_91144_f->_field_decl->_field_sema->_method_set_current_file(_92017_file);
	}
	jule::I64 _92517_size = _91144_f->_field_generics.len();
	if ((_91144_f->_field_decl != nullptr) && (_91144_f->_field_decl->_field_owner != nullptr)) {
		_92517_size+=static_cast<jule::I64>(_91144_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _93017_generics = jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>::alloc(0LL,_92517_size);
	{
		auto expr = _91144_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4880039824:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			jule::Ptr<_200d010d9_TypeKind> _1eec2c632_g = *it;
			{
				_93017_generics=jule::append(_93017_generics,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(jule::Ptr<_233464770_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_2336ea198_Token(),_91144_f->_field_decl->_field_generics[_1eec2c632_i]->_field_ident,jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_1eec2c632_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4880039824:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4880039824;
		}
		_iter_end_4880039824:;
	}
	if ((_91144_f->_field_decl != nullptr) && (_91144_f->_field_decl->_field_owner != nullptr)) {
		jule::Ptr<_23461aa35_StructIns> _94221_owner = _91144_f->_field_owner;
		{
			auto expr = _94221_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4880042960:;
			if (it != expr.end()) {
				jule::Int _1eec2c632_i = it - expr.begin();
				jule::Ptr<_200d010d9_TypeKind> _1eec2c632_g = *it;
				{
					_93017_generics=jule::append(_93017_generics,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(jule::Ptr<_233464770_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_2336ea198_Token(),_94221_owner->_field_decl->_field_generics[_1eec2c632_i]->_field_ident,jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_1eec2c632_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4880042960:;
				++it;
				_1eec2c632_i++;
				goto _iter_begin_4880042960;
			}
			_iter_end_4880042960:;
		}
	}
	_91157_ok=true;
	{
		auto expr = _91144_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4880046176:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _1eec2c632_p = *it;
			{
				if ((!(_1eec2c632_p->_field_decl->_method_is_self()))) {
					_1eec2c632_p->_field_kind=_91617_sema->_method_build_type_with_generics(_1eec2c632_p->_field_decl->_field_kind->_field_decl,_93017_generics);
					if (_1eec2c632_p->_field_kind != nullptr) {
						if (_1eec2c632_p->_field_decl->_field_reference && (!(_200d010d9_is_valid_for_ref(_1eec2c632_p->_field_kind)))) {
							this->self->_method_push_err(_1eec2c632_p->_field_decl->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_1eec2c632_p->_field_kind->_method_to_str())}));
						}
					} else {
						_91157_ok=false;
					}
				}
			}
			_iter_next_4880046176:;
			++it;
			goto _iter_begin_4880046176;
		}
		_iter_end_4880046176:;
	}
	if ((!(_91144_f->_field_decl->_method_is_void()))) {
		_91144_f->_field_result=_91617_sema->_method_build_type_with_generics(_91144_f->_field_decl->_field_result->_field_kind->_field_decl,_93017_generics);
		_91157_ok=(_91144_f->_field_result != nullptr) && _91157_ok;
	}
	if (_91617_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_91617_sema->_field_errors);
		_91617_sema->_field_errors=nullptr;
	}
	_91157_ok = _91157_ok;
	return _91157_ok;
}



void _1eec2c632_Sema::_method_check_ref_validity_for_init_expr(jule::Bool _98052_left_mut,jule::Ptr<_218751758_Data>& _98069_d,_2336ea198_Token& _98084_error_token) {
	{
		auto _match_expr{ _98069_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4880069040; }
		goto _match_end_4880067088;
		_case_end_4880069040:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_TraitSubIdentExprModel>>())) { goto _case_end_4880069136; }
		_case_begin_4880069136:;
		{
			jule::Ptr<_2188586ea_TraitSubIdentExprModel> _98617_model = _98069_d->_field_model.operator jule::Ptr<_2188586ea_TraitSubIdentExprModel>();
			if ((!(_1eec2c632_is_valid_model_for_ref(_98617_model->_field_expr)))) {
				this->self->_method_push_err(_98084_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_98617_model->_field_ident)}));
			}
		}
		goto _match_end_4880067088;
		_case_end_4880069136:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructSubIdentExprModel>>())) { goto _case_end_4880067440; }
		_case_begin_4880067440:;
		{
			jule::Ptr<_2188586ea_StructSubIdentExprModel> _99217_model = _98069_d->_field_model.operator jule::Ptr<_2188586ea_StructSubIdentExprModel>();
			if ((!(_1eec2c632_is_valid_model_for_ref(_99217_model->_field_expr)))) {
				this->self->_method_push_err(_98084_error_token,jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68),jule::Slice<jule::Any>({jule::Any(_99217_model->_field_field->_field_decl->_field_ident)}));
			}
		}
		goto _match_end_4880067088;
		_case_end_4880067440:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ptr<_2188586ea_CommonSubIdentExprModel>>())) { goto _case_end_4880067536; }
		_case_begin_4880067536:;
		{
			this->self->_method_push_err(_98084_error_token,jule::Str("built-in defines cannot pass to references", 42),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4880067088;
		_case_end_4880067536:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_UnaryExprModel>>())) { goto _case_end_4880067632; }
		_case_begin_4880067632:;
		{
			jule::Ptr<_2188586ea_UnaryExprModel> _100217_unary = _98069_d->_field_model.operator jule::Ptr<_2188586ea_UnaryExprModel>();
			if (_100217_unary->_field_op == jule::Str("*", 1)) {
				goto _match_end_4880067088;
			}
			goto _case_begin_4880066624;
		}
		goto _match_end_4880067088;
		_case_end_4880067632:;
		_case_begin_4880066624:;
		{
			this->self->_method_push_err(_98084_error_token,jule::Str("references requires variable for assignment", 43),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4880067088;
		_case_end_4880066624:;
		_match_end_4880067088:;
	}
	if (_98052_left_mut && (!(_98069_d->_field_mutable))) {
		this->self->_method_push_err(_98084_error_token,jule::Str("mutable reference cannot point to immutable data", 48),jule::Slice<jule::Any>({}));
	}
}



void _1eec2c632_Sema::_method_check_validity_for_init_expr(jule::Bool _101848_left_mut,jule::Bool _101864_left_ref,jule::Ptr<_200d010d9_TypeKind>& _101910_left_kind,jule::Ptr<_218751758_Data>& _101937_d,_2336ea198_Token& _101952_error_token) {
	if ((_101848_left_mut && (!(_101937_d->_field_mutable))) && _101937_d->_field_kind->_method_mutable()) {
		this->self->_method_push_err(_101952_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
	}
	if (_101864_left_ref) {
		this->self->_method_check_ref_validity_for_init_expr(_101848_left_mut,_101937_d,_101952_error_token);
	}
	jule::Ptr<_200c5bcc0_AssignTypeChecker> _102717_atc = jule::new_struct<_200c5bcc0_AssignTypeChecker>(new( std::nothrow ) _200c5bcc0_AssignTypeChecker(this->self,jule::Ptr<_200d010d9_TypeKind>(),_101937_d,_101952_error_token));
	_102717_atc->_method_check_validity();
}



jule::Bool _1eec2c632_Sema::_method_check_type_alias_decl_kind(jule::Ptr<_200d010d9_TypeAlias>& _103551_ta,jule::Trait<_1d6734eee_Lookup> _103571_l) {
	jule::Bool _103584_ok = jule::Bool();
	jule::Ptr<_218737b7e_SymbolTable> _103617_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_103617_old);
	});
	jule::Ptr<_218737b7e_SymbolTable> _103817_file = _1eec2c632_find_file(this->self->_field_files,_103551_ta->_field_token._field_file);
	if (_103817_file != nullptr) {
		this->self->_method_set_current_file(_103817_file);
	}
	_103584_ok=this->self->_method_check_type_with_refers(_103551_ta->_field_kind,_103571_l,jule::new_struct<_200d010d9_Referencer>(new( std::nothrow ) _200d010d9_Referencer(_103551_ta->_field_ident,jule::Any(_103551_ta),(&(_103551_ta->_field_refers)))));
	if ((_103584_ok && (_103551_ta->_field_kind->_field_kind->_method_arr() != nullptr)) && _103551_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_103551_ta->_field_kind->_field_decl->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
		_103584_ok=false;
	}
	return _103584_ok;
}



void _1eec2c632_Sema::_method_check_type_alias_decl(jule::Ptr<_200d010d9_TypeAlias>& _105546_ta,jule::Trait<_1d6734eee_Lookup> _105566_l) {
	if (_2336ea198_is_ignore_ident(_105546_ta->_field_ident)) {
		this->self->_method_push_err(_105546_ta->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_105546_ta,_105566_l);
}



void _1eec2c632_Sema::_method_check_type_alias_decl_dup(jule::Ptr<_200d010d9_TypeAlias>& _106350_ta) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_106350_ta),_106350_ta->_field_ident,_106350_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_106350_ta->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_106350_ta->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_106350_ta,this->self);
}



jule::Bool _1eec2c632_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _107244_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4880138736:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeAlias> _1eec2c632_ta = *it;
			{
				this->self->_method_check_type_alias_decl_dup(_1eec2c632_ta);
				if (this->self->_field_errors.len() > 0LL) {
					_107244_ok = false;
					return _107244_ok;
				}
			}
			_iter_next_4880138736:;
			++it;
			goto _iter_begin_4880138736;
		}
		_iter_end_4880138736:;
	}
	_107244_ok = true;
	return _107244_ok;
}



void _1eec2c632_Sema::_method_check_enum_items_dup(jule::Ptr<_2186be3da_Enum> _108439_e) {
	{
		auto expr = _108439_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4880144176:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_EnumItem> _1eec2c632_item = *it;
			{
				if (_2336ea198_is_ignore_ident(_1eec2c632_item->_field_ident)) {
					(*this)._method_push_err(_1eec2c632_item->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
				} else {
					{
						auto expr = _108439_e->_field_items;
						auto it = expr.begin();
						_iter_begin_4880148688:;
						if (it != expr.end()) {
							jule::Ptr<_2186be3da_EnumItem> _1eec2c632_citem = *it;
							{
								if (_1eec2c632_item == _1eec2c632_citem) {
									goto _iter_end_4880148688;
								} else if (_1eec2c632_item->_field_ident == _1eec2c632_citem->_field_ident) {
									(*this)._method_push_err(_1eec2c632_item->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_item->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4880148688;
								}
							}
							_iter_next_4880148688:;
							++it;
							goto _iter_begin_4880148688;
						}
						_iter_end_4880148688:;
					}
				}
			}
			_iter_next_4880144176:;
			++it;
			goto _iter_begin_4880144176;
		}
		_iter_end_4880144176:;
	}
}



void _1eec2c632_Sema::_method_check_enum_items_str(jule::Ptr<_2186be3da_Enum>& _110245_e) {
	{
		auto expr = _110245_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4880149664:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_EnumItem> _1eec2c632_item = *it;
			{
				if (_1eec2c632_item->_method_auto_expr()) {
					_1eec2c632_item->_field_value=jule::new_struct<_218751758_Value>(new( std::nothrow ) _218751758_Value(jule::Ptr<_233464770_Expr>(),jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1d68bd462_Const::_static_method_new_str(_1eec2c632_item->_field_ident)))));
					_1eec2c632_item->_field_value->_field_data->_field_model=jule::Any(_1eec2c632_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_218751758_Data> _111225_d = this->self->_method_eval(this->self)->_method_eval_expr(_1eec2c632_item->_field_value->_field_expr);
					if (_111225_d == nullptr) {
						goto _iter_next_4880149664;
					}
					if ((!(_111225_d->_method_is_const()))) {
						this->self->_method_push_err(_1eec2c632_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_110245_e->_field_kind->_field_kind,_111225_d,_1eec2c632_item->_field_token);
					_1eec2c632_item->_field_value->_field_data=_111225_d;
				}
			}
			_iter_next_4880149664:;
			++it;
			goto _iter_begin_4880149664;
		}
		_iter_end_4880149664:;
	}
}



void _1eec2c632_Sema::_method_check_enum_items_int(jule::Ptr<_2186be3da_Enum>& _112745_e) {
	jule::U64 _112817_max = static_cast<jule::U64>(_1d68ca88c_max(_112745_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto expr = _112745_e->_field_items;
		auto it = expr.begin();
		_iter_begin_4880170768:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			jule::Ptr<_2186be3da_EnumItem> _1eec2c632_item = *it;
			{
				if (_112817_max == 0LL) {
					this->self->_method_push_err(_1eec2c632_item->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				} else {
					(_112817_max)--;
				}
				if (_1eec2c632_item->_method_auto_expr()) {
					_1eec2c632_item->_field_value=jule::new_struct<_218751758_Value>(new( std::nothrow ) _218751758_Value(jule::Ptr<_233464770_Expr>(),jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1d68bd462_Const::_static_method_new_u64(static_cast<jule::U64>(_112817_max - (_112817_max - static_cast<jule::U64>(_1eec2c632_i))))))));
					_1eec2c632_item->_field_value->_field_data->_field_model=jule::Any(_1eec2c632_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ptr<_218751758_Data> _114425_d = this->self->_method_eval(this->self)->_method_eval_expr(_1eec2c632_item->_field_value->_field_expr);
					if (_114425_d == nullptr) {
						goto _iter_next_4880170768;
					}
					if ((!(_114425_d->_method_is_const()))) {
						this->self->_method_push_err(_1eec2c632_item->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(false,_112745_e->_field_kind->_field_kind,_114425_d,_1eec2c632_item->_field_token);
					_1eec2c632_item->_field_value->_field_data=_114425_d;
				}
			}
			_iter_next_4880170768:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4880170768;
		}
		_iter_end_4880170768:;
	}
}



void _1eec2c632_Sema::_method_check_enum_decl(jule::Ptr<_2186be3da_Enum>& _115940_e) {
	if (_2336ea198_is_ignore_ident(_115940_e->_field_ident)) {
		this->self->_method_push_err(_115940_e->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_115940_e),_115940_e->_field_ident,false)) {
		this->self->_method_push_err(_115940_e->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_115940_e->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_115940_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_115940_e->_field_token,jule::Str("there is no member for enum: @", 30),jule::Slice<jule::Any>({jule::Any(_115940_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_115940_e);
	if (_115940_e->_field_kind != nullptr) {
		if ((!(this->self->_method_check_type(_115940_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_115940_e->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ptr<_200d010d9_Prim> _118617_t = _115940_e->_field_kind->_field_kind->_method_prim();
	if (_118617_t == nullptr) {
		this->self->_method_push_err(_115940_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_118617_t->_method_is_str()))) { goto _case_end_4880205136; }
		_case_begin_4880205136:;
		{
			this->self->_method_check_enum_items_str(_115940_e);
		}
		goto _match_end_4880201344;
		_case_end_4880205136:;
		if (!((_1d68ce6a4_is_int(_118617_t->_method_to_str())))) { goto _case_end_4880203792; }
		_case_begin_4880203792:;
		{
			this->self->_method_check_enum_items_int(_115940_e);
		}
		goto _match_end_4880201344;
		_case_end_4880203792:;
		_case_begin_4880196592:;
		{
			this->self->_method_push_err(_115940_e->_field_token,jule::Str("invalid data-type source", 24),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4880201344;
		_case_end_4880196592:;
		_match_end_4880201344:;
	}
}



jule::Bool _1eec2c632_Sema::_method_check_enum_decls(void) {
	jule::Bool _120638_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_enums;
		auto it = expr.begin();
		_iter_begin_4880210672:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_Enum> _1eec2c632_e = *it;
			{
				this->self->_method_check_enum_decl(_1eec2c632_e);
				if (this->self->_field_errors.len() > 0LL) {
					_120638_ok = false;
					return _120638_ok;
				}
			}
			_iter_next_4880210672:;
			++it;
			goto _iter_begin_4880210672;
		}
		_iter_end_4880210672:;
	}
	_120638_ok = true;
	return _120638_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_decl_generics(jule::Slice<jule::Ptr<_233464770_GenericDecl>>& _121839_generics) {
	jule::Bool _121867_ok = jule::Bool();
	_121867_ok=true;
	{
		auto expr = _121839_generics;
		auto it = expr.begin();
		_iter_begin_4880217328:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			jule::Ptr<_233464770_GenericDecl> _1eec2c632_g = *it;
			{
				if (_2336ea198_is_ignore_ident(_1eec2c632_g->_field_ident)) {
					(*this)._method_push_err(_1eec2c632_g->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
					_121867_ok=false;
					goto _iter_next_4880217328;
				}
				_julec_label_duplication_lookup:;
				{
					auto expr = _121839_generics;
					auto it = expr.begin();
					_iter_begin_4880219200:;
					if (it != expr.end()) {
						jule::Int _1eec2c632_j = it - expr.begin();
						jule::Ptr<_233464770_GenericDecl> _1eec2c632_ct = *it;
						{
							{
								if (!((_1eec2c632_j >= _1eec2c632_i))) { goto _case_end_4880224112; }
								_case_begin_4880224112:;
								{
									goto _iter_end_4880219200;
								}
								goto _match_end_4880223888;
								_case_end_4880224112:;
								if (!((_1eec2c632_g->_field_ident == _1eec2c632_ct->_field_ident))) { goto _case_end_4880224224; }
								_case_begin_4880224224:;
								{
									(*this)._method_push_err(_1eec2c632_g->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_g->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									_121867_ok=false;
									goto _iter_end_4880219200;
								}
								goto _match_end_4880223888;
								_case_end_4880224224:;
								_match_end_4880223888:;
							}
						}
						_iter_next_4880219200:;
						++it;
						_1eec2c632_j++;
						goto _iter_begin_4880219200;
					}
					_iter_end_4880219200:;
				}
			}
			_iter_next_4880217328:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4880217328;
		}
		_iter_end_4880217328:;
	}
	return _121867_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_fn_decl_params_dup(jule::Ptr<_2185d51ad_Fn>& _124644_f) {
	jule::Bool _124654_ok = jule::Bool();
	_124654_ok=true;
	_julec_label_check:;
	{
		auto expr = _124644_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4880232048:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			jule::Ptr<_2185d51ad_Param> _1eec2c632_p = *it;
			{
				{
					auto expr = _124644_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4880234896:;
					if (it != expr.end()) {
						jule::Ptr<_233464770_GenericDecl> _1eec2c632_g = *it;
						{
							if (_1eec2c632_p->_field_ident == _1eec2c632_g->_field_ident) {
								_124654_ok=false;
								(*this)._method_push_err(_1eec2c632_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_p->_field_ident)}));
								(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								goto _iter_next_4880232048;
							}
						}
						_iter_next_4880234896:;
						++it;
						goto _iter_begin_4880234896;
					}
					_iter_end_4880234896:;
				}
				_julec_label_params_lookup:;
				{
					auto expr = _124644_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4880240480:;
					if (it != expr.end()) {
						jule::Int _1eec2c632_j = it - expr.begin();
						jule::Ptr<_2185d51ad_Param> _1eec2c632_jp = *it;
						{
							{
								if (!((_1eec2c632_j >= _1eec2c632_i))) { goto _case_end_4880242384; }
								_case_begin_4880242384:;
								{
									goto _iter_end_4880240480;
								}
								goto _match_end_4880242144;
								_case_end_4880242384:;
								if (!((_2336ea198_is_anon_ident(_1eec2c632_p->_field_ident) || _2336ea198_is_anon_ident(_1eec2c632_jp->_field_ident)))) { goto _case_end_4880242496; }
								_case_begin_4880242496:;
								{
									goto _iter_end_4880240480;
								}
								goto _match_end_4880242144;
								_case_end_4880242496:;
								if (!((_1eec2c632_p->_field_ident == _1eec2c632_jp->_field_ident))) { goto _case_end_4880242608; }
								_case_begin_4880242608:;
								{
									_124654_ok=false;
									(*this)._method_push_err(_1eec2c632_p->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_p->_field_ident)}));
									(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_next_4880232048;
								}
								goto _match_end_4880242144;
								_case_end_4880242608:;
								_match_end_4880242144:;
							}
						}
						_iter_next_4880240480:;
						++it;
						_1eec2c632_j++;
						goto _iter_begin_4880240480;
					}
					_iter_end_4880240480:;
				}
			}
			_iter_next_4880232048:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4880232048;
		}
		_iter_end_4880232048:;
	}
	return _124654_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_fn_decl_result_dup(jule::Ptr<_2185d51ad_Fn>& _128244_f) {
	jule::Bool _128254_ok = jule::Bool();
	_128254_ok=true;
	if (_128244_f->_method_is_void()) {
		return _128254_ok;
	}
	{
		auto expr = _128244_f->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4880252832:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			_2336ea198_Token _1eec2c632_v = *it;
			{
				if (_2336ea198_is_ignore_ident(_1eec2c632_v._field_kind)) {
					goto _iter_next_4880252832;
				}
				{
					auto expr = _128244_f->_field_generics;
					auto it = expr.begin();
					_iter_begin_4880256064:;
					if (it != expr.end()) {
						jule::Ptr<_233464770_GenericDecl> _1eec2c632_g = *it;
						{
							if (_1eec2c632_v._field_kind == _1eec2c632_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4880256064:;
						++it;
						goto _iter_begin_4880256064;
					}
					_iter_end_4880256064:;
				}
				{
					auto expr = _128244_f->_field_params;
					auto it = expr.begin();
					_iter_begin_4880259392:;
					if (it != expr.end()) {
						jule::Ptr<_2185d51ad_Param> _1eec2c632_p = *it;
						{
							if (_1eec2c632_v._field_kind == _1eec2c632_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4880259392:;
						++it;
						goto _iter_begin_4880259392;
					}
					_iter_end_4880259392:;
				}
				_julec_label_itself_lookup:;
				{
					auto expr = _128244_f->_field_result->_field_idents;
					auto it = expr.begin();
					_iter_begin_4880263440:;
					if (it != expr.end()) {
						jule::Int _1eec2c632_j = it - expr.begin();
						_2336ea198_Token _1eec2c632_jv = *it;
						{
							{
								if (!((_1eec2c632_j >= _1eec2c632_i))) { goto _case_end_4880265696; }
								_case_begin_4880265696:;
								{
									goto _iter_end_4880263440;
								}
								goto _match_end_4880265472;
								_case_end_4880265696:;
								if (!((_1eec2c632_jv._field_kind == _1eec2c632_v._field_kind))) { goto _case_end_4880265808; }
								_case_begin_4880265808:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4880265472;
								_case_end_4880265808:;
								_match_end_4880265472:;
							}
						}
						_iter_next_4880263440:;
						++it;
						_1eec2c632_j++;
						goto _iter_begin_4880263440;
					}
					_iter_end_4880263440:;
				}
				goto _iter_next_4880252832;
				_julec_label_exist:;
				(*this)._method_push_err(_1eec2c632_v,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_v._field_kind)}));
				(*this)._method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
				_128254_ok=false;
			}
			_iter_next_4880252832:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4880252832;
		}
		_iter_end_4880252832:;
	}
	return _128254_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_fn_decl_types(jule::Ptr<_2185d51ad_Fn>& _133144_f) {
	jule::Bool _133154_ok = jule::Bool();
	_133154_ok=true;
	jule::Slice<jule::Ptr<_233464770_GenericDecl>> _133417_generics = _133144_f->_field_generics;
	if (_133144_f->_field_owner != nullptr) {
		_133417_generics=jule::append(_133417_generics,_133144_f->_field_owner->_field_generics);
	}
	{
		auto expr = _133144_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4880279648:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Param> _1eec2c632_p = *it;
			{
				if ((!(_1eec2c632_p->_method_is_self()))) {
					jule::Ptr<_200d010d9_TypeKind> _134125_kind = this->self->_method_build_non_generic_type_kind(_1eec2c632_p->_field_kind->_field_decl,_133417_generics);
					_133154_ok=(_134125_kind != nullptr) && _133154_ok;
					_1eec2c632_p->_field_kind->_field_kind=_134125_kind;
				}
			}
			_iter_next_4880279648:;
			++it;
			goto _iter_begin_4880279648;
		}
		_iter_end_4880279648:;
	}
	if ((!(_133144_f->_method_is_void()))) {
		jule::Ptr<_200d010d9_TypeKind> _134821_kind = this->self->_method_build_non_generic_type_kind(_133144_f->_field_result->_field_kind->_field_decl,_133417_generics);
		_133154_ok=(_134821_kind != nullptr) && _133154_ok;
		_133144_f->_field_result->_field_kind->_field_kind=_134821_kind;
	}
	_133154_ok = _133154_ok;
	return _133154_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_fn_decl_prototype(jule::Ptr<_2185d51ad_Fn>& _135848_f) {
	jule::Bool _135858_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_135848_f->_field_generics)))))) { goto _case_end_4880290256; }
		_case_begin_4880290256:;
		{
			_135858_ok = false;
			return _135858_ok;
		}
		goto _match_end_4880288624;
		_case_end_4880290256:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_135848_f)))))) { goto _case_end_4880289776; }
		_case_begin_4880289776:;
		{
			_135858_ok = false;
			return _135858_ok;
		}
		goto _match_end_4880288624;
		_case_end_4880289776:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_135848_f)))))) { goto _case_end_4880289888; }
		_case_begin_4880289888:;
		{
			_135858_ok = false;
			return _135858_ok;
		}
		goto _match_end_4880288624;
		_case_end_4880289888:;
		if (!(((!(this->self->_method_check_fn_decl_types(_135848_f)))))) { goto _case_end_4880290000; }
		_case_begin_4880290000:;
		{
			_135858_ok = false;
			return _135858_ok;
		}
		goto _match_end_4880288624;
		_case_end_4880290000:;
		_case_begin_4880288800:;
		{
			_135858_ok = true;
			return _135858_ok;
		}
		goto _match_end_4880288624;
		_case_end_4880288800:;
		_match_end_4880288624:;
	}
}



void _1eec2c632_Sema::_method_check_trait_decl_method(jule::Ptr<_2185d51ad_Fn>& _136848_f) {
	if (_2336ea198_is_ignore_ident(_136848_f->_field_ident)) {
		this->self->_method_push_err(_136848_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_136848_f);
	_136848_f->_field_sema=this->self;
}



void _1eec2c632_Sema::_method_check_trait_decl_methods(jule::Ptr<_2185da36c_Trait>& _137749_t) {
	{
		auto expr = _137749_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4880302208:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_f = *it;
			{
				this->self->_method_check_trait_decl_method(_1eec2c632_f);
				_137749_t->_field_mutable=_137749_t->_field_mutable || _1eec2c632_f->_field_params[0LL]->_field_mutable;
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto expr = _137749_t->_field_methods;
					auto it = expr.begin();
					_iter_begin_4880308096:;
					if (it != expr.end()) {
						jule::Int _1eec2c632_j = it - expr.begin();
						jule::Ptr<_2185d51ad_Fn> _1eec2c632_jf = *it;
						{
							{
								if (!((_1eec2c632_j >= _1eec2c632_i))) { goto _case_end_4880310576; }
								_case_begin_4880310576:;
								{
									goto _iter_end_4880308096;
								}
								goto _match_end_4880310352;
								_case_end_4880310576:;
								if (!((_1eec2c632_f->_field_ident == _1eec2c632_jf->_field_ident))) { goto _case_end_4880310688; }
								_case_begin_4880310688:;
								{
									this->self->_method_push_err(_1eec2c632_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_f->_field_ident)}));
									this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
									goto _iter_end_4880308096;
								}
								goto _match_end_4880310352;
								_case_end_4880310688:;
								_match_end_4880310352:;
							}
						}
						_iter_next_4880308096:;
						++it;
						_1eec2c632_j++;
						goto _iter_begin_4880308096;
					}
					_iter_end_4880308096:;
				}
			}
			_iter_next_4880302208:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4880302208;
		}
		_iter_end_4880302208:;
	}
}



void _1eec2c632_Sema::_method_check_trait_decl(jule::Ptr<_2185da36c_Trait>& _140941_t) {
	if (_2336ea198_is_ignore_ident(_140941_t->_field_ident)) {
		this->self->_method_push_err(_140941_t->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_140941_t),_140941_t->_field_ident,false)) {
		this->self->_method_push_err(_140941_t->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_140941_t->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_trait_decl_methods(_140941_t);
}



jule::Bool _1eec2c632_Sema::_method_check_trait_decls(void) {
	jule::Bool _142139_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_traits;
		auto it = expr.begin();
		_iter_begin_4880326768:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _1eec2c632_t = *it;
			{
				this->self->_method_check_trait_decl(_1eec2c632_t);
				if (this->self->_field_errors.len() > 0LL) {
					_142139_ok = false;
					return _142139_ok;
				}
			}
			_iter_next_4880326768:;
			++it;
			goto _iter_begin_4880326768;
		}
		_iter_end_4880326768:;
	}
	_142139_ok = true;
	return _142139_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_trait_impl_methods(jule::Ptr<_2185da36c_Trait>& _143348_base,jule::Ptr<_2185e0064_Impl>& _143363_ipl) {
	jule::Bool _143377_ok = jule::Bool();
	_143377_ok=true;
	{
		auto expr = _143363_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4880333792:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_f = *it;
			{
				if (_143348_base->_method_find_method(_1eec2c632_f->_field_ident) == nullptr) {
					(*this)._method_push_err(_1eec2c632_f->_field_token,jule::Str("trait @ have not any define in this identifier: @", 49),jule::Slice<jule::Any>({jule::Any(_143348_base->_field_ident),jule::Any(_1eec2c632_f->_field_ident)}));
					_143377_ok=false;
				}
			}
			_iter_next_4880333792:;
			++it;
			goto _iter_begin_4880333792;
		}
		_iter_end_4880333792:;
	}
	return _143377_ok;
}



jule::Bool _1eec2c632_Sema::_method_impl_to_struct(jule::Ptr<_23461aa35_Struct>& _144439_dest,jule::Ptr<_2185e0064_Impl>& _144459_ipl) {
	jule::Bool _144473_ok = jule::Bool();
	_144473_ok=true;
	{
		auto expr = _144459_ipl->_field_methods;
		auto it = expr.begin();
		_iter_begin_4880342448:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_f = *it;
			{
				if ((_144439_dest->_method_find_method(_1eec2c632_f->_field_ident,_1eec2c632_f->_field_statically) != nullptr) || (_144439_dest->_method_find_field(_1eec2c632_f->_field_ident) != nullptr)) {
					this->self->_method_push_err(_1eec2c632_f->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144439_dest->_field_ident),jule::Any(_1eec2c632_f->_field_ident)}));
					_144473_ok=false;
					goto _iter_next_4880342448;
				}
				if ((_144439_dest->_field_generics.len() > 0LL) && (_1eec2c632_f->_field_generics.len() > 0LL)) {
					{
						auto expr = _1eec2c632_f->_field_generics;
						auto it = expr.begin();
						_iter_begin_4880350096:;
						if (it != expr.end()) {
							jule::Ptr<_233464770_GenericDecl> _1eec2c632_fg = *it;
							{
								{
									auto expr = _144439_dest->_field_generics;
									auto it = expr.begin();
									_iter_begin_4880351808:;
									if (it != expr.end()) {
										jule::Ptr<_233464770_GenericDecl> _1eec2c632_dg = *it;
										{
											if (_1eec2c632_fg->_field_ident == _1eec2c632_dg->_field_ident) {
												this->self->_method_push_err(_1eec2c632_fg->_field_token,jule::Str("methods cannot have same generic identifier with owner same time", 64),jule::Slice<jule::Any>({}));
												_144473_ok=false;
											}
										}
										_iter_next_4880351808:;
										++it;
										goto _iter_begin_4880351808;
									}
									_iter_end_4880351808:;
								}
							}
							_iter_next_4880350096:;
							++it;
							goto _iter_begin_4880350096;
						}
						_iter_end_4880350096:;
					}
				}
				_1eec2c632_f->_field_sema=this->self;
				_1eec2c632_f->_field_owner=_144439_dest;
				_144439_dest->_field_methods=jule::append(_144439_dest->_field_methods,jule::Slice<jule::Ptr<_2185d51ad_Fn>>({_1eec2c632_f}));
			}
			_iter_next_4880342448:;
			++it;
			goto _iter_begin_4880342448;
		}
		_iter_end_4880342448:;
	}
	{
		auto expr = _144459_ipl->_field_statics;
		auto it = expr.begin();
		_iter_begin_4880352864:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _1eec2c632_v = *it;
			{
				
				if ((_144439_dest->_method_find_method(_1eec2c632_v->_field_ident,true) != nullptr) || (_144439_dest->_method_find_static(_1eec2c632_v->_field_ident) != nullptr)) {
					this->self->_method_push_err(_1eec2c632_v->_field_token,jule::Str("struct @ already have a define in this identifier: @", 52),jule::Slice<jule::Any>({jule::Any(_144439_dest->_field_ident),jule::Any(_1eec2c632_v->_field_ident)}));
					_144473_ok=false;
					goto _iter_next_4880352864;
				}
				this->self->_method_check_var_decl(_1eec2c632_v,this->self);
				this->self->_method_check_type_var(_1eec2c632_v,this->self);
				_144439_dest->_field_statics=jule::append(_144439_dest->_field_statics,jule::Slice<jule::Ptr<_200c58948_Var>>({_1eec2c632_v}));
			}
			_iter_next_4880352864:;
			++it;
			goto _iter_begin_4880352864;
		}
		_iter_end_4880352864:;
	}
	return _144473_ok;
}



void _1eec2c632_Sema::_method_impl_trait(jule::Ptr<_2185e0064_Impl>& _148735_decl) {
	jule::Ptr<_2185da36c_Trait> _148817_base = this->self->_method_find_trait(_148735_decl->_field_base._field_kind);
	if (_148817_base == nullptr) {
		_148817_base=_1d67e4c4b_find_builtin_trait(_148735_decl->_field_base._field_kind);
	}
	if (_148817_base == nullptr) {
		this->self->_method_push_err(_148735_decl->_field_base,jule::Str("any valid base definition is not exist in this identifier: @", 60),jule::Slice<jule::Any>({jule::Any(_148735_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ptr<_23461aa35_Struct> _150117_dest = this->self->_method_find_struct(_148735_decl->_field_dest._field_kind,false);
	if (_150117_dest == nullptr) {
		this->self->_method_push_err(_148735_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_148735_decl->_field_dest._field_kind)}));
		return;
	}
	if (_150117_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_148735_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	_148817_base->_field_implemented=jule::append(_148817_base->_field_implemented,jule::Slice<jule::Ptr<_23461aa35_Struct>>({_150117_dest}));
	_150117_dest->_field_implements=jule::append(_150117_dest->_field_implements,jule::Slice<jule::Ptr<_2185da36c_Trait>>({_148817_base}));
	if (_148735_decl->_field_statics.len() > 0LL) {
		this->self->_method_push_err(_148735_decl->_field_statics[0LL]->_field_token,jule::Str("trait implementations cannot implement static field", 51),jule::Slice<jule::Any>({}));
	}
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_148817_base,_148735_decl)))))) { goto _case_end_4880384880; }
		_case_begin_4880384880:;
		{
			return;
		}
		goto _match_end_4880380688;
		_case_end_4880384880:;
		if (!(((!(this->self->_method_impl_to_struct(_150117_dest,_148735_decl)))))) { goto _case_end_4880384976; }
		_case_begin_4880384976:;
		{
			return;
		}
		goto _match_end_4880380688;
		_case_end_4880384976:;
		_match_end_4880380688:;
	}
}



void _1eec2c632_Sema::_method_impl_struct(jule::Ptr<_2185e0064_Impl>& _152536_decl) {
	
	jule::Ptr<_23461aa35_Struct> _153017_dest = this->self->_method_find_struct(_152536_decl->_field_dest._field_kind,false);
	if (_153017_dest == nullptr) {
		this->self->_method_push_err(_152536_decl->_field_dest,jule::Str("any valid destination definition is not exist in this identifier: @", 67),jule::Slice<jule::Any>({jule::Any(_152536_decl->_field_dest._field_kind)}));
		return;
	}
	if (_153017_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_152536_decl->_field_dest,jule::Str("illegal implementation via definition from out of package", 57),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_153017_dest,_152536_decl)))))) { goto _case_end_4880397632; }
		_case_begin_4880397632:;
		{
			return;
		}
		goto _match_end_4880397520;
		_case_end_4880397632:;
		_match_end_4880397520:;
	}
}



void _1eec2c632_Sema::_method_impl_impl(jule::Ptr<_2185e0064_Impl>& _154834_decl) {
	{
		if (!((_154834_decl->_method_is_trait_impl()))) { goto _case_end_4880400592; }
		_case_begin_4880400592:;
		{
			this->self->_method_impl_trait(_154834_decl);
		}
		goto _match_end_4880400368;
		_case_end_4880400592:;
		if (!((_154834_decl->_method_is_struct_impl()))) { goto _case_end_4880400704; }
		_case_begin_4880400704:;
		{
			this->self->_method_impl_struct(_154834_decl);
		}
		goto _match_end_4880400368;
		_case_end_4880400704:;
		_match_end_4880400368:;
	}
}



void _1eec2c632_Sema::_method_check_var_decl(jule::Ptr<_200c58948_Var>& _155739_decl,jule::Trait<_1d6734eee_Lookup> _155755_l) {
	if (_2336ea198_is_ignore_ident(_155739_decl->_field_ident)) {
		this->self->_method_push_err(_155739_decl->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	}
	if (_155739_decl->_method_is_type_inferred()) {
		if (_155739_decl->_field_statically) {
			this->self->_method_push_err(_155739_decl->_field_token,jule::Str("static variables must be have type annotation", 45),jule::Slice<jule::Any>({}));
		}
		if ((!(_155739_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_155739_decl->_field_token,jule::Str("type inference declarations should have a initializer", 53),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_155739_decl->_field_kind,_155755_l);
	}
	if (_155739_decl->_field_constant && _155739_decl->_field_reference) {
		this->self->_method_push_err(_155739_decl->_field_token,jule::Str("references cannot be constant", 29),jule::Slice<jule::Any>({}));
	}
	if ((!(_155739_decl->_method_is_initialized()))) {
		if (_155739_decl->_field_constant) {
			this->self->_method_push_err(_155739_decl->_field_token,jule::Str("constant variable must have initialize expression", 49),jule::Slice<jule::Any>({}));
		}
		if (_155739_decl->_field_statically) {
			this->self->_method_push_err(_155739_decl->_field_token,jule::Str("static variables must be have initialize expression", 51),jule::Slice<jule::Any>({}));
		}
		if (_155739_decl->_field_reference) {
			this->self->_method_push_err(_155739_decl->_field_token,jule::Str("reference variables must be have lvalue initialize expression", 61),jule::Slice<jule::Any>({}));
		}
	}
}



void _1eec2c632_Sema::_method_check_global_var_decl(jule::Ptr<_200c58948_Var>& _159446_decl) {
	if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_159446_decl),_159446_decl->_field_ident,_159446_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_159446_decl->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_159446_decl->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	if (_159446_decl->_field_cpp_linked && _159446_decl->_field_constant) {
		this->self->_method_push_err(_159446_decl->_field_token,jule::Str("cpp linked variables cannot constant", 36),jule::Slice<jule::Any>({}));
	}
	if (((!(_159446_decl->_field_cpp_linked)) && (!(_159446_decl->_field_constant))) && (!(_159446_decl->_field_statically))) {
		this->self->_method_push_err(_159446_decl->_field_token,jule::Str("global variables must be static", 31),jule::Slice<jule::Any>({}));
		this->self->_method_push_suggestion(jule::Str("use \"static\" keyword to define", 30),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_159446_decl,this->self);
}



jule::Bool _1eec2c632_Sema::_method_check_global_decls(void) {
	jule::Bool _161140_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4880436992:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _1eec2c632_decl = *it;
			{
				this->self->_method_check_global_var_decl(_1eec2c632_decl);
				if (this->self->_field_errors.len() > 0LL) {
					_161140_ok = false;
					return _161140_ok;
				}
			}
			_iter_next_4880436992:;
			++it;
			goto _iter_begin_4880436992;
		}
		_iter_end_4880436992:;
	}
	_161140_ok = true;
	return _161140_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_trait_impl(jule::Ptr<_23461aa35_Struct>& _162348_strct,jule::Ptr<_2185da36c_Trait>& _162369_trt) {
	jule::Bool _162384_ok = jule::Bool();
	{
		auto expr = _162369_trt->_field_methods;
		auto it = expr.begin();
		_iter_begin_4880444240:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_tf = *it;
			{
				jule::Bool _162521_exist = false;
				jule::Ptr<_2185d51ad_Fn> _162621_sf = _162348_strct->_method_find_method(_1eec2c632_tf->_field_ident,_1eec2c632_tf->_field_statically);
				jule::Ptr<_2185d51ad_FnIns> _162717_tf_k = this->self->_method_get_trait_check_fn_kind(_1eec2c632_tf);
				if (_162621_sf != nullptr) {
					jule::Ptr<_2185d51ad_FnIns> _162925_sf_k = this->self->_method_get_trait_check_fn_kind(_162621_sf);
					_162521_exist=((_162717_tf_k->_field_decl->_field_public == _162925_sf_k->_field_decl->_field_public) && (_162717_tf_k->_field_decl->_field_ident == _162925_sf_k->_field_decl->_field_ident)) && _162717_tf_k->_method_equals(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_162925_sf_k)));
				}
				if ((!(_162521_exist))) {
					
					jule::Str _163825_s = _162717_tf_k->_method_get_kind_str(true);
					if (_1eec2c632_tf->_field_public) {
						_163825_s=jule::Str("pub ", 4) + _163825_s;
					}
					this->self->_method_push_err(_162348_strct->_field_token,jule::Str("trait @ derived but not implemented trait's \"@\" define", 54),jule::Slice<jule::Any>({jule::Any(_162369_trt->_field_ident),jule::Any(_163825_s)}));
					_162384_ok=false;
				}
			}
			_iter_next_4880444240:;
			++it;
			goto _iter_begin_4880444240;
		}
		_iter_end_4880444240:;
	}
	return _162384_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_impls(jule::Ptr<_23461aa35_Struct>& _164943_s) {
	jule::Bool _164957_ok = jule::Bool();
	_164957_ok=true;
	{
		auto expr = _164943_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4880461664:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _1eec2c632_trt = *it;
			{
				_164957_ok=this->self->_method_check_struct_trait_impl(_164943_s,_1eec2c632_trt) && _164957_ok;
			}
			_iter_next_4880461664:;
			++it;
			goto _iter_begin_4880461664;
		}
		_iter_end_4880461664:;
	}
	_164957_ok = _164957_ok;
	return _164957_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_fields(jule::Ptr<_23461aa35_Struct>& _165744_st) {
	jule::Bool _165759_ok = jule::Bool();
	_165759_ok=true;
	jule::Ptr<_200d010d9_TypeChecker> _166017_tc = jule::new_struct<_200d010d9_TypeChecker>(new( std::nothrow ) _200d010d9_TypeChecker(this->self,this->self,jule::new_struct<_200d010d9_Referencer>(new( std::nothrow ) _200d010d9_Referencer(_165744_st->_field_ident,jule::Any(_165744_st),nullptr)),_2336ea198_Token(),_165744_st->_field_generics,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>(),jule::Bool()));
	jule::I64 _167013_n = _165744_st->_field_instances.len();
	{
		auto expr = _165744_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4880470640:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Field> _1eec2c632_f = *it;
			{
				_1eec2c632_f->_field_owner=_165744_st;
				_1eec2c632_f->_field_kind->_field_kind=_166017_tc->_method_check_decl(_1eec2c632_f->_field_kind->_field_decl);
				_165759_ok=(_1eec2c632_f->_field_kind->_field_kind != nullptr) && _165759_ok;
				{
					auto expr = _165744_st->_field_fields;
					auto it = expr.begin();
					_iter_begin_4880475360:;
					if (it != expr.end()) {
						jule::Ptr<_23461aa35_Field> _1eec2c632_cf = *it;
						{
							if (_1eec2c632_f == _1eec2c632_cf) {
								goto _iter_end_4880475360;
							} else if (_1eec2c632_f->_field_ident == _1eec2c632_cf->_field_ident) {
								this->self->_method_push_err(_1eec2c632_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_1eec2c632_f->_field_ident)}));
								this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
								_165759_ok=false;
							}
						}
						_iter_next_4880475360:;
						++it;
						goto _iter_begin_4880475360;
					}
					_iter_end_4880475360:;
				}
			}
			_iter_next_4880470640:;
			++it;
			goto _iter_begin_4880470640;
		}
		_iter_end_4880470640:;
	}
	if (_165759_ok && (_167013_n != _165744_st->_field_instances.len())) {
		_166017_tc->_field_referencer=nullptr;
		_165744_st->_field_instances=_165744_st->_field_instances.slice(0LL,_167013_n);
		{
			auto expr = _165744_st->_field_fields;
			auto it = expr.begin();
			_iter_begin_4880481328:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_Field> _1eec2c632_f = *it;
				{
					_1eec2c632_f->_field_kind->_field_kind=_166017_tc->_method_check_decl(_1eec2c632_f->_field_kind->_field_decl);
				}
				_iter_next_4880481328:;
				++it;
				goto _iter_begin_4880481328;
			}
			_iter_end_4880481328:;
		}
	}
	_165759_ok = _165759_ok;
	return _165759_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_decl_methods(jule::Ptr<_23461aa35_Struct>& _169950_s) {
	jule::Bool _169964_ok = jule::Bool();
	{
		auto expr = _169950_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4880487184:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_m = *it;
			{
				if ((!(this->self->_method_check_fn_decl_types(_1eec2c632_m)))) {
					_169964_ok = false;
					return _169964_ok;
				}
			}
			_iter_next_4880487184:;
			++it;
			goto _iter_begin_4880487184;
		}
		_iter_end_4880487184:;
	}
	_169964_ok = true;
	return _169964_ok;
}



void _1eec2c632_Sema::_method_check_struct_decl(jule::Ptr<_23461aa35_Struct>& _170842_s) {
	if (_2336ea198_is_ignore_ident(_170842_s->_field_ident)) {
		this->self->_method_push_err(_170842_s->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_170842_s),_170842_s->_field_ident,_170842_s->_field_cpp_linked)) {
		this->self->_method_push_err(_170842_s->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_170842_s->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_170842_s->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_170842_s->_field_generics)))))) { goto _case_end_4880498176; }
		_case_begin_4880498176:;
		{
			return;
		}
		goto _match_end_4880497888;
		_case_end_4880498176:;
		if (!(((!(this->self->_method_check_struct_fields(_170842_s)))))) { goto _case_end_4880498320; }
		_case_begin_4880498320:;
		{
			return;
		}
		goto _match_end_4880497888;
		_case_end_4880498320:;
		if (!(((!(this->self->_method_check_struct_decl_methods(_170842_s)))))) { goto _case_end_4880498416; }
		_case_begin_4880498416:;
		{
			return;
		}
		goto _match_end_4880497888;
		_case_end_4880498416:;
		if (!(((!(this->self->_method_check_struct_impls(_170842_s)))))) { goto _case_end_4880498512; }
		_case_begin_4880498512:;
		{
			return;
		}
		goto _match_end_4880497888;
		_case_end_4880498512:;
		_match_end_4880497888:;
	}
}



jule::Bool _1eec2c632_Sema::_method_check_struct_decls(void) {
	jule::Bool _172640_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4880504880:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1eec2c632_s = *it;
			{
				this->self->_method_check_struct_decl(_1eec2c632_s);
				if (this->self->_field_errors.len() > 0LL) {
					_172640_ok = false;
					return _172640_ok;
				}
			}
			_iter_next_4880504880:;
			++it;
			goto _iter_begin_4880504880;
		}
		_iter_end_4880504880:;
	}
	_172640_ok = true;
	return _172640_ok;
}



void _1eec2c632_Sema::_method_check_fn_decl(jule::Ptr<_2185d51ad_Fn>& _173938_f) {
	if (_2336ea198_is_ignore_ident(_173938_f->_field_ident)) {
		this->self->_method_push_err(_173938_f->_field_token,jule::Str("ignore operator cannot use as identifier for this declaration", 61),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(static_cast<jule::Uintptr>(_173938_f),_173938_f->_field_ident,_173938_f->_field_cpp_linked)) {
		this->self->_method_push_err(_173938_f->_field_token,jule::Str("duplicated identifier for declarations in scope: @", 50),jule::Slice<jule::Any>({jule::Any(_173938_f->_field_ident)}));
		this->self->_method_push_suggestion(jule::Str("rename definition to avoid duplication", 38),jule::Slice<jule::Any>({}));
	}
	_173938_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_173938_f);
}



jule::Bool _1eec2c632_Sema::_method_check_fn_decls(void) {
	jule::Bool _175236_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4880519488:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_f = *it;
			{
				this->self->_method_check_fn_decl(_1eec2c632_f);
				if (this->self->_field_errors.len() > 0LL) {
					_175236_ok = false;
					return _175236_ok;
				}
			}
			_iter_next_4880519488:;
			++it;
			goto _iter_begin_4880519488;
		}
		_iter_end_4880519488:;
	}
	_175236_ok = true;
	return _175236_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_directive_pass(_21862cb1d_Pass& _176440_pass) {
	jule::Bool _176454_ok = jule::Bool();
	if (_176440_pass._field_text == jule::Str()) {
		_176454_ok = true;
		return _176454_ok;
	}
	if (_176440_pass._field_text[0LL] != '-') {
		(*this)._method_push_err(_176440_pass._field_token,jule::Str("the pass directive must be start with dash", 42),jule::Slice<jule::Any>({}));
		_176454_ok = false;
		return _176454_ok;
	}
	_176454_ok = true;
	return _176454_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_passes(void) {
	jule::Bool _177733_ok = jule::Bool();
	_177733_ok=true;
	{
		auto expr = (*this)._field_file->_field_passes;
		auto it = expr.begin();
		_iter_begin_4880531264:;
		if (it != expr.end()) {
			_21862cb1d_Pass _1eec2c632_pass = *it;
			{
				_177733_ok=(*this)._method_check_directive_pass(_1eec2c632_pass) && _177733_ok;
			}
			_iter_next_4880531264:;
			++it;
			goto _iter_begin_4880531264;
		}
		_iter_end_4880531264:;
	}
	return _177733_ok;
}



void _1eec2c632_Sema::_method_push_cycle_error(jule::Ptr<_23461aa35_Struct>& _178532_st1,jule::Ptr<_23461aa35_Struct>& _178547_st2,jule::Str& _178566_message) {
	
	jule::Str _178813_refers_to = _231e4202e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_178532_st1->_field_ident),jule::Any(_178547_st2->_field_ident)}));
	_178566_message=((_21862cb1d_str_repeat(jule::Str(" ", 1),4LL) + _178813_refers_to) + jule::Str("\n", 1)) + _178566_message;
}



jule::Bool _1eec2c632_Sema::_method_check_cross_cycle(jule::Ptr<_23461aa35_Struct>& _179233_st1,jule::Ptr<_23461aa35_Struct>& _179248_st2,jule::Str& _179267_message) {
	{
		auto expr = _179248_st2->_field_uses;
		auto it = expr.begin();
		_iter_begin_4880544640:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1eec2c632_u = *it;
			{
				if (_1eec2c632_u == _179233_st1) {
					(*this)._method_push_cycle_error(_179248_st2,_1eec2c632_u,_179267_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_179233_st1,_1eec2c632_u,_179267_message)))) {
					(*this)._method_push_cycle_error(_179248_st2,_1eec2c632_u,_179267_message);
					return false;
				}
			}
			_iter_next_4880544640:;
			++it;
			goto _iter_begin_4880544640;
		}
		_iter_end_4880544640:;
	}
	return true;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _180853_derive,jule::Ptr<_23461aa35_Struct>& _180867_st1,jule::Ptr<_200d010d9_TypeKind>& _180886_k) {
	jule::Bool _1808102_ok = jule::Bool();
	jule::Ptr<_23461aa35_Struct> _180917_st2 = _200d010d9_get_struct_from_kind(_180886_k);
	if (_180917_st2 == nullptr) {
		_1808102_ok = true;
		return _1808102_ok;
	}
	if (_180867_st1 == _180917_st2) {
		(*this)._method_push_err(_180867_st1->_field_token,jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57),jule::Slice<jule::Any>({jule::Any(_180853_derive),jule::Any(_180867_st1->_field_ident)}));
		_1808102_ok = false;
		return _1808102_ok;
	}
	jule::Str _182117_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_180867_st1,_180917_st2,_182117_message)))) {
		jule::Str _182421_err_msg = _182117_message;
		_182117_message=jule::Str();
		(*this)._method_push_cycle_error(_180867_st1,_180917_st2,_182117_message);
		_182421_err_msg=_182421_err_msg + _182117_message;
		(*this)._method_push_err(_180867_st1->_field_token,jule::Str("illegal cross cycle for \"@\" derive;\n@", 37),jule::Slice<jule::Any>({jule::Any(_180853_derive),jule::Any(_182421_err_msg)}));
		_1808102_ok = false;
		return _1808102_ok;
	}
	_1808102_ok = true;
	return _1808102_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_ins_derive_clone(jule::Ptr<_23461aa35_StructIns> _183552_st) {
	jule::Bool _183570_ok = jule::Bool();
	if ((!(_183552_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_183570_ok = true;
		return _183570_ok;
	}
	{
		auto expr = _183552_st->_field_fields;
		auto it = expr.begin();
		_iter_begin_4880566752:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_FieldIns> _1eec2c632_f = *it;
			{
				if ((_1eec2c632_f->_field_kind == nullptr) || (!(_1eec2c632_f->_field_kind->_method_mutable()))) {
					goto _iter_next_4880566752;
				}
				if ((!(_1eec2c632_f->_field_kind->_method_supports_cloning()))) {
					(*this)._method_push_err(_183552_st->_field_decl->_field_token,jule::Str("type \"@\" is not compatible to derive \"@\"", 40),jule::Slice<jule::Any>({jule::Any(_1eec2c632_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_183570_ok = false;
					return _183570_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_183552_st->_field_decl,_1eec2c632_f->_field_kind)))) {
					_183570_ok = false;
					return _183570_ok;
				}
			}
			_iter_next_4880566752:;
			++it;
			goto _iter_begin_4880566752;
		}
		_iter_end_4880566752:;
	}
	_183570_ok = true;
	return _183570_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_struct_derive_clone(jule::Ptr<_23461aa35_Struct>& _185849_st) {
	jule::Bool _185864_ok = jule::Bool();
	_185864_ok = (*this)._method_check_struct_ins_derive_clone(_185849_st->_method_instance());
	return _185864_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_file_derives(void) {
	jule::Bool _186239_ok = jule::Bool();
	{
		auto expr = (*this)._field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4880582144:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1eec2c632_st = *it;
			{
				_186239_ok=(*this)._method_check_struct_derive_clone(_1eec2c632_st);
				if ((!(_186239_ok))) {
					goto _iter_end_4880582144;
				}
			}
			_iter_next_4880582144:;
			++it;
			goto _iter_begin_4880582144;
		}
		_iter_end_4880582144:;
	}
	_186239_ok = _186239_ok;
	return _186239_ok;
}



void _1eec2c632_Sema::_method_check_package_derives(void) {
	{
		auto expr = (*this)._field_files;
		auto it = expr.begin();
		_iter_begin_4880585776:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				(*this)._method_set_current_file(_1eec2c632_f);
				jule::Bool _187717_ok = (*this)._method_check_file_derives();
				if ((!(_187717_ok))) {
					return;
				}
			}
			_iter_next_4880585776:;
			++it;
			goto _iter_begin_4880585776;
		}
		_iter_end_4880585776:;
	}
}



void _1eec2c632_Sema::_method_check_package_decls(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880590672:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_4880590672:;
			++it;
			goto _iter_begin_4880590672;
		}
		_iter_end_4880590672:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880591232:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_4880591232:;
			++it;
			goto _iter_begin_4880591232;
		}
		_iter_end_4880591232:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880594192:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_4880594192:;
			++it;
			goto _iter_begin_4880594192;
		}
		_iter_end_4880594192:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880596944:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_4880596944:;
			++it;
			goto _iter_begin_4880596944;
		}
		_iter_end_4880596944:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880599760:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_4880599760:;
			++it;
			goto _iter_begin_4880599760;
		}
		_iter_end_4880599760:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880602512:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_4880602512:;
			++it;
			goto _iter_begin_4880602512;
		}
		_iter_end_4880602512:;
	}
	this->self->_method_check_package_derives();
}



void _1eec2c632_Sema::_method_check_data_for_type_inference(jule::Ptr<_218751758_Data>& _193249_d,_2336ea198_Token& _193260_err_token) {
	{
		if (!((_193249_d->_method_is_nil()))) { goto _case_end_4880611200; }
		_case_begin_4880611200:;
		{
			(*this)._method_push_err(_193260_err_token,jule::Str("nil is cannot use with type inferred definitions", 48),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4880610992;
		_case_end_4880611200:;
		if (!((_193249_d->_method_is_void()))) { goto _case_end_4880611312; }
		_case_begin_4880611312:;
		{
			(*this)._method_push_err(_193260_err_token,jule::Str("void data is cannot use for type inferred definitions", 53),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4880610992;
		_case_end_4880611312:;
		if (!((_193249_d->_field_kind->_field_variadic))) { goto _case_end_4880611424; }
		_case_begin_4880611424:;
		{
			(*this)._method_push_err(_193260_err_token,jule::Str("invalid expression for type inference", 37),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4880610992;
		_case_end_4880611424:;
		_match_end_4880610992:;
	}
}



void _1eec2c632_Sema::_method_check_var(jule::Ptr<_200c58948_Var>& _194534_v) {
	if (_194534_v->_field_cpp_linked) {
		return;
	}
	if (_194534_v->_method_is_type_inferred()) {
		_194534_v->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_194534_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_type_inference(_194534_v->_field_value->_field_data,_194534_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ptr<_200d010d9_Arr> _195721_arr = _194534_v->_field_kind->_field_kind->_method_arr();
		if (_195721_arr != nullptr) {
			if (_195721_arr->_field_auto) {
				jule::Ptr<_200d010d9_Arr> _196025_data_arr = _194534_v->_field_value->_field_data->_field_kind->_method_arr();
				if (_196025_data_arr != nullptr) {
					_195721_arr->_field_n=_196025_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_194534_v->_field_reference,_194534_v->_field_kind->_field_kind,_194534_v->_field_value->_field_data,_194534_v->_field_value->_field_expr->_field_token);
	}
	if (_194534_v->_field_reference && (!(_200d010d9_is_valid_for_ref(_194534_v->_field_kind->_field_kind)))) {
		this->self->_method_push_err(_194534_v->_field_token,jule::Str("references cannot points to \"@\" type", 36),jule::Slice<jule::Any>({jule::Any(_194534_v->_field_kind->_field_kind->_method_to_str())}));
	}
	this->self->_method_check_validity_for_init_expr(_194534_v->_field_mutable,_194534_v->_field_reference,_194534_v->_field_kind->_field_kind,_194534_v->_field_value->_field_data,_194534_v->_field_value->_field_expr->_field_token);
	if (_194534_v->_field_constant) {
		if ((!(_194534_v->_field_value->_field_data->_method_is_const()))) {
			this->self->_method_push_err(_194534_v->_field_value->_field_expr->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
		}
	} else {
		_194534_v->_field_value->_field_data->_field_constant=nullptr;
	}
	if (_194534_v->_field_kind->_field_kind->_method_tup() != nullptr) {
		_194534_v->_field_kind->_field_kind=nullptr;
	}
}



void _1eec2c632_Sema::_method_check_type_var(jule::Ptr<_200c58948_Var>& _199539_decl,jule::Trait<_1d6734eee_Lookup> _199555_l) {
	if (_199539_decl->_field_cpp_linked || (!(_199539_decl->_method_is_initialized()))) {
		return;
	}
	jule::Ptr<_218751758_Eval> _200017_eval = (((_199539_decl->_field_kind != nullptr)) ? (this->self->_method_evalpd(_199555_l,_199539_decl->_field_kind->_field_kind,_199539_decl)) : (this->self->_method_evalpd(_199555_l,nullptr,_199539_decl)));
	_200017_eval->_field_immutable=(!(_199539_decl->_field_mutable));
	_199539_decl->_field_value->_field_data=_200017_eval->_method_eval_expr(_199539_decl->_field_value->_field_expr);
	if (_199539_decl->_field_value->_field_data == nullptr) {
		return;
	}
	this->self->_method_check_var(_199539_decl);
}



void _1eec2c632_Sema::_method_check_global_types(void) {
	{
		auto expr = this->self->_field_file->_field_vars;
		auto it = expr.begin();
		_iter_begin_4880652480:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _1eec2c632_decl = *it;
			{
				this->self->_method_check_type_var(_1eec2c632_decl,this->self);
			}
			_iter_next_4880652480:;
			++it;
			goto _iter_begin_4880652480;
		}
		_iter_end_4880652480:;
	}
}



void _1eec2c632_Sema::_method_check_type_method(jule::Ptr<_23461aa35_StructIns>& _202142_strct,jule::Ptr<_2185d51ad_Fn>& _202166_f) {
	if (_202166_f->_field_cpp_linked) {
		return;
	}
	if (_202166_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_202166_f->_field_instances.len() == 0LL) {
		jule::Ptr<_2185d51ad_FnIns> _203221_ins = _202166_f->_method_instance();
		_203221_ins->_field_owner=_202142_strct;
		_202166_f->_method_append_instance(_203221_ins);
		this->self->_method_reload_fn_ins_types(_203221_ins);
		_203221_ins->_field_reloaded=true;
	}
	{
		auto expr = _202166_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4880659760:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_FnIns> _1eec2c632_ins = *it;
			{
				if (_1eec2c632_ins->_field_scope->_field_stmts.len() > 0LL) {
					goto _iter_next_4880659760;
				}
				this->self->_method_check_fn_ins(_1eec2c632_ins);
			}
			_iter_next_4880659760:;
			++it;
			goto _iter_begin_4880659760;
		}
		_iter_end_4880659760:;
	}
}



void _1eec2c632_Sema::_method_check_type_struct(jule::Ptr<_23461aa35_Struct>& _204842_strct) {
	if (_204842_strct->_field_cpp_linked) {
		return;
	}
	if (_204842_strct->_field_generics.len() > 0LL) {
		return;
	}
	if (_204842_strct->_field_instances.len() == 0LL) {
		jule::Ptr<_23461aa35_StructIns> _205921_ins = _204842_strct->_method_instance();
		_205921_ins->_field_checked=true;
		_204842_strct->_method_append_instance(_205921_ins);
	}
	{
		auto expr = _204842_strct->_field_instances;
		auto it = expr.begin();
		_iter_begin_4880674048:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_StructIns> _1eec2c632_ins = *it;
			{
				{
					auto expr = _1eec2c632_ins->_field_methods;
					auto it = expr.begin();
					_iter_begin_4880675920:;
					if (it != expr.end()) {
						jule::Ptr<_2185d51ad_Fn> _1eec2c632_f = *it;
						{
							this->self->_method_check_type_method(_1eec2c632_ins,_1eec2c632_f);
						}
						_iter_next_4880675920:;
						++it;
						goto _iter_begin_4880675920;
					}
					_iter_end_4880675920:;
				}
			}
			_iter_next_4880674048:;
			++it;
			goto _iter_begin_4880674048;
		}
		_iter_end_4880674048:;
	}
}



void _1eec2c632_Sema::_method_check_struct_types(void) {
	{
		auto expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4880678640:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1eec2c632_s = *it;
			{
				this->self->_method_check_type_struct(_1eec2c632_s);
			}
			_iter_next_4880678640:;
			++it;
			goto _iter_begin_4880678640;
		}
		_iter_end_4880678640:;
	}
}



void _1eec2c632_Sema::_method_check_rets(jule::Ptr<_2185d51ad_FnIns>& _207734_f) {
	if (_207734_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _208213_ok = _1eec2c632_has_ret(_207734_f->_field_scope);
	if ((!(_208213_ok))) {
		(*this)._method_push_err(_207734_f->_field_decl->_field_token,jule::Str("missing return at end of function", 33),jule::Slice<jule::Any>({}));
	}
}



void _1eec2c632_Sema::_method_check_fn_ins_sc(jule::Ptr<_2185d51ad_FnIns>& _208839_f,jule::Ptr<_2186ce186_ScopeChecker>& _208855_sc) {
	if (_208839_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ptr<_200c58948_Var>> _209317_vars = _1eec2c632_build_ret_vars(_208839_f);
	_208855_sc->_field_table->_field_vars=jule::append(_208855_sc->_field_table->_field_vars,_209317_vars);
	_208855_sc->_field_table->_field_vars=jule::append(_208855_sc->_field_table->_field_vars,_1eec2c632_build_param_vars(_208839_f));
	_208855_sc->_field_table->_field_type_aliases=jule::append(_208855_sc->_field_table->_field_type_aliases,_1eec2c632_build_generic_type_aliases(_208839_f));
	_208855_sc->_method_check(_208839_f->_field_decl->_field_scope,_208839_f->_field_scope);
	if (_209317_vars.len() > 0LL) {
		jule::Slice<jule::Any> _210321_stmts = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_208839_f->_field_scope->_field_stmts.len() + _209317_vars.len()));
		{
			auto expr = _209317_vars;
			auto it = expr.begin();
			_iter_begin_4880699904:;
			if (it != expr.end()) {
				jule::Ptr<_200c58948_Var> _1eec2c632_v = *it;
				{
					_210321_stmts=jule::append(_210321_stmts,jule::Slice<jule::Any>({jule::Any(_1eec2c632_v)}));
				}
				_iter_next_4880699904:;
				++it;
				goto _iter_begin_4880699904;
			}
			_iter_end_4880699904:;
		}
		_210321_stmts=jule::append(_210321_stmts,_208839_f->_field_scope->_field_stmts);
		_208839_f->_field_scope->_field_stmts=_210321_stmts;
	}
	(*this)._method_check_rets(_208839_f);
}



void _1eec2c632_Sema::_method_check_fn_ins(jule::Ptr<_2185d51ad_FnIns>& _211537_f) {
	if (_211537_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ptr<_218737b7e_SymbolTable> _212017_old = _211537_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_211537_f->_field_decl->_field_sema->_method_set_current_file(_212017_old);
	});
	jule::Ptr<_218737b7e_SymbolTable> _212217_file = _1eec2c632_find_file(_211537_f->_field_decl->_field_sema->_field_files,_211537_f->_field_decl->_field_token._field_file);
	if (_212217_file != nullptr) {
		_211537_f->_field_decl->_field_sema->_method_set_current_file(_212217_file);
	}
	jule::Ptr<_2186ce186_ScopeChecker> _212717_sc = _2186ce186_new_scope_checker(_211537_f->_field_decl->_field_sema,_211537_f);
	this->self->_method_check_fn_ins_sc(_211537_f,_212717_sc);
	if (_211537_f->_field_decl->_field_sema != this->self) {
		this->self->_field_errors=jule::append(this->self->_field_errors,_211537_f->_field_decl->_field_sema->_field_errors);
		_211537_f->_field_decl->_field_sema->_field_errors=nullptr;
	}
}



void _1eec2c632_Sema::_method_check_type_fn(jule::Ptr<_2185d51ad_Fn>& _213638_f) {
	if (_213638_f->_field_cpp_linked) {
		return;
	}
	if (_213638_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto expr = _213638_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4880719920:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_FnIns> _1eec2c632_ins = *it;
			{
				this->self->_method_check_fn_ins(_1eec2c632_ins);
			}
			_iter_next_4880719920:;
			++it;
			goto _iter_begin_4880719920;
		}
		_iter_end_4880719920:;
	}
}



void _1eec2c632_Sema::_method_precheck_type_fn(jule::Ptr<_2185d51ad_Fn>& _215141_f) {
	if (_215141_f->_field_cpp_linked) {
		return;
	}
	if (_215141_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_215141_f->_field_instances.len() == 0LL) {
		jule::Ptr<_2185d51ad_FnIns> _216221_ins = _215141_f->_method_instance();
		_215141_f->_field_instances=jule::append(_215141_f->_field_instances,jule::Slice<jule::Ptr<_2185d51ad_FnIns>>({_216221_ins}));
		this->self->_method_reload_fn_ins_types(_216221_ins);
		_216221_ins->_field_reloaded=true;
	}
}



jule::Bool _1eec2c632_Sema::_method_precheck_fn_types(void) {
	jule::Bool _217039_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4880732448:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_decl = *it;
			{
				this->self->_method_precheck_type_fn(_1eec2c632_decl);
			}
			_iter_next_4880732448:;
			++it;
			goto _iter_begin_4880732448;
		}
		_iter_end_4880732448:;
	}
	_217039_ok = true;
	return _217039_ok;
}



jule::Bool _1eec2c632_Sema::_method_check_fn_types(void) {
	jule::Bool _217836_ok = jule::Bool();
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4880736848:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_decl = *it;
			{
				this->self->_method_check_type_fn(_1eec2c632_decl);
			}
			_iter_next_4880736848:;
			++it;
			goto _iter_begin_4880736848;
		}
		_iter_end_4880736848:;
	}
	_217836_ok = true;
	return _217836_ok;
}



void _1eec2c632_Sema::_method_check_package_types(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880740128:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4880740128:;
			++it;
			goto _iter_begin_4880740128;
		}
		_iter_end_4880740128:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880740928:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4880740928:;
			++it;
			goto _iter_begin_4880740928;
		}
		_iter_end_4880740928:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880741264:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4880741264:;
			++it;
			goto _iter_begin_4880741264;
		}
		_iter_end_4880741264:;
	}
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880745872:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_f = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4880745872:;
			++it;
			goto _iter_begin_4880745872;
		}
		_iter_end_4880745872:;
	}
}



void _1eec2c632_Sema::_method_set_file_sema_fields(void) {
	{
		auto expr = this->self->_field_file->_field_funcs;
		auto it = expr.begin();
		_iter_begin_4880751728:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1eec2c632_f = *it;
			{
				_1eec2c632_f->_field_sema=this->self;
			}
			_iter_next_4880751728:;
			++it;
			goto _iter_begin_4880751728;
		}
		_iter_end_4880751728:;
	}
	{
		auto expr = this->self->_field_file->_field_structs;
		auto it = expr.begin();
		_iter_begin_4880752400:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1eec2c632_st = *it;
			{
				_1eec2c632_st->_field_sema=this->self;
			}
			_iter_next_4880752400:;
			++it;
			goto _iter_begin_4880752400;
		}
		_iter_end_4880752400:;
	}
}



void _1eec2c632_Sema::_method_set_sema_fields(void) {
	{
		auto expr = this->self->_field_files;
		auto it = expr.begin();
		_iter_begin_4880756096:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_file = *it;
			{
				this->self->_method_set_current_file(_1eec2c632_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4880756096:;
			++it;
			goto _iter_begin_4880756096;
		}
		_iter_end_4880756096:;
	}
}



void _1eec2c632_Sema::_method_check(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _222630_files) {
	this->self->_field_files=_222630_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1eec2c632_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _200c58948_IterRelation &_Src) {
	_Stream << "IterRelation{";
	_Stream << "range:" << _Src._field_range;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_200c58948_Var> _200c5bcc0_RangeChecker::_method_build_var(jule::Ptr<_233464770_VarDecl>& _102529_decl) {
	jule::Ptr<_200c58948_Var> _102617_v = _21862cb1d_build_var(_102529_decl);
	return _102617_v;
}



void _200c5bcc0_RangeChecker::_method_set_size_key(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _2336ea198_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3))))));
	{
		auto _match_expr{ (*this)._field_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4881274448; }
		_case_begin_4881274448:;
		{
			(*this)._field_kind->_field_key_a->_field_iter_relation=jule::new_struct<_200c58948_IterRelation>(new( std::nothrow ) _200c58948_IterRelation((*this)._field_d->_field_model.operator jule::Ptr<_200c58948_Var>()));
		}
		goto _match_end_4881279360;
		_case_end_4881274448:;
		_match_end_4881279360:;
	}
}



void _200c5bcc0_RangeChecker::_method_check_range_expr_validity(jule::Ptr<_218751758_Data>& _105649_d,jule::Ptr<_200c58948_Var>& _105660_key,jule::Ptr<_200d010d9_TypeKind>& _105676_k) {
	jule::Bool _105717__mut = _105660_key->_field_mutable;
	if (_105717__mut && (!(_105676_k->_method_mutable()))) {
		_105717__mut=false;
	}
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr(_105717__mut,_105660_key->_field_reference,_105660_key->_field_kind->_field_kind,_105649_d,(*this)._field_rang->_field_in_token);
}



void _200c5bcc0_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _2336ea198_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_200d010d9_Slc> _107517_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_107517_slc->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_107517_slc->_field_elem);
}



void _200c5bcc0_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _2336ea198_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_200d010d9_Arr> _108817_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_108817_arr->_field_elem));
	(*this)._method_check_range_expr_validity((*this)._field_d,(*this)._field_kind->_field_key_b,_108817_arr->_field_elem);
}



void _200c5bcc0_RangeChecker::_method_check_map_key_a(void) {
	if (((*this)._field_rang->_field_key_a == nullptr) || _2336ea198_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ptr<_200d010d9_Map> _110017_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_110017_m->_field_key));
	jule::Ptr<_218751758_Data> _110417_d = jule::new_ptr<_218751758_Data>((*((*this)._field_d)));
	_110417_d->_field_kind=_110017_m->_field_key;
	(*this)._method_check_range_expr_validity(_110417_d,(*this)._field_kind->_field_key_a,_110017_m->_field_key);
}



void _200c5bcc0_RangeChecker::_method_check_map_key_b(void) {
	if (((*this)._field_rang->_field_key_b == nullptr) || _2336ea198_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ptr<_200d010d9_Map> _111517_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_111517_m->_field_val));
	jule::Ptr<_218751758_Data> _111917_d = jule::new_ptr<_218751758_Data>((*((*this)._field_d)));
	_111917_d->_field_kind=_111517_m->_field_val;
	(*this)._method_check_range_expr_validity(_111917_d,(*this)._field_kind->_field_key_b,_111517_m->_field_val);
}



void _200c5bcc0_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



void _200c5bcc0_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((*this)._field_rang->_field_key_b == nullptr) || _2336ea198_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u8", 2))))));
}



jule::Bool _200c5bcc0_RangeChecker::_method_check(void) {
	{
		if (!(((*this)._field_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4881340160; }
		_case_begin_4881340160:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4881338352;
		_case_end_4881340160:;
		if (!(((*this)._field_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4881340256; }
		_case_begin_4881340256:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4881338352;
		_case_end_4881340256:;
		if (!(((*this)._field_d->_field_kind->_method_map() != nullptr))) { goto _case_end_4881340352; }
		_case_begin_4881340352:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4881338352;
		_case_end_4881340352:;
		_match_end_4881338352:;
	}
	jule::Ptr<_200d010d9_Prim> _115913_prim = (*this)._field_d->_field_kind->_method_prim();
	if ((_115913_prim != nullptr) && _115913_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("range iterations must be have enumerable expression", 51),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_218848bd5_ImportInfo> _218737b7e_SymbolTable::_method_find_package(jule::Str _2535_ident) {
	{
		auto expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4881413936:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _218737b7e_pkg = *it;
			{
				if (_218737b7e_pkg->_field_ident == _2535_ident) {
					return _218737b7e_pkg;
				}
			}
			_iter_next_4881413936:;
			++it;
			goto _iter_begin_4881413936;
		}
		_iter_end_4881413936:;
	}
	return nullptr;
}



jule::Ptr<_218848bd5_ImportInfo> _218737b7e_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)> _3737_selector) {
	if (_3737_selector == nullptr) {
		return nullptr;
	}
	{
		auto expr = (*this)._field_imports;
		auto it = expr.begin();
		_iter_begin_4881414720:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _218737b7e_pkg = *it;
			{
				if (_3737_selector(_218737b7e_pkg)) {
					return _218737b7e_pkg;
				}
			}
			_iter_next_4881414720:;
			++it;
			goto _iter_begin_4881414720;
		}
		_iter_end_4881414720:;
	}
	return nullptr;
}



jule::Ptr<_200c58948_Var> _218737b7e_SymbolTable::_method_find_var(jule::Str _5231_ident,jule::Bool _5243_cpp_linked) {
	return (*this)._method___find_var(_5231_ident,_5243_cpp_linked,false);
}



jule::Ptr<_200d010d9_TypeAlias> _218737b7e_SymbolTable::_method_find_type_alias(jule::Str _5838_ident,jule::Bool _5850_cpp_linked) {
	return (*this)._method___find_type_alias(_5838_ident,_5850_cpp_linked,false);
}



jule::Ptr<_23461aa35_Struct> _218737b7e_SymbolTable::_method_find_struct(jule::Str _6434_ident,jule::Bool _6446_cpp_linked) {
	{
		auto expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4881426784:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _218737b7e_s = *it;
			{
				if ((_218737b7e_s->_field_ident == _6434_ident) && (_218737b7e_s->_field_cpp_linked == _6446_cpp_linked)) {
					return _218737b7e_s;
				}
			}
			_iter_next_4881426784:;
			++it;
			goto _iter_begin_4881426784;
		}
		_iter_end_4881426784:;
	}
	return nullptr;
}



jule::Ptr<_2185d51ad_Fn> _218737b7e_SymbolTable::_method_find_fn(jule::Str _7530_ident,jule::Bool _7542_cpp_linked) {
	{
		auto expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4881431088:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _218737b7e_f = *it;
			{
				if ((_218737b7e_f->_field_ident == _7530_ident) && (_218737b7e_f->_field_cpp_linked == _7542_cpp_linked)) {
					return _218737b7e_f;
				}
			}
			_iter_next_4881431088:;
			++it;
			goto _iter_begin_4881431088;
		}
		_iter_end_4881431088:;
	}
	return nullptr;
}



jule::Ptr<_2185da36c_Trait> _218737b7e_SymbolTable::_method_find_trait(jule::Str _8633_ident) {
	{
		auto expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4881434816:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _218737b7e_t = *it;
			{
				if (_218737b7e_t->_field_ident == _8633_ident) {
					return _218737b7e_t;
				}
			}
			_iter_next_4881434816:;
			++it;
			goto _iter_begin_4881434816;
		}
		_iter_end_4881434816:;
	}
	return nullptr;
}



jule::Ptr<_2186be3da_Enum> _218737b7e_SymbolTable::_method_find_enum(jule::Str _9732_ident) {
	{
		auto expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4881435760:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_Enum> _218737b7e_e = *it;
			{
				if (_218737b7e_e->_field_ident == _9732_ident) {
					return _218737b7e_e;
				}
			}
			_iter_next_4881435760:;
			++it;
			goto _iter_begin_4881435760;
		}
		_iter_end_4881435760:;
	}
	return nullptr;
}



jule::Ptr<_200c58948_Var> _218737b7e_SymbolTable::_method___find_var(jule::Str _10829_ident,jule::Bool _10841_cpp_linked,jule::Bool _10859_reverse) {
	if (_10859_reverse) {
		jule::I64 _11021_i = (*this)._field_vars.len() - 1LL;
		for (; _11021_i >= 0LL; (_11021_i)--) {
			{
				jule::Ptr<_200c58948_Var> _11225_v = (*this)._field_vars[_11021_i];
				if ((_11225_v->_field_ident == _10829_ident) && (_11225_v->_field_cpp_linked == _10841_cpp_linked)) {
					return _11225_v;
				}
			}
		_iter_next_4881443392:;
		}
		_iter_end_4881443392:;
	} else {
		{
			auto expr = (*this)._field_vars;
			auto it = expr.begin();
			_iter_begin_4881447296:;
			if (it != expr.end()) {
				jule::Ptr<_200c58948_Var> _218737b7e_v = *it;
				{
					if ((_218737b7e_v->_field_ident == _10829_ident) && (_218737b7e_v->_field_cpp_linked == _10841_cpp_linked)) {
						return _218737b7e_v;
					}
				}
				_iter_next_4881447296:;
				++it;
				goto _iter_begin_4881447296;
			}
			_iter_end_4881447296:;
		}
	}
	return nullptr;
}



jule::Ptr<_200d010d9_TypeAlias> _218737b7e_SymbolTable::_method___find_type_alias(jule::Str _12736_ident,jule::Bool _12748_cpp_linked,jule::Bool _12766_reverse) {
	if (_12766_reverse) {
		jule::I64 _12921_i = (*this)._field_type_aliases.len() - 1LL;
		for (; _12921_i >= 0LL; (_12921_i)--) {
			{
				jule::Ptr<_200d010d9_TypeAlias> _13125_ta = (*this)._field_type_aliases[_12921_i];
				if ((_13125_ta->_field_ident == _12736_ident) && (_13125_ta->_field_cpp_linked == _12748_cpp_linked)) {
					return _13125_ta;
				}
			}
		_iter_next_4881453376:;
		}
		_iter_end_4881453376:;
	} else {
		{
			auto expr = (*this)._field_type_aliases;
			auto it = expr.begin();
			_iter_begin_4881457280:;
			if (it != expr.end()) {
				jule::Ptr<_200d010d9_TypeAlias> _218737b7e_ta = *it;
				{
					if ((_218737b7e_ta->_field_ident == _12736_ident) && (_218737b7e_ta->_field_cpp_linked == _12748_cpp_linked)) {
						return _218737b7e_ta;
					}
				}
				_iter_next_4881457280:;
				++it;
				goto _iter_begin_4881457280;
			}
			_iter_end_4881457280:;
		}
	}
	return nullptr;
}



jule::Any _218737b7e_SymbolTable::_method_def_by_ident(jule::Str _14831_ident,jule::Bool _14843_cpp_linked) {
	{
		auto expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4881461936:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _218737b7e_v = *it;
			{
				if ((_218737b7e_v->_field_ident == _14831_ident) && (_218737b7e_v->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_218737b7e_v);
				}
			}
			_iter_next_4881461936:;
			++it;
			goto _iter_begin_4881461936;
		}
		_iter_end_4881461936:;
	}
	{
		auto expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4881462400:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeAlias> _218737b7e_ta = *it;
			{
				if ((_218737b7e_ta->_field_ident == _14831_ident) && (_218737b7e_ta->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_218737b7e_ta);
				}
			}
			_iter_next_4881462400:;
			++it;
			goto _iter_begin_4881462400;
		}
		_iter_end_4881462400:;
	}
	{
		auto expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4881467664:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _218737b7e_s = *it;
			{
				if ((_218737b7e_s->_field_ident == _14831_ident) && (_218737b7e_s->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_218737b7e_s);
				}
			}
			_iter_next_4881467664:;
			++it;
			goto _iter_begin_4881467664;
		}
		_iter_end_4881467664:;
	}
	{
		auto expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4881462720:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _218737b7e_f = *it;
			{
				if ((_218737b7e_f->_field_ident == _14831_ident) && (_218737b7e_f->_field_cpp_linked == _14843_cpp_linked)) {
					return jule::Any(_218737b7e_f);
				}
			}
			_iter_next_4881462720:;
			++it;
			goto _iter_begin_4881462720;
		}
		_iter_end_4881462720:;
	}
	if (_14843_cpp_linked) {
		return jule::Any(nullptr);
	}
	{
		auto expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4881472720:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _218737b7e_t = *it;
			{
				if (_218737b7e_t->_field_ident == _14831_ident) {
					return jule::Any(_218737b7e_t);
				}
			}
			_iter_next_4881472720:;
			++it;
			goto _iter_begin_4881472720;
		}
		_iter_end_4881472720:;
	}
	{
		auto expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4881473120:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_Enum> _218737b7e_e = *it;
			{
				if (_218737b7e_e->_field_ident == _14831_ident) {
					return jule::Any(_218737b7e_e);
				}
			}
			_iter_next_4881473120:;
			++it;
			goto _iter_begin_4881473120;
		}
		_iter_end_4881473120:;
	}
	return jule::Any(nullptr);
}



jule::Bool _218737b7e_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _19534_itself,jule::Str _19551_ident,jule::Bool _19563_cpp_linked) {
	{
		auto expr = (*this)._field_vars;
		auto it = expr.begin();
		_iter_begin_4881479744:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _218737b7e_v = *it;
			{
				if (((static_cast<jule::Uintptr>(_218737b7e_v) != _19534_itself) && (_218737b7e_v->_field_ident == _19551_ident)) && (_218737b7e_v->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4881479744:;
			++it;
			goto _iter_begin_4881479744;
		}
		_iter_end_4881479744:;
	}
	{
		auto expr = (*this)._field_type_aliases;
		auto it = expr.begin();
		_iter_begin_4881480192:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeAlias> _218737b7e_ta = *it;
			{
				if (((static_cast<jule::Uintptr>(_218737b7e_ta) != _19534_itself) && (_218737b7e_ta->_field_ident == _19551_ident)) && (_218737b7e_ta->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4881480192:;
			++it;
			goto _iter_begin_4881480192;
		}
		_iter_end_4881480192:;
	}
	{
		auto expr = (*this)._field_structs;
		auto it = expr.begin();
		_iter_begin_4881482624:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _218737b7e_s = *it;
			{
				if (((static_cast<jule::Uintptr>(_218737b7e_s) != _19534_itself) && (_218737b7e_s->_field_ident == _19551_ident)) && (_218737b7e_s->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4881482624:;
			++it;
			goto _iter_begin_4881482624;
		}
		_iter_end_4881482624:;
	}
	{
		auto expr = (*this)._field_funcs;
		auto it = expr.begin();
		_iter_begin_4881488704:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _218737b7e_f = *it;
			{
				if (((static_cast<jule::Uintptr>(_218737b7e_f) != _19534_itself) && (_218737b7e_f->_field_ident == _19551_ident)) && (_218737b7e_f->_field_cpp_linked == _19563_cpp_linked)) {
					return true;
				}
			}
			_iter_next_4881488704:;
			++it;
			goto _iter_begin_4881488704;
		}
		_iter_end_4881488704:;
	}
	if (_19563_cpp_linked) {
		return false;
	}
	{
		auto expr = (*this)._field_traits;
		auto it = expr.begin();
		_iter_begin_4881489936:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _218737b7e_t = *it;
			{
				if ((static_cast<jule::Uintptr>(_218737b7e_t) != _19534_itself) && (_218737b7e_t->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4881489936:;
			++it;
			goto _iter_begin_4881489936;
		}
		_iter_end_4881489936:;
	}
	{
		auto expr = (*this)._field_enums;
		auto it = expr.begin();
		_iter_begin_4881490880:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_Enum> _218737b7e_e = *it;
			{
				if ((static_cast<jule::Uintptr>(_218737b7e_e) != _19534_itself) && (_218737b7e_e->_field_ident == _19551_ident)) {
					return true;
				}
			}
			_iter_next_4881490880:;
			++it;
			goto _iter_begin_4881490880;
		}
		_iter_end_4881490880:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _218737b7e_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



jule::Bool _218751758_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



jule::Bool _218751758_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_void();
}



jule::Bool _218751758_Data::_method_is_const(void) {
	return (*this)._field_constant != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _218751758_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _218751758_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



void _218751758_Eval::_method_push_err(_2336ea198_Token _26927_token,jule::Str _26941_fmt,jule::Slice<jule::Any> _26954_args) {
	(*this)._field_s->_method_push_err(_26927_token,_26941_fmt,_26954_args);
}



void _218751758_Eval::_method_push_suggestion(jule::Str _27434_fmt,jule::Slice<jule::Any> _27447_args) {
	(*this)._field_s->_method_push_suggestion(_27434_fmt,_27447_args);
}



jule::Bool _218751758_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



jule::Bool _218751758_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1eec2c632_Sema>>())) { goto _case_end_4881510944; }
		_case_begin_4881510944:;
		{
			return true;
		}
		goto _match_end_4881510544;
		_case_end_4881510944:;
		_case_begin_4881510016:;
		{
			return false;
		}
		goto _match_end_4881510544;
		_case_end_4881510016:;
		_match_end_4881510544:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_nil(void) {
	jule::Ptr<_1d68bd462_Const> _29317_constant = _1d68bd462_Const::_static_method_new_nil();
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),nullptr)),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_29317_constant),false,_29317_constant));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_str(jule::Ptr<_233464770_LitExpr>& _30423_l) {
	jule::Str _30517_s = _30423_l->_field_value.slice(1LL,_30423_l->_field_value.len() - 1LL);
	if (_2336ea198_is_raw_str(_30423_l->_field_value)) {
		_30517_s=_1d6a262e0_to_raw_str(static_cast<jule::Slice<jule::U8>>(_30517_s));
	} else {
		_30517_s=_1d6a262e0_to_str(static_cast<jule::Slice<jule::U8>>(_30517_s));
	}
	jule::Ptr<_1d68bd462_Const> _31117_constant = _1d68bd462_Const::_static_method_new_str(_30517_s);
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_31117_constant),false,_31117_constant));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_bool(jule::Ptr<_233464770_LitExpr>& _32524_l) {
	jule::Ptr<_1d68bd462_Const> _32617_constant = _1d68bd462_Const::_static_method_new_bool(_32524_l->_field_value == jule::Str("true", 4));
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_32617_constant),false,_32617_constant));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_rune(jule::Ptr<_233464770_LitExpr>& _33924_l) {
	
	
	jule::Str _34313_lt = _33924_l->_field_value.slice(1LL,_33924_l->_field_value.len() - 1LL);
	jule::I32 _34413_r = _1d6a262e0_to_rune(static_cast<jule::Slice<jule::U8>>(_34313_lt));
	jule::Ptr<_218751758_Data> _34517_data = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_1d68bd462_Const::_static_method_new_i64(static_cast<jule::I64>(_34413_r))));
	jule::Bool _35213_is_ascii = _1d6a262e0_is_ascii(_34413_r);
	if (_35213_is_ascii) {
		_34517_data->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u8", 2))));
	} else {
		_34517_data->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i32", 3))));
	}
	_34517_data->_field_model=jule::Any(jule::new_struct<_2188586ea_RuneExprModel>(new( std::nothrow ) _2188586ea_RuneExprModel(_34413_r)));
	_34517_data->_field_is_rune=true;
	return _34517_data;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_float(jule::Ptr<_233464770_LitExpr>& _36825_l) {
	
	jule::F64 _37114_f;
	std::tie(_37114_f,std::ignore) = _232d42e62_parse_float(_36825_l->_field_value,64LL);
	jule::Ptr<_1d68bd462_Const> _37217_constant = _1d68bd462_Const::_static_method_new_f64(_37114_f);
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_37217_constant),false,_37217_constant));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_int(jule::Ptr<_233464770_LitExpr>& _38627_l) {
	
	jule::Str _38917_lit = _38627_l->_field_value;
	jule::Int _39017_base = 0LL;
	{
		if (!((_38917_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4881555984; }
		_case_begin_4881555984:;
		{
			_38917_lit=_38917_lit.slice(2LL);
			_39017_base=16LL;
		}
		goto _match_end_4881554480;
		_case_end_4881555984:;
		if (!((_38917_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4881555712; }
		_case_begin_4881555712:;
		{
			_38917_lit=_38917_lit.slice(2LL);
			_39017_base=2LL;
		}
		goto _match_end_4881554480;
		_case_end_4881555712:;
		if (!((_38917_lit.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4881555808; }
		_case_begin_4881555808:;
		{
			_38917_lit=_38917_lit.slice(2LL);
			_39017_base=8LL;
		}
		goto _match_end_4881554480;
		_case_end_4881555808:;
		if (!(((_38917_lit[0LL] == '0') && (_38917_lit.len() > 1LL)))) { goto _case_end_4881554880; }
		_case_begin_4881554880:;
		{
			_38917_lit=_38917_lit.slice(1LL);
			_39017_base=8LL;
		}
		goto _match_end_4881554480;
		_case_end_4881554880:;
		_case_begin_4881554592:;
		{
			_39017_base=10LL;
		}
		goto _match_end_4881554480;
		_case_end_4881554592:;
		_match_end_4881554480:;
	}
	jule::Ptr<_218751758_Data> _41317_d = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1d68bd462_Const>()));
	jule::Any _41917_value = jule::Any(nullptr);
	jule::I64 _42014_sig;
	jule::Int _42019_err;
	std::tie(_42014_sig,_42019_err) = _231e6dda2_parse_int(_38917_lit,_39017_base,64LL);
	if (_42019_err == 0LLU) {
		_41917_value=jule::Any(_42014_sig);
		_41317_d->_field_constant=_1d68bd462_Const::_static_method_new_i64(_42014_sig);
	} else {
		jule::U64 _42518_unsig;
		jule::Int _42525_err;
		std::tie(_42518_unsig,_42525_err) = _231e6dda2_parse_uint(_38917_lit,_39017_base,64LL);
		if (_42525_err != 0LLU) {
			(*this)._method_push_err(_38627_l->_field_token,jule::Str("arithmetic value overflow", 25),jule::Slice<jule::Any>({}));
			(*this)._method_push_suggestion(jule::Str("floating-point literals may solve your problem", 46),jule::Slice<jule::Any>({}));
		}
		_41317_d->_field_constant=_1d68bd462_Const::_static_method_new_u64(_42518_unsig);
		_41917_value=jule::Any(_42518_unsig);
	}
	_41317_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(_218751758_kind_by_bitsize(_41917_value))));
	_218751758_normalize_bitsize(_41317_d);
	_41317_d->_field_model=jule::Any(_41317_d->_field_constant);
	return _41317_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_lit_num(jule::Ptr<_233464770_LitExpr>& _44427_l) {
	{
		if (!((_2336ea198_is_float(_44427_l->_field_value)))) { goto _case_end_4881581344; }
		_case_begin_4881581344:;
		{
			return (*this)._method_lit_float(_44427_l);
		}
		goto _match_end_4881579824;
		_case_end_4881581344:;
		_case_begin_4881580000:;
		{
			return (*this)._method_lit_int(_44427_l);
		}
		goto _match_end_4881579824;
		_case_end_4881580000:;
		_match_end_4881579824:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_lit(jule::Ptr<_233464770_LitExpr> _45127_lit) {
	{
		if (!((_45127_lit->_method_is_nil()))) { goto _case_end_4881586144; }
		_case_begin_4881586144:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4881584992;
		_case_end_4881586144:;
		if (!((_2336ea198_is_str(_45127_lit->_field_value)))) { goto _case_end_4881586240; }
		_case_begin_4881586240:;
		{
			return (*this)._method_lit_str(_45127_lit);
		}
		goto _match_end_4881584992;
		_case_end_4881586240:;
		if (!((_2336ea198_is_bool(_45127_lit->_field_value)))) { goto _case_end_4881586336; }
		_case_begin_4881586336:;
		{
			return (*this)._method_lit_bool(_45127_lit);
		}
		goto _match_end_4881584992;
		_case_end_4881586336:;
		if (!((_2336ea198_is_rune(_45127_lit->_field_value)))) { goto _case_end_4881586704; }
		_case_begin_4881586704:;
		{
			return (*this)._method_lit_rune(_45127_lit);
		}
		goto _match_end_4881584992;
		_case_end_4881586704:;
		if (!((_2336ea198_is_num(_45127_lit->_field_value)))) { goto _case_end_4881586800; }
		_case_begin_4881586800:;
		{
			return (*this)._method_lit_num(_45127_lit);
		}
		goto _match_end_4881584992;
		_case_end_4881586800:;
		_case_begin_4881585168:;
		{
			return nullptr;
		}
		goto _match_end_4881584992;
		_case_end_4881585168:;
		_match_end_4881584992:;
	}
}



jule::Any _218751758_Eval::_method_find_builtins(jule::Str _46232_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_218848bd5_ImportInfo>>())) { goto _case_end_4881594432; }
		_case_begin_4881594432:;
		{
			jule::Any _46521_def = _218751758_find_builtins_import(_46232_ident,(*this)._field_lookup.operator jule::Ptr<_218848bd5_ImportInfo>());
			if (_46521_def != nullptr) {
				return _46521_def;
			}
		}
		goto _match_end_4881594960;
		_case_end_4881594432:;
		if (!(_match_expr.type_is<jule::Ptr<_1eec2c632_Sema>>())) { goto _case_end_4881595104; }
		_case_begin_4881595104:;
		{
			jule::Any _47121_def = _218751758_find_builtins_sema(_46232_ident,(*this)._field_lookup.operator jule::Ptr<_1eec2c632_Sema>());
			if (_47121_def != nullptr) {
				return _47121_def;
			}
		}
		goto _match_end_4881594960;
		_case_end_4881595104:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4881595200; }
		_case_begin_4881595200:;
		{
			jule::Any _47721_def = _218751758_find_builtins_sema(_46232_ident,(*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>()->_field_s);
			if (_47721_def != nullptr) {
				return _47721_def;
			}
		}
		goto _match_end_4881594960;
		_case_end_4881595200:;
		_match_end_4881594960:;
	}
	return _1d67e4c4b_find_builtin_def(_46232_ident);
}



jule::Any _218751758_Eval::_method_get_def(jule::Str _48626_ident,jule::Bool _48638_cpp_linked) {
	if ((!(_48638_cpp_linked))) {
		jule::Ptr<_2186be3da_Enum> _48821_enm = (*this)._field_lookup.get()._method_find_enum(_48626_ident);
		if (_48821_enm != nullptr) {
			return jule::Any(_48821_enm);
		}
	}
	jule::Ptr<_200c58948_Var> _49417_v = (*this)._field_lookup.get()._method_find_var(_48626_ident,_48638_cpp_linked);
	if (_49417_v != nullptr) {
		return jule::Any(_49417_v);
	}
	jule::Ptr<_2185d51ad_Fn> _49917_f = (*this)._field_lookup.get()._method_find_fn(_48626_ident,_48638_cpp_linked);
	if (_49917_f != nullptr) {
		return jule::Any(_49917_f);
	}
	jule::Ptr<_23461aa35_Struct> _50417_s = (*this)._field_lookup.get()._method_find_struct(_48626_ident,_48638_cpp_linked);
	if (_50417_s != nullptr) {
		return jule::Any(_50417_s);
	}
	jule::Ptr<_200d010d9_TypeAlias> _50917_ta = (*this)._field_lookup.get()._method_find_type_alias(_48626_ident,_48638_cpp_linked);
	if (_50917_ta != nullptr) {
		return jule::Any(_50917_ta);
	}
	return (*this)._method_find_builtins(_48626_ident);
}



void _218751758_Eval::_method_push_reference(jule::Ptr<_21862cb1d_ReferenceStack>& _51738_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4881629840; }
		_case_begin_4881629840:;
		{
			jule::Ptr<_2186ce186_ScopeChecker> _52021_sc = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>()->_method_get_root();
			if ((!(_51738_references->_method_exist_1(_52021_sc->_field_owner)))) {
				_51738_references->_method_push(jule::Any(_52021_sc->_field_owner));
			}
		}
		goto _match_end_4881626832;
		_case_end_4881629840:;
		_case_begin_4881626304:;
		{
			if (((*this)._field_owner != nullptr) && (!(_51738_references->_method_exist_0((*this)._field_owner)))) {
				_51738_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4881626832;
		_case_end_4881626304:;
		_match_end_4881626832:;
	}
}



void _218751758_Eval::_method_push_reference_to_fn(jule::Ptr<_2185d51ad_FnIns>& _53244_f) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4881648688; }
		_case_begin_4881648688:;
		{
			jule::Ptr<_2186ce186_ScopeChecker> _53521_sc = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>()->_method_get_root();
			if (_53521_sc->_field_owner->_field_decl->_method_is_init() && (!(_53521_sc->_field_owner->_field_references->_method_exist_1(_53244_f)))) {
				_53521_sc->_field_owner->_field_refers->_method_push(jule::Any(_53244_f));
			}
		}
		goto _match_end_4881642512;
		_case_end_4881648688:;
		_match_end_4881642512:;
	}
	(*this)._method_push_reference(_53244_f->_field_references);
}



void _218751758_Eval::_method_push_reference_to_var(jule::Ptr<_200c58948_Var>& _54345_v) {
	if (_54345_v->_field_references == nullptr) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4881658928; }
		_case_begin_4881658928:;
		{
			jule::Ptr<_2186ce186_ScopeChecker> _55021_sc = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>()->_method_get_root();
			if (_55021_sc->_field_owner->_field_decl->_method_is_init() && (!(_55021_sc->_field_owner->_field_references->_method_exist_0(_54345_v)))) {
				_55021_sc->_field_owner->_field_refers->_method_push(jule::Any(_54345_v));
			}
		}
		goto _match_end_4881659536;
		_case_end_4881658928:;
		_match_end_4881659536:;
	}
	(*this)._method_push_reference(_54345_v->_field_references);
}



void _218751758_Eval::_method_push_reference_to_struct(jule::Ptr<_23461aa35_StructIns>& _55948_s) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4881669040; }
		_case_begin_4881669040:;
		{
			jule::Ptr<_2186ce186_ScopeChecker> _56221_sc = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>()->_method_get_root();
			if (_56221_sc->_field_owner->_field_decl->_method_is_init() && (!(_56221_sc->_field_owner->_field_references->_method_exist_2(_55948_s)))) {
				_56221_sc->_field_owner->_field_refers->_method_push(jule::Any(_55948_s));
			}
		}
		goto _match_end_4881669568;
		_case_end_4881669040:;
		_match_end_4881669568:;
	}
	(*this)._method_push_reference(_55948_s->_field_references);
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method___eval_enum(jule::Ptr<_2186be3da_Enum> _57030_enm) {
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_57030_enm)),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,nullptr));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_enum(jule::Ptr<_2186be3da_Enum> _58232_enm,_2336ea198_Token _58244_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_58232_enm->_field_public,_58232_enm->_field_token)))) {
		(*this)._method_push_err(_58244_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_58232_enm->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return (*this)._method___eval_enum(_58232_enm);
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method___eval_struct(jule::Ptr<_23461aa35_StructIns> _59232_s) {
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_59232_s)),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_59232_s),true,nullptr));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_struct(jule::Ptr<_23461aa35_StructIns> _60534_s,_2336ea198_Token _60549_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60534_s->_field_decl->_field_public,_60534_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_60549_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_60534_s->_field_decl->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return (*this)._method___eval_struct(_60534_s);
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_fn_ins(jule::Ptr<_2185d51ad_FnIns> _61530_f) {
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_61530_f)),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(_61530_f),false,nullptr));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_fn(jule::Ptr<_2185d51ad_Fn> _62830_f,_2336ea198_Token _62838_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_62830_f->_field_public,_62830_f->_field_token)))) {
		(*this)._method_push_err(_62838_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_62830_f->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_2185d51ad_FnIns> _63517_ins = _62830_f->_method_instance();
	(*this)._method_push_reference_to_fn(_63517_ins);
	return (*this)._method_eval_fn_ins(_63517_ins);
}



void _218751758_Eval::_method_push_illegal_cycle_error(jule::Ptr<_200c58948_Var>& _64044_v1,jule::Ptr<_200c58948_Var>& _64055_v2,jule::Str& _64070_message) {
	
	jule::Str _64313_refers_to = _231e4202e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_64044_v1->_field_ident),jule::Any(_64055_v2->_field_ident)}));
	_64070_message=((_21862cb1d_str_repeat(jule::Str(" ", 1),4LL) + _64313_refers_to) + jule::Str("\n", 1)) + _64070_message;
}



jule::Bool _218751758_Eval::_method_check_cross_cycle(jule::Ptr<_200c58948_Var>& _64737_v,jule::Str& _64751_message) {
	{
		auto expr = _64737_v->_field_depends;
		auto it = expr.begin();
		_iter_begin_4881728064:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _218751758_d = *it;
			{
				if (_218751758_d == (*this)._field_owner) {
					(*this)._method_push_illegal_cycle_error(_64737_v,_218751758_d,_64751_message);
					return false;
				}
				if ((!((*this)._method_check_cross_cycle(_218751758_d,_64751_message)))) {
					(*this)._method_push_illegal_cycle_error(_64737_v,_218751758_d,_64751_message);
					return false;
				}
			}
			_iter_next_4881728064:;
			++it;
			goto _iter_begin_4881728064;
		}
		_iter_end_4881728064:;
	}
	return true;
}



jule::Bool _218751758_Eval::_method_check_illegal_cycles(jule::Ptr<_200c58948_Var>& _66644_v,_2336ea198_Token _66653_decl_token) {
	jule::Bool _66674_ok = jule::Bool();
	if ((*this)._field_owner == nullptr) {
		_66674_ok = true;
		return _66674_ok;
	}
	if ((*this)._field_owner == _66644_v) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_66674_ok = false;
		return _66674_ok;
	}
	jule::Str _67817_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_66644_v,_67817_message)))) {
		jule::Str _68121_err_msg = _67817_message;
		_67817_message=jule::Str();
		(*this)._method_push_illegal_cycle_error((*this)._field_owner,_66644_v,_67817_message);
		_68121_err_msg=_68121_err_msg + _67817_message;
		(*this)._method_push_err(_66653_decl_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_68121_err_msg)}));
		_66674_ok = false;
		return _66674_ok;
	}
	(*this)._field_owner->_field_depends=jule::append((*this)._field_owner->_field_depends,jule::Slice<jule::Ptr<_200c58948_Var>>({_66644_v}));
	_66674_ok = true;
	return _66674_ok;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_var(jule::Ptr<_200c58948_Var> _69331_v,_2336ea198_Token _69340_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_69331_v->_field_public,_69331_v->_field_token)))) {
		(*this)._method_push_err(_69340_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_69331_v->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_69331_v->_field_used=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_1eec2c632_Sema>>())) { goto _case_end_4881754288; }
		_case_begin_4881754288:;
		{
			jule::Bool _70517_ok = (*this)._method_check_illegal_cycles(_69331_v,_69340_error_token);
			if ((!(_70517_ok))) {
				return nullptr;
			}
		}
		goto _match_end_4881754560;
		_case_end_4881754288:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4881754864; }
		_case_begin_4881754864:;
		{
			if ((!(_69331_v->_field_reference)) || (*this)._method_is_unsafe()) {
				goto _match_end_4881754560;
			}
			jule::Ptr<_2186ce186_ScopeChecker> _71521_s = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>();
			while ((_71521_s->_field_owner == nullptr) && (_71521_s->_field_parent != nullptr)) {
				{
					_71521_s=_71521_s->_field_parent;
				}
			_iter_next_4881755824:;
			}
			_iter_end_4881755824:;
			if (((_71521_s->_field_owner != nullptr) && _71521_s->_field_owner->_field_anon) && (_69331_v->_field_scope != _71521_s->_field_owner->_field_scope)) {
				(*this)._method_push_err(_69340_error_token,jule::Str("anonymous functions cannot access to reference \"@\" definition of parent scope", 77),jule::Slice<jule::Any>({jule::Any(_69331_v->_field_ident)}));
			}
		}
		goto _match_end_4881754560;
		_case_end_4881754864:;
		_match_end_4881754560:;
	}
	(*this)._method_push_reference_to_var(_69331_v);
	if ((!(_69331_v->_field_cpp_linked)) && ((_69331_v->_field_value == nullptr) || (_69331_v->_field_value->_field_data == nullptr))) {
		if (_69331_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_69331_v,(*this)._field_s);
			if (_69331_v->_field_value->_field_data == nullptr) {
				return nullptr;
			}
		}
	}
	if ((_69331_v->_field_kind == nullptr) || (_69331_v->_field_kind->_field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _74117_d = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(_69331_v->_field_kind->_field_kind->_method_clone(),jule::Ptr<_200d010d9_TypeKind>(),_69331_v->_field_mutable,_69331_v->_field_reference,(!(_69331_v->_field_constant)),jule::Bool(),jule::Bool(),jule::Any(_69331_v),false,jule::Ptr<_1d68bd462_Const>()));
	if (((!(_69331_v->_field_cpp_linked)) && _69331_v->_method_is_initialized()) && (_69331_v->_field_value->_field_data != nullptr)) {
		_74117_d->_field_is_rune=_69331_v->_field_value->_field_data->_field_is_rune;
	}
	if (_69331_v->_field_constant && (_69331_v->_field_value->_field_data->_field_constant != nullptr)) {
		_74117_d->_field_constant=jule::new_ptr<_1d68bd462_Const>((*(_69331_v->_field_value->_field_data->_field_constant)));
		_74117_d->_field_model=jule::Any(_74117_d->_field_constant);
	}
	if (_74117_d->_field_kind->_method_fnc() != nullptr) {
		jule::Ptr<_2185d51ad_FnIns> _76021_f = _74117_d->_field_kind->_method_fnc();
		if (_76021_f->_field_decl != nullptr) {
			_76021_f->_field_decl->_field_ident=_69331_v->_field_ident;
		}
	}
	return _74117_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_type_alias(jule::Ptr<_200d010d9_TypeAlias> _77138_ta,_2336ea198_Token _77154_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_77138_ta->_field_public,_77138_ta->_field_token)))) {
		(*this)._method_push_err(_77154_error_token,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_77138_ta->_field_ident)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_77138_ta->_field_used=true;
	jule::Trait<_200d010d9_Kind> _78017_kind = _77138_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _78017_kind };
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4881799264; }
		_case_begin_4881799264:;
		{
			return (*this)._method___eval_struct(_78017_kind.operator jule::Ptr<_23461aa35_StructIns>());
		}
		goto _match_end_4881794032;
		_case_end_4881799264:;
		if (!(_match_expr.type_is<jule::Ptr<_2186be3da_Enum>>())) { goto _case_end_4881794432; }
		_case_begin_4881794432:;
		{
			return (*this)._method___eval_enum(_78017_kind.operator jule::Ptr<_2186be3da_Enum>());
		}
		goto _match_end_4881794032;
		_case_end_4881794432:;
		_case_begin_4881788608:;
		{
			jule::Ptr<_218751758_Data> _78921_d = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(_77138_ta->_field_kind->_field_kind->_method_clone(),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ptr<_1d68bd462_Const>()));
			_78921_d->_field_kind->_field_generic=_77138_ta->_field_generic;
			if (_77138_ta->_field_cpp_linked) {
				_78921_d->_field_kind->_field_cpp_ident=_77138_ta->_field_ident;
			}
			_78921_d->_field_model=jule::Any(_78921_d->_field_kind);
			return _78921_d;
		}
		goto _match_end_4881794032;
		_case_end_4881788608:;
		_match_end_4881794032:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_def(jule::Any _80631_def,_2336ea198_Token _80641_ident) {
	{
		auto _match_expr{ _80631_def };
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4881808160; }
		_case_begin_4881808160:;
		{
			return (*this)._method_eval_var(_80631_def.operator jule::Ptr<_200c58948_Var>(),_80641_ident);
		}
		goto _match_end_4881805536;
		_case_end_4881808160:;
		if (!(_match_expr.type_is<jule::Ptr<_2186be3da_Enum>>())) { goto _case_end_4881808256; }
		_case_begin_4881808256:;
		{
			return (*this)._method_eval_enum(_80631_def.operator jule::Ptr<_2186be3da_Enum>(),_80641_ident);
		}
		goto _match_end_4881805536;
		_case_end_4881808256:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4881808352; }
		_case_begin_4881808352:;
		{
			return (*this)._method_eval_struct(_80631_def.operator jule::Ptr<_23461aa35_Struct>()->_method_instance(),_80641_ident);
		}
		goto _match_end_4881805536;
		_case_end_4881808352:;
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_Fn>>())) { goto _case_end_4881808656; }
		_case_begin_4881808656:;
		{
			return (*this)._method_eval_fn(_80631_def.operator jule::Ptr<_2185d51ad_Fn>(),_80641_ident);
		}
		goto _match_end_4881805536;
		_case_end_4881808656:;
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4881808752; }
		_case_begin_4881808752:;
		{
			return (*this)._method_eval_fn_ins(_80631_def.operator jule::Ptr<_2185d51ad_FnIns>());
		}
		goto _match_end_4881805536;
		_case_end_4881808752:;
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4881808848; }
		_case_begin_4881808848:;
		{
			return (*this)._method_eval_type_alias(_80631_def.operator jule::Ptr<_200d010d9_TypeAlias>(),_80641_ident);
		}
		goto _match_end_4881805536;
		_case_end_4881808848:;
		_case_begin_4881805440:;
		{
			(*this)._method_push_err(_80641_ident,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_80641_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4881805536;
		_case_end_4881805440:;
		_match_end_4881805536:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_ident(jule::Ptr<_233464770_IdentExpr> _83229_ident) {
	jule::Any _83317_def = (*this)._method_get_def(_83229_ident->_field_ident,_83229_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_83317_def,_83229_ident->_field_token);
}



void _218751758_Eval::_method_eval_unary_minus(jule::Ptr<_218751758_Data>& _83736_d) {
	jule::Ptr<_200d010d9_Prim> _83813_t = _83736_d->_field_kind->_method_prim();
	if ((_83813_t == nullptr) || (!(_1d68ce6a4_is_num(_83813_t->_method_to_str())))) {
		_83736_d=nullptr;
		return;
	}
	if (_83736_d->_method_is_const()) {
		{
			if (!((_83736_d->_field_constant->_method_is_f64()))) { goto _case_end_4881829040; }
			_case_begin_4881829040:;
			{
				_83736_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_83736_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4881828800;
			_case_end_4881829040:;
			if (!((_83736_d->_field_constant->_method_is_i64()))) { goto _case_end_4881829152; }
			_case_begin_4881829152:;
			{
				_83736_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_83736_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4881828800;
			_case_end_4881829152:;
			if (!((_83736_d->_field_constant->_method_is_u64()))) { goto _case_end_4881829264; }
			_case_begin_4881829264:;
			{
				_83736_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_83736_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4881828800;
			_case_end_4881829264:;
			_match_end_4881828800:;
		}
		_218751758_normalize_type(_83736_d);
	}
	_83736_d->_field_lvalue=false;
	_83736_d->_field_model=jule::Any(jule::new_struct<_2188586ea_UnaryExprModel>(new( std::nothrow ) _2188586ea_UnaryExprModel(_83736_d->_field_model,jule::Str("-", 1))));
}



void _218751758_Eval::_method_eval_unary_plus(jule::Ptr<_218751758_Data>& _86035_d) {
	jule::Ptr<_200d010d9_Prim> _86113_t = _86035_d->_field_kind->_method_prim();
	if ((_86113_t == nullptr) || (!(_1d68ce6a4_is_num(_86113_t->_method_to_str())))) {
		_86035_d=nullptr;
		return;
	}
	if (_86035_d->_method_is_const()) {
		{
			if (!((_86035_d->_field_constant->_method_is_f64()))) { goto _case_end_4881844080; }
			_case_begin_4881844080:;
			{
				_86035_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86035_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4881843840;
			_case_end_4881844080:;
			if (!((_86035_d->_field_constant->_method_is_i64()))) { goto _case_end_4881844192; }
			_case_begin_4881844192:;
			{
				_86035_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86035_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4881843840;
			_case_end_4881844192:;
			if (!((_86035_d->_field_constant->_method_is_u64()))) { goto _case_end_4881844304; }
			_case_begin_4881844304:;
			{
				_86035_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_86035_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4881843840;
			_case_end_4881844304:;
			_match_end_4881843840:;
		}
		_218751758_normalize_type(_86035_d);
	}
	_86035_d->_field_lvalue=false;
	_86035_d->_field_model=jule::Any(jule::new_struct<_2188586ea_UnaryExprModel>(new( std::nothrow ) _2188586ea_UnaryExprModel(_86035_d->_field_model,jule::Str("+", 1))));
}



void _218751758_Eval::_method_eval_unary_caret(jule::Ptr<_218751758_Data>& _88336_d) {
	jule::Ptr<_200d010d9_Prim> _88413_t = _88336_d->_field_kind->_method_prim();
	if ((_88413_t == nullptr) || (!(_1d68ce6a4_is_int(_88413_t->_method_to_str())))) {
		_88336_d=nullptr;
		return;
	}
	if (_88336_d->_method_is_const()) {
		{
			if (!((_88336_d->_field_constant->_method_is_i64()))) { goto _case_end_4881858944; }
			_case_begin_4881858944:;
			{
				_88336_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_88336_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4881858720;
			_case_end_4881858944:;
			if (!((_88336_d->_field_constant->_method_is_u64()))) { goto _case_end_4881859056; }
			_case_begin_4881859056:;
			{
				_88336_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_88336_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4881858720;
			_case_end_4881859056:;
			_match_end_4881858720:;
		}
	}
	_88336_d->_field_lvalue=false;
	_88336_d->_field_model=jule::Any(jule::new_struct<_2188586ea_UnaryExprModel>(new( std::nothrow ) _2188586ea_UnaryExprModel(_88336_d->_field_model,jule::Str("^", 1))));
}



void _218751758_Eval::_method_eval_unary_excl(jule::Ptr<_218751758_Data>& _90735_d) {
	jule::Ptr<_200d010d9_Prim> _90813_t = _90735_d->_field_kind->_method_prim();
	if ((_90813_t == nullptr) || (!(_90813_t->_method_is_bool()))) {
		_90735_d=nullptr;
		return;
	}
	if (_90735_d->_method_is_const()) {
		{
			if (!((_90735_d->_field_constant->_method_is_bool()))) { goto _case_end_4881871008; }
			_case_begin_4881871008:;
			{
				_90735_d->_field_constant->_method_set_bool((!(_90735_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_4881870800;
			_case_end_4881871008:;
			_match_end_4881870800:;
		}
	}
	_90735_d->_field_lvalue=false;
	_90735_d->_field_model=jule::Any(jule::new_struct<_2188586ea_UnaryExprModel>(new( std::nothrow ) _2188586ea_UnaryExprModel(_90735_d->_field_model,jule::Str("!", 1))));
}



void _218751758_Eval::_method_eval_unary_star(jule::Ptr<_218751758_Data>& _92839_d,_2336ea198_Token& _92850_op) {
	{
		if (!((_92839_d->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4881879504; }
		_case_begin_4881879504:;
		{
			if ((!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_92850_op,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			jule::Ptr<_200d010d9_Ptr> _93521_t = _92839_d->_field_kind->_method_ptr();
			if (_93521_t->_method_is_unsafe()) {
				_92839_d=nullptr;
				return;
			}
			_92839_d->_field_kind=_93521_t->_field_elem;
		}
		goto _match_end_4881877760;
		_case_end_4881879504:;
		if (!((_92839_d->_field_kind->_method_sptr() != nullptr))) { goto _case_end_4881878976; }
		_case_begin_4881878976:;
		{
			_92839_d->_field_kind=_92839_d->_field_kind->_method_sptr()->_field_elem;
		}
		goto _match_end_4881877760;
		_case_end_4881878976:;
		_case_begin_4881877904:;
		{
			_92839_d=nullptr;
			return;
		}
		goto _match_end_4881877760;
		_case_end_4881877904:;
		_match_end_4881877760:;
	}
	_92839_d->_field_constant=nullptr;
	_92839_d->_field_lvalue=true;
	_92839_d->_field_model=jule::Any(jule::new_struct<_2188586ea_UnaryExprModel>(new( std::nothrow ) _2188586ea_UnaryExprModel(_92839_d->_field_model,jule::Str("*", 1))));
}



void _218751758_Eval::_method_eval_unary_amper(jule::Ptr<_218751758_Data>& _95836_d) {
	{
		auto _match_expr{ _95836_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructLitExprModel>>())) { goto _case_end_4881896624; }
		_case_begin_4881896624:;
		{
			jule::Ptr<_2188586ea_StructLitExprModel> _96121_lit = _95836_d->_field_model.operator jule::Ptr<_2188586ea_StructLitExprModel>();
			_218751758_make_struct_lit_alloc(_95836_d,_96121_lit);
		}
		goto _match_end_4881890688;
		_case_end_4881896624:;
		_case_begin_4881890144:;
		{
			{
				if (!((_200d010d9_can_get_ptr(_95836_d)))) { goto _case_end_4881892704; }
				_case_begin_4881892704:;
				{
					_95836_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Ptr>(new( std::nothrow ) _200d010d9_Ptr(_95836_d->_field_kind->_method_clone()))));
					_95836_d->_field_model=jule::Any(jule::new_struct<_2188586ea_UnaryExprModel>(new( std::nothrow ) _2188586ea_UnaryExprModel(_95836_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4881891744;
				_case_end_4881892704:;
				_case_begin_4881891920:;
				{
					_95836_d=nullptr;
				}
				goto _match_end_4881891744;
				_case_end_4881891920:;
				_match_end_4881891744:;
			}
		}
		goto _match_end_4881890688;
		_case_end_4881890144:;
		_match_end_4881890688:;
	}
	if (_95836_d != nullptr) {
		_95836_d->_field_constant=nullptr;
		_95836_d->_field_lvalue=false;
		_95836_d->_field_mutable=true;
	}
}



void _218751758_Eval::_method_eval_unary_type_decl(jule::Ptr<_218751758_Data>& _98744_d,jule::Ptr<_233464770_UnaryExpr>& _98759_u) {
	_200d010d9_TypeChecker _98817_tc = _200d010d9_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_200d010d9_Referencer>(),_98759_u->_field_op,jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _98759_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4881904560; }
		_case_begin_4881904560:;
		{
			_98744_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_98817_tc._method_build_ptr_from_type(_98744_d->_field_kind)));
		}
		goto _match_end_4881904288;
		_case_end_4881904560:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4881904656; }
		_case_begin_4881904656:;
		{
			_98744_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_98817_tc._method_build_sptr_from_type(_98744_d->_field_kind)));
		}
		goto _match_end_4881904288;
		_case_end_4881904656:;
		_case_begin_4881902272:;
		{
			(*this)._method_push_err(_98759_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_98759_u->_field_op._field_kind)}));
			_98744_d=nullptr;
			return;
		}
		goto _match_end_4881904288;
		_case_end_4881902272:;
		_match_end_4881904288:;
	}
	_98744_d->_field_decl=true;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_unary(jule::Ptr<_233464770_UnaryExpr> _101034_u) {
	jule::Ptr<_200d010d9_TypeKind> _101117_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_101117_prefix;
	});
	jule::Ptr<_218751758_Data> _101517_d = this->self->_method_eval_expr_kind(_101034_u->_field_expr);
	if (_101517_d == nullptr) {
		return nullptr;
	}
	if (_101517_d->_field_decl) {
		this->self->_method_eval_unary_type_decl(_101517_d,_101034_u);
		return _101517_d;
	}
	jule::Ptr<_200d010d9_TypeKind> _102517_cast_kind = _101517_d->_field_cast_kind;
	{
		auto _match_expr{ _101034_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4881923952; }
		_case_begin_4881923952:;
		{
			this->self->_method_eval_unary_minus(_101517_d);
		}
		goto _match_end_4881922416;
		_case_end_4881923952:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4881922688; }
		_case_begin_4881922688:;
		{
			this->self->_method_eval_unary_plus(_101517_d);
		}
		goto _match_end_4881922416;
		_case_end_4881922688:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4881922784; }
		_case_begin_4881922784:;
		{
			this->self->_method_eval_unary_caret(_101517_d);
		}
		goto _match_end_4881922416;
		_case_end_4881922784:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_4881922880; }
		_case_begin_4881922880:;
		{
			this->self->_method_eval_unary_excl(_101517_d);
		}
		goto _match_end_4881922416;
		_case_end_4881922880:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4881922976; }
		_case_begin_4881922976:;
		{
			this->self->_method_eval_unary_star(_101517_d,_101034_u->_field_op);
		}
		goto _match_end_4881922416;
		_case_end_4881922976:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4881923424; }
		_case_begin_4881923424:;
		{
			this->self->_method_eval_unary_amper(_101517_d);
		}
		goto _match_end_4881922416;
		_case_end_4881923424:;
		_case_begin_4881917920:;
		{
			_101517_d=nullptr;
		}
		goto _match_end_4881922416;
		_case_end_4881917920:;
		_match_end_4881922416:;
	}
	if (_101517_d == nullptr) {
		this->self->_method_push_err(_101034_u->_field_op,jule::Str("invalid expression for unary @ operator", 39),jule::Slice<jule::Any>({jule::Any(_101034_u->_field_op._field_kind)}));
	} else if (_101517_d->_method_is_const()) {
		_101517_d->_field_model=jule::Any(_101517_d->_field_constant);
	} else if (_102517_cast_kind != nullptr) {
		_101517_d->_field_cast_kind=_102517_cast_kind;
		_218751758_apply_cast_kind(_101517_d);
	}
	return _101517_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_variadic(jule::Ptr<_233464770_VariadicExpr> _104837_v) {
	jule::Ptr<_200d010d9_TypeKind> _104917_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_104917_prefix;
	});
	jule::Ptr<_218751758_Data> _105317_d = this->self->_method_eval_expr_kind(_104837_v->_field_expr);
	if (_105317_d == nullptr) {
		return nullptr;
	}
	if ((!(_105317_d->_field_kind->_method_variadicable()))) {
		this->self->_method_push_err(_104837_v->_field_token,jule::Str("@ data-type is not variadicable", 31),jule::Slice<jule::Any>({jule::Any(_105317_d->_field_kind->_method_to_str())}));
		return nullptr;
	}
	_105317_d->_field_variadiced=true;
	_105317_d->_field_kind=_105317_d->_field_kind->_method_slc()->_field_elem;
	_105317_d->_field_kind->_field_variadic=true;
	return _105317_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_unsafe(jule::Ptr<_233464770_UnsafeExpr> _106935_u) {
	jule::Bool _107013_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ptr<_218751758_Data> _107317_d = this->self->_method_eval_expr_kind(_106935_u->_field_expr);
	this->self->_field_unsafety=_107013_unsafety;
	return _107317_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_arr(jule::Ptr<_233464770_SliceExpr> _108032_s) {
	jule::Ptr<_200d010d9_Arr> _108217_pt = this->self->_field_prefix->_method_arr();
	jule::Ptr<_200d010d9_Arr> _108417_arr = jule::new_struct_ptr<_200d010d9_Arr>(new( std::nothrow ) _200d010d9_Arr(false,0LL,_108217_pt->_field_elem));
	if (_108217_pt->_field_auto) {
		_108417_arr->_field_n=static_cast<jule::I64>(_108032_s->_field_elems.len());
	} else {
		_108417_arr->_field_n=static_cast<jule::I64>(_108032_s->_field_elems.len());
		if (_108417_arr->_field_n > _108217_pt->_field_n) {
			this->self->_method_push_err(_108032_s->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else if (_108417_arr->_field_n < _108217_pt->_field_n) {
			_108417_arr->_field_n=_108217_pt->_field_n;
		}
	}
	jule::Ptr<_2188586ea_ArrayExprModel> _110117_model = jule::new_struct<_2188586ea_ArrayExprModel>(new( std::nothrow ) _2188586ea_ArrayExprModel(_108417_arr,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_108032_s->_field_elems.len()))));
	jule::Ptr<_200d010d9_TypeKind> _110617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_108417_arr->_field_elem;
	{
		auto expr = _108032_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4881968640:;
		if (it != expr.end()) {
			jule::Any _218751758_elem = *it;
			{
				jule::Ptr<_218751758_Data> _110921_d = this->self->_method_eval_expr_kind(_218751758_elem);
				if (_110921_d == nullptr) {
					goto _iter_next_4881968640;
				}
				this->self->_field_s->_method_check_assign_type(false,_108417_arr->_field_elem,_110921_d,_108032_s->_field_token);
				_110117_model->_field_elems=jule::append(_110117_model->_field_elems,jule::Slice<jule::Any>({_110921_d->_field_model}));
			}
			_iter_next_4881968640:;
			++it;
			goto _iter_begin_4881968640;
		}
		_iter_end_4881968640:;
	}
	this->self->_field_prefix=_110617_prefix;
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_108417_arr)),jule::Ptr<_200d010d9_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_110117_model),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_exp_slc(jule::Ptr<_233464770_SliceExpr> _112636_s,jule::Ptr<_200d010d9_TypeKind> _112655_elem_type) {
	jule::Ptr<_200d010d9_Slc> _112717_slc = jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_112655_elem_type));
	jule::Ptr<_2188586ea_SliceExprModel> _113117_model = jule::new_struct<_2188586ea_SliceExprModel>(new( std::nothrow ) _2188586ea_SliceExprModel(_112655_elem_type,jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_112636_s->_field_elems.len()))));
	jule::Ptr<_200d010d9_TypeKind> _113617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_112717_slc->_field_elem;
	{
		auto expr = _112636_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4881983040:;
		if (it != expr.end()) {
			jule::Any _218751758_elem = *it;
			{
				jule::Ptr<_218751758_Data> _113921_d = this->self->_method_eval_expr_kind(_218751758_elem);
				if (_113921_d == nullptr) {
					goto _iter_next_4881983040;
				}
				this->self->_field_s->_method_check_assign_type(false,_112717_slc->_field_elem,_113921_d,_112636_s->_field_token);
				_113117_model->_field_elems=jule::append(_113117_model->_field_elems,jule::Slice<jule::Any>({_113921_d->_field_model}));
			}
			_iter_next_4881983040:;
			++it;
			goto _iter_begin_4881983040;
		}
		_iter_end_4881983040:;
	}
	this->self->_field_prefix=_113617_prefix;
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_112717_slc)),jule::Ptr<_200d010d9_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_113117_model),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_slice_expr(jule::Ptr<_233464770_SliceExpr> _115639_s) {
	if (this->self->_field_prefix != nullptr) {
		{
			if (!((this->self->_field_prefix->_method_arr() != nullptr))) { goto _case_end_4881994544; }
			_case_begin_4881994544:;
			{
				return this->self->_method_eval_arr(_115639_s);
			}
			goto _match_end_4881994320;
			_case_end_4881994544:;
			if (!((this->self->_field_prefix->_method_slc() != nullptr))) { goto _case_end_4881994656; }
			_case_begin_4881994656:;
			{
				jule::Ptr<_200d010d9_Slc> _116325_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_115639_s,_116325_pt->_field_elem);
			}
			goto _match_end_4881994320;
			_case_end_4881994656:;
			_match_end_4881994320:;
		}
	}
	jule::Ptr<_200d010d9_TypeKind> _116817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	if (_115639_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_115639_s->_field_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _117617_first_elem = this->self->_method_eval_expr_kind(_115639_s->_field_elems[0LL]);
	if (_117617_first_elem == nullptr) {
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _118117_d = this->self->_method_eval_exp_slc(_115639_s,_117617_first_elem->_field_kind);
	this->self->_field_prefix=_116817_prefix;
	return _118117_d;
}



void _218751758_Eval::_method_check_integer_indexing_by_data(jule::Ptr<_218751758_Data>& _118754_d,_2336ea198_Token _118764_token) {
	jule::Str _118813_err_key = _218751758_check_data_for_integer_indexing(_118754_d);
	if (_118813_err_key != jule::Str()) {
		(*this)._method_push_err(_118764_token,_118813_err_key,jule::Slice<jule::Any>({}));
	}
}



void _218751758_Eval::_method_indexing_ptr(jule::Ptr<_218751758_Data>& _119436_d,jule::Ptr<_218751758_Data>& _119451_index,jule::Ptr<_233464770_IndexingExpr>& _119466_i) {
	(*this)._method_check_integer_indexing_by_data(_119451_index,_119466_i->_field_token);
	jule::Ptr<_200d010d9_Ptr> _119717_ptr = _119436_d->_field_kind->_method_ptr();
	{
		if (!((_119717_ptr->_method_is_unsafe()))) { goto _case_end_4882017568; }
		_case_begin_4882017568:;
		{
			(*this)._method_push_err(_119466_i->_field_token,jule::Str("unsafe pointers not supports indexing", 37),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4882017328;
		_case_end_4882017568:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_4882017664; }
		_case_begin_4882017664:;
		{
			(*this)._method_push_err(_119466_i->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4882017328;
		_case_end_4882017664:;
		_match_end_4882017328:;
	}
	_119436_d->_field_kind=_119717_ptr->_field_elem->_method_clone();
}



void _218751758_Eval::_method_indexing_arr(jule::Ptr<_218751758_Data>& _121036_d,jule::Ptr<_218751758_Data>& _121051_index,jule::Ptr<_233464770_IndexingExpr>& _121066_i) {
	jule::Ptr<_200d010d9_Arr> _121117_arr = _121036_d->_field_kind->_method_arr();
	_121036_d->_field_kind=_121117_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_121051_index,_121066_i->_field_token);
	if (_121051_index->_method_is_const() && (_121051_index->_field_constant->_method_as_f64() >= static_cast<jule::F64>(_121117_arr->_field_n))) {
		(*this)._method_push_err(_121066_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
	}
}



void _218751758_Eval::_method_indexing_slc(jule::Ptr<_218751758_Data>& _121936_d,jule::Ptr<_218751758_Data>& _121951_index,jule::Ptr<_233464770_IndexingExpr>& _121966_i) {
	jule::Ptr<_200d010d9_Slc> _122017_slc = _121936_d->_field_kind->_method_slc();
	_121936_d->_field_kind=_122017_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_121951_index,_121966_i->_field_token);
	if ((!(_121951_index->_method_is_const()))) {
		return;
	}
	{
		auto _match_expr{ _121936_d->_field_model };
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_SliceExprModel>>())) { goto _case_end_4882040912; }
		_case_begin_4882040912:;
		{
			jule::Ptr<_2188586ea_SliceExprModel> _123021_m = _121936_d->_field_model.operator jule::Ptr<_2188586ea_SliceExprModel>();
			jule::F64 _123117_indx = _121951_index->_field_constant->_method_as_f64();
			if (_123117_indx >= static_cast<jule::F64>(_123021_m->_field_elems.len())) {
				(*this)._method_push_err(_121966_i->_field_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
			} else {
				_121936_d->_field_model=_123021_m->_field_elems[static_cast<jule::Int>(static_cast<jule::U64>(_123117_indx))];
				_121936_d->_field_decl=true;
			}
		}
		goto _match_end_4882041344;
		_case_end_4882040912:;
		_match_end_4882041344:;
	}
}



void _218751758_Eval::_method_indexing_map(jule::Ptr<_218751758_Data>& _124136_d,jule::Ptr<_218751758_Data>& _124151_index,jule::Ptr<_233464770_IndexingExpr>& _124170_i) {
	if (_124151_index == nullptr) {
		return;
	}
	jule::Ptr<_200d010d9_Map> _124617_m = _124136_d->_field_kind->_method_map();
	_200c5bcc0_AssignTypeChecker _124717_atc = _200c5bcc0_AssignTypeChecker((*this)._field_s,_124617_m->_field_key,_124151_index,_124170_i->_field_token);
	_124717_atc._method_check();
	_124136_d->_field_kind=_124617_m->_field_val->_method_clone();
}



void _218751758_Eval::_method_indexing_str(jule::Ptr<_218751758_Data>& _125836_d,jule::Ptr<_218751758_Data>& _125851_index,jule::Ptr<_233464770_IndexingExpr>& _125866_i) {
	
	_125836_d->_field_kind->_field_kind=_200d010d9_build_prim_type(jule::Str("u8", 2));
	if (_125851_index == nullptr) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_125851_index,_125866_i->_field_token);
	if ((!(_125851_index->_method_is_const()))) {
		_125836_d->_field_constant=nullptr;
		return;
	}
	if (_125836_d->_method_is_const()) {
		_2336ea198_Token _127417_error_token = _125866_i->_field_token;
		jule::I64 _127517_j = _125851_index->_field_constant->_method_as_i64();
		jule::Str _127617_s = _125836_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_127517_j) >= _127617_s.len()) {
			(*this)._method_push_err(_127417_error_token,jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
		} else {
			_125836_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_127617_s[_127517_j]));
		}
	}
}



void _218751758_Eval::_method_to_indexing(jule::Ptr<_218751758_Data>& _128535_d,jule::Ptr<_218751758_Data>& _128550_index,jule::Ptr<_233464770_IndexingExpr>& _128569_i) {
	{
		if (!((_128535_d->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4882078880; }
		_case_begin_4882078880:;
		{
			(*this)._method_indexing_ptr(_128535_d,_128550_index,_128569_i);
			return;
		}
		goto _match_end_4882078608;
		_case_end_4882078880:;
		if (!((_128535_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4882078992; }
		_case_begin_4882078992:;
		{
			(*this)._method_indexing_arr(_128535_d,_128550_index,_128569_i);
			return;
		}
		goto _match_end_4882078608;
		_case_end_4882078992:;
		if (!((_128535_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4882079104; }
		_case_begin_4882079104:;
		{
			(*this)._method_indexing_slc(_128535_d,_128550_index,_128569_i);
			return;
		}
		goto _match_end_4882078608;
		_case_end_4882079104:;
		if (!((_128535_d->_field_kind->_method_map() != nullptr))) { goto _case_end_4882079216; }
		_case_begin_4882079216:;
		{
			(*this)._method_indexing_map(_128535_d,_128550_index,_128569_i);
			return;
		}
		goto _match_end_4882078608;
		_case_end_4882079216:;
		if (!((_128535_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4882079328; }
		_case_begin_4882079328:;
		{
			jule::Ptr<_200d010d9_Prim> _130417_prim = _128535_d->_field_kind->_method_prim();
			{
				if (!((_130417_prim->_method_is_str()))) { goto _case_end_4882090176; }
				_case_begin_4882090176:;
				{
					(*this)._method_indexing_str(_128535_d,_128550_index,_128569_i);
					return;
				}
				goto _match_end_4882090032;
				_case_end_4882090176:;
				_match_end_4882090032:;
			}
		}
		goto _match_end_4882078608;
		_case_end_4882079328:;
		_match_end_4882078608:;
	}
	(*this)._method_push_err(_128569_i->_field_token,jule::Str("@ data type is not support indexing", 35),jule::Slice<jule::Any>({jule::Any(_128535_d->_field_kind->_method_to_str())}));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_ident_decl_from_indexing(jule::Ptr<_233464770_IndexingExpr>& _131554_i) {
	{
		auto _match_expr{ _131554_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_IdentExpr>>())) { goto _case_end_4882097888; }
		goto _match_end_4882096112;
		_case_end_4882097888:;
		_case_begin_4882095568:;
		{
			this->self->_method_push_err(_131554_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4882096112;
		_case_end_4882095568:;
		_match_end_4882096112:;
	}
	jule::Ptr<_233464770_IdentTypeDecl> _132317_decl = jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_2336ea198_Token(),_131554_i->_field_expr.operator jule::Ptr<_233464770_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_233464770_TypeDecl>>()));
	{
		auto _match_expr{ _131554_i->_field_index };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_UnaryExpr>>())) { goto _case_end_4882102848; }
		_case_begin_4882102848:;
		{
			jule::Ptr<_218751758_Data> _133121_d = this->self->_method_eval_unary(_131554_i->_field_index.operator jule::Ptr<_233464770_UnaryExpr>());
			if ((!(_133121_d->_field_decl))) {
				this->self->_method_push_err(_131554_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
				return nullptr;
			}
			_132317_decl->_field_generics=jule::append(_132317_decl->_field_generics,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2336ea198_Token(),jule::Any(_133121_d->_field_kind)))}));
		}
		goto _match_end_4882100544;
		_case_end_4882102848:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TypeDecl>>())) { goto _case_end_4882102944; }
		_case_begin_4882102944:;
		{
			_132317_decl->_field_generics=jule::append(_132317_decl->_field_generics,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({_131554_i->_field_index.operator jule::Ptr<_233464770_TypeDecl>()}));
		}
		goto _match_end_4882100544;
		_case_end_4882102944:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_IdentExpr>>())) { goto _case_end_4882103152; }
		_case_begin_4882103152:;
		{
			_132317_decl->_field_generics=jule::append(_132317_decl->_field_generics,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2336ea198_Token(),jule::Any(jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_2336ea198_Token(),_131554_i->_field_index.operator jule::Ptr<_233464770_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_233464770_TypeDecl>>())))))}));
		}
		goto _match_end_4882100544;
		_case_end_4882103152:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TupleExpr>>())) { goto _case_end_4882103248; }
		_case_begin_4882103248:;
		{
			{
				auto expr = _131554_i->_field_index.operator jule::Ptr<_233464770_TupleExpr>()->_field_expr;
				auto it = expr.begin();
				_iter_begin_4882113600:;
				if (it != expr.end()) {
					jule::Ptr<_233464770_Expr> _218751758_expr = *it;
					{
						{
							auto _match_expr{ _218751758_expr->_field_kind };
							if (!(_match_expr.type_is<jule::Ptr<_233464770_TypeDecl>>())) { goto _case_end_4882116688; }
							_case_begin_4882116688:;
							{
								_132317_decl->_field_generics=jule::append(_132317_decl->_field_generics,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({_218751758_expr->_field_kind.operator jule::Ptr<_233464770_TypeDecl>()}));
							}
							goto _match_end_4882117312;
							_case_end_4882116688:;
							if (!(_match_expr.type_is<jule::Ptr<_233464770_IdentExpr>>())) { goto _case_end_4882117392; }
							_case_begin_4882117392:;
							{
								_132317_decl->_field_generics=jule::append(_132317_decl->_field_generics,jule::Slice<jule::Ptr<_233464770_TypeDecl>>({jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2336ea198_Token(),jule::Any(jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_2336ea198_Token(),_218751758_expr->_field_kind.operator jule::Ptr<_233464770_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ptr<_233464770_TypeDecl>>())))))}));
							}
							goto _match_end_4882117312;
							_case_end_4882117392:;
							_match_end_4882117312:;
						}
					}
					_iter_next_4882113600:;
					++it;
					goto _iter_begin_4882113600;
				}
				_iter_end_4882113600:;
			}
		}
		goto _match_end_4882100544;
		_case_end_4882103248:;
		_case_begin_4882098800:;
		{
			this->self->_method_push_err(_131554_i->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4882100544;
		_case_end_4882098800:;
		_match_end_4882100544:;
	}
	return this->self->_method_eval_type(jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2336ea198_Token(),jule::Any(_132317_decl))));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_indexing(jule::Ptr<_233464770_IndexingExpr> _136737_i) {
	jule::Ptr<_200d010d9_TypeKind> _136817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_136817_prefix;
	});
	jule::Ptr<_218751758_Data> _137217_d = this->self->_method_eval_expr_kind(_136737_i->_field_expr);
	if (_137217_d == nullptr) {
		return nullptr;
	}
	if (_137217_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_136737_i);
	}
	_218751758_Data _138217_old_d = (*(_137217_d));
	jule::Ptr<_218751758_Data> _138417_index = this->self->_method_eval_expr_kind(_136737_i->_field_index);
	if (_138417_index == nullptr) {
		return nullptr;
	}
	_137217_d->_field_decl=false;
	this->self->_method_to_indexing(_137217_d,_138417_index,_136737_i);
	if (_137217_d->_method_is_const()) {
		_137217_d->_field_decl=false;
		_137217_d->_field_model=jule::Any(_137217_d->_field_constant);
	} else if (_137217_d->_field_decl) {
		_137217_d->_field_decl=false;
	} else {
		_137217_d->_field_model=jule::Any(jule::new_struct<_2188586ea_IndexigExprModel>(new( std::nothrow ) _2188586ea_IndexigExprModel(jule::new_ptr<_218751758_Data>(_138217_old_d),_138417_index)));
	}
	return _137217_d;
}



std::tuple<jule::Ptr<_218751758_Data>,jule::Ptr<_218751758_Data>> _218751758_Eval::_method_eval_slicing_exprs(jule::Ptr<_233464770_SlicingExpr>& _141443_s) {
	jule::Ptr<_200d010d9_TypeKind> _141517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_141517_prefix;
	});
	jule::Ptr<_218751758_Data> _141917_l = nullptr;
	jule::Ptr<_218751758_Data> _142017_r = nullptr;
	if (_141443_s->_field_start != nullptr) {
		_141917_l=this->self->_method_eval_expr_kind(_141443_s->_field_start);
		if (_141917_l != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_141917_l,_141443_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	} else {
		_141917_l=jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_1d68bd462_Const::_static_method_new_i64(0LL)));
		_141917_l->_field_model=jule::Any(_141917_l->_field_constant);
	}
	if (_141443_s->_field_to != nullptr) {
		_142017_r=this->self->_method_eval_expr_kind(_141443_s->_field_to);
		if (_142017_r != nullptr) {
			this->self->_method_check_integer_indexing_by_data(_142017_r,_141443_s->_field_token);
		} else {
			return std::make_tuple(nullptr,nullptr);
		}
	}
	return std::make_tuple(_141917_l,_142017_r);
}



void _218751758_Eval::_method_slicing_arr(jule::Ptr<_218751758_Data>& _144931_d) {
	jule::Ptr<_200d010d9_TypeKind> _145017_elem_type = _144931_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_144931_d->_field_kind->_field_kind=jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_145017_elem_type));
	_144931_d->_field_lvalue=false;
	_144931_d->_field_mutable=_144931_d->_field_mutable || (!(_145017_elem_type->_method_mutable()));
}



void _218751758_Eval::_method_slicing_slc(jule::Ptr<_218751758_Data>& _146031_d) {
	_146031_d->_field_lvalue=false;
}



void _218751758_Eval::_method_slicing_str(jule::Ptr<_218751758_Data>& _146431_d,jule::Ptr<_218751758_Data>& _146442_l,jule::Ptr<_218751758_Data>& _146453_r) {
	_146431_d->_field_lvalue=false;
	_146431_d->_field_mutable=true;
	if ((!(_146431_d->_method_is_const()))) {
		return;
	}
	if ((_146442_l == nullptr) || (_146453_r == nullptr)) {
		_146431_d->_field_constant=nullptr;
		return;
	}
	if (_146442_l->_method_is_const() && _146453_r->_method_is_const()) {
		jule::I64 _147717_left = _146442_l->_field_constant->_method_as_i64();
		if (_147717_left < 0LL) {
			return;
		}
		jule::Str _148217_s = _146431_d->_field_constant->_method_read_str();
		jule::I64 _148321_right = 0LL;
		if (_146453_r == nullptr) {
			_148321_right=static_cast<jule::I64>(_148217_s.len());
		} else {
			_148321_right=static_cast<jule::I64>(_146453_r->_field_constant->_method_as_i64());
		}
		if (_147717_left > _148321_right) {
			return;
		}
		_146431_d->_field_constant->_method_set_str(_148217_s.slice(_147717_left,_148321_right));
		_146431_d->_field_decl=true;
	} else {
		_146431_d->_field_constant=nullptr;
	}
}



void _218751758_Eval::_method_check_slicing(jule::Ptr<_218751758_Data>& _150037_d,jule::Ptr<_218751758_Data>& _150048_l,jule::Ptr<_218751758_Data>& _150059_r,jule::Ptr<_233464770_SlicingExpr>& _150070_s) {
	{
		if (!((_150037_d->_field_kind->_method_arr() != nullptr))) { goto _case_end_4882202240; }
		_case_begin_4882202240:;
		{
			(*this)._method_slicing_arr(_150037_d);
			return;
		}
		goto _match_end_4882202064;
		_case_end_4882202240:;
		if (!((_150037_d->_field_kind->_method_slc() != nullptr))) { goto _case_end_4882202352; }
		_case_begin_4882202352:;
		{
			(*this)._method_slicing_slc(_150037_d);
			return;
		}
		goto _match_end_4882202064;
		_case_end_4882202352:;
		if (!((_150037_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4882202464; }
		_case_begin_4882202464:;
		{
			jule::Ptr<_200d010d9_Prim> _151117_prim = _150037_d->_field_kind->_method_prim();
			{
				if (!((_151117_prim->_method_is_str()))) { goto _case_end_4882209184; }
				_case_begin_4882209184:;
				{
					(*this)._method_slicing_str(_150037_d,_150048_l,_150059_r);
					return;
				}
				goto _match_end_4882209040;
				_case_end_4882209184:;
				_match_end_4882209040:;
			}
		}
		goto _match_end_4882202064;
		_case_end_4882202464:;
		_match_end_4882202064:;
	}
	(*this)._method_push_err(_150070_s->_field_token,jule::Str("@ data type is not support slicing", 34),jule::Slice<jule::Any>({jule::Any(_150037_d->_field_kind->_method_to_str())}));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_slicing(jule::Ptr<_233464770_SlicingExpr> _152236_s) {
	jule::Ptr<_218751758_Data> _152317_d = this->self->_method_eval_expr_kind(_152236_s->_field_expr);
	if (_152317_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _152818_l;
	jule::Ptr<_218751758_Data> _152825_r;
	std::tie(_152818_l,_152825_r) = this->self->_method_eval_slicing_exprs(_152236_s);
	if (_152818_l == nullptr) {
		return _152317_d;
	}
	_152317_d->_field_decl=false;
	this->self->_method_check_slicing(_152317_d,_152818_l,_152825_r,_152236_s);
	_152317_d->_field_cast_kind=nullptr;
	if (_152317_d->_method_is_const()) {
		_152317_d->_field_decl=false;
		_152317_d->_field_model=jule::Any(_152317_d->_field_constant);
	} else if (_152317_d->_field_decl) {
		_152317_d->_field_decl=false;
	} else {
		jule::Ptr<_2188586ea_SlicingExprModel> _154721_model = jule::new_struct<_2188586ea_SlicingExprModel>(new( std::nothrow ) _2188586ea_SlicingExprModel(_152317_d->_field_model,_152818_l->_field_model,jule::Any()));
		if (_152825_r != nullptr) {
			_154721_model->_field_right=_152825_r->_field_model;
		}
		_152317_d->_field_model=jule::Any(_154721_model);
	}
	return _152317_d;
}



void _218751758_Eval::_method_cast_ptr(jule::Ptr<_200d010d9_TypeKind> _156231_t,jule::Ptr<_218751758_Data> _156249_d,_2336ea198_Token _156259_error_token) {
	jule::Ptr<_200d010d9_Sptr> _156313_sptr = _156249_d->_field_kind->_method_sptr();
	if (_156313_sptr != nullptr) {
		if ((!(_156231_t->_method_ptr()->_field_elem->_method_equals(_156313_sptr->_field_elem)))) {
			(*this)._method_push_err(_156259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156249_d->_field_kind->_method_to_str()),jule::Any(_156231_t->_method_to_str())}));
		}
		return;
	}
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_156259_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ptr<_200d010d9_Prim> _157613_prim = _156249_d->_field_kind->_method_prim();
	if ((_156249_d->_field_kind->_method_ptr() == nullptr) && ((_157613_prim == nullptr) || (!(_1d68ce6a4_is_int(_157613_prim->_method_to_str()))))) {
		(*this)._method_push_err(_156259_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_156249_d->_field_kind->_method_to_str()),jule::Any(_156231_t->_method_to_str())}));
	}
	_156249_d->_field_constant=nullptr;
}



void _218751758_Eval::_method_cast_struct(jule::Ptr<_200d010d9_TypeKind> _158434_t,jule::Ptr<_218751758_Data> _158452_d,_2336ea198_Token _158462_error_token) {
	jule::Ptr<_2185da36c_Trait> _158517_tr = _158452_d->_field_kind->_method_trt();
	if (_158517_tr == nullptr) {
		(*this)._method_push_err(_158462_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_158452_d->_field_kind->_method_to_str()),jule::Any(_158434_t->_method_to_str())}));
		return;
	}
	jule::Ptr<_23461aa35_StructIns> _159117_s = _158434_t->_method_strct();
	(*this)._method_push_reference_to_struct(_159117_s);
	if ((!(_159117_s->_field_decl->_method_is_implements(_158517_tr)))) {
		(*this)._method_push_err(_158462_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_158452_d->_field_kind->_method_to_str()),jule::Any(_158434_t->_method_to_str())}));
	}
}



void _218751758_Eval::_method_cast_ref(jule::Ptr<_200d010d9_TypeKind> _159931_t,jule::Ptr<_218751758_Data> _159949_d,_2336ea198_Token _159959_error_token) {
	jule::Ptr<_200d010d9_Sptr> _160017_sptr = _159931_t->_method_sptr();
	if (_160017_sptr->_field_elem->_method_strct() != nullptr) {
		(*this)._method_cast_struct(_160017_sptr->_field_elem,_159949_d,_159959_error_token);
		return;
	}
	(*this)._method_push_err(_159959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_159949_d->_field_kind->_method_to_str()),jule::Any(_159931_t->_method_to_str())}));
}



void _218751758_Eval::_method_cast_slc(jule::Ptr<_200d010d9_TypeKind> _160931_t,jule::Ptr<_218751758_Data> _160949_d,_2336ea198_Token _160959_error_token) {
	if (_160949_d->_field_kind->_method_enm() != nullptr) {
		if ((_160949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_160949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_160959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160949_d->_field_kind->_method_to_str()),jule::Any(_160931_t->_method_to_str())}));
			return;
		}
	} else if ((_160949_d->_field_kind->_method_prim() == nullptr) || (!(_160949_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_160959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160949_d->_field_kind->_method_to_str()),jule::Any(_160931_t->_method_to_str())}));
		return;
	}
	_160931_t=_160931_t->_method_slc()->_field_elem;
	jule::Ptr<_200d010d9_Prim> _162113_prim = _160931_t->_method_prim();
	if ((_162113_prim == nullptr) || ((!(_162113_prim->_method_is_u8())) && (!(_162113_prim->_method_is_i32())))) {
		(*this)._method_push_err(_160959_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_160949_d->_field_kind->_method_to_str()),jule::Any(_160931_t->_method_to_str())}));
	}
}



void _218751758_Eval::_method_cast_str(jule::Ptr<_218751758_Data> _162731_d,_2336ea198_Token _162741_error_token) {
	if (_162731_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_2186be3da_Enum> _162921_e = _162731_d->_field_kind->_method_enm();
		if ((_162921_e->_field_kind->_field_kind->_method_prim() != nullptr) && _162921_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (_162731_d->_field_kind->_method_prim() != nullptr) {
		jule::Ptr<_200d010d9_Prim> _163617_prim = _162731_d->_field_kind->_method_prim();
		if ((!(_163617_prim->_method_is_u8())) && (!(_163617_prim->_method_is_i32()))) {
			(*this)._method_push_err(_162741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_162731_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if (_162731_d->_field_kind->_method_slc() == nullptr) {
		(*this)._method_push_err(_162741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_162731_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ptr<_200d010d9_TypeKind> _164817_t = _162731_d->_field_kind->_method_slc()->_field_elem;
	jule::Ptr<_200d010d9_Prim> _164913_prim = _164817_t->_method_prim();
	if ((_164913_prim == nullptr) || ((!(_164913_prim->_method_is_u8())) && (!(_164913_prim->_method_is_i32())))) {
		(*this)._method_push_err(_162741_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_162731_d->_field_kind->_method_to_str())}));
	}
}



void _218751758_Eval::_method_cast_int(jule::Ptr<_200d010d9_TypeKind> _165531_t,jule::Ptr<_218751758_Data> _165549_d,_2336ea198_Token _165559_error_token) {
	if (_165549_d->_method_is_const()) {
		jule::Ptr<_200d010d9_Prim> _165717_prim = _165531_t->_method_prim();
		{
			if (!((_1d68ce6a4_is_sig_int(_165717_prim->_field_kind)))) { goto _case_end_4882314016; }
			_case_begin_4882314016:;
			{
				_165549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_165549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4882313856;
			_case_end_4882314016:;
			if (!((_1d68ce6a4_is_unsig_int(_165717_prim->_field_kind)))) { goto _case_end_4882314128; }
			_case_begin_4882314128:;
			{
				_165549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_165549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4882313856;
			_case_end_4882314128:;
			_match_end_4882313856:;
		}
	}
	if (_165549_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_2186be3da_Enum> _166817_e = _165549_d->_field_kind->_method_enm();
		if (_1d68ce6a4_is_num(_166817_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (_165549_d->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_200d010d9_Prim> _167517_prim = _165531_t->_method_prim();
		if ((!(_167517_prim->_method_is_uintptr()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165549_d->_field_kind->_method_to_str()),jule::Any(_165531_t->_method_to_str())}));
		}
		return;
	}
	if (_165549_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_200d010d9_Prim> _168217_prim = _165531_t->_method_prim();
		if (_168217_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
		} else if (((((!(_168217_prim->_method_is_i32())) && (!(_168217_prim->_method_is_i64()))) && (!(_168217_prim->_method_is_u16()))) && (!(_168217_prim->_method_is_u32()))) && (!(_168217_prim->_method_is_u64()))) {
			(*this)._method_push_err(_165559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165549_d->_field_kind->_method_to_str()),jule::Any(_165531_t->_method_to_str())}));
		}
		return;
	}
	jule::Ptr<_200d010d9_Prim> _169313_prim = _165549_d->_field_kind->_method_prim();
	if ((_169313_prim != nullptr) && _1d68ce6a4_is_num(_169313_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_165559_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_165549_d->_field_kind->_method_to_str()),jule::Any(_165531_t->_method_to_str())}));
}



void _218751758_Eval::_method_cast_num(jule::Ptr<_200d010d9_TypeKind> _170131_t,jule::Ptr<_218751758_Data> _170149_d,_2336ea198_Token _170159_error_token) {
	if (_170149_d->_method_is_const()) {
		jule::Ptr<_200d010d9_Prim> _170317_prim = _170131_t->_method_prim();
		{
			if (!((_1d68ce6a4_is_float(_170317_prim->_field_kind)))) { goto _case_end_4882350688; }
			_case_begin_4882350688:;
			{
				_170149_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_170149_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4882350512;
			_case_end_4882350688:;
			if (!((_1d68ce6a4_is_sig_int(_170317_prim->_field_kind)))) { goto _case_end_4882350800; }
			_case_begin_4882350800:;
			{
				_170149_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_170149_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4882350512;
			_case_end_4882350800:;
			if (!((_1d68ce6a4_is_unsig_int(_170317_prim->_field_kind)))) { goto _case_end_4882350912; }
			_case_begin_4882350912:;
			{
				_170149_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_170149_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4882350512;
			_case_end_4882350912:;
			_match_end_4882350512:;
		}
	}
	if (_170149_d->_field_kind->_method_enm() != nullptr) {
		jule::Ptr<_2186be3da_Enum> _171717_e = _170149_d->_field_kind->_method_enm();
		if (_1d68ce6a4_is_num(_171717_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ptr<_200d010d9_Prim> _172313_prim = _170149_d->_field_kind->_method_prim();
	if ((_172313_prim != nullptr) && _1d68ce6a4_is_num(_172313_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_170159_error_token,jule::Str("@ data-type not supports casting to @ data-type", 47),jule::Slice<jule::Any>({jule::Any(_170149_d->_field_kind->_method_to_str()),jule::Any(_170131_t->_method_to_str())}));
}



void _218751758_Eval::_method_cast_prim(jule::Ptr<_200d010d9_TypeKind> _173132_t,jule::Ptr<_218751758_Data> _173150_d,_2336ea198_Token _173160_error_token) {
	jule::Ptr<_200d010d9_Prim> _173213_prim = _173132_t->_method_prim();
	{
		if (!((_173213_prim->_method_is_any()))) { goto _case_end_4882370768; }
		goto _match_end_4882370368;
		_case_end_4882370768:;
		if (!((_173213_prim->_method_is_str()))) { goto _case_end_4882370864; }
		_case_begin_4882370864:;
		{
			(*this)._method_cast_str(_173150_d,_173160_error_token);
		}
		goto _match_end_4882370368;
		_case_end_4882370864:;
		if (!((_1d68ce6a4_is_int(_173213_prim->_method_to_str())))) { goto _case_end_4882370960; }
		_case_begin_4882370960:;
		{
			(*this)._method_cast_int(_173132_t,_173150_d,_173160_error_token);
		}
		goto _match_end_4882370368;
		_case_end_4882370960:;
		if (!((_1d68ce6a4_is_num(_173213_prim->_method_to_str())))) { goto _case_end_4882371056; }
		_case_begin_4882371056:;
		{
			(*this)._method_cast_num(_173132_t,_173150_d,_173160_error_token);
		}
		goto _match_end_4882370368;
		_case_end_4882371056:;
		_case_begin_4882370480:;
		{
			(*this)._method_push_err(_173160_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_173132_t->_method_to_str())}));
		}
		goto _match_end_4882370368;
		_case_end_4882370480:;
		_match_end_4882370368:;
	}
}



void _218751758_Eval::_method_cast_constant(jule::Ptr<_200d010d9_TypeKind>& _175137_t,jule::Ptr<_218751758_Data>& _175156_d) {
	jule::Ptr<_200d010d9_Prim> _175213_prim = _175137_t->_method_prim();
	if ((_175213_prim == nullptr) || (!(_175156_d->_method_is_const()))) {
		return;
	}
	{
		if (!((_1d68ce6a4_is_sig_int(_175213_prim->_field_kind)))) { goto _case_end_4882383920; }
		_case_begin_4882383920:;
		{
			_175156_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_175156_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4882382752;
		_case_end_4882383920:;
		if (!((_1d68ce6a4_is_unsig_int(_175213_prim->_field_kind)))) { goto _case_end_4882384016; }
		_case_begin_4882384016:;
		{
			_175156_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_175156_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4882382752;
		_case_end_4882384016:;
		if (!((_1d68ce6a4_is_float(_175213_prim->_field_kind)))) { goto _case_end_4882384112; }
		_case_begin_4882384112:;
		{
			_175156_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_175156_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4882382752;
		_case_end_4882384112:;
		_match_end_4882382752:;
	}
	_175156_d->_field_model=jule::Any(_175156_d->_field_constant);
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_cast_by_type_n_data(jule::Ptr<_200d010d9_TypeKind> _177147_t,jule::Ptr<_218751758_Data> _177165_d,_2336ea198_Token _177175_error_token) {
	{
		if (!(((_177165_d->_field_kind->_method_prim() != nullptr) && _177165_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4882398576; }
		_case_begin_4882398576:;
		{
			if (_177147_t->_method_enm() != nullptr) {
				(*this)._method_push_err(_177175_error_token,jule::Str("enum cannot casted from any type", 32),jule::Slice<jule::Any>({}));
				(*this)._method_push_suggestion(jule::Str("try cast to type of enum fields instead of enum", 47),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4882395344;
		_case_end_4882398576:;
		if (!((_177147_t->_method_ptr() != nullptr))) { goto _case_end_4882398032; }
		_case_begin_4882398032:;
		{
			(*this)._method_cast_ptr(_177147_t,_177165_d,_177175_error_token);
		}
		goto _match_end_4882395344;
		_case_end_4882398032:;
		if (!((_177147_t->_method_sptr() != nullptr))) { goto _case_end_4882398128; }
		_case_begin_4882398128:;
		{
			(*this)._method_cast_ref(_177147_t,_177165_d,_177175_error_token);
		}
		goto _match_end_4882395344;
		_case_end_4882398128:;
		if (!((_177147_t->_method_slc() != nullptr))) { goto _case_end_4882398224; }
		_case_begin_4882398224:;
		{
			(*this)._method_cast_slc(_177147_t,_177165_d,_177175_error_token);
		}
		goto _match_end_4882395344;
		_case_end_4882398224:;
		if (!((_177147_t->_method_strct() != nullptr))) { goto _case_end_4882398320; }
		_case_begin_4882398320:;
		{
			(*this)._method_cast_struct(_177147_t,_177165_d,_177175_error_token);
		}
		goto _match_end_4882395344;
		_case_end_4882398320:;
		if (!((_177147_t->_method_prim() != nullptr))) { goto _case_end_4882395808; }
		_case_begin_4882395808:;
		{
			(*this)._method_cast_prim(_177147_t,_177165_d,_177175_error_token);
		}
		goto _match_end_4882395344;
		_case_end_4882395808:;
		_case_begin_4882395520:;
		{
			(*this)._method_push_err(_177175_error_token,jule::Str("@ data-type not supports casting", 32),jule::Slice<jule::Any>({jule::Any(_177147_t->_method_to_str())}));
			_177165_d=nullptr;
		}
		goto _match_end_4882395344;
		_case_end_4882395520:;
		_match_end_4882395344:;
	}
	if (_177165_d == nullptr) {
		return nullptr;
	}
	_177165_d->_field_mutable=_177165_d->_field_mutable || ((!(_177165_d->_field_kind->_method_mutable())) && _177147_t->_method_mutable());
	_177165_d->_field_lvalue=false;
	_177165_d->_field_decl=false;
	(*this)._method_cast_constant(_177147_t,_177165_d);
	if ((_177165_d->_field_kind->_method_enm() == nullptr) || (_177165_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _177147_t->_method_to_str())) {
		_177165_d->_field_cast_kind=_177147_t;
	} else {
		_177165_d->_field_kind=_177147_t;
	}
	return _177165_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_cast(jule::Ptr<_233464770_CastExpr> _182133_c) {
	jule::Ptr<_200d010d9_TypeSymbol> _182217_t = _21862cb1d_build_type(_182133_c->_field_kind);
	jule::Bool _182313_ok = this->self->_field_s->_method_check_type(_182217_t,this->self->_field_lookup);
	if ((!(_182313_ok))) {
		return nullptr;
	}
	jule::Ptr<_200d010d9_TypeKind> _182817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_182817_prefix;
	});
	jule::Ptr<_218751758_Data> _183217_d = this->self->_method_eval_expr_kind(_182133_c->_field_expr);
	if (_183217_d == nullptr) {
		return nullptr;
	}
	_183217_d=this->self->_method_eval_cast_by_type_n_data(_182217_t->_field_kind,_183217_d,_182133_c->_field_kind->_field_token);
	return _183217_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_ns_selection(jule::Ptr<_233464770_NsSelectionExpr> _184236_s) {
	jule::Str _184313_path = _200d010d9_build_link_path_by_tokens(_184236_s->_field_ns);
	jule::Ptr<_218848bd5_ImportInfo> _184417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>([=](jule::Ptr<_218848bd5_ImportInfo> _184453_p) mutable -> jule::Bool {
		if ((_184236_s->_field_ns.len() == 1LL) && (_184453_p->_field_alias == _184313_path)) {
			return true;
		}
		return _184453_p->_field_link_path == _184313_path;
	}));
	if ((_184417_imp == nullptr) || (!(_184417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_184236_s->_field_ident,jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_184313_path)}));
		return nullptr;
	}
	jule::Trait<_1d6734eee_Lookup> _185617_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_184417_imp;
	
	jule::Any _186017_def = (*this)._method_get_def(_184236_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_185617_lookup;
	jule::Ptr<_218751758_Data> _186317_d = (*this)._method_eval_def(_186017_def,_184236_s->_field_ident);
	return _186317_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_struct_lit_explicit(jule::Ptr<_23461aa35_StructIns> _186848_s,jule::Slice<jule::Any> _186913_exprs,_2336ea198_Token _186936_error_token) {
	jule::Bool _187013_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_186848_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_186848_s->_field_generics.len()),_186936_error_token);
	if ((!(_187013_ok))) {
		return nullptr;
	}
	this->self->_method_push_reference_to_struct(_186848_s);
	_200c5bcc0_StructLitChecker _187817_slc = _200c5bcc0_StructLitChecker(this->self,_186936_error_token,_186848_s,jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>>());
	_187817_slc._method_check(_186913_exprs);
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_186848_s)),jule::Ptr<_200d010d9_TypeKind>(),(!(this->self->_field_immutable)),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_StructLitExprModel>(new( std::nothrow ) _2188586ea_StructLitExprModel(_186848_s,_187817_slc._field_args))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_struct_lit(jule::Ptr<_233464770_StructLit> _189539_lit) {
	jule::Ptr<_200d010d9_TypeSymbol> _189617_t = _21862cb1d_build_type(_189539_lit->_field_kind);
	jule::Bool _189713_ok = this->self->_field_s->_method_check_type(_189617_t,this->self->_field_lookup);
	if ((!(_189713_ok))) {
		return nullptr;
	}
	jule::Ptr<_23461aa35_StructIns> _190217_s = _189617_t->_field_kind->_method_strct();
	if (_190217_s == nullptr) {
		if (_189617_t->_field_kind->_method_sptr() != nullptr) {
			_190217_s=_189617_t->_field_kind->_method_sptr()->_field_elem->_method_strct();
			if (_190217_s != nullptr) {
				goto _julec_label_eval;
			}
		}
		this->self->_method_push_err(_189539_lit->_field_kind->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_julec_label_eval:;
	jule::Ptr<_218751758_Data> _191517_d = this->self->_method_eval_struct_lit_explicit(_190217_s,_189539_lit->_field_exprs,_189539_lit->_field_kind->_field_token);
	if (_189617_t->_field_kind->_method_sptr() != nullptr) {
		jule::Ptr<_2188586ea_StructLitExprModel> _191721_model = _191517_d->_field_model.operator jule::Ptr<_2188586ea_StructLitExprModel>();
		_218751758_make_struct_lit_alloc(_191517_d,_191721_model);
	}
	return _191517_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_type(jule::Ptr<_233464770_TypeDecl> _192332_t) {
	jule::Ptr<_200d010d9_TypeSymbol> _192417_tk = _21862cb1d_build_type(_192332_t);
	jule::Bool _192513_ok = (*this)._field_s->_method_check_type(_192417_tk,(*this)._field_lookup);
	if ((!(_192513_ok))) {
		return nullptr;
	}
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(_192417_tk->_field_kind,jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_192417_tk->_field_kind),true,jule::Ptr<_1d68bd462_Const>()));
}



void _218751758_Eval::_method_call_type_fn(jule::Ptr<_233464770_FnCallExpr>& _193737_fc,jule::Ptr<_218751758_Data>& _193759_d) {
	if (_193737_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_193737_fc->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_193759_d->_field_kind->_method_to_str())}));
	} else if (_193737_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_193737_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_193737_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_193737_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_193737_fc->_field_args.len() > 0LL) {
		jule::Ptr<_218751758_Data> _194721_arg = this->self->_method_eval_expr_kind(_193737_fc->_field_args[0LL]->_field_kind);
		if (_194721_arg != nullptr) {
			_193759_d=this->self->_method_eval_cast_by_type_n_data(_193759_d->_field_kind,_194721_arg,_193737_fc->_field_args[0LL]->_field_token);
		}
	}
	_193759_d->_field_decl=false;
}



std::tuple<jule::Bool,jule::Bool> _218751758_Eval::_method_check_fn_call_generics(jule::Ptr<_2185d51ad_FnIns> _195745_f,jule::Ptr<_233464770_FnCallExpr> _195813_fc) {
	jule::Bool _195832_ok = jule::Bool();
	jule::Bool _195842_dynamic_annotation = jule::Bool();
	{
		if (!((((_195745_f->_field_decl->_field_generics.len() > 0LL) && (_195813_fc->_field_generics.len() == 0LL)) && (_195745_f->_field_params.len() > 0LL)))) { goto _case_end_4882515536; }
		_case_begin_4882515536:;
		{
			_195842_dynamic_annotation=true;
			_195745_f->_field_generics=jule::Slice<jule::Ptr<_200d010d9_TypeKind>>::alloc(static_cast<jule::I64>(_195745_f->_field_decl->_field_generics.len()));
			_195832_ok = true;
			_195842_dynamic_annotation = true;
			return std::make_tuple(_195832_ok,_195842_dynamic_annotation);
		}
		goto _match_end_4882507984;
		_case_end_4882515536:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_195745_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_195813_fc->_field_generics.len()),_195813_fc->_field_token)))))) { goto _case_end_4882517776; }
		_case_begin_4882517776:;
		{
			_195832_ok = false;
			_195842_dynamic_annotation = false;
			return std::make_tuple(_195832_ok,_195842_dynamic_annotation);
		}
		goto _match_end_4882507984;
		_case_end_4882517776:;
		_case_begin_4882508128:;
		{
			_195745_f->_field_generics=jule::Slice<jule::Ptr<_200d010d9_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_195745_f->_field_decl->_field_generics.len()));
			{
				auto expr = _195813_fc->_field_generics;
				auto it = expr.begin();
				_iter_begin_4882510144:;
				if (it != expr.end()) {
					jule::Ptr<_233464770_TypeDecl> _218751758_g = *it;
					{
						jule::Ptr<_200d010d9_TypeSymbol> _197325_k = _21862cb1d_build_type(_218751758_g);
						_195832_ok=(*this)._field_s->_method_check_type(_197325_k,(*this)._field_lookup);
						if ((!(_195832_ok))) {
							_195832_ok = false;
							_195842_dynamic_annotation = false;
							return std::make_tuple(_195832_ok,_195842_dynamic_annotation);
						}
						_195745_f->_field_generics=jule::append(_195745_f->_field_generics,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>({_197325_k->_field_kind}));
					}
					_iter_next_4882510144:;
					++it;
					goto _iter_begin_4882510144;
				}
				_iter_end_4882510144:;
			}
			_195832_ok = true;
			_195842_dynamic_annotation = false;
			return std::make_tuple(_195832_ok,_195842_dynamic_annotation);
		}
		goto _match_end_4882507984;
		_case_end_4882508128:;
		_match_end_4882507984:;
	}
}



void _218751758_Eval::_method_call_builtin_fn(jule::Ptr<_233464770_FnCallExpr>& _198540_fc,jule::Ptr<_218751758_Data>& _198562_d) {
	jule::Ptr<_2185d51ad_FnIns> _198617_f = _198562_d->_field_kind->_method_fnc();
	_198562_d=_198617_f->_field_caller(this->self,_198540_fc,_198562_d);
	if (_198562_d == nullptr) {
		return;
	}
	_198562_d->_field_mutable=true;
}



void _218751758_Eval::_method_check_fn_of_concurrent_call(jule::Ptr<_2185d51ad_FnIns>& _199647_f,_2336ea198_Token _199658_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto expr = _199647_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4882535920:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _218751758_p = *it;
			{
				if (_218751758_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_199658_error_token,jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_4882535920:;
			++it;
			goto _iter_begin_4882535920;
		}
		_iter_end_4882535920:;
	}
}



void _218751758_Eval::_method_call_fn(jule::Ptr<_233464770_FnCallExpr>& _200932_fc,jule::Ptr<_218751758_Data>& _200954_d) {
	jule::Ptr<_2185d51ad_FnIns> _201017_f = _200954_d->_field_kind->_method_fnc();
	if (_201017_f->_method_is_builtin()) {
		this->self->_method_call_builtin_fn(_200932_fc,_200954_d);
		return;
	}
	if (_200932_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_201017_f,_200932_fc->_field_token);
	}
	if ((((!(_200954_d->_field_mutable)) && _201017_f->_field_decl->_method_is_method()) && (!(_201017_f->_field_decl->_field_statically))) && _201017_f->_field_decl->_field_params[0LL]->_field_mutable) {
		this->self->_method_push_err(_200932_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _201017_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_200932_fc->_field_token,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
	}
	jule::Bool _202618_ok;
	jule::Bool _202622_dynamic_annotation;
	std::tie(_202618_ok,_202622_dynamic_annotation) = this->self->_method_check_fn_call_generics(_201017_f,_200932_fc);
	if ((!(_202618_ok))) {
		_200954_d=nullptr;
		return;
	}
	jule::Ptr<_1eec2c632_Sema> _203217_old = this->self->_field_s;
	if (_201017_f->_field_decl->_field_owner != nullptr) {
		this->self->_field_s=_201017_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if (_203217_old != this->self->_field_s) {
			_203217_old->_field_errors=jule::append(_203217_old->_field_errors,this->self->_field_s->_field_errors);
			this->self->_field_s->_field_errors=nullptr;
		}
		this->self->_field_s=_203217_old;
	});
	if ((!(_202622_dynamic_annotation))) {
		if ((!(_201017_f->_field_reloaded))) {
			_202618_ok=this->self->_field_s->_method_reload_fn_ins_types(_201017_f);
			if ((!(_202618_ok))) {
				_200954_d=nullptr;
				return;
			}
			_201017_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_201017_f);
	}
	_200c5bcc0_FnCallArgChecker _205817_fcac = _200c5bcc0_FnCallArgChecker(this->self,_200932_fc->_field_args,_200932_fc->_field_token,_201017_f,_202622_dynamic_annotation,jule::Slice<jule::Any>());
	if (_201017_f->_field_decl->_field_owner != nullptr) {
		std::tie(_203217_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_203217_old);
		_202618_ok=_205817_fcac._method_check();
		std::tie(_203217_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_203217_old);
	} else {
		_202618_ok=_205817_fcac._method_check();
	}
	if ((!(_202618_ok)) && _202622_dynamic_annotation) {
		_200954_d=nullptr;
		return;
	}
	jule::Bool _207814_is_unique_ins;
	jule::Int _207829_pos;
	std::tie(_207814_is_unique_ins,_207829_pos) = _201017_f->_field_decl->_method_append_instance(_201017_f);
	if ((!(_207814_is_unique_ins))) {
		_201017_f=_201017_f->_field_decl->_field_instances[_207829_pos];
	}
	jule::Any _208317_call_model = _200954_d->_field_model;
	if (_201017_f->_field_decl->_method_is_void()) {
		_200954_d=_218751758_build_void_data();
	} else {
		if (_202622_dynamic_annotation) {
			_202618_ok=this->self->_field_s->_method_reload_fn_ins_types(_201017_f);
			if ((!(_202618_ok))) {
				_200954_d=nullptr;
				return;
			}
			_201017_f->_field_reloaded=true;
		}
		_200954_d->_field_kind=_201017_f->_field_result;
		_200954_d->_field_lvalue=false;
	}
	_200954_d->_field_mutable=true;
	_200954_d->_field_model=jule::Any(jule::new_struct<_2188586ea_FnCallExprModel>(new( std::nothrow ) _2188586ea_FnCallExprModel(_201017_f,_200932_fc->_field_concurrent,_208317_call_model,_205817_fcac._field_arg_models)));
	if ((_201017_f->_field_generics.len() > 0LL) && _207814_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_201017_f);
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_fn_call(jule::Ptr<_233464770_FnCallExpr> _211536_fc) {
	jule::Ptr<_200d010d9_TypeKind> _211617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_211617_prefix;
	});
	jule::Ptr<_218751758_Data> _212017_d = this->self->_method_eval_expr_kind(_211536_fc->_field_expr->_field_kind);
	if (_212017_d == nullptr) {
		return nullptr;
	}
	if (_212017_d->_field_decl) {
		this->self->_method_call_type_fn(_211536_fc,_212017_d);
		return _212017_d;
	}
	if (_212017_d->_field_kind->_method_fnc() == nullptr) {
		this->self->_method_push_err(_211536_fc->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	this->self->_method_call_fn(_211536_fc,_212017_d);
	return _212017_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_enum_static(jule::Ptr<_2186be3da_Enum> _213939_enm,_2336ea198_Token _213951_ident) {
	jule::Ptr<_218751758_Data> _214017_d = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_213939_enm)),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1d68bd462_Const>()));
	jule::Ptr<_2186be3da_EnumItem> _214717_item = _213939_enm->_method_find_item(_213951_ident._field_kind);
	if (_214717_item == nullptr) {
		(*this)._method_push_err(_213951_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_213951_ident._field_kind)}));
	} else {
		_214017_d->_field_constant=jule::new_ptr<_1d68bd462_Const>((*(_214717_item->_field_value->_field_data->_field_constant)));
		_214017_d->_field_model=jule::Any(_214017_d->_field_constant);
	}
	return _214017_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_struct_static(jule::Ptr<_23461aa35_StructIns> _215841_s,_2336ea198_Token _215856_ident) {
	jule::Ptr<_218751758_Data> _215917_d = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1d68bd462_Const>()));
	
	jule::Ptr<_2185d51ad_Fn> _216717_method = _215841_s->_method_find_method(_215856_ident._field_kind,true);
	if (_216717_method != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_216717_method->_field_public,_216717_method->_field_token)))) {
			(*this)._method_push_err(_215856_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_215856_ident._field_kind)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ptr<_2185d51ad_FnIns> _217421_ins = _216717_method->_method_instance();
		_217421_ins->_field_owner=_215841_s;
		(*this)._method_push_reference_to_fn(_217421_ins);
		_215917_d->_field_model=jule::Any(jule::new_struct<_2188586ea_StructStaticIdentExprModel>(new( std::nothrow ) _2188586ea_StructStaticIdentExprModel(_215841_s,_215917_d->_field_model,_217421_ins)));
		_215917_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_217421_ins));
		return _215917_d;
	}
	jule::Ptr<_200c58948_Var> _218617_sttc = _215841_s->_field_decl->_method_find_static(_215856_ident._field_kind);
	if (_218617_sttc != nullptr) {
		return (*this)._method_eval_var(_218617_sttc,_215856_ident);
	}
	(*this)._method_push_err(_215856_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_215856_ident._field_kind)}));
	return nullptr;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_trait_sub_ident(jule::Ptr<_218751758_Data> _219543_d,jule::Ptr<_2185da36c_Trait> _219557_trt,_2336ea198_Token _219570_ident) {
	jule::Ptr<_2185d51ad_Fn> _219617_f = _219557_trt->_method_find_method(_219570_ident._field_kind);
	if (_219617_f == nullptr) {
		(*this)._method_push_err(_219570_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_219570_ident._field_kind)}));
		return nullptr;
	}
	jule::Any _220217_model = jule::Any(nullptr);
	if (_219557_trt == _1d67e4c4b_BUILTIN_TRAIT_ERROR) {
		_220217_model=jule::Any(jule::new_struct<_2188586ea_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _2188586ea_BuiltinErrorTraitSubIdentExprModel(_219543_d->_field_model,_219570_ident._field_kind)));
	} else {
		_220217_model=jule::Any(jule::new_struct<_2188586ea_TraitSubIdentExprModel>(new( std::nothrow ) _2188586ea_TraitSubIdentExprModel(_219543_d->_field_model,_219570_ident._field_kind)));
	}
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_219617_f->_method_instance())),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_220217_model,false,jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_struct_sub_ident(jule::Ptr<_218751758_Data> _222444_d,jule::Ptr<_23461aa35_StructIns> _222458_s,jule::Ptr<_233464770_SubIdentExpr> _222473_si,jule::Bool _222492_ref) {
	jule::Ptr<_23461aa35_FieldIns> _222517_f = _222458_s->_method_find_field(_222473_si->_field_ident._field_kind);
	if (_222517_f != nullptr) {
		if ((!((*this)._field_s->_method_is_accessible_define(_222517_f->_field_decl->_field_public,_222517_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_222473_si->_field_ident,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_222517_f->_field_decl->_field_ident)}));
			(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
		}
		jule::Ptr<_2188586ea_StructSubIdentExprModel> _223221_model = jule::new_struct<_2188586ea_StructSubIdentExprModel>(new( std::nothrow ) _2188586ea_StructSubIdentExprModel(_222444_d->_field_model,_222444_d->_field_kind,jule::Ptr<_2185d51ad_FnIns>(),_222517_f));
		_222444_d->_field_model=jule::Any(_223221_model);
		_222444_d->_field_kind=_222517_f->_field_kind->_method_clone();
		_222444_d->_field_lvalue=true;
		if (_222517_f->_field_decl->_field_mutable && (!(_222444_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4882647584; }
				_case_begin_4882647584:;
				{
					jule::Ptr<_2186ce186_ScopeChecker> _224525_scope = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>()->_method_get_root();
					_222444_d->_field_mutable=(_224525_scope->_field_owner != nullptr) && (_224525_scope->_field_owner->_field_owner == _222458_s);
					if (_222444_d->_field_mutable) {
						jule::Ptr<_200c58948_Var> _224833_field = _223221_model->_field_expr.operator jule::Ptr<_200c58948_Var>();
						jule::Ptr<_200c58948_Var> _224933_v = jule::new_struct<_200c58948_Var>(new( std::nothrow ) _200c58948_Var(_224833_field->_field_scope,_224833_field->_field_token,_224833_field->_field_ident,_224833_field->_field_cpp_linked,_224833_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_224833_field->_field_kind,_224833_field->_field_value,jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_200c58948_IterRelation>(),jule::Slice<jule::Ptr<_200c58948_Var>>()));
						_224933_v->_field_mutable=true;
						_223221_model->_field_expr=jule::Any(_224933_v);
					}
				}
				goto _match_end_4882656800;
				_case_end_4882647584:;
				_match_end_4882656800:;
			}
		}
		return _222444_d;
	}
	
	jule::Ptr<_2185d51ad_Fn> _226817_m = _222458_s->_method_find_method(_222473_si->_field_ident._field_kind,false);
	if (_226817_m == nullptr) {
		(*this)._method_push_err(_222473_si->_field_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_222473_si->_field_ident._field_kind)}));
		return nullptr;
	}
	if (_226817_m->_field_params[0LL]->_method_is_ref() && (!(_222492_ref))) {
		(*this)._method_push_err(_222473_si->_field_ident,jule::Str("reference method cannot use with non-reference instance", 55),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_2185d51ad_FnIns> _227817_ins = _226817_m->_method_instance();
	_227817_ins->_field_owner=_222458_s;
	(*this)._method_push_reference_to_fn(_227817_ins);
	_222444_d->_field_model=jule::Any(jule::new_struct<_2188586ea_StructSubIdentExprModel>(new( std::nothrow ) _2188586ea_StructSubIdentExprModel(_222444_d->_field_model,_222444_d->_field_kind,_227817_ins,jule::Ptr<_23461aa35_FieldIns>())));
	_222444_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_227817_ins));
	return _222444_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_slice_sub_ident(jule::Ptr<_218751758_Data> _229043_d,_2336ea198_Token _229053_ident) {
	{
		auto _match_expr{ _229053_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4882684880; }
		_case_begin_4882684880:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_229043_d->_field_kind,_229043_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882682048;
		_case_end_4882684880:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_4882684576; }
		_case_begin_4882684576:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_229043_d->_field_kind,_229043_d->_field_model,jule::Str("cap()", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882682048;
		_case_end_4882684576:;
		_case_begin_4882681568:;
		{
			(*this)._method_push_err(_229053_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_229053_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882682048;
		_case_end_4882681568:;
		_match_end_4882682048:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_array_sub_ident(jule::Ptr<_218751758_Data> _232043_d,_2336ea198_Token _232053_ident) {
	{
		auto _match_expr{ _232053_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4882696544; }
		_case_begin_4882696544:;
		{
			jule::Ptr<_1d68bd462_Const> _232321_c = _1d68bd462_Const::_static_method_new_i64(static_cast<jule::I64>(_232043_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_232321_c),jule::Bool(),_232321_c));
		}
		goto _match_end_4882693712;
		_case_end_4882696544:;
		_case_begin_4882693232:;
		{
			(*this)._method_push_err(_232053_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_232053_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882693712;
		_case_end_4882693232:;
		_match_end_4882693712:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_map_sub_ident(jule::Ptr<_218751758_Data> _233741_d,_2336ea198_Token _233751_ident) {
	jule::Ptr<_200d010d9_Map> _233817_map_kind = _233741_d->_field_kind->_method_map();
	{
		auto _match_expr{ _233751_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4882706816; }
		_case_begin_4882706816:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_233741_d->_field_kind,_233741_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882704352;
		_case_end_4882706816:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_4882706912; }
		_case_begin_4882706912:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>(),jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),_233741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_233741_d->_field_kind,_233741_d->_field_model,jule::Str("clear", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882704352;
		_case_end_4882706912:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_4882707008; }
		_case_begin_4882707008:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_233817_map_kind->_field_key)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),_233741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_233741_d->_field_kind,_233741_d->_field_model,jule::Str("keys", 4)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882704352;
		_case_end_4882707008:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_4882707312; }
		_case_begin_4882707312:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_233817_map_kind->_field_val)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),_233741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_233741_d->_field_kind,_233741_d->_field_model,jule::Str("values", 6)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882704352;
		_case_end_4882707312:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_4882707408; }
		_case_begin_4882707408:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("key", 3))),_233817_map_kind->_field_key))}),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),_233741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_233741_d->_field_kind,_233741_d->_field_model,jule::Str("has", 3)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882704352;
		_case_end_4882707408:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_4882707504; }
		_case_begin_4882707504:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("key", 3))),_233817_map_kind->_field_key))}),jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common_mut),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),_233741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_233741_d->_field_kind,_233741_d->_field_model,jule::Str("del", 3)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882704352;
		_case_end_4882707504:;
		_case_begin_4882703120:;
		{
			(*this)._method_push_err(_233751_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_233751_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882704352;
		_case_end_4882703120:;
		_match_end_4882704352:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_str_sub_ident(jule::Ptr<_218751758_Data> _246041_d,_2336ea198_Token _246051_ident) {
	jule::Ptr<_200d010d9_TypeKind> _246117_str_kind = jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("str", 3))));
	{
		auto _match_expr{ _246051_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_4882735392; }
		_case_begin_4882735392:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("len()", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882735392:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_4882735520; }
		_case_begin_4882735520:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("sub", 3))),_246117_str_kind))}),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("has_prefix", 10)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882735520:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_4882735712; }
		_case_begin_4882735712:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("sub", 3))),_246117_str_kind))}),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("has_suffix", 10)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882735712:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_4882735808; }
		_case_begin_4882735808:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("sub", 3))),_246117_str_kind))}),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("find", 4)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882735808:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_4882735904; }
		_case_begin_4882735904:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("sub", 3))),_246117_str_kind))}),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("rfind", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882735904:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_4882733120; }
		_case_begin_4882733120:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("bytes", 5))),_246117_str_kind))}),_246117_str_kind,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("trim", 4)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882733120:;
		if (!((jule::Str("ltrim", 5)) == _match_expr)) { goto _case_end_4882733216; }
		_case_begin_4882733216:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("bytes", 5))),_246117_str_kind))}),_246117_str_kind,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("ltrim", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882733216:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_4882733312; }
		_case_begin_4882733312:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("bytes", 5))),_246117_str_kind))}),_246117_str_kind,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("rtrim", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882733312:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_4882733408; }
		_case_begin_4882733408:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("sub", 3))),_246117_str_kind)),jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_246117_str_kind)))),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("split", 5)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882733408:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_4882736064; }
		_case_begin_4882736064:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("sub", 3))),_246117_str_kind)),jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("new", 3))),_246117_str_kind)),jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3))))))}),_246117_str_kind,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common),jule::Bool(),jule::Bool())))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_CommonSubIdentExprModel>(new( std::nothrow ) _2188586ea_CommonSubIdentExprModel(_246041_d->_field_kind,_246041_d->_field_model,jule::Str("replace", 7)))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4882732768;
		_case_end_4882736064:;
		_case_begin_4882731248:;
		{
			(*this)._method_push_err(_246051_ident,jule::Str("object is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_246051_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882732768;
		_case_end_4882731248:;
		_match_end_4882732768:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_int_type_static(_2336ea198_Token _270939_ident) {
	
	{
		auto _match_expr{ _270939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882780720; }
		_case_begin_4882780720:;
		{
			jule::Ptr<_1d68bd462_Const> _271421_c = _1d68bd462_Const::_static_method_new_i64(static_cast<jule::I64>(_1d68ca88c_max(jule::Str("int", 3))));
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_271421_c),jule::Bool(),_271421_c));
		}
		goto _match_end_4882777680;
		_case_end_4882780720:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882780416; }
		_case_begin_4882780416:;
		{
			jule::Ptr<_1d68bd462_Const> _272221_c = _1d68bd462_Const::_static_method_new_i64(static_cast<jule::I64>(_1d68ca88c_min(jule::Str("int", 3))));
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_272221_c),jule::Bool(),_272221_c));
		}
		goto _match_end_4882777680;
		_case_end_4882780416:;
		_case_begin_4882776608:;
		{
			(*this)._method_push_err(_270939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_270939_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882777680;
		_case_end_4882776608:;
		_match_end_4882777680:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_uint_type_static(_2336ea198_Token _273540_ident) {
	
	{
		auto _match_expr{ _273540_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882792672; }
		_case_begin_4882792672:;
		{
			jule::Ptr<_1d68bd462_Const> _274021_c = _1d68bd462_Const::_static_method_new_u64(static_cast<jule::U64>(_1d68ca88c_max(jule::Str("uint", 4))));
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_274021_c),jule::Bool(),_274021_c));
		}
		goto _match_end_4882789632;
		_case_end_4882792672:;
		_case_begin_4882788560:;
		{
			(*this)._method_push_err(_273540_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_273540_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882789632;
		_case_end_4882788560:;
		_match_end_4882789632:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_i8_type_static(_2336ea198_Token _275338_ident) {
	
	
	
	{
		auto _match_expr{ _275338_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882802608; }
		_case_begin_4882802608:;
		{
			jule::Ptr<_1d68bd462_Const> _276021_c = _1d68bd462_Const::_static_method_new_i64(127LL);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276021_c),jule::Bool(),_276021_c));
		}
		goto _match_end_4882800448;
		_case_end_4882802608:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882020560; }
		_case_begin_4882020560:;
		{
			jule::Ptr<_1d68bd462_Const> _276821_c = _1d68bd462_Const::_static_method_new_i64(-128LL);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i8", 2)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_276821_c),jule::Bool(),_276821_c));
		}
		goto _match_end_4882800448;
		_case_end_4882020560:;
		_case_begin_4882798992:;
		{
			(*this)._method_push_err(_275338_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_275338_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882800448;
		_case_end_4882798992:;
		_match_end_4882800448:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_i16_type_static(_2336ea198_Token _278139_ident) {
	
	
	
	{
		auto _match_expr{ _278139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882815552; }
		_case_begin_4882815552:;
		{
			jule::Ptr<_1d68bd462_Const> _278821_c = _1d68bd462_Const::_static_method_new_i64(32767LL);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_278821_c),jule::Bool(),_278821_c));
		}
		goto _match_end_4882812448;
		_case_end_4882815552:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882815248; }
		_case_begin_4882815248:;
		{
			jule::Ptr<_1d68bd462_Const> _279621_c = _1d68bd462_Const::_static_method_new_i64(-32768LL);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i16", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_279621_c),jule::Bool(),_279621_c));
		}
		goto _match_end_4882812448;
		_case_end_4882815248:;
		_case_begin_4882811888:;
		{
			(*this)._method_push_err(_278139_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_278139_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882812448;
		_case_end_4882811888:;
		_match_end_4882812448:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_i32_type_static(_2336ea198_Token _280939_ident) {
	
	
	
	{
		auto _match_expr{ _280939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882829200; }
		_case_begin_4882829200:;
		{
			jule::Ptr<_1d68bd462_Const> _281621_c = _1d68bd462_Const::_static_method_new_i64(2147483647LL);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_281621_c),jule::Bool(),_281621_c));
		}
		goto _match_end_4882826096;
		_case_end_4882829200:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882828896; }
		_case_begin_4882828896:;
		{
			jule::Ptr<_1d68bd462_Const> _282421_c = _1d68bd462_Const::_static_method_new_i64(-2147483648LL);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i32", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_282421_c),jule::Bool(),_282421_c));
		}
		goto _match_end_4882826096;
		_case_end_4882828896:;
		_case_begin_4882824640:;
		{
			(*this)._method_push_err(_280939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_280939_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882826096;
		_case_end_4882824640:;
		_match_end_4882826096:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_i64_type_static(_2336ea198_Token _283739_ident) {
	
	
	
	{
		auto _match_expr{ _283739_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882842080; }
		_case_begin_4882842080:;
		{
			jule::Ptr<_1d68bd462_Const> _284421_c = _1d68bd462_Const::_static_method_new_i64(jule::MAX_I64);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_284421_c),jule::Bool(),_284421_c));
		}
		goto _match_end_4882838976;
		_case_end_4882842080:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882841776; }
		_case_begin_4882841776:;
		{
			jule::Ptr<_1d68bd462_Const> _285221_c = _1d68bd462_Const::_static_method_new_i64(jule::MIN_I64);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("i64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_285221_c),jule::Bool(),_285221_c));
		}
		goto _match_end_4882838976;
		_case_end_4882841776:;
		_case_begin_4882837584:;
		{
			(*this)._method_push_err(_283739_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_283739_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882838976;
		_case_end_4882837584:;
		_match_end_4882838976:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_u8_type_static(_2336ea198_Token _286538_ident) {
	
	
	{
		auto _match_expr{ _286538_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882854112; }
		_case_begin_4882854112:;
		{
			jule::Ptr<_1d68bd462_Const> _287121_c = _1d68bd462_Const::_static_method_new_u64(255LLU);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u8", 2)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_287121_c),jule::Bool(),_287121_c));
		}
		goto _match_end_4882850944;
		_case_end_4882854112:;
		_case_begin_4882849408:;
		{
			(*this)._method_push_err(_286538_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_286538_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882850944;
		_case_end_4882849408:;
		_match_end_4882850944:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_u16_type_static(_2336ea198_Token _288439_ident) {
	
	
	{
		auto _match_expr{ _288439_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882863568; }
		_case_begin_4882863568:;
		{
			jule::Ptr<_1d68bd462_Const> _289021_c = _1d68bd462_Const::_static_method_new_u64(65535LLU);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u16", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_289021_c),jule::Bool(),_289021_c));
		}
		goto _match_end_4882860400;
		_case_end_4882863568:;
		_case_begin_4882858864:;
		{
			(*this)._method_push_err(_288439_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_288439_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882860400;
		_case_end_4882858864:;
		_match_end_4882860400:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_u32_type_static(_2336ea198_Token _290339_ident) {
	
	
	{
		auto _match_expr{ _290339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882873024; }
		_case_begin_4882873024:;
		{
			jule::Ptr<_1d68bd462_Const> _290921_c = _1d68bd462_Const::_static_method_new_u64(4294967295LLU);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u32", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_290921_c),jule::Bool(),_290921_c));
		}
		goto _match_end_4882869856;
		_case_end_4882873024:;
		_case_begin_4882868320:;
		{
			(*this)._method_push_err(_290339_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_290339_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882869856;
		_case_end_4882868320:;
		_match_end_4882869856:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_u64_type_static(_2336ea198_Token _292239_ident) {
	
	
	{
		auto _match_expr{ _292239_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882882416; }
		_case_begin_4882882416:;
		{
			jule::Ptr<_1d68bd462_Const> _292821_c = _1d68bd462_Const::_static_method_new_u64(jule::MAX_U64);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("u64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_292821_c),jule::Bool(),_292821_c));
		}
		goto _match_end_4882879248;
		_case_end_4882882416:;
		_case_begin_4882877776:;
		{
			(*this)._method_push_err(_292239_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_292239_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882879248;
		_case_end_4882877776:;
		_match_end_4882879248:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_f32_type_tatic(_2336ea198_Token _294138_ident) {
	
	
	
	{
		auto _match_expr{ _294138_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882892848; }
		_case_begin_4882892848:;
		{
			jule::Ptr<_1d68bd462_Const> _294821_c = _1d68bd462_Const::_static_method_new_f64(340282346638528860000000000000000000000.0);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_294821_c),jule::Bool(),_294821_c));
		}
		goto _match_end_4882889744;
		_case_end_4882892848:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882892544; }
		_case_begin_4882892544:;
		{
			jule::Ptr<_1d68bd462_Const> _295621_c = _1d68bd462_Const::_static_method_new_f64(-340282346638528860000000000000000000000.0);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("f32", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_295621_c),jule::Bool(),_295621_c));
		}
		goto _match_end_4882889744;
		_case_end_4882892544:;
		_case_begin_4882888384:;
		{
			(*this)._method_push_err(_294138_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_294138_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882889744;
		_case_end_4882888384:;
		_match_end_4882889744:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_f64_type_static(_2336ea198_Token _296939_ident) {
	
	
	
	{
		auto _match_expr{ _296939_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_4882905600; }
		_case_begin_4882905600:;
		{
			jule::Ptr<_1d68bd462_Const> _297621_c = _1d68bd462_Const::_static_method_new_f64(jule::MAX_F64);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_297621_c),jule::Bool(),_297621_c));
		}
		goto _match_end_4882902496;
		_case_end_4882905600:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_4882905296; }
		_case_begin_4882905296:;
		{
			jule::Ptr<_1d68bd462_Const> _298421_c = _1d68bd462_Const::_static_method_new_f64(jule::MIN_F64);
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("f64", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_298421_c),jule::Bool(),_298421_c));
		}
		goto _match_end_4882902496;
		_case_end_4882905296:;
		_case_begin_4882902192:;
		{
			(*this)._method_push_err(_296939_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_296939_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882902496;
		_case_end_4882902192:;
		_match_end_4882902496:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_prim_static(jule::Str _299735_kind,_2336ea198_Token _299746_ident) {
	{
		auto _match_expr{ _299735_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4882916448; }
		_case_begin_4882916448:;
		{
			return (*this)._method_eval_int_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882916448:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_4882916640; }
		_case_begin_4882916640:;
		{
			return (*this)._method_eval_uint_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882916640:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4882916736; }
		_case_begin_4882916736:;
		{
			return (*this)._method_eval_i8_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882916736:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4882916832; }
		_case_begin_4882916832:;
		{
			return (*this)._method_eval_i16_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882916832:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4882913936; }
		_case_begin_4882913936:;
		{
			return (*this)._method_eval_i32_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882913936:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4882914032; }
		_case_begin_4882914032:;
		{
			return (*this)._method_eval_i64_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882914032:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4882914128; }
		_case_begin_4882914128:;
		{
			return (*this)._method_eval_u8_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882914128:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4882914224; }
		_case_begin_4882914224:;
		{
			return (*this)._method_eval_u16_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882914224:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4882916992; }
		_case_begin_4882916992:;
		{
			return (*this)._method_eval_u32_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882916992:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4882917088; }
		_case_begin_4882917088:;
		{
			return (*this)._method_eval_u64_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882917088:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4882917184; }
		_case_begin_4882917184:;
		{
			return (*this)._method_eval_f32_type_tatic(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882917184:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4882917280; }
		_case_begin_4882917280:;
		{
			return (*this)._method_eval_f64_type_static(_299746_ident);
		}
		goto _match_end_4882913232;
		_case_end_4882917280:;
		_case_begin_4882913136:;
		{
			(*this)._method_push_err(_299746_ident,jule::Str("type @ is not have sub field in this identifier: @", 50),jule::Slice<jule::Any>({jule::Any(_299735_kind),jule::Any(_299746_ident._field_kind)}));
			return nullptr;
		}
		goto _match_end_4882913232;
		_case_end_4882913136:;
		_match_end_4882913232:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_type_static(jule::Ptr<_218751758_Data> _301739_d,jule::Ptr<_233464770_SubIdentExpr> _301753_si) {
	{
		if (!((_301739_d->_field_kind->_method_prim() != nullptr))) { goto _case_end_4882934560; }
		_case_begin_4882934560:;
		{
			return (*this)._method_eval_prim_static(_301739_d->_field_kind->_method_prim()->_method_to_str(),_301753_si->_field_ident);
		}
		goto _match_end_4882931232;
		_case_end_4882934560:;
		if (!((_301739_d->_field_kind->_method_enm() != nullptr))) { goto _case_end_4882934256; }
		_case_begin_4882934256:;
		{
			return (*this)._method_eval_enum_static(_301739_d->_field_kind->_method_enm(),_301753_si->_field_ident);
		}
		goto _match_end_4882931232;
		_case_end_4882934256:;
		if (!((_301739_d->_field_kind->_method_strct() != nullptr))) { goto _case_end_4882934352; }
		_case_begin_4882934352:;
		{
			return (*this)._method_eval_struct_static(_301739_d->_field_kind->_method_strct(),_301753_si->_field_ident);
		}
		goto _match_end_4882931232;
		_case_end_4882934352:;
		_case_begin_4882931376:;
		{
			(*this)._method_push_err(_301753_si->_field_ident,jule::Str("type @ is not supports sub fields", 33),jule::Slice<jule::Any>({jule::Any(_301739_d->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4882931232;
		_case_end_4882931376:;
		_match_end_4882931232:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_obj_sub_ident(jule::Ptr<_218751758_Data> _303441_d,jule::Ptr<_233464770_SubIdentExpr> _303455_si) {
	jule::Ptr<_200d010d9_TypeKind> _303517_kind = _303441_d->_field_kind;
	if (_303441_d->_field_kind->_method_ptr() != nullptr) {
		jule::Ptr<_200d010d9_Ptr> _303717_ptr = _303441_d->_field_kind->_method_ptr();
		if ((!(_303717_ptr->_method_is_unsafe()))) {
			if ((!(_303455_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_303455_si->_field_ident,jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54),jule::Slice<jule::Any>({}));
			}
			_303517_kind=_303441_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (_303441_d->_field_kind->_method_sptr() != nullptr) {
		_303517_kind=_303441_d->_field_kind->_method_sptr()->_field_elem;
	}
	{
		if (!((_303441_d->_field_kind->_method_trt() != nullptr))) { goto _case_end_4882953312; }
		_case_begin_4882953312:;
		{
			return (*this)._method_eval_trait_sub_ident(_303441_d,_303441_d->_field_kind->_method_trt(),_303455_si->_field_ident);
		}
		goto _match_end_4882951920;
		_case_end_4882953312:;
		if (!((_303517_kind->_method_strct() != nullptr))) { goto _case_end_4882953408; }
		_case_begin_4882953408:;
		{
			jule::Ptr<_23461aa35_StructIns> _305317_s = _303517_kind->_method_strct();
			if (_218751758_is_instanced_struct(_305317_s)) {
				jule::Bool _305525_used_reference_elem = _303441_d->_field_kind->_method_sptr() != nullptr;
				return (*this)._method_eval_struct_sub_ident(_303441_d,_303517_kind->_method_strct(),_303455_si,_305525_used_reference_elem);
			}
		}
		goto _match_end_4882951920;
		_case_end_4882953408:;
		if (!((_303517_kind->_method_slc() != nullptr))) { goto _case_end_4882953504; }
		_case_begin_4882953504:;
		{
			return (*this)._method_eval_slice_sub_ident(_303441_d,_303455_si->_field_ident);
		}
		goto _match_end_4882951920;
		_case_end_4882953504:;
		if (!((_303517_kind->_method_arr() != nullptr))) { goto _case_end_4882953600; }
		_case_begin_4882953600:;
		{
			return (*this)._method_eval_array_sub_ident(_303441_d,_303455_si->_field_ident);
		}
		goto _match_end_4882951920;
		_case_end_4882953600:;
		if (!((_303517_kind->_method_map() != nullptr))) { goto _case_end_4882953696; }
		_case_begin_4882953696:;
		{
			return (*this)._method_eval_map_sub_ident(_303441_d,_303455_si->_field_ident);
		}
		goto _match_end_4882951920;
		_case_end_4882953696:;
		if (!((_303517_kind->_method_prim() != nullptr))) { goto _case_end_4882953792; }
		_case_begin_4882953792:;
		{
			jule::Ptr<_200d010d9_Prim> _306917_p = _303517_kind->_method_prim();
			{
				auto _match_expr{ _306917_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4882961632; }
				_case_begin_4882961632:;
				{
					return (*this)._method_eval_str_sub_ident(_303441_d,_303455_si->_field_ident);
				}
				goto _match_end_4882968768;
				_case_end_4882961632:;
				_match_end_4882968768:;
			}
		}
		goto _match_end_4882951920;
		_case_end_4882953792:;
		_match_end_4882951920:;
	}
	(*this)._method_push_err(_303455_si->_field_ident,jule::Str("object @ is not supports sub fields", 35),jule::Slice<jule::Any>({jule::Any(_303441_d->_field_kind->_method_to_str())}));
	return nullptr;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_sub_ident(jule::Ptr<_233464770_SubIdentExpr> _308038_si) {
	jule::Ptr<_200d010d9_TypeKind> _308117_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_308117_prefix;
	});
	jule::Ptr<_218751758_Data> _308517_d = this->self->_method_eval_expr_kind(_308038_si->_field_expr);
	if (_308517_d == nullptr) {
		return nullptr;
	}
	if (_308517_d->_field_decl) {
		return this->self->_method_eval_type_static(_308517_d,_308038_si);
	}
	return this->self->_method_eval_obj_sub_ident(_308517_d,_308038_si);
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_tuple(jule::Ptr<_233464770_TupleExpr> _309734_tup) {
	jule::Ptr<_200d010d9_Tuple> _309817_tup_t = jule::new_struct_ptr<_200d010d9_Tuple>(new( std::nothrow ) _200d010d9_Tuple());
	_309817_tup_t->_field_types=jule::Slice<jule::Ptr<_200d010d9_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_309734_tup->_field_expr.len()));
	jule::Ptr<_2188586ea_TupleExprModel> _310117_model = jule::new_struct<_2188586ea_TupleExprModel>(new( std::nothrow ) _2188586ea_TupleExprModel(jule::Slice<jule::Ptr<_218751758_Data>>::alloc(0LL,static_cast<jule::I64>(_309734_tup->_field_expr.len()))));
	jule::Bool _310517_ok = true;
	{
		auto expr = _309734_tup->_field_expr;
		auto it = expr.begin();
		_iter_begin_4882988880:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Expr> _218751758_expr = *it;
			{
				jule::Ptr<_218751758_Data> _310721_d = this->self->_method_eval_expr_kind(_218751758_expr->_field_kind);
				if (_310721_d == nullptr) {
					_310517_ok=false;
					goto _iter_next_4882988880;
				}
				_309817_tup_t->_field_types=jule::append(_309817_tup_t->_field_types,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>({_310721_d->_field_kind}));
				_310117_model->_field_datas=jule::append(_310117_model->_field_datas,jule::Slice<jule::Ptr<_218751758_Data>>({_310721_d}));
			}
			_iter_next_4882988880:;
			++it;
			goto _iter_begin_4882988880;
		}
		_iter_end_4882988880:;
	}
	if ((!(_310517_ok))) {
		return nullptr;
	}
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_309817_tup_t)),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(_310117_model),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_map(jule::Ptr<_200d010d9_Map> _312632_m,jule::Ptr<_233464770_BraceLit> _312645_lit) {
	jule::Ptr<_2188586ea_MapExprModel> _312717_model = jule::new_struct<_2188586ea_MapExprModel>(new( std::nothrow ) _2188586ea_MapExprModel(_312632_m->_field_key,_312632_m->_field_val,jule::Slice<jule::Ptr<_2188586ea_KeyValPairExprModel>>()));
	{
		auto expr = _312645_lit->_field_exprs;
		auto it = expr.begin();
		_iter_begin_4883000736:;
		if (it != expr.end()) {
			jule::Any _218751758_expr = *it;
			{
				{
					auto _match_expr{ _218751758_expr };
					if (!(_match_expr.type_is<jule::Ptr<_233464770_KeyValPair>>())) { goto _case_end_4883004128; }
					goto _match_end_4883002352;
					_case_end_4883004128:;
					_case_begin_4883001904:;
					{
						this->self->_method_push_err(_312645_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						return nullptr;
					}
					goto _match_end_4883002352;
					_case_end_4883001904:;
					_match_end_4883002352:;
				}
				jule::Ptr<_233464770_KeyValPair> _314221_pair = _218751758_expr.operator jule::Ptr<_233464770_KeyValPair>();
				jule::Ptr<_218751758_Data> _314421_key = this->self->_method_eval_expr_kind(_314221_pair->_field_key);
				if (_314421_key == nullptr) {
					return nullptr;
				}
				jule::Ptr<_218751758_Data> _314921_val = this->self->_method_eval_expr_kind(_314221_pair->_field_val);
				if (_314921_val == nullptr) {
					return nullptr;
				}
				this->self->_field_s->_method_check_assign_type(false,_312632_m->_field_key,_314421_key,_314221_pair->_field_colon);
				this->self->_field_s->_method_check_assign_type(false,_312632_m->_field_val,_314921_val,_314221_pair->_field_colon);
				_312717_model->_field_entries=jule::append(_312717_model->_field_entries,jule::Slice<jule::Ptr<_2188586ea_KeyValPairExprModel>>({jule::new_struct<_2188586ea_KeyValPairExprModel>(new( std::nothrow ) _2188586ea_KeyValPairExprModel(_314421_key->_field_model,_314921_val->_field_model))}));
			}
			_iter_next_4883000736:;
			++it;
			goto _iter_begin_4883000736;
		}
		_iter_end_4883000736:;
	}
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_312632_m)),jule::Ptr<_200d010d9_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),jule::Any(_312717_model),false,jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_brace_lit(jule::Ptr<_233464770_BraceLit> _317338_lit) {
	{
		if (!((this->self->_field_prefix == nullptr))) { goto _case_end_4883019616; }
		_case_begin_4883019616:;
		{
			this->self->_method_push_err(_317338_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4883017584;
		_case_end_4883019616:;
		if (!((this->self->_field_prefix->_method_map() != nullptr))) { goto _case_end_4883020112; }
		_case_begin_4883020112:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_317338_lit);
		}
		goto _match_end_4883017584;
		_case_end_4883020112:;
		if (!((this->self->_field_prefix->_method_strct() != nullptr))) { goto _case_end_4883020208; }
		_case_begin_4883020208:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_317338_lit->_field_exprs,_317338_lit->_field_token);
		}
		goto _match_end_4883017584;
		_case_end_4883020208:;
		_case_begin_4883017760:;
		{
			this->self->_method_push_err(_317338_lit->_field_token,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4883017584;
		_case_end_4883017760:;
		_match_end_4883017584:;
	}
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_anon_fn(jule::Ptr<_233464770_FnDecl> _319135_decl) {
	_200d010d9_TypeChecker _319217_tc = _200d010d9_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ptr<_200d010d9_Referencer>(),_2336ea198_Token(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>(),jule::Bool());
	jule::Ptr<_2185d51ad_FnIns> _319617_ins = _319217_tc._method_build_fn(_319135_decl);
	_319617_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ScopeChecker>>())) { goto _case_end_4883034832; }
		_case_begin_4883034832:;
		{
			jule::Ptr<_2186ce186_ScopeChecker> _320121_sc = (*this)._field_lookup.operator jule::Ptr<_2186ce186_ScopeChecker>();
			jule::Ptr<_2186ce186_ScopeChecker> _320221_scc = _320121_sc->_method_new_child_checker();
			_320221_scc->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>>(nullptr);
			_320221_scc->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>>(nullptr);
			_320221_scc->_field_owner=nullptr;
			_320221_scc->_field_child_index=0LL;
			_320221_scc->_field_it=0LL;
			_320221_scc->_field_cse=0LL;
			_320221_scc->_field_owner=_319617_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_319617_ins,_320221_scc);
		}
		goto _match_end_4883033088;
		_case_end_4883034832:;
		_case_begin_4883030016:;
		{
			(*this)._field_s->_method_check_fn_ins(_319617_ins);
		}
		goto _match_end_4883033088;
		_case_end_4883030016:;
		_match_end_4883033088:;
	}
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_319617_ins)),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_AnonFnExprModel>(new( std::nothrow ) _2188586ea_AnonFnExprModel(_319617_ins,(*this)._method_is_global()))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_binop(jule::Ptr<_233464770_BinopExpr> _322534_op) {
	jule::Ptr<_200d010d9_TypeKind> _322617_prefix = this->self->_field_prefix;
	this->self->_field_prefix=nullptr;
	__JULE_DEFER({
		this->self->_field_prefix=_322617_prefix;
	});
	_218751758_BinopSolver _323017_bs = _218751758_BinopSolver(this->self,jule::Ptr<_218751758_Data>(),jule::Ptr<_218751758_Data>(),_2336ea198_Token());
	return _323017_bs._method_solve(_322534_op);
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_ternary(jule::Ptr<_233464770_TernaryExpr> _323636_ter) {
	jule::Ptr<_218751758_Data> _323717_d = this->self->_method_eval_expr_kind(_323636_ter->_field_condition);
	if (_323717_d == nullptr) {
		return nullptr;
	}
	jule::Ptr<_200d010d9_Prim> _324213_prim = _323717_d->_field_kind->_method_prim();
	if ((_324213_prim == nullptr) || (!(_324213_prim->_method_is_bool()))) {
		this->self->_method_push_err(_323636_ter->_field_token,jule::Str("if conditions must be have boolean expression", 45),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _324817_td = this->self->_method_eval_expr_kind(_323636_ter->_field_true_expr);
	if (_324817_td == nullptr) {
		return nullptr;
	}
	if (_324817_td->_field_kind->_method_void()) {
		this->self->_method_push_err(_323636_ter->_field_token,jule::Str("void type cannot used for ternary operator", 42),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_200d010d9_TypeKind> _325817_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_324817_td->_field_kind;
	jule::Ptr<_218751758_Data> _326117_fd = this->self->_method_eval_expr_kind(_323636_ter->_field_false_expr);
	this->self->_field_prefix=_325817_prefix;
	if (_326117_fd == nullptr) {
		return nullptr;
	}
	_200c5bcc0_AssignTypeChecker _326817_ac = _200c5bcc0_AssignTypeChecker(this->self->_field_s,jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_218751758_Data>(),_323636_ter->_field_token);
	if (_324817_td->_method_is_const() && (!(_326117_fd->_method_is_const()))) {
		_326817_ac._field_dest=_326117_fd->_field_kind;
		_326817_ac._field_d=_324817_td;
	} else {
		_326817_ac._field_dest=_324817_td->_field_kind;
		_326817_ac._field_d=_326117_fd;
	}
	if ((!(_326817_ac._method_check()))) {
		this->self->_method_push_suggestion(jule::Str("use same or compatible values for ternary expressions", 53),jule::Slice<jule::Any>({}));
	}
	if (_323717_d->_method_is_const()) {
		if (_323717_d->_field_constant->_method_read_bool()) {
			return _324817_td;
		}
		return _326117_fd;
	}
	jule::Ptr<_218751758_Data> _329017_r = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data());
	_329017_r->_field_kind=_326817_ac._field_dest;
	_329017_r->_field_lvalue=false;
	_329017_r->_field_mutable=_329017_r->_field_kind->_method_mutable();
	_329017_r->_field_model=jule::Any(jule::new_struct<_2188586ea_TernaryExprModel>(new( std::nothrow ) _2188586ea_TernaryExprModel(_323717_d->_field_model,_324817_td->_field_model,_326117_fd->_field_model)));
	return _329017_r;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_expr_kind(jule::Any _330238_kind) {
	jule::Ptr<_218751758_Data> _330317_d = nullptr;
	{
		auto _match_expr{ _330238_kind };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_LitExpr>>())) { goto _case_end_4883081984; }
		_case_begin_4883081984:;
		{
			_330317_d=this->self->_method_eval_lit(_330238_kind.operator jule::Ptr<_233464770_LitExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883081984:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_IdentExpr>>())) { goto _case_end_4883082832; }
		_case_begin_4883082832:;
		{
			_330317_d=this->self->_method_eval_ident(_330238_kind.operator jule::Ptr<_233464770_IdentExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883082832:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_UnaryExpr>>())) { goto _case_end_4883083312; }
		_case_begin_4883083312:;
		{
			_330317_d=this->self->_method_eval_unary(_330238_kind.operator jule::Ptr<_233464770_UnaryExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083312:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_VariadicExpr>>())) { goto _case_end_4883083408; }
		_case_begin_4883083408:;
		{
			_330317_d=this->self->_method_eval_variadic(_330238_kind.operator jule::Ptr<_233464770_VariadicExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083408:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_UnsafeExpr>>())) { goto _case_end_4883083504; }
		_case_begin_4883083504:;
		{
			_330317_d=this->self->_method_eval_unsafe(_330238_kind.operator jule::Ptr<_233464770_UnsafeExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083504:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_SliceExpr>>())) { goto _case_end_4883083600; }
		_case_begin_4883083600:;
		{
			_330317_d=this->self->_method_eval_slice_expr(_330238_kind.operator jule::Ptr<_233464770_SliceExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083600:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_IndexingExpr>>())) { goto _case_end_4883083696; }
		_case_begin_4883083696:;
		{
			_330317_d=this->self->_method_eval_indexing(_330238_kind.operator jule::Ptr<_233464770_IndexingExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083696:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_SlicingExpr>>())) { goto _case_end_4883083792; }
		_case_begin_4883083792:;
		{
			_330317_d=this->self->_method_eval_slicing(_330238_kind.operator jule::Ptr<_233464770_SlicingExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083792:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_CastExpr>>())) { goto _case_end_4883083888; }
		_case_begin_4883083888:;
		{
			_330317_d=this->self->_method_eval_cast(_330238_kind.operator jule::Ptr<_233464770_CastExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083888:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_NsSelectionExpr>>())) { goto _case_end_4883083984; }
		_case_begin_4883083984:;
		{
			_330317_d=this->self->_method_eval_ns_selection(_330238_kind.operator jule::Ptr<_233464770_NsSelectionExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883083984:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_StructLit>>())) { goto _case_end_4883084080; }
		_case_begin_4883084080:;
		{
			_330317_d=this->self->_method_eval_struct_lit(_330238_kind.operator jule::Ptr<_233464770_StructLit>());
		}
		goto _match_end_4883082752;
		_case_end_4883084080:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TypeDecl>>())) { goto _case_end_4883084176; }
		_case_begin_4883084176:;
		{
			_330317_d=this->self->_method_eval_type(_330238_kind.operator jule::Ptr<_233464770_TypeDecl>());
		}
		goto _match_end_4883082752;
		_case_end_4883084176:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnCallExpr>>())) { goto _case_end_4883084288; }
		_case_begin_4883084288:;
		{
			_330317_d=this->self->_method_eval_fn_call(_330238_kind.operator jule::Ptr<_233464770_FnCallExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883084288:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_SubIdentExpr>>())) { goto _case_end_4883084400; }
		_case_begin_4883084400:;
		{
			_330317_d=this->self->_method_eval_sub_ident(_330238_kind.operator jule::Ptr<_233464770_SubIdentExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883084400:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TupleExpr>>())) { goto _case_end_4883084512; }
		_case_begin_4883084512:;
		{
			_330317_d=this->self->_method_eval_tuple(_330238_kind.operator jule::Ptr<_233464770_TupleExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883084512:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_BraceLit>>())) { goto _case_end_4883084624; }
		_case_begin_4883084624:;
		{
			_330317_d=this->self->_method_eval_brace_lit(_330238_kind.operator jule::Ptr<_233464770_BraceLit>());
		}
		goto _match_end_4883082752;
		_case_end_4883084624:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnDecl>>())) { goto _case_end_4883084736; }
		_case_begin_4883084736:;
		{
			_330317_d=this->self->_method_eval_anon_fn(_330238_kind.operator jule::Ptr<_233464770_FnDecl>());
		}
		goto _match_end_4883082752;
		_case_end_4883084736:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_BinopExpr>>())) { goto _case_end_4883084848; }
		_case_begin_4883084848:;
		{
			_330317_d=this->self->_method_eval_binop(_330238_kind.operator jule::Ptr<_233464770_BinopExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883084848:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TernaryExpr>>())) { goto _case_end_4883084960; }
		_case_begin_4883084960:;
		{
			_330317_d=this->self->_method_eval_ternary(_330238_kind.operator jule::Ptr<_233464770_TernaryExpr>());
		}
		goto _match_end_4883082752;
		_case_end_4883084960:;
		_match_end_4883082752:;
	}
	if (_330317_d == nullptr) {
		return nullptr;
	}
	if (_330317_d->_field_kind == nullptr) {
		return _330317_d;
	}
	if ((((_330317_d->_field_cast_kind == nullptr) && _330317_d->_method_is_const()) && (!(_330317_d->_field_is_rune))) && (_330317_d->_field_kind->_method_prim() != nullptr)) {
		{
			if (!((_330317_d->_field_constant->_method_is_i64()))) { goto _case_end_4883116768; }
			_case_begin_4883116768:;
			{
				if (_200c5bcc0_int_assignable(jule::Str("int", 3),_330317_d)) {
					_330317_d->_field_kind->_field_kind=_200d010d9_build_prim_type(jule::Str("int", 3));
					_330317_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_330317_d->_field_constant->_method_as_i64()));
				}
			}
			goto _match_end_4883085968;
			_case_end_4883116768:;
			if (!((_330317_d->_field_constant->_method_is_u64()))) { goto _case_end_4883116880; }
			_case_begin_4883116880:;
			{
				if (_200c5bcc0_int_assignable(jule::Str("uint", 4),_330317_d)) {
					_330317_d->_field_kind->_field_kind=_200d010d9_build_prim_type(jule::Str("uint", 4));
					_330317_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_330317_d->_field_constant->_method_as_u64()));
				}
			}
			goto _match_end_4883085968;
			_case_end_4883116880:;
			_match_end_4883085968:;
		}
	}
	if ((!(_330317_d->_field_decl))) {
		if ((((((((!(_330317_d->_field_kind->_method_cpp_linked())) && (this->self->_field_prefix != nullptr)) && (_330317_d->_field_cast_kind == nullptr)) && (!(_330317_d->_field_variadiced))) && (!(_330317_d->_field_lvalue))) && (!(_330317_d->_method_is_const()))) && (_330317_d->_field_kind->_method_prim() != nullptr)) && _1d68ce6a4_is_num(_330317_d->_field_kind->_method_prim()->_field_kind)) {
			_330317_d->_field_cast_kind=_330317_d->_field_kind;
		}
		_218751758_apply_cast_kind(_330317_d);
		if ((_330317_d->_field_kind->_method_prim() == nullptr) || (!(_330317_d->_field_kind->_method_prim()->_method_is_any()))) {
			if (((this->self->_field_prefix != nullptr) && (this->self->_field_prefix->_method_prim() != nullptr)) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_330317_d->_field_cast_kind=this->self->_field_prefix;
				_218751758_apply_cast_kind_model(_330317_d);
				_330317_d->_field_cast_kind=nullptr;
			}
		}
	}
	return _330317_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval(jule::Ptr<_233464770_Expr> _337928_expr) {
	jule::Ptr<_218751758_Data> _338017_d = this->self->_method_eval_expr_kind(_337928_expr->_field_kind);
	if ((_338017_d == nullptr) || (_338017_d->_field_kind == nullptr)) {
		return nullptr;
	}
	{
		if (!((_338017_d->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4883140960; }
		_case_begin_4883140960:;
		{
			jule::Ptr<_2185d51ad_FnIns> _338721_f = _338017_d->_field_kind->_method_fnc();
			if (_338721_f->_method_is_builtin()) {
				goto _match_end_4883141760;
			}
			if (_338721_f->_field_generics.len() != _338721_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_337928_expr->_field_token,jule::Str("define has generics", 19),jule::Slice<jule::Any>({}));
			}
			if (_338721_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_337928_expr->_field_token,jule::Str("methods should be invoked", 25),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4883141760;
		_case_end_4883140960:;
		_match_end_4883141760:;
	}
	return _338017_d;
}



jule::Ptr<_218751758_Data> _218751758_Eval::_method_eval_expr(jule::Ptr<_233464770_Expr> _340733_expr) {
	jule::Ptr<_218751758_Data> _340817_d = this->self->_method_eval(_340733_expr);
	{
		if (!((_340817_d == nullptr))) { goto _case_end_4883154448; }
		_case_begin_4883154448:;
		{
			return nullptr;
		}
		goto _match_end_4883152992;
		_case_end_4883154448:;
		if (!((_340817_d->_field_decl))) { goto _case_end_4883154544; }
		_case_begin_4883154544:;
		{
			this->self->_method_push_err(_340733_expr->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4883152992;
		_case_end_4883154544:;
		_case_begin_4883153104:;
		{
			return _340817_d;
		}
		goto _match_end_4883152992;
		_case_end_4883153104:;
		_match_end_4883152992:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _218751758_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	jule::Str _6517_kind = jule::Str();
	if ((*this)._field_variadic) {
		_6517_kind+=jule::Str("...", 3);
	}
	if ((*this)._method_cpp_linked()) {
		_6517_kind+=jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	} else {
		_6517_kind+=(*this)._field_kind.get()._method_to_str();
	}
	return _6517_kind;
}



jule::Bool _200d010d9_TypeKind::_method_equals(jule::Ptr<_200d010d9_TypeKind> _8022_other) {
	if (this->self->_method_is_nil()) {
		return _8022_other->_method_is_nil();
	}
	if (this->self->_method_cpp_linked()) {
		if ((!(_8022_other->_method_cpp_linked()))) {
			return false;
		}
		return this->self->_field_cpp_ident == _8022_other->_field_cpp_ident;
	}
	return this->self->_field_kind.get()._method_equals(_8022_other);
}



jule::Ptr<_200d010d9_TypeKind> _200d010d9_TypeKind::_method_clone(void) {
	if (this->self == nullptr) {
		return nullptr;
	}
	jule::Ptr<_200d010d9_TypeKind> _10317_kind = jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(this->self->_field_cpp_ident,jule::Bool(),jule::Bool(),this->self->_field_kind));
	return _10317_kind;
}



jule::Bool _200d010d9_TypeKind::_method_cpp_linked(void) {
	return (*this)._field_cpp_ident.len() != 0LL;
}



jule::Bool _200d010d9_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



jule::Bool _200d010d9_TypeKind::_method_void(void) {
	jule::Ptr<_200d010d9_Prim> _11813_prim = (*((&((*this)))))._method_prim();
	return (_11813_prim != nullptr) && (_11813_prim->_method_to_str() == jule::Str("void", 4));
}



jule::Bool _200d010d9_TypeKind::_method_mutable(void) {
	{
		_200d010d9_TypeKind* _12521__self = (&((*this)));
		if (_12521__self->_method_strct() != nullptr) {
			return _12521__self->_method_strct()->_field_mutable;
		}
		if (_12521__self->_method_trt() != nullptr) {
			return _12521__self->_method_trt()->_field_mutable;
		}
		if (_12521__self->_method_prim() != nullptr) {
			jule::Ptr<_200d010d9_Prim> _13421_p = _12521__self->_method_prim();
			return _13421_p->_method_is_any();
		}
		if (_12521__self->_method_arr() != nullptr) {
			return _12521__self->_method_arr()->_field_elem->_method_mutable();
		}
		return ((_12521__self->_method_slc() != nullptr) || (_12521__self->_method_ptr() != nullptr)) || (_12521__self->_method_sptr() != nullptr);
	}
}



jule::Bool _200d010d9_TypeKind::_method_nil_compatible(void) {
	{
		_200d010d9_TypeKind* _14921__self = (&((*this)));
		jule::Ptr<_200d010d9_Prim> _15117_prim = _14921__self->_method_prim();
		if ((_15117_prim != nullptr) && _15117_prim->_method_is_any()) {
			return true;
		}
		return (((((_14921__self->_method_is_nil() || (_14921__self->_method_fnc() != nullptr)) || (_14921__self->_method_sptr() != nullptr)) || (_14921__self->_method_ptr() != nullptr)) || (_14921__self->_method_trt() != nullptr)) || (_14921__self->_method_slc() != nullptr)) || (_14921__self->_method_map() != nullptr);
	}
}



jule::Bool _200d010d9_TypeKind::_method_supports_cloning(void) {
	{
		_200d010d9_TypeKind* _16921__self = (&((*this)));
		{
			if (!((_16921__self->_method_prim() != nullptr))) { goto _case_end_4883606288; }
			_case_begin_4883606288:;
			{
				return (!(_16921__self->_method_prim()->_method_is_any()));
			}
			goto _match_end_4883604448;
			_case_end_4883606288:;
			if (!((_16921__self->_method_enm() != nullptr))) { goto _case_end_4883606384; }
			_case_begin_4883606384:;
			{
				return true;
			}
			goto _match_end_4883604448;
			_case_end_4883606384:;
			if (!((_16921__self->_method_fnc() != nullptr))) { goto _case_end_4883604848; }
			_case_begin_4883604848:;
			{
				return true;
			}
			goto _match_end_4883604448;
			_case_end_4883604848:;
			if (!((_16921__self->_method_ptr() != nullptr))) { goto _case_end_4883604944; }
			_case_begin_4883604944:;
			{
				return true;
			}
			goto _match_end_4883604448;
			_case_end_4883604944:;
			if (!((_16921__self->_method_slc() != nullptr))) { goto _case_end_4883605040; }
			_case_begin_4883605040:;
			{
				return _16921__self->_method_slc()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4883604448;
			_case_end_4883605040:;
			if (!((_16921__self->_method_map() != nullptr))) { goto _case_end_4883605152; }
			_case_begin_4883605152:;
			{
				jule::Ptr<_200d010d9_Map> _18321_m = _16921__self->_method_map();
				return _18321_m->_field_key->_method_supports_cloning() && _18321_m->_field_val->_method_supports_cloning();
			}
			goto _match_end_4883604448;
			_case_end_4883605152:;
			if (!((_16921__self->_method_arr() != nullptr))) { goto _case_end_4883605536; }
			_case_begin_4883605536:;
			{
				return _16921__self->_method_arr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4883604448;
			_case_end_4883605536:;
			if (!((_16921__self->_method_sptr() != nullptr))) { goto _case_end_4883605648; }
			_case_begin_4883605648:;
			{
				return _16921__self->_method_sptr()->_field_elem->_method_supports_cloning();
			}
			goto _match_end_4883604448;
			_case_end_4883605648:;
			if (!((_16921__self->_method_strct() != nullptr))) { goto _case_end_4883605760; }
			_case_begin_4883605760:;
			{
				jule::Ptr<_23461aa35_StructIns> _19325_s = _16921__self->_method_strct();
				if ((!(_19325_s->_field_mutable))) {
					return true;
				}
				if (((_19325_s->_field_decl == nullptr) || _19325_s->_field_decl->_field_cpp_linked) || (!(_19325_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					return false;
				}
				return true;
			}
			goto _match_end_4883604448;
			_case_end_4883605760:;
			_case_begin_4883604560:;
			{
				return false;
			}
			goto _match_end_4883604448;
			_case_end_4883604560:;
			_match_end_4883604448:;
		}
	}
}



jule::Bool _200d010d9_TypeKind::_method_variadicable(void) {
	{
		_200d010d9_TypeKind* _21321__self = (&((*this)));
		return _21321__self->_method_slc() != nullptr;
	}
}



jule::Ptr<_200d010d9_Prim> _200d010d9_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Prim>>())) { goto _case_end_4883627056; }
		_case_begin_4883627056:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Prim>();
		}
		goto _match_end_4883625872;
		_case_end_4883627056:;
		_case_begin_4883584656:;
		{
			return nullptr;
		}
		goto _match_end_4883625872;
		_case_end_4883584656:;
		_match_end_4883625872:;
	}
}



jule::Ptr<_200d010d9_Sptr> _200d010d9_TypeKind::_method_sptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Sptr>>())) { goto _case_end_4883629840; }
		_case_begin_4883629840:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Sptr>();
		}
		goto _match_end_4883626496;
		_case_end_4883629840:;
		_case_begin_4883628592:;
		{
			return nullptr;
		}
		goto _match_end_4883626496;
		_case_end_4883628592:;
		_match_end_4883626496:;
	}
}



jule::Ptr<_200d010d9_Ptr> _200d010d9_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Ptr>>())) { goto _case_end_4883632784; }
		_case_begin_4883632784:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Ptr>();
		}
		goto _match_end_4883630480;
		_case_end_4883632784:;
		_case_begin_4883630064:;
		{
			return nullptr;
		}
		goto _match_end_4883630480;
		_case_end_4883630064:;
		_match_end_4883630480:;
	}
}



jule::Ptr<_2186be3da_Enum> _200d010d9_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2186be3da_Enum>>())) { goto _case_end_4883635728; }
		_case_begin_4883635728:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2186be3da_Enum>();
		}
		goto _match_end_4883633424;
		_case_end_4883635728:;
		_case_begin_4883633008:;
		{
			return nullptr;
		}
		goto _match_end_4883633424;
		_case_end_4883633008:;
		_match_end_4883633424:;
	}
}



jule::Ptr<_200d010d9_Arr> _200d010d9_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Arr>>())) { goto _case_end_4883638736; }
		_case_begin_4883638736:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Arr>();
		}
		goto _match_end_4883636432;
		_case_end_4883638736:;
		_case_begin_4883635888:;
		{
			return nullptr;
		}
		goto _match_end_4883636432;
		_case_end_4883635888:;
		_match_end_4883636432:;
	}
}



jule::Ptr<_200d010d9_Slc> _200d010d9_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Slc>>())) { goto _case_end_4883641680; }
		_case_begin_4883641680:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Slc>();
		}
		goto _match_end_4883639408;
		_case_end_4883641680:;
		_case_begin_4883639024:;
		{
			return nullptr;
		}
		goto _match_end_4883639408;
		_case_end_4883639024:;
		_match_end_4883639408:;
	}
}



jule::Ptr<_2185d51ad_FnIns> _200d010d9_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4883644720; }
		_case_begin_4883644720:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2185d51ad_FnIns>();
		}
		goto _match_end_4883642224;
		_case_end_4883644720:;
		_case_begin_4881979232:;
		{
			return nullptr;
		}
		goto _match_end_4883642224;
		_case_end_4881979232:;
		_match_end_4883642224:;
	}
}



jule::Ptr<_23461aa35_StructIns> _200d010d9_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4883647696; }
		_case_begin_4883647696:;
		{
			return (*this)._field_kind.operator jule::Ptr<_23461aa35_StructIns>();
		}
		goto _match_end_4883645392;
		_case_end_4883647696:;
		_case_begin_4883644976:;
		{
			return nullptr;
		}
		goto _match_end_4883645392;
		_case_end_4883644976:;
		_match_end_4883645392:;
	}
}



jule::Ptr<_2185da36c_Trait> _200d010d9_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_2185da36c_Trait>>())) { goto _case_end_4883650704; }
		_case_begin_4883650704:;
		{
			return (*this)._field_kind.operator jule::Ptr<_2185da36c_Trait>();
		}
		goto _match_end_4883648400;
		_case_end_4883650704:;
		_case_begin_4883647856:;
		{
			return nullptr;
		}
		goto _match_end_4883648400;
		_case_end_4883647856:;
		_match_end_4883648400:;
	}
}



jule::Ptr<_200d010d9_Map> _200d010d9_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Map>>())) { goto _case_end_4883653648; }
		_case_begin_4883653648:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Map>();
		}
		goto _match_end_4883651376;
		_case_end_4883653648:;
		_case_begin_4883650992:;
		{
			return nullptr;
		}
		goto _match_end_4883651376;
		_case_end_4883650992:;
		_match_end_4883651376:;
	}
}



jule::Ptr<_200d010d9_Tuple> _200d010d9_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_Tuple>>())) { goto _case_end_4883656656; }
		_case_begin_4883656656:;
		{
			return (*this)._field_kind.operator jule::Ptr<_200d010d9_Tuple>();
		}
		goto _match_end_4883654352;
		_case_end_4883656656:;
		_case_begin_4883653808:;
		{
			return nullptr;
		}
		goto _match_end_4883654352;
		_case_end_4883653808:;
		_match_end_4883654352:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Bool _200d010d9_TypeSymbol::_method_checked(void) {
	return (*this)._field_kind != nullptr;
}



void _200d010d9_TypeSymbol::_method_remove_kind(void) {
	(*this)._field_kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



jule::Bool _200d010d9_Prim::_method_equals(jule::Ptr<_200d010d9_TypeKind> _33222_other) {
	jule::Ptr<_200d010d9_Prim> _33313_prim = (*((&(_33222_other))))->_method_prim();
	if (_33313_prim == nullptr) {
		return false;
	}
	return _1d68c15ca_real_kind_of(this->self->_field_kind) == _1d68c15ca_real_kind_of(_33313_prim->_field_kind);
}



jule::Bool _200d010d9_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



jule::Bool _200d010d9_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



jule::Bool _200d010d9_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



jule::Bool _200d010d9_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



jule::Bool _200d010d9_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



jule::Bool _200d010d9_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



jule::Bool _200d010d9_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



jule::Bool _200d010d9_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



jule::Bool _200d010d9_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



jule::Bool _200d010d9_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



jule::Bool _200d010d9_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



jule::Bool _200d010d9_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



jule::Bool _200d010d9_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



jule::Bool _200d010d9_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



jule::Bool _200d010d9_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



jule::Bool _200d010d9_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Sptr::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



jule::Bool _200d010d9_Sptr::_method_equals(jule::Ptr<_200d010d9_TypeKind> _40122_other) {
	jule::Ptr<_200d010d9_Sptr> _40213_sptr = (*((&(_40122_other))))->_method_sptr();
	if (_40213_sptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_40213_sptr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Sptr &_Src) {
	_Stream << "Sptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



jule::Bool _200d010d9_Slc::_method_equals(jule::Ptr<_200d010d9_TypeKind> _42022_other) {
	jule::Ptr<_200d010d9_Slc> _42113_slc = (*((&(_42022_other))))->_method_slc();
	if (_42113_slc == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_42113_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Tuple::_method_to_str(void) {
	jule::Str _43717_s = jule::Str("(", 1);
	_43717_s+=(*this)._field_types[0LL]->_method_to_str();
	{
		auto expr = (*this)._field_types.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4883707872:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeKind> _200d010d9_t = *it;
			{
				_43717_s+=jule::Str(",", 1);
				_43717_s+=_200d010d9_t->_method_to_str();
			}
			_iter_next_4883707872:;
			++it;
			goto _iter_begin_4883707872;
		}
		_iter_end_4883707872:;
	}
	_43717_s+=jule::Str(")", 1);
	return _43717_s;
}



jule::Bool _200d010d9_Tuple::_method_equals(jule::Ptr<_200d010d9_TypeKind> _44822_other) {
	jule::Ptr<_200d010d9_Tuple> _44913_tup = (*((&(_44822_other))))->_method_tup();
	if (_44913_tup == nullptr) {
		return false;
	}
	if (this->self->_field_types.len() != _44913_tup->_field_types.len()) {
		return false;
	}
	jule::Int _45817_i = 0LL;
	for (; _45817_i < this->self->_field_types.len(); (_45817_i)++) {
		{
			if ((!(this->self->_field_types[_45817_i]->_method_equals(_44913_tup->_field_types[_45817_i])))) {
				return false;
			}
		}
	_iter_next_4883715776:;
	}
	_iter_end_4883715776:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Map::_method_to_str(void) {
	jule::Str _47817_s = jule::Str("[", 1);
	_47817_s+=(*this)._field_key->_method_to_str();
	_47817_s+=jule::Str(":", 1);
	_47817_s+=(*this)._field_val->_method_to_str();
	_47817_s+=jule::Str("]", 1);
	return _47817_s;
}



jule::Bool _200d010d9_Map::_method_equals(jule::Ptr<_200d010d9_TypeKind> _48722_other) {
	jule::Ptr<_200d010d9_Map> _48813_map = (*((&(_48722_other))))->_method_map();
	if (_48813_map == nullptr) {
		return false;
	}
	return this->self->_field_key->_method_equals(_48813_map->_field_key) && this->self->_field_val->_method_equals(_48813_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Arr::_method_to_str(void) {
	jule::Str _50617_s = jule::Str("[", 1);
	_50617_s+=_232e766a0_itoa((*this)._field_n);
	_50617_s+=jule::Str("]", 1);
	_50617_s+=(*this)._field_elem->_method_to_str();
	return _50617_s;
}



jule::Bool _200d010d9_Arr::_method_equals(jule::Ptr<_200d010d9_TypeKind> _51422_other) {
	jule::Ptr<_200d010d9_Arr> _51513_arr = (*((&(_51422_other))))->_method_arr();
	if (_51513_arr == nullptr) {
		return false;
	}
	return (this->self->_field_n == _51513_arr->_field_n) && this->self->_field_elem->_method_equals(_51513_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



jule::Str _200d010d9_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



jule::Bool _200d010d9_Ptr::_method_equals(jule::Ptr<_200d010d9_TypeKind> _53822_other) {
	jule::Ptr<_200d010d9_Ptr> _53913_ptr = (*((&(_53822_other))))->_method_ptr();
	if (_53913_ptr == nullptr) {
		return false;
	}
	return this->self->_field_elem->_method_equals(_53913_ptr->_field_elem);
}



jule::Bool _200d010d9_Ptr::_method_is_unsafe(void) {
	return (*this)._field_elem == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_218848bd5_ImportInfo> _233336642_PlainImporter::_method_get_import(jule::Str _10033_path) {
	{
		auto expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4884283744:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _233336642_p = *it;
			{
				if (_233336642_p->_field_path == _10033_path) {
					return _233336642_p;
				}
			}
			_iter_next_4884283744:;
			++it;
			goto _iter_begin_4884283744;
		}
		_iter_end_4884283744:;
	}
	return nullptr;
}



std::tuple<jule::Slice<jule::Ptr<_23346420e_Ast>>,jule::Slice<_231e4202e_Log>> _233336642_PlainImporter::_method_import_package(jule::Str _11037_path) {
	jule::Slice<jule::Ptr<_233463670_DirEntry>> _11114_dirents;
	jule::Str _11123_err_msg;
	std::tie(_11114_dirents,_11123_err_msg) = _233336642_read_package_dirents(_11037_path);
	if (_11123_err_msg != jule::Str()) {
		jule::Slice<_231e4202e_Log> _11321_errors = jule::Slice<_231e4202e_Log>({_233336642_flat_compiler_err(_11123_err_msg)});
		return std::make_tuple(nullptr,_11321_errors);
	}
	jule::Slice<jule::Ptr<_23346420e_Ast>> _11717_asts = jule::Slice<jule::Ptr<_23346420e_Ast>>::alloc(0LL,static_cast<jule::I64>(_11114_dirents.len()));
	{
		auto expr = _11114_dirents;
		auto it = expr.begin();
		_iter_begin_4884290336:;
		if (it != expr.end()) {
			jule::Ptr<_233463670_DirEntry> _233336642_dirent = *it;
			{
				jule::Str _11917__path = _231ed2cb2_join(jule::Slice<jule::Str>({_11037_path,_233336642_dirent->_field_name}));
				jule::Ptr<_2334d2d3d_File> _12021_file = _2334d2d3d_new_file_set(_11917__path);
				_12021_file->_method_fill(_233336642_read_buff(_12021_file->_method_path()));
				jule::Slice<_231e4202e_Log> _12221_errors = _2334d2db5_lex(_12021_file);
				if (_12221_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12221_errors);
				}
				jule::Ptr<_2334e3821_FileInfo> _12721_finfo = _2334e3821_parse_file(_12021_file);
				if (_12721_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_12721_finfo->_field_errors);
				}
				if ((!(_2330c2a93_is_pass_file_annotation(_233336642_dirent->_field_name)))) {
					goto _iter_next_4884290336;
				}
				if ((!(_233336642_is_pass_build_directives(_12721_finfo->_field_ast)))) {
					goto _iter_next_4884290336;
				}
				_11717_asts=jule::append(_11717_asts,jule::Slice<jule::Ptr<_23346420e_Ast>>({_12721_finfo->_field_ast}));
			}
			_iter_next_4884290336:;
			++it;
			goto _iter_begin_4884290336;
		}
		_iter_end_4884290336:;
	}
	return std::make_tuple(_11717_asts,nullptr);
}



void _233336642_PlainImporter::_method_imported(jule::Ptr<_218848bd5_ImportInfo> _14835_imp) {
	{
		auto expr = (*this)._field_all_packages;
		auto it = expr.begin();
		_iter_begin_4884307648:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _233336642_p = *it;
			{
				if ((_233336642_p->_field_cpp_linked == _14835_imp->_field_cpp_linked) && (_233336642_p->_field_link_path == _14835_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_4884307648:;
			++it;
			goto _iter_begin_4884307648;
		}
		_iter_end_4884307648:;
	}
	(*this)._field_all_packages=jule::append((*this)._field_all_packages,jule::Slice<jule::Ptr<_218848bd5_ImportInfo>>({_14835_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _233336642_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2330c4974_OrderedDefines &_Src) {
	_Stream << "OrderedDefines{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2330c4974_DefineOrderer::_static_method_is_common_ordered_0(jule::Slice<jule::Ptr<_200c58948_Var>>& _1837_s,jule::Ptr<_200c58948_Var> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4884420912:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _2330c4974_tt = *it;
			{
				if (_2330c4974_tt == _1846_t) {
					goto _iter_end_4884420912;
				}
				if (_2330c4974_tt == _1846_t->_field_depends[_1917_j]) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4884420912:;
			++it;
			goto _iter_begin_4884420912;
		}
		_iter_end_4884420912:;
	}
	return false;
}

jule::Bool _2330c4974_DefineOrderer::_static_method_is_common_ordered_1(jule::Slice<jule::Ptr<_23461aa35_Struct>>& _1837_s,jule::Ptr<_23461aa35_Struct> _1846_t) {
	jule::Int _1917_j = 0LL;
	{
		auto expr = _1837_s;
		auto it = expr.begin();
		_iter_begin_4884445456:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _2330c4974_tt = *it;
			{
				if (_2330c4974_tt == _1846_t) {
					goto _iter_end_4884445456;
				}
				if (_2330c4974_tt == _1846_t->_field_depends[_1917_j]) {
					(_1917_j)++;
					if (_1917_j >= _1846_t->_field_depends.len()) {
						return true;
					}
				}
			}
			_iter_next_4884445456:;
			++it;
			goto _iter_begin_4884445456;
		}
		_iter_end_4884445456:;
	}
	return false;
}



void _2330c4974_DefineOrderer::_static_method_order_common_0(jule::Slice<jule::Ptr<_200c58948_Var>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto expr = _3640_s;
		auto it = expr.begin();
		_iter_begin_4884403584:;
		if (it != expr.end()) {
			jule::Int _2330c4974_j = it - expr.begin();
			jule::Ptr<_200c58948_Var> _2330c4974_t = *it;
			{
				if (_2330c4974_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[_3717_i],_3640_s[_2330c4974_j]) = std::make_tuple(_2330c4974_t,_3640_s[_3717_i]);
					(_3717_i)++;
				}
			}
			_iter_next_4884403584:;
			++it;
			_2330c4974_j++;
			goto _iter_begin_4884403584;
		}
		_iter_end_4884403584:;
	}
	jule::Int _4517_j = _3717_i;
	for (; _4517_j < _3640_s.len(); (_4517_j)++) {
		{
			jule::Int _4721_k = _3717_i;
			for (; _4721_k < (_3640_s.len() - 1LL); (_4721_k)++) {
				{
					if ((!(_2330c4974_DefineOrderer::_static_method_is_common_ordered_0(_3640_s,_3640_s[_4721_k])))) {
						std::tie(_3640_s[_4721_k],_3640_s[_4721_k + 1LL]) = std::make_tuple(_3640_s[_4721_k + 1LL],_3640_s[_4721_k]);
					}
				}
			_iter_next_4884410192:;
			}
			_iter_end_4884410192:;
		}
	_iter_next_4884403408:;
	}
	_iter_end_4884403408:;
}

void _2330c4974_DefineOrderer::_static_method_order_common_1(jule::Slice<jule::Ptr<_23461aa35_Struct>>& _3640_s) {
	jule::Int _3717_i = 0LL;
	{
		auto expr = _3640_s;
		auto it = expr.begin();
		_iter_begin_4884428192:;
		if (it != expr.end()) {
			jule::Int _2330c4974_j = it - expr.begin();
			jule::Ptr<_23461aa35_Struct> _2330c4974_t = *it;
			{
				if (_2330c4974_t->_field_depends.len() == 0LL) {
					std::tie(_3640_s[_3717_i],_3640_s[_2330c4974_j]) = std::make_tuple(_2330c4974_t,_3640_s[_3717_i]);
					(_3717_i)++;
				}
			}
			_iter_next_4884428192:;
			++it;
			_2330c4974_j++;
			goto _iter_begin_4884428192;
		}
		_iter_end_4884428192:;
	}
	jule::Int _4517_j = _3717_i;
	for (; _4517_j < _3640_s.len(); (_4517_j)++) {
		{
			jule::Int _4721_k = _3717_i;
			for (; _4721_k < (_3640_s.len() - 1LL); (_4721_k)++) {
				{
					if ((!(_2330c4974_DefineOrderer::_static_method_is_common_ordered_1(_3640_s,_3640_s[_4721_k])))) {
						std::tie(_3640_s[_4721_k],_3640_s[_4721_k + 1LL]) = std::make_tuple(_3640_s[_4721_k + 1LL],_3640_s[_4721_k]);
					}
				}
			_iter_next_4884434800:;
			}
			_iter_end_4884434800:;
		}
	_iter_next_4884428016:;
	}
	_iter_end_4884428016:;
}



void _2330c4974_DefineOrderer::_static_method_order_variables(jule::Slice<jule::Ptr<_200c58948_Var>>& _5840_vars) {
	_2330c4974_DefineOrderer::_static_method_order_common_0(_5840_vars);
}



void _2330c4974_DefineOrderer::_static_method_order_structures(jule::Slice<jule::Ptr<_23461aa35_Struct>>& _6441_structs) {
	_2330c4974_DefineOrderer::_static_method_order_common_1(_6441_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _2330c4974_DefineOrderer &_Src) {
	_Stream << "DefineOrderer{";
	_Stream << "}";
	return _Stream;
}



void _232e769d0_ScopeDeadCode::_method_optimize_child(jule::Ptr<_2186ce186_Scope>& _2239_s) {
	jule::Ptr<_232e769d0_ScopeDeadCode> _2317_sdc = jule::new_struct_ptr<_232e769d0_ScopeDeadCode>(new( std::nothrow ) _232e769d0_ScopeDeadCode(this->self,_2239_s,(&(_2239_s->_field_stmts)),jule::Int()));
	{
		_2317_sdc->_method_optimize_stmts();
	}
}



void _232e769d0_ScopeDeadCode::_method_eliminate_followed(void) {
	(*((*this)._field_stmts))=(*((*this)._field_stmts)).slice(0LL,(*this)._field_i + 1LL);
	jule::Ptr<_232e769d0_ScopeDeadCode> _3317_parent = (*this)._field_parent;
	while (_3317_parent != nullptr) {
		{
			(*(_3317_parent->_field_stmts))=(*(_3317_parent->_field_stmts)).slice(0LL,_3317_parent->_field_i + 1LL);
			_3317_parent=_3317_parent->_field_parent;
		}
	_iter_next_4884673520:;
	}
	_iter_end_4884673520:;
}



void _232e769d0_ScopeDeadCode::_method_optimize_stmt(jule::Any _4044_st) {
	{
		auto _match_expr{ _4044_st };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Scope>>())) { goto _case_end_4884679808; }
		_case_begin_4884679808:;
		{
			jule::Ptr<_2186ce186_Scope> _4321_scope = _4044_st.operator jule::Ptr<_2186ce186_Scope>();
			if (_4321_scope->_field_deferred) {
				_232e769d0_eliminate_dead_code_of_scope(_4321_scope);
			} else {
				this->self->_method_optimize_child(_4321_scope);
			}
		}
		goto _match_end_4884680048;
		_case_end_4884679808:;
		if (!(_match_expr.type_is<jule::Ptr<_218751758_Data>>())) { goto _case_end_4884680128; }
		_case_begin_4884680128:;
		{
			{
				auto _match_expr{ _4044_st.operator jule::Ptr<_218751758_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>>())) { goto _case_end_4884684528; }
				_case_begin_4884684528:;
				{
					this->self->_method_eliminate_followed();
				}
				goto _match_end_4884686000;
				_case_end_4884684528:;
				_match_end_4884686000:;
			}
		}
		goto _match_end_4884680048;
		_case_end_4884680128:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RetSt>>())) { goto _case_end_4884680240; }
		_case_begin_4884680240:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4884680048;
		_case_end_4884680240:;
		_match_end_4884680048:;
	}
}



void _232e769d0_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	for (; this->self->_field_i < this->self->_field_stmts->len(); (this->self->_field_i)++) {
		{
			this->self->_method_optimize_stmt((*(this->self->_field_stmts))[this->self->_field_i]);
		}
	_iter_next_4884688576:;
	}
	_iter_end_4884688576:;
}







std::ostream &operator<<(std::ostream &_Stream, const _232e769d0_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



jule::U64 _1d6d86650_AbsTime::_method_unix(void) {
	jule::Bool _5417_leap = false;
	jule::Uint _5517_y = (*this)._field_year - 1900LL;
	jule::Uint _5617_m = (*this)._field_month - 1LL;
	if ((_5617_m >= 12LL) || (_5617_m < 0LL)) {
		jule::Uint _5821_adj = jule::div(_5617_m,12LL);
		_5617_m = jule::mod(_5617_m,12LL);
		if (_5617_m < 0LL) {
			(_5821_adj)--;
			_5617_m+=12LL;
		}
		_5517_y+=_5821_adj;
	}
	jule::U64 _6617_t = _1d6d86650_unix_year_to_seconds(_5517_y,_5417_leap);
	_6617_t+=static_cast<jule::U64>(_1d6d86650_unix_month_to_seconds(_5617_m,_5417_leap));
	_6617_t+=static_cast<jule::Uint>(86400LL * ((*this)._field_day - 1LL));
	_6617_t+=static_cast<jule::Uint>(3600LL * (*this)._field_hour);
	_6617_t+=static_cast<jule::Uint>(60LL * (*this)._field_minute);
	_6617_t+=(*this)._field_second;
	return _6617_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d6d86650_AbsTime &_Src) {
	_Stream << "AbsTime{";
	_Stream << "day:" << _Src._field_day << ", ";
	_Stream << "week_day:" << _Src._field_week_day << ", ";
	_Stream << "year_day:" << _Src._field_year_day << ", ";
	_Stream << "month:" << _Src._field_month << ", ";
	_Stream << "year:" << _Src._field_year << ", ";
	_Stream << "second:" << _Src._field_second << ", ";
	_Stream << "minute:" << _Src._field_minute << ", ";
	_Stream << "hour:" << _Src._field_hour;
	_Stream << "}";
	return _Stream;
}



_1d6d86650_Time _1d6d86650_Time::_static_method_unix(jule::U64 _8924_sec) {
	return _1d6d86650_Time(_8924_sec);
}



_1d6d86650_Time _1d6d86650_Time::_static_method_now(void) {
	return _1d6d86650_Time::_static_method_unix(static_cast<jule::U64>(_1d6d86650_unix()));
}



jule::U64 _1d6d86650_Time::_method_unix(void) {
	return (*this)._field_sec;
}



jule::Uint _1d6d86650_Time::_method_day(void) {
	return (*this)._method_abs()._field_day;
}



jule::Uint _1d6d86650_Time::_method_month(void) {
	return (*this)._method_abs()._field_month;
}



jule::Uint _1d6d86650_Time::_method_year(void) {
	return (*this)._method_abs()._field_year;
}



jule::Uint _1d6d86650_Time::_method_second(void) {
	return (*this)._method_abs()._field_second;
}



jule::Uint _1d6d86650_Time::_method_minute(void) {
	return (*this)._method_abs()._field_minute;
}



jule::Uint _1d6d86650_Time::_method_hour(void) {
	return (*this)._method_abs()._field_hour;
}



_1d6d86650_AbsTime _1d6d86650_Time::_method_abs(void) {
	jule::U64 _12513_secs = (*this)._field_sec - 951868800LL;
	jule::U64 _12617_days = jule::div(_12513_secs,86400LL);
	jule::U64 _12717_rem_secs = jule::mod(_12513_secs,86400LL);
	if (_12717_rem_secs < 0LL) {
		_12717_rem_secs+=86400LL;
		(_12617_days)--;
	}
	jule::U64 _13317_qc_cycles = jule::div(_12617_days,146097LL);
	jule::U64 _13417_rem_days = jule::mod(_12617_days,146097LL);
	if (_13417_rem_days < 0LL) {
		_13417_rem_days+=146097LL;
		(_13317_qc_cycles)--;
	}
	jule::U64 _14017_c_cycles = jule::div(_13417_rem_days,36524LL);
	if (_14017_c_cycles == 4LL) {
		(_14017_c_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14017_c_cycles * 36524LL);
	jule::U64 _14617_q_cycles = jule::div(_13417_rem_days,1461LL);
	if (_14617_q_cycles == 25LL) {
		(_14617_q_cycles)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_14617_q_cycles * 1461LL);
	jule::U64 _15217_rem_years = jule::div(_13417_rem_days,365LL);
	if (_15217_rem_years == 4LL) {
		(_15217_rem_years)--;
	}
	_13417_rem_days-=static_cast<jule::U64>(_15217_rem_years * 365LL);
	jule::Int _15813_leap = ((((_15217_rem_years == 0LL) && ((_14617_q_cycles > 0LL) || (_14017_c_cycles == 0LL)))) ? (1LL) : (0LL));
	jule::U64 _15917_y_day = ((_13417_rem_days + 31LL) + 28LL) + _15813_leap;
	if (_15917_y_day >= (365LL + _15813_leap)) {
		_15917_y_day-=static_cast<jule::Int>(365LL + _15813_leap);
	}
	jule::Int _16417_months = 0LL;
	for (; _1d6d86650_MDAYS[_16417_months] <= _13417_rem_days; (_16417_months)++) {
		{
			_13417_rem_days-=_1d6d86650_MDAYS[_16417_months];
		}
	_iter_next_4884794656:;
	}
	_iter_end_4884794656:;
	_1d6d86650_AbsTime _16917_t = _1d6d86650_AbsTime();
	_16917_t._field_year=static_cast<jule::U64>((((_15217_rem_years + (4LL * _14617_q_cycles)) + (100LL * _14017_c_cycles)) + (400LL * _13317_qc_cycles)) + 100LL);
	_16917_t._field_month=static_cast<jule::Uint>(_16417_months + 2LL);
	if (_16917_t._field_month >= 12LL) {
		_16917_t._field_month-=12LL;
		(_16917_t._field_year)++;
	}
	_16917_t._field_month+=1LL;
	_16917_t._field_year+=1900LL;
	_16917_t._field_day=static_cast<jule::U64>(_13417_rem_days + 1LL);
	_16917_t._field_week_day=static_cast<jule::U64>(jule::mod(3LL + _12617_days,7LL));
	if (_16917_t._field_week_day < 0LL) {
		_16917_t._field_week_day+=7LL;
	}
	_16917_t._field_year_day=_15917_y_day;
	_16917_t._field_hour=static_cast<jule::U64>(jule::div(_12717_rem_secs,3600LL));
	_16917_t._field_minute=static_cast<jule::U64>(jule::mod(jule::div(_12717_rem_secs,60LL),60LL));
	_16917_t._field_second=static_cast<jule::U64>(jule::mod(_12717_rem_secs,60LL));
	return _16917_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _1d6d86650_Time &_Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



jule::I64 _1d6d86650_Duration::_static_method_nanoseconds(jule::I64 _22231_d) {
	return static_cast<jule::I64>(_22231_d * 1LL);
}



jule::I64 _1d6d86650_Duration::_static_method_microseconds(jule::I64 _22732_d) {
	return static_cast<jule::I64>(_22732_d * 1000LL);
}



jule::I64 _1d6d86650_Duration::_static_method_milliseconds(jule::I64 _23232_d) {
	return static_cast<jule::I64>(_23232_d * 1000000LL);
}



jule::I64 _1d6d86650_Duration::_static_method_seconds(jule::I64 _23727_d) {
	return static_cast<jule::I64>(_23727_d * 1000000000LL);
}



jule::I64 _1d6d86650_Duration::_static_method_minutes(jule::I64 _24227_d) {
	return static_cast<jule::I64>(_24227_d * 60000000000LL);
}



jule::I64 _1d6d86650_Duration::_static_method_hours(jule::I64 _24725_d) {
	return static_cast<jule::I64>(_24725_d * 3600000000000LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _1d6d86650_Duration &_Src) {
	_Stream << "Duration{";
	_Stream << "}";
	return _Stream;
}



jule::Str _200ad0979_Flag_0::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _200ad0979_Flag_0::_method_what(void) {
	return (*this)._field__what;
}



void _200ad0979_Flag_0::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



jule::I32 _200ad0979_Flag_0::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_Flag_0 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _200ad0979_Flag_1::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _200ad0979_Flag_1::_method_what(void) {
	return (*this)._field__what;
}



void _200ad0979_Flag_1::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



jule::I32 _200ad0979_Flag_1::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_Flag_1 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _200ad0979_Flag_2::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _200ad0979_Flag_2::_method_what(void) {
	return (*this)._field__what;
}



void _200ad0979_Flag_2::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



jule::I32 _200ad0979_Flag_2::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_Flag_2 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _200ad0979_Flag_3::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _200ad0979_Flag_3::_method_what(void) {
	return (*this)._field__what;
}



void _200ad0979_Flag_3::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



jule::I32 _200ad0979_Flag_3::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_Flag_3 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}

jule::Str _200ad0979_Flag_4::_method_name(void) {
	return (*this)._field__name;
}



jule::Str _200ad0979_Flag_4::_method_what(void) {
	return (*this)._field__what;
}



void _200ad0979_Flag_4::_method_reset(void) {
	(*((*this)._field__data))=(*this)._field__default;
}



jule::I32 _200ad0979_Flag_4::_method_short(void) {
	return (*this)._field__short;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_Flag_4 &_Src) {
	_Stream << "Flag{";
	_Stream << "_name:" << _Src._field__name << ", ";
	_Stream << "_short:" << _Src._field__short << ", ";
	_Stream << "_default:" << _Src._field__default << ", ";
	_Stream << "_what:" << _Src._field__what << ", ";
	_Stream << "_data:" << _Src._field__data;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_200ad0979_FlagSet> _200ad0979_FlagSet::_static_method_new(void) {
	return jule::new_struct<_200ad0979_FlagSet>(new( std::nothrow ) _200ad0979_FlagSet(jule::Slice<jule::Trait<_200ad0979_CommonFlag>>::alloc(0LL,20LL),jule::Slice<jule::Str>()));
}



jule::Trait<_200ad0979_CommonFlag> _200ad0979_FlagSet::_method_find_flag(jule::Str _6732_name) {
	{
		auto expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4886334048:;
		if (it != expr.end()) {
			jule::Trait<_200ad0979_CommonFlag> _200ad0979_flag = *it;
			{
				if (_200ad0979_flag.get()._method_name() == _6732_name) {
					return _200ad0979_flag;
				}
			}
			_iter_next_4886334048:;
			++it;
			goto _iter_begin_4886334048;
		}
		_iter_end_4886334048:;
	}
	return nullptr;
}



jule::Trait<_200ad0979_CommonFlag> _200ad0979_FlagSet::_method_find_flag_short(jule::I32 _7738_name) {
	{
		auto expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4886338944:;
		if (it != expr.end()) {
			jule::Trait<_200ad0979_CommonFlag> _200ad0979_flag = *it;
			{
				if (_200ad0979_flag.get()._method_short() == _7738_name) {
					return _200ad0979_flag;
				}
			}
			_iter_next_4886338944:;
			++it;
			goto _iter_begin_4886338944;
		}
		_iter_end_4886338944:;
	}
	return nullptr;
}



jule::Slice<jule::Trait<_200ad0979_CommonFlag>> _200ad0979_FlagSet::_method_flags(void) {
	return (*this)._field__flags;
}



std::tuple<jule::Slice<jule::Str>,jule::Str> _200ad0979_FlagSet::_method_parse(jule::Slice<jule::Str> _11128_args) {
	jule::Slice<jule::Str> _11143_content = jule::Slice<jule::Str>();
	jule::Str _11159_error = jule::Str();
	_200ad0979_ArgParser _11217_ap = _200ad0979_ArgParser((*this),(*((&(_11128_args)))),jule::Str(),jule::Slice<jule::Str>(),jule::Int());
	_11217_ap._method_parse();
	_11143_content = _11217_ap._field_content;
	_11159_error = _11217_ap._field_error;
	return std::make_tuple(_11143_content,_11159_error);
}



void _200ad0979_FlagSet::_method_reset(void) {
	{
		auto expr = (*this)._field__flags;
		auto it = expr.begin();
		_iter_begin_4886356944:;
		if (it != expr.end()) {
			jule::Trait<_200ad0979_CommonFlag> _200ad0979_f = *it;
			{
				_200ad0979_f.get()._method_reset();
			}
			_iter_next_4886356944:;
			++it;
			goto _iter_begin_4886356944;
		}
		_iter_end_4886356944:;
	}
}



jule::Ptr<_200ad0979_Flag_3> _200ad0979_FlagSet::_method_add_flag_common_0(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ptr<_200ad0979_Flag_3> _14417_flag = jule::new_struct<_200ad0979_Flag_3>(new( std::nothrow ) _200ad0979_Flag_3(_12741_name,_12752_short,jule::Bool(),_12765_what,jule::Ptr<jule::Bool>()));
	(*this)._field__flags=jule::append((*this)._field__flags,jule::Slice<jule::Trait<_200ad0979_CommonFlag>>({_14417_flag}));
	return _14417_flag;
}

jule::Ptr<_200ad0979_Flag_4> _200ad0979_FlagSet::_method_add_flag_common_1(jule::Str _12741_name,jule::I32 _12752_short,jule::Str _12765_what) {
	
	if ((*this)._method_find_flag(_12741_name) != nullptr) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this name: ", 63) + _12741_name);
	}
	if ((_12752_short != 0LL) && ((*this)._method_find_flag_short(_12752_short) != nullptr)) {
		jule::panic(jule::Str("std::flag: FlagSet.add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_12752_short));
	}
	jule::Ptr<_200ad0979_Flag_4> _14417_flag = jule::new_struct<_200ad0979_Flag_4>(new( std::nothrow ) _200ad0979_Flag_4(_12741_name,_12752_short,jule::Str(),_12765_what,jule::Ptr<jule::Str>()));
	(*this)._field__flags=jule::append((*this)._field__flags,jule::Slice<jule::Trait<_200ad0979_CommonFlag>>({_14417_flag}));
	return _14417_flag;
}





void _200ad0979_FlagSet::_method_add_var_0(jule::Ptr<jule::Bool>& _17138_var,jule::Str _17147_name,jule::I32 _17158_short,jule::Str _17171_what) {
	jule::Ptr<_200ad0979_Flag_3> _17217_flag = (*this)._method_add_flag_common_0(_17147_name,_17158_short,_17171_what);
	_17217_flag->_field__default=(*(_17138_var));
	_17217_flag->_field__data=_17138_var;
}

void _200ad0979_FlagSet::_method_add_var_1(jule::Ptr<jule::Str>& _17138_var,jule::Str _17147_name,jule::I32 _17158_short,jule::Str _17171_what) {
	jule::Ptr<_200ad0979_Flag_4> _17217_flag = (*this)._method_add_flag_common_1(_17147_name,_17158_short,_17171_what);
	_17217_flag->_field__default=(*(_17138_var));
	_17217_flag->_field__data=_17138_var;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_FlagSet &_Src) {
	_Stream << "FlagSet{";
	_Stream << "_flags:" << _Src._field__flags << ", ";
	_Stream << "_errors:" << _Src._field__errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}



void _200c5bcc0_DynamicTypeAnnotation::_method_push_generic(jule::Ptr<_200d010d9_TypeKind>& _47836_k,jule::Int _47850_i) {
	(*this)._field_f->_field_generics[_47850_i]=_47836_k;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_prim(jule::Ptr<_200d010d9_TypeKind>& _48244_k) {
	jule::Bool _48260_ok = jule::Bool();
	jule::Str _48313_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4880951424:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Ptr<_233464770_GenericDecl> _200c5bcc0_g = *it;
			{
				if (_48313_kind != _200c5bcc0_g->_field_ident) {
					goto _iter_next_4880951424;
				}
				jule::Ptr<_200d010d9_TypeKind> _48917_t = (*this)._field_f->_field_generics[_200c5bcc0_i];
				{
					if (!((_48917_t == nullptr))) { goto _case_end_4880956336; }
					_case_begin_4880956336:;
					{
						(*this)._method_push_generic(_48244_k,_200c5bcc0_i);
					}
					goto _match_end_4880956096;
					_case_end_4880956336:;
					if (!(((!(_48917_t->_method_equals(_48244_k)))))) { goto _case_end_4880956432; }
					_case_begin_4880956432:;
					{
						_48260_ok = false;
						return _48260_ok;
					}
					goto _match_end_4880956096;
					_case_end_4880956432:;
					_match_end_4880956096:;
				}
				(*((*this)._field_k))->_field_kind=_48244_k->_field_kind;
				_48260_ok = true;
				return _48260_ok;
			}
			_iter_next_4880951424:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4880951424;
		}
		_iter_end_4880951424:;
	}
	_48260_ok = false;
	return _48260_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_slc(jule::Ptr<_200d010d9_TypeKind>& _50643_k) {
	jule::Bool _50659_ok = jule::Bool();
	jule::Ptr<_200d010d9_Slc> _50717_pslc = (*((*this)._field_k))->_method_slc();
	if (_50717_pslc == nullptr) {
		_50659_ok = false;
		return _50659_ok;
	}
	jule::Ptr<_200d010d9_Slc> _51217_slc = _50643_k->_method_slc();
	(*this)._field_k=(&(_50717_pslc->_field_elem));
	_50659_ok = (*this)._method_annotate_kind(_51217_slc->_field_elem);
	return _50659_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_check_map_key(jule::Ptr<_200d010d9_TypeKind>* _51743_k,jule::Ptr<_200d010d9_TypeKind>& _51763_ck) {
	jule::Bool _51780_ok = jule::Bool();
	jule::Ptr<_200d010d9_TypeKind>* _51817_old = (*this)._field_k;
	(*this)._field_k=_51743_k;
	_51780_ok=(*this)._method_annotate_kind(_51763_ck);
	(*this)._field_k=_51817_old;
	_51780_ok = _51780_ok;
	return _51780_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_map(jule::Ptr<_200d010d9_TypeKind>& _52543_k) {
	jule::Bool _52559_ok = jule::Bool();
	jule::Ptr<_200d010d9_Map> _52617_pmap = (*((*this)._field_k))->_method_map();
	if (_52617_pmap == nullptr) {
		_52559_ok = false;
		return _52559_ok;
	}
	jule::Ptr<_200d010d9_Map> _53117_m = _52543_k->_method_map();
	_52559_ok = (*this)._method_check_map_key((&(_52617_pmap->_field_key)),_53117_m->_field_key) && (*this)._method_check_map_key((&(_52617_pmap->_field_val)),_53117_m->_field_val);
	return _52559_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_fn(jule::Ptr<_200d010d9_TypeKind>& _53742_k) {
	jule::Bool _53758_ok = jule::Bool();
	jule::Ptr<_2185d51ad_FnIns> _53817_pf = (*((*this)._field_k))->_method_fnc();
	if (_53817_pf == nullptr) {
		_53758_ok = false;
		return _53758_ok;
	}
	jule::Ptr<_2185d51ad_FnIns> _54217_f = _53742_k->_method_fnc();
	{
		if (!((_53817_pf->_field_params.len() != _54217_f->_field_params.len()))) { goto _case_end_4880987488; }
		_case_begin_4880987488:;
		{
			_53758_ok = false;
			return _53758_ok;
		}
		goto _match_end_4880987328;
		_case_end_4880987488:;
		if (!((_53817_pf->_field_decl->_method_is_void() != _54217_f->_field_decl->_method_is_void()))) { goto _case_end_4880987600; }
		_case_begin_4880987600:;
		{
			_53758_ok = false;
			return _53758_ok;
		}
		goto _match_end_4880987328;
		_case_end_4880987600:;
		_match_end_4880987328:;
	}
	_53758_ok=true;
	jule::Ptr<_200d010d9_TypeKind>* _55217_old = (*this)._field_k;
	{
		auto expr = _54217_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4880991568:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Ptr<_2185d51ad_ParamIns> _200c5bcc0_fp = *it;
			{
				(*this)._field_k=(&(_53817_pf->_field_params[_200c5bcc0_i]->_field_kind));
				_53758_ok=(*this)._method_annotate_kind(_200c5bcc0_fp->_field_kind) && _53758_ok;
			}
			_iter_next_4880991568:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4880991568;
		}
		_iter_end_4880991568:;
	}
	if ((!(_53817_pf->_field_decl->_method_is_void()))) {
		(*this)._field_k=(&(_53817_pf->_field_result));
		_53758_ok=(*this)._method_annotate_kind(_54217_f->_field_result) && _53758_ok;
	}
	(*this)._field_k=_55217_old;
	_53758_ok = _53758_ok;
	return _53758_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ptr<_200d010d9_TypeKind>& _56743_k) {
	jule::Bool _56759_ok = jule::Bool();
	jule::Ptr<_200d010d9_Ptr> _56817_pptr = (*((*this)._field_k))->_method_ptr();
	if (_56817_pptr == nullptr) {
		_56759_ok = false;
		return _56759_ok;
	}
	jule::Ptr<_200d010d9_Ptr> _57317_ptr = _56743_k->_method_ptr();
	(*this)._field_k=(&(_56817_pptr->_field_elem));
	_56759_ok = (*this)._method_annotate_kind(_57317_ptr->_field_elem);
	return _56759_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_sptr(jule::Ptr<_200d010d9_TypeKind>& _57844_k) {
	jule::Bool _57860_ok = jule::Bool();
	jule::Ptr<_200d010d9_Sptr> _57917_ssptr = (*((*this)._field_k))->_method_sptr();
	if (_57917_ssptr == nullptr) {
		_57860_ok = false;
		return _57860_ok;
	}
	jule::Ptr<_200d010d9_Sptr> _58417_sptr = _57844_k->_method_sptr();
	(*this)._field_k=(&(_57917_ssptr->_field_elem));
	_57860_ok = (*this)._method_annotate_kind(_58417_sptr->_field_elem);
	return _57860_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_any(jule::Ptr<_200d010d9_TypeKind>& _58943_k) {
	jule::Bool _58959_ok = jule::Bool();
	jule::Str _59013_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto expr = (*this)._field_f->_field_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4881017600:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Ptr<_233464770_GenericDecl> _200c5bcc0_g = *it;
			{
				if (_59013_kind != _200c5bcc0_g->_field_ident) {
					goto _iter_next_4881017600;
				}
				jule::Ptr<_200d010d9_TypeKind> _59617_t = (*this)._field_f->_field_generics[_200c5bcc0_i];
				{
					if (!((_59617_t == nullptr))) { goto _case_end_4881022464; }
					_case_begin_4881022464:;
					{
						(*this)._method_push_generic(_58943_k,_200c5bcc0_i);
					}
					goto _match_end_4881022224;
					_case_end_4881022464:;
					if (!(((!(_59617_t->_method_equals(_58943_k)))))) { goto _case_end_4881022560; }
					_case_begin_4881022560:;
					{
						_58959_ok = false;
						return _58959_ok;
					}
					goto _match_end_4881022224;
					_case_end_4881022560:;
					_match_end_4881022224:;
				}
				(*((*this)._field_k))->_field_kind=_58943_k->_field_kind;
				_58959_ok = true;
				return _58959_ok;
			}
			_iter_next_4881017600:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4881017600;
		}
		_iter_end_4881017600:;
	}
	_58959_ok = false;
	return _58959_ok;
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate_kind(jule::Ptr<_200d010d9_TypeKind>& _61344_k) {
	jule::Bool _61360_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _61360_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_61344_k)))) { goto _case_end_4881029632; }
		_case_begin_4881029632:;
		{
			_61360_ok = true;
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029632:;
		if (!((_61344_k->_method_prim() != nullptr))) { goto _case_end_4881029728; }
		_case_begin_4881029728:;
		{
			_61360_ok = (*this)._method_annotate_prim(_61344_k);
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029728:;
		if (!((_61344_k->_method_slc() != nullptr))) { goto _case_end_4881029824; }
		_case_begin_4881029824:;
		{
			_61360_ok = (*this)._method_annotate_slc(_61344_k);
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029824:;
		if (!((_61344_k->_method_map() != nullptr))) { goto _case_end_4881029088; }
		_case_begin_4881029088:;
		{
			_61360_ok = (*this)._method_annotate_map(_61344_k);
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029088:;
		if (!((_61344_k->_method_fnc() != nullptr))) { goto _case_end_4881029184; }
		_case_begin_4881029184:;
		{
			_61360_ok = (*this)._method_annotate_fn(_61344_k);
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029184:;
		if (!((_61344_k->_method_ptr() != nullptr))) { goto _case_end_4881029280; }
		_case_begin_4881029280:;
		{
			_61360_ok = (*this)._method_annotate_ptr(_61344_k);
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029280:;
		if (!((_61344_k->_method_sptr() != nullptr))) { goto _case_end_4881029376; }
		_case_begin_4881029376:;
		{
			_61360_ok = (*this)._method_annotate_sptr(_61344_k);
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881029376:;
		_case_begin_4881028480:;
		{
			_61360_ok = false;
			return _61360_ok;
		}
		goto _match_end_4881027472;
		_case_end_4881028480:;
		_match_end_4881027472:;
	}
}



jule::Bool _200c5bcc0_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _63036_ok = jule::Bool();
	(*this)._field_k=(&((*this)._field_p->_field_kind));
	_63036_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _63036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



void _200c5bcc0_StructLitChecker::_method_push_err(_2336ea198_Token _86527_token,jule::Str _86541_fmt,jule::Slice<jule::Any> _86554_args) {
	(*this)._field_e->_method_push_err(_86527_token,_86541_fmt,_86554_args);
}



void _200c5bcc0_StructLitChecker::_method_push_suggestion(jule::Str _87034_fmt,jule::Slice<jule::Any> _87047_args) {
	(*this)._field_e->_method_push_suggestion(_87034_fmt,_87047_args);
}



void _200c5bcc0_StructLitChecker::_method_push_match(jule::Ptr<_23461aa35_FieldIns>& _87434_f,jule::Ptr<_218751758_Data>& _87453_d,_2336ea198_Token& _87468_error_token) {
	(*this)._field_args=jule::append((*this)._field_args,jule::Slice<jule::Ptr<_2188586ea_StructArgExprModel>>({jule::new_struct<_2188586ea_StructArgExprModel>(new( std::nothrow ) _2188586ea_StructArgExprModel(_87434_f,_87453_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr((!((*this)._field_e->_field_immutable)),false,_87434_f->_field_kind,_87453_d,_87468_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(false,_87434_f->_field_kind,_87453_d,_87468_error_token);
}



void _200c5bcc0_StructLitChecker::_method_check_pair(jule::Ptr<_233464770_FieldExprPair>& _88534_pair,jule::Slice<jule::Any>& _88561_exprs) {
	jule::Ptr<_23461aa35_FieldIns> _88717_f = (*this)._field_s->_method_find_field(_88534_pair->_field_field._field_kind);
	if (_88717_f == nullptr) {
		(*this)._method_push_err(_88534_pair->_field_field,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_88534_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_88717_f->_field_decl->_field_public,_88717_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_88534_pair->_field_field,jule::Str("identifier is not accessible: @", 31),jule::Slice<jule::Any>({jule::Any(_88534_pair->_field_field._field_kind)}));
		(*this)._method_push_suggestion(jule::Str("make public with \"pub\" keyword to access", 40),jule::Slice<jule::Any>({}));
	}
	_julec_label_dup_lookup:;
	{
		auto expr = _88561_exprs;
		auto it = expr.begin();
		_iter_begin_4881210832:;
		if (it != expr.end()) {
			jule::Any _200c5bcc0_expr = *it;
			{
				{
					auto _match_expr{ _200c5bcc0_expr };
					if (!(_match_expr.type_is<jule::Ptr<_233464770_FieldExprPair>>())) { goto _case_end_4881212176; }
					_case_begin_4881212176:;
					{
						jule::Ptr<_233464770_FieldExprPair> _90325_dpair = _200c5bcc0_expr.operator jule::Ptr<_233464770_FieldExprPair>();
						{
							if (!((_88534_pair == _90325_dpair))) { goto _case_end_4881215312; }
							_case_begin_4881215312:;
							{
								goto _iter_end_4881210832;
							}
							goto _match_end_4881215152;
							_case_end_4881215312:;
							if (!((_88534_pair->_field_field._field_kind == _90325_dpair->_field_field._field_kind))) { goto _case_end_4881215424; }
							_case_begin_4881215424:;
							{
								(*this)._method_push_err(_88534_pair->_field_field,jule::Str("@ already has expression", 24),jule::Slice<jule::Any>({jule::Any(_88534_pair->_field_field._field_kind)}));
								goto _iter_end_4881210832;
							}
							goto _match_end_4881215152;
							_case_end_4881215424:;
							_match_end_4881215152:;
						}
					}
					goto _match_end_4881212576;
					_case_end_4881212176:;
					_match_end_4881212576:;
				}
			}
			_iter_next_4881210832:;
			++it;
			goto _iter_begin_4881210832;
		}
		_iter_end_4881210832:;
	}
	jule::Ptr<_200d010d9_TypeKind> _91517_prefix = (*this)._field_e->_field_prefix;
	__JULE_DEFER({
		(*this)._field_e->_field_prefix=_91517_prefix;
	});
	(*this)._field_e->_field_prefix=_88717_f->_field_kind;
	jule::Ptr<_218751758_Data> _91917_d = (*this)._field_e->_method_eval_expr_kind(_88534_pair->_field_expr);
	if (_91917_d == nullptr) {
		return;
	}
	(*this)._method_push_match(_88717_f,_91917_d,_88534_pair->_field_field);
}



jule::Bool _200c5bcc0_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any>& _92635_exprs) {
	jule::Bool _92717_ok = true;
	{
		auto expr = _92635_exprs;
		auto it = expr.begin();
		_iter_begin_4881227552:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Any _200c5bcc0_expr = *it;
			{
				{
					auto _match_expr{ _200c5bcc0_expr };
					if (!(_match_expr.type_is<jule::Ptr<_233464770_KeyValPair>>())) { goto _case_end_4881229440; }
					_case_begin_4881229440:;
					{
						jule::Ptr<_233464770_KeyValPair> _93125_pair = _200c5bcc0_expr.operator jule::Ptr<_233464770_KeyValPair>();
						{
							auto _match_expr{ _93125_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ptr<_233464770_IdentExpr>>())) { goto _case_end_4881235600; }
							goto _match_end_4881232768;
							_case_end_4881235600:;
							_case_begin_4881230096:;
							{
								(*this)._method_push_err(_93125_pair->_field_colon,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
								_92717_ok=false;
								goto _iter_next_4881227552;
							}
							goto _match_end_4881232768;
							_case_end_4881230096:;
							_match_end_4881232768:;
						}
						_92635_exprs[_200c5bcc0_i]=jule::Any(jule::new_struct<_233464770_FieldExprPair>(new( std::nothrow ) _233464770_FieldExprPair(_93125_pair->_field_key.operator jule::Ptr<_233464770_IdentExpr>()->_field_token,_93125_pair->_field_val)));
					}
					goto _match_end_4881229904;
					_case_end_4881229440:;
					_match_end_4881229904:;
				}
			}
			_iter_next_4881227552:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4881227552;
		}
		_iter_end_4881227552:;
	}
	return _92717_ok;
}



void _200c5bcc0_StructLitChecker::_method_check(jule::Slice<jule::Any>& _95229_exprs) {
	if (_95229_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_95229_exprs)))) {
		return;
	}
	jule::Bool _96117_paired = false;
	{
		auto expr = _95229_exprs;
		auto it = expr.begin();
		_iter_begin_4881241376:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Any _200c5bcc0_expr = *it;
			{
				{
					auto _match_expr{ _200c5bcc0_expr };
					if (!(_match_expr.type_is<jule::Ptr<_233464770_FieldExprPair>>())) { goto _case_end_4881243264; }
					_case_begin_4881243264:;
					{
						jule::Ptr<_233464770_FieldExprPair> _96525_pair = _200c5bcc0_expr.operator jule::Ptr<_233464770_FieldExprPair>();
						if ((_200c5bcc0_i > 0LL) && (!(_96117_paired))) {
							(*this)._method_push_err(_96525_pair->_field_field,jule::Str("invalid syntax", 14),jule::Slice<jule::Any>({}));
						}
						_96117_paired=true;
						(*this)._method_check_pair(_96525_pair,_95229_exprs);
					}
					goto _match_end_4881243728;
					_case_end_4881243264:;
					if (!(_match_expr.type_is<jule::Ptr<_233464770_Expr>>())) { goto _case_end_4881243808; }
					_case_begin_4881243808:;
					{
						jule::Ptr<_233464770_Expr> _97325_e = _200c5bcc0_expr.operator jule::Ptr<_233464770_Expr>();
						if (_96117_paired) {
							(*this)._method_push_err(_97325_e->_field_token,jule::Str("argument must target to field", 29),jule::Slice<jule::Any>({}));
						}
						if (_200c5bcc0_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_97325_e->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4881241376;
						}
						jule::Ptr<_23461aa35_FieldIns> _98225_field = (*this)._field_s->_field_fields[_200c5bcc0_i];
						jule::Ptr<_200d010d9_TypeKind> _98425_prefix = (*this)._field_e->_field_prefix;
						__JULE_DEFER({
							(*this)._field_e->_field_prefix=_98425_prefix;
						});
						(*this)._field_e->_field_prefix=_98225_field->_field_kind;
						jule::Ptr<_218751758_Data> _98825_d = (*this)._field_e->_method_eval_expr_kind(_97325_e->_field_kind);
						if (_98825_d == nullptr) {
							goto _iter_next_4881241376;
						}
						(*this)._method_push_match(_98225_field,_98825_d,_97325_e->_field_token);
					}
					goto _match_end_4881243728;
					_case_end_4881243808:;
					_match_end_4881243728:;
				}
			}
			_iter_next_4881241376:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4881241376;
		}
		_iter_end_4881241376:;
	}
	if ((!(_96117_paired))) {
		jule::I64 _99917_n = (*this)._field_s->_field_fields.len();
		jule::I64 _100021_diff = _99917_n - _95229_exprs.len();
		{
			if (!((_100021_diff <= 0LL))) { goto _case_end_4881264496; }
			_case_begin_4881264496:;
			{
				return;
			}
			goto _match_end_4881264304;
			_case_end_4881264496:;
			_match_end_4881264304:;
		}
		jule::Str _100621_idents = jule::Str();
		for (; _100021_diff > 0LL; (_100021_diff)--) {
			{
				_100621_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[_99917_n - _100021_diff]->_field_decl->_field_ident;
			}
		_iter_next_4881243120:;
		}
		_iter_end_4881243120:;
		_100621_idents=_100621_idents.slice(2LL);
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_100621_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_TernaryExpr &_Src) {
	_Stream << "TernaryExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "condition:" << _Src._field_condition << ", ";
	_Stream << "true_expr:" << _Src._field_true_expr << ", ";
	_Stream << "false_expr:" << _Src._field_false_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}



void _200c5bcc0_TypeCompatibilityChecker::_method_push_err(jule::Str _13627_fmt,jule::Slice<jule::Any> _13640_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_13627_fmt,_13640_args);
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14032_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14032_ok = true;
		return _14032_ok;
	}
	jule::Ptr<_2185da36c_Trait> _14513_trt = (*this)._field_dest->_method_trt();
	jule::Bool _14617_ref = false;
	{
		if (!(((*this)._field_src->_method_sptr() != nullptr))) { goto _case_end_4880783152; }
		_case_begin_4880783152:;
		{
			_14617_ref=true;
			(*this)._field_src=(*this)._field_src->_method_sptr()->_field_elem;
			if ((*this)._field_src->_method_strct() == nullptr) {
				_14032_ok = false;
				return _14032_ok;
			}
			goto _case_begin_4880782688;
		}
		goto _match_end_4880781600;
		_case_end_4880783152:;
		if (!(((*this)._field_src->_method_strct() != nullptr))) { goto _case_end_4880782688; }
		_case_begin_4880782688:;
		{
			jule::Ptr<_23461aa35_StructIns> _15717_s = (*this)._field_src->_method_strct();
			if ((!(_15717_s->_field_decl->_method_is_implements(_14513_trt)))) {
				_14032_ok = false;
				return _14032_ok;
			}
			if ((!(_14617_ref)) && _200c5bcc0_trait_has_reference_receiver(_14513_trt)) {
				(*this)._method_push_err(jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88),jule::Slice<jule::Any>({}));
				_14032_ok = false;
				return _14032_ok;
			}
			_14032_ok = true;
			return _14032_ok;
		}
		goto _match_end_4880781600;
		_case_end_4880782688:;
		if (!(((*this)._field_src->_method_trt() != nullptr))) { goto _case_end_4880782784; }
		_case_begin_4880782784:;
		{
			_14032_ok = _14513_trt == (*this)._field_src->_method_trt();
			return _14032_ok;
		}
		goto _match_end_4880781600;
		_case_end_4880782784:;
		_case_begin_4880781712:;
		{
			_14032_ok = false;
			return _14032_ok;
		}
		goto _match_end_4880781600;
		_case_end_4880781712:;
		_match_end_4880781600:;
	}
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_sptr(void) {
	jule::Bool _17731_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_17731_ok = true;
		return _17731_ok;
	}
	jule::Ptr<_200d010d9_Sptr> _18217_src = (*this)._field_src->_method_sptr();
	if (_18217_src == nullptr) {
		_17731_ok = false;
		return _17731_ok;
	}
	jule::Ptr<_200d010d9_Sptr> _18717_dest = (*this)._field_dest->_method_sptr();
	_17731_ok = _18717_dest->_field_elem->_method_equals(_18217_src->_field_elem);
	return _17731_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _19130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_19130_ok = true;
		return _19130_ok;
	}
	jule::Ptr<_200d010d9_Ptr> _19617_src = (*this)._field_src->_method_ptr();
	if (_19617_src == nullptr) {
		_19130_ok = false;
		return _19130_ok;
	}
	jule::Ptr<_200d010d9_Ptr> _20117_dest = (*this)._field_dest->_method_ptr();
	if (_20117_dest->_method_is_unsafe()) {
		_19130_ok = true;
		return _19130_ok;
	}
	_19130_ok = _20117_dest->_field_elem->_method_equals(_19617_src->_field_elem);
	return _19130_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _21030_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_21030_ok = true;
		return _21030_ok;
	}
	jule::Ptr<_200d010d9_Slc> _21517_src = (*this)._field_src->_method_slc();
	if (_21517_src == nullptr) {
		_21030_ok = false;
		return _21030_ok;
	}
	jule::Ptr<_200d010d9_Slc> _21917_dest = (*this)._field_dest->_method_slc();
	_200c5bcc0_TypeCompatibilityChecker _22117_sub = _200c5bcc0_TypeCompatibilityChecker((*this)._field_s,_21917_dest->_field_elem,_21517_src->_field_elem,(*this)._field_error_token,true);
	_21030_ok = _22117_sub._method_check();
	return _21030_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _23130_ok = jule::Bool();
	jule::Ptr<_200d010d9_Arr> _23217_src = (*this)._field_src->_method_arr();
	if (_23217_src == nullptr) {
		_23130_ok = false;
		return _23130_ok;
	}
	jule::Ptr<_200d010d9_Arr> _23617_dest = (*this)._field_dest->_method_arr();
	if (_23617_dest->_field_n != _23217_src->_field_n) {
		_23130_ok = false;
		return _23130_ok;
	}
	_200c5bcc0_TypeCompatibilityChecker _24117_sub = _200c5bcc0_TypeCompatibilityChecker((*this)._field_s,_23617_dest->_field_elem,_23217_src->_field_elem,(*this)._field_error_token,true);
	_23130_ok = _24117_sub._method_check();
	return _23130_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _25130_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_25130_ok = true;
		return _25130_ok;
	}
	jule::Ptr<_200d010d9_Map> _25617_src = (*this)._field_src->_method_map();
	if (_25617_src == nullptr) {
		_25130_ok = false;
		return _25130_ok;
	}
	jule::Ptr<_200d010d9_Map> _26117_dest = (*this)._field_dest->_method_map();
	_200c5bcc0_TypeCompatibilityChecker _26317_sub = _200c5bcc0_TypeCompatibilityChecker((*this)._field_s,_26117_dest->_field_key,_25617_src->_field_key,(*this)._field_error_token,jule::Bool());
	if ((!(_26317_sub._method_check()))) {
		_25130_ok = false;
		return _25130_ok;
	}
	_26317_sub._field_src=_25617_src->_field_val;
	_26317_sub._field_dest=_26117_dest->_field_val;
	_25130_ok = _26317_sub._method_check();
	return _25130_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _27833_ok = jule::Bool();
	jule::Ptr<_23461aa35_StructIns> _27917_src = (*this)._field_src->_method_strct();
	if (_27917_src == nullptr) {
		_27833_ok = false;
		return _27833_ok;
	}
	jule::Ptr<_23461aa35_StructIns> _28317_dest = (*this)._field_dest->_method_strct();
	{
		if (!((_28317_dest->_field_decl != _27917_src->_field_decl))) { goto _case_end_4880842144; }
		_case_begin_4880842144:;
		{
			_27833_ok = false;
			return _27833_ok;
		}
		goto _match_end_4880841984;
		_case_end_4880842144:;
		if (!((_28317_dest->_field_generics.len() == 0LL))) { goto _case_end_4880842256; }
		_case_begin_4880842256:;
		{
			_27833_ok = true;
			return _27833_ok;
		}
		goto _match_end_4880841984;
		_case_end_4880842256:;
		_match_end_4880841984:;
	}
	{
		auto expr = _28317_dest->_field_generics;
		auto it = expr.begin();
		_iter_begin_4880844912:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Ptr<_200d010d9_TypeKind> _200c5bcc0_dg = *it;
			{
				jule::Ptr<_200d010d9_TypeKind> _29321_sg = _27917_src->_field_generics[_200c5bcc0_i];
				_200c5bcc0_TypeCompatibilityChecker _29421_sub = _200c5bcc0_TypeCompatibilityChecker((*this)._field_s,_200c5bcc0_dg,_29321_sg,(*this)._field_error_token,jule::Bool());
				if ((!(_29421_sub._method_check()))) {
					_27833_ok = false;
					return _27833_ok;
				}
			}
			_iter_next_4880844912:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4880844912;
		}
		_iter_end_4880844912:;
	}
	_27833_ok = true;
	return _27833_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _30729_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_30729_ok = true;
		return _30729_ok;
	}
	jule::Ptr<_2185d51ad_FnIns> _31217_src = (*this)._field_src->_method_fnc();
	if (_31217_src == nullptr) {
		_30729_ok = false;
		return _30729_ok;
	}
	jule::Ptr<_2185d51ad_FnIns> _31717_dest = (*this)._field_dest->_method_fnc();
	_30729_ok = _31717_dest->_method_equals(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_31217_src)));
	return _30729_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _32131_ok = jule::Bool();
	jule::Ptr<_2186be3da_Enum> _32213_r = (*this)._field_src->_method_enm();
	if (_32213_r == nullptr) {
		_32131_ok = false;
		return _32131_ok;
	}
	_32131_ok = (*this)._field_dest->_method_enm() == _32213_r;
	return _32131_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_prim(void) {
	jule::Bool _32931_ok = jule::Bool();
	jule::Ptr<_200d010d9_Prim> _33013_dest = (*this)._field_dest->_method_prim();
	jule::Ptr<_200d010d9_Prim> _33117_src = (*this)._field_src->_method_prim();
	if (_33117_src == nullptr) {
		_32931_ok = _33013_dest->_method_is_any();
		return _32931_ok;
	}
	if (_33013_dest->_method_is_any()) {
		_32931_ok = (!((*this)._field_ignore_any)) || _33117_src->_method_is_any();
		return _32931_ok;
	}
	_32931_ok = _1d68cc3c7_types_are_compatible(_33013_dest->_method_to_str(),_33117_src->_method_to_str());
	return _32931_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check_cpp_linked(void) {
	jule::Bool _34137_ok = jule::Bool();
	_34137_ok = (*this)._field_src->_method_cpp_linked() && ((*this)._field_dest->_field_cpp_ident == (*this)._field_src->_field_cpp_ident);
	return _34137_ok;
}



jule::Bool _200c5bcc0_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _34626_ok = jule::Bool();
	if ((*this)._field_src == nullptr) {
		_34626_ok = false;
		return _34626_ok;
	}
	if ((*this)._field_dest->_field_variadic != (*this)._field_src->_field_variadic) {
		_34626_ok = false;
		return _34626_ok;
	} else if ((*this)._field_dest->_field_variadic) {
		(*this)._field_ignore_any=true;
	}
	{
		if (!(((*this)._field_dest->_method_cpp_linked()))) { goto _case_end_4880880400; }
		_case_begin_4880880400:;
		{
			_34626_ok = (*this)._method_check_cpp_linked();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880880400:;
		if (!(((*this)._field_dest->_method_prim() != nullptr))) { goto _case_end_4880880592; }
		_case_begin_4880880592:;
		{
			_34626_ok = (*this)._method_check_prim();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880880592:;
		if (!(((*this)._field_dest->_method_trt() != nullptr))) { goto _case_end_4880879648; }
		_case_begin_4880879648:;
		{
			_34626_ok = (*this)._method_check_trait();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880879648:;
		if (!(((*this)._field_dest->_method_sptr() != nullptr))) { goto _case_end_4880879744; }
		_case_begin_4880879744:;
		{
			_34626_ok = (*this)._method_check_sptr();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880879744:;
		if (!(((*this)._field_dest->_method_ptr() != nullptr))) { goto _case_end_4880879840; }
		_case_begin_4880879840:;
		{
			_34626_ok = (*this)._method_check_ptr();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880879840:;
		if (!(((*this)._field_dest->_method_slc() != nullptr))) { goto _case_end_4880879936; }
		_case_begin_4880879936:;
		{
			_34626_ok = (*this)._method_check_slc();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880879936:;
		if (!(((*this)._field_dest->_method_arr() != nullptr))) { goto _case_end_4880880832; }
		_case_begin_4880880832:;
		{
			_34626_ok = (*this)._method_check_arr();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880880832:;
		if (!(((*this)._field_dest->_method_map() != nullptr))) { goto _case_end_4880880928; }
		_case_begin_4880880928:;
		{
			_34626_ok = (*this)._method_check_map();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880880928:;
		if (!(((*this)._field_dest->_method_enm() != nullptr))) { goto _case_end_4880881024; }
		_case_begin_4880881024:;
		{
			_34626_ok = (*this)._method_check_enum();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880881024:;
		if (!(((*this)._field_dest->_method_strct() != nullptr))) { goto _case_end_4880881120; }
		_case_begin_4880881120:;
		{
			_34626_ok = (*this)._method_check_struct();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880881120:;
		if (!(((*this)._field_dest->_method_fnc() != nullptr))) { goto _case_end_4880881232; }
		_case_begin_4880881232:;
		{
			_34626_ok = (*this)._method_check_fn();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880881232:;
		if (!(((*this)._field_dest->_method_nil_compatible()))) { goto _case_end_4880881328; }
		_case_begin_4880881328:;
		{
			_34626_ok = (*this)._field_src->_method_is_nil();
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880881328:;
		_case_begin_4880878576:;
		{
			_34626_ok = false;
			return _34626_ok;
		}
		goto _match_end_4880878352;
		_case_end_4880878576:;
		_match_end_4880878352:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any;
	_Stream << "}";
	return _Stream;
}



void _200c5bcc0_AssignTypeChecker::_method_push_err(jule::Str _38427_fmt,jule::Slice<jule::Any> _38440_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_38427_fmt,_38440_args);
}



jule::Bool _200c5bcc0_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _38917_valid = true;
	{
		if (!(((*this)._field_d->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4880905472; }
		_case_begin_4880905472:;
		{
			jule::Ptr<_2185d51ad_FnIns> _39317_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_39317_f->_method_is_builtin()))) { goto _case_end_4880909248; }
				_case_begin_4880909248:;
				{
					(*this)._method_push_err(jule::Str("built-in define cannot use as anonymous function", 48),jule::Slice<jule::Any>({}));
					_38917_valid=false;
				}
				goto _match_end_4880909056;
				_case_end_4880909248:;
				if (!((_39317_f->_field_decl->_field_cpp_linked))) { goto _case_end_4880909360; }
				_case_begin_4880909360:;
				{
					(*this)._method_push_err(jule::Str("cpp-linked functions cannot use as anonymous function", 53),jule::Slice<jule::Any>({}));
					_38917_valid=false;
				}
				goto _match_end_4880909056;
				_case_end_4880909360:;
				if (!((_39317_f->_field_decl->_method_is_method()))) { goto _case_end_4880909472; }
				_case_begin_4880909472:;
				{
					(*this)._method_push_err(jule::Str("methods cannot use as anonymous function", 40),jule::Slice<jule::Any>({}));
					_38917_valid=false;
				}
				goto _match_end_4880909056;
				_case_end_4880909472:;
				if (!((_39317_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_4880909584; }
				_case_begin_4880909584:;
				{
					(*this)._method_push_err(jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
					_38917_valid=false;
				}
				goto _match_end_4880909056;
				_case_end_4880909584:;
				_match_end_4880909056:;
			}
		}
		goto _match_end_4880905312;
		_case_end_4880905472:;
		if (!(((*this)._field_d->_field_kind->_method_tup() != nullptr))) { goto _case_end_4880905584; }
		_case_begin_4880905584:;
		{
			(*this)._method_push_err(jule::Str("tuples cannot assign to single define in same time", 50),jule::Slice<jule::Any>({}));
			_38917_valid=false;
		}
		goto _match_end_4880905312;
		_case_end_4880905584:;
		_match_end_4880905312:;
	}
	return _38917_valid;
}



jule::Bool _200c5bcc0_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || ((*this)._field_dest->_method_prim() == nullptr)) || ((*this)._field_d->_field_kind->_method_prim() == nullptr)) || (!(_1d68ce6a4_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _42813_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_1d68ce6a4_is_float(_42813_kind)))) { goto _case_end_4880926224; }
		_case_begin_4880926224:;
		{
			if ((!(_200c5bcc0_float_assignable(_42813_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4880925648;
		_case_end_4880926224:;
		if (!((_1d68ce6a4_is_int(_42813_kind)))) { goto _case_end_4880926320; }
		_case_begin_4880926320:;
		{
			if ((!(_200c5bcc0_int_assignable(_42813_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow the limit of data-type", 31),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4880925648;
		_case_end_4880926320:;
		_case_begin_4880925888:;
		{
			return false;
		}
		goto _match_end_4880925648;
		_case_end_4880925888:;
		_match_end_4880925648:;
	}
	return true;
}



jule::Bool _200c5bcc0_AssignTypeChecker::_method_check(void) {
	{
		if (!(((*this)._field_d == nullptr))) { goto _case_end_4880933984; }
		_case_begin_4880933984:;
		{
			return false;
		}
		goto _match_end_4880927984;
		_case_end_4880933984:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_4880936032; }
		_case_begin_4880936032:;
		{
			return false;
		}
		goto _match_end_4880927984;
		_case_end_4880936032:;
		if (!(((*this)._method_check_const()))) { goto _case_end_4880936128; }
		_case_begin_4880936128:;
		{
			return true;
		}
		goto _match_end_4880927984;
		_case_end_4880936128:;
		_case_begin_4880932640:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token);
		}
		goto _match_end_4880927984;
		_case_end_4880932640:;
		_match_end_4880927984:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



void _200c5bcc0_FnCallArgChecker::_method_push_err_token(_2336ea198_Token _64633_token,jule::Str _64647_fmt,jule::Slice<jule::Any> _64660_args) {
	(*this)._field_e->_field_s->_method_push_err(_64633_token,_64647_fmt,_64660_args);
}



void _200c5bcc0_FnCallArgChecker::_method_push_err(jule::Str _65027_fmt,jule::Slice<jule::Any> _65040_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_65027_fmt,_65040_args);
}



jule::Slice<jule::Ptr<_2185d51ad_ParamIns>> _200c5bcc0_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && ((*this)._field_f->_field_params[0LL]->_field_decl != nullptr)) && (*this)._field_f->_field_params[0LL]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(1LL);
	}
	return (*this)._field_f->_field_params;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>& _66332_params) {
	jule::Bool _66355_ok = jule::Bool();
	jule::I64 _66417_n = _66332_params.len();
	if ((_66417_n > 0LL) && _66332_params[0LL]->_field_decl->_method_is_self()) {
		(_66417_n)--;
	}
	jule::I64 _66917_diff = _66417_n - (*this)._field_args.len();
	{
		if (!((_66917_diff == 0LL))) { goto _case_end_4881066048; }
		_case_begin_4881066048:;
		{
			_66355_ok = true;
			return _66355_ok;
		}
		goto _match_end_4881065904;
		_case_end_4881066048:;
		if (!(((_66417_n > 0LL) && _66332_params[_66417_n - 1LL]->_field_decl->_field_variadic))) { goto _case_end_4881066160; }
		_case_begin_4881066160:;
		{
			_66355_ok = true;
			return _66355_ok;
		}
		goto _match_end_4881065904;
		_case_end_4881066160:;
		if (!(((_66917_diff < 0LL) || (_66917_diff > _66332_params.len())))) { goto _case_end_4881066272; }
		_case_begin_4881066272:;
		{
			(*this)._method_push_err(jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
			_66355_ok = false;
			return _66355_ok;
		}
		goto _match_end_4881065904;
		_case_end_4881066272:;
		_match_end_4881065904:;
	}
	jule::Str _68217_idents = jule::Str();
	for (; _66917_diff > 0LL; (_66917_diff)--) {
		{
			_68217_idents+=jule::Str(", ", 2) + _66332_params[_66417_n - _66917_diff]->_field_decl->_field_ident;
		}
	_iter_next_4881070752:;
	}
	_iter_end_4881070752:;
	_68217_idents=_68217_idents.slice(2LL);
	(*this)._method_push_err(jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(_68217_idents)}));
	_66355_ok = false;
	return _66355_ok;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_check_arg(jule::Ptr<_2185d51ad_ParamIns>& _69233_p,jule::Ptr<_218751758_Data>& _69252_arg,_2336ea198_Token& _69269_error_token) {
	jule::Bool _69291_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation && _2185d51ad_parameter_uses_generics(_69233_p->_field_decl,(*this)._field_f->_field_decl->_field_generics)) {
		_200c5bcc0_DynamicTypeAnnotation _69421_dta = _200c5bcc0_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_69233_p,_69252_arg,_69269_error_token,nullptr);
		_69291_ok=_69421_dta._method_annotate();
		if ((!(_69291_ok))) {
			(*this)._method_push_err_token(_69269_error_token,jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
			_69291_ok = false;
			return _69291_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_69233_p->_field_decl->_field_mutable,_69233_p->_field_decl->_field_reference,_69233_p->_field_kind,_69252_arg,_69269_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_69233_p->_field_decl->_field_reference,_69233_p->_field_kind,_69252_arg,_69269_error_token);
	_69291_ok = true;
	return _69291_ok;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_push(jule::Ptr<_2185d51ad_ParamIns>& _71428_p,jule::Ptr<_233464770_Expr> _71446_arg) {
	jule::Bool _71460_ok = jule::Bool();
	jule::Ptr<_200d010d9_TypeKind> _71517_old = (*this)._field_e->_field_prefix;
	jule::Bool _71613_old_immut = (*this)._field_e->_field_immutable;
	jule::Ptr<_218751758_Data> _71717_d = nullptr;
	(*this)._field_e->_field_immutable=(!(_71428_p->_field_decl->_field_mutable));
	if ((!((*this)._field_dynamic_annotation)) && (!(_71428_p->_field_decl->_field_variadic))) {
		(*this)._field_e->_field_prefix=_71428_p->_field_kind;
	} else {
		(*this)._field_e->_field_prefix=nullptr;
	}
	_71717_d=(*this)._field_e->_method_eval_expr_kind(_71446_arg->_field_kind);
	(*this)._field_e->_field_prefix=_71517_old;
	(*this)._field_e->_field_immutable=_71613_old_immut;
	if (_71717_d == nullptr) {
		_71460_ok = false;
		return _71460_ok;
	}
	(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_71717_d->_field_model}));
	_71460_ok = (*this)._method_check_arg(_71428_p,_71717_d,_71446_arg->_field_token);
	return _71460_ok;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_push_variadic(jule::Ptr<_2185d51ad_ParamIns>& _73837_p,jule::Int _73855_i) {
	jule::Bool _73865_ok = jule::Bool();
	_73865_ok=true;
	jule::Bool _74017_variadiced = false;
	jule::Bool _74113_more = (_73855_i + 1LL) < (*this)._field_args.len();
	jule::Ptr<_2188586ea_SliceExprModel> _74217_model = jule::new_struct<_2188586ea_SliceExprModel>(new( std::nothrow ) _2188586ea_SliceExprModel(_73837_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ptr<_200d010d9_TypeKind> _74617_old = (*this)._field_e->_field_prefix;
	for (; _73855_i < (*this)._field_args.len(); (_73855_i)++) {
		{
			jule::Ptr<_233464770_Expr> _74821_arg = (*this)._field_args[_73855_i];
			{
				auto _match_expr{ _74821_arg->_field_kind };
				if (!(_match_expr.type_is<jule::Ptr<_233464770_VariadicExpr>>())) { goto _case_end_4881117456; }
				_case_begin_4881117456:;
				{
					(*this)._field_e->_field_prefix=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_73837_p->_field_kind))));
				}
				goto _match_end_4881116448;
				_case_end_4881117456:;
				_case_begin_4881114704:;
				{
					(*this)._field_e->_field_prefix=_73837_p->_field_kind;
				}
				goto _match_end_4881116448;
				_case_end_4881114704:;
				_match_end_4881116448:;
			}
			jule::Ptr<_218751758_Data> _75821_d = (*this)._field_e->_method_eval_expr_kind(_74821_arg->_field_kind);
			if (_75821_d == nullptr) {
				_73865_ok=false;
				goto _iter_next_4881112608;
			}
			if (_75821_d->_field_variadiced) {
				_74017_variadiced=true;
				_75821_d->_field_variadiced=false;
				_73837_p->_field_kind->_field_variadic=true;
				_75821_d->_field_kind->_field_variadic=true;
				__JULE_DEFER({
					_75821_d->_field_kind->_field_variadic=false;
					_73837_p->_field_kind->_field_variadic=false;
				});
				{
					auto _match_expr{ _75821_d->_field_model };
					if (!(_match_expr.type_is<jule::Ptr<_2188586ea_SliceExprModel>>())) { goto _case_end_4881145920; }
					_case_begin_4881145920:;
					{
						_74217_model=_75821_d->_field_model.operator jule::Ptr<_2188586ea_SliceExprModel>();
						_74217_model->_field_elem_kind=_73837_p->_field_kind;
					}
					goto _match_end_4881140928;
					_case_end_4881145920:;
					_case_begin_4881140144:;
					{
						_74217_model=nullptr;
						(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({_75821_d->_field_model}));
					}
					goto _match_end_4881140928;
					_case_end_4881140144:;
					_match_end_4881140928:;
				}
				_73865_ok=(*this)._method_check_arg(_73837_p,_75821_d,_74821_arg->_field_token) && _73865_ok;
				goto _iter_next_4881112608;
			}
			_74217_model->_field_elems=jule::append(_74217_model->_field_elems,jule::Slice<jule::Any>({_75821_d->_field_model}));
			_73865_ok=(*this)._method_check_arg(_73837_p,_75821_d,_74821_arg->_field_token) && _73865_ok;
		}
	_iter_next_4881112608:;
	}
	_iter_end_4881112608:;
	(*this)._field_e->_field_prefix=_74617_old;
	if (_74017_variadiced && _74113_more) {
		(*this)._method_push_err(jule::Str("variadic argument can't use with more argument", 46),jule::Slice<jule::Any>({}));
	}
	if (_74217_model != nullptr) {
		(*this)._field_arg_models=jule::append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_74217_model)}));
	}
	_73865_ok = _73865_ok;
	return _73865_ok;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>& _80434_params) {
	jule::Bool _80457_ok = jule::Bool();
	_80457_ok=true;
	jule::Int _80617_i = 0LL;
	_julec_label_iter:;
	while (_80617_i < _80434_params.len()) {
		{
			jule::Ptr<_2185d51ad_ParamIns> _80921_p = _80434_params[_80617_i];
			{
				if (!((_80921_p->_field_decl->_method_is_self()))) { goto _case_end_4881159984; }
				goto _match_end_4881159088;
				_case_end_4881159984:;
				if (!((_80921_p->_field_decl->_field_variadic))) { goto _case_end_4881160288; }
				_case_begin_4881160288:;
				{
					_80457_ok=(*this)._method_push_variadic(_80921_p,_80617_i) && _80457_ok;
					goto _iter_end_4881155920;
				}
				goto _match_end_4881159088;
				_case_end_4881160288:;
				if (!(((*this)._field_args.len() <= _80617_i))) { goto _case_end_4881160384; }
				_case_begin_4881160384:;
				{
					_80457_ok=false;
					goto _iter_end_4881155920;
				}
				goto _match_end_4881159088;
				_case_end_4881160384:;
				_case_begin_4881159200:;
				{
					_80457_ok=(*this)._method_push(_80921_p,(*this)._field_args[_80617_i]) && _80457_ok;
				}
				goto _match_end_4881159088;
				_case_end_4881159200:;
				_match_end_4881159088:;
			}
			(_80617_i)++;
		}
	_iter_next_4881155920:;
	}
	_iter_end_4881155920:;
	_80457_ok = _80457_ok;
	return _80457_ok;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _83150_ok = jule::Bool();
	{
		auto expr = (*this)._field_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4881167632:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeKind> _200c5bcc0_g = *it;
			{
				if (_200c5bcc0_g == nullptr) {
					(*this)._method_push_err(jule::Str("dynamic type annotation failed", 30),jule::Slice<jule::Any>({}));
					_83150_ok = false;
					return _83150_ok;
				}
			}
			_iter_next_4881167632:;
			++it;
			goto _iter_begin_4881167632;
		}
		_iter_end_4881167632:;
	}
	_83150_ok = true;
	return _83150_ok;
}



jule::Bool _200c5bcc0_FnCallArgChecker::_method_check(void) {
	jule::Bool _84126_ok = jule::Bool();
	jule::Slice<jule::Ptr<_2185d51ad_ParamIns>> _84217_params = (*this)._method_get_params();
	_84126_ok=(*this)._method_check_counts(_84217_params);
	if ((!(_84126_ok))) {
		_84126_ok = false;
		return _84126_ok;
	}
	_84126_ok=(*this)._method_check_args(_84217_params);
	if (_84126_ok && (*this)._field_dynamic_annotation) {
		_84126_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_84126_ok = _84126_ok;
	return _84126_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



void _200c5bcc0_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_200c5bcc0_get_fn_result_types((*this)._field_f);
}



void _200c5bcc0_RetTypeChecker::_method_prepare_exprs(jule::Ptr<_233464770_Expr>& _118637_e) {
	if (_118637_e == nullptr) {
		return;
	}
	{
		auto _match_expr{ _118637_e->_field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TupleExpr>>())) { goto _case_end_4881360192; }
		_case_begin_4881360192:;
		{
			(*this)._field_exprs=_118637_e->_field_kind.operator jule::Ptr<_233464770_TupleExpr>()->_field_expr;
		}
		goto _match_end_4881355744;
		_case_end_4881360192:;
		_case_begin_4881356528:;
		{
			(*this)._field_exprs=jule::append((*this)._field_exprs,jule::Slice<jule::Ptr<_233464770_Expr>>({_118637_e}));
		}
		goto _match_end_4881355744;
		_case_end_4881356528:;
		_match_end_4881355744:;
	}
}



void _200c5bcc0_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ptr<_200c58948_Var>>::alloc(0LL,static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len()));
	jule::Ptr<_2186ce186_ScopeChecker> _120617_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _120817_j = 0LL;
	{
		auto expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4881367008:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			_2336ea198_Token _200c5bcc0_ident = *it;
			{
				if ((!(_2336ea198_is_ignore_ident(_200c5bcc0_ident._field_kind)))) {
					(*this)._field_vars=jule::append((*this)._field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_120617_root_scope->_field_table->_field_vars[_120817_j]}));
					(_120817_j)++;
				} else {
					(*this)._field_vars=jule::append((*this)._field_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({jule::new_struct<_200c58948_Var>(new( std::nothrow ) _200c58948_Var(jule::Ptr<_2186ce186_Scope>(),_2336ea198_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),(*this)._field_types[_200c5bcc0_i])),jule::Ptr<_218751758_Value>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_200c58948_IterRelation>(),jule::Slice<jule::Ptr<_200c58948_Var>>()))}));
				}
			}
			_iter_next_4881367008:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4881367008;
		}
		_iter_end_4881367008:;
	}
	if (_120817_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



void _200c5bcc0_RetTypeChecker::_method_check_exprs(void) {
	if ((*this)._field_exprs.len() == 0LL) {
		return;
	}
	jule::Slice<jule::Ptr<_218751758_Data>> _123217_datas = jule::Slice<jule::Ptr<_218751758_Data>>::alloc(0LL,static_cast<jule::I64>((*this)._field_exprs.len()));
	{
		auto expr = (*this)._field_exprs;
		auto it = expr.begin();
		_iter_begin_4881377632:;
		if (it != expr.end()) {
			jule::Int _200c5bcc0_i = it - expr.begin();
			jule::Ptr<_233464770_Expr> _200c5bcc0_expr = *it;
			{
				if (_200c5bcc0_i >= (*this)._field_types.len()) {
					goto _iter_end_4881377632;
				}
				jule::Ptr<_200d010d9_TypeKind> _123921_t = (*this)._field_types[_200c5bcc0_i];
				jule::Ptr<_218751758_Data> _124121_d = (*this)._field_sc->_field_s->_method_evalp((*this)._field_sc,_123921_t)->_method_eval_expr(_200c5bcc0_expr);
				if (_124121_d == nullptr) {
					goto _iter_next_4881377632;
				}
				_123217_datas=jule::append(_123217_datas,jule::Slice<jule::Ptr<_218751758_Data>>({_124121_d}));
				if ((!(_124121_d->_field_mutable)) && _124121_d->_field_kind->_method_mutable()) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("mutable typed return expressions should be mutable", 50),jule::Slice<jule::Any>({}));
					return;
				}
				_200c5bcc0_AssignTypeChecker _125321_ac = _200c5bcc0_AssignTypeChecker((*this)._field_sc->_field_s,_123921_t,_124121_d,(*this)._field_error_token);
				_125321_ac._method_check();
			}
			_iter_next_4881377632:;
			++it;
			_200c5bcc0_i++;
			goto _iter_begin_4881377632;
		}
		_iter_end_4881377632:;
	}
	if (_123217_datas.len() > 1LL) {
		(*this)._field_model=jule::Any(jule::new_struct<_2188586ea_TupleExprModel>(new( std::nothrow ) _2188586ea_TupleExprModel(_123217_datas)));
	} else if (_123217_datas.len() == 1LL) {
		(*this)._field_model=_123217_datas[0LL]->_field_model;
	}
}



jule::Bool _200c5bcc0_RetTypeChecker::_method_check(jule::Ptr<_233464770_Expr>& _127229_e) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_127229_e);
	(*this)._method_ret_vars();
	jule::I64 _127713_n = (*this)._field_exprs.len();
	if ((_127713_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("return statements of non-void functions should have return expression", 69),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_127713_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void functions is cannot returns any value", 42),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_127713_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow return expressions", 27),jule::Slice<jule::Any>({}));
	} else if (_127713_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing return expressions for multi return", 43),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _200c5bcc0_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



jule::Bool _218751758_BinopSolver::_method_check_type_compatibility(void) {
	_200c5bcc0_TypeCompatibilityChecker _343217_tcc = _200c5bcc0_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,jule::Bool());
	return _343217_tcc._method_check();
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_nil(void) {
	if ((!((*this)._field_r->_field_kind->_method_nil_compatible()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883170304; }
		_case_begin_4883170304:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883162640;
		_case_end_4883170304:;
		_case_begin_4883166048:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return nullptr;
		}
		goto _match_end_4883162640;
		_case_end_4883166048:;
		_match_end_4883162640:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_enum(void) {
	jule::Ptr<_2186be3da_Enum> _346317_enm = (*this)._field_l->_field_kind->_method_enm();
	if (((*this)._field_r->_field_kind->_method_enm() == nullptr) || (_346317_enm != (*this)._field_r->_field_kind->_method_enm())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_346317_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str(">", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4883182032; }
		_case_begin_4883182032:;
		{
			if ((!(_1d68ce6a4_is_num(_346317_enm->_field_kind->_field_kind->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_346317_enm->_field_ident)}));
				return nullptr;
			}
			goto _case_begin_4883181664;
		}
		goto _match_end_4883173120;
		_case_end_4883182032:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883181664; }
		_case_begin_4883181664:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883173120;
		_case_end_4883181664:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_4883181760; }
		_case_begin_4883181760:;
		{
			if ((_346317_enm->_field_kind->_field_kind->_method_prim() == nullptr) || (!(_1d68ce6a4_is_int(_346317_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_346317_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4883173120;
		_case_end_4883181760:;
		_case_begin_4883176624:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_346317_enm->_field_ident)}));
			return nullptr;
		}
		goto _match_end_4883173120;
		_case_end_4883176624:;
		_match_end_4883173120:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_sptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883203008; }
		_case_begin_4883203008:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883194832;
		_case_end_4883203008:;
		_case_begin_4883198576:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883194832;
		_case_end_4883198576:;
		_match_end_4883194832:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_ptr(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4883209824; }
		_case_begin_4883209824:;
		{
			if ((!((*this)._method_check_type_compatibility()))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return nullptr;
			}
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883205616;
		_case_end_4883209824:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr)) { goto _case_end_4883209520; }
		_case_begin_4883209520:;
		{
			if ((*this)._field_l->_field_kind->_method_ptr() == nullptr) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			if ((*this)._field_l->_field_kind->_method_ptr()->_method_is_unsafe()) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			}
			if ((!(_218751758_is_ptr_arithmetic_compatible_int((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("type \"@\" is incompatible to use for pointer arithmetic", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
				return nullptr;
			}
			return (*this)._field_l;
		}
		goto _match_end_4883205616;
		_case_end_4883209520:;
		_case_begin_4883199296:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883205616;
		_case_end_4883199296:;
		_match_end_4883205616:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883252240; }
		_case_begin_4883252240:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883244032;
		_case_end_4883252240:;
		_case_begin_4883247840:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883244032;
		_case_end_4883247840:;
		_match_end_4883244032:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883262928; }
		_case_begin_4883262928:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883254640;
		_case_end_4883262928:;
		_case_begin_4883248816:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883254640;
		_case_end_4883248816:;
		_match_end_4883254640:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883273616; }
		_case_begin_4883273616:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883265328;
		_case_end_4883273616:;
		_case_begin_4883259264:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883265328;
		_case_end_4883259264:;
		_match_end_4883265328:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883284304; }
		_case_begin_4883284304:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883276016;
		_case_end_4883284304:;
		_case_begin_4883269952:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883276016;
		_case_end_4883269952:;
		_match_end_4883276016:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883295120; }
		_case_begin_4883295120:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883286832;
		_case_end_4883295120:;
		_case_begin_4883290656:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883286832;
		_case_end_4883290656:;
		_match_end_4883286832:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883300944; }
		_case_begin_4883300944:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883297728;
		_case_end_4883300944:;
		_case_begin_4883291376:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return nullptr;
		}
		goto _match_end_4883297728;
		_case_end_4883291376:;
		_match_end_4883297728:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_4883312144; }
		_case_begin_4883312144:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4883303856;
		_case_end_4883312144:;
		_case_begin_4883298448:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return nullptr;
		}
		goto _match_end_4883303856;
		_case_end_4883298448:;
		_match_end_4883303856:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_str(void) {
	jule::Str _370117_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_370117_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_370117_rk)}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4883322768; }
		_case_begin_4883322768:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4883315312;
		_case_end_4883322768:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883322864; }
		_case_begin_4883322864:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883315312;
		_case_end_4883322864:;
		_case_begin_4883319312:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return nullptr;
		}
		goto _match_end_4883315312;
		_case_end_4883319312:;
		_match_end_4883315312:;
	}
}



void _218751758_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _372717_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _372817_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_1d68cc3c7_is_greater(_372817_rk,_372717_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



void _218751758_BinopSolver::_method_check_mod_data(jule::Ptr<_218751758_Data>& _374338_d) {
	if ((!(_374338_d->_method_is_const()))) {
		if ((_374338_d->_field_kind->_method_prim() == nullptr) || (!(_1d68ce6a4_is_int(_374338_d->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		return;
	}
	{
		if (!((_200c5bcc0_sig_assignable(jule::Str("i64", 3),_374338_d)))) { goto _case_end_4883342336; }
		_case_begin_4883342336:;
		{
			_374338_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_374338_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4883337488;
		_case_end_4883342336:;
		if (!((_200c5bcc0_unsig_assignable(jule::Str("u64", 3),_374338_d)))) { goto _case_end_4883342432; }
		_case_begin_4883342432:;
		{
			_374338_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_374338_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4883337488;
		_case_end_4883342432:;
		_case_begin_4883337600:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("module operator must be used with integer type", 46),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4883337488;
		_case_end_4883337600:;
		_match_end_4883337488:;
	}
}



void _218751758_BinopSolver::_method_mod(void) {
	(*this)._method_check_mod_data((*this)._field_l);
	(*this)._method_check_mod_data((*this)._field_r);
}



jule::Bool _218751758_BinopSolver::_method_numbers_are_compatibile(jule::Str& _376839_lk,jule::Str& _376849_rk) {
	if ((*this)._field_l->_method_is_const()) {
		return true;
	}
	if (_376839_lk == jule::Str("f32", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _376849_rk == jule::Str("f32", 3);
	}
	if (_376839_lk == jule::Str("f64", 3)) {
		if ((*this)._field_r->_method_is_const()) {
			return true;
		}
		return _376849_rk == jule::Str("f64", 3);
	}
	if ((*this)._field_r->_method_is_const()) {
		if ((!((*this)._field_r->_field_constant->_method_is_f64()))) {
			return true;
		}
		{
			auto _match_expr{ (*this)._field_r->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_1d68bd462_Const>>())) { goto _case_end_4883361968; }
			_case_begin_4883361968:;
			{
				return _200c5bcc0_int_assignable(jule::Str("int", 3),(*this)._field_r) || _200c5bcc0_int_assignable(jule::Str("uint", 4),(*this)._field_r);
			}
			goto _match_end_4883361520;
			_case_end_4883361968:;
			_case_begin_4883358688:;
			{
				return false;
			}
			goto _match_end_4883361520;
			_case_end_4883358688:;
			_match_end_4883361520:;
		}
	}
	return (!(_1d68ce6a4_is_float(_376849_rk)));
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_float(void) {
	jule::Str _380713_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _380813_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_380713_lk,_380813_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_380713_lk),jule::Any(_380813_rk)}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4883368960; }
		_case_begin_4883368960:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883368880;
		_case_end_4883368960:;
		_match_end_4883368880:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_4883378128; }
		_case_begin_4883378128:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4883375488;
		_case_end_4883378128:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4883378224; }
		_case_begin_4883378224:;
		{
			if ((!(_1d68ce6a4_is_int(_380813_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_380713_lk),jule::Any(_380813_rk)}));
				return nullptr;
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4883375488;
		_case_end_4883378224:;
		_case_begin_4883374992:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for floating-point type(s)", 52),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4883375488;
		_case_end_4883374992:;
		_match_end_4883375488:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _385313_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _385413_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_385313_lk,_385413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_385313_lk),jule::Any(_385413_rk)}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4883387488; }
		_case_begin_4883387488:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883387408;
		_case_end_4883387488:;
		_match_end_4883387408:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4883395600; }
		_case_begin_4883395600:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4883391088;
		_case_end_4883395600:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4883395696; }
		_case_begin_4883395696:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4883391088;
		_case_end_4883395696:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4883395792; }
		_case_begin_4883395792:;
		{
			if ((!(_218751758_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return nullptr;
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4883391088;
		_case_end_4883395792:;
		_case_begin_4883391280:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for unsigned integer type(s)", 54),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4883391088;
		_case_end_4883391280:;
		_match_end_4883391088:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _391213_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _391313_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!((*this)._method_numbers_are_compatibile(_391213_lk,_391313_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_391213_lk),jule::Any(_391313_rk)}));
		return nullptr;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4883411120; }
		_case_begin_4883411120:;
		{
			return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("bool", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
		}
		goto _match_end_4883408656;
		_case_end_4883411120:;
		_match_end_4883408656:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_4883417664; }
		_case_begin_4883417664:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4883412576;
		_case_end_4883417664:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4883417296; }
		_case_begin_4883417296:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4883412576;
		_case_end_4883417296:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4883417392; }
		_case_begin_4883417392:;
		{
			if ((!(_218751758_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bit shifting value is must be unsigned", 38),jule::Slice<jule::Any>({}));
				return nullptr;
			}
			return (*this)._field_l;
		}
		goto _match_end_4883412576;
		_case_end_4883417392:;
		_case_begin_4883414672:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for integer type(s)", 45),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return nullptr;
		}
		goto _match_end_4883412576;
		_case_end_4883414672:;
		_match_end_4883412576:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval_prim(void) {
	jule::Ptr<_200d010d9_Prim> _396713_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_396713_prim->_method_is_any()))) { goto _case_end_4883427008; }
		_case_begin_4883427008:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4883426832;
		_case_end_4883427008:;
		if (!((_396713_prim->_method_is_bool()))) { goto _case_end_4883427120; }
		_case_begin_4883427120:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4883426832;
		_case_end_4883427120:;
		if (!((_396713_prim->_method_is_str()))) { goto _case_end_4883427232; }
		_case_begin_4883427232:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4883426832;
		_case_end_4883427232:;
		_match_end_4883426832:;
	}
	jule::Ptr<_200d010d9_Prim> _397413_rprim = (*this)._field_r->_field_kind->_method_prim();
	if (_397413_rprim == nullptr) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_396713_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return nullptr;
	}
	jule::Str _398013_lk = _396713_prim->_method_to_str();
	{
		if (!((_1d68ce6a4_is_float(_398013_lk)))) { goto _case_end_4883438368; }
		_case_begin_4883438368:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4883436848;
		_case_end_4883438368:;
		if (!((_1d68ce6a4_is_unsig_int(_398013_lk)))) { goto _case_end_4883437936; }
		_case_begin_4883437936:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4883436848;
		_case_end_4883437936:;
		if (!((_1d68ce6a4_is_sig_int(_398013_lk)))) { goto _case_end_4883438048; }
		_case_begin_4883438048:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4883436848;
		_case_end_4883438048:;
		_case_begin_4883436960:;
		{
			return nullptr;
		}
		goto _match_end_4883436848;
		_case_end_4883436960:;
		_match_end_4883436848:;
	}
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_void()))) { goto _case_end_4883444016; }
		_case_begin_4883444016:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("@ operator is not defined for @ type", 36),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return nullptr;
		}
		goto _match_end_4883442496;
		_case_end_4883444016:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_4883443648; }
		_case_begin_4883443648:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4883442496;
		_case_end_4883443648:;
		if (!(((*this)._field_l->_field_kind->_method_enm() != nullptr))) { goto _case_end_4883443744; }
		_case_begin_4883443744:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4883442496;
		_case_end_4883443744:;
		if (!((((*this)._field_l->_field_kind->_method_sptr() != nullptr) || ((*this)._field_r->_field_kind->_method_sptr() != nullptr)))) { goto _case_end_4883443840; }
		_case_begin_4883443840:;
		{
			return (*this)._method_eval_sptr();
		}
		goto _match_end_4883442496;
		_case_end_4883443840:;
		if (!((((*this)._field_l->_field_kind->_method_ptr() != nullptr) || ((*this)._field_r->_field_kind->_method_ptr() != nullptr)))) { goto _case_end_4883444208; }
		_case_begin_4883444208:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4883442496;
		_case_end_4883444208:;
		if (!(((*this)._field_l->_field_kind->_method_arr() != nullptr))) { goto _case_end_4883444304; }
		_case_begin_4883444304:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4883442496;
		_case_end_4883444304:;
		if (!(((*this)._field_l->_field_kind->_method_slc() != nullptr))) { goto _case_end_4883444400; }
		_case_begin_4883444400:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4883442496;
		_case_end_4883444400:;
		if (!(((*this)._field_l->_field_kind->_method_fnc() != nullptr))) { goto _case_end_4883442960; }
		_case_begin_4883442960:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4883442496;
		_case_end_4883442960:;
		if (!((((*this)._field_l->_field_kind->_method_trt() != nullptr) || ((*this)._field_r->_field_kind->_method_trt() != nullptr)))) { goto _case_end_4883443056; }
		_case_begin_4883443056:;
		{
			if ((*this)._field_r->_field_kind->_method_trt() != nullptr) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4883442496;
		_case_end_4883443056:;
		if (!(((*this)._field_l->_field_kind->_method_strct() != nullptr))) { goto _case_end_4883443152; }
		_case_begin_4883443152:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4883442496;
		_case_end_4883443152:;
		if (!(((*this)._field_l->_field_kind->_method_prim() != nullptr))) { goto _case_end_4883443248; }
		_case_begin_4883443248:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4883442496;
		_case_end_4883443248:;
		_case_begin_4883442672:;
		{
			return nullptr;
		}
		goto _match_end_4883442496;
		_case_end_4883442672:;
		_match_end_4883442496:;
	}
}



void _218751758_BinopSolver::_method_solve_const(jule::Ptr<_218751758_Data>& _403335_d) {
	{
		if (!((_403335_d == nullptr))) { goto _case_end_4883472288; }
		_case_begin_4883472288:;
		{
			return;
		}
		goto _match_end_4883472064;
		_case_end_4883472288:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_4883472400; }
		_case_begin_4883472400:;
		{
			_403335_d->_field_constant=nullptr;
			return;
		}
		goto _match_end_4883472064;
		_case_end_4883472400:;
		_match_end_4883472064:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_4883473024; }
		_case_begin_4883473024:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883473024:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_4883474896; }
		_case_begin_4883474896:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))))));
		}
		goto _match_end_4883476144;
		_case_end_4883474896:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_4883474992; }
		_case_begin_4883474992:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_or((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883474992:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4883476288; }
		_case_begin_4883476288:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_and((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883476288:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_4883476384; }
		_case_begin_4883476384:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883476384:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_4883476480; }
		_case_begin_4883476480:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883476480:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_4883476576; }
		_case_begin_4883476576:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_gt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883476576:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_4883476672; }
		_case_begin_4883476672:;
		{
			_403335_d->_field_constant=_1d68bd462_Const::_static_method_new_bool((*this)._field_l->_field_constant->_method_lt((*((*this)._field_r->_field_constant))) || (*this)._field_l->_field_constant->_method_eqs((*((*this)._field_r->_field_constant))));
		}
		goto _match_end_4883476144;
		_case_end_4883476672:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_4883476768; }
		_case_begin_4883476768:;
		{
			(*this)._field_l->_field_constant->_method_add((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883476768:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_4883476864; }
		_case_begin_4883476864:;
		{
			(*this)._field_l->_field_constant->_method_sub((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883476864:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_4883476960; }
		_case_begin_4883476960:;
		{
			(*this)._field_l->_field_constant->_method_mul((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883476960:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4883477072; }
		_case_begin_4883477072:;
		{
			jule::Bool _408617_ok = (*this)._field_l->_field_constant->_method_div((*((*this)._field_r->_field_constant)));
			if ((!(_408617_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477072:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4883477184; }
		_case_begin_4883477184:;
		{
			jule::Bool _409317_ok = (*this)._field_l->_field_constant->_method_mod((*((*this)._field_r->_field_constant)));
			if ((!(_409317_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide by zero", 14),jule::Slice<jule::Any>({}));
			}
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477184:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_4883477296; }
		_case_begin_4883477296:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477296:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_4883477408; }
		_case_begin_4883477408:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477408:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4883477520; }
		_case_begin_4883477520:;
		{
			(*this)._field_l->_field_constant->_method_xor((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477520:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_4883477632; }
		_case_begin_4883477632:;
		{
			(*this)._field_l->_field_constant->_method_lshift((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477632:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_4883477744; }
		_case_begin_4883477744:;
		{
			(*this)._field_l->_field_constant->_method_rshift((*((*this)._field_r->_field_constant)));
			_403335_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_4883476144;
		_case_end_4883477744:;
		_match_end_4883476144:;
	}
	_403335_d->_field_model=jule::Any(_403335_d->_field_constant);
}



void _218751758_BinopSolver::_method_post_const(jule::Ptr<_218751758_Data>& _412330_d) {
	if (_412330_d == nullptr) {
		return;
	}
	_218751758_normalize_bitsize(_412330_d);
}



void _218751758_BinopSolver::_method_check_data(jule::Ptr<_218751758_Data>& _413134_d) {
	jule::Ptr<_2185d51ad_FnIns> _413213_f = _413134_d->_field_kind->_method_fnc();
	if (((_413213_f != nullptr) && (_413213_f->_field_decl != nullptr)) && _413213_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid expression used for binary operation", 44),jule::Slice<jule::Any>({}));
	}
}



void _218751758_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_solve_explicit(jule::Ptr<_218751758_Data>& _414338_l,jule::Ptr<_218751758_Data>& _414353_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_414338_l,_414353_r);
	(*this)._method_check_datas();
	jule::Ptr<_218751758_Data> _414817_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_414338_l,_414353_r);
	(*this)._method_solve_const(_414817_d);
	(*this)._method_post_const(_414817_d);
	if (_414817_d != nullptr) {
		_414817_d->_field_lvalue=false;
		if ((!(_414817_d->_method_is_const()))) {
			_414817_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BinopExprModel>(new( std::nothrow ) _2188586ea_BinopExprModel(_414338_l->_field_model,_414353_r->_field_model,(*this)._field_op._field_kind)));
		}
	}
	return _414817_d;
}



jule::Ptr<_218751758_Data> _218751758_BinopSolver::_method_solve(jule::Ptr<_233464770_BinopExpr>& _416829_op) {
	jule::Ptr<_218751758_Data> _416917_l = (*this)._field_e->_method_eval_expr_kind(_416829_op->_field_left);
	if ((_416917_l == nullptr) || (_416917_l->_field_kind == nullptr)) {
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _417417_r = (*this)._field_e->_method_eval_expr_kind(_416829_op->_field_right);
	if ((_417417_r == nullptr) || (_417417_r->_field_kind == nullptr)) {
		return nullptr;
	}
	(*this)._field_op=_416829_op->_field_op;
	jule::Ptr<_218751758_Data> _418117_d = (*this)._method_solve_explicit(_416917_l,_417417_r);
	if (((_418117_d != nullptr) && _416917_l->_field_is_rune) && _417417_r->_field_is_rune) {
		_418117_d->_field_is_rune=true;
	}
	return _418117_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _218751758_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "generic:" << _Src._field_generic << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



jule::Bool _233464770_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_FnDecl::_method_is_anon(void) {
	return (*this)._field_ident == jule::Str("<anonymous>", 11);
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



void _200d010d9_TypeChecker::_method_push_err(_2336ea198_Token _68027_token,jule::Str _68041_fmt,jule::Slice<jule::Any> _68054_args) {
	(*this)._field_s->_method_push_err(_68027_token,_68041_fmt,_68054_args);
}



jule::Ptr<_200d010d9_Prim> _200d010d9_TypeChecker::_method_build_prim(jule::Ptr<_233464770_IdentTypeDecl>& _68430_decl) {
	if ((!(_200d010d9_is_prim(_68430_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if (_68430_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_68430_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_68430_decl->_field_ident)}));
		return nullptr;
	}
	return _200d010d9_build_prim_type(_68430_decl->_field_ident);
}



void _200d010d9_TypeChecker::_method_push_cycle_error(jule::Any _69831_def1,jule::Any _69842_def2,jule::Str& _69858_message) {
	
	jule::Fn<jule::Str(jule::Any&)> _70113_get_ident = jule::Fn<jule::Str(jule::Any&)>([=](jule::Any& _70129_def) mutable -> jule::Str {
		{
			auto _match_expr{ _70129_def };
			if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4883771408; }
			_case_begin_4883771408:;
			{
				return _70129_def.operator jule::Ptr<_200d010d9_TypeAlias>()->_field_ident;
			}
			goto _match_end_4883769904;
			_case_end_4883771408:;
			if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883770976; }
			_case_begin_4883770976:;
			{
				return _70129_def.operator jule::Ptr<_23461aa35_Struct>()->_field_ident;
			}
			goto _match_end_4883769904;
			_case_end_4883770976:;
			if (!(_match_expr.type_is<jule::Ptr<_2186be3da_Enum>>())) { goto _case_end_4883771072; }
			_case_begin_4883771072:;
			{
				return _70129_def.operator jule::Ptr<_2186be3da_Enum>()->_field_ident;
			}
			goto _match_end_4883769904;
			_case_end_4883771072:;
			_case_begin_4883769712:;
			{
				return jule::Str();
			}
			goto _match_end_4883769904;
			_case_end_4883769712:;
			_match_end_4883769904:;
		}
	});
	jule::Str _71013_def1_ident = _70113_get_ident(_69831_def1);
	jule::Str _71113_def2_ident = _70113_get_ident(_69842_def2);
	jule::Str _71213_refers_to = _231e4202e_logf(jule::Str("@ refers to @", 13),jule::Slice<jule::Any>({jule::Any(_71013_def1_ident),jule::Any(_71113_def2_ident)}));
	_69858_message=((_21862cb1d_str_repeat(jule::Str(" ", 1),4LL) + _71213_refers_to) + jule::Str("\n", 1)) + _69858_message;
}



jule::Bool _200d010d9_TypeChecker::_method_are_equals_cross_cycle_data_0(jule::Any _71645_a,jule::Any _71653_b) {
	{
		auto _match_expr{ _71645_a };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4883795344; }
		_case_begin_4883795344:;
		{
			{
				auto _match_expr{ _71653_b };
				if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4883796032; }
				_case_begin_4883796032:;
				{
					return _71645_a.operator jule::Ptr<_200d010d9_TypeAlias>() == _71653_b.operator jule::Ptr<_200d010d9_TypeAlias>();
				}
				goto _match_end_4883794336;
				_case_end_4883796032:;
				_case_begin_4883795488:;
				{
					return false;
				}
				goto _match_end_4883794336;
				_case_end_4883795488:;
				_match_end_4883794336:;
			}
		}
		goto _match_end_4883793648;
		_case_end_4883795344:;
		_case_begin_4883793520:;
		{
			return false;
		}
		goto _match_end_4883793648;
		_case_end_4883793520:;
		_match_end_4883793648:;
	}
}

jule::Bool _200d010d9_TypeChecker::_method_are_equals_cross_cycle_data_1(jule::Any _71645_a,jule::Any _71653_b) {
	{
		auto _match_expr{ _71645_a };
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883808544; }
		_case_begin_4883808544:;
		{
			{
				auto _match_expr{ _71653_b };
				if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883809232; }
				_case_begin_4883809232:;
				{
					return _71645_a.operator jule::Ptr<_23461aa35_Struct>() == _71653_b.operator jule::Ptr<_23461aa35_Struct>();
				}
				goto _match_end_4883807536;
				_case_end_4883809232:;
				_case_begin_4883808688:;
				{
					return false;
				}
				goto _match_end_4883807536;
				_case_end_4883808688:;
				_match_end_4883807536:;
			}
		}
		goto _match_end_4883806848;
		_case_end_4883808544:;
		_case_begin_4883806720:;
		{
			return false;
		}
		goto _match_end_4883806848;
		_case_end_4883806720:;
		_match_end_4883806848:;
	}
}



jule::Bool _200d010d9_TypeChecker::_method_check_cross_cycle(jule::Any _72932_decl,jule::Str& _72948_message) {
	{
		auto _match_expr{ _72932_decl };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4883780400; }
		_case_begin_4883780400:;
		{
			jule::Ptr<_200d010d9_TypeAlias> _73217_ta = _72932_decl.operator jule::Ptr<_200d010d9_TypeAlias>();
			{
				auto expr = _73217_ta->_field_refers;
				auto it = expr.begin();
				_iter_begin_4883783728:;
				if (it != expr.end()) {
					jule::Any _200d010d9_d = *it;
					{
						{
							auto _match_expr{ _200d010d9_d };
							if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4883784880; }
							_case_begin_4883784880:;
							{
								if ((*this)._method_are_equals_cross_cycle_data_0(_200d010d9_d,(*this)._field_referencer->_field_owner)) {
									(*this)._method_push_cycle_error(jule::Any(_73217_ta),_200d010d9_d,_72948_message);
									return false;
								}
							}
							goto _match_end_4883785344;
							_case_end_4883784880:;
							_match_end_4883785344:;
						}
						if ((!((*this)._method_check_cross_cycle(_200d010d9_d,_72948_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_73217_ta),_200d010d9_d,_72948_message);
							return false;
						}
					}
					_iter_next_4883783728:;
					++it;
					goto _iter_begin_4883783728;
				}
				_iter_end_4883783728:;
			}
		}
		goto _match_end_4883780496;
		_case_end_4883780400:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883780816; }
		_case_begin_4883780816:;
		{
			jule::Ptr<_23461aa35_Struct> _74917_s = _72932_decl.operator jule::Ptr<_23461aa35_Struct>();
			{
				auto expr = _74917_s->_field_depends;
				auto it = expr.begin();
				_iter_begin_4883786208:;
				if (it != expr.end()) {
					jule::Ptr<_23461aa35_Struct> _200d010d9_d = *it;
					{
						if ((*this)._method_are_equals_cross_cycle_data_1(jule::Any(_200d010d9_d),(*this)._field_referencer->_field_owner)) {
							(*this)._method_push_cycle_error(jule::Any(_74917_s),jule::Any(_200d010d9_d),_72948_message);
							return false;
						}
						if ((!((*this)._method_check_cross_cycle(jule::Any(_200d010d9_d),_72948_message)))) {
							(*this)._method_push_cycle_error(jule::Any(_74917_s),jule::Any(_200d010d9_d),_72948_message);
							return false;
						}
					}
					_iter_next_4883786208:;
					++it;
					goto _iter_begin_4883786208;
				}
				_iter_end_4883786208:;
			}
		}
		goto _match_end_4883780496;
		_case_end_4883780816:;
		_match_end_4883780496:;
	}
	return true;
}



jule::Bool _200d010d9_TypeChecker::_method_check_illegal_cycles(jule::Ptr<_233464770_IdentTypeDecl>& _77140_ident,jule::Any _77167_decl) {
	jule::Bool _77180_ok = jule::Bool();
	if ((*this)._field_referencer == nullptr) {
		_77180_ok = true;
		return _77180_ok;
	}
	{
		auto _match_expr{ _77167_decl };
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883814800; }
		_case_begin_4883814800:;
		{
			if ((*this)._field_not_plain) {
				_77180_ok = true;
				return _77180_ok;
			}
		}
		goto _match_end_4883815040;
		_case_end_4883814800:;
		_match_end_4883815040:;
	}
	if ((*this)._field_referencer->_field_owner == _77167_decl) {
		(*this)._method_push_err(_77140_ident->_field_token,jule::Str("illegal cycle in declaration, @ refers to itself", 48),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_77180_ok = false;
		return _77180_ok;
	}
	jule::Str _79017_message = jule::Str();
	if ((!((*this)._method_check_cross_cycle(_77167_decl,_79017_message)))) {
		jule::Str _79321_err_msg = _79017_message;
		_79017_message=jule::Str();
		(*this)._method_push_cycle_error((*this)._field_referencer->_field_owner,_77167_decl,_79017_message);
		_79321_err_msg=_79321_err_msg + _79017_message;
		(*this)._method_push_err(_77140_ident->_field_token,jule::Str("illegal cross cycle in declarations;\n@", 38),jule::Slice<jule::Any>({jule::Any(_79321_err_msg)}));
		_77180_ok = false;
		return _77180_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeAlias>>())) { goto _case_end_4883824976; }
		_case_begin_4883824976:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=jule::append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_77167_decl}));
			}
		}
		goto _match_end_4883820336;
		_case_end_4883824976:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883820416; }
		_case_begin_4883820416:;
		{
			{
				auto _match_expr{ _77167_decl };
				if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883820512; }
				_case_begin_4883820512:;
				{
					jule::Ptr<_23461aa35_Struct> _80825_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_23461aa35_Struct>();
					_80825_s->_field_depends=jule::append(_80825_s->_field_depends,jule::Slice<jule::Ptr<_23461aa35_Struct>>({_77167_decl.operator jule::Ptr<_23461aa35_Struct>()}));
				}
				goto _match_end_4883829792;
				_case_end_4883820512:;
				_match_end_4883829792:;
			}
		}
		goto _match_end_4883820336;
		_case_end_4883820416:;
		_match_end_4883820336:;
	}
	_77180_ok = true;
	return _77180_ok;
}



jule::Trait<_200d010d9_Kind> _200d010d9_TypeChecker::_method_from_type_alias(jule::Ptr<_233464770_IdentTypeDecl>& _81635_decl,jule::Ptr<_200d010d9_TypeAlias>& _81662_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_81662_ta->_field_public,_81662_ta->_field_token)))) {
		(*this)._method_push_err(_81635_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_81635_decl->_field_ident)}));
		return nullptr;
	}
	_81662_ta->_field_used=true;
	if (_81635_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_81635_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_81635_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _82917_ok = (*this)._method_check_illegal_cycles(_81635_decl,jule::Any(_81662_ta));
	if ((!(_82917_ok))) {
		return nullptr;
	}
	_82917_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_81662_ta,(*this)._field_lookup);
	if ((!(_82917_ok))) {
		return nullptr;
	}
	jule::Ptr<_200d010d9_TypeKind> _84017_kind = _81662_ta->_field_kind->_field_kind->_method_clone();
	_84017_kind->_field_generic=_81662_ta->_field_generic;
	if (_81662_ta->_field_cpp_linked) {
		_84017_kind->_field_cpp_ident=_81662_ta->_field_ident;
	}
	return _84017_kind;
}



jule::Ptr<_2186be3da_Enum> _200d010d9_TypeChecker::_method_from_enum(jule::Ptr<_233464770_IdentTypeDecl>& _85029_decl,jule::Ptr<_2186be3da_Enum>& _85056_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_85056_e->_field_public,_85056_e->_field_token)))) {
		(*this)._method_push_err(_85029_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_85029_decl->_field_ident)}));
		return nullptr;
	}
	if (_85029_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_85029_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_85029_decl->_field_ident)}));
		return nullptr;
	}
	return _85056_e;
}



jule::Bool _200d010d9_TypeChecker::_method_check_struct_ins(jule::Ptr<_23461aa35_StructIns>& _86440_ins,_2336ea198_Token& _86458_error_token) {
	jule::Bool _86480_ok = jule::Bool();
	if (_86440_ins->_field_checked) {
		_86480_ok = true;
		return _86480_ok;
	}
	_86440_ins->_field_checked=true;
	if (((*this)._field_referencer != nullptr) && ((*this)._field_referencer->_field_owner == _86440_ins->_field_decl)) {
		_86480_ok = true;
		return _86480_ok;
	}
	jule::Ptr<_218737b7e_SymbolTable> _87817_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_87817_old_file);
	});
	jule::Ptr<_218737b7e_SymbolTable> _88117_file = _1eec2c632_find_file((*this)._field_s->_field_files,_86440_ins->_field_decl->_field_token._field_file);
	if (_88117_file != nullptr) {
		(*this)._field_s->_method_set_current_file(_88117_file);
	}
	jule::Ptr<_200d010d9_Referencer> _88617_referencer = jule::new_struct<_200d010d9_Referencer>(new( std::nothrow ) _200d010d9_Referencer(_86440_ins->_field_decl->_field_ident,jule::Any(_86440_ins->_field_decl),nullptr));
	jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _89117_generics = jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>::alloc(0LL,static_cast<jule::I64>(_86440_ins->_field_generics.len()));
	{
		auto expr = _86440_ins->_field_generics;
		auto it = expr.begin();
		_iter_begin_4883873056:;
		if (it != expr.end()) {
			jule::Int _200d010d9_i = it - expr.begin();
			jule::Ptr<_200d010d9_TypeKind> _200d010d9_g = *it;
			{
				_89117_generics=jule::append(_89117_generics,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(jule::Ptr<_233464770_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_2336ea198_Token(),_86440_ins->_field_decl->_field_generics[_200d010d9_i]->_field_ident,jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_200d010d9_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4883873056:;
			++it;
			_200d010d9_i++;
			goto _iter_begin_4883873056;
		}
		_iter_end_4883873056:;
	}
	jule::Ptr<_218737b7e_SymbolTable> _90117_old_sema_file = _86440_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_86440_ins->_field_decl->_field_sema->_method_set_current_file(_90117_old_sema_file);
	});
	_200d010d9_TypeChecker _90417_tc = _200d010d9_TypeChecker(_86440_ins->_field_decl->_field_sema,_86440_ins->_field_decl->_field_sema,_88617_referencer,_2336ea198_Token(),jule::Slice<jule::Ptr<_233464770_GenericDecl>>(),_89117_generics,jule::Bool());
	{
		auto expr = _86440_ins->_field_fields;
		auto it = expr.begin();
		_iter_begin_4883883008:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_FieldIns> _200d010d9_field = *it;
			{
				jule::Ptr<_200d010d9_TypeKind> _91321_kind = _90417_tc._method_check_decl(_200d010d9_field->_field_decl->_field_kind->_field_decl);
				_86480_ok=_91321_kind != nullptr;
				if (((_86440_ins->_field_decl->_field_sema != nullptr) && ((*this)._field_s != _86440_ins->_field_decl->_field_sema)) && (_86440_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=jule::append((*this)._field_s->_field_errors,_86440_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_86480_ok))) {
					_86480_ok = false;
					return _86480_ok;
				}
				_200d010d9_field->_field_kind=_91321_kind;
				if (_200d010d9_field->_field_kind->_method_mutable()) {
					_86440_ins->_field_mutable=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_86440_ins);
				}
			}
			_iter_next_4883883008:;
			++it;
			goto _iter_begin_4883883008;
		}
		_iter_end_4883883008:;
	}
	if (_86440_ins->_field_generics.len() > 0LL) {
		{
			auto expr = _86440_ins->_field_methods;
			auto it = expr.begin();
			_iter_begin_4883894512:;
			if (it != expr.end()) {
				jule::Ptr<_2185d51ad_Fn> _200d010d9_m = *it;
				{
					(*this)._field_s->_method_check_type_method(_86440_ins,_200d010d9_m);
				}
				_iter_next_4883894512:;
				++it;
				goto _iter_begin_4883894512;
			}
			_iter_end_4883894512:;
		}
	}
	_86480_ok = true;
	return _86480_ok;
}



void _200d010d9_TypeChecker::_method_append_used_struct_reference(jule::Ptr<_23461aa35_Struct>& _94052_s) {
	if ((*this)._field_referencer == nullptr) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4883898288; }
		_case_begin_4883898288:;
		{
			jule::Ptr<_23461aa35_Struct> _94721_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ptr<_23461aa35_Struct>();
			if ((!(_94721_ref_s->_method_is_uses(_94052_s)))) {
				_94721_ref_s->_field_uses=jule::append(_94721_ref_s->_field_uses,jule::Slice<jule::Ptr<_23461aa35_Struct>>({_94052_s}));
			}
		}
		goto _match_end_4883899056;
		_case_end_4883898288:;
		_match_end_4883899056:;
	}
}



jule::Ptr<_23461aa35_StructIns> _200d010d9_TypeChecker::_method_from_struct(jule::Ptr<_233464770_IdentTypeDecl>& _95435_decl,jule::Ptr<_23461aa35_Struct>& _95462_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_95462_s->_field_public,_95462_s->_field_token)))) {
		(*this)._method_push_err(_95435_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_95435_decl->_field_ident)}));
		return nullptr;
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return nullptr;
	}
	jule::Bool _96517_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_95435_decl,jule::Any(_95462_s));
	if ((!(_96517_ok))) {
		return nullptr;
	}
	(*this)._method_append_used_struct_reference(_95462_s);
	jule::Ptr<_23461aa35_StructIns> _97117_ins = _95462_s->_method_instance();
	_97117_ins->_field_generics=jule::Slice<jule::Ptr<_200d010d9_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_95435_decl->_field_generics.len()));
	jule::Ptr<_200d010d9_Referencer> _97317_referencer = (*this)._field_referencer;
	(*this)._field_referencer=nullptr;
	{
		auto expr = _95435_decl->_field_generics;
		auto it = expr.begin();
		_iter_begin_4883917728:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_TypeDecl> _200d010d9_g = *it;
			{
				jule::Ptr<_200d010d9_TypeKind> _97621_kind = (*this)._method_build(_200d010d9_g->_field_kind);
				if (_97621_kind == nullptr) {
					_96517_ok=false;
					goto _iter_next_4883917728;
				}
				_97117_ins->_field_generics=jule::append(_97117_ins->_field_generics,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>({_97621_kind}));
			}
			_iter_next_4883917728:;
			++it;
			goto _iter_begin_4883917728;
		}
		_iter_end_4883917728:;
	}
	(*this)._field_referencer=_97317_referencer;
	if ((!(_96517_ok))) {
		return nullptr;
	}
	_96517_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_97117_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_97117_ins->_field_generics.len()),_95435_decl->_field_token);
	if ((!(_96517_ok))) {
		return nullptr;
	}
	jule::Ptr<_23461aa35_StructIns> _99517_exist_instance = _95462_s->_method_append_instance(_97117_ins);
	if (_99517_exist_instance != nullptr) {
		return _99517_exist_instance;
	}
	_96517_ok=(*this)._method_check_struct_ins(_97117_ins,_95435_decl->_field_token);
	if ((!(_96517_ok))) {
		return nullptr;
	}
	return _97117_ins;
}



jule::Trait<_200d010d9_Kind> _200d010d9_TypeChecker::_method_get_def(jule::Ptr<_233464770_IdentTypeDecl>& _101031_decl) {
	{
		auto expr = (*this)._field_ignore_generics;
		auto it = expr.begin();
		_iter_begin_4883932512:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_GenericDecl> _200d010d9_g = *it;
			{
				if (_200d010d9_g->_field_ident == _101031_decl->_field_ident) {
					return _200d010d9_build_prim_type(_200d010d9_g->_field_ident);
				}
			}
			_iter_next_4883932512:;
			++it;
			goto _iter_begin_4883932512;
		}
		_iter_end_4883932512:;
	}
	{
		auto expr = (*this)._field_use_generics;
		auto it = expr.begin();
		_iter_begin_4883933888:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeAlias> _200d010d9_g = *it;
			{
				if (_200d010d9_g->_field_ident == _101031_decl->_field_ident) {
					jule::Ptr<_23461aa35_StructIns> _101925_st = _200d010d9_g->_field_kind->_field_kind->_method_strct();
					if (_101925_st != nullptr) {
						jule::Bool _102125_ok = (*this)._method_check_illegal_cycles(_101031_decl,jule::Any(_101925_st->_field_decl));
						if ((!(_102125_ok))) {
							return nullptr;
						}
					}
					return _200d010d9_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4883933888:;
			++it;
			goto _iter_begin_4883933888;
		}
		_iter_end_4883933888:;
	}
	if ((!(_101031_decl->_field_cpp_linked))) {
		jule::Ptr<_2186be3da_Enum> _103121_e = (*this)._field_lookup.get()._method_find_enum(_101031_decl->_field_ident);
		if (_103121_e != nullptr) {
			return (*this)._method_from_enum(_101031_decl,_103121_e);
		}
		jule::Ptr<_2185da36c_Trait> _103621_t = (*this)._field_lookup.get()._method_find_trait(_101031_decl->_field_ident);
		if (_103621_t == nullptr) {
			_103621_t=_1d67e4c4b_find_builtin_trait(_101031_decl->_field_ident);
		}
		if (_103621_t != nullptr) {
			if ((!((*this)._field_s->_method_is_accessible_define(_103621_t->_field_public,_103621_t->_field_token)))) {
				(*this)._method_push_err(_101031_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101031_decl->_field_ident)}));
				return nullptr;
			}
			if (_101031_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_101031_decl->_field_token,jule::Str("type @ not supports generics", 28),jule::Slice<jule::Any>({jule::Any(_101031_decl->_field_ident)}));
				return nullptr;
			}
			return _103621_t;
		}
	}
	jule::Ptr<_23461aa35_Struct> _105417_s = (*this)._field_lookup.get()._method_find_struct(_101031_decl->_field_ident,_101031_decl->_field_cpp_linked);
	if (_105417_s != nullptr) {
		return (*this)._method_from_struct(_101031_decl,_105417_s);
	}
	jule::Ptr<_200d010d9_TypeAlias> _105917_ta = (*this)._field_lookup.get()._method_find_type_alias(_101031_decl->_field_ident,_101031_decl->_field_cpp_linked);
	if (_105917_ta == nullptr) {
		_105917_ta=_1d67e4c4b_find_builtin_type_alias(_101031_decl->_field_ident);
	}
	if (_105917_ta != nullptr) {
		return (*this)._method_from_type_alias(_101031_decl,_105917_ta);
	}
	(*this)._method_push_err(_101031_decl->_field_token,jule::Str("identifier is not exist: @", 26),jule::Slice<jule::Any>({jule::Any(_101031_decl->_field_ident)}));
	return nullptr;
}



jule::Trait<_200d010d9_Kind> _200d010d9_TypeChecker::_method_build_ident(jule::Ptr<_233464770_IdentTypeDecl> _107134_decl) {
	{
		if (!((_200d010d9_is_prim(_107134_decl->_field_ident)))) { goto _case_end_4883966640; }
		_case_begin_4883966640:;
		{
			return (*this)._method_build_prim(_107134_decl);
		}
		goto _match_end_4883965120;
		_case_end_4883966640:;
		_case_begin_4883965296:;
		{
			return (*this)._method_get_def(_107134_decl);
		}
		goto _match_end_4883965120;
		_case_end_4883965296:;
		_match_end_4883965120:;
	}
}



jule::Ptr<_200d010d9_Sptr> _200d010d9_TypeChecker::_method_build_sptr_from_type(jule::Ptr<_200d010d9_TypeKind>& _107844_elem) {
	{
		if (!((_107844_elem == nullptr))) { goto _case_end_4883969328; }
		_case_begin_4883969328:;
		{
			return nullptr;
		}
		goto _match_end_4883965744;
		_case_end_4883969328:;
		if (!((_107844_elem->_method_strct() != nullptr))) { goto _case_end_4883969424; }
		_case_begin_4883969424:;
		{
			jule::Ptr<_23461aa35_StructIns> _108517_s = _107844_elem->_method_strct();
			if ((_108517_s->_field_decl != nullptr) && _108517_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
				return nullptr;
			}
		}
		goto _match_end_4883965744;
		_case_end_4883969424:;
		if (!(((_107844_elem->_method_arr() != nullptr) && _107844_elem->_method_arr()->_field_auto))) { goto _case_end_4883969520; }
		_case_begin_4883969520:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4883965744;
		_case_end_4883969520:;
		_match_end_4883965744:;
	}
	return jule::new_struct_ptr<_200d010d9_Sptr>(new( std::nothrow ) _200d010d9_Sptr(_107844_elem));
}



jule::Ptr<_200d010d9_Sptr> _200d010d9_TypeChecker::_method_build_sptr(jule::Ptr<_233464770_SptrTypeDecl> _110133_decl) {
	jule::Bool _110213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_110213_not_plain;
	});
	jule::Ptr<_200d010d9_TypeKind> _110617_elem = (*this)._method_check_decl(_110133_decl->_field_elem);
	return (*this)._method_build_sptr_from_type(_110617_elem);
}



jule::Ptr<_200d010d9_Ptr> _200d010d9_TypeChecker::_method_build_ptr_from_type(jule::Ptr<_200d010d9_TypeKind>& _111043_elem) {
	{
		if (!((_111043_elem == nullptr))) { goto _case_end_4883985040; }
		_case_begin_4883985040:;
		{
			return nullptr;
		}
		goto _match_end_4883983248;
		_case_end_4883985040:;
		if (!(((_111043_elem->_method_arr() != nullptr) && _111043_elem->_method_arr()->_field_auto))) { goto _case_end_4883985152; }
		_case_begin_4883985152:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return jule::new_ptr<_200d010d9_Ptr>();
		}
		goto _match_end_4883983248;
		_case_end_4883985152:;
		_match_end_4883983248:;
	}
	return jule::new_struct_ptr<_200d010d9_Ptr>(new( std::nothrow ) _200d010d9_Ptr(_111043_elem));
}



jule::Ptr<_200d010d9_Ptr> _200d010d9_TypeChecker::_method_build_ptr(jule::Ptr<_233464770_PtrTypeDecl> _112632_decl) {
	jule::Bool _112713_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_112713_not_plain;
	});
	jule::Ptr<_200d010d9_TypeKind> _113117_elem = nullptr;
	if ((!(_112632_decl->_method_is_unsafe()))) {
		_113117_elem=(*this)._method_check_decl(_112632_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_113117_elem);
	}
	return jule::new_struct_ptr<_200d010d9_Ptr>(new( std::nothrow ) _200d010d9_Ptr(_113117_elem));
}



jule::Ptr<_200d010d9_Slc> _200d010d9_TypeChecker::_method_build_slc(jule::Ptr<_233464770_SlcTypeDecl> _114332_decl) {
	jule::Bool _114413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_114413_not_plain;
	});
	jule::Ptr<_200d010d9_TypeKind> _114817_elem = (*this)._method_check_decl(_114332_decl->_field_elem);
	{
		if (!((_114817_elem == nullptr))) { goto _case_end_4884002656; }
		_case_begin_4884002656:;
		{
			return nullptr;
		}
		goto _match_end_4884002496;
		_case_end_4884002656:;
		if (!(((_114817_elem->_method_arr() != nullptr) && _114817_elem->_method_arr()->_field_auto))) { goto _case_end_4884002768; }
		_case_begin_4884002768:;
		{
			(*this)._method_push_err(_114332_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4884002496;
		_case_end_4884002768:;
		_match_end_4884002496:;
	}
	return jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_114817_elem));
}



jule::Ptr<_200d010d9_Arr> _200d010d9_TypeChecker::_method_build_arr(jule::Ptr<_233464770_ArrTypeDecl> _116532_decl) {
	jule::Bool _116613_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_116613_not_plain;
	});
	jule::Int _117017_n = 0LL;
	if ((!(_116532_decl->_method_auto_sized()))) {
		jule::Ptr<_218751758_Data> _117321_size = (*this)._field_s->_method_eval((*this)._field_lookup)->_method_eval_expr(_116532_decl->_field_size);
		if (_117321_size == nullptr) {
			return nullptr;
		}
		if ((!(_117321_size->_method_is_const()))) {
			(*this)._method_push_err(_116532_decl->_field_size->_field_token,jule::Str("expressions is not constant expression", 38),jule::Slice<jule::Any>({}));
			return nullptr;
		} else if ((_117321_size->_field_kind->_method_prim() == nullptr) || (!(_1d68ce6a4_is_int(_117321_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_116532_decl->_field_size->_field_token,jule::Str("array size must be integer", 26),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		_117017_n=static_cast<jule::Int>(_117321_size->_field_constant->_method_as_i64());
		if (_117017_n < 0LL) {
			(*this)._method_push_err(_116532_decl->_field_elem->_field_token,jule::Str("array size must be positive integer", 35),jule::Slice<jule::Any>({}));
			return nullptr;
		}
	}
	jule::Ptr<_200d010d9_TypeKind> _119317_elem = (*this)._method_check_decl(_116532_decl->_field_elem);
	{
		if (!((_119317_elem == nullptr))) { goto _case_end_4884025712; }
		_case_begin_4884025712:;
		{
			return nullptr;
		}
		goto _match_end_4884022816;
		_case_end_4884025712:;
		if (!(((_119317_elem->_method_arr() != nullptr) && _119317_elem->_method_arr()->_field_auto))) { goto _case_end_4884025808; }
		_case_begin_4884025808:;
		{
			(*this)._method_push_err(_116532_decl->_field_elem->_field_token,jule::Str("array must have explicit size", 29),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4884022816;
		_case_end_4884025808:;
		_match_end_4884022816:;
	}
	return jule::new_struct_ptr<_200d010d9_Arr>(new( std::nothrow ) _200d010d9_Arr(_116532_decl->_method_auto_sized(),_117017_n,_119317_elem));
}



jule::Ptr<_200d010d9_Map> _200d010d9_TypeChecker::_method_build_map(jule::Ptr<_233464770_MapTypeDecl> _121232_decl) {
	jule::Bool _121313_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_121313_not_plain;
	});
	jule::Ptr<_200d010d9_TypeKind> _121717_key = (*this)._method_check_decl(_121232_decl->_field_key);
	if (_121717_key == nullptr) {
		return nullptr;
	}
	jule::Ptr<_200d010d9_TypeKind> _122217_val = (*this)._method_check_decl(_121232_decl->_field_val);
	if (_122217_val == nullptr) {
		return nullptr;
	}
	if (_122217_val->_method_enm() != nullptr) {
		(*this)._method_push_err(_121232_decl->_field_val->_field_token,jule::Str("maps do not support enums as map key type", 41),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct_ptr<_200d010d9_Map>(new( std::nothrow ) _200d010d9_Map(_121717_key,_122217_val));
}



jule::Ptr<_200d010d9_Tuple> _200d010d9_TypeChecker::_method_build_tuple(jule::Ptr<_233464770_TupleTypeDecl> _123634_decl) {
	jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _123717_types = jule::Slice<jule::Ptr<_200d010d9_TypeKind>>::alloc(0LL,static_cast<jule::I64>(_123634_decl->_field_types.len()));
	{
		auto expr = _123634_decl->_field_types;
		auto it = expr.begin();
		_iter_begin_4884044816:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_TypeDecl> _200d010d9_t = *it;
			{
				jule::Ptr<_200d010d9_TypeKind> _123921_kind = (*this)._method_check_decl(_200d010d9_t);
				if (_123921_kind == nullptr) {
					return nullptr;
				}
				_123717_types=jule::append(_123717_types,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>({_123921_kind}));
			}
			_iter_next_4884044816:;
			++it;
			goto _iter_begin_4884044816;
		}
		_iter_end_4884044816:;
	}
	return jule::new_struct_ptr<_200d010d9_Tuple>(new( std::nothrow ) _200d010d9_Tuple(_123717_types));
}



jule::Bool _200d010d9_TypeChecker::_method_check_fn_types(jule::Ptr<_2185d51ad_FnIns>& _124938_f) {
	jule::Bool _124951_ok = jule::Bool();
	{
		auto expr = _124938_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4884052480:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _200d010d9_p = *it;
			{
				_200d010d9_p->_field_kind=(*this)._method_build(_200d010d9_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_124951_ok=_200d010d9_p->_field_kind != nullptr;
				if ((!(_124951_ok))) {
					_124951_ok = false;
					return _124951_ok;
				}
			}
			_iter_next_4884052480:;
			++it;
			goto _iter_begin_4884052480;
		}
		_iter_end_4884052480:;
	}
	if ((!(_124938_f->_field_decl->_method_is_void()))) {
		_124938_f->_field_result=(*this)._method_build(_124938_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_124951_ok = _124938_f->_field_result != nullptr;
		return _124951_ok;
	}
	_124951_ok = true;
	return _124951_ok;
}



jule::Ptr<_2185d51ad_FnIns> _200d010d9_TypeChecker::_method_build_fn(jule::Ptr<_233464770_FnDecl> _126631_decl) {
	if (_126631_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_126631_decl->_field_token,jule::Str("genericed functions cannot use as anonymous function", 52),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_2185d51ad_Fn> _127217_f = _21862cb1d_build_fn(_126631_decl);
	jule::Ptr<_2185d51ad_FnIns> _127317_ins = _127217_f->_method_instance_force();
	_127317_ins->_field_anon=true;
	jule::Bool _127613_ok = (*this)._method_check_fn_types(_127317_ins);
	if ((!(_127613_ok))) {
		return nullptr;
	}
	return _127317_ins;
}



jule::Trait<_200d010d9_Kind> _200d010d9_TypeChecker::_method_build_by_namespace(jule::Ptr<_233464770_NamespaceTypeDecl> _128441_decl) {
	jule::Str _128513_path = _200d010d9_build_link_path_by_tokens(_128441_decl->_field_idents);
	jule::Ptr<_218848bd5_ImportInfo> _128617_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)>([=](jule::Ptr<_218848bd5_ImportInfo> _128653_imp) mutable -> jule::Bool {
		if ((_128441_decl->_field_idents.len() == 1LL) && (_128653_imp->_field_alias == _128513_path)) {
			return true;
		}
		return _128653_imp->_field_link_path == _128513_path;
	}));
	if ((_128617_imp == nullptr) || (!(_128617_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_128441_decl->_field_idents[0LL],jule::Str("namespace not exist: @", 22),jule::Slice<jule::Any>({jule::Any(_128513_path)}));
		return nullptr;
	}
	jule::Trait<_1d6734eee_Lookup> _129817_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_128617_imp;
	jule::Trait<_200d010d9_Kind> _130117_kind = (*this)._method_build_ident(_128441_decl->_field_kind);
	(*this)._field_lookup=_129817_lookup;
	return _130117_kind;
}



jule::Ptr<_200d010d9_TypeKind> _200d010d9_TypeChecker::_method_build(jule::Any& _130829_decl_kind) {
	jule::Trait<_200d010d9_Kind> _130917_kind = nullptr;
	{
		auto _match_expr{ _130829_decl_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeKind>>())) { goto _case_end_4884087616; }
		_case_begin_4884087616:;
		{
			_130917_kind=_130829_decl_kind.operator jule::Ptr<_200d010d9_TypeKind>();
		}
		goto _match_end_4884084912;
		_case_end_4884087616:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_IdentTypeDecl>>())) { goto _case_end_4884085344; }
		_case_begin_4884085344:;
		{
			jule::Trait<_200d010d9_Kind> _131621_t = (*this)._method_build_ident(_130829_decl_kind.operator jule::Ptr<_233464770_IdentTypeDecl>());
			if (_131621_t != nullptr) {
				_130917_kind=_131621_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884085344:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_SptrTypeDecl>>())) { goto _case_end_4884085440; }
		_case_begin_4884085440:;
		{
			jule::Ptr<_200d010d9_Sptr> _132221_t = (*this)._method_build_sptr(_130829_decl_kind.operator jule::Ptr<_233464770_SptrTypeDecl>());
			if (_132221_t != nullptr) {
				_130917_kind=_132221_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884085440:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_PtrTypeDecl>>())) { goto _case_end_4884085536; }
		_case_begin_4884085536:;
		{
			jule::Ptr<_200d010d9_Ptr> _132821_t = (*this)._method_build_ptr(_130829_decl_kind.operator jule::Ptr<_233464770_PtrTypeDecl>());
			if (_132821_t != nullptr) {
				_130917_kind=_132821_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884085536:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_SlcTypeDecl>>())) { goto _case_end_4884085632; }
		_case_begin_4884085632:;
		{
			jule::Ptr<_200d010d9_Slc> _133421_t = (*this)._method_build_slc(_130829_decl_kind.operator jule::Ptr<_233464770_SlcTypeDecl>());
			if (_133421_t != nullptr) {
				_130917_kind=_133421_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884085632:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_ArrTypeDecl>>())) { goto _case_end_4884087008; }
		_case_begin_4884087008:;
		{
			jule::Ptr<_200d010d9_Arr> _134021_t = (*this)._method_build_arr(_130829_decl_kind.operator jule::Ptr<_233464770_ArrTypeDecl>());
			if (_134021_t != nullptr) {
				_130917_kind=_134021_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884087008:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_MapTypeDecl>>())) { goto _case_end_4884087104; }
		_case_begin_4884087104:;
		{
			jule::Ptr<_200d010d9_Map> _134621_t = (*this)._method_build_map(_130829_decl_kind.operator jule::Ptr<_233464770_MapTypeDecl>());
			if (_134621_t != nullptr) {
				_130917_kind=_134621_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884087104:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TupleTypeDecl>>())) { goto _case_end_4884087200; }
		_case_begin_4884087200:;
		{
			jule::Ptr<_200d010d9_Tuple> _135221_t = (*this)._method_build_tuple(_130829_decl_kind.operator jule::Ptr<_233464770_TupleTypeDecl>());
			if (_135221_t != nullptr) {
				_130917_kind=_135221_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884087200:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnDecl>>())) { goto _case_end_4884087296; }
		_case_begin_4884087296:;
		{
			jule::Ptr<_2185d51ad_FnIns> _135821_t = (*this)._method_build_fn(_130829_decl_kind.operator jule::Ptr<_233464770_FnDecl>());
			if (_135821_t != nullptr) {
				_130917_kind=_135821_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884087296:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_NamespaceTypeDecl>>())) { goto _case_end_4884087792; }
		_case_begin_4884087792:;
		{
			jule::Trait<_200d010d9_Kind> _136421_t = (*this)._method_build_by_namespace(_130829_decl_kind.operator jule::Ptr<_233464770_NamespaceTypeDecl>());
			if (_136421_t != nullptr) {
				_130917_kind=_136421_t;
			}
		}
		goto _match_end_4884084912;
		_case_end_4884087792:;
		_case_begin_4884084336:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4884084912;
		_case_end_4884084336:;
		_match_end_4884084912:;
	}
	if (_130917_kind == nullptr) {
		return nullptr;
	}
	{
		auto _match_expr{ _130917_kind };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeKind>>())) { goto _case_end_4884115840; }
		_case_begin_4884115840:;
		{
			return _130917_kind.operator jule::Ptr<_200d010d9_TypeKind>();
		}
		goto _match_end_4884113312;
		_case_end_4884115840:;
		_case_begin_4884112912:;
		{
			return jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_130917_kind));
		}
		goto _match_end_4884113312;
		_case_end_4884112912:;
		_match_end_4884113312:;
	}
}



jule::Ptr<_200d010d9_TypeKind> _200d010d9_TypeChecker::_method_check_decl(jule::Ptr<_233464770_TypeDecl>& _138934_decl) {
	_2336ea198_Token _139117_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_138934_decl->_field_token;
	jule::Ptr<_200d010d9_TypeKind> _139417_kind = (*this)._method_build(_138934_decl->_field_kind);
	(*this)._field_error_token=_139117_error_token;
	return _139417_kind;
}



void _200d010d9_TypeChecker::_method_check(jule::Ptr<_200d010d9_TypeSymbol>& _140029_t) {
	if (_140029_t->_field_decl == nullptr) {
		return;
	}
	jule::Ptr<_200d010d9_TypeKind> _140517_kind = (*this)._method_check_decl(_140029_t->_field_decl);
	if (_140517_kind == nullptr) {
		_140029_t->_method_remove_kind();
		return;
	}
	_140029_t->_field_kind=_140517_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _200d010d9_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Ptr<_23301cea5_IR>,jule::Slice<_231e4202e_Log>> _23301cea5_IR::_static_method_build(jule::Str _2525_path,jule::Int _2536_flags) {
	jule::Ptr<_233336642_PlainImporter> _2617_importer = jule::new_struct<_233336642_PlainImporter>(new( std::nothrow ) _233336642_PlainImporter());
	jule::Slice<jule::Ptr<_23346420e_Ast>> _2718_files;
	jule::Slice<_231e4202e_Log> _2729_logs;
	std::tie(_2718_files,_2729_logs) = _2617_importer->_method_import_package(_2525_path);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	if (_2718_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_218848bd5_Package> _3618_pkg;
	std::tie(_3618_pkg,_2729_logs) = _1d67cdc79_analyze_package(_2718_files,_2617_importer,_2536_flags);
	if (_2729_logs.len() > 0LL) {
		return std::make_tuple(nullptr,_2729_logs);
	}
	jule::Ptr<_23301cea5_IR> _4117_ir = jule::new_struct<_23301cea5_IR>(new( std::nothrow ) _23301cea5_IR(jule::Slice<jule::Str>(),_3618_pkg,_2617_importer->_field_all_packages,_2330c4974_OrderedDefines()));
	_4117_ir->_field_passes=_23301cea5_get_all_unique_passes(_4117_ir->_field_main,_4117_ir->_field_used);
	return std::make_tuple(_4117_ir,nullptr);
}



void _23301cea5_IR::_method_append_structs(jule::Ptr<_218848bd5_Package>& _5234_p,jule::Slice<jule::Ptr<_23461aa35_Struct>>& _5258_buffer) {
	{
		auto expr = _5234_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4884362240:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _23301cea5_f = *it;
			{
				{
					auto expr = _23301cea5_f->_field_structs;
					auto it = expr.begin();
					_iter_begin_4884364128:;
					if (it != expr.end()) {
						jule::Ptr<_23461aa35_Struct> _23301cea5_s = *it;
						{
							if ((!(_23301cea5_s->_field_cpp_linked))) {
								_5258_buffer=jule::append(_5258_buffer,jule::Slice<jule::Ptr<_23461aa35_Struct>>({_23301cea5_s}));
							}
						}
						_iter_next_4884364128:;
						++it;
						goto _iter_begin_4884364128;
					}
					_iter_end_4884364128:;
				}
			}
			_iter_next_4884362240:;
			++it;
			goto _iter_begin_4884362240;
		}
		_iter_end_4884362240:;
	}
}



jule::Slice<jule::Ptr<_23461aa35_Struct>> _23301cea5_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ptr<_23461aa35_Struct>> _6517_buffer = nullptr;
	(*this)._method_append_structs((*this)._field_main,_6517_buffer);
	{
		auto expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4884367488:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _23301cea5_u = *it;
			{
				if ((!(_23301cea5_u->_field_cpp_linked))) {
					(*this)._method_append_structs(_23301cea5_u->_field_package,_6517_buffer);
				}
			}
			_iter_next_4884367488:;
			++it;
			goto _iter_begin_4884367488;
		}
		_iter_end_4884367488:;
	}
	return _6517_buffer;
}



void _23301cea5_IR::_method_append_vars(jule::Ptr<_218848bd5_Package>& _7831_p,jule::Slice<jule::Ptr<_200c58948_Var>>& _7855_buffer) {
	{
		auto expr = _7831_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4884374896:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _23301cea5_f = *it;
			{
				{
					auto expr = _23301cea5_f->_field_vars;
					auto it = expr.begin();
					_iter_begin_4884376784:;
					if (it != expr.end()) {
						jule::Ptr<_200c58948_Var> _23301cea5_v = *it;
						{
							if ((!(_23301cea5_v->_field_cpp_linked)) && (!(_23301cea5_v->_field_constant))) {
								_7855_buffer=jule::append(_7855_buffer,jule::Slice<jule::Ptr<_200c58948_Var>>({_23301cea5_v}));
							}
						}
						_iter_next_4884376784:;
						++it;
						goto _iter_begin_4884376784;
					}
					_iter_end_4884376784:;
				}
			}
			_iter_next_4884374896:;
			++it;
			goto _iter_begin_4884374896;
		}
		_iter_end_4884374896:;
	}
}



jule::Slice<jule::Ptr<_200c58948_Var>> _23301cea5_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ptr<_200c58948_Var>> _9117_buffer = nullptr;
	(*this)._method_append_vars((*this)._field_main,_9117_buffer);
	{
		auto expr = (*this)._field_used;
		auto it = expr.begin();
		_iter_begin_4884381936:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _23301cea5_u = *it;
			{
				if ((!(_23301cea5_u->_field_cpp_linked))) {
					(*this)._method_append_vars(_23301cea5_u->_field_package,_9117_buffer);
				}
			}
			_iter_next_4884381936:;
			++it;
			goto _iter_begin_4884381936;
		}
		_iter_end_4884381936:;
	}
	return _9117_buffer;
}



void _23301cea5_IR::_method_order(void) {
	(*this)._field_ordered._field_structs=(*this)._method_get_all_structures();
	(*this)._field_ordered._field_globals=(*this)._method_get_all_variables();
	_2330c4974_DefineOrderer::_static_method_order_variables((*this)._field_ordered._field_globals);
	_2330c4974_DefineOrderer::_static_method_order_structures((*this)._field_ordered._field_structs);
}







std::ostream &operator<<(std::ostream &_Stream, const _23301cea5_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "ordered:" << _Src._field_ordered;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186ce186_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}



std::tuple<jule::Int,jule::Bool> _200ad0979_ArgParser::_method_parse_integer_0(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Int _18784_x = jule::Int();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4886406304; }
		_case_begin_4886406304:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4886405344;
		_case_end_4886406304:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4886407072; }
		_case_begin_4886407072:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4886405344;
		_case_end_4886407072:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4886407616; }
		_case_begin_4886407616:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4886405344;
		_case_end_4886407616:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4886407712; }
		_case_begin_4886407712:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4886405344;
		_case_end_4886407712:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4886407808; }
		_case_begin_4886407808:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4886405344;
		_case_end_4886407808:;
		_case_begin_4886405520:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4886405344;
		_case_end_4886405520:;
		_match_end_4886405344:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}

std::tuple<jule::Uint,jule::Bool> _200ad0979_ArgParser::_method_parse_integer_1(jule::Str& _18732_s,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)> _18740_parser) {
	jule::Uint _18784_x = jule::Uint();
	jule::Bool _18790_ok = jule::Bool();
	{
		if (!((_18732_s == jule::Str()))) { goto _case_end_4886434320; }
		_case_begin_4886434320:;
		{
			_18784_x = 0LL;
			_18790_ok = false;
			return std::make_tuple(_18784_x,_18790_ok);
		}
		goto _match_end_4886433360;
		_case_end_4886434320:;
		if (!((_18732_s.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4886435088; }
		_case_begin_4886435088:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),16LL);
		}
		goto _match_end_4886433360;
		_case_end_4886435088:;
		if (!((_18732_s.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4886435632; }
		_case_begin_4886435632:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),2LL);
		}
		goto _match_end_4886433360;
		_case_end_4886435632:;
		if (!((_18732_s.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4886435728; }
		_case_begin_4886435728:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(2LL),8LL);
		}
		goto _match_end_4886433360;
		_case_end_4886435728:;
		if (!((_18732_s[0LL] == '0'))) { goto _case_end_4886435824; }
		_case_begin_4886435824:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s.slice(1LL),8LL);
		}
		goto _match_end_4886433360;
		_case_end_4886435824:;
		_case_begin_4886433536:;
		{
			std::tie(_18784_x,_18790_ok) = _18740_parser(_18732_s,10LL);
		}
		goto _match_end_4886433360;
		_case_end_4886433536:;
		_match_end_4886433360:;
	}
	return std::make_tuple(_18784_x,_18790_ok);
}



jule::Str _200ad0979_ArgParser::_method_get_data(void) {
	if (((*this)._field_i + 1LL) >= (*this)._field_args.len()) {
		return jule::Str();
	}
	((*this)._field_i)++;
	return (*this)._field_args[(*this)._field_i];
}



void _200ad0979_ArgParser::_method_process_flag(jule::Trait<_200ad0979_CommonFlag>& _21836_flag) {
	{
		auto _match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ptr<_200ad0979_Flag_3>>())) { goto _case_end_4886381696; }
		_case_begin_4886381696:;
		{
			jule::Ptr<_200ad0979_Flag_3> _22121_bf = _21836_flag.operator jule::Ptr<_200ad0979_Flag_3>();
			(*(_22121_bf->_field__data))=(!(_22121_bf->_field__default));
			return;
		}
		goto _match_end_4886382080;
		_case_end_4886381696:;
		_match_end_4886382080:;
	}
	jule::Str _22613_data = (*this)._method_get_data();
	if (_22613_data == jule::Str()) {
		(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression missing", 20);
		return;
	}
	{
		auto _match_expr{ _21836_flag };
		if (!(_match_expr.type_is<jule::Ptr<_200ad0979_Flag_0>>())) { goto _case_end_4886387264; }
		_case_begin_4886387264:;
		{
			jule::Ptr<_200ad0979_Flag_0> _23421_intf = _21836_flag.operator jule::Ptr<_200ad0979_Flag_0>();
			jule::Bool _23533_ok;
			std::tie((*(_23421_intf->_field__data)),_23533_ok) = (*this)._method_parse_integer_0(_22613_data,jule::Fn<std::tuple<jule::Int,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _23572_s,jule::Int _23580_base) mutable -> std::tuple<jule::Int,jule::Bool> {
				jule::I64 _23622_x;
				jule::Int _23625_err;
				std::tie(_23622_x,_23625_err) = _231e6dda2_parse_int(_23572_s,_23580_base,64LL);
				return std::make_tuple(_23622_x,_23625_err == 0LLU);
			}));
			if ((!(_23533_ok))) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid signed integer", 41);
			}
		}
		goto _match_end_4886387056;
		_case_end_4886387264:;
		if (!(_match_expr.type_is<jule::Ptr<_200ad0979_Flag_1>>())) { goto _case_end_4886388080; }
		_case_begin_4886388080:;
		{
			jule::Ptr<_200ad0979_Flag_1> _24421_uintf = _21836_flag.operator jule::Ptr<_200ad0979_Flag_1>();
			jule::Bool _24534_ok;
			std::tie((*(_24421_uintf->_field__data)),_24534_ok) = (*this)._method_parse_integer_1(_22613_data,jule::Fn<std::tuple<jule::Uint,jule::Bool>(jule::Str,jule::Int)>([=](jule::Str _24574_s,jule::Int _24582_base) mutable -> std::tuple<jule::Uint,jule::Bool> {
				jule::U64 _24622_x;
				jule::Int _24625_err;
				std::tie(_24622_x,_24625_err) = _231e6dda2_parse_uint(_24574_s,_24582_base,64LL);
				return std::make_tuple(_24622_x,_24625_err == 0LLU);
			}));
			if ((!(_24534_ok))) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid unsigned integer", 43);
			}
		}
		goto _match_end_4886387056;
		_case_end_4886388080:;
		if (!(_match_expr.type_is<jule::Ptr<_200ad0979_Flag_2>>())) { goto _case_end_4886388176; }
		_case_begin_4886388176:;
		{
			jule::Ptr<_200ad0979_Flag_2> _25421_ff = _21836_flag.operator jule::Ptr<_200ad0979_Flag_2>();
			jule::Int _25531_err;
			std::tie((*(_25421_ff->_field__data)),_25531_err) = _232d42e62_parse_float(_22613_data,64LL);
			if (_25531_err != 0LLU) {
				(*this)._field_error=(jule::Str("--", 2) + _21836_flag.get()._method_name()) + jule::Str(": expression must be valid floating-point", 41);
			}
		}
		goto _match_end_4886387056;
		_case_end_4886388176:;
		if (!(_match_expr.type_is<jule::Ptr<_200ad0979_Flag_4>>())) { goto _case_end_4886385824; }
		_case_begin_4886385824:;
		{
			(*(_21836_flag.operator jule::Ptr<_200ad0979_Flag_4>()->_field__data))=_22613_data;
		}
		goto _match_end_4886387056;
		_case_end_4886385824:;
		_match_end_4886387056:;
	}
}



void _200ad0979_ArgParser::_method_single_dash(jule::Str& _26531_arg) {
	jule::Slice<jule::I32> _26613_rarg = static_cast<jule::Slice<jule::I32>>(_26531_arg).slice(1LL);
	{
		auto expr = _26613_rarg;
		auto it = expr.begin();
		_iter_begin_4886452944:;
		if (it != expr.end()) {
			jule::I32 _200ad0979_r = *it;
			{
				jule::Trait<_200ad0979_CommonFlag> _26821_flag = (*this)._field_set._method_find_flag_short(_200ad0979_r);
				if (_26821_flag == nullptr) {
					(*this)._field_error=(_26531_arg + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>(_200ad0979_r);
					return;
				}
				(*this)._method_process_flag(_26821_flag);
			}
			_iter_next_4886452944:;
			++it;
			goto _iter_begin_4886452944;
		}
		_iter_end_4886452944:;
	}
}



void _200ad0979_ArgParser::_method_double_dash(jule::Str& _27831_arg) {
	jule::Trait<_200ad0979_CommonFlag> _27917_flag = (*this)._field_set._method_find_flag(_27831_arg.slice(2LL));
	if (_27917_flag == nullptr) {
		(*this)._field_error=_27831_arg + jule::Str(": flag is not exist", 19);
		return;
	}
	(*this)._method_process_flag(_27917_flag);
}



void _200ad0979_ArgParser::_method_try_arg(void) {
	jule::Str _28913_arg = (*this)._field_args[(*this)._field_i];
	if ((*this)._field_args.len() == 0LL) {
		return;
	}
	if (_28913_arg[0LL] == '-') {
		if (((*this)._field_args.len() > 1LL) && (_28913_arg[1LL] == '-')) {
			(*this)._method_double_dash(_28913_arg);
			return;
		}
		(*this)._method_single_dash(_28913_arg);
		return;
	}
	(*this)._field_content=jule::append((*this)._field_content,jule::Slice<jule::Str>({_28913_arg}));
}



void _200ad0979_ArgParser::_method_parse(void) {
	for (; (*this)._field_i < (*this)._field_args.len(); ((*this)._field_i)++) {
		{
			(*this)._method_try_arg();
			if ((*this)._field_error.len() != 0LL) {
				goto _iter_end_4886474160;
			}
		}
	_iter_next_4886474160:;
	}
	_iter_end_4886474160:;
}







std::ostream &operator<<(std::ostream &_Stream, const _200ad0979_ArgParser &_Src) {
	_Stream << "ArgParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error:" << _Src._field_error << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_EnumItemDecl::_method_auto_expr(void) {
	return (*this)._field_expr == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_EnumDecl::_method_default_typed(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



jule::Bool _233464770_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnCallExpr>>())) { goto _case_end_4873127008; }
		_case_begin_4873127008:;
		{
			return true;
		}
		goto _match_end_4873124704;
		_case_end_4873127008:;
		_case_begin_4873125696:;
		{
			return false;
		}
		goto _match_end_4873124704;
		_case_end_4873125696:;
		_match_end_4873124704:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _23441b814_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_23461aa35_FieldIns> _23461aa35_Field::_method_instance(void) {
	return jule::new_struct<_23461aa35_FieldIns>(new( std::nothrow ) _23461aa35_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _23461aa35_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_23461aa35_StructIns> _23461aa35_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	jule::Ptr<_23461aa35_StructIns> _6717_ins = jule::new_struct_ptr<_23461aa35_StructIns>(new( std::nothrow ) _23461aa35_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_23461aa35_FieldIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_fields.len())),jule::Slice<jule::Ptr<_2185d51ad_Fn>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_methods.len())),jule::Bool(),_21862cb1d_ReferenceStack::_static_method_new()));
	{
		auto expr = this->self->_field_fields;
		auto it = expr.begin();
		_iter_begin_4878272864:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Field> _23461aa35_f = *it;
			{
				_6717_ins->_field_fields=jule::append(_6717_ins->_field_fields,jule::Slice<jule::Ptr<_23461aa35_FieldIns>>({_23461aa35_f->_method_instance()}));
				if ((_23461aa35_f->_field_kind->_field_kind != nullptr) && _23461aa35_f->_field_kind->_field_kind->_method_mutable()) {
					_6717_ins->_field_mutable=true;
				}
			}
			_iter_next_4878272864:;
			++it;
			goto _iter_begin_4878272864;
		}
		_iter_end_4878272864:;
	}
	{
		auto expr = this->self->_field_methods;
		auto it = expr.begin();
		_iter_begin_4878275024:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _23461aa35_f = *it;
			{
				jule::Ptr<_2185d51ad_Fn> _8221_fins = jule::new_struct_ptr<_2185d51ad_Fn>(new( std::nothrow ) _2185d51ad_Fn(_23461aa35_f->_field_sema,_23461aa35_f->_field_token,_23461aa35_f->_field_global,_23461aa35_f->_field_unsafety,_23461aa35_f->_field_public,_23461aa35_f->_field_cpp_linked,_23461aa35_f->_field_statically,_23461aa35_f->_field_ident,_23461aa35_f->_field_directives,_23461aa35_f->_field_doc,_23461aa35_f->_field_scope,_23461aa35_f->_field_generics,_23461aa35_f->_field_result,_23461aa35_f->_field_params,_23461aa35_f->_field_owner,nullptr));
				_6717_ins->_field_methods=jule::append(_6717_ins->_field_methods,jule::Slice<jule::Ptr<_2185d51ad_Fn>>({_8221_fins}));
			}
			_iter_next_4878275024:;
			++it;
			goto _iter_begin_4878275024;
		}
		_iter_end_4878275024:;
	}
	return _6717_ins;
}



jule::Ptr<_23461aa35_StructIns> _23461aa35_Struct::_method_append_instance(jule::Ptr<_23461aa35_StructIns>& _10839_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[0LL];
	}
	{
		auto expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4878289904:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_StructIns> _23461aa35_ains = *it;
			{
				if (_23461aa35_ains->_method_same(_10839_ins)) {
					return _23461aa35_ains;
				}
			}
			_iter_next_4878289904:;
			++it;
			goto _iter_begin_4878289904;
		}
		_iter_end_4878289904:;
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ptr<_23461aa35_StructIns>>({_10839_ins}));
	return nullptr;
}



jule::Ptr<_2185d51ad_Fn> _23461aa35_Struct::_method_find_method(jule::Str _12634_ident,jule::Bool _12646_statically) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4878297200:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _23461aa35_f = *it;
			{
				if ((_23461aa35_f->_field_statically == _12646_statically) && (_23461aa35_f->_field_ident == _12634_ident)) {
					return _23461aa35_f;
				}
			}
			_iter_next_4878297200:;
			++it;
			goto _iter_begin_4878297200;
		}
		_iter_end_4878297200:;
	}
	return nullptr;
}



jule::Ptr<_200c58948_Var> _23461aa35_Struct::_method_find_static(jule::Str _13734_ident) {
	{
		auto expr = (*this)._field_statics;
		auto it = expr.begin();
		_iter_begin_4878301984:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _23461aa35_v = *it;
			{
				if (_23461aa35_v->_field_ident == _13734_ident) {
					return _23461aa35_v;
				}
			}
			_iter_next_4878301984:;
			++it;
			goto _iter_begin_4878301984;
		}
		_iter_end_4878301984:;
	}
	return nullptr;
}



jule::Ptr<_23461aa35_Field> _23461aa35_Struct::_method_find_field(jule::Str _14833_ident) {
	{
		auto expr = (*this)._field_fields;
		auto it = expr.begin();
		_iter_begin_4878306336:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Field> _23461aa35_f = *it;
			{
				if (_23461aa35_f->_field_ident == _14833_ident) {
					return _23461aa35_f;
				}
			}
			_iter_next_4878306336:;
			++it;
			goto _iter_begin_4878306336;
		}
		_iter_end_4878306336:;
	}
	return nullptr;
}



jule::Bool _23461aa35_Struct::_method_is_implements(jule::Ptr<_2185da36c_Trait> _15832_t) {
	{
		auto expr = (*this)._field_implements;
		auto it = expr.begin();
		_iter_begin_4878307280:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _23461aa35_it = *it;
			{
				if (_15832_t == _23461aa35_it) {
					return true;
				}
			}
			_iter_next_4878307280:;
			++it;
			goto _iter_begin_4878307280;
		}
		_iter_end_4878307280:;
	}
	return false;
}



jule::Bool _23461aa35_Struct::_method_is_derives(jule::Str _16829_ident) {
	{
		auto expr = (*this)._field_directives;
		auto it = expr.begin();
		_iter_begin_4878312928:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Directive> _23461aa35_d = *it;
			{
				if (_23461aa35_d->_field_tag == jule::Str("derive", 6)) {
					if ((_23461aa35_d->_field_args.len() == 1LL) && (_23461aa35_d->_field_args[0LL] == _16829_ident)) {
						return true;
					}
				}
			}
			_iter_next_4878312928:;
			++it;
			goto _iter_begin_4878312928;
		}
		_iter_end_4878312928:;
	}
	return false;
}



jule::Bool _23461aa35_Struct::_method_is_uses(jule::Ptr<_23461aa35_Struct> _18026_s) {
	{
		auto expr = (*this)._field_uses;
		auto it = expr.begin();
		_iter_begin_4878319168:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _23461aa35_u = *it;
			{
				while (_18026_s == _23461aa35_u) {
					{
						return true;
					}
				_iter_next_4878320320:;
				}
				_iter_end_4878320320:;
			}
			_iter_next_4878319168:;
			++it;
			goto _iter_begin_4878319168;
		}
		_iter_end_4878319168:;
	}
	return false;
}



jule::Bool _23461aa35_Struct::_method_has_ref_accessible(void) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4878320112:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _23461aa35_m = *it;
			{
				if ((_23461aa35_m->_field_params.len() > 0LL) && _23461aa35_m->_field_params[0LL]->_method_is_ref()) {
					return true;
				}
			}
			_iter_next_4878320112:;
			++it;
			goto _iter_begin_4878320112;
		}
		_iter_end_4878320112:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _23461aa35_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_2185d51ad_ParamIns> _2185d51ad_Param::_method_instance(void) {
	return jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(this->self,jule::Ptr<_200d010d9_TypeKind>()));
}



jule::Bool _2185d51ad_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



jule::Bool _2185d51ad_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str()) && ((*this)._field_ident[0LL] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _2185d51ad_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2185d51ad_Fn::_method_is_void(void) {
	return (*this)._field_result == nullptr;
}



jule::Bool _2185d51ad_Fn::_method_is_method(void) {
	return (*this)._field_owner != nullptr;
}



jule::Bool _2185d51ad_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



jule::Bool _2185d51ad_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



jule::Bool _2185d51ad_Fn::_method_is_anon(void) {
	return _2336ea198_is_anon_ident((*this)._field_ident);
}



jule::Bool _2185d51ad_Fn::_method_any_var(void) {
	return ((*this)._field_result != nullptr) && ((*this)._field_result->_field_idents.len() > 0LL);
}



jule::Bool _2185d51ad_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto expr = (*this)._field_params;
		auto it = expr.begin();
		_iter_begin_4878381200:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Param> _2185d51ad_p = *it;
			{
				if (_2185d51ad_parameter_uses_generics(_2185d51ad_p,(*this)._field_generics)) {
					return true;
				}
			}
			_iter_next_4878381200:;
			++it;
			goto _iter_begin_4878381200;
		}
		_iter_end_4878381200:;
	}
	return false;
}



jule::Bool _2185d51ad_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((*this)._field_result->_field_kind == nullptr) || ((*this)._field_result->_field_kind->_field_kind == nullptr)) {
		return false;
	}
	return _2185d51ad_kind_uses_generics((*this)._field_result->_field_kind->_field_kind,(*this)._field_generics);
}



jule::Ptr<_2185d51ad_FnIns> _2185d51ad_Fn::_method_instance_force(void) {
	jule::Ptr<_2185d51ad_FnIns> _11017_ins = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),this->self,jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>(),jule::Ptr<_200d010d9_TypeKind>(),jule::new_struct<_2186ce186_Scope>(new( std::nothrow ) _2186ce186_Scope()),_21862cb1d_ReferenceStack::_static_method_new(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(),jule::Bool(),jule::Bool()));
	if (this->self->_method_is_init()) {
		_11017_ins->_field_refers=_21862cb1d_ReferenceStack::_static_method_new();
	}
	_11017_ins->_field_params=jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>::alloc(0LL,static_cast<jule::I64>(this->self->_field_params.len()));
	{
		auto expr = this->self->_field_params;
		auto it = expr.begin();
		_iter_begin_4878395952:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Param> _2185d51ad_p = *it;
			{
				_11017_ins->_field_params=jule::append(_11017_ins->_field_params,jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({_2185d51ad_p->_method_instance()}));
			}
			_iter_next_4878395952:;
			++it;
			goto _iter_begin_4878395952;
		}
		_iter_end_4878395952:;
	}
	if (_11017_ins->_field_decl->_field_result != nullptr) {
		_11017_ins->_field_result=_11017_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _11017_ins;
}



jule::Ptr<_2185d51ad_FnIns> _2185d51ad_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[0LL];
	}
	return this->self->_method_instance_force();
}



std::tuple<jule::Bool,jule::Int> _2185d51ad_Fn::_method_append_instance(jule::Ptr<_2185d51ad_FnIns>& _14139_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ptr<_2185d51ad_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ptr<_2185d51ad_FnIns>>({_14139_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto expr = (*this)._field_instances;
		auto it = expr.begin();
		_iter_begin_4878408784:;
		if (it != expr.end()) {
			jule::Int _2185d51ad_j = it - expr.begin();
			jule::Ptr<_2185d51ad_FnIns> _2185d51ad_ains = *it;
			{
				if (_2185d51ad_ains->_method_same(_14139_ins)) {
					return std::make_tuple(false,_2185d51ad_j);
				}
			}
			_iter_next_4878408784:;
			++it;
			_2185d51ad_j++;
			goto _iter_begin_4878408784;
		}
		_iter_end_4878408784:;
	}
	(*this)._field_instances=jule::append((*this)._field_instances,jule::Slice<jule::Ptr<_2185d51ad_FnIns>>({_14139_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _2185d51ad_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



jule::Bool _233464770_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_EnumDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_FnDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_StructDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_TraitDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_TypeAliasDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_FieldDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_UseDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_VarDecl>>() || _match_expr.type_is<jule::Ptr<_233464770_TypeDecl>>())) { goto _case_end_4873087328; }
		_case_begin_4873087328:;
		{
			return true;
		}
		goto _match_end_4873086880;
		_case_end_4873087328:;
		_case_begin_4873086368:;
		{
			return false;
		}
		goto _match_end_4873086880;
		_case_end_4873086368:;
		_match_end_4873086880:;
	}
}



jule::Bool _233464770_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Comment>>() || _match_expr.type_is<jule::Ptr<_233464770_CommentGroup>>())) { goto _case_end_4873102384; }
		_case_begin_4873102384:;
		{
			return true;
		}
		goto _match_end_4873101936;
		_case_end_4873102384:;
		_case_begin_4873100416:;
		{
			return false;
		}
		goto _match_end_4873101936;
		_case_end_4873100416:;
		_match_end_4873101936:;
	}
}



jule::Bool _233464770_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_Impl>>())) { goto _case_end_4873105776; }
		_case_begin_4873105776:;
		{
			return true;
		}
		goto _match_end_4873105328;
		_case_end_4873105776:;
		_case_begin_4873104368:;
		{
			return false;
		}
		goto _match_end_4873105328;
		_case_end_4873104368:;
		_match_end_4873105328:;
	}
}



jule::Bool _233464770_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_UseDecl>>())) { goto _case_end_4873108880; }
		_case_begin_4873108880:;
		{
			return true;
		}
		goto _match_end_4873108432;
		_case_end_4873108880:;
		_case_begin_4873106352:;
		{
			return false;
		}
		goto _match_end_4873108432;
		_case_end_4873106352:;
		_match_end_4873108432:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _233464770_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _21862cb1d_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



jule::Str _2185da36c_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



jule::Bool _2185da36c_Trait::_method_equals(jule::Ptr<_200d010d9_TypeKind> _2522_other) {
	jule::Ptr<_2185da36c_Trait> _2613_trt = (*((&(_2522_other))))->_method_trt();
	if (_2613_trt == nullptr) {
		return false;
	}
	return this->self == _2613_trt;
}



jule::Bool _2185da36c_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



jule::Ptr<_2185d51ad_Fn> _2185da36c_Trait::_method_find_method(jule::Str _4034_ident) {
	{
		auto expr = (*this)._field_methods;
		auto it = expr.begin();
		_iter_begin_4878773376:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _2185da36c_f = *it;
			{
				if (_2185da36c_f->_field_ident == _4034_ident) {
					return _2185da36c_f;
				}
			}
			_iter_next_4878773376:;
			++it;
			goto _iter_begin_4878773376;
		}
		_iter_end_4878773376:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2185da36c_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}



jule::Ptr<_218848bd5_ImportInfo> _218848bd5_ImportInfo::_method_find_package(jule::Str ) {
	return nullptr;
}



jule::Ptr<_218848bd5_ImportInfo> _218848bd5_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ptr<_218848bd5_ImportInfo>)> ) {
	return nullptr;
}



jule::Ptr<_200c58948_Var> _218848bd5_ImportInfo::_method_find_var(jule::Str _14731_ident,jule::Bool _14743_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14731_ident)))) {
		return nullptr;
	}
	return _218848bd5_find_var_in_package((*this)._field_package->_field_files,_14731_ident,false);
}



jule::Ptr<_200d010d9_TypeAlias> _218848bd5_ImportInfo::_method_find_type_alias(jule::Str _16038_ident,jule::Bool _16050_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_16038_ident)))) {
		return nullptr;
	}
	return _218848bd5_find_type_alias_in_package((*this)._field_package->_field_files,_16038_ident,false);
}



jule::Ptr<_23461aa35_Struct> _218848bd5_ImportInfo::_method_find_struct(jule::Str _17334_ident,jule::Bool _17346_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17334_ident)))) {
		return nullptr;
	}
	return _218848bd5_find_struct_in_package((*this)._field_package->_field_files,_17334_ident,false);
}



jule::Ptr<_2185d51ad_Fn> _218848bd5_ImportInfo::_method_find_fn(jule::Str _18630_ident,jule::Bool _18642_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18630_ident)))) {
		return nullptr;
	}
	return _218848bd5_find_fn_in_package((*this)._field_package->_field_files,_18630_ident,false);
}



jule::Ptr<_2185da36c_Trait> _218848bd5_ImportInfo::_method_find_trait(jule::Str _19833_ident) {
	if ((!((*this)._method_is_lookupable(_19833_ident)))) {
		return nullptr;
	}
	return _218848bd5_find_trait_in_package((*this)._field_package->_field_files,_19833_ident);
}



jule::Ptr<_2186be3da_Enum> _218848bd5_ImportInfo::_method_find_enum(jule::Str _21032_ident) {
	if ((!((*this)._method_is_lookupable(_21032_ident)))) {
		return nullptr;
	}
	return _218848bd5_find_enum_in_package((*this)._field_package->_field_files,_21032_ident);
}



jule::Bool _218848bd5_ImportInfo::_method_is_lookupable(jule::Str _22028_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_22028_ident)))) {
				return false;
			}
		}
	}
	return true;
}



jule::Bool _218848bd5_ImportInfo::_method_exist_ident(jule::Str _24026_ident) {
	{
		auto expr = (*this)._field_selected;
		auto it = expr.begin();
		_iter_begin_4879713088:;
		if (it != expr.end()) {
			_2336ea198_Token _218848bd5_sident = *it;
			{
				if (_218848bd5_sident._field_kind == _24026_ident) {
					return true;
				}
			}
			_iter_next_4879713088:;
			++it;
			goto _iter_begin_4879713088;
		}
		_iter_end_4879713088:;
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _218848bd5_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "alias:" << _Src._field_alias << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2186be3da_EnumItem::_method_auto_expr(void) {
	return (*this)._field_value == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186be3da_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



jule::Str _2186be3da_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



jule::Bool _2186be3da_Enum::_method_equals(jule::Ptr<_200d010d9_TypeKind> _3522_other) {
	jule::Ptr<_2186be3da_Enum> _3613_enm = (*((&(_3522_other))))->_method_enm();
	if (_3613_enm == nullptr) {
		return false;
	}
	return this->self == _3613_enm;
}



jule::Ptr<_2186be3da_EnumItem> _2186be3da_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto expr = (*this)._field_items;
		auto it = expr.begin();
		_iter_begin_4878785888:;
		if (it != expr.end()) {
			jule::Ptr<_2186be3da_EnumItem> _2186be3da_item = *it;
			{
				if (_2186be3da_item->_field_ident == _4732_ident) {
					return _2186be3da_item;
				}
			}
			_iter_next_4878785888:;
			++it;
			goto _iter_begin_4878785888;
		}
		_iter_end_4878785888:;
	}
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _2186be3da_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2185e0064_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



jule::Bool _2185e0064_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _2185e0064_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "statics:" << _Src._field_statics;
	_Stream << "}";
	return _Stream;
}



jule::Bool _200c58948_Var::_method_is_initialized(void) {
	return (*this)._field_value != nullptr;
}



jule::Bool _200c58948_Var::_method_is_type_inferred(void) {
	return ((*this)._field_kind == nullptr) || ((*this)._field_kind->_field_decl == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _200c58948_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "iter_relation:" << _Src._field_iter_relation << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



jule::Bool _2320d9d97_is_surrogate(jule::I32 _6021_r) {
	return (55296LL <= _6021_r) && (_6021_r < 57344LL);
}



jule::I32 _2320d9d97_decode_rune(jule::I32 _6720_r1,jule::I32 _6730_r2) {
	if ((((55296LL <= _6720_r1) && (_6720_r1 < 56320LL)) && (56320LL <= _6730_r2)) && (_6730_r2 < 57344LL)) {
		return static_cast<jule::I32>((((_6720_r1 - 55296LL) << 10LL) | (_6730_r2 - 56320LL)) + 65536LL);
	}
	return 65533LL;
}



std::tuple<jule::I32,jule::I32> _2320d9d97_encode_rune(jule::I32 _7724_r) {
	jule::I32 _7735_r1 = jule::I32();
	jule::I32 _7745_r2 = jule::I32();
	if ((_7724_r < 65536LL) || (_7724_r > 1114111LL)) {
		_7735_r1 = 65533LL;
		_7745_r2 = 65533LL;
		return std::make_tuple(_7735_r1,_7745_r2);
	}
	_7724_r-=65536LL;
	_7735_r1 = static_cast<jule::I32>(55296LL + ((_7724_r >> 10LL) & 1023LL));
	_7745_r2 = static_cast<jule::I32>(56320LL + (_7724_r & 1023LL));
	return std::make_tuple(_7735_r1,_7745_r2);
}



jule::Slice<jule::U16> _2320d9d97_encode(jule::Slice<jule::I32> _8615_s) {
	jule::I64 _8713_n = _8615_s.len();
	{
		auto expr = _8615_s;
		auto it = expr.begin();
		_iter_begin_4863016608:;
		if (it != expr.end()) {
			jule::I32 _2320d9d97_v = *it;
			{
				if (_2320d9d97_v >= 65536LL) {
					(_8713_n)++;
				}
			}
			_iter_next_4863016608:;
			++it;
			goto _iter_begin_4863016608;
		}
		_iter_end_4863016608:;
	}
	jule::Slice<jule::U16> _9413_a = jule::Slice<jule::U16>::alloc(_8713_n);
	_8713_n=0LL;
	{
		auto expr = _8615_s;
		auto it = expr.begin();
		_iter_begin_4863017920:;
		if (it != expr.end()) {
			jule::I32 _2320d9d97_v = *it;
			{
				{
					if (!(((0LL <= _2320d9d97_v) && (_2320d9d97_v < 55296LL)) || ((57344LL <= _2320d9d97_v) && (_2320d9d97_v < 65536LL)))) { goto _case_end_4863022016; }
					_case_begin_4863022016:;
					{
						_9413_a[_8713_n]=static_cast<jule::U16>(_2320d9d97_v);
						(_8713_n)++;
					}
					goto _match_end_4863021056;
					_case_end_4863022016:;
					if (!(((65536LL <= _2320d9d97_v) && (_2320d9d97_v <= 1114111LL)))) { goto _case_end_4863023712; }
					_case_begin_4863023712:;
					{
						jule::I32 _10418_r1;
						jule::I32 _10422_r2;
						std::tie(_10418_r1,_10422_r2) = _2320d9d97_encode_rune(_2320d9d97_v);
						_9413_a[_8713_n]=static_cast<jule::U16>(_10418_r1);
						_9413_a[_8713_n + 1LL]=static_cast<jule::U16>(_10422_r2);
						_8713_n+=2LL;
					}
					goto _match_end_4863021056;
					_case_end_4863023712:;
					_case_begin_4863021232:;
					{
						_9413_a[_8713_n]=static_cast<jule::U16>(65533LLU);
						(_8713_n)++;
					}
					goto _match_end_4863021056;
					_case_end_4863021232:;
					_match_end_4863021056:;
				}
			}
			_iter_next_4863017920:;
			++it;
			goto _iter_begin_4863017920;
		}
		_iter_end_4863017920:;
	}
	return _9413_a.slice(0LL,_8713_n);
}



jule::Slice<jule::I32> _2320d9d97_decode(jule::Slice<jule::U16> _11815_s) {
	jule::Slice<jule::I32> _11913_a = jule::Slice<jule::I32>::alloc(static_cast<jule::I64>(_11815_s.len()));
	jule::Int _12013_n = 0LL;
	jule::Int _12113_i = 0LL;
	for (; _12113_i < _11815_s.len(); (_12113_i)++) {
		{
			jule::U16 _12313_r = _11815_s[_12113_i];
			{
				if (!((_12313_r < 55296LL) || (57344LL <= _12313_r))) { goto _case_end_4863036384; }
				_case_begin_4863036384:;
				{
					_11913_a[_12013_n]=static_cast<jule::I32>(_12313_r);
				}
				goto _match_end_4863035488;
				_case_end_4863036384:;
				if (!((((((55296LL <= _12313_r) && (_12313_r < 56320LL)) && ((_12113_i + 1LL) < _11815_s.len())) && (56320LL <= _11815_s[_12113_i + 1LL])) && (_11815_s[_12113_i + 1LL] < 57344LL)))) { goto _case_end_4863037424; }
				_case_begin_4863037424:;
				{
					_11913_a[_12013_n]=static_cast<jule::I32>(_2320d9d97_decode_rune(static_cast<jule::I32>(_12313_r),static_cast<jule::I32>(_11815_s[_12113_i + 1LL])));
					(_12113_i)++;
				}
				goto _match_end_4863035488;
				_case_end_4863037424:;
				_case_begin_4863035600:;
				{
					_11913_a[_12013_n]=65533LL;
				}
				goto _match_end_4863035488;
				_case_end_4863035600:;
				_match_end_4863035488:;
			}
			(_12013_n)++;
		}
	_iter_next_4863020688:;
	}
	_iter_end_4863020688:;
	return _11913_a.slice(0LL,_12013_n);
}



jule::Slice<jule::U16> _2320d9d97_append_rune(jule::Slice<jule::U16> _14524_a,jule::I32 _14534_r) {
	{
		if (!(((0LL <= _14534_r) && (_14534_r < 55296LL)) || ((57344LL <= _14534_r) && (_14534_r < 65536LL)))) { goto _case_end_4863045696; }
		_case_begin_4863045696:;
		{
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_14534_r)}));
		}
		goto _match_end_4863045488;
		_case_end_4863045696:;
		if (!(((65536LL <= _14534_r) && (_14534_r <= 1114111LL)))) { goto _case_end_4863045808; }
		_case_begin_4863045808:;
		{
			jule::I32 _15214_r1;
			jule::I32 _15218_r2;
			std::tie(_15214_r1,_15218_r2) = _2320d9d97_encode_rune(_14534_r);
			return jule::append(_14524_a,jule::Slice<jule::U16>({static_cast<jule::U16>(_15214_r1),static_cast<jule::U16>(_15218_r2)}));
		}
		goto _match_end_4863045488;
		_case_end_4863045808:;
		_match_end_4863045488:;
	}
	return jule::append(_14524_a,jule::Slice<jule::U16>({65533LLU}));
}



void* _23206720e_malloc(jule::Uint _2215_size) {
	return malloc(_2215_size);
}



void* _23206720e_calloc(jule::Uint _2915_size,jule::Uint _2927_n) {
	return calloc(_2915_size,_2927_n);
}



void* _23206720e_realloc(void* _3727_ptr,jule::Uint _3741_size) {
	return realloc(_3727_ptr,_3741_size);
}



void _23206720e_free(void* _4524_ptr) {
	free(_4524_ptr);
}























jule::Str _23209d4a9_type_id(jule::Any _11316_a) {
	if (_11316_a == nullptr) {
		return jule::Str();
	}
	return __jule_type_id_of_any(_11316_a);
}



jule::Slice<jule::U16> _2320c1d90_utf16_from_str(jule::Str _1523_s) {
	
	jule::Slice<jule::I32> _219_runes = static_cast<jule::Slice<jule::I32>>(_1523_s);
	jule::Slice<jule::U16> _2213_buff = jule::Slice<jule::U16>::alloc(0LL,static_cast<jule::I64>(_219_runes.len()));
	{
		auto expr = _219_runes;
		auto it = expr.begin();
		_iter_begin_4863094144:;
		if (it != expr.end()) {
			jule::I32 _2320c1d90_r = *it;
			{
				if (_2320c1d90_r == 0LL) {
					goto _iter_end_4863094144;
				}
				_2213_buff=_2320d9d97_append_rune(_2213_buff,_2320c1d90_r);
			}
			_iter_next_4863094144:;
			++it;
			goto _iter_begin_4863094144;
		}
		_iter_end_4863094144:;
	}
	return _2320d9d97_append_rune(_2213_buff,0LL);
}



jule::Str _2320c1d90_utf16_to_str(jule::Slice<jule::U16> _3521_s) {
	if (_3521_s == nullptr) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _3913_code_page = (*((&(_3521_s))));
	{
		auto expr = _3521_s;
		auto it = expr.begin();
		_iter_begin_4863102064:;
		if (it != expr.end()) {
			jule::Int _2320c1d90_i = it - expr.begin();
			jule::U16 _2320c1d90_v = *it;
			{
				if (_2320c1d90_v == 0LL) {
					_3913_code_page=_3913_code_page.slice(0LL,_2320c1d90_i);
					goto _iter_end_4863102064;
				}
			}
			_iter_next_4863102064:;
			++it;
			_2320c1d90_i++;
			goto _iter_begin_4863102064;
		}
		_iter_end_4863102064:;
	}
	return static_cast<jule::Str>(_2320d9d97_decode(_3913_code_page));
}



jule::Str _2320c1d90_u16_ptr_to_str(jule::U16* _5130_s) {
	if (_5130_s == nullptr) {
		return jule::Str();
	}
	jule::Slice<jule::U16> _5613_code_page = nullptr;
	jule::Int _5713_i = 0LL;
	for (; ; (_5713_i)++) {
		{
			jule::U16 _5913_r = _5130_s[_5713_i];
			if (_5913_r == 0LL) {
				return static_cast<jule::Str>(_2320d9d97_decode(_5613_code_page));
			}
			_5613_code_page=jule::append(_5613_code_page,jule::Slice<jule::U16>({_5913_r}));
		}
	_iter_next_4863100528:;
	}
	_iter_end_4863100528:;
	return jule::Str();
}



jule::Str _2320c1d90_byte_ptr_to_str(jule::U8* _7031_s) {
	if (_7031_s == nullptr) {
		return jule::Str();
	}
	return __jule_str_from_byte_ptr(_7031_s);
}



jule::Int _2320c28da_puts(jule::Str _913_s) {
	return puts(((char*)((&(_913_s[0LL])))));
}



jule::Int _232037124_get_last_errno(void) {
	return errno;
}



jule::Int _23204ea43_stat(jule::U8* _4620_path,struct stat* _4637_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_4620_path)),_4637_stat));
}



jule::Int _23204ea43_open(jule::U8* _5120_path,jule::Int _5133_flag,jule::Int _5144_mode) {
	return static_cast<jule::Int>(open(((char*)(_5120_path)),_5133_flag,_5144_mode));
}



jule::U8* _23204ea43_getcwd(jule::U8* _5722_buff,jule::Uint _5735_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_5722_buff)),_5735_bufflen)));
}



DIR* _23204ea43_opendir(jule::U8* _6223_path) {
	return opendir(((char*)(_6223_path)));
}



struct dirent* _23204ea43_readdir(DIR* _6527_dir) {
	return readdir(_6527_dir);
}



jule::Int _23204ea43_closedir(DIR* _6828_dir) {
	return static_cast<jule::Int>(closedir(_6828_dir));
}



jule::Int _23204ea43_chdir(jule::U8* _7121_path) {
	return static_cast<jule::Int>(chdir(((char*)(_7121_path))));
}



jule::Int _23204ea43_remove(jule::U8* _7422_path) {
	return static_cast<jule::Int>(remove(((char*)(_7422_path))));
}



jule::Int _23204ea43_mkdir(jule::U8* _7721_path,jule::Int _7734_mode) {
	return static_cast<jule::Int>(mkdir(((char*)(_7721_path)),_7734_mode));
}



jule::Int _23204ea43_rmdir(jule::U8* _8221_path) {
	return static_cast<jule::Int>(rmdir(((char*)(_8221_path))));
}



jule::Int _23204ea43_unlink(jule::U8* _8522_path) {
	return static_cast<jule::Int>(unlink(((char*)(_8522_path))));
}



jule::I64 _23206ca0b_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



jule::Int _23206ca0b_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



jule::Int _23206ca0b_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



jule::Int _23206ca0b_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



void _23206ca0b_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



jule::Int _23203729a_get_last_os_error(void) {
	jule::Int _319_err = _232037124_get_last_errno();
	{
		auto _match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4863313600; }
		_case_begin_4863313600:;
		{
			return 1LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863313600:;
		if (!((5LL) == _match_expr)) { goto _case_end_4863313696; }
		_case_begin_4863313696:;
		{
			return 2LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863313696:;
		if (!((62LL) == _match_expr)) { goto _case_end_4863313792; }
		_case_begin_4863313792:;
		{
			return 3LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863313792:;
		if (!((63LL) == _match_expr)) { goto _case_end_4863314176; }
		_case_begin_4863314176:;
		{
			return 4LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863314176:;
		if (!((2LL) == _match_expr)) { goto _case_end_4863314272; }
		_case_begin_4863314272:;
		{
			return 5LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863314272:;
		if (!((20LL) == _match_expr)) { goto _case_end_4863314368; }
		_case_begin_4863314368:;
		{
			return 6LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863314368:;
		if (!((12LL) == _match_expr)) { goto _case_end_4863312992; }
		_case_begin_4863312992:;
		{
			return 7LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863312992:;
		_case_begin_4863295168:;
		{
			return 0LLU;
		}
		goto _match_end_4863312528;
		_case_end_4863295168:;
		_match_end_4863312528:;
	}
}



jule::Slice<jule::Str> _232036ed1_args(void) {
	return jule::args();
}



jule::Slice<jule::Str> _232036ed1_env(void) {
	return jule::args();
}



std::tuple<jule::Str,jule::Int> _232036ed1_working_dir(void) {
	jule::Str _3010_p;
	jule::Int _3013_err;
	std::tie(_3010_p,_3013_err) = _232048a92___getwd();
	return std::make_tuple(_3010_p,_3013_err);
}



jule::Int _232036ed1_set_working_dir(jule::Str _3924_path) {
	if (_3924_path == jule::Str()) {
		return 6LLU;
	}
	return _232048a92___chdir(_3924_path);
}



std::tuple<jule::Str,jule::Int> _232048a92___getwd(void) {
	jule::U8* _1113_buff = _23204ea43_getcwd(nullptr,0LLU);
	if (_1113_buff == nullptr) {
		return std::make_tuple(jule::Str(),_23203729a_get_last_os_error());
	}
	jule::Str _159_pwd = _2320c1d90_byte_ptr_to_str(_1113_buff);
	{
		_23206720e_free(_1113_buff);
	}
	return std::make_tuple(_159_pwd,0LLU);
}



jule::Int _232048a92___chdir(jule::Str _2212_path) {
	if (_23204ea43_chdir((&(_2212_path[0LL]))) == 0LL) {
		return 0LLU;
	}
	return _23203729a_get_last_os_error();
}



jule::Str _231ed2cb2_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _231ec91d7_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(_1099_vol_len);
	if (_10718_path == jule::Str()) {
		if (((_1099_vol_len > 1LL) && _231ec91d7_is_path_sep(_1089_original_path[0LL])) && _231ec91d7_is_path_sep(_1089_original_path[1LL])) {
			return _231ed2cb2_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _231ec91d7_is_path_sep(_10718_path[0LL]);
	jule::I64 _1259_n = _10718_path.len();
	_231ed2cb2_LazyBuff _12613_out = _231ed2cb2_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	while (_13114_r < _1259_n) {
		{
			{
				if (!((_231ec91d7_is_path_sep(_10718_path[_13114_r])))) { goto _case_end_4863377232; }
				_case_begin_4863377232:;
				{
					(_13114_r)++;
				}
				goto _match_end_4863372736;
				_case_end_4863377232:;
				if (!(((_10718_path[_13114_r] == '.') && (((_13114_r + 1LL) == _1259_n) || _231ec91d7_is_path_sep(_10718_path[_13114_r + 1LL]))))) { goto _case_end_4863383616; }
				_case_begin_4863383616:;
				{
					(_13114_r)++;
				}
				goto _match_end_4863372736;
				_case_end_4863383616:;
				if (!((((_10718_path[_13114_r] == '.') && (_10718_path[_13114_r + 1LL] == '.')) && (((_13114_r + 2LL) == _1259_n) || _231ec91d7_is_path_sep(_10718_path[_13114_r + 2LL]))))) { goto _case_end_4863385488; }
				_case_begin_4863385488:;
				{
					_13114_r+=2LL;
					{
						if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_4863389472; }
						_case_begin_4863389472:;
						{
							(_12613_out._field_w)--;
							while ((_12613_out._field_w > _13121_dotdot) && (!(_231ec91d7_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w)))))) {
								{
									(_12613_out._field_w)--;
								}
							_iter_next_4863393552:;
							}
							_iter_end_4863393552:;
						}
						goto _match_end_4863390384;
						_case_end_4863389472:;
						if (!(((!(_1189_rooted))))) { goto _case_end_4863392992; }
						_case_begin_4863392992:;
						{
							if (_12613_out._field_w > 0LL) {
								_12613_out._method_append(47LLU);
							}
							_12613_out._method_append('.');
							_12613_out._method_append('.');
							_13121_dotdot=_12613_out._field_w;
						}
						goto _match_end_4863390384;
						_case_end_4863392992:;
						_match_end_4863390384:;
					}
				}
				goto _match_end_4863372736;
				_case_end_4863385488:;
				_case_begin_4863372848:;
				{
					if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
						_12613_out._method_append(47LLU);
					}
					if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
						jule::Int _17425_i = _13114_r;
						for (; (_17425_i < _1259_n) && (!(_231ec91d7_is_path_sep(_10718_path[_17425_i]))); (_17425_i)++) {
							{
								if (_10718_path[_17425_i] == ':') {
									_12613_out._method_append('.');
									_12613_out._method_append(47LLU);
									goto _iter_end_4863376432;
								}
							}
						_iter_next_4863376432:;
						}
						_iter_end_4863376432:;
					}
					for (; (_13114_r < _1259_n) && (!(_231ec91d7_is_path_sep(_10718_path[_13114_r]))); (_13114_r)++) {
						{
							_12613_out._method_append(_10718_path[_13114_r]);
						}
					_iter_next_4863379248:;
					}
					_iter_end_4863379248:;
				}
				goto _match_end_4863372736;
				_case_end_4863372848:;
				_match_end_4863372736:;
			}
		}
	_iter_next_4863372368:;
	}
	_iter_end_4863372368:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _231ed2cb2_from_slash(_12613_out._method_string());
}



jule::Str _231ed2cb2_to_slash(jule::Str _20017_path) {
	if (true) {
		return _20017_path;
	}
	return _20017_path.replace(static_cast<jule::Str>(47LL),jule::Str("/", 1),-1LL);
}



jule::Str _231ed2cb2_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



jule::Str _231ed2cb2_join(jule::Slice<jule::Str> _22413_elem) {
	return _231ec91d7___join(_22413_elem);
}



jule::Str _231ed2cb2_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	for (; (_23013_i >= 0LL) && (!(_231ec91d7_is_path_sep(_22912_path[_23013_i]))); (_23013_i)--) {
		{
			if (_22912_path[_23013_i] == '.') {
				return _22912_path.slice(_23013_i);
			}
		}
	_iter_next_4863409504:;
	}
	_iter_end_4863409504:;
	return jule::Str();
}



std::tuple<jule::Str,jule::Bool> _231ed2cb2_abs(jule::Str _24412_path) {
	jule::Str _24510_abs_path;
	jule::Bool _24520_ok;
	std::tie(_24510_abs_path,_24520_ok) = _231ec91d7___abs(_24412_path);
	return std::make_tuple(_24510_abs_path,_24520_ok);
}



jule::Str _231ed2cb2_base(jule::Str _25317_path) {
	if (_25317_path == jule::Str()) {
		return jule::Str(".", 1);
	}
	while ((_25317_path.len() > 0LL) && _231ec91d7_is_path_sep(_25317_path[_25317_path.len() - 1LL])) {
		{
			_25317_path=_25317_path.slice(0LL,_25317_path.len() - 1LL);
		}
	_iter_next_4863419728:;
	}
	_iter_end_4863419728:;
	_25317_path=_25317_path.slice(_231ed2cb2_volume_name(_25317_path).len());
	jule::I64 _26413_i = _25317_path.len() - 1LL;
	while ((_26413_i >= 0LL) && (!(_231ec91d7_is_path_sep(_25317_path[_26413_i])))) {
		{
			(_26413_i)--;
		}
	_iter_next_4863420464:;
	}
	_iter_end_4863420464:;
	if (_26413_i >= 0LL) {
		_25317_path=_25317_path.slice(_26413_i + 1LL);
	}
	if (_25317_path == jule::Str()) {
		return static_cast<jule::Str>(47LL);
	}
	return _25317_path;
}



jule::Str _231ed2cb2_dir(jule::Str _28412_path) {
	jule::Str _2859_vol = _231ed2cb2_volume_name(_28412_path);
	jule::I64 _28613_i = _28412_path.len() - 1LL;
	while ((_28613_i >= _2859_vol.len()) && (!(_231ec91d7_is_path_sep(_28412_path[_28613_i])))) {
		{
			(_28613_i)--;
		}
	_iter_next_4863427520:;
	}
	_iter_end_4863427520:;
	jule::Str _2909_dir = _231ed2cb2_clean(_28412_path.slice(_2859_vol.len(),_28613_i + 1LL));
	if ((_2909_dir == jule::Str(".", 1)) && (_2859_vol.len() > 2LL)) {
		return _2859_vol;
	}
	return _2859_vol + _2909_dir;
}



jule::Str _231ed2cb2_volume_name(jule::Str _30220_path) {
	return _231ed2cb2_from_slash(_30220_path.slice(0LL,_231ec91d7_volume_name_len(_30220_path)));
}



jule::Bool _231ec91d7_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



jule::Bool _231ec91d7_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



jule::Int _231ec91d7_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



std::tuple<jule::Str,jule::Bool> _231ec91d7___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_231ec91d7_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_231ed2cb2_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _232036ed1_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str(),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_231ec91d7___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



jule::Str _231ec91d7_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_4863448688; }
		_case_begin_4863448688:;
		{
			return jule::Str();
		}
		goto _match_end_4863448128;
		_case_end_4863448688:;
		if (!((1LL) == _match_expr)) { goto _case_end_4863448784; }
		_case_begin_4863448784:;
		{
			return _6913_elems[0LL];
		}
		goto _match_end_4863448128;
		_case_end_4863448784:;
		_match_end_4863448128:;
	}
	jule::Str _7513_s = _6913_elems[0LL];
	{
		auto expr = _6913_elems.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4863452096:;
		if (it != expr.end()) {
			jule::Str _231ec91d7_elem = *it;
			{
				_7513_s+=_6927_sep + _231ec91d7_elem;
			}
			_iter_next_4863452096:;
			++it;
			goto _iter_begin_4863452096;
		}
		_iter_end_4863452096:;
	}
	return _7513_s;
}



jule::Str _231ec91d7___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto expr = _8211_elem;
		auto it = expr.begin();
		_iter_begin_4863453152:;
		if (it != expr.end()) {
			jule::Int _231ec91d7_i = it - expr.begin();
			jule::Str _231ec91d7_e = *it;
			{
				if (_231ec91d7_e != jule::Str()) {
					return _231ed2cb2_clean(_231ec91d7_str_join(_8211_elem.slice(_231ec91d7_i),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4863453152:;
			++it;
			_231ec91d7_i++;
			goto _iter_begin_4863453152;
		}
		_iter_end_4863453152:;
	}
	return jule::Str();
}



void _23200a669_exit(jule::Int _1213_code) {
	_23206ca0b_exit(_1213_code);
}



jule::Str _23200a669_executable(void) {
	return jule::executable();
}



jule::Bool _231e4edb6_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[0LL] == '<') && (_2627_p[_2627_p.len() - 1LL] == '>');
}



jule::Bool _231e4edb6_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto expr = _231e4edb6_CPP_HEADER_EXTS;
		auto it = expr.begin();
		_iter_begin_4863614064:;
		if (it != expr.end()) {
			jule::Str _231e4edb6_valid_ext = *it;
			{
				if (_3128_ext == _231e4edb6_valid_ext) {
					return true;
				}
			}
			_iter_next_4863614064:;
			++it;
			goto _iter_begin_4863614064;
		}
		_iter_end_4863614064:;
	}
	return false;
}



jule::Bool _231e4edb6_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto expr = _231e4edb6_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4863616400:;
		if (it != expr.end()) {
			jule::Str _231e4edb6_e = *it;
			{
				if (_4225_ext == _231e4edb6_e) {
					return true;
				}
			}
			_iter_next_4863616400:;
			++it;
			goto _iter_begin_4863616400;
		}
		_iter_end_4863616400:;
	}
	{
		auto expr = _231e4edb6_OBJECTIVE_CPP_EXTS;
		auto it = expr.begin();
		_iter_begin_4863615760:;
		if (it != expr.end()) {
			jule::Str _231e4edb6_e = *it;
			{
				if (_4225_ext == _231e4edb6_e) {
					return true;
				}
			}
			_iter_next_4863615760:;
			++it;
			goto _iter_begin_4863615760;
		}
		_iter_end_4863615760:;
	}
	return false;
}



jule::Str _231e4202e_logf(jule::Str _25513_fmt,jule::Slice<jule::Any> _25526_args) {
	return _231e4202e_apply_fmt(_25513_fmt,_25526_args);
}



jule::Str _231e4202e_arg_to_str(jule::Any _25915_arg) {
	{
		auto _match_expr{ _25915_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4863623664; }
		_case_begin_4863623664:;
		{
			return _25915_arg.operator jule::Str();
		}
		goto _match_end_4863621408;
		_case_end_4863623664:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4863623856; }
		_case_begin_4863623856:;
		{
			return static_cast<jule::Str>(_25915_arg.operator jule::U8());
		}
		goto _match_end_4863621408;
		_case_end_4863623856:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4863623952; }
		_case_begin_4863623952:;
		{
			return static_cast<jule::Str>(_25915_arg.operator jule::I32());
		}
		goto _match_end_4863621408;
		_case_end_4863623952:;
		_case_begin_4863621280:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4863621408;
		_case_end_4863621280:;
		_match_end_4863621408:;
	}
}



jule::Int _231e4202e_find_next_fmt(jule::Str _26818_fmt) {
	{
		auto expr = _26818_fmt;
		auto it = expr.begin();
		_iter_begin_4863626240:;
		if (it != expr.end()) {
			jule::Int _231e4202e_i = it - expr.begin();
			jule::U8 _231e4202e_b = *it;
			{
				if (_231e4202e_b == '@') {
					return _231e4202e_i;
				}
			}
			_iter_next_4863626240:;
			++it;
			_231e4202e_i++;
			goto _iter_begin_4863626240;
		}
		_iter_end_4863626240:;
	}
	return -1LL;
}



jule::Str _231e4202e_apply_fmt(jule::Str _27718_fmt,jule::Slice<jule::Any> _27728_args) {
	jule::Str _27813_s = jule::Str();
	{
		auto expr = _27728_args;
		auto it = expr.begin();
		_iter_begin_4863631536:;
		if (it != expr.end()) {
			jule::Any _231e4202e_arg = *it;
			{
				jule::Int _28113_i = _231e4202e_find_next_fmt(_27718_fmt);
				if (_28113_i == -1LL) {
					goto _iter_end_4863631536;
				}
				_27813_s+=_27718_fmt.slice(0LL,_28113_i);
				_27813_s+=_231e4202e_arg_to_str(_231e4202e_arg);
				_27718_fmt=_27718_fmt.slice(_28113_i + 1LL);
			}
			_iter_next_4863631536:;
			++it;
			goto _iter_begin_4863631536;
		}
		_iter_end_4863631536:;
	}
	_27813_s+=_27718_fmt;
	return _27813_s;
}



jule::Bool _231e59e26_is_top_directive(jule::Str _3625_directive) {
	return (_3625_directive == jule::Str("pass", 4)) || (_3625_directive == jule::Str("build", 5));
}



jule::Bool _231e8d3bb_is_windows(jule::Str _5119_os) {
	return _5119_os == jule::Str("windows", 7);
}



jule::Bool _231e8d3bb_is_darwin(jule::Str _5318_os) {
	return _5318_os == jule::Str("darwin", 6);
}



jule::Bool _231e8d3bb_is_linux(jule::Str _5517_os) {
	return _5517_os == jule::Str("linux", 5);
}



jule::Bool _231e8d3bb_is_i386(jule::Str _5716_arch) {
	return _5716_arch == jule::Str("i386", 4);
}



jule::Bool _231e8d3bb_is_amd64(jule::Str _5917_arch) {
	return _5917_arch == jule::Str("amd64", 5);
}



jule::Bool _231e8d3bb_is_arm64(jule::Str _6117_arch) {
	return _6117_arch == jule::Str("arm64", 5);
}



jule::Bool _231e8d3bb_is_unix(jule::Str _6316_os) {
	return _231e8d3bb_is_darwin(_6316_os) || _231e8d3bb_is_linux(_6316_os);
}



jule::Bool _231e8d3bb_is_32bit(jule::Str _6517_arch) {
	return _231e8d3bb_is_i386(_6517_arch);
}



jule::Bool _231e8d3bb_is_64bit(jule::Str _6717_arch) {
	return _231e8d3bb_is_amd64(_6717_arch) || _231e8d3bb_is_arm64(_6717_arch);
}



void _231e881a7_exit_err(jule::Str _1613_msg) {
	
	jule::outln(_1613_msg);
	_23200a669_exit(1LL);
}



void _231e881a7_init(void) {
	jule::Str _2413_path = _23200a669_executable();
	if (_2413_path == jule::Str()) {
		_231e881a7_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _2910_pwd;
	jule::Int _2915_err;
	std::tie(_2910_pwd,_2915_err) = _232036ed1_working_dir();
	if (_2915_err != 0LLU) {
		_231e881a7_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _349_path_exec = _231ed2cb2_dir(_2413_path);
	_2413_path=_231ed2cb2_join(jule::Slice<jule::Str>({_349_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_231e881a7_PATH_WD))))=_2910_pwd;
		(*((&(_231e881a7_PATH_EXEC))))=_349_path_exec;
		(*((&(_231e881a7_PATH_STDLIB))))=_231ed2cb2_join(jule::Slice<jule::Str>({_2413_path,jule::Str("std", 3)}));
		(*((&(_231e881a7_PATH_API))))=_231ed2cb2_join(jule::Slice<jule::Str>({_231e881a7_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_231e881a7_PATH_API))))=_231ed2cb2_join(jule::Slice<jule::Str>({_231e881a7_PATH_API,jule::Str("api", 3)}));
		(*((&(_231e881a7_PATH_API))))=_231ed2cb2_join(jule::Slice<jule::Str>({_231e881a7_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



jule::Bool _231ea2138_is_jule(jule::Str _2316_path) {
	return _231ed2cb2_ext(_2316_path) == jule::Str(".jule", 5);
}



jule::Int _2335950dc_leading_zeros(jule::Uint _4922_x) {
	return static_cast<jule::Int>(64LLU - _2335950dc_len(_4922_x));
}



jule::Int _2335950dc_leading_zeros8(jule::U8 _5223_x) {
	return static_cast<jule::Int>(8LL - _2335950dc_len8(_5223_x));
}



jule::Int _2335950dc_leading_zeros16(jule::U16 _5524_x) {
	return static_cast<jule::Int>(16LL - _2335950dc_len16(_5524_x));
}



jule::Int _2335950dc_leading_zeros32(jule::U32 _5824_x) {
	return static_cast<jule::Int>(32LL - _2335950dc_len32(_5824_x));
}



jule::Int _2335950dc_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>(64LL - _2335950dc_len64(_6124_x));
}



jule::Int _2335950dc_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_2335950dc_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_2335950dc_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



jule::Int _2335950dc_trailing_zeros8(jule::U8 _9124_x) {
	return static_cast<jule::Int>(jule::Str("\b\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\a\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\6\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\5\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00\4\x00\1\x00\2\x00\1\x00\3\x00\1\x00\2\x00\1\x00", 256)[static_cast<jule::Int>(_9124_x)]);
}



jule::Int _2335950dc_trailing_zeros16(jule::U16 _9625_x) {
	if (_9625_x == 0LL) {
		return 16LL;
	}
	return static_cast<jule::Int>(_2335950dc_DE_BRUIJN32_TAB[static_cast<jule::Int>((static_cast<jule::U32>(_9625_x & (-(_9625_x))) * 125613361LL) >> 27LL)]);
}



jule::Int _2335950dc_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_2335950dc_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



jule::Int _2335950dc_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_2335950dc_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



jule::Int _2335950dc_ones_count(jule::Uint _14119_x) {
	if (false) {
		return static_cast<jule::Int>(_2335950dc_ones_count32(static_cast<jule::U32>(_14119_x)));
	}
	return static_cast<jule::Int>(_2335950dc_ones_count64(static_cast<jule::U64>(_14119_x)));
}



jule::Int _2335950dc_ones_count8(jule::U8 _14920_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_14920_x)]);
}



jule::Int _2335950dc_ones_count16(jule::U16 _15421_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x >> 8LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15421_x & 255LL)]);
}



jule::Int _2335950dc_ones_count32(jule::U32 _15921_x) {
	return static_cast<jule::Int>(((jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x >> 24LL)] + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 16LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>((_15921_x >> 8LL) & 255LL)]) + jule::Str("\x00\1\1\2\1\2\2\3\1\2\2\3\2\3\3\4\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\1\2\2\3\2\3\3\4\2\3\3\4\3\4\4\5\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\2\3\3\4\3\4\4\5\3\4\4\5\4\5\5\6\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\3\4\4\5\4\5\5\6\4\5\5\6\5\6\6\a\4\5\5\6\5\6\6\a\5\6\6\a\6\a\a\b", 256)[static_cast<jule::Int>(_15921_x & 255LL)]);
}



jule::Int _2335950dc_ones_count64(jule::U64 _16425_x) {
	
	_16425_x=static_cast<jule::U64>(((_16425_x >> 1LL) & 6148914691236517205LL) + (_16425_x & 6148914691236517205LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 2LL) & 3689348814741910323LL) + (_16425_x & 3689348814741910323LL));
	_16425_x=static_cast<jule::U64>(((_16425_x >> 4LL) + _16425_x) & 1085102592571150095LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 8LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 16LL);
	_16425_x+=static_cast<jule::U64>(_16425_x >> 32LL);
	return static_cast<jule::Int>(static_cast<jule::Int>(_16425_x) & 127LLU);
}



jule::Uint _2335950dc_rotate_left(jule::Uint _20020_x,jule::Int _20029_k) {
	if (false) {
		return static_cast<jule::Uint>(_2335950dc_rotate_left32(static_cast<jule::U32>(_20020_x),_20029_k));
	}
	return static_cast<jule::Uint>(_2335950dc_rotate_left64(static_cast<jule::U64>(_20020_x),_20029_k));
}



jule::U8 _2335950dc_rotate_left8(jule::U8 _21121_x,jule::Int _21128_k) {
	
	jule::Uint _2139_s = static_cast<jule::Uint>(_21128_k) & 7LL;
	return static_cast<jule::U8>((_21121_x << _2139_s) | (_21121_x >> (8LL - _2139_s)));
}



jule::U16 _2335950dc_rotate_left16(jule::U16 _22122_x,jule::Int _22130_k) {
	
	jule::Uint _2239_s = static_cast<jule::Uint>(_22130_k) & 15LL;
	return static_cast<jule::U16>((_22122_x << _2239_s) | (_22122_x >> (16LL - _2239_s)));
}



jule::U32 _2335950dc_rotate_left32(jule::U32 _23122_x,jule::Int _23130_k) {
	
	jule::Uint _2339_s = static_cast<jule::Uint>(_23130_k) & 31LL;
	return static_cast<jule::U32>((_23122_x << _2339_s) | (_23122_x >> (32LL - _2339_s)));
}



jule::U64 _2335950dc_rotate_left64(jule::U64 _24122_x,jule::Int _24130_k) {
	
	jule::Uint _2439_s = static_cast<jule::Uint>(_24130_k) & 63LL;
	return static_cast<jule::U64>((_24122_x << _2439_s) | (_24122_x >> (64LL - _2439_s)));
}



jule::Uint _2335950dc_reverse(jule::Uint _25016_x) {
	if (false) {
		return static_cast<jule::Uint>(_2335950dc_reverse32(static_cast<jule::U32>(_25016_x)));
	}
	return static_cast<jule::Uint>(_2335950dc_reverse64(static_cast<jule::U64>(_25016_x)));
}



jule::U8 _2335950dc_reverse8(jule::U8 _25817_x) {
	return static_cast<jule::U8>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_25817_x)]);
}



jule::U16 _2335950dc_reverse16(jule::U16 _26318_x) {
	return static_cast<jule::U16>(static_cast<jule::U16>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_26318_x >> 8LL)]) | (static_cast<jule::U16>(jule::Str("\x00\200@\300 \240`\340\020\220P\3200\260p\360\b\210H\310(\250h\350\030\230X\3308\270x\370\4\204D\304$\244d\344\024\224T\3244\264t\364\f\214L\314,\254l\354\034\234\\\334<\274|\374\2\202B\302\"\242b\342\022\222R\3222\262r\362\n\212J\312*\252j\352\032\232Z\332:\272z\372\6\206F\306&\246f\346\026\226V\3266\266v\366\016\216N\316.\256n\356\036\236^\336>\276~\376\1\201A\301!\241a\341\021\221Q\3211\261q\361\t\211I\311)\251i\351\031\231Y\3319\271y\371\5\205E\305%\245e\345\025\225U\3255\265u\365\r\215M\315-\255m\355\035\235]\335=\275}\375\3\203C\303#\243c\343\023\223S\3233\263s\363\v\213K\313+\253k\353\033\233[\333;\273{\373\a\207G\307'\247g\347\027\227W\3277\267w\367\017\217O\317/\257o\357\037\237_\337?\277\177\377", 256)[static_cast<jule::Int>(_26318_x & 255LL)]) << 8LL));
}



jule::U32 _2335950dc_reverse32(jule::U32 _26822_x) {
	
	_26822_x=static_cast<jule::U32>(((_26822_x >> 1LL) & 1431655765LL) | ((_26822_x & 1431655765LL) << 1LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 2LL) & 858993459LL) | ((_26822_x & 858993459LL) << 2LL));
	_26822_x=static_cast<jule::U32>(((_26822_x >> 4LL) & 252645135LL) | ((_26822_x & 252645135LL) << 4LL));
	return static_cast<jule::U32>(_2335950dc_reverse_bytes32(_26822_x));
}



jule::U64 _2335950dc_reverse64(jule::U64 _27722_x) {
	
	_27722_x=static_cast<jule::U64>(((_27722_x >> 1LL) & 6148914691236517205LL) | ((_27722_x & 6148914691236517205LL) << 1LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 2LL) & 3689348814741910323LL) | ((_27722_x & 3689348814741910323LL) << 2LL));
	_27722_x=static_cast<jule::U64>(((_27722_x >> 4LL) & 1085102592571150095LL) | ((_27722_x & 1085102592571150095LL) << 4LL));
	return static_cast<jule::U64>(_2335950dc_reverse_bytes64(_27722_x));
}



jule::Uint _2335950dc_reverse_bytes(jule::Uint _29022_x) {
	if (false) {
		return static_cast<jule::Uint>(_2335950dc_reverse_bytes32(static_cast<jule::U32>(_29022_x)));
	}
	return static_cast<jule::Uint>(_2335950dc_reverse_bytes64(static_cast<jule::U64>(_29022_x)));
}



jule::U16 _2335950dc_reverse_bytes16(jule::U16 _30024_x) {
	return static_cast<jule::U16>((_30024_x >> 8LL) | (_30024_x << 8LL));
}



jule::U32 _2335950dc_reverse_bytes32(jule::U32 _30728_x) {
	
	_30728_x=static_cast<jule::U32>(((_30728_x >> 8LL) & 16711935LL) | ((_30728_x & 16711935LL) << 8LL));
	return static_cast<jule::U32>((_30728_x >> 16LL) | (_30728_x << 16LL));
}



jule::U64 _2335950dc_reverse_bytes64(jule::U64 _31628_x) {
	
	_31628_x=static_cast<jule::U64>(((_31628_x >> 8LL) & 71777214294589695LL) | ((_31628_x & 71777214294589695LL) << 8LL));
	_31628_x=static_cast<jule::U64>(((_31628_x >> 16LL) & 281470681808895LL) | ((_31628_x & 281470681808895LL) << 16LL));
	return static_cast<jule::U64>((_31628_x >> 32LL) | (_31628_x << 32LL));
}



jule::Int _2335950dc_len(jule::Uint _32712_x) {
	if (false) {
		return static_cast<jule::Int>(_2335950dc_len32(static_cast<jule::U32>(_32712_x)));
	}
	return static_cast<jule::Int>(_2335950dc_len64(static_cast<jule::U64>(_32712_x)));
}



jule::Int _2335950dc_len8(jule::U8 _33613_x) {
	return static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_33613_x)]);
}



jule::Int _2335950dc_len16(jule::U16 _34218_x) {
	jule::Int _34228_n = jule::Int();
	if (_34218_x >= 256LLU) {
		_34218_x>>=8LL;
		_34228_n=8LL;
	}
	_34228_n = static_cast<jule::Int>(_34228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_34218_x)]));
	return _34228_n;
}



jule::Int _2335950dc_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LLU) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LLU) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = static_cast<jule::Int>(_35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]));
	return _35228_n;
}



jule::Int _2335950dc_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LLU) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LLU) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LLU) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = static_cast<jule::Int>(_36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]));
	return _36628_n;
}



std::tuple<jule::Uint,jule::Uint> _2335950dc_add(jule::Uint _38912_x,jule::Uint _38921_y,jule::Uint _38930_carry) {
	jule::Uint _38945_sum = jule::Uint();
	jule::Uint _38956_carry_out = jule::Uint();
	if (false) {
		jule::U32 _39114_s32;
		jule::U32 _39119_c32;
		std::tie(_39114_s32,_39119_c32) = _2335950dc_add32(static_cast<jule::U32>(_38912_x),static_cast<jule::U32>(_38921_y),static_cast<jule::U32>(_38930_carry));
		_38945_sum = static_cast<jule::Uint>(_39114_s32);
		_38956_carry_out = static_cast<jule::Uint>(_39119_c32);
		return std::make_tuple(_38945_sum,_38956_carry_out);
	}
	jule::U64 _39410_s64;
	jule::U64 _39415_c64;
	std::tie(_39410_s64,_39415_c64) = _2335950dc_add64(static_cast<jule::U64>(_38912_x),static_cast<jule::U64>(_38921_y),static_cast<jule::U64>(_38930_carry));
	_38945_sum = static_cast<jule::Uint>(_39410_s64);
	_38956_carry_out = static_cast<jule::Uint>(_39415_c64);
	return std::make_tuple(_38945_sum,_38956_carry_out);
}



std::tuple<jule::U32,jule::U32> _2335950dc_add32(jule::U32 _40314_x,jule::U32 _40322_y,jule::U32 _40330_carry) {
	jule::U32 _40344_sum = jule::U32();
	jule::U32 _40354_carryout = jule::U32();
	jule::U64 _4049_sum64 = (static_cast<jule::U64>(_40314_x) + static_cast<jule::U64>(_40322_y)) + static_cast<jule::U64>(_40330_carry);
	_40344_sum=static_cast<jule::U32>(_4049_sum64);
	_40354_carryout=static_cast<jule::U32>(_4049_sum64 >> 32LL);
	return std::make_tuple(_40344_sum,_40354_carryout);
}



std::tuple<jule::U64,jule::U64> _2335950dc_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41544_sum = jule::U64();
	jule::U64 _41554_carryout = jule::U64();
	_41544_sum=static_cast<jule::U64>((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=static_cast<jule::U64>(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



std::tuple<jule::Uint,jule::Uint> _2335950dc_sub(jule::Uint _43112_x,jule::Uint _43121_y,jule::Uint _43130_borrow) {
	jule::Uint _43146_diff = jule::Uint();
	jule::Uint _43158_borrow_out = jule::Uint();
	if (false) {
		jule::U32 _43314_d32;
		jule::U32 _43319_b32;
		std::tie(_43314_d32,_43319_b32) = _2335950dc_sub32(static_cast<jule::U32>(_43112_x),static_cast<jule::U32>(_43121_y),static_cast<jule::U32>(_43130_borrow));
		_43146_diff = static_cast<jule::Uint>(_43314_d32);
		_43158_borrow_out = static_cast<jule::Uint>(_43319_b32);
		return std::make_tuple(_43146_diff,_43158_borrow_out);
	}
	jule::U64 _43610_d64;
	jule::U64 _43615_b64;
	std::tie(_43610_d64,_43615_b64) = _2335950dc_sub64(static_cast<jule::U64>(_43112_x),static_cast<jule::U64>(_43121_y),static_cast<jule::U64>(_43130_borrow));
	_43146_diff = static_cast<jule::Uint>(_43610_d64);
	_43158_borrow_out = static_cast<jule::Uint>(_43615_b64);
	return std::make_tuple(_43146_diff,_43158_borrow_out);
}



std::tuple<jule::U32,jule::U32> _2335950dc_sub32(jule::U32 _44514_x,jule::U32 _44522_y,jule::U32 _44530_borrow) {
	jule::U32 _44545_diff = jule::U32();
	jule::U32 _44556_borrowout = jule::U32();
	_44545_diff=static_cast<jule::U32>((_44514_x - _44522_y) - _44530_borrow);
	_44556_borrowout=static_cast<jule::U32>((((~(_44514_x)) & _44522_y) | ((~(_44514_x ^ _44522_y)) & _44545_diff)) >> 31LL);
	return std::make_tuple(_44545_diff,_44556_borrowout);
}



std::tuple<jule::U64,jule::U64> _2335950dc_sub64(jule::U64 _46014_x,jule::U64 _46022_y,jule::U64 _46030_borrow) {
	jule::U64 _46045_diff = jule::U64();
	jule::U64 _46056_borrowout = jule::U64();
	_46045_diff=static_cast<jule::U64>((_46014_x - _46022_y) - _46030_borrow);
	_46056_borrowout=static_cast<jule::U64>((((~(_46014_x)) & _46022_y) | ((~(_46014_x ^ _46022_y)) & _46045_diff)) >> 63LL);
	return std::make_tuple(_46045_diff,_46056_borrowout);
}



std::tuple<jule::Uint,jule::Uint> _2335950dc_mul(jule::Uint _47412_x,jule::Uint _47421_y) {
	jule::Uint _47432_hi = jule::Uint();
	jule::Uint _47442_lo = jule::Uint();
	if (false) {
		jule::U32 _47614_h;
		jule::U32 _47617_l;
		std::tie(_47614_h,_47617_l) = _2335950dc_mul32(static_cast<jule::U32>(_47412_x),static_cast<jule::U32>(_47421_y));
		_47432_hi = static_cast<jule::Uint>(_47614_h);
		_47442_lo = static_cast<jule::Uint>(_47617_l);
		return std::make_tuple(_47432_hi,_47442_lo);
	}
	jule::U64 _47910_h;
	jule::U64 _47913_l;
	std::tie(_47910_h,_47913_l) = _2335950dc_mul64(static_cast<jule::U64>(_47412_x),static_cast<jule::U64>(_47421_y));
	_47432_hi = static_cast<jule::Uint>(_47910_h);
	_47442_lo = static_cast<jule::Uint>(_47913_l);
	return std::make_tuple(_47432_hi,_47442_lo);
}



std::tuple<jule::U32,jule::U32> _2335950dc_mul32(jule::U32 _48814_x,jule::U32 _48822_y) {
	jule::U32 _48832_hi = jule::U32();
	jule::U32 _48841_lo = jule::U32();
	jule::U64 _4899_tmp = static_cast<jule::U64>(_48814_x) * static_cast<jule::U64>(_48822_y);
	std::tie(_48832_hi,_48841_lo) = std::make_tuple(static_cast<jule::U32>(_4899_tmp >> 32LL),static_cast<jule::U32>(_4899_tmp));
	return std::make_tuple(_48832_hi,_48841_lo);
}



std::tuple<jule::U64,jule::U64> _2335950dc_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49932_hi = jule::U64();
	jule::U64 _49941_lo = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LLU;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LLU;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LLU;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=static_cast<jule::U64>(_5019_x0 * _5049_y1);
	_49932_hi=static_cast<jule::U64>(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=static_cast<jule::U64>(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



std::tuple<jule::Uint,jule::Uint> _2335950dc_div(jule::Uint _52112_hi,jule::Uint _52122_lo,jule::Uint _52132_y) {
	jule::Uint _52143_quo = jule::Uint();
	jule::Uint _52154_rem = jule::Uint();
	if (false) {
		jule::U32 _52314_q;
		jule::U32 _52317_r;
		std::tie(_52314_q,_52317_r) = _2335950dc_div32(static_cast<jule::U32>(_52112_hi),static_cast<jule::U32>(_52122_lo),static_cast<jule::U32>(_52132_y));
		_52143_quo = static_cast<jule::Uint>(_52314_q);
		_52154_rem = static_cast<jule::Uint>(_52317_r);
		return std::make_tuple(_52143_quo,_52154_rem);
	}
	jule::U64 _52610_q;
	jule::U64 _52613_r;
	std::tie(_52610_q,_52613_r) = _2335950dc_div64(static_cast<jule::U64>(_52112_hi),static_cast<jule::U64>(_52122_lo),static_cast<jule::U64>(_52132_y));
	_52143_quo = static_cast<jule::Uint>(_52610_q);
	_52154_rem = static_cast<jule::Uint>(_52613_r);
	return std::make_tuple(_52143_quo,_52154_rem);
}



std::tuple<jule::U32,jule::U32> _2335950dc_div32(jule::U32 _53414_hi,jule::U32 _53423_lo,jule::U32 _53432_y) {
	jule::U32 _53442_quo = jule::U32();
	jule::U32 _53452_rem = jule::U32();
	if (_53432_y == 0LL) {
		jule::panic(_23363dc35_DIVIDE_ERROR);
	}
	if ((_53432_y != 0LL) && (_53432_y <= _53414_hi)) {
		jule::panic(_23363dc35_OVERFLOW_ERROR);
	}
	jule::U64 _5419_z = (static_cast<jule::U64>(_53414_hi) << 32LL) | static_cast<jule::U64>(_53423_lo);
	std::tie(_53442_quo,_53452_rem) = std::make_tuple(static_cast<jule::U32>(jule::div(_5419_z,static_cast<jule::U64>(_53432_y))),static_cast<jule::U32>(jule::mod(_5419_z,static_cast<jule::U64>(_53432_y))));
	return std::make_tuple(_53442_quo,_53452_rem);
}



std::tuple<jule::U64,jule::U64> _2335950dc_div64(jule::U64 _55014_hi,jule::U64 _55023_lo,jule::U64 _55036_y) {
	jule::U64 _55046_quo = jule::U64();
	jule::U64 _55056_rem = jule::U64();
	
	
	if (_55036_y == 0LL) {
		jule::panic(_23363dc35_DIVIDE_ERROR);
	}
	if (_55036_y <= _55014_hi) {
		jule::panic(_23363dc35_OVERFLOW_ERROR);
	}
	jule::Uint _5609_s = static_cast<jule::Uint>(_2335950dc_leading_zeros64(_55036_y));
	_55036_y<<=_5609_s;
	jule::U64 _5639_yn1 = _55036_y >> 32LL;
	jule::U64 _5649_yn0 = _55036_y & 4294967295LLU;
	jule::U64 _5659_un32 = (_55014_hi << _5609_s) | (_55023_lo >> (64LL - _5609_s));
	jule::U64 _5669_un10 = _55023_lo << _5609_s;
	jule::U64 _5679_un1 = _5669_un10 >> 32LL;
	jule::U64 _5689_un0 = _5669_un10 & 4294967295LLU;
	jule::U64 _56913_q1 = jule::div(_5659_un32,_5639_yn1);
	jule::U64 _57013_rhat = _5659_un32 - (_56913_q1 * _5639_yn1);
	while ((_56913_q1 >= 4294967296LLU) || ((_56913_q1 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5679_un1))) {
		{
			(_56913_q1)--;
			_57013_rhat+=_5639_yn1;
			if (_57013_rhat >= 4294967296LLU) {
				goto _iter_end_4863981168;
			}
		}
	_iter_next_4863981168:;
	}
	_iter_end_4863981168:;
	jule::U64 _5809_un21 = ((_5659_un32 * 4294967296LLU) + _5679_un1) - (_56913_q1 * _55036_y);
	jule::U64 _58113_q0 = jule::div(_5809_un21,_5639_yn1);
	_57013_rhat=static_cast<jule::U64>(_5809_un21 - (_58113_q0 * _5639_yn1));
	while ((_58113_q0 >= 4294967296LLU) || ((_58113_q0 * _5649_yn0) > ((4294967296LLU * _57013_rhat) + _5689_un0))) {
		{
			(_58113_q0)--;
			_57013_rhat+=_5639_yn1;
			if (_57013_rhat >= 4294967296LLU) {
				goto _iter_end_4863987072;
			}
		}
	_iter_next_4863987072:;
	}
	_iter_end_4863987072:;
	_55046_quo = static_cast<jule::U64>((_56913_q1 * 4294967296LLU) + _58113_q0);
	_55056_rem = static_cast<jule::U64>((((_5809_un21 * 4294967296LLU) + _5689_un0) - (_58113_q0 * _55036_y)) >> _5609_s);
	return std::make_tuple(_55046_quo,_55056_rem);
}



jule::Uint _2335950dc_rem(jule::Uint _59812_hi,jule::Uint _59822_lo,jule::Uint _59832_y) {
	if (false) {
		return static_cast<jule::Uint>(_2335950dc_rem32(static_cast<jule::U32>(_59812_hi),static_cast<jule::U32>(_59822_lo),static_cast<jule::U32>(_59832_y)));
	}
	return static_cast<jule::Uint>(_2335950dc_rem64(static_cast<jule::U64>(_59812_hi),static_cast<jule::U64>(_59822_lo),static_cast<jule::U64>(_59832_y)));
}



jule::U32 _2335950dc_rem32(jule::U32 _60814_hi,jule::U32 _60823_lo,jule::U32 _60832_y) {
	return static_cast<jule::U32>(jule::mod((static_cast<jule::U64>(_60814_hi) << 32LL) | static_cast<jule::U64>(_60823_lo),static_cast<jule::U64>(_60832_y)));
}



jule::U64 _2335950dc_rem64(jule::U64 _61514_hi,jule::U64 _61523_lo,jule::U64 _61532_y) {
	jule::U64 _62213_rem;
	std::tie(std::ignore,_62213_rem) = _2335950dc_div64(static_cast<jule::U64>(jule::mod(_61514_hi,_61532_y)),_61523_lo,_61532_y);
	return _62213_rem;
}



jule::F64 _232ee5c3b_atanh(jule::F64 _7818_x) {
	
	{
		if (!((_7818_x < -1LL) || (_7818_x > 1LL) || (_2330d8e50_is_nan(_7818_x)))) { goto _case_end_4864246272; }
		_case_begin_4864246272:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864246096;
		_case_end_4864246272:;
		if (!((_7818_x == 1LL))) { goto _case_end_4864246384; }
		_case_begin_4864246384:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4864246096;
		_case_end_4864246384:;
		if (!((_7818_x == -1LL))) { goto _case_end_4864246512; }
		_case_begin_4864246512:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4864246096;
		_case_end_4864246512:;
		_match_end_4864246096:;
	}
	jule::Bool _8913_sign = false;
	if (_7818_x < 0LL) {
		_7818_x=static_cast<jule::F64>((-(_7818_x)));
		_8913_sign=true;
	}
	jule::F64 _9413_temp = 0LL;
	{
		if (!((_7818_x < 0.000000003725290298461914))) { goto _case_end_4864253904; }
		_case_begin_4864253904:;
		{
			_9413_temp=_7818_x;
		}
		goto _match_end_4864253008;
		_case_end_4864253904:;
		if (!((_7818_x < 0.5))) { goto _case_end_4864255696; }
		_case_begin_4864255696:;
		{
			_9413_temp=static_cast<jule::F64>(_7818_x + _7818_x);
			_9413_temp=static_cast<jule::F64>(0.5 * _23339d8da_log1p(static_cast<jule::F64>(_9413_temp + jule::div(_9413_temp * _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4864253008;
		_case_end_4864255696:;
		_case_begin_4864253120:;
		{
			_9413_temp=static_cast<jule::F64>(0.5 * _23339d8da_log1p(static_cast<jule::F64>(jule::div(_7818_x + _7818_x,1LL - _7818_x))));
		}
		goto _match_end_4864253008;
		_case_end_4864253120:;
		_match_end_4864253008:;
	}
	if (_8913_sign) {
		_9413_temp=static_cast<jule::F64>((-(_9413_temp)));
	}
	return _9413_temp;
}



jule::U32 _23300ecdd_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



jule::F32 _23300ecdd_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



jule::U64 _23300ecdd_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



jule::F64 _23300ecdd_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



jule::F64 _2330179a5_cos(jule::F64 _14816_x) {
	
	
	
	if (_2330d8e50_is_nan(_14816_x) || _2330d8e50_is_inf(_14816_x,0LL)) {
		return static_cast<jule::F64>(_2330d8e50_nan());
	}
	jule::Bool _15813_sign = false;
	_14816_x=static_cast<jule::F64>(_23318b640_abs(_14816_x));
	jule::U64 _16113_j = 0LLU;
	jule::F64 _16213_y = 0LL;
	jule::F64 _16313_z = 0LL;
	if (_14816_x >= 536870912LLU) {
		std::tie(_16113_j,_16313_z) = _23308d1ac_trig_reduce(_14816_x);
	} else {
		_16113_j=static_cast<jule::U64>(_14816_x * 1.2732395447351628);
		_16213_y=static_cast<jule::F64>(_16113_j);
		if ((_16113_j & 1LL) == 1LL) {
			(_16113_j)++;
			(_16213_y)++;
		}
		_16113_j&=7LL;
		_16313_z=static_cast<jule::F64>(((_14816_x - (_16213_y * 0.7853981256484985)) - (_16213_y * 0.00000003774894707930798)) - (_16213_y * 0.0000000000000026951514290790595));
	}
	if (_16113_j > 3LL) {
		_16113_j-=4LL;
		_15813_sign=(!(_15813_sign));
	}
	if (_16113_j > 1LL) {
		_15813_sign=(!(_15813_sign));
	}
	jule::F64 _1879_zz = _16313_z * _16313_z;
	if ((_16113_j == 1LL) || (_16113_j == 2LL)) {
		_16213_y=static_cast<jule::F64>(_16313_z + ((_16313_z * _1879_zz) * ((((((((((_2330179a5__SIN[0LL] * _1879_zz) + _2330179a5__SIN[1LL]) * _1879_zz) + _2330179a5__SIN[2LL]) * _1879_zz) + _2330179a5__SIN[3LL]) * _1879_zz) + _2330179a5__SIN[4LL]) * _1879_zz) + _2330179a5__SIN[5LL])));
	} else {
		_16213_y=static_cast<jule::F64>((1LL - (0.5 * _1879_zz)) + ((_1879_zz * _1879_zz) * ((((((((((_2330179a5__COS[0LL] * _1879_zz) + _2330179a5__COS[1LL]) * _1879_zz) + _2330179a5__COS[2LL]) * _1879_zz) + _2330179a5__COS[3LL]) * _1879_zz) + _2330179a5__COS[4LL]) * _1879_zz) + _2330179a5__COS[5LL])));
	}
	if (_15813_sign) {
		_16213_y=static_cast<jule::F64>((-(_16213_y)));
	}
	return _16213_y;
}



jule::F64 _2330179a5_sin(jule::F64 _20516_x) {
	
	
	
	{
		if (!((_20516_x == 0LL) || (_2330d8e50_is_nan(_20516_x)))) { goto _case_end_4864297984; }
		_case_begin_4864297984:;
		{
			return _20516_x;
		}
		goto _match_end_4864297824;
		_case_end_4864297984:;
		if (!((_2330d8e50_is_inf(_20516_x,0LL)))) { goto _case_end_4864298096; }
		_case_begin_4864298096:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864297824;
		_case_end_4864298096:;
		_match_end_4864297824:;
	}
	jule::Bool _21813_sign = false;
	if (_20516_x < 0LL) {
		_20516_x=static_cast<jule::F64>((-(_20516_x)));
		_21813_sign=true;
	}
	jule::U64 _22413_j = 0LLU;
	jule::F64 _22513_y = 0LL;
	jule::F64 _22613_z = 0LL;
	if (_20516_x >= 536870912LLU) {
		std::tie(_22413_j,_22613_z) = _23308d1ac_trig_reduce(_20516_x);
	} else {
		_22413_j=static_cast<jule::U64>(_20516_x * 1.2732395447351628);
		_22513_y=static_cast<jule::F64>(_22413_j);
		if ((_22413_j & 1LL) == 1LL) {
			(_22413_j)++;
			(_22513_y)++;
		}
		_22413_j&=7LL;
		_22613_z=static_cast<jule::F64>(((_20516_x - (_22513_y * 0.7853981256484985)) - (_22513_y * 0.00000003774894707930798)) - (_22513_y * 0.0000000000000026951514290790595));
	}
	if (_22413_j > 3LL) {
		_21813_sign=(!(_21813_sign));
		_22413_j-=4LL;
	}
	jule::F64 _2469_zz = _22613_z * _22613_z;
	if ((_22413_j == 1LL) || (_22413_j == 2LL)) {
		_22513_y=static_cast<jule::F64>((1LL - (0.5 * _2469_zz)) + ((_2469_zz * _2469_zz) * ((((((((((_2330179a5__COS[0LL] * _2469_zz) + _2330179a5__COS[1LL]) * _2469_zz) + _2330179a5__COS[2LL]) * _2469_zz) + _2330179a5__COS[3LL]) * _2469_zz) + _2330179a5__COS[4LL]) * _2469_zz) + _2330179a5__COS[5LL])));
	} else {
		_22513_y=static_cast<jule::F64>(_22613_z + ((_22613_z * _2469_zz) * ((((((((((_2330179a5__SIN[0LL] * _2469_zz) + _2330179a5__SIN[1LL]) * _2469_zz) + _2330179a5__SIN[2LL]) * _2469_zz) + _2330179a5__SIN[3LL]) * _2469_zz) + _2330179a5__SIN[4LL]) * _2469_zz) + _2330179a5__SIN[5LL])));
	}
	if (_21813_sign) {
		_22513_y=static_cast<jule::F64>((-(_22513_y)));
	}
	return _22513_y;
}



jule::F64 _232ee6e4b_tan(jule::F64 _11316_x) {
	
	
	
	{
		if (!((_11316_x == 0LL) || (_2330d8e50_is_nan(_11316_x)))) { goto _case_end_4864327984; }
		_case_begin_4864327984:;
		{
			return _11316_x;
		}
		goto _match_end_4864327824;
		_case_end_4864327984:;
		if (!((_2330d8e50_is_inf(_11316_x,0LL)))) { goto _case_end_4864328096; }
		_case_begin_4864328096:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864327824;
		_case_end_4864328096:;
		_match_end_4864327824:;
	}
	jule::Bool _12613_sign = false;
	if (_11316_x < 0LL) {
		_11316_x=static_cast<jule::F64>((-(_11316_x)));
		_12613_sign=true;
	}
	jule::U64 _13113_j = 0LLU;
	jule::F64 _13213_y = 0LL;
	jule::F64 _13313_z = 0LL;
	if (_11316_x >= 536870912LLU) {
		std::tie(_13113_j,_13313_z) = _23308d1ac_trig_reduce(_11316_x);
	} else {
		_13113_j=static_cast<jule::U64>(_11316_x * 1.2732395447351628);
		_13213_y=static_cast<jule::F64>(_13113_j);
		if ((_13113_j & 1LL) == 1LL) {
			(_13113_j)++;
			(_13213_y)++;
		}
		_13313_z=static_cast<jule::F64>(((_11316_x - (_13213_y * 0.7853981256484985)) - (_13213_y * 0.00000003774894707930798)) - (_13213_y * 0.0000000000000026951514290790595));
	}
	jule::F64 _1489_zz = _13313_z * _13313_z;
	if (_1489_zz > 0.00000000000001) {
		_13213_y=static_cast<jule::F64>(_13313_z + (_13313_z * jule::div(_1489_zz * ((((_232ee6e4b__TAN_P[0LL] * _1489_zz) + _232ee6e4b__TAN_P[1LL]) * _1489_zz) + _232ee6e4b__TAN_P[2LL]),((((((_1489_zz + _232ee6e4b__TAN_Q[1LL]) * _1489_zz) + _232ee6e4b__TAN_Q[2LL]) * _1489_zz) + _232ee6e4b__TAN_Q[3LL]) * _1489_zz) + _232ee6e4b__TAN_Q[4LL])));
	} else {
		_13213_y=_13313_z;
	}
	if ((_13113_j & 2LL) == 2LL) {
		_13213_y=static_cast<jule::F64>(jule::div(-1LL,_13213_y));
	}
	if (_12613_sign) {
		_13213_y=static_cast<jule::F64>((-(_13213_y)));
	}
	return _13213_y;
}



jule::F64 _233036199_mod(jule::F64 _5212_x,jule::F64 _5224_y) {
	if ((((_5224_y == 0LL) || _2330d8e50_is_inf(_5212_x,0LL)) || _2330d8e50_is_nan(_5212_x)) || _2330d8e50_is_nan(_5224_y)) {
		return static_cast<jule::F64>(_2330d8e50_nan());
	}
	_5224_y=static_cast<jule::F64>(_23318b640_abs(_5224_y));
	jule::F64 _5810_yfr;
	jule::Int _5815_yexp;
	std::tie(_5810_yfr,_5815_yexp) = _2330333b6_frexp(_5224_y);
	jule::F64 _5913_r = _5212_x;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5212_x)));
	}
	while (_5913_r >= _5224_y) {
		{
			jule::F64 _6514_rfr;
			jule::Int _6523_rexp;
			std::tie(_6514_rfr,_6523_rexp) = _2330333b6_frexp(_5913_r);
			if (_6514_rfr < _5810_yfr) {
				_6523_rexp=static_cast<jule::Int>(_6523_rexp - 1LL);
			}
			_5913_r=static_cast<jule::F64>(_5913_r - _23329d686_ldexp(_5224_y,static_cast<jule::Int>(_6523_rexp - _5815_yexp)));
		}
	_iter_next_4864374160:;
	}
	_iter_end_4864374160:;
	if (_5212_x < 0LL) {
		_5913_r=static_cast<jule::F64>((-(_5913_r)));
	}
	return _5913_r;
}



std::tuple<jule::F64,jule::Int> _2330333b6_frexp(jule::F64 _4718_f) {
	jule::F64 _4728_frac = jule::F64();
	jule::Int _4739_exp = jule::Int();
	{
		if (!((_4718_f == 0LL))) { goto _case_end_4864380096; }
		_case_begin_4864380096:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4864379872;
		_case_end_4864380096:;
		if (!((_2330d8e50_is_inf(_4718_f,0LL)) || (_2330d8e50_is_nan(_4718_f)))) { goto _case_end_4864380208; }
		_case_begin_4864380208:;
		{
			_4728_frac = _4718_f;
			_4739_exp = 0LL;
			return std::make_tuple(_4728_frac,_4739_exp);
		}
		goto _match_end_4864379872;
		_case_end_4864380208:;
		_match_end_4864379872:;
	}
	std::tie(_4718_f,_4739_exp) = _2330d8e50_normalize(_4718_f);
	jule::U64 _5613_x = _23300ecdd_f64_bits(_4718_f);
	_4739_exp+=static_cast<jule::Int>((static_cast<jule::Int>((_5613_x >> 52LL) & 2047LL) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=4602678819172646912LLU;
	_4728_frac=static_cast<jule::F64>(_23300ecdd_f64_from_bits(_5613_x));
	return std::make_tuple(_4728_frac,_4739_exp);
}



jule::F32 _2330705bd_nextafter32(jule::F32 _4420_x,jule::F32 _4428_y) {
	jule::F32 _4438_r = jule::F32();
	{
		if (!((_2330d8e50_is_nan(static_cast<jule::F64>(_4420_x))) || (_2330d8e50_is_nan(static_cast<jule::F64>(_4428_y))))) { goto _case_end_4864390400; }
		_case_begin_4864390400:;
		{
			_4438_r=static_cast<jule::F32>(_2330d8e50_nan());
		}
		goto _match_end_4864389440;
		_case_end_4864390400:;
		if (!((_4420_x == _4428_y))) { goto _case_end_4864390896; }
		_case_begin_4864390896:;
		{
			_4438_r=_4420_x;
		}
		goto _match_end_4864389440;
		_case_end_4864390896:;
		if (!((_4420_x == 0LL))) { goto _case_end_4864390576; }
		_case_begin_4864390576:;
		{
			_4438_r=static_cast<jule::F32>(_233074c43_copysign(static_cast<jule::F64>(_23300ecdd_f32_from_bits(1LLU)),static_cast<jule::F64>(_4428_y)));
		}
		goto _match_end_4864389440;
		_case_end_4864390576:;
		if (!(((_4428_y > _4420_x) == (_4420_x > 0LL)))) { goto _case_end_4864392016; }
		_case_begin_4864392016:;
		{
			_4438_r=static_cast<jule::F32>(_23300ecdd_f32_from_bits(static_cast<jule::U32>(_23300ecdd_f32_bits(_4420_x) + 1LL)));
		}
		goto _match_end_4864389440;
		_case_end_4864392016:;
		_case_begin_4864389616:;
		{
			_4438_r=static_cast<jule::F32>(_23300ecdd_f32_from_bits(static_cast<jule::U32>(_23300ecdd_f32_bits(_4420_x) - 1LL)));
		}
		goto _match_end_4864389440;
		_case_end_4864389616:;
		_match_end_4864389440:;
	}
	return _4438_r;
}



jule::F64 _2330705bd_nextafter(jule::F64 _6618_x,jule::F64 _6626_y) {
	jule::F64 _6636_r = jule::F64();
	{
		if (!((_2330d8e50_is_nan(_6618_x)) || (_2330d8e50_is_nan(_6626_y)))) { goto _case_end_4864400288; }
		_case_begin_4864400288:;
		{
			_6636_r=static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864399328;
		_case_end_4864400288:;
		if (!((_6618_x == _6626_y))) { goto _case_end_4864400800; }
		_case_begin_4864400800:;
		{
			_6636_r=_6618_x;
		}
		goto _match_end_4864399328;
		_case_end_4864400800:;
		if (!((_6618_x == 0LL))) { goto _case_end_4864400464; }
		_case_begin_4864400464:;
		{
			_6636_r=static_cast<jule::F64>(_233074c43_copysign(static_cast<jule::F64>(_23300ecdd_f64_from_bits(1LLU)),_6626_y));
		}
		goto _match_end_4864399328;
		_case_end_4864400464:;
		if (!(((_6626_y > _6618_x) == (_6618_x > 0LL)))) { goto _case_end_4864401712; }
		_case_begin_4864401712:;
		{
			_6636_r=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_6618_x) + 1LL)));
		}
		goto _match_end_4864399328;
		_case_end_4864401712:;
		_case_begin_4864399504:;
		{
			_6636_r=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_6618_x) - 1LL)));
		}
		goto _match_end_4864399328;
		_case_end_4864399504:;
		_match_end_4864399328:;
	}
	return _6636_r;
}



jule::F64 _233074c43_copysign(jule::F64 _3917_f,jule::F64 _3925_sign) {
	
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>((_23300ecdd_f64_bits(_3917_f) & 9223372036854775807LLU) | (_23300ecdd_f64_bits(_3925_sign) & 9223372036854775808LLU))));
}



std::tuple<jule::U64,jule::F64> _23308d1ac_trig_reduce(jule::F64 _6020_x) {
	jule::U64 _6030_j = jule::U64();
	jule::F64 _6038_z = jule::F64();
	
	if (_6020_x < 0.7853981633974483) {
		_6030_j = 0LL;
		_6038_z = _6020_x;
		return std::make_tuple(_6030_j,_6038_z);
	}
	jule::U64 _6713_ix = _23300ecdd_f64_bits(_6020_x);
	jule::Int _689_exp = (static_cast<jule::Int>((_6713_ix >> 52LL) & 2047LL) - 1023LL) - 52LL;
	_6713_ix=static_cast<jule::U64>(_6713_ix & 9227875636482146303LLU);
	_6713_ix|=4503599627370496LLU;
	jule::Uint _7410_digit = jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	jule::Uint _7417_bitshift = jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL);
	std::tie(_7410_digit,_7417_bitshift) = std::make_tuple(jule::div(static_cast<jule::Uint>(_689_exp + 61LL),64LL),jule::mod(static_cast<jule::Uint>(_689_exp + 61LL),64LL));
	jule::U64 _759_z0 = (_23308d1ac_M_PI4[static_cast<jule::Int>(_7410_digit)] << _7417_bitshift) | (_23308d1ac_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] >> (64LL - _7417_bitshift));
	jule::U64 _769_z1 = (_23308d1ac_M_PI4[static_cast<jule::Int>(_7410_digit + 1LL)] << _7417_bitshift) | (_23308d1ac_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] >> (64LL - _7417_bitshift));
	jule::U64 _779_z2 = (_23308d1ac_M_PI4[static_cast<jule::Int>(_7410_digit + 2LL)] << _7417_bitshift) | (_23308d1ac_M_PI4[static_cast<jule::Int>(_7410_digit + 3LL)] >> (64LL - _7417_bitshift));
	jule::U64 _7910_z2hi;
	std::tie(_7910_z2hi,std::ignore) = _2335950dc_mul64(_779_z2,_6713_ix);
	jule::U64 _8010_z1hi;
	jule::U64 _8016_z1lo;
	std::tie(_8010_z1hi,_8016_z1lo) = _2335950dc_mul64(_769_z1,_6713_ix);
	jule::U64 _819_z0lo = _759_z0 * _6713_ix;
	jule::U64 _8210_lo;
	jule::U64 _8214_c;
	std::tie(_8210_lo,_8214_c) = _2335950dc_add64(_8016_z1lo,_7910_z2hi,0LLU);
	jule::U64 _8314_hi;
	std::tie(_8314_hi,std::ignore) = _2335950dc_add64(_819_z0lo,_8010_z1hi,_8214_c);
	_6030_j=static_cast<jule::U64>(_8314_hi >> 61LL);
	_8314_hi=static_cast<jule::U64>((_8314_hi << 3LL) | (_8210_lo >> 61LL));
	jule::Uint _889_lz = static_cast<jule::Uint>(_2335950dc_leading_zeros64(_8314_hi));
	jule::U64 _899_e = static_cast<jule::U64>(1023LL - (_889_lz + 1LL));
	_8314_hi=static_cast<jule::U64>((_8314_hi << (_889_lz + 1LL)) | (_8210_lo >> (64LL - (_889_lz + 1LL))));
	_8314_hi>>=12LL;
	_8314_hi|=static_cast<jule::U64>(_899_e << 52LL);
	_6038_z=static_cast<jule::F64>(_23300ecdd_f64_from_bits(_8314_hi));
	if ((_6030_j & 1LL) == 1LL) {
		(_6030_j)++;
		_6030_j&=7LL;
		(_6038_z)--;
	}
	_6030_j = _6030_j;
	_6038_z = static_cast<jule::F64>(_6038_z * 0.7853981633974483);
	return std::make_tuple(_6030_j,_6038_z);
}



jule::F64 _23307797c_atan2(jule::F64 _6014_y,jule::F64 _6022_x) {
	{
		if (!((_2330d8e50_is_nan(_6014_y)) || (_2330d8e50_is_nan(_6022_x)))) { goto _case_end_4864441728; }
		_case_begin_4864441728:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864441456;
		_case_end_4864441728:;
		if (!((_6014_y == 0LL))) { goto _case_end_4864443792; }
		_case_begin_4864443792:;
		{
			if ((_6022_x >= 0LL) && (!(_2332b9e11_signbit(_6022_x)))) {
				return static_cast<jule::F64>(_233074c43_copysign(0LL,_6014_y));
			}
			return static_cast<jule::F64>(_233074c43_copysign(3.141592653589793,_6014_y));
		}
		goto _match_end_4864441456;
		_case_end_4864443792:;
		if (!((_6022_x == 0LL))) { goto _case_end_4864443888; }
		_case_begin_4864443888:;
		{
			return static_cast<jule::F64>(_233074c43_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4864441456;
		_case_end_4864443888:;
		if (!((_2330d8e50_is_inf(_6022_x,0LL)))) { goto _case_end_4864444000; }
		_case_begin_4864444000:;
		{
			if (_2330d8e50_is_inf(_6022_x,1LL)) {
				{
					if (!((_2330d8e50_is_inf(_6014_y,0LL)))) { goto _case_end_4864452752; }
					_case_begin_4864452752:;
					{
						return static_cast<jule::F64>(_233074c43_copysign(0.7853981633974483,_6014_y));
					}
					goto _match_end_4864450672;
					_case_end_4864452752:;
					_case_begin_4864450832:;
					{
						return static_cast<jule::F64>(_233074c43_copysign(0LL,_6014_y));
					}
					goto _match_end_4864450672;
					_case_end_4864450832:;
					_match_end_4864450672:;
				}
			}
			{
				if (!((_2330d8e50_is_inf(_6014_y,0LL)))) { goto _case_end_4864454560; }
				_case_begin_4864454560:;
				{
					return static_cast<jule::F64>(_233074c43_copysign(2.356194490192345,_6014_y));
				}
				goto _match_end_4864451952;
				_case_end_4864454560:;
				_case_begin_4864452032:;
				{
					return static_cast<jule::F64>(_233074c43_copysign(3.141592653589793,_6014_y));
				}
				goto _match_end_4864451952;
				_case_end_4864452032:;
				_match_end_4864451952:;
			}
		}
		goto _match_end_4864441456;
		_case_end_4864444000:;
		if (!((_2330d8e50_is_inf(_6014_y,0LL)))) { goto _case_end_4864444112; }
		_case_begin_4864444112:;
		{
			return static_cast<jule::F64>(_233074c43_copysign(1.5707963267948966,_6014_y));
		}
		goto _match_end_4864441456;
		_case_end_4864444112:;
		_match_end_4864441456:;
	}
	jule::F64 _929_q = _2334de278_atan(static_cast<jule::F64>(jule::div(_6014_y,_6022_x)));
	if (_6022_x < 0LL) {
		if (_929_q <= 0LL) {
			return static_cast<jule::F64>(_929_q + 3.141592653589793);
		}
		return static_cast<jule::F64>(_929_q - 3.141592653589793);
	}
	return _929_q;
}



jule::F64 _2330942b2_floor(jule::F64 _4414_x) {
	if (((_4414_x == 0LL) || _2330d8e50_is_nan(_4414_x)) || _2330d8e50_is_inf(_4414_x,0LL)) {
		return _4414_x;
	}
	if (_4414_x < 0LL) {
		jule::F64 _4918_d;
		jule::F64 _4921_fract;
		std::tie(_4918_d,_4921_fract) = _2331e779a_modf(static_cast<jule::F64>((-(_4414_x))));
		if (_4921_fract != 0LL) {
			_4918_d=static_cast<jule::F64>(_4918_d + 1LL);
		}
		return static_cast<jule::F64>((-(_4918_d)));
	}
	jule::F64 _5510_d;
	std::tie(_5510_d,std::ignore) = _2331e779a_modf(_4414_x);
	return _5510_d;
}



jule::F64 _2330942b2_ceil(jule::F64 _6513_x) {
	return static_cast<jule::F64>((-(_2330942b2_floor(static_cast<jule::F64>((-(_6513_x)))))));
}



jule::F64 _2330942b2_trunc(jule::F64 _7314_x) {
	if (((_7314_x == 0LL) || _2330d8e50_is_nan(_7314_x)) || _2330d8e50_is_inf(_7314_x,0LL)) {
		return _7314_x;
	}
	jule::F64 _7710_d;
	std::tie(_7710_d,std::ignore) = _2331e779a_modf(_7314_x);
	return _7710_d;
}



jule::F64 _2330942b2_round(jule::F64 _8714_x) {
	jule::U64 _9713_bits = _23300ecdd_f64_bits(_8714_x);
	jule::Uint _9813_e = static_cast<jule::Uint>(_9713_bits >> 52LL) & 2047LL;
	if (_9813_e < 1023LL) {
		_9713_bits&=9223372036854775808LLU;
		if (_9813_e == 1022LL) {
			_9713_bits|=4607182418800017408LL;
		}
	} else if (_9813_e < 1075LL) {
		
		_9813_e-=1023LL;
		_9713_bits+=static_cast<jule::Uint>(2251799813685248LLU >> _9813_e);
		_9713_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _9813_e)));
	}
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(_9713_bits));
}



jule::F64 _2330942b2_round_even(jule::F64 _12419_x) {
	jule::U64 _13613_bits = _23300ecdd_f64_bits(_12419_x);
	jule::Uint _13713_e = static_cast<jule::Uint>(_13613_bits >> 52LL) & 2047LL;
	if (_13713_e >= 1023LL) {
		
		_13713_e-=1023LL;
		_13613_bits+=static_cast<jule::U64>((2251799813685247LLU + ((_13613_bits >> (52LL - _13713_e)) & 1LL)) >> _13713_e);
		_13613_bits&=static_cast<jule::Uint>((~(4503599627370495LLU >> _13713_e)));
	} else if ((_13713_e == 1022LL) && ((_13613_bits & 4503599627370495LLU) != 0LL)) {
		_13613_bits=static_cast<jule::U64>((_13613_bits & 9223372036854775808LLU) | 4607182418800017408LL);
	} else {
		_13613_bits&=9223372036854775808LLU;
	}
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(_13613_bits));
}



jule::F64 _2330d8e50_nan(void) {
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(9221120237041090561LLU));
}



jule::Bool _2330d8e50_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



jule::F64 _2330d8e50_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return static_cast<jule::F64>(_23300ecdd_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(18442240474082181120LLU));
}



jule::Bool _2330d8e50_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



std::tuple<jule::F64,jule::Int> _2330d8e50_normalize(jule::F64 _8214_x) {
	jule::F64 _8224_y = jule::F64();
	jule::Int _8232_exp = jule::Int();
	
	if (_23318b640_abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_8224_y = static_cast<jule::F64>(_8214_x * 4503599627370496LLU);
		_8232_exp = -52LL;
		return std::make_tuple(_8224_y,_8232_exp);
	}
	_8224_y = _8214_x;
	_8232_exp = 0LL;
	return std::make_tuple(_8224_y,_8232_exp);
}



std::tuple<jule::F64,jule::F64> _2330c1aa3_sincos(jule::F64 _4619_x) {
	jule::F64 _4629_sin = jule::F64();
	jule::F64 _4639_cos = jule::F64();
	
	
	
	{
		if (!((_4619_x == 0LL))) { goto _case_end_4864501840; }
		_case_begin_4864501840:;
		{
			_4629_sin = _4619_x;
			_4639_cos = 1LL;
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4864501680;
		_case_end_4864501840:;
		if (!((_2330d8e50_is_nan(_4619_x)) || (_2330d8e50_is_inf(_4619_x,0LL)))) { goto _case_end_4864501952; }
		_case_begin_4864501952:;
		{
			_4629_sin = static_cast<jule::F64>(_2330d8e50_nan());
			_4639_cos = static_cast<jule::F64>(_2330d8e50_nan());
			return std::make_tuple(_4629_sin,_4639_cos);
		}
		goto _match_end_4864501680;
		_case_end_4864501952:;
		_match_end_4864501680:;
	}
	jule::Bool _5914_sin_sign = false;
	jule::Bool _5928_cos_sign = false;
	std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple(false,false);
	if (_4619_x < 0LL) {
		_4619_x=static_cast<jule::F64>((-(_4619_x)));
		_5914_sin_sign=true;
	}
	jule::U64 _6513_j = 0LLU;
	jule::F64 _6613_y = 0LL;
	jule::F64 _6713_z = 0LL;
	if (_4619_x >= 536870912LLU) {
		std::tie(_6513_j,_6713_z) = _23308d1ac_trig_reduce(_4619_x);
	} else {
		_6513_j=static_cast<jule::U64>(_4619_x * 1.2732395447351628);
		_6613_y=static_cast<jule::F64>(_6513_j);
		if ((_6513_j & 1LL) == 1LL) {
			(_6513_j)++;
			(_6613_y)++;
		}
		_6513_j&=7LL;
		_6713_z=static_cast<jule::F64>(((_4619_x - (_6613_y * 0.7853981256484985)) - (_6613_y * 0.00000003774894707930798)) - (_6613_y * 0.0000000000000026951514290790595));
	}
	if (_6513_j > 3LL) {
		_6513_j-=4LL;
		std::tie(_5914_sin_sign,_5928_cos_sign) = std::make_tuple((!(_5914_sin_sign)),(!(_5928_cos_sign)));
	}
	if (_6513_j > 1LL) {
		_5928_cos_sign=(!(_5928_cos_sign));
	}
	jule::F64 _899_zz = _6713_z * _6713_z;
	_4639_cos=static_cast<jule::F64>((1LL - (0.5 * _899_zz)) + ((_899_zz * _899_zz) * ((((((((((_2330179a5__COS[0LL] * _899_zz) + _2330179a5__COS[1LL]) * _899_zz) + _2330179a5__COS[2LL]) * _899_zz) + _2330179a5__COS[3LL]) * _899_zz) + _2330179a5__COS[4LL]) * _899_zz) + _2330179a5__COS[5LL])));
	_4629_sin=static_cast<jule::F64>(_6713_z + ((_6713_z * _899_zz) * ((((((((((_2330179a5__SIN[0LL] * _899_zz) + _2330179a5__SIN[1LL]) * _899_zz) + _2330179a5__SIN[2LL]) * _899_zz) + _2330179a5__SIN[3LL]) * _899_zz) + _2330179a5__SIN[4LL]) * _899_zz) + _2330179a5__SIN[5LL])));
	if ((_6513_j == 1LL) || (_6513_j == 2LL)) {
		std::tie(_4629_sin,_4639_cos) = std::make_tuple(_4639_cos,_4629_sin);
	}
	if (_5928_cos_sign) {
		_4639_cos=static_cast<jule::F64>((-(_4639_cos)));
	}
	if (_5914_sin_sign) {
		_4629_sin=static_cast<jule::F64>((-(_4629_sin)));
	}
	return std::make_tuple(_4629_sin,_4639_cos);
}



jule::F64 _2330da748_dim(jule::F64 _4412_x,jule::F64 _4420_y) {
	jule::F64 _509_v = _4412_x - _4420_y;
	if (_509_v <= 0LL) {
		return 0LL;
	}
	return _509_v;
}



jule::F64 _2330da748_max(jule::F64 _6612_x,jule::F64 _6620_y) {
	{
		if (!((_2330d8e50_is_inf(_6612_x,1LL)) || (_2330d8e50_is_inf(_6620_y,1LL)))) { goto _case_end_4864537760; }
		_case_begin_4864537760:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4864537520;
		_case_end_4864537760:;
		if (!((_2330d8e50_is_nan(_6612_x)) || (_2330d8e50_is_nan(_6620_y)))) { goto _case_end_4864537872; }
		_case_begin_4864537872:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864537520;
		_case_end_4864537872:;
		if (!(((_6612_x == 0LL) && (_6612_x == _6620_y)))) { goto _case_end_4864537984; }
		_case_begin_4864537984:;
		{
			if (_2332b9e11_signbit(_6612_x)) {
				return _6620_y;
			}
			return _6612_x;
		}
		goto _match_end_4864537520;
		_case_end_4864537984:;
		_match_end_4864537520:;
	}
	if (_6612_x > _6620_y) {
		return _6612_x;
	}
	return _6620_y;
}



jule::F64 _2330da748_min(jule::F64 _9212_x,jule::F64 _9220_y) {
	{
		if (!((_2330d8e50_is_inf(_9212_x,-1LL)) || (_2330d8e50_is_inf(_9220_y,-1LL)))) { goto _case_end_4864544160; }
		_case_begin_4864544160:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4864543920;
		_case_end_4864544160:;
		if (!((_2330d8e50_is_nan(_9212_x)) || (_2330d8e50_is_nan(_9220_y)))) { goto _case_end_4864544272; }
		_case_begin_4864544272:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864543920;
		_case_end_4864544272:;
		if (!(((_9212_x == 0LL) && (_9212_x == _9220_y)))) { goto _case_end_4864544384; }
		_case_begin_4864544384:;
		{
			if (_2332b9e11_signbit(_9212_x)) {
				return _9212_x;
			}
			return _9220_y;
		}
		goto _match_end_4864543920;
		_case_end_4864544384:;
		_match_end_4864543920:;
	}
	if (_9212_x < _9220_y) {
		return _9212_x;
	}
	return _9220_y;
}



jule::F64 _2330e70b2_log(jule::F64 _11112_x) {
	
	
	
	
	
	
	
	
	
	{
		if (!((_2330d8e50_is_nan(_11112_x)) || (_2330d8e50_is_inf(_11112_x,1LL)))) { goto _case_end_4864557648; }
		_case_begin_4864557648:;
		{
			return _11112_x;
		}
		goto _match_end_4864557472;
		_case_end_4864557648:;
		if (!((_11112_x < 0LL))) { goto _case_end_4864557760; }
		_case_begin_4864557760:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864557472;
		_case_end_4864557760:;
		if (!((_11112_x == 0LL))) { goto _case_end_4864557872; }
		_case_begin_4864557872:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4864557472;
		_case_end_4864557872:;
		_match_end_4864557472:;
	}
	jule::F64 _13314_f1;
	jule::Int _13322_ki;
	std::tie(_13314_f1,_13322_ki) = _2330333b6_frexp(_11112_x);
	if (_13314_f1 < 0.7071067811865476) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	}
	jule::F64 _1389_f = _13314_f1 - 1LL;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);
	jule::F64 _1429_s = jule::div(_1389_f,2LL + _1389_f);
	jule::F64 _1439_s2 = _1429_s * _1429_s;
	jule::F64 _1449_s4 = _1439_s2 * _1439_s2;
	jule::F64 _1459_t1 = _1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586))))));
	jule::F64 _1469_t2 = _1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373))));
	jule::F64 _1479_R = _1459_t1 + _1469_t2;
	jule::F64 _1489_hfsq = (0.5 * _1389_f) * _1389_f;
	return static_cast<jule::F64>((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f));
}



jule::F64 _233145b9e_expm1(jule::F64 _15618_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_2330d8e50_is_inf(_15618_x,1LL)) || (_2330d8e50_is_nan(_15618_x)))) { goto _case_end_4864586752; }
		_case_begin_4864586752:;
		{
			return _15618_x;
		}
		goto _match_end_4864586592;
		_case_end_4864586752:;
		if (!((_2330d8e50_is_inf(_15618_x,-1LL)))) { goto _case_end_4864586864; }
		_case_begin_4864586864:;
		{
			return -1LL;
		}
		goto _match_end_4864586592;
		_case_end_4864586864:;
		_match_end_4864586592:;
	}
	jule::F64 _18013_absx = _15618_x;
	jule::Bool _18113_sign = false;
	if (_15618_x < 0LL) {
		_18013_absx=static_cast<jule::F64>((-(_18013_absx)));
		_18113_sign=true;
	}
	if (_18013_absx >= 38.816242111356935) {
		if (_18113_sign) {
			return -1LL;
		}
		if (_18013_absx >= 709.782712893384) {
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
	}
	jule::F64 _19813_c = 0LL;
	jule::Int _19913_k = 0LL;
	if (_18013_absx > 0.34657359027997264) {
		jule::F64 _20117_hi = 0LL;
		jule::F64 _20217_lo = 0LL;
		if (_18013_absx < 1.0397207708399179) {
			if ((!(_18113_sign))) {
				_20117_hi=static_cast<jule::F64>(_15618_x - 0.6931471803691238);
				_20217_lo=0.00000000019082149292705877;
				_19913_k=1LL;
			} else {
				_20117_hi=static_cast<jule::F64>(_15618_x + 0.6931471803691238);
				_20217_lo=-0.00000000019082149292705877;
				_19913_k=-1LL;
			}
		} else {
			if ((!(_18113_sign))) {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) + 0.5);
			} else {
				_19913_k=static_cast<jule::Int>((1.4426950408889634 * _15618_x) - 0.5);
			}
			jule::F64 _21917_t = static_cast<jule::F64>(_19913_k);
			_20117_hi=static_cast<jule::F64>(_15618_x - (_21917_t * 0.6931471803691238));
			_20217_lo=static_cast<jule::F64>(_21917_t * 0.00000000019082149292705877);
		}
		_15618_x=static_cast<jule::F64>(_20117_hi - _20217_lo);
		_19813_c=static_cast<jule::F64>((_20117_hi - _15618_x) - _20217_lo);
	} else if (_18013_absx < 0.00000000000000005551115123125783) {
		return _15618_x;
	} else {
		_19913_k=0LL;
	}
	jule::F64 _2329_hfx = 0.5 * _15618_x;
	jule::F64 _2339_hxs = _15618_x * _2329_hfx;
	jule::F64 _2349_r1 = 1LL + (_2339_hxs * (-0.03333333333333313 + (_2339_hxs * (0.0015873015872548146 + (_2339_hxs * (-0.0000793650757867488 + (_2339_hxs * (0.000004008217827329362 + (_2339_hxs * -0.00000020109921818362437)))))))));
	jule::F64 _23513_t = 3LL - (_2349_r1 * _2329_hfx);
	jule::F64 _23613_e = _2339_hxs * jule::div(_2349_r1 - _23513_t,6LL - (_15618_x * _23513_t));
	if (_19913_k == 0LL) {
		return static_cast<jule::F64>(_15618_x - ((_15618_x * _23613_e) - _2339_hxs));
	}
	_23613_e=static_cast<jule::F64>((_15618_x * (_23613_e - _19813_c)) - _19813_c);
	_23613_e-=_2339_hxs;
	{
		if (!((_19913_k == -1LL))) { goto _case_end_4864616384; }
		_case_begin_4864616384:;
		{
			return static_cast<jule::F64>((0.5 * (_15618_x - _23613_e)) - 0.5);
		}
		goto _match_end_4864616160;
		_case_end_4864616384:;
		if (!((_19913_k == 1LL))) { goto _case_end_4864616480; }
		_case_begin_4864616480:;
		{
			if (_15618_x < -0.25) {
				return static_cast<jule::F64>(-2LL * (_23613_e - (_15618_x + 0.5)));
			}
			return static_cast<jule::F64>(1LL + (2LL * (_15618_x - _23613_e)));
		}
		goto _match_end_4864616160;
		_case_end_4864616480:;
		if (!((_19913_k <= -2LL) || (_19913_k > 56LL))) { goto _case_end_4864617664; }
		_case_begin_4864617664:;
		{
			jule::F64 _25117_y = 1LL - (_23613_e - _15618_x);
			_25117_y=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_25117_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
			return static_cast<jule::F64>(_25117_y - 1LL);
		}
		goto _match_end_4864616160;
		_case_end_4864617664:;
		_match_end_4864616160:;
	}
	if (_19913_k < 20LL) {
		_23513_t=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(4607182418800017408LL - (9007199254740992LL >> static_cast<jule::Uint>(_19913_k)))));
		jule::F64 _25717_y = _23513_t - (_23613_e - _15618_x);
		_25717_y=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_25717_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
		return _25717_y;
	}
	_23513_t=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(static_cast<jule::U64>(1023LL - _19913_k) << 52LL)));
	jule::F64 _26213_y = _15618_x - (_23613_e + _23513_t);
	(_26213_y)++;
	_26213_y=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_26213_y) + (static_cast<jule::U64>(_19913_k) << 52LL))));
	return _26213_y;
}



jule::F64 _23318b640_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_4312_x) & 9223372036854775807LLU)));
}



jule::F64 _233133cd0_j1(jule::F64 _10515_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_2330d8e50_is_nan(_10515_x)))) { goto _case_end_4864644608; }
		_case_begin_4864644608:;
		{
			return _10515_x;
		}
		goto _match_end_4864644448;
		_case_end_4864644608:;
		if (!((_2330d8e50_is_inf(_10515_x,0LL)) || (_10515_x == 0LL))) { goto _case_end_4864644720; }
		_case_begin_4864644720:;
		{
			return 0LL;
		}
		goto _match_end_4864644448;
		_case_end_4864644720:;
		_match_end_4864644448:;
	}
	jule::Bool _12613_sign = false;
	if (_10515_x < 0LL) {
		_10515_x=static_cast<jule::F64>((-(_10515_x)));
		_12613_sign=true;
	}
	if (_10515_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _2330c1aa3_sincos(_10515_x);
		jule::F64 _13317_ss = (-(_13214_s)) - _13217_c;
		jule::F64 _13417_cc = _13214_s - _13217_c;
		if (_10515_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = _2330179a5_cos(static_cast<jule::F64>(_10515_x + _10515_x));
			if ((_13214_s * _13217_c) > 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10515_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_23345a568_sqrt(_10515_x)));
		} else {
			jule::F64 _15317_u = _233133cd0_pone(_10515_x);
			jule::F64 _15417_v = _233133cd0_qone(_10515_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_23345a568_sqrt(_10515_x)));
		}
		if (_12613_sign) {
			return static_cast<jule::F64>((-(_14917_z)));
		}
		return _14917_z;
	}
	if (_10515_x < 0.000000007450580596923828) {
		return static_cast<jule::F64>(0.5 * _10515_x);
	}
	jule::F64 _16613_z = _10515_x * _10515_x;
	jule::F64 _16713_r = _16613_z * (-0.0625 + (_16613_z * (0.001407056669551897 + (_16613_z * (-0.00001599556310840356 + (_16613_z * 0.000000049672799960958445))))));
	jule::F64 _1689_s = 1LL + (_16613_z * (0.019153759953836346 + (_16613_z * (0.00018594678558863092 + (_16613_z * (0.0000011771846404262368 + (_16613_z * (0.0000000050463625707621704 + (_16613_z * 0.000000000012354227442613791)))))))));
	_16713_r*=_10515_x;
	_16613_z=static_cast<jule::F64>((0.5 * _10515_x) + jule::div(_16713_r,_1689_s));
	if (_12613_sign) {
		return static_cast<jule::F64>((-(_16613_z)));
	}
	return _16613_z;
}



jule::F64 _233133cd0_y1(jule::F64 _18411_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18411_x < 0LL) || (_2330d8e50_is_nan(_18411_x)))) { goto _case_end_4864681584; }
		_case_begin_4864681584:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864681408;
		_case_end_4864681584:;
		if (!((_2330d8e50_is_inf(_18411_x,1LL)))) { goto _case_end_4864681696; }
		_case_begin_4864681696:;
		{
			return 0LL;
		}
		goto _match_end_4864681408;
		_case_end_4864681696:;
		if (!((_18411_x == 0LL))) { goto _case_end_4864681808; }
		_case_begin_4864681808:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4864681408;
		_case_end_4864681808:;
		_match_end_4864681408:;
	}
	if (_18411_x >= 2LL) {
		jule::F64 _20814_s;
		jule::F64 _20817_c;
		std::tie(_20814_s,_20817_c) = _2330c1aa3_sincos(_18411_x);
		jule::F64 _20917_ss = (-(_20814_s)) - _20817_c;
		jule::F64 _21017_cc = _20814_s - _20817_c;
		if (_18411_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _21417_z = _2330179a5_cos(static_cast<jule::F64>(_18411_x + _18411_x));
			if ((_20814_s * _20817_c) > 0LL) {
				_21017_cc=static_cast<jule::F64>(jule::div(_21417_z,_20917_ss));
			} else {
				_20917_ss=static_cast<jule::F64>(jule::div(_21417_z,_21017_cc));
			}
		}
		jule::F64 _23217_z = 0LL;
		if (_18411_x > 5188146770730811392LL) {
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _20917_ss,_23345a568_sqrt(_18411_x)));
		} else {
			jule::F64 _23617_u = _233133cd0_pone(_18411_x);
			jule::F64 _23717_v = _233133cd0_qone(_18411_x);
			_23217_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23617_u * _20917_ss) + (_23717_v * _21017_cc)),_23345a568_sqrt(_18411_x)));
		}
		return _23217_z;
	}
	if (_18411_x <= 0.00000000000000005551115123125783) {
		return static_cast<jule::F64>(jule::div(-0.6366197723675814,_18411_x));
	}
	jule::F64 _2459_z = _18411_x * _18411_x;
	jule::F64 _2469_u = -0.19605709064623894 + (_2459_z * (0.05044387166398113 + (_2459_z * (-0.0019125689587576355 + (_2459_z * (0.00002352526005616105 + (_2459_z * -0.00000009190991580398789)))))));
	jule::F64 _2479_v = 1LL + (_2459_z * (0.01991673182366499 + (_2459_z * (0.00020255258102513517 + (_2459_z * (0.0000013560880109751623 + (_2459_z * (0.000000006227414523646215 + (_2459_z * 0.000000000016655924620799208)))))))));
	return static_cast<jule::F64>((_18411_x * jule::div(_2469_u,_2479_v)) + (0.6366197723675814 * ((_233133cd0_j1(_18411_x) * _2330e70b2_log(_18411_x)) - jule::div(1LL,_18411_x))));
}



jule::F64 _233133cd0_pone(jule::F64 _3289_x) {
	jule::Array<jule::F64,6>* _32913_p = nullptr;
	jule::Array<jule::F64,5>* _33013_q = nullptr;
	if (_3289_x >= 8LL) {
		_32913_p=(&(_233133cd0_P_1R8));
		_33013_q=(&(_233133cd0_P_1S8));
	} else if (_3289_x >= 4.5454) {
		_32913_p=(&(_233133cd0_P_1R5));
		_33013_q=(&(_233133cd0_P_1S5));
	} else if (_3289_x >= 2.8571) {
		_32913_p=(&(_233133cd0_P_1R3));
		_33013_q=(&(_233133cd0_P_1S3));
	} else if (_3289_x >= 2LL) {
		_32913_p=(&(_233133cd0_P_1R2));
		_33013_q=(&(_233133cd0_P_1S2));
	}
	{
		jule::F64 _34513_z = jule::div(1LL,_3289_x * _3289_x);
		jule::F64 _34613_r = (*(_32913_p))[0LL] + (_34513_z * ((*(_32913_p))[1LL] + (_34513_z * ((*(_32913_p))[2LL] + (_34513_z * ((*(_32913_p))[3LL] + (_34513_z * ((*(_32913_p))[4LL] + (_34513_z * (*(_32913_p))[5LL])))))))));
		jule::F64 _34713_s = 1LL + (_34513_z * ((*(_33013_q))[0LL] + (_34513_z * ((*(_33013_q))[1LL] + (_34513_z * ((*(_33013_q))[2LL] + (_34513_z * ((*(_33013_q))[3LL] + (_34513_z * (*(_33013_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34613_r,_34713_s));
	}
}



jule::F64 _233133cd0_qone(jule::F64 _4339_x) {
	jule::Array<jule::F64,6>* _43413_p = nullptr;
	jule::Array<jule::F64,6>* _43513_q = nullptr;
	if (_4339_x >= 8LL) {
		_43413_p=(&(_233133cd0_Q_1R8));
		_43513_q=(&(_233133cd0_Q_1S8));
	} else if (_4339_x >= 4.5454) {
		_43413_p=(&(_233133cd0_Q_1R5));
		_43513_q=(&(_233133cd0_Q_1S5));
	} else if (_4339_x >= 2.8571) {
		_43413_p=(&(_233133cd0_Q_1R3));
		_43513_q=(&(_233133cd0_Q_1S3));
	} else if (_4339_x >= 2LL) {
		_43413_p=(&(_233133cd0_Q_1R2));
		_43513_q=(&(_233133cd0_Q_1S2));
	}
	{
		jule::F64 _45013_z = jule::div(1LL,_4339_x * _4339_x);
		jule::F64 _45113_r = (*(_43413_p))[0LL] + (_45013_z * ((*(_43413_p))[1LL] + (_45013_z * ((*(_43413_p))[2LL] + (_45013_z * ((*(_43413_p))[3LL] + (_45013_z * ((*(_43413_p))[4LL] + (_45013_z * (*(_43413_p))[5LL])))))))));
		jule::F64 _45213_s = 1LL + (_45013_z * ((*(_43513_q))[0LL] + (_45013_z * ((*(_43513_q))[1LL] + (_45013_z * ((*(_43513_q))[2LL] + (_45013_z * ((*(_43513_q))[3LL] + (_45013_z * ((*(_43513_q))[4LL] + (_45013_z * (*(_43513_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(0.375 + jule::div(_45113_r,_45213_s),_4339_x));
	}
}



jule::U64 _2331e2b91_zero(jule::U64 _409_x) {
	if (_409_x == 0LL) {
		return 1LL;
	}
	return 0LL;
}



jule::U64 _2331e2b91_nonzero(jule::U64 _4912_x) {
	if (_4912_x != 0LL) {
		return 1LL;
	}
	return 0LL;
}



std::tuple<jule::U64,jule::U64> _2331e2b91_shl(jule::U64 _588_u1,jule::U64 _5817_u2,jule::Uint _5826_n) {
	jule::U64 _5837_r1 = jule::U64();
	jule::U64 _5846_r2 = jule::U64();
	_5837_r1=static_cast<jule::U64>(((_588_u1 << _5826_n) | (_5817_u2 >> (64LL - _5826_n))) | (_5817_u2 << (_5826_n - 64LL)));
	_5846_r2=static_cast<jule::U64>(_5817_u2 << _5826_n);
	return std::make_tuple(_5837_r1,_5846_r2);
}



std::tuple<jule::U64,jule::U64> _2331e2b91_shr(jule::U64 _648_u1,jule::U64 _6417_u2,jule::Uint _6426_n) {
	jule::U64 _6437_r1 = jule::U64();
	jule::U64 _6446_r2 = jule::U64();
	jule::U64 _7113_shift = _648_u1;
	jule::Uint _7213_shift_n = _6426_n - 64LL;
	while ((_7113_shift > 0LL) && (_7213_shift_n > 0LL)) {
		{
			(_7213_shift_n)--;
			_7113_shift>>=1LL;
		}
	_iter_next_4864757248:;
	}
	_iter_end_4864757248:;
	_6446_r2=static_cast<jule::U64>(((_6417_u2 >> _6426_n) | (_648_u1 << (64LL - _6426_n))) | _7113_shift);
	_6437_r1=static_cast<jule::U64>(_648_u1 >> _6426_n);
	return std::make_tuple(_6437_r1,_6446_r2);
}



std::tuple<jule::U64,jule::U64> _2331e2b91_shrcompress(jule::U64 _8716_u1,jule::U64 _8725_u2,jule::Uint _8734_n) {
	jule::U64 _8745_r1 = jule::U64();
	jule::U64 _8754_r2 = jule::U64();
	{
		if (!((_8734_n == 0LL))) { goto _case_end_4864763472; }
		_case_begin_4864763472:;
		{
			_8745_r1 = _8716_u1;
			_8754_r2 = _8725_u2;
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4864763232;
		_case_end_4864763472:;
		if (!((_8734_n == 64LL))) { goto _case_end_4864763584; }
		_case_begin_4864763584:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_8716_u1 | _2331e2b91_nonzero(_8725_u2));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4864763232;
		_case_end_4864763584:;
		if (!((_8734_n >= 128LL))) { goto _case_end_4864763696; }
		_case_begin_4864763696:;
		{
			_8745_r1 = 0LL;
			_8754_r2 = static_cast<jule::U64>(_2331e2b91_nonzero(static_cast<jule::U64>(_8716_u1 | _8725_u2)));
			return std::make_tuple(_8745_r1,_8754_r2);
		}
		goto _match_end_4864763232;
		_case_end_4864763696:;
		if (!((_8734_n < 64LL))) { goto _case_end_4864763808; }
		_case_begin_4864763808:;
		{
			std::tie(_8745_r1,_8754_r2) = _2331e2b91_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_2331e2b91_nonzero(static_cast<jule::U64>(_8725_u2 & ((1LL << _8734_n) - 1LL))));
		}
		goto _match_end_4864763232;
		_case_end_4864763808:;
		if (!((_8734_n < 128LL))) { goto _case_end_4864763920; }
		_case_begin_4864763920:;
		{
			std::tie(_8745_r1,_8754_r2) = _2331e2b91_shr(_8716_u1,_8725_u2,_8734_n);
			_8754_r2|=static_cast<jule::U64>(_2331e2b91_nonzero(static_cast<jule::U64>((_8716_u1 & ((1LL << (_8734_n - 64LL)) - 1LL)) | _8725_u2)));
		}
		goto _match_end_4864763232;
		_case_end_4864763920:;
		_match_end_4864763232:;
	}
	return std::make_tuple(_8745_r1,_8754_r2);
}



jule::I32 _2331e2b91_lz(jule::U64 _1057_u1,jule::U64 _10516_u2) {
	jule::I32 _10527_l = jule::I32();
	_10527_l=static_cast<jule::I32>(_2335950dc_leading_zeros64(_1057_u1));
	if (_10527_l == 64LL) {
		_10527_l+=static_cast<jule::I32>(_2335950dc_leading_zeros64(_10516_u2));
	}
	_10527_l = _10527_l;
	return _10527_l;
}



std::tuple<jule::U32,jule::I32,jule::U64> _2331e2b91_split(jule::U64 _11610_b) {
	jule::U32 _11620_sign = jule::U32();
	jule::I32 _11631_exp = jule::I32();
	jule::U64 _11641_mantissa = jule::U64();
	_11620_sign=static_cast<jule::U32>(_11610_b >> 63LL);
	_11631_exp=static_cast<jule::I32>(static_cast<jule::I32>(_11610_b >> 52LL) & 2047LL);
	_11641_mantissa=static_cast<jule::U64>(_11610_b & 4503599627370495LLU);
	if (_11631_exp == 0LL) {
		jule::Uint _12313_shift = static_cast<jule::Uint>(_2335950dc_leading_zeros64(_11641_mantissa) - 11LL);
		_11641_mantissa<<=_12313_shift;
		_11631_exp=static_cast<jule::I32>(1LL - static_cast<jule::I32>(_12313_shift));
	} else {
		_11641_mantissa|=4503599627370496LLU;
	}
	return std::make_tuple(_11620_sign,_11631_exp,_11641_mantissa);
}



jule::F64 _2331e2b91_fma(jule::F64 _13512_x,jule::F64 _13520_y,jule::F64 _13528_z) {
	jule::U64 _13610_bx = _23300ecdd_f64_bits(_13512_x);
	jule::U64 _13614_by = _23300ecdd_f64_bits(_13520_y);
	jule::U64 _13618_bz = _23300ecdd_f64_bits(_13528_z);
	std::tie(_13610_bx,_13614_by,_13618_bz) = std::make_tuple(_23300ecdd_f64_bits(_13512_x),_23300ecdd_f64_bits(_13520_y),_23300ecdd_f64_bits(_13528_z));
	if (((((_13512_x == 0LL) || (_13520_y == 0LL)) || (_13528_z == 0LL)) || ((_13610_bx & 9218868437227405312LL) == 9218868437227405312LL)) || ((_13614_by & 9218868437227405312LL) == 9218868437227405312LL)) {
		return static_cast<jule::F64>((_13512_x * _13520_y) + _13528_z);
	}
	if ((_13618_bz & 9218868437227405312LL) == 9218868437227405312LL) {
		return _13528_z;
	}
	jule::U32 _15010_xs;
	jule::I32 _15014_xe;
	jule::U64 _15018_xm;
	std::tie(_15010_xs,_15014_xe,_15018_xm) = _2331e2b91_split(_13610_bx);
	jule::U32 _15110_ys;
	jule::I32 _15114_ye;
	jule::U64 _15118_ym;
	std::tie(_15110_ys,_15114_ye,_15118_ym) = _2331e2b91_split(_13614_by);
	jule::U32 _15214_zs;
	jule::I32 _15222_ze;
	jule::U64 _15226_zm;
	std::tie(_15214_zs,_15222_ze,_15226_zm) = _2331e2b91_split(_13618_bz);
	jule::I32 _15613_pe = ((_15014_xe + _15114_ye) - 1023LL) + 1LL;
	jule::U64 _16114_pm1;
	jule::U64 _16123_pm2;
	std::tie(_16114_pm1,_16123_pm2) = _2335950dc_mul64(static_cast<jule::U64>(_15018_xm << 10LL),static_cast<jule::U64>(_15118_ym << 11LL));
	jule::U64 _16214_zm1 = _15226_zm << 10LL;
	jule::U64 _16223_zm2 = static_cast<jule::U64>(0LLU);
	std::tie(_16214_zm1,_16223_zm2) = std::make_tuple(_15226_zm << 10LL,static_cast<jule::U64>(0LLU));
	jule::U32 _16313_ps = _15010_xs ^ _15110_ys;
	jule::Uint _1669_is62zero = static_cast<jule::Uint>(((~(_16114_pm1)) >> 62LL) & 1LL);
	std::tie(_16114_pm1,_16123_pm2) = _2331e2b91_shl(_16114_pm1,_16123_pm2,_1669_is62zero);
	_15613_pe-=static_cast<jule::I32>(_1669_is62zero);
	if ((_15613_pe < _15222_ze) || ((_15613_pe == _15222_ze) && (_16114_pm1 < _16214_zm1))) {
		std::tie(_16313_ps,_15613_pe,_16114_pm1,_16123_pm2,_15214_zs,_15222_ze,_16214_zm1,_16223_zm2) = std::make_tuple(_15214_zs,_15222_ze,_16214_zm1,_16223_zm2,_16313_ps,static_cast<jule::I32>(_15613_pe),_16114_pm1,_16123_pm2);
	}
	std::tie(_16214_zm1,_16223_zm2) = _2331e2b91_shrcompress(_16214_zm1,_16223_zm2,static_cast<jule::Uint>(_15613_pe - _15222_ze));
	jule::U64 _17913_m = 0LLU;
	jule::U64 _18013_c = 0LLU;
	if (_16313_ps == _15214_zs) {
		std::tie(_16123_pm2,_18013_c) = _2335950dc_add64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _2335950dc_add64(_16114_pm1,_16214_zm1,_18013_c);
		_15613_pe-=static_cast<jule::I32>((~(_16114_pm1)) >> 63LL);
		std::tie(_16114_pm1,_17913_m) = _2331e2b91_shrcompress(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(64LL + (_16114_pm1 >> 63LL)));
	} else {
		std::tie(_16123_pm2,_18013_c) = _2335950dc_sub64(_16123_pm2,_16223_zm2,0LLU);
		std::tie(_16114_pm1,std::ignore) = _2335950dc_sub64(_16114_pm1,_16214_zm1,_18013_c);
		jule::I32 _19113_nz = _2331e2b91_lz(_16114_pm1,_16123_pm2);
		_15613_pe-=_19113_nz;
		std::tie(_17913_m,_16123_pm2) = _2331e2b91_shl(_16114_pm1,_16123_pm2,static_cast<jule::Uint>(_19113_nz - 1LL));
		_17913_m|=static_cast<jule::U64>(_2331e2b91_nonzero(_16123_pm2));
	}
	if ((_15613_pe > 2045LL) || ((_15613_pe == 2045LL) && (((_17913_m + 512LLU) >> 63LL) == 1LL))) {
		return static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_16313_ps) << 63LL) | 9218868437227405312LL)));
	}
	if (_15613_pe < 0LL) {
		jule::Uint _20313_n = static_cast<jule::Uint>((-(_15613_pe)));
		_17913_m=static_cast<jule::U64>((_17913_m >> _20313_n) | _2331e2b91_nonzero(static_cast<jule::U64>(_17913_m & ((1LL << _20313_n) - 1LL))));
		_15613_pe=0LL;
	}
	_17913_m=static_cast<jule::U64>(((_17913_m + 512LLU) >> 10LL) & (~(_2331e2b91_zero(static_cast<jule::U64>((_17913_m & 1023LLU) ^ 512LLU)))));
	_15613_pe&=static_cast<jule::I32>((-(static_cast<jule::I32>(_2331e2b91_nonzero(_17913_m)))));
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(((static_cast<jule::U64>(_16313_ps) << 63LL) + (static_cast<jule::U64>(_15613_pe) << 52LL)) + _17913_m)));
}



std::tuple<jule::F64,jule::F64> _2331e779a_modf(jule::F64 _4413_f) {
	jule::F64 _4423_integer = jule::F64();
	jule::F64 _4437_frac = jule::F64();
	
	jule::F64 _469_abs_f = _23318b640_abs(_4413_f);
	jule::F64 _4713_i = 0LL;
	if (_469_abs_f > 4503599627370496LL) {
		_4713_i=_4413_f;
	} else {
		_4713_i=static_cast<jule::F64>(_469_abs_f + 4503599627370496LL);
		_4713_i-=4503599627370496LL;
		while (_4713_i > _469_abs_f) {
			{
				(_4713_i)--;
			}
		_iter_next_4864837888:;
		}
		_iter_end_4864837888:;
		if (_4413_f < 0LL) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = static_cast<jule::F64>(_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



jule::F64 _2331eb051_log10(jule::F64 _4014_x) {
	return static_cast<jule::F64>(_2330e70b2_log(_4014_x) * 0.43429448190325176);
}



jule::F64 _2331eb051_log2(jule::F64 _4413_x) {
	jule::F64 _4510_frac;
	jule::Int _4516_exp;
	std::tie(_4510_frac,_4516_exp) = _2330333b6_frexp(_4413_x);
	if (_4510_frac == 0.5) {
		return static_cast<jule::F64>(_4516_exp - 1LL);
	}
	return static_cast<jule::F64>((_2330e70b2_log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp));
}



jule::F64 _23322c879_hypot(jule::F64 _5018_p,jule::F64 _5030_q) {
	{
		if (!((_2330d8e50_is_inf(_5018_p,0LL)) || (_2330d8e50_is_inf(_5030_q,0LL)))) { goto _case_end_4864846944; }
		_case_begin_4864846944:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4864846736;
		_case_end_4864846944:;
		if (!((_2330d8e50_is_nan(_5018_p)) || (_2330d8e50_is_nan(_5030_q)))) { goto _case_end_4864847056; }
		_case_begin_4864847056:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864846736;
		_case_end_4864847056:;
		_match_end_4864846736:;
	}
	std::tie(_5018_p,_5030_q) = std::make_tuple(static_cast<jule::F64>(_23318b640_abs(_5018_p)),static_cast<jule::F64>(_23318b640_abs(_5030_q)));
	if (_5018_p < _5030_q) {
		std::tie(_5018_p,_5030_q) = std::make_tuple(_5030_q,_5018_p);
	}
	if (_5018_p == 0LL) {
		return 0LL;
	}
	_5030_q=static_cast<jule::F64>(jule::div(_5030_q,_5018_p));
	return static_cast<jule::F64>(_5018_p * _23345a568_sqrt(static_cast<jule::F64>(1LL + (_5030_q * _5030_q))));
}



jule::F64 _23323e4c3_j0(jule::F64 _10715_x) {
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_2330d8e50_is_nan(_10715_x)))) { goto _case_end_4864864304; }
		_case_begin_4864864304:;
		{
			return _10715_x;
		}
		goto _match_end_4864864128;
		_case_end_4864864304:;
		if (!((_2330d8e50_is_inf(_10715_x,0LL)))) { goto _case_end_4864864416; }
		_case_begin_4864864416:;
		{
			return 0LL;
		}
		goto _match_end_4864864128;
		_case_end_4864864416:;
		if (!((_10715_x == 0LL))) { goto _case_end_4864864528; }
		_case_begin_4864864528:;
		{
			return 1LL;
		}
		goto _match_end_4864864128;
		_case_end_4864864528:;
		_match_end_4864864128:;
	}
	_10715_x=static_cast<jule::F64>(_23318b640_abs(_10715_x));
	if (_10715_x >= 2LL) {
		jule::F64 _13214_s;
		jule::F64 _13217_c;
		std::tie(_13214_s,_13217_c) = _2330c1aa3_sincos(_10715_x);
		jule::F64 _13317_ss = _13214_s - _13217_c;
		jule::F64 _13417_cc = _13214_s + _13217_c;
		if (_10715_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _13817_z = (-(_2330179a5_cos(static_cast<jule::F64>(_10715_x + _10715_x))));
			if ((_13214_s * _13217_c) < 0LL) {
				_13417_cc=static_cast<jule::F64>(jule::div(_13817_z,_13317_ss));
			} else {
				_13317_ss=static_cast<jule::F64>(jule::div(_13817_z,_13417_cc));
			}
		}
		jule::F64 _14917_z = 0LL;
		if (_10715_x > 5188146770730811392LL) {
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13417_cc,_23345a568_sqrt(_10715_x)));
		} else {
			jule::F64 _15317_u = _23323e4c3_pzero(_10715_x);
			jule::F64 _15417_v = _23323e4c3_qzero(_10715_x);
			_14917_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_15317_u * _13417_cc) - (_15417_v * _13317_ss)),_23345a568_sqrt(_10715_x)));
		}
		return _14917_z;
	}
	if (_10715_x < 0.0001220703125) {
		if (_10715_x < 0.000000007450580596923828) {
			return 1LL;
		}
		return static_cast<jule::F64>(1LL - ((0.25 * _10715_x) * _10715_x));
	}
	jule::F64 _1659_z = _10715_x * _10715_x;
	jule::F64 _1669_r = _1659_z * (0.015624999999999995 + (_1659_z * (-0.00018997929423885472 + (_1659_z * (0.0000018295404953270067 + (_1659_z * -0.000000004618326885321032))))));
	jule::F64 _1679_s = 1LL + (_1659_z * (0.015619102946489001 + (_1659_z * (0.00011692678466333745 + (_1659_z * (0.0000005135465502073181 + (_1659_z * 0.0000000011661400333379)))))));
	if (_10715_x < 1LL) {
		return static_cast<jule::F64>(1LL + (_1659_z * (-0.25 + jule::div(_1669_r,_1679_s))));
	}
	jule::F64 _1719_u = 0.5 * _10715_x;
	return static_cast<jule::F64>(((1LL + _1719_u) * (1LL - _1719_u)) + (_1659_z * jule::div(_1669_r,_1679_s)));
}



jule::F64 _23323e4c3_y0(jule::F64 _18211_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_18211_x < 0LL) || (_2330d8e50_is_nan(_18211_x)))) { goto _case_end_4864902464; }
		_case_begin_4864902464:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4864902288;
		_case_end_4864902464:;
		if (!((_2330d8e50_is_inf(_18211_x,1LL)))) { goto _case_end_4864902576; }
		_case_begin_4864902576:;
		{
			return 0LL;
		}
		goto _match_end_4864902288;
		_case_end_4864902576:;
		if (!((_18211_x == 0LL))) { goto _case_end_4864902688; }
		_case_begin_4864902688:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4864902288;
		_case_end_4864902688:;
		_match_end_4864902288:;
	}
	if (_18211_x >= 2LL) {
		jule::F64 _21814_s;
		jule::F64 _21817_c;
		std::tie(_21814_s,_21817_c) = _2330c1aa3_sincos(_18211_x);
		jule::F64 _21917_ss = _21814_s - _21817_c;
		jule::F64 _22017_cc = _21814_s + _21817_c;
		if (_18211_x < 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
			jule::F64 _22717_z = (-(_2330179a5_cos(static_cast<jule::F64>(_18211_x + _18211_x))));
			if ((_21814_s * _21817_c) < 0LL) {
				_22017_cc=static_cast<jule::F64>(jule::div(_22717_z,_21917_ss));
			} else {
				_21917_ss=static_cast<jule::F64>(jule::div(_22717_z,_22017_cc));
			}
		}
		jule::F64 _23417_z = 0LL;
		if (_18211_x > 5188146770730811392LL) {
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * _21917_ss,_23345a568_sqrt(_18211_x)));
		} else {
			jule::F64 _23817_u = _23323e4c3_pzero(_18211_x);
			jule::F64 _23917_v = _23323e4c3_qzero(_18211_x);
			_23417_z=static_cast<jule::F64>(jule::div(0.5641895835477563 * ((_23817_u * _21917_ss) + (_23917_v * _22017_cc)),_23345a568_sqrt(_18211_x)));
		}
		return _23417_z;
	}
	if (_18211_x <= 0.000000007450580596923828) {
		return static_cast<jule::F64>(-0.07380429510868723 + (0.6366197723675814 * _2330e70b2_log(_18211_x)));
	}
	jule::F64 _2479_z = _18211_x * _18211_x;
	jule::F64 _2489_u = -0.07380429510868723 + (_2479_z * (0.17666645250918112 + (_2479_z * (-0.01381856719455969 + (_2479_z * (0.00034745343209368365 + (_2479_z * (-0.0000038140705372436416 + (_2479_z * (0.000000019559013703502292 + (_2479_z * -0.00000000003982051941321034)))))))))));
	jule::F64 _2499_v = 1LL + (_2479_z * (0.01273048348341237 + (_2479_z * (0.00007600686273503533 + (_2479_z * (0.0000002591508518404578 + (_2479_z * 0.00000000044111031133267547)))))));
	return static_cast<jule::F64>(jule::div(_2489_u,_2499_v) + ((0.6366197723675814 * _23323e4c3_j0(_18211_x)) * _2330e70b2_log(_18211_x)));
}



jule::F64 _23323e4c3_pzero(jule::F64 _33010_x) {
	jule::Array<jule::F64,6>* _33113_p = nullptr;
	jule::Array<jule::F64,5>* _33213_q = nullptr;
	if (_33010_x >= 8LL) {
		_33113_p=(&(_23323e4c3_P_0R8));
		_33213_q=(&(_23323e4c3_P_0S8));
	} else if (_33010_x >= 4.5454) {
		_33113_p=(&(_23323e4c3_P_0R5));
		_33213_q=(&(_23323e4c3_P_0S5));
	} else if (_33010_x >= 2.8571) {
		_33113_p=(&(_23323e4c3_P_0R3));
		_33213_q=(&(_23323e4c3_P_0S3));
	} else if (_33010_x >= 2LL) {
		_33113_p=(&(_23323e4c3_P_0R2));
		_33213_q=(&(_23323e4c3_P_0S2));
	}
	{
		jule::F64 _34713_z = jule::div(1LL,_33010_x * _33010_x);
		jule::F64 _34813_r = (*(_33113_p))[0LL] + (_34713_z * ((*(_33113_p))[1LL] + (_34713_z * ((*(_33113_p))[2LL] + (_34713_z * ((*(_33113_p))[3LL] + (_34713_z * ((*(_33113_p))[4LL] + (_34713_z * (*(_33113_p))[5LL])))))))));
		jule::F64 _34913_s = 1LL + (_34713_z * ((*(_33213_q))[0LL] + (_34713_z * ((*(_33213_q))[1LL] + (_34713_z * ((*(_33213_q))[2LL] + (_34713_z * ((*(_33213_q))[3LL] + (_34713_z * (*(_33213_q))[4LL])))))))));
		return static_cast<jule::F64>(1LL + jule::div(_34813_r,_34913_s));
	}
}



jule::F64 _23323e4c3_qzero(jule::F64 _43510_x) {
	jule::Array<jule::F64,6>* _43613_p = nullptr;
	jule::Array<jule::F64,6>* _43713_q = nullptr;
	if (_43510_x >= 8LL) {
		_43613_p=(&(_23323e4c3_Q_0R8));
		_43713_q=(&(_23323e4c3_Q_0S8));
	} else if (_43510_x >= 4.5454) {
		_43613_p=(&(_23323e4c3_Q_0R5));
		_43713_q=(&(_23323e4c3_Q_0S5));
	} else if (_43510_x >= 2.8571) {
		_43613_p=(&(_23323e4c3_Q_0R3));
		_43713_q=(&(_23323e4c3_Q_0S3));
	} else if (_43510_x >= 2LL) {
		_43613_p=(&(_23323e4c3_Q_0R2));
		_43713_q=(&(_23323e4c3_Q_0S2));
	}
	{
		jule::F64 _45213_z = jule::div(1LL,_43510_x * _43510_x);
		jule::F64 _45313_r = (*(_43613_p))[0LL] + (_45213_z * ((*(_43613_p))[1LL] + (_45213_z * ((*(_43613_p))[2LL] + (_45213_z * ((*(_43613_p))[3LL] + (_45213_z * ((*(_43613_p))[4LL] + (_45213_z * (*(_43613_p))[5LL])))))))));
		jule::F64 _45413_s = 1LL + (_45213_z * ((*(_43713_q))[0LL] + (_45213_z * ((*(_43713_q))[1LL] + (_45213_z * ((*(_43713_q))[2LL] + (_45213_z * ((*(_43713_q))[3LL] + (_45213_z * ((*(_43713_q))[4LL] + (_45213_z * (*(_43713_q))[5LL])))))))))));
		return static_cast<jule::F64>(jule::div(-0.125 + jule::div(_45313_r,_45413_s),_43510_x));
	}
}



jule::F64 _23329d686_ldexp(jule::F64 _4518_frac,jule::Int _4533_exp) {
	{
		if (!((_4518_frac == 0LL))) { goto _case_end_4864953584; }
		_case_begin_4864953584:;
		{
			return _4518_frac;
		}
		goto _match_end_4864966672;
		_case_end_4864953584:;
		if (!((_2330d8e50_is_inf(_4518_frac,0LL)) || (_2330d8e50_is_nan(_4518_frac)))) { goto _case_end_4864953680; }
		_case_begin_4864953680:;
		{
			return _4518_frac;
		}
		goto _match_end_4864966672;
		_case_end_4864953680:;
		_match_end_4864966672:;
	}
	jule::Int _5313_e = 0LL;
	std::tie(_4518_frac,_5313_e) = _2330d8e50_normalize(_4518_frac);
	_4533_exp+=_5313_e;
	jule::U64 _5613_x = _23300ecdd_f64_bits(_4518_frac);
	_4533_exp+=static_cast<jule::Int>((static_cast<jule::Int>(_5613_x >> 52LL) & 2047LL) - 1023LL);
	if (_4533_exp < -1075LL) {
		return static_cast<jule::F64>(_233074c43_copysign(0LL,_4518_frac));
	}
	if (_4533_exp > 1023LL) {
		if (_4518_frac < 0LL) {
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		return static_cast<jule::F64>(_2330d8e50_inf(1LL));
	}
	jule::F64 _6713_m = 1LL;
	if (_4533_exp < -1022LL) {
		_4533_exp+=53LL;
		_6713_m=0.00000000000000011102230246251565;
	}
	_5613_x=static_cast<jule::U64>(_5613_x & 9227875636482146303LLU);
	_5613_x|=static_cast<jule::U64>(static_cast<jule::U64>(_4533_exp + 1023LL) << 52LL);
	return static_cast<jule::F64>(_6713_m * _23300ecdd_f64_from_bits(_5613_x));
}



jule::Bool _2332b9e11_signbit(jule::F64 _3916_x) {
	return (_23300ecdd_f64_bits(_3916_x) & 9223372036854775808LLU) != 0LL;
}



jule::F64 _2332aa40c_sinh(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	jule::Bool _6613_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_6613_sign=true;
	}
	jule::F64 _7213_temp = 0LL;
	{
		if (!((_5617_x > 21LL))) { goto _case_end_4864992096; }
		_case_begin_4864992096:;
		{
			_7213_temp=static_cast<jule::F64>(_233371db9_exp(_5617_x) * 0.5);
		}
		goto _match_end_4864990768;
		_case_end_4864992096:;
		if (!((_5617_x > 0.5))) { goto _case_end_4864992944; }
		_case_begin_4864992944:;
		{
			jule::F64 _7713_ex = _233371db9_exp(_5617_x);
			_7213_temp=static_cast<jule::F64>((_7713_ex - jule::div(1LL,_7713_ex)) * 0.5);
		}
		goto _match_end_4864990768;
		_case_end_4864992944:;
		_case_begin_4864990880:;
		{
			jule::F64 _8013_sq = _5617_x * _5617_x;
			_7213_temp=static_cast<jule::F64>(((((((-26.30563213397497 * _8013_sq) + -2894.211355989564) * _8013_sq) + -89912.72022039509) * _8013_sq) + -630767.3640497717) * _5617_x);
			_7213_temp=static_cast<jule::F64>(jule::div(_7213_temp,((((_8013_sq + -173.6789535582337) * _8013_sq) + 15215.17378790019) * _8013_sq) + -630767.3640497717));
		}
		goto _match_end_4864990768;
		_case_end_4864990880:;
		_match_end_4864990768:;
	}
	if (_6613_sign) {
		_7213_temp=static_cast<jule::F64>((-(_7213_temp)));
	}
	return _7213_temp;
}



jule::F64 _2332aa40c_cosh(jule::F64 _9717_x) {
	_9717_x=static_cast<jule::F64>(_23318b640_abs(_9717_x));
	if (_9717_x > 21LL) {
		return static_cast<jule::F64>(_233371db9_exp(_9717_x) * 0.5);
	}
	jule::F64 _1029_ex = _233371db9_exp(_9717_x);
	return static_cast<jule::F64>((_1029_ex + jule::div(1LL,_1029_ex)) * 0.5);
}



std::tuple<jule::F64,jule::Int> _2332536d5_lgamma(jule::F64 _20519_x) {
	jule::F64 _20529_lgamma = jule::F64();
	jule::Int _20542_sign = jule::Int();
	
	
	
	
	
	
	
	_20542_sign=1LL;
	{
		if (!((_2330d8e50_is_nan(_20519_x)))) { goto _case_end_4865011424; }
		_case_begin_4865011424:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4865011168;
		_case_end_4865011424:;
		if (!((_2330d8e50_is_inf(_20519_x,0LL)))) { goto _case_end_4865011520; }
		_case_begin_4865011520:;
		{
			_20529_lgamma=_20519_x;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4865011168;
		_case_end_4865011520:;
		if (!((_20519_x == 0LL))) { goto _case_end_4865011616; }
		_case_begin_4865011616:;
		{
			_20529_lgamma=static_cast<jule::F64>(_2330d8e50_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4865011168;
		_case_end_4865011616:;
		_match_end_4865011168:;
	}
	jule::Bool _22813_neg = false;
	if (_20519_x < 0LL) {
		_20519_x=static_cast<jule::F64>((-(_20519_x)));
		_22813_neg=true;
	}
	if (_20519_x < 0.000000000000000000000847033) {
		if (_22813_neg) {
			_20542_sign=-1LL;
		}
		_20529_lgamma=static_cast<jule::F64>((-(_2330e70b2_log(_20519_x))));
		return std::make_tuple(_20529_lgamma,_20542_sign);
	}
	jule::F64 _24113_nadj = 0LL;
	if (_22813_neg) {
		if (_20519_x >= 4503599627370496LLU) {
			_20529_lgamma=static_cast<jule::F64>(_2330d8e50_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		jule::F64 _24713_t = _2332536d5_sin_pi(_20519_x);
		if (_24713_t == 0LL) {
			_20529_lgamma=static_cast<jule::F64>(_2330d8e50_inf(1LL));
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		_24113_nadj=static_cast<jule::F64>(_2330e70b2_log(static_cast<jule::F64>(jule::div(3.141592653589793,_23318b640_abs(static_cast<jule::F64>(_24713_t * _20519_x))))));
		if (_24713_t < 0LL) {
			_20542_sign=-1LL;
		}
	}
	{
		if (!((_20519_x == 1LL) || (_20519_x == 2LL))) { goto _case_end_4865025520; }
		_case_begin_4865025520:;
		{
			_20529_lgamma=0LL;
			return std::make_tuple(_20529_lgamma,_20542_sign);
		}
		goto _match_end_4865026064;
		_case_end_4865025520:;
		if (!((_20519_x < 2LL))) { goto _case_end_4865026768; }
		_case_begin_4865026768:;
		{
			jule::F64 _26317_y = 0LL;
			jule::Int _26417_i = 0LL;
			if (_20519_x <= 0.9) {
				_20529_lgamma=static_cast<jule::F64>((-(_2330e70b2_log(_20519_x))));
				{
					if (!((_20519_x >= 0.7316321449683623))) { goto _case_end_4865034304; }
					_case_begin_4865034304:;
					{
						_26317_y=static_cast<jule::F64>(1LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4865031776;
					_case_end_4865034304:;
					if (!((_20519_x >= 0.19163214496836223))) { goto _case_end_4865033552; }
					_case_begin_4865033552:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 0.46163214496836225);
						_26417_i=1LL;
					}
					goto _match_end_4865031776;
					_case_end_4865033552:;
					_case_begin_4865032640:;
					{
						_26317_y=_20519_x;
						_26417_i=2LL;
					}
					goto _match_end_4865031776;
					_case_end_4865032640:;
					_match_end_4865031776:;
				}
			} else {
				_20529_lgamma=0LL;
				{
					if (!((_20519_x >= 1.7316321449683623))) { goto _case_end_4865038640; }
					_case_begin_4865038640:;
					{
						_26317_y=static_cast<jule::F64>(2LL - _20519_x);
						_26417_i=0LL;
					}
					goto _match_end_4865033648;
					_case_end_4865038640:;
					if (!((_20519_x >= 1.1916321449683622))) { goto _case_end_4865038080; }
					_case_begin_4865038080:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1.4616321449683622);
						_26417_i=1LL;
					}
					goto _match_end_4865033648;
					_case_end_4865038080:;
					_case_begin_4865032960:;
					{
						_26317_y=static_cast<jule::F64>(_20519_x - 1LL);
						_26417_i=2LL;
					}
					goto _match_end_4865033648;
					_case_end_4865032960:;
					_match_end_4865033648:;
				}
			}
			{
				auto _match_expr{ _26417_i };
				if (!((0LL) == _match_expr)) { goto _case_end_4865036160; }
				_case_begin_4865036160:;
				{
					jule::F64 _29417_z = _26317_y * _26317_y;
					jule::F64 _29517_p1 = _2332536d5__LGAM_A[0LL] + (_29417_z * (_2332536d5__LGAM_A[2LL] + (_29417_z * (_2332536d5__LGAM_A[4LL] + (_29417_z * (_2332536d5__LGAM_A[6LL] + (_29417_z * (_2332536d5__LGAM_A[8LL] + (_29417_z * _2332536d5__LGAM_A[10LL])))))))));
					jule::F64 _29617_p2 = _29417_z * (_2332536d5__LGAM_A[1LL] + (_29417_z * ((+(_2332536d5__LGAM_A[3LL])) + (_29417_z * (_2332536d5__LGAM_A[5LL] + (_29417_z * (_2332536d5__LGAM_A[7LL] + (_29417_z * (_2332536d5__LGAM_A[9LL] + (_29417_z * _2332536d5__LGAM_A[11LL]))))))))));
					jule::F64 _29717_p = (_26317_y * _29517_p1) + _29617_p2;
					_20529_lgamma+=static_cast<jule::F64>(_29717_p - (0.5 * _26317_y));
				}
				goto _match_end_4865039072;
				_case_end_4865036160:;
				if (!((1LL) == _match_expr)) { goto _case_end_4865036256; }
				_case_begin_4865036256:;
				{
					jule::F64 _30017_z = _26317_y * _26317_y;
					jule::F64 _30117_w = _30017_z * _26317_y;
					jule::F64 _30217_p1 = _2332536d5__LGAM_T[0LL] + (_30117_w * (_2332536d5__LGAM_T[3LL] + (_30117_w * (_2332536d5__LGAM_T[6LL] + (_30117_w * (_2332536d5__LGAM_T[9LL] + (_30117_w * _2332536d5__LGAM_T[12LL])))))));
					jule::F64 _30317_p2 = _2332536d5__LGAM_T[1LL] + (_30117_w * (_2332536d5__LGAM_T[4LL] + (_30117_w * (_2332536d5__LGAM_T[7LL] + (_30117_w * (_2332536d5__LGAM_T[10LL] + (_30117_w * _2332536d5__LGAM_T[13LL])))))));
					jule::F64 _30417_p3 = _2332536d5__LGAM_T[2LL] + (_30117_w * (_2332536d5__LGAM_T[5LL] + (_30117_w * (_2332536d5__LGAM_T[8LL] + (_30117_w * (_2332536d5__LGAM_T[11LL] + (_30117_w * _2332536d5__LGAM_T[14LL])))))));
					jule::F64 _30517_p = (_30017_z * _30217_p1) - (-0.000000000000000003638676997039505 - (_30117_w * (_30317_p2 + (_26317_y * _30417_p3))));
					_20529_lgamma+=static_cast<jule::F64>(-0.12148629053584961 + _30517_p);
				}
				goto _match_end_4865039072;
				_case_end_4865036256:;
				if (!((2LL) == _match_expr)) { goto _case_end_4865039888; }
				_case_begin_4865039888:;
				{
					jule::F64 _30817_p1 = _26317_y * (_2332536d5__LGAM_U[0LL] + (_26317_y * (_2332536d5__LGAM_U[1LL] + (_26317_y * (_2332536d5__LGAM_U[2LL] + (_26317_y * (_2332536d5__LGAM_U[3LL] + (_26317_y * (_2332536d5__LGAM_U[4LL] + (_26317_y * _2332536d5__LGAM_U[5LL]))))))))));
					jule::F64 _30917_p2 = 1LL + (_26317_y * (_2332536d5__LGAM_V[1LL] + (_26317_y * (_2332536d5__LGAM_V[2LL] + (_26317_y * (_2332536d5__LGAM_V[3LL] + (_26317_y * (_2332536d5__LGAM_V[4LL] + (_26317_y * _2332536d5__LGAM_V[5LL])))))))));
					_20529_lgamma+=static_cast<jule::F64>((-0.5 * _26317_y) + jule::div(_30817_p1,_30917_p2));
				}
				goto _match_end_4865039072;
				_case_end_4865039888:;
				_match_end_4865039072:;
			}
		}
		goto _match_end_4865026064;
		_case_end_4865026768:;
		if (!((_20519_x < 8LL))) { goto _case_end_4865027392; }
		_case_begin_4865027392:;
		{
			jule::Int _31313_i = static_cast<jule::Int>(_20519_x);
			jule::F64 _31413_y = _20519_x - static_cast<jule::F64>(_31313_i);
			jule::F64 _31513_p = _31413_y * (_2332536d5__LGAM_S[0LL] + (_31413_y * (_2332536d5__LGAM_S[1LL] + (_31413_y * (_2332536d5__LGAM_S[2LL] + (_31413_y * (_2332536d5__LGAM_S[3LL] + (_31413_y * (_2332536d5__LGAM_S[4LL] + (_31413_y * (_2332536d5__LGAM_S[5LL] + (_31413_y * _2332536d5__LGAM_S[6LL]))))))))))));
			jule::F64 _31613_q = 1LL + (_31413_y * (_2332536d5__LGAM_R[1LL] + (_31413_y * (_2332536d5__LGAM_R[2LL] + (_31413_y * (_2332536d5__LGAM_R[3LL] + (_31413_y * (_2332536d5__LGAM_R[4LL] + (_31413_y * (_2332536d5__LGAM_R[5LL] + (_31413_y * _2332536d5__LGAM_R[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>((0.5 * _31413_y) + jule::div(_31513_p,_31613_q));
			jule::F64 _31817_z = 1LL;
			{
				auto _match_expr{ _31313_i };
				if (!((7LL) == _match_expr)) { goto _case_end_4865099856; }
				_case_begin_4865099856:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 6LL);
					goto _case_begin_4865088848;
				}
				goto _match_end_4865099728;
				_case_end_4865099856:;
				if (!((6LL) == _match_expr)) { goto _case_end_4865088848; }
				_case_begin_4865088848:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 5LL);
					goto _case_begin_4865100288;
				}
				goto _match_end_4865099728;
				_case_end_4865088848:;
				if (!((5LL) == _match_expr)) { goto _case_end_4865100288; }
				_case_begin_4865100288:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 4LL);
					goto _case_begin_4865100384;
				}
				goto _match_end_4865099728;
				_case_end_4865100288:;
				if (!((4LL) == _match_expr)) { goto _case_end_4865100384; }
				_case_begin_4865100384:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 3LL);
					goto _case_begin_4865100480;
				}
				goto _match_end_4865099728;
				_case_end_4865100384:;
				if (!((3LL) == _match_expr)) { goto _case_end_4865100480; }
				_case_begin_4865100480:;
				{
					_31817_z*=static_cast<jule::F64>(_31413_y + 2LL);
					_20529_lgamma+=static_cast<jule::F64>(_2330e70b2_log(_31817_z));
				}
				goto _match_end_4865099728;
				_case_end_4865100480:;
				_match_end_4865099728:;
			}
		}
		goto _match_end_4865026064;
		_case_end_4865027392:;
		if (!((_20519_x < 288230376151711744LLU))) { goto _case_end_4865027488; }
		_case_begin_4865027488:;
		{
			jule::F64 _33713_t = _2330e70b2_log(_20519_x);
			jule::F64 _33813_z = jule::div(1LL,_20519_x);
			jule::F64 _33913_y = _33813_z * _33813_z;
			jule::F64 _34013_w = _2332536d5__LGAM_W[0LL] + (_33813_z * (_2332536d5__LGAM_W[1LL] + (_33913_y * (_2332536d5__LGAM_W[2LL] + (_33913_y * (_2332536d5__LGAM_W[3LL] + (_33913_y * (_2332536d5__LGAM_W[4LL] + (_33913_y * (_2332536d5__LGAM_W[5LL] + (_33913_y * _2332536d5__LGAM_W[6LL])))))))))));
			_20529_lgamma=static_cast<jule::F64>(((_20519_x - 0.5) * (_33713_t - 1LL)) + _34013_w);
		}
		goto _match_end_4865026064;
		_case_end_4865027488:;
		_case_begin_4865025232:;
		{
			_20529_lgamma=static_cast<jule::F64>(_20519_x * (_2330e70b2_log(_20519_x) - 1LL));
		}
		goto _match_end_4865026064;
		_case_end_4865025232:;
		_match_end_4865026064:;
	}
	if (_22813_neg) {
		_20529_lgamma=static_cast<jule::F64>(_24113_nadj - _20529_lgamma);
	}
	return std::make_tuple(_20529_lgamma,_20542_sign);
}



jule::F64 _2332536d5_sin_pi(jule::F64 _35215_x) {
	
	
	if (_35215_x < 0.25) {
		return static_cast<jule::F64>((-(_2330179a5_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)))));
	}
	jule::F64 _36013_z = _2330942b2_floor(_35215_x);
	jule::Int _36113_n = 0LL;
	if (_36013_z != _35215_x) {
		_35215_x=static_cast<jule::F64>(_233036199_mod(_35215_x,2LL));
		_36113_n=static_cast<jule::Int>(_35215_x * 4LL);
	} else {
		if (_35215_x >= 9007199254740992LLU) {
			_35215_x=0LL;
			_36113_n=0LL;
		} else {
			if (_35215_x < 4503599627370496LLU) {
				_36013_z=static_cast<jule::F64>(_35215_x + 4503599627370496LLU);
			}
			_36113_n=static_cast<jule::Int>(1LL & _23300ecdd_f64_bits(_36013_z));
			_35215_x=static_cast<jule::F64>(_36113_n);
			_36113_n<<=2LL;
		}
	}
	{
		auto _match_expr{ _36113_n };
		if (!((0LL) == _match_expr)) { goto _case_end_4865120944; }
		_case_begin_4865120944:;
		{
			_35215_x=static_cast<jule::F64>(_2330179a5_sin(static_cast<jule::F64>(3.141592653589793 * _35215_x)));
		}
		goto _match_end_4865127504;
		_case_end_4865120944:;
		if (!((1LL) == _match_expr || (2LL) == _match_expr)) { goto _case_end_4865117264; }
		_case_begin_4865117264:;
		{
			_35215_x=static_cast<jule::F64>(_2330179a5_cos(static_cast<jule::F64>(3.141592653589793 * (0.5 - _35215_x))));
		}
		goto _match_end_4865127504;
		_case_end_4865117264:;
		if (!((3LL) == _match_expr || (4LL) == _match_expr)) { goto _case_end_4865128640; }
		_case_begin_4865128640:;
		{
			_35215_x=static_cast<jule::F64>(_2330179a5_sin(static_cast<jule::F64>(3.141592653589793 * (1LL - _35215_x))));
		}
		goto _match_end_4865127504;
		_case_end_4865128640:;
		if (!((5LL) == _match_expr || (6LL) == _match_expr)) { goto _case_end_4865128736; }
		_case_begin_4865128736:;
		{
			_35215_x=static_cast<jule::F64>((-(_2330179a5_cos(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 1.5))))));
		}
		goto _match_end_4865127504;
		_case_end_4865128736:;
		_case_begin_4865125664:;
		{
			_35215_x=static_cast<jule::F64>(_2330179a5_sin(static_cast<jule::F64>(3.141592653589793 * (_35215_x - 2LL))));
		}
		goto _match_end_4865127504;
		_case_end_4865125664:;
		_match_end_4865127504:;
	}
	return static_cast<jule::F64>((-(_35215_x)));
}



jule::F64 _233334134_acosh(jule::F64 _7314_x) {
	
	{
		if (!((_7314_x < 1LL) || (_2330d8e50_is_nan(_7314_x)))) { goto _case_end_4865135152; }
		_case_begin_4865135152:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865134960;
		_case_end_4865135152:;
		if (!((_7314_x == 1LL))) { goto _case_end_4865135264; }
		_case_begin_4865135264:;
		{
			return 0LL;
		}
		goto _match_end_4865134960;
		_case_end_4865135264:;
		if (!((_7314_x >= 268435456LLU))) { goto _case_end_4865135376; }
		_case_begin_4865135376:;
		{
			return static_cast<jule::F64>(_2330e70b2_log(_7314_x) + 0.6931471805599453);
		}
		goto _match_end_4865134960;
		_case_end_4865135376:;
		if (!((_7314_x > 2LL))) { goto _case_end_4865135488; }
		_case_begin_4865135488:;
		{
			return static_cast<jule::F64>(_2330e70b2_log(static_cast<jule::F64>((2LL * _7314_x) - jule::div(1LL,_7314_x + _23345a568_sqrt(static_cast<jule::F64>((_7314_x * _7314_x) - 1LL))))));
		}
		goto _match_end_4865134960;
		_case_end_4865135488:;
		_match_end_4865134960:;
	}
	jule::F64 _869_t = _7314_x - 1LL;
	return static_cast<jule::F64>(_23339d8da_log1p(static_cast<jule::F64>(_869_t + _23345a568_sqrt(static_cast<jule::F64>((2LL * _869_t) + (_869_t * _869_t))))));
}



jule::F64 _2333413d8_tanh(jule::F64 _10613_x) {
	
	jule::F64 _10813_z = _23318b640_abs(_10613_x);
	{
		if (!((_10813_z > 44.014845965556525))) { goto _case_end_4865147232; }
		_case_begin_4865147232:;
		{
			if (_10613_x < 0LL) {
				return -1LL;
			}
			return 1LL;
		}
		goto _match_end_4865145168;
		_case_end_4865147232:;
		if (!((_10813_z >= 0.625))) { goto _case_end_4865154048; }
		_case_begin_4865154048:;
		{
			jule::F64 _11613_s = _233371db9_exp(static_cast<jule::F64>(2LL * _10813_z));
			_10813_z=static_cast<jule::F64>(1LL - jule::div(2LL,_11613_s + 1LL));
			if (_10613_x < 0LL) {
				_10813_z=static_cast<jule::F64>((-(_10813_z)));
			}
		}
		goto _match_end_4865145168;
		_case_end_4865154048:;
		_case_begin_4865145408:;
		{
			if (_10613_x == 0LL) {
				return _10613_x;
			}
			jule::F64 _12513_s = _10613_x * _10613_x;
			_10813_z=static_cast<jule::F64>(_10613_x + jule::div((_10613_x * _12513_s) * ((((_2333413d8_TANH_P[0LL] * _12513_s) + _2333413d8_TANH_P[1LL]) * _12513_s) + _2333413d8_TANH_P[2LL]),((((_12513_s + _2333413d8_TANH_Q[0LL]) * _12513_s) + _2333413d8_TANH_Q[1LL]) * _12513_s) + _2333413d8_TANH_Q[2LL]));
		}
		goto _match_end_4865145168;
		_case_end_4865145408:;
		_match_end_4865145168:;
	}
	return _10813_z;
}



jule::F64 _23334d6d1_cbrt(jule::F64 _5617_x) {
	
	
	
	
	
	
	
	
	if (((_5617_x == 0LL) || _2330d8e50_is_nan(_5617_x)) || _2330d8e50_is_inf(_5617_x,0LL)) {
		return _5617_x;
	}
	jule::Bool _7113_sign = false;
	if (_5617_x < 0LL) {
		_5617_x=static_cast<jule::F64>((-(_5617_x)));
		_7113_sign=true;
	}
	jule::F64 _7813_t = _23300ecdd_f64_from_bits(static_cast<jule::U64>(jule::div(_23300ecdd_f64_bits(_5617_x),3LL) + 3071306043645493248LLU));
	if (_5617_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014) {
		_7813_t=static_cast<jule::F64>(18014398509481984LL);
		_7813_t*=_5617_x;
		_7813_t=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(jule::div(_23300ecdd_f64_bits(_7813_t),3LL) + 2990241250352824320LLU)));
	}
	jule::F64 _8713_r = jule::div(_7813_t * _7813_t,_5617_x);
	jule::F64 _8813_s = 0.5428571428571428 + (_8713_r * _7813_t);
	_7813_t*=static_cast<jule::F64>(0.35714285714285715 + jule::div(1.6071428571428572,(_8813_s + 1.4142857142857144) + jule::div(-0.7053061224489796,_8813_s)));
	_7813_t=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>((_23300ecdd_f64_bits(_7813_t) & 18446744072635809792LLU) + 1073741824LLU)));
	_8813_s=static_cast<jule::F64>(_7813_t * _7813_t);
	_8713_r=static_cast<jule::F64>(jule::div(_5617_x,_8813_s));
	jule::F64 _979_w = _7813_t + _7813_t;
	_8713_r=static_cast<jule::F64>(jule::div(_8713_r - _7813_t,_979_w + _8713_r));
	_7813_t=static_cast<jule::F64>(_7813_t + (_7813_t * _8713_r));
	if (_7113_sign) {
		_7813_t=static_cast<jule::F64>((-(_7813_t)));
	}
	return _7813_t;
}



jule::F64 _2333432db_pow(jule::F64 _6412_x,jule::F64 _6420_y) {
	{
		if (!((_6420_y == 0LL) || (_6412_x == 1LL))) { goto _case_end_4865182480; }
		_case_begin_4865182480:;
		{
			return 1LL;
		}
		goto _match_end_4865182160;
		_case_end_4865182480:;
		if (!((_6420_y == 1LL))) { goto _case_end_4865182592; }
		_case_begin_4865182592:;
		{
			return _6412_x;
		}
		goto _match_end_4865182160;
		_case_end_4865182592:;
		if (!((_2330d8e50_is_nan(_6412_x)) || (_2330d8e50_is_nan(_6420_y)))) { goto _case_end_4865182704; }
		_case_begin_4865182704:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865182160;
		_case_end_4865182704:;
		if (!((_6412_x == 0LL))) { goto _case_end_4865182816; }
		_case_begin_4865182816:;
		{
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4865185632; }
				_case_begin_4865185632:;
				{
					if (_2333432db_is_odd_int(_6420_y)) {
						return static_cast<jule::F64>(_233074c43_copysign(static_cast<jule::F64>(_2330d8e50_inf(1LL)),_6412_x));
					}
					return static_cast<jule::F64>(_2330d8e50_inf(1LL));
				}
				goto _match_end_4865186864;
				_case_end_4865185632:;
				if (!((_6420_y > 0LL))) { goto _case_end_4865185744; }
				_case_begin_4865185744:;
				{
					if (_2333432db_is_odd_int(_6420_y)) {
						return _6412_x;
					}
					return 0LL;
				}
				goto _match_end_4865186864;
				_case_end_4865185744:;
				_match_end_4865186864:;
			}
		}
		goto _match_end_4865182160;
		_case_end_4865182816:;
		if (!((_2330d8e50_is_inf(_6420_y,0LL)))) { goto _case_end_4865182928; }
		_case_begin_4865182928:;
		{
			{
				if (!((_6412_x == -1LL))) { goto _case_end_4865193680; }
				_case_begin_4865193680:;
				{
					return 1LL;
				}
				goto _match_end_4865192336;
				_case_end_4865193680:;
				if (!(((_23318b640_abs(_6412_x) < 1LL) == _2330d8e50_is_inf(_6420_y,1LL)))) { goto _case_end_4865192912; }
				_case_begin_4865192912:;
				{
					return 0LL;
				}
				goto _match_end_4865192336;
				_case_end_4865192912:;
				_case_begin_4865187200:;
				{
					return static_cast<jule::F64>(_2330d8e50_inf(1LL));
				}
				goto _match_end_4865192336;
				_case_end_4865187200:;
				_match_end_4865192336:;
			}
		}
		goto _match_end_4865182160;
		_case_end_4865182928:;
		if (!((_2330d8e50_is_inf(_6412_x,0LL)))) { goto _case_end_4865183040; }
		_case_begin_4865183040:;
		{
			if (_2330d8e50_is_inf(_6412_x,-1LL)) {
				return static_cast<jule::F64>(_2333432db_pow(static_cast<jule::F64>(jule::div(1LL,_6412_x)),static_cast<jule::F64>((-(_6420_y)))));
			}
			{
				if (!((_6420_y < 0LL))) { goto _case_end_4865195888; }
				_case_begin_4865195888:;
				{
					return 0LL;
				}
				goto _match_end_4865195728;
				_case_end_4865195888:;
				if (!((_6420_y > 0LL))) { goto _case_end_4865194768; }
				_case_begin_4865194768:;
				{
					return static_cast<jule::F64>(_2330d8e50_inf(1LL));
				}
				goto _match_end_4865195728;
				_case_end_4865194768:;
				_match_end_4865195728:;
			}
		}
		goto _match_end_4865182160;
		_case_end_4865183040:;
		if (!((_6420_y == 0.5))) { goto _case_end_4865183152; }
		_case_begin_4865183152:;
		{
			return static_cast<jule::F64>(_23345a568_sqrt(_6412_x));
		}
		goto _match_end_4865182160;
		_case_end_4865183152:;
		if (!((_6420_y == -0.5))) { goto _case_end_4865183264; }
		_case_begin_4865183264:;
		{
			return static_cast<jule::F64>(jule::div(1LL,_23345a568_sqrt(_6412_x)));
		}
		goto _match_end_4865182160;
		_case_end_4865183264:;
		_match_end_4865182160:;
	}
	jule::F64 _10814_yi;
	jule::F64 _10822_yf;
	std::tie(_10814_yi,_10822_yf) = _2331e779a_modf(static_cast<jule::F64>(_23318b640_abs(_6420_y)));
	if ((_10822_yf != 0LL) && (_6412_x < 0LL)) {
		return static_cast<jule::F64>(_2330d8e50_nan());
	}
	if (_10814_yi >= 9223372036854775808LLU) {
		{
			if (!((_6412_x == -1LL))) { goto _case_end_4865205968; }
			_case_begin_4865205968:;
			{
				return 1LL;
			}
			goto _match_end_4865202432;
			_case_end_4865205968:;
			if (!(((_23318b640_abs(_6412_x) < 1LL) == (_6420_y > 0LL)))) { goto _case_end_4865205200; }
			_case_begin_4865205200:;
			{
				return 0LL;
			}
			goto _match_end_4865202432;
			_case_end_4865205200:;
			_case_begin_4865203920:;
			{
				return static_cast<jule::F64>(_2330d8e50_inf(1LL));
			}
			goto _match_end_4865202432;
			_case_end_4865203920:;
			_match_end_4865202432:;
		}
	}
	jule::F64 _12613_a1 = 1LL;
	jule::Int _12713_ae = 0LL;
	if (_10822_yf != 0LL) {
		if (_10822_yf > 0.5) {
			(_10822_yf)--;
			(_10814_yi)++;
		}
		_12613_a1=static_cast<jule::F64>(_233371db9_exp(static_cast<jule::F64>(_10822_yf * _2330e70b2_log(_6412_x))));
	}
	jule::F64 _14214_x1;
	jule::Int _14222_xe;
	std::tie(_14214_x1,_14222_xe) = _2330333b6_frexp(_6412_x);
	jule::I64 _14313_i = static_cast<jule::I64>(_10814_yi);
	for (; _14313_i != 0LL; _14313_i>>=1LL) {
		{
			if ((_14222_xe < -4096LL) || (4096LLU < _14222_xe)) {
				_12713_ae+=_14222_xe;
				goto _iter_end_4865212240;
			}
			if ((_14313_i & 1LL) == 1LL) {
				_12613_a1*=_14214_x1;
				_12713_ae+=_14222_xe;
			}
			_14214_x1*=_14214_x1;
			_14222_xe<<=1LL;
			if (_14214_x1 < 0.5) {
				_14214_x1+=_14214_x1;
				(_14222_xe)--;
			}
		}
	_iter_next_4865212240:;
	}
	_iter_end_4865212240:;
	if (_6420_y < 0LL) {
		_12613_a1=static_cast<jule::F64>(jule::div(1LL,_12613_a1));
		_12713_ae=static_cast<jule::Int>((-(_12713_ae)));
	}
	return static_cast<jule::F64>(_23329d686_ldexp(_12613_a1,_12713_ae));
}



jule::Bool _2333432db_is_odd_int(jule::F64 _17615_x) {
	jule::F64 _17710_xi;
	jule::F64 _17714_xf;
	std::tie(_17710_xi,_17714_xf) = _2331e779a_modf(_17615_x);
	return (_17714_xf == 0LL) && ((static_cast<jule::I64>(_17710_xi) & 1LL) == 1LL);
}



jule::F64 _233371db9_exp(jule::F64 _12212_x) {
	
	
	
	
	
	
	{
		if (!((_2330d8e50_is_nan(_12212_x)) || (_2330d8e50_is_inf(_12212_x,1LL)))) { goto _case_end_4865227680; }
		_case_begin_4865227680:;
		{
			return _12212_x;
		}
		goto _match_end_4865227248;
		_case_end_4865227680:;
		if (!((_2330d8e50_is_inf(_12212_x,-1LL)))) { goto _case_end_4865227776; }
		_case_begin_4865227776:;
		{
			return 0LL;
		}
		goto _match_end_4865227248;
		_case_end_4865227776:;
		if (!((_12212_x > 709.782712893384))) { goto _case_end_4865227872; }
		_case_begin_4865227872:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4865227248;
		_case_end_4865227872:;
		if (!((_12212_x < -745.1332191019411))) { goto _case_end_4865227968; }
		_case_begin_4865227968:;
		{
			return 0LL;
		}
		goto _match_end_4865227248;
		_case_end_4865227968:;
		if (!(((-0.000000003725290298461914 < _12212_x) && (_12212_x < 0.000000003725290298461914)))) { goto _case_end_4865228064; }
		_case_begin_4865228064:;
		{
			return static_cast<jule::F64>(1LL + _12212_x);
		}
		goto _match_end_4865227248;
		_case_end_4865228064:;
		_match_end_4865227248:;
	}
	jule::Int _14613_k = 0LL;
	{
		if (!((_12212_x < 0LL))) { goto _case_end_4865229936; }
		_case_begin_4865229936:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) - 0.5);
		}
		goto _match_end_4865233808;
		_case_end_4865229936:;
		if (!((_12212_x > 0LL))) { goto _case_end_4865233888; }
		_case_begin_4865233888:;
		{
			_14613_k=static_cast<jule::Int>((1.4426950408889634 * _12212_x) + 0.5);
		}
		goto _match_end_4865233808;
		_case_end_4865233888:;
		_match_end_4865233808:;
	}
	jule::F64 _1519_hi = _12212_x - (static_cast<jule::F64>(_14613_k) * 0.6931471803691238);
	jule::F64 _1529_lo = static_cast<jule::F64>(_14613_k) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_233371db9_expmulti(_1519_hi,_1529_lo,_14613_k));
}



jule::F64 _233371db9_exp2(jule::F64 _16013_x) {
	
	
	
	
	{
		if (!((_2330d8e50_is_nan(_16013_x)) || (_2330d8e50_is_inf(_16013_x,1LL)))) { goto _case_end_4865243936; }
		_case_begin_4865243936:;
		{
			return _16013_x;
		}
		goto _match_end_4865243744;
		_case_end_4865243936:;
		if (!((_2330d8e50_is_inf(_16013_x,-1LL)))) { goto _case_end_4865244048; }
		_case_begin_4865244048:;
		{
			return 0LL;
		}
		goto _match_end_4865243744;
		_case_end_4865244048:;
		if (!((_16013_x > 1023.9999999999999))) { goto _case_end_4865244160; }
		_case_begin_4865244160:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4865243744;
		_case_end_4865244160:;
		if (!((_16013_x < -1074LL))) { goto _case_end_4865244272; }
		_case_begin_4865244272:;
		{
			return 0LL;
		}
		goto _match_end_4865243744;
		_case_end_4865244272:;
		_match_end_4865243744:;
	}
	jule::Int _18113_k = 0LL;
	{
		if (!((_16013_x > 0LL))) { goto _case_end_4865242656; }
		_case_begin_4865242656:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x + 0.5);
		}
		goto _match_end_4865248640;
		_case_end_4865242656:;
		if (!((_16013_x < 0LL))) { goto _case_end_4865249168; }
		_case_begin_4865249168:;
		{
			_18113_k=static_cast<jule::Int>(_16013_x - 0.5);
		}
		goto _match_end_4865248640;
		_case_end_4865249168:;
		_match_end_4865248640:;
	}
	jule::F64 _1869_t = _16013_x - static_cast<jule::F64>(_18113_k);
	jule::F64 _1879_hi = _1869_t * 0.6931471803691238;
	jule::F64 _1889_lo = (-(_1869_t)) * 0.00000000019082149292705877;
	return static_cast<jule::F64>(_233371db9_expmulti(_1879_hi,_1889_lo,_18113_k));
}



jule::F64 _233371db9_expmulti(jule::F64 _19513_hi,jule::F64 _19522_lo,jule::Int _19531_k) {
	
	
	
	
	
	jule::F64 _2029_r = _19513_hi - _19522_lo;
	jule::F64 _2039_t = _2029_r * _2029_r;
	jule::F64 _2049_c = _2029_r - (_2039_t * (0.16666666666666666 + (_2039_t * (-0.0027777777777015593 + (_2039_t * (0.00006613756321437934 + (_2039_t * (-0.0000016533902205465252 + (_2039_t * 0.000000041381367970572385)))))))));
	jule::F64 _2059_y = 1LL - ((_19522_lo - jule::div(_2029_r * _2049_c,2LL - _2049_c)) - _19513_hi);
	return static_cast<jule::F64>(_23329d686_ldexp(_2059_y,_19531_k));
}



jule::F64 _23339d8da_log1p(jule::F64 _12614_x) {
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	{
		if (!((_12614_x < -1LL) || (_2330d8e50_is_nan(_12614_x)))) { goto _case_end_4865274016; }
		_case_begin_4865274016:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865273120;
		_case_end_4865274016:;
		if (!((_12614_x == -1LL))) { goto _case_end_4865274112; }
		_case_begin_4865274112:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4865273120;
		_case_end_4865274112:;
		if (!((_2330d8e50_is_inf(_12614_x,1LL)))) { goto _case_end_4865280848; }
		_case_begin_4865280848:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4865273120;
		_case_end_4865280848:;
		_match_end_4865273120:;
	}
	jule::F64 _1529_absx = _23318b640_abs(_12614_x);
	jule::F64 _15413_f = 0LL;
	jule::U64 _15513_iu = 0LLU;
	jule::Int _15613_k = 1LL;
	if (_1529_absx < 0.41421356237309503) {
		if (_1529_absx < 0.000000001862645149230957) {
			if (_1529_absx < 0.00000000000000005551115123125783) {
				return _12614_x;
			}
			return static_cast<jule::F64>(_12614_x - ((_12614_x * _12614_x) * 0.5));
		}
		if (_12614_x > -0.2928932188134525) {
			_15613_k=0LL;
			_15413_f=_12614_x;
			_15513_iu=1LL;
		}
	}
	jule::F64 _17113_c = 0LL;
	if (_15613_k != 0LL) {
		jule::F64 _17317_u = 0LL;
		if (_1529_absx < 9007199254740992LLU) {
			_17317_u=static_cast<jule::F64>(1LL + _12614_x);
			_15513_iu=static_cast<jule::U64>(_23300ecdd_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			if (_15613_k > 0LL) {
				_17113_c=static_cast<jule::F64>(1LL - (_17317_u - _12614_x));
			} else {
				_17113_c=static_cast<jule::F64>(_12614_x - (_17317_u - 1LL));
			}
			_17113_c = jule::div(_17113_c,_17317_u);
		} else {
			_17317_u=_12614_x;
			_15513_iu=static_cast<jule::U64>(_23300ecdd_f64_bits(_17317_u));
			_15613_k=static_cast<jule::Int>((_15513_iu >> 52LL) - 1023LL);
			_17113_c=0LL;
		}
		_15513_iu&=4503599627370495LL;
		if (_15513_iu < 1865452045155277LL) {
			_17317_u=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4607182418800017408LL)));
		} else {
			(_15613_k)++;
			_17317_u=static_cast<jule::F64>(_23300ecdd_f64_from_bits(static_cast<jule::U64>(_15513_iu | 4602678819172646912LL)));
			_15513_iu=static_cast<jule::U64>((4503599627370496LL - _15513_iu) >> 2LL);
		}
		_15413_f=static_cast<jule::F64>(_17317_u - 1LL);
	}
	jule::F64 _2029_hfsq = (0.5 * _15413_f) * _15413_f;
	jule::F64 _20313_s = 0LL;
	jule::F64 _20413_R = 0LL;
	jule::F64 _20513_z = 0LL;
	if (_15513_iu == 0LL) {
		if (_15413_f == 0LL) {
			if (_15613_k == 0LL) {
				return 0LL;
			}
			_17113_c+=static_cast<jule::F64>(static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877);
			return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) + _17113_c);
		}
		_20413_R=static_cast<jule::F64>(_2029_hfsq * (1LL - (0.6666666666666666 * _15413_f)));
		if (_15613_k == 0LL) {
			return static_cast<jule::F64>(_15413_f - _20413_R);
		}
		return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_20413_R - ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c)) - _15413_f));
	}
	_20313_s=static_cast<jule::F64>(jule::div(_15413_f,2LL + _15413_f));
	_20513_z=static_cast<jule::F64>(_20313_s * _20313_s);
	_20413_R=static_cast<jule::F64>(_20513_z * (0.6666666666666735 + (_20513_z * (0.3999999999940942 + (_20513_z * (0.2857142874366239 + (_20513_z * (0.22222198432149784 + (_20513_z * (0.1818357216161805 + (_20513_z * (0.15313837699209373 + (_20513_z * 0.14798198605116586)))))))))))));
	if (_15613_k == 0LL) {
		return static_cast<jule::F64>(_15413_f - (_2029_hfsq - (_20313_s * (_2029_hfsq + _20413_R))));
	}
	return static_cast<jule::F64>((static_cast<jule::F64>(_15613_k) * 0.6931471803691238) - ((_2029_hfsq - ((_20313_s * (_2029_hfsq + _20413_R)) + ((static_cast<jule::F64>(_15613_k) * 0.00000000019082149292705877) + _17113_c))) - _15413_f));
}



std::tuple<jule::F64,jule::F64> _2333c338d_stirling(jule::F64 _13113_x) {
	if (_13113_x > 200LL) {
		return std::make_tuple(static_cast<jule::F64>(_2330d8e50_inf(1LL)),1LL);
	}
	
	
	jule::F64 _13713_w = jule::div(1LL,_13113_x);
	_13713_w=static_cast<jule::F64>(1LL + (_13713_w * ((((((((_2333c338d__GAM_S[0LL] * _13713_w) + _2333c338d__GAM_S[1LL]) * _13713_w) + _2333c338d__GAM_S[2LL]) * _13713_w) + _2333c338d__GAM_S[3LL]) * _13713_w) + _2333c338d__GAM_S[4LL])));
	jule::F64 _13913_y1 = _233371db9_exp(_13113_x);
	jule::F64 _14013_y2 = 1LL;
	if (_13113_x > 143.01608) {
		jule::F64 _14213_v = _2333432db_pow(_13113_x,static_cast<jule::F64>((0.5 * _13113_x) - 0.25));
		std::tie(_13913_y1,_14013_y2) = std::make_tuple(_14213_v,static_cast<jule::F64>(jule::div(_14213_v,_13913_y1)));
	} else {
		_13913_y1=static_cast<jule::F64>(jule::div(_2333432db_pow(_13113_x,static_cast<jule::F64>(_13113_x - 0.5)),_13913_y1));
	}
	return std::make_tuple(_13913_y1,static_cast<jule::F64>((2.5066282746310007 * _13713_w) * _14013_y2));
}



jule::F64 _2333c338d_gamma(jule::F64 _15918_x) {
	
	{
		if (!((_2333c338d_is_neg_int(_15918_x)) || (_2330d8e50_is_inf(_15918_x,-1LL)) || (_2330d8e50_is_nan(_15918_x)))) { goto _case_end_4865339872; }
		_case_begin_4865339872:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865339696;
		_case_end_4865339872:;
		if (!((_2330d8e50_is_inf(_15918_x,1LL)))) { goto _case_end_4865339984; }
		_case_begin_4865339984:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4865339696;
		_case_end_4865339984:;
		if (!((_15918_x == 0LL))) { goto _case_end_4865340096; }
		_case_begin_4865340096:;
		{
			if (_2332b9e11_signbit(_15918_x)) {
				return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
			}
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4865339696;
		_case_end_4865340096:;
		_match_end_4865339696:;
	}
	jule::F64 _17313_q = _23318b640_abs(_15918_x);
	jule::F64 _17413_p = _2330942b2_floor(_17313_q);
	if (_17313_q > 33LL) {
		if (_15918_x >= 0LL) {
			jule::F64 _17718_y1;
			jule::F64 _17722_y2;
			std::tie(_17718_y1,_17722_y2) = _2333c338d_stirling(_15918_x);
			return static_cast<jule::F64>(_17718_y1 * _17722_y2);
		}
		jule::Int _18317_signgam = 1LL;
		jule::I64 _18413_ip = static_cast<jule::I64>(_17413_p);
		if ((_18413_ip & 1LL) == 0LL) {
			_18317_signgam=-1LL;
		}
		jule::F64 _18817_z = _17313_q - _17413_p;
		if (_18817_z > 0.5) {
			_17413_p=static_cast<jule::F64>(_17413_p + 1LL);
			_18817_z=static_cast<jule::F64>(_17313_q - _17413_p);
		}
		_18817_z=static_cast<jule::F64>(_17313_q * _2330179a5_sin(static_cast<jule::F64>(3.141592653589793 * _18817_z)));
		if (_18817_z == 0LL) {
			return static_cast<jule::F64>(_2330d8e50_inf(_18317_signgam));
		}
		jule::F64 _19714_sq1;
		jule::F64 _19719_sq2;
		std::tie(_19714_sq1,_19719_sq2) = _2333c338d_stirling(_17313_q);
		jule::F64 _19813_absz = _23318b640_abs(_18817_z);
		jule::F64 _19913_d = (_19813_absz * _19714_sq1) * _19719_sq2;
		if (_2330d8e50_is_inf(_19913_d,0LL)) {
			_18817_z=static_cast<jule::F64>(jule::div(jule::div(jule::div(3.141592653589793,_19813_absz),_19714_sq1),_19719_sq2));
		} else {
			_18817_z=static_cast<jule::F64>(jule::div(3.141592653589793,_19913_d));
		}
		return static_cast<jule::F64>(static_cast<jule::F64>(_18317_signgam) * _18817_z);
	}
	jule::F64 _20913_z = 1LL;
	while (_15918_x >= 3LL) {
		{
			_15918_x=static_cast<jule::F64>(_15918_x - 1LL);
			_20913_z=static_cast<jule::F64>(_20913_z * _15918_x);
		}
	_iter_next_4865347072:;
	}
	_iter_end_4865347072:;
	while (_15918_x < 0LL) {
		{
			if (_15918_x > -0.000000001) {
				goto _julec_label_small;
			}
			_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
			_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
		}
	_iter_next_4865363648:;
	}
	_iter_end_4865363648:;
	while (_15918_x < 2LL) {
		{
			if (_15918_x < 0.000000001) {
				goto _julec_label_small;
			}
			_20913_z=static_cast<jule::F64>(jule::div(_20913_z,_15918_x));
			_15918_x=static_cast<jule::F64>(_15918_x + 1LL);
		}
	_iter_next_4865344064:;
	}
	_iter_end_4865344064:;
	if (_15918_x == 2LL) {
		return _20913_z;
	}
	_15918_x=static_cast<jule::F64>(_15918_x - 2LL);
	_17413_p=static_cast<jule::F64>((((((((((((_15918_x * _2333c338d__GAM_P[0LL]) + _2333c338d__GAM_P[1LL]) * _15918_x) + _2333c338d__GAM_P[2LL]) * _15918_x) + _2333c338d__GAM_P[3LL]) * _15918_x) + _2333c338d__GAM_P[4LL]) * _15918_x) + _2333c338d__GAM_P[5LL]) * _15918_x) + _2333c338d__GAM_P[6LL]);
	_17313_q=static_cast<jule::F64>((((((((((((((_15918_x * _2333c338d__GAM_Q[0LL]) + _2333c338d__GAM_Q[1LL]) * _15918_x) + _2333c338d__GAM_Q[2LL]) * _15918_x) + _2333c338d__GAM_Q[3LL]) * _15918_x) + _2333c338d__GAM_Q[4LL]) * _15918_x) + _2333c338d__GAM_Q[5LL]) * _15918_x) + _2333c338d__GAM_Q[6LL]) * _15918_x) + _2333c338d__GAM_Q[7LL]);
	return static_cast<jule::F64>(jule::div(_20913_z * _17413_p,_17313_q));
	_julec_label_small:;
	if (_15918_x == 0LL) {
		return static_cast<jule::F64>(_2330d8e50_inf(1LL));
	}
	return static_cast<jule::F64>(jule::div(_20913_z,(1LL + (0.5772156649015329 * _15918_x)) * _15918_x));
}



jule::Bool _2333c338d_is_neg_int(jule::F64 _24515_x) {
	if (_24515_x < 0LL) {
		jule::F64 _24717_xf;
		std::tie(std::ignore,_24717_xf) = _2331e779a_modf(_24515_x);
		return _24717_xf == 0LL;
	}
	return false;
}



jule::F64 _233439e0a_erfinv(jule::F64 _10519_x) {
	if ((_2330d8e50_is_nan(_10519_x) || (_10519_x <= -1LL)) || (_10519_x >= 1LL)) {
		if ((_10519_x == -1LL) || (_10519_x == 1LL)) {
			return static_cast<jule::F64>(_2330d8e50_inf(static_cast<jule::Int>(_10519_x)));
		}
		return static_cast<jule::F64>(_2330d8e50_nan());
	}
	jule::Bool _11413_sign = false;
	if (_10519_x < 0LL) {
		_10519_x=static_cast<jule::F64>((-(_10519_x)));
		_11413_sign=true;
	}
	jule::F64 _12013_ans = 0LL;
	if (_10519_x <= 0.85) {
		jule::F64 _12213_r = 0.180625 - ((0.25 * _10519_x) * _10519_x);
		jule::F64 _12313_z1 = (((((((((((((887.0940696254552 * _12213_r) + 11819.493347062295) * _12213_r) + 23782.041382114385) * _12213_r) + 16235.862515167575) * _12213_r) + 4854.886889384388) * _12213_r) + 697.062665343896) * _12213_r) + 47.07268811238398) * _12213_r) + 1.1975323115670913;
		jule::F64 _12413_z2 = (((((((((((((5226.495278852854 * _12213_r) + 28729.085735721943) * _12213_r) + 39307.89580009271) * _12213_r) + 21213.794301586597) * _12213_r) + 5394.196021424751) * _12213_r) + 687.1870074920579) * _12213_r) + 42.31333070160091) * _12213_r) + 1LL;
		_12013_ans=static_cast<jule::F64>(jule::div(_10519_x * _12313_z1,_12413_z2));
	} else {
		jule::F64 _12717_z1 = 0LL;
		jule::F64 _12817_z2 = 0LL;
		jule::F64 _12917_r = _23345a568_sqrt(static_cast<jule::F64>(0.6931471805599453 - _2330e70b2_log(static_cast<jule::F64>(1LL - _10519_x))));
		if (_12917_r <= 5LL) {
			_12917_r-=1.6;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.0007745450142783414 * _12917_r) + 0.022723844989269184) * _12917_r) + 0.2417807251774506) * _12917_r) + 1.2704582524523684) * _12917_r) + 3.6478483247632045) * _12917_r) + 5.769497221460691) * _12917_r) + 4.630337846156546) * _12917_r) + 1.4234371107496835);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000014859850019840355 * _12917_r) + 0.0007744145906515771) * _12917_r) + 0.021494160384252878) * _12917_r) + 0.2094506521051275) * _12917_r) + 0.9754783200178743) * _12917_r) + 2.3707661626024534) * _12917_r) + 2.9036514445419948) * _12917_r) + 1.4142135623730951);
		} else {
			_12917_r-=5LL;
			_12717_z1=static_cast<jule::F64>((((((((((((((0.00000020103343992922881 * _12917_r) + 0.000027115555687434876) * _12917_r) + 0.0012426609473880784) * _12917_r) + 0.026532189526576124) * _12917_r) + 0.29656057182850487) * _12917_r) + 1.7848265399172913) * _12917_r) + 5.463784911164114) * _12917_r) + 6.657904643501103);
			_12817_z2=static_cast<jule::F64>((((((((((((((0.0000000000000028910246058729655 * _12917_r) + 0.0000002010321207683943) * _12917_r) + 0.000026110884050805935) * _12917_r) + 0.0011128009970788597) * _12917_r) + 0.02103693768272069) * _12917_r) + 0.19364809469506591) * _12917_r) + 0.8482908416595164) * _12917_r) + 1.4142135623730951);
		}
		_12013_ans=static_cast<jule::F64>(jule::div(_12717_z1,_12817_z2));
	}
	if (_11413_sign) {
		return static_cast<jule::F64>((-(_12013_ans)));
	}
	return _12013_ans;
}



jule::F64 _233439e0a_erfcinv(jule::F64 _15516_x) {
	return static_cast<jule::F64>(_233439e0a_erfinv(static_cast<jule::F64>(1LL - _15516_x)));
}



jule::F64 _233459c3d_erf(jule::F64 _21716_x) {
	
	
	{
		if (!((_2330d8e50_is_nan(_21716_x)))) { goto _case_end_4865446144; }
		_case_begin_4865446144:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865445840;
		_case_end_4865446144:;
		if (!((_2330d8e50_is_inf(_21716_x,1LL)))) { goto _case_end_4865446256; }
		_case_begin_4865446256:;
		{
			return 1LL;
		}
		goto _match_end_4865445840;
		_case_end_4865446256:;
		if (!((_2330d8e50_is_inf(_21716_x,-1LL)))) { goto _case_end_4865446352; }
		_case_begin_4865446352:;
		{
			return -1LL;
		}
		goto _match_end_4865445840;
		_case_end_4865446352:;
		_match_end_4865445840:;
	}
	jule::Bool _22913_sign = false;
	if (_21716_x < 0LL) {
		_21716_x=static_cast<jule::F64>((-(_21716_x)));
		_22913_sign=true;
	}
	if (_21716_x < 0.84375) {
		jule::F64 _23517_temp = 0LL;
		if (_21716_x < 0.000000003725290298461914) {
			if (_21716_x < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002848094538889218) {
				_23517_temp=static_cast<jule::F64>(0.125 * ((8LL * _21716_x) + (1.0270333367641007 * _21716_x)));
			} else {
				_23517_temp=static_cast<jule::F64>(_21716_x + (0.1283791670955126 * _21716_x));
			}
		} else {
			jule::F64 _24317_z = _21716_x * _21716_x;
			jule::F64 _24417_r = 0.12837916709551256 + (_24317_z * (-0.3250421072470015 + (_24317_z * (-0.02848174957559851 + (_24317_z * (-0.005770270296489442 + (_24317_z * -0.000023763016656650163)))))));
			jule::F64 _24517_s = 1LL + (_24317_z * (0.39791722395915535 + (_24317_z * (0.0650222499887673 + (_24317_z * (0.005081306281875766 + (_24317_z * (0.00013249473800432164 + (_24317_z * -0.000003960228278775368)))))))));
			jule::F64 _24617_y = jule::div(_24417_r,_24517_s);
			_23517_temp=static_cast<jule::F64>(_21716_x + (_21716_x * _24617_y));
		}
		if (_22913_sign) {
			return static_cast<jule::F64>((-(_23517_temp)));
		}
		return _23517_temp;
	}
	if (_21716_x < 1.25) {
		jule::F64 _25513_s = _21716_x - 1LL;
		jule::F64 _25613_P = -0.0023621185607526594 + (_25513_s * (0.41485611868374833 + (_25513_s * (-0.3722078760357013 + (_25513_s * (0.31834661990116175 + (_25513_s * (-0.11089469428239668 + (_25513_s * (0.035478304325618236 + (_25513_s * -0.002166375594868791)))))))))));
		jule::F64 _25713_Q = 1LL + (_25513_s * (0.10642088040084423 + (_25513_s * (0.540397917702171 + (_25513_s * (0.07182865441419627 + (_25513_s * (0.12617121980876164 + (_25513_s * (0.01363708391202905 + (_25513_s * 0.011984499846799107)))))))))));
		if (_22913_sign) {
			return static_cast<jule::F64>(-0.8450629115104675 - jule::div(_25613_P,_25713_Q));
		}
		return static_cast<jule::F64>(0.8450629115104675 + jule::div(_25613_P,_25713_Q));
	}
	if (_21716_x >= 6LL) {
		if (_22913_sign) {
			return -1LL;
		}
		return 1LL;
	}
	jule::F64 _2699_s = jule::div(1LL,_21716_x * _21716_x);
	jule::F64 _27013_R = 0LL;
	jule::F64 _27113_S = 0LL;
	if (_21716_x < 2.857142857142857) {
		_27013_R=static_cast<jule::F64>(-0.009864944034847148 + (_2699_s * (-0.6938585727071818 + (_2699_s * (-10.558626225323291 + (_2699_s * (-62.375332450326006 + (_2699_s * (-162.39666946257347 + (_2699_s * (-184.60509290671104 + (_2699_s * (-81.2874355063066 + (_2699_s * -9.814329344169145))))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (19.651271667439257 + (_2699_s * (137.65775414351904 + (_2699_s * (434.56587747522923 + (_2699_s * (645.3872717332679 + (_2699_s * (429.00814002756783 + (_2699_s * (108.63500554177944 + (_2699_s * (6.570249770319282 + (_2699_s * -0.0604244152148581))))))))))))))));
	} else {
		_27013_R=static_cast<jule::F64>(-0.0098649429247001 + (_2699_s * (-0.799283237680523 + (_2699_s * (-17.757954917754752 + (_2699_s * (-160.63638485582192 + (_2699_s * (-637.5664433683896 + (_2699_s * (-1025.0951316110772 + (_2699_s * -483.5191916086514))))))))))));
		_27113_S=static_cast<jule::F64>(1LL + (_2699_s * (30.33806074348246 + (_2699_s * (325.7925129965739 + (_2699_s * (1536.729586084437 + (_2699_s * (3199.8582195085955 + (_2699_s * (2553.0504064331644 + (_2699_s * (474.52854120695537 + (_2699_s * -22.44095244658582))))))))))))));
	}
	jule::F64 _2799_z = _23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_21716_x) & 18446744069414584320LLU));
	jule::F64 _2809_r = _233371db9_exp(static_cast<jule::F64>(((-(_2799_z)) * _2799_z) - 0.5625)) * _233371db9_exp(static_cast<jule::F64>(((_2799_z - _21716_x) * (_2799_z + _21716_x)) + jule::div(_27013_R,_27113_S)));
	if (_22913_sign) {
		return static_cast<jule::F64>(jule::div(_2809_r,_21716_x) - 1LL);
	}
	return static_cast<jule::F64>(1LL - jule::div(_2809_r,_21716_x));
}



jule::F64 _233459c3d_erfc(jule::F64 _29317_x) {
	
	{
		if (!((_2330d8e50_is_nan(_29317_x)))) { goto _case_end_4865496672; }
		_case_begin_4865496672:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865496496;
		_case_end_4865496672:;
		if (!((_2330d8e50_is_inf(_29317_x,1LL)))) { goto _case_end_4865496784; }
		_case_begin_4865496784:;
		{
			return 0LL;
		}
		goto _match_end_4865496496;
		_case_end_4865496784:;
		if (!((_2330d8e50_is_inf(_29317_x,-1LL)))) { goto _case_end_4865496912; }
		_case_begin_4865496912:;
		{
			return 2LL;
		}
		goto _match_end_4865496496;
		_case_end_4865496912:;
		_match_end_4865496496:;
	}
	jule::Bool _30413_sign = false;
	if (_29317_x < 0LL) {
		_29317_x=static_cast<jule::F64>((-(_29317_x)));
		_30413_sign=true;
	}
	if (_29317_x < 0.84375) {
		jule::F64 _31017_temp = 0LL;
		if (_29317_x < 0.000000000000000013877787807814457) {
			_31017_temp=_29317_x;
		} else {
			jule::F64 _31417_z = _29317_x * _29317_x;
			jule::F64 _31517_r = 0.12837916709551256 + (_31417_z * (-0.3250421072470015 + (_31417_z * (-0.02848174957559851 + (_31417_z * (-0.005770270296489442 + (_31417_z * -0.000023763016656650163)))))));
			jule::F64 _31617_s = 1LL + (_31417_z * (0.39791722395915535 + (_31417_z * (0.0650222499887673 + (_31417_z * (0.005081306281875766 + (_31417_z * (0.00013249473800432164 + (_31417_z * -0.000003960228278775368)))))))));
			jule::F64 _31717_y = jule::div(_31517_r,_31617_s);
			if (_29317_x < 0.25) {
				_31017_temp=static_cast<jule::F64>(_29317_x + (_29317_x * _31717_y));
			} else {
				_31017_temp=static_cast<jule::F64>(0.5 + ((_29317_x * _31717_y) + (_29317_x - 0.5)));
			}
		}
		if (_30413_sign) {
			return static_cast<jule::F64>(1LL + _31017_temp);
		}
		return static_cast<jule::F64>(1LL - _31017_temp);
	}
	if (_29317_x < 1.25) {
		jule::F64 _33013_s = _29317_x - 1LL;
		jule::F64 _33113_P = -0.0023621185607526594 + (_33013_s * (0.41485611868374833 + (_33013_s * (-0.3722078760357013 + (_33013_s * (0.31834661990116175 + (_33013_s * (-0.11089469428239668 + (_33013_s * (0.035478304325618236 + (_33013_s * -0.002166375594868791)))))))))));
		jule::F64 _33213_Q = 1LL + (_33013_s * (0.10642088040084423 + (_33013_s * (0.540397917702171 + (_33013_s * (0.07182865441419627 + (_33013_s * (0.12617121980876164 + (_33013_s * (0.01363708391202905 + (_33013_s * 0.011984499846799107)))))))))));
		if (_30413_sign) {
			return static_cast<jule::F64>(1.8450629115104675 + jule::div(_33113_P,_33213_Q));
		}
		return static_cast<jule::F64>(0.15493708848953247 - jule::div(_33113_P,_33213_Q));
	}
	if (_29317_x < 28LL) {
		jule::F64 _34013_s = jule::div(1LL,_29317_x * _29317_x);
		jule::F64 _34117_R = 0LL;
		jule::F64 _34217_S = 0LL;
		if (_29317_x < 2.857142857142857) {
			_34117_R=static_cast<jule::F64>(-0.009864944034847148 + (_34013_s * (-0.6938585727071818 + (_34013_s * (-10.558626225323291 + (_34013_s * (-62.375332450326006 + (_34013_s * (-162.39666946257347 + (_34013_s * (-184.60509290671104 + (_34013_s * (-81.2874355063066 + (_34013_s * -9.814329344169145))))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (19.651271667439257 + (_34013_s * (137.65775414351904 + (_34013_s * (434.56587747522923 + (_34013_s * (645.3872717332679 + (_34013_s * (429.00814002756783 + (_34013_s * (108.63500554177944 + (_34013_s * (6.570249770319282 + (_34013_s * -0.0604244152148581))))))))))))))));
		} else {
			if (_30413_sign && (_29317_x > 6LL)) {
				return 2LL;
			}
			_34117_R=static_cast<jule::F64>(-0.0098649429247001 + (_34013_s * (-0.799283237680523 + (_34013_s * (-17.757954917754752 + (_34013_s * (-160.63638485582192 + (_34013_s * (-637.5664433683896 + (_34013_s * (-1025.0951316110772 + (_34013_s * -483.5191916086514))))))))))));
			_34217_S=static_cast<jule::F64>(1LL + (_34013_s * (30.33806074348246 + (_34013_s * (325.7925129965739 + (_34013_s * (1536.729586084437 + (_34013_s * (3199.8582195085955 + (_34013_s * (2553.0504064331644 + (_34013_s * (474.52854120695537 + (_34013_s * -22.44095244658582))))))))))))));
		}
		jule::F64 _35313_z = _23300ecdd_f64_from_bits(static_cast<jule::U64>(_23300ecdd_f64_bits(_29317_x) & 18446744069414584320LLU));
		jule::F64 _35413_r = _233371db9_exp(static_cast<jule::F64>(((-(_35313_z)) * _35313_z) - 0.5625)) * _233371db9_exp(static_cast<jule::F64>(((_35313_z - _29317_x) * (_35313_z + _29317_x)) + jule::div(_34117_R,_34217_S)));
		if (_30413_sign) {
			return static_cast<jule::F64>(2LL - jule::div(_35413_r,_29317_x));
		}
		return static_cast<jule::F64>(jule::div(_35413_r,_29317_x));
	}
	if (_30413_sign) {
		return 2LL;
	}
	return 0LL;
}



jule::F64 _23349c2be_pow10(jule::Int _6114_n) {
	if ((0LL <= _6114_n) && (_6114_n <= 308LL)) {
		return static_cast<jule::F64>(_23349c2be_POW10_POSTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>(_6114_n),32LL))] * _23349c2be_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>(_6114_n),32LL))]);
	}
	if ((-323LL <= _6114_n) && (_6114_n <= 0LL)) {
		return static_cast<jule::F64>(jule::div(_23349c2be_POW10_NEGTAB32[static_cast<jule::Int>(jule::div(static_cast<jule::Uint>((-(_6114_n))),32LL))],_23349c2be_POW10_TAB[static_cast<jule::Int>(jule::mod(static_cast<jule::Uint>((-(_6114_n))),32LL))]));
	}
	if (_6114_n > 0LL) {
		return static_cast<jule::F64>(_2330d8e50_inf(1LL));
	}
	return 0LL;
}



jule::F64 _23345a568_sqrt(jule::F64 _12313_x) {
	{
		if (!((_12313_x == 0LL) || (_2330d8e50_is_nan(_12313_x)) || (_2330d8e50_is_inf(_12313_x,1LL)))) { goto _case_end_4865552096; }
		_case_begin_4865552096:;
		{
			return _12313_x;
		}
		goto _match_end_4865550720;
		_case_end_4865552096:;
		if (!((_12313_x < 0LL))) { goto _case_end_4865552192; }
		_case_begin_4865552192:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865550720;
		_case_end_4865552192:;
		_match_end_4865550720:;
	}
	jule::U64 _13113_ix = _23300ecdd_f64_bits(_12313_x);
	jule::Int _13313_exp = static_cast<jule::Int>((_13113_ix >> 52LL) & 2047LL);
	if (_13313_exp == 0LL) {
		while ((_13113_ix & 4503599627370496LLU) == 0LL) {
			{
				_13113_ix<<=1LL;
				(_13313_exp)--;
			}
		_iter_next_4864414832:;
		}
		_iter_end_4864414832:;
		(_13313_exp)++;
	}
	_13313_exp-=1023LL;
	_13113_ix=static_cast<jule::U64>(_13113_ix & 9227875636482146303LLU);
	_13113_ix|=4503599627370496LLU;
	if ((_13313_exp & 1LL) == 1LL) {
		_13113_ix<<=1LL;
	}
	_13313_exp>>=1LL;
	_13113_ix<<=1LL;
	jule::U64 _15013_q = 0LLU;
	jule::U64 _15113_s = 0LLU;
	jule::U64 _15213_r = static_cast<jule::U64>(9007199254740992LLU);
	while (_15213_r != 0LL) {
		{
			jule::U64 _15413_t = _15113_s + _15213_r;
			if (_15413_t <= _13113_ix) {
				_15113_s=static_cast<jule::U64>(_15413_t + _15213_r);
				_13113_ix-=_15413_t;
				_15013_q+=_15213_r;
			}
			_13113_ix<<=1LL;
			_15213_r>>=1LL;
		}
	_iter_next_4865563040:;
	}
	_iter_end_4865563040:;
	if (_13113_ix != 0LL) {
		_15013_q+=static_cast<jule::U64>(_15013_q & 1LL);
	}
	_13113_ix=static_cast<jule::U64>((_15013_q >> 1LL) + (static_cast<jule::U64>((_13313_exp - 1LL) + 1023LL) << 52LL));
	return static_cast<jule::F64>(_23300ecdd_f64_from_bits(_13113_ix));
}



jule::F64 _2334ba056_logb(jule::F64 _4413_x) {
	{
		if (!((_4413_x == 0LL))) { goto _case_end_4865570624; }
		_case_begin_4865570624:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
		}
		goto _match_end_4865569648;
		_case_end_4865570624:;
		if (!((_2330d8e50_is_inf(_4413_x,0LL)))) { goto _case_end_4865570720; }
		_case_begin_4865570720:;
		{
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		goto _match_end_4865569648;
		_case_end_4865570720:;
		if (!((_2330d8e50_is_nan(_4413_x)))) { goto _case_end_4865570816; }
		_case_begin_4865570816:;
		{
			return _4413_x;
		}
		goto _match_end_4865569648;
		_case_end_4865570816:;
		_match_end_4865569648:;
	}
	return static_cast<jule::F64>(_2334ba056__ilogb(_4413_x));
}



jule::Int _2334ba056_ilogb(jule::F64 _6314_x) {
	{
		if (!((_6314_x == 0LL))) { goto _case_end_4865575008; }
		_case_begin_4865575008:;
		{
			return -2147483648LL;
		}
		goto _match_end_4865571392;
		_case_end_4865575008:;
		if (!((_2330d8e50_is_nan(_6314_x)))) { goto _case_end_4865575104; }
		_case_begin_4865575104:;
		{
			return 2147483647LL;
		}
		goto _match_end_4865571392;
		_case_end_4865575104:;
		if (!((_2330d8e50_is_inf(_6314_x,0LL)))) { goto _case_end_4865575216; }
		_case_begin_4865575216:;
		{
			return 2147483647LL;
		}
		goto _match_end_4865571392;
		_case_end_4865575216:;
		_match_end_4865571392:;
	}
	return static_cast<jule::Int>(_2334ba056__ilogb(_6314_x));
}



jule::Int _2334ba056__ilogb(jule::F64 _7715_x) {
	jule::Int _7813_exp = 0LL;
	std::tie(_7715_x,_7813_exp) = _2330d8e50_normalize(_7715_x);
	return static_cast<jule::Int>((static_cast<jule::Int>((_23300ecdd_f64_bits(_7715_x) >> 52LL) & 2047LL) - 1023LL) + _7813_exp);
}



jule::F64 _2334d0973_jn(jule::Int _8415_n,jule::F64 _8427_x) {
	
	
	{
		if (!((_2330d8e50_is_nan(_8427_x)))) { goto _case_end_4865584960; }
		_case_begin_4865584960:;
		{
			return _8427_x;
		}
		goto _match_end_4865584720;
		_case_end_4865584960:;
		if (!((_2330d8e50_is_inf(_8427_x,0LL)))) { goto _case_end_4865585056; }
		_case_begin_4865585056:;
		{
			return 0LL;
		}
		goto _match_end_4865584720;
		_case_end_4865585056:;
		_match_end_4865584720:;
	}
	if (_8415_n == 0LL) {
		return static_cast<jule::F64>(_23323e4c3_j0(_8427_x));
	}
	if (_8427_x == 0LL) {
		return 0LL;
	}
	if (_8415_n < 0LL) {
		std::tie(_8415_n,_8427_x) = std::make_tuple(static_cast<jule::Int>((-(_8415_n))),static_cast<jule::F64>((-(_8427_x))));
	}
	if (_8415_n == 1LL) {
		return static_cast<jule::F64>(_233133cd0_j1(_8427_x));
	}
	jule::Bool _10913_sign = false;
	if (_8427_x < 0LL) {
		_8427_x=static_cast<jule::F64>((-(_8427_x)));
		if ((_8415_n & 1LL) == 1LL) {
			_10913_sign=true;
		}
	}
	jule::F64 _11613_b = 0LL;
	if (static_cast<jule::F64>(_8415_n) <= _8427_x) {
		if (_8427_x >= 5967269506265907200LL) {
			jule::F64 _13321_temp = 0LL;
			jule::F64 _13418_s;
			jule::F64 _13421_c;
			std::tie(_13418_s,_13421_c) = _2330c1aa3_sincos(_8427_x);
			{
				auto _match_expr{ _8415_n & 3LL };
				if (!((0LL) == _match_expr)) { goto _case_end_4865599264; }
				_case_begin_4865599264:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c + _13418_s);
				}
				goto _match_end_4865599104;
				_case_end_4865599264:;
				if (!((1LL) == _match_expr)) { goto _case_end_4865599392; }
				_case_begin_4865599392:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) + _13418_s);
				}
				goto _match_end_4865599104;
				_case_end_4865599392:;
				if (!((2LL) == _match_expr)) { goto _case_end_4865599488; }
				_case_begin_4865599488:;
				{
					_13321_temp=static_cast<jule::F64>((-(_13421_c)) - _13418_s);
				}
				goto _match_end_4865599104;
				_case_end_4865599488:;
				if (!((3LL) == _match_expr)) { goto _case_end_4865599584; }
				_case_begin_4865599584:;
				{
					_13321_temp=static_cast<jule::F64>(_13421_c - _13418_s);
				}
				goto _match_end_4865599104;
				_case_end_4865599584:;
				_match_end_4865599104:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _13321_temp,_23345a568_sqrt(_8427_x)));
		} else {
			_11613_b=static_cast<jule::F64>(_233133cd0_j1(_8427_x));
			jule::Int _14422_i = 1LL;
			jule::F64 _14429_a = _23323e4c3_j0(_8427_x);
			std::tie(_14422_i,_14429_a) = std::make_tuple(1LL,_23323e4c3_j0(_8427_x));
			for (; _14422_i < _8415_n; (_14422_i)++) {
				{
					std::tie(_14429_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>((_11613_b * jule::div(static_cast<jule::F64>(_14422_i + _14422_i),_8427_x)) - _14429_a));
				}
			_iter_next_4865600448:;
			}
			_iter_end_4865600448:;
		}
	} else {
		if (_8427_x < 0.000000001862645149230957) {
			if (_8415_n > 33LL) {
				_11613_b=0LL;
			} else {
				jule::F64 _15721_temp = _8427_x * 0.5;
				_11613_b=_15721_temp;
				jule::F64 _15925_a = 1LL;
				jule::Int _16025_i = 2LL;
				for (; _16025_i <= _8415_n; (_16025_i)++) {
					{
						_15925_a*=static_cast<jule::F64>(_16025_i);
						_11613_b*=_15721_temp;
					}
				_iter_next_4865610448:;
				}
				_iter_end_4865610448:;
				_11613_b = jule::div(_11613_b,_15925_a);
			}
		} else {
			jule::F64 _19717_w = jule::div(static_cast<jule::F64>(_8415_n + _8415_n),_8427_x);
			jule::F64 _19817_h = jule::div(2LL,_8427_x);
			jule::F64 _19921_q0 = _19717_w;
			jule::F64 _20021_z = _19717_w + _19817_h;
			jule::F64 _20121_q1 = (_19717_w * _20021_z) - 1LL;
			jule::Int _20221_k = 1LL;
			while (_20121_q1 < 1000000000LL) {
				{
					(_20221_k)++;
					_20021_z+=_19817_h;
					std::tie(_19921_q0,_20121_q1) = std::make_tuple(_20121_q1,static_cast<jule::F64>((_20021_z * _20121_q1) - _19921_q0));
				}
			_iter_next_4865619568:;
			}
			_iter_end_4865619568:;
			jule::Int _20817_m = _8415_n + _8415_n;
			jule::F64 _20921_t = 0LL;
			jule::Int _21021_i = 2LL * (_8415_n + _20221_k);
			for (; _21021_i >= _20817_m; _21021_i-=2LL) {
				{
					_20921_t=static_cast<jule::F64>(jule::div(1LL,jule::div(static_cast<jule::F64>(_21021_i),_8427_x) - _20921_t));
				}
			_iter_next_4865624816:;
			}
			_iter_end_4865624816:;
			jule::F64 _21421_a = _20921_t;
			_11613_b=1LL;
			jule::F64 _22421_tmp = static_cast<jule::F64>(_8415_n);
			jule::F64 _22517_v = jule::div(2LL,_8427_x);
			_22421_tmp=static_cast<jule::F64>(_22421_tmp * _2330e70b2_log(static_cast<jule::F64>(_23318b640_abs(static_cast<jule::F64>(_22517_v * _22421_tmp)))));
			if (_22421_tmp < 709.782712893384) {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				for (; _21021_i > 0LL; (_21021_i)--) {
					{
						jule::F64 _23025_di = static_cast<jule::F64>(_21021_i + _21021_i);
						std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23025_di,_8427_x) - _21421_a));
					}
				_iter_next_4865632784:;
				}
				_iter_end_4865632784:;
			} else {
				_21021_i=static_cast<jule::Int>(_8415_n - 1LL);
				for (; _21021_i > 0LL; (_21021_i)--) {
					{
						jule::F64 _23625_di = static_cast<jule::F64>(_21021_i + _21021_i);
						std::tie(_21421_a,_11613_b) = std::make_tuple(_11613_b,static_cast<jule::F64>(jule::div(_11613_b * _23625_di,_8427_x) - _21421_a));
						if (_11613_b > 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
							_21421_a = jule::div(_21421_a,_11613_b);
							_20921_t = jule::div(_20921_t,_11613_b);
							_11613_b=1LL;
						}
					}
				_iter_next_4865636384:;
				}
				_iter_end_4865636384:;
			}
			_11613_b=static_cast<jule::F64>(jule::div(_20921_t * _23323e4c3_j0(_8427_x),_11613_b));
		}
	}
	if (_10913_sign) {
		return static_cast<jule::F64>((-(_11613_b)));
	}
	return _11613_b;
}



jule::F64 _2334d0973_yn(jule::Int _26315_n,jule::F64 _26323_x) {
	
	{
		if (!((_26323_x < 0LL) || (_2330d8e50_is_nan(_26323_x)))) { goto _case_end_4865641952; }
		_case_begin_4865641952:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865641792;
		_case_end_4865641952:;
		if (!((_2330d8e50_is_inf(_26323_x,1LL)))) { goto _case_end_4865642064; }
		_case_begin_4865642064:;
		{
			return 0LL;
		}
		goto _match_end_4865641792;
		_case_end_4865642064:;
		_match_end_4865641792:;
	}
	if (_26315_n == 0LL) {
		return static_cast<jule::F64>(_23323e4c3_y0(_26323_x));
	}
	if (_26323_x == 0LL) {
		if ((_26315_n < 0LL) && ((_26315_n & 1LL) == 1LL)) {
			return static_cast<jule::F64>(_2330d8e50_inf(1LL));
		}
		return static_cast<jule::F64>(_2330d8e50_inf(-1LL));
	}
	jule::Bool _28213_sign = false;
	if (_26315_n < 0LL) {
		_26315_n=static_cast<jule::Int>((-(_26315_n)));
		if ((_26315_n & 1LL) == 1LL) {
			_28213_sign=true;
		}
	}
	if (_26315_n == 1LL) {
		if (_28213_sign) {
			return static_cast<jule::F64>((-(_233133cd0_y1(_26323_x))));
		}
		return static_cast<jule::F64>(_233133cd0_y1(_26323_x));
	}
	jule::F64 _29513_b = 0LL;
	if (_26323_x >= 5967269506265907200LL) {
		jule::F64 _31017_temp = 0LL;
		jule::F64 _31114_s;
		jule::F64 _31117_c;
		std::tie(_31114_s,_31117_c) = _2330c1aa3_sincos(_26323_x);
		{
			auto _match_expr{ _26315_n & 3LL };
			if (!((0LL) == _match_expr)) { goto _case_end_4865656912; }
			_case_begin_4865656912:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s - _31117_c);
			}
			goto _match_end_4865656752;
			_case_end_4865656912:;
			if (!((1LL) == _match_expr)) { goto _case_end_4865657040; }
			_case_begin_4865657040:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) - _31117_c);
			}
			goto _match_end_4865656752;
			_case_end_4865657040:;
			if (!((2LL) == _match_expr)) { goto _case_end_4865657136; }
			_case_begin_4865657136:;
			{
				_31017_temp=static_cast<jule::F64>((-(_31114_s)) + _31117_c);
			}
			goto _match_end_4865656752;
			_case_end_4865657136:;
			if (!((3LL) == _match_expr)) { goto _case_end_4865657232; }
			_case_begin_4865657232:;
			{
				_31017_temp=static_cast<jule::F64>(_31114_s + _31117_c);
			}
			goto _match_end_4865656752;
			_case_end_4865657232:;
			_match_end_4865656752:;
		}
		_29513_b=static_cast<jule::F64>(jule::div(0.5641895835477563 * _31017_temp,_23345a568_sqrt(_26323_x)));
	} else {
		jule::F64 _32017_a = _23323e4c3_y0(_26323_x);
		_29513_b=static_cast<jule::F64>(_233133cd0_y1(_26323_x));
		jule::Int _32317_i = 1LL;
		for (; (_32317_i < _26315_n) && (!(_2330d8e50_is_inf(_29513_b,-1LL))); (_32317_i)++) {
			{
				std::tie(_32017_a,_29513_b) = std::make_tuple(_29513_b,static_cast<jule::F64>((jule::div(static_cast<jule::F64>(_32317_i + _32317_i),_26323_x) * _29513_b) - _32017_a));
			}
		_iter_next_4865658144:;
		}
		_iter_end_4865658144:;
	}
	if (_28213_sign) {
		return static_cast<jule::F64>((-(_29513_b)));
	}
	return _29513_b;
}



jule::F64 _2334c5e96_remainder(jule::F64 _6822_x,jule::F64 _6834_y) {
	
	
	{
		if (!((_2330d8e50_is_nan(_6822_x)) || (_2330d8e50_is_nan(_6834_y)) || (_2330d8e50_is_inf(_6822_x,0LL)) || (_6834_y == 0LL))) { goto _case_end_4865669664; }
		_case_begin_4865669664:;
		{
			return static_cast<jule::F64>(_2330d8e50_nan());
		}
		goto _match_end_4865668992;
		_case_end_4865669664:;
		if (!((_2330d8e50_is_inf(_6834_y,0LL)))) { goto _case_end_4865669760; }
		_case_begin_4865669760:;
		{
			return _6822_x;
		}
		goto _match_end_4865668992;
		_case_end_4865669760:;
		_match_end_4865668992:;
	}
	jule::Bool _7913_sign = false;
	if (_6822_x < 0LL) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
		_7913_sign=true;
	}
	if (_6834_y < 0LL) {
		_6834_y=static_cast<jule::F64>((-(_6834_y)));
	}
	if (_6822_x == _6834_y) {
		if (_7913_sign) {
			jule::F64 _8917_zero = 0LL;
			return static_cast<jule::F64>((-(_8917_zero)));
		}
		return 0LL;
	}
	if (_6834_y <= 89884656743115790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0) {
		_6822_x=static_cast<jule::F64>(_233036199_mod(_6822_x,static_cast<jule::F64>(_6834_y + _6834_y)));
	}
	if (_6834_y < 0.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004450147717014403) {
		if ((_6822_x + _6822_x) > _6834_y) {
			_6822_x-=_6834_y;
			if ((_6822_x + _6822_x) >= _6834_y) {
				_6822_x-=_6834_y;
			}
		}
	} else {
		jule::F64 _10513_y_half = 0.5 * _6834_y;
		if (_6822_x > _10513_y_half) {
			_6822_x-=_6834_y;
			if (_6822_x >= _10513_y_half) {
				_6822_x-=_6834_y;
			}
		}
	}
	if (_7913_sign) {
		_6822_x=static_cast<jule::F64>((-(_6822_x)));
	}
	return _6822_x;
}



jule::F64 _2334de278_xatan(jule::F64 _8610_x) {
	
	
	
	
	
	
	
	
	
	
	jule::F64 _9813_z = _8610_x * _8610_x;
	_9813_z=static_cast<jule::F64>(jule::div(_9813_z * ((((((((-0.8750608600031904 * _9813_z) + -16.157537187333652) * _9813_z) + -75.00855792314705) * _9813_z) + -122.88666844901361) * _9813_z) + -64.85021904942025),((((((((_9813_z + 24.858464901423062) * _9813_z) + 165.02700983169885) * _9813_z) + 432.88106049129027) * _9813_z) + 485.3903996359137) * _9813_z) + 194.5506571482614));
	_9813_z=static_cast<jule::F64>((_8610_x * _9813_z) + _8610_x);
	return _9813_z;
}



jule::F64 _2334de278_satan(jule::F64 _10610_x) {
	
	
	if (_10610_x <= 0.66) {
		return static_cast<jule::F64>(_2334de278_xatan(_10610_x));
	}
	if (_10610_x > 2.414213562373095) {
		return static_cast<jule::F64>((1.5707963267948966 - _2334de278_xatan(static_cast<jule::F64>(jule::div(1LL,_10610_x)))) + 0.00000000000000006123233995736766);
	}
	return static_cast<jule::F64>((0.7853981633974483 + _2334de278_xatan(static_cast<jule::F64>(jule::div(_10610_x - 1LL,_10610_x + 1LL)))) + 0.00000000000000003061616997868383);
}



jule::F64 _2334de278_atan(jule::F64 _12413_x) {
	if (_12413_x == 0LL) {
		return _12413_x;
	}
	if (_12413_x > 0LL) {
		return static_cast<jule::F64>(_2334de278_satan(_12413_x));
	}
	return static_cast<jule::F64>((-(_2334de278_satan(static_cast<jule::F64>((-(_12413_x)))))));
}



jule::F64 _233540076_asin(jule::F64 _5017_x) {
	if (_5017_x == 0LL) {
		return _5017_x;
	}
	jule::Bool _5413_sign = false;
	if (_5017_x < 0LL) {
		_5017_x=static_cast<jule::F64>((-(_5017_x)));
		_5413_sign=true;
	}
	if (_5017_x > 1LL) {
		return static_cast<jule::F64>(_2330d8e50_nan());
	}
	jule::F64 _6313_temp = _23345a568_sqrt(static_cast<jule::F64>(1LL - (_5017_x * _5017_x)));
	if (_5017_x > 0.7) {
		_6313_temp=static_cast<jule::F64>(1.5707963267948966 - _2334de278_satan(static_cast<jule::F64>(jule::div(_6313_temp,_5017_x))));
	} else {
		_6313_temp=static_cast<jule::F64>(_2334de278_satan(static_cast<jule::F64>(jule::div(_5017_x,_6313_temp))));
	}
	if (_5413_sign) {
		_6313_temp=static_cast<jule::F64>((-(_6313_temp)));
	}
	return _6313_temp;
}



jule::F64 _233540076_acos(jule::F64 _8013_x) {
	return static_cast<jule::F64>(1.5707963267948966 - _233540076_asin(_8013_x));
}



jule::F64 _2335590c3_asinh(jule::F64 _7018_x) {
	
	
	
	if (_2330d8e50_is_nan(_7018_x) || _2330d8e50_is_inf(_7018_x,0LL)) {
		return _7018_x;
	}
	jule::Bool _7913_sign = false;
	if (_7018_x < 0LL) {
		_7018_x=static_cast<jule::F64>((-(_7018_x)));
		_7913_sign=true;
	}
	jule::F64 _8413_temp = 0LL;
	{
		if (!((_7018_x > 268435456LLU))) { goto _case_end_4865725568; }
		_case_begin_4865725568:;
		{
			_8413_temp=static_cast<jule::F64>(_2330e70b2_log(_7018_x) + 0.6931471805599453);
		}
		goto _match_end_4865724752;
		_case_end_4865725568:;
		if (!((_7018_x > 2LL))) { goto _case_end_4865727824; }
		_case_begin_4865727824:;
		{
			_8413_temp=static_cast<jule::F64>(_2330e70b2_log(static_cast<jule::F64>((2LL * _7018_x) + jule::div(1LL,_23345a568_sqrt(static_cast<jule::F64>((_7018_x * _7018_x) + 1LL)) + _7018_x))));
		}
		goto _match_end_4865724752;
		_case_end_4865727824:;
		if (!((_7018_x < 0.000000003725290298461914))) { goto _case_end_4865726480; }
		_case_begin_4865726480:;
		{
			_8413_temp=_7018_x;
		}
		goto _match_end_4865724752;
		_case_end_4865726480:;
		_case_begin_4865724832:;
		{
			_8413_temp=static_cast<jule::F64>(_23339d8da_log1p(static_cast<jule::F64>(_7018_x + jule::div(_7018_x * _7018_x,1LL + _23345a568_sqrt(static_cast<jule::F64>(1LL + (_7018_x * _7018_x)))))));
		}
		goto _match_end_4865724752;
		_case_end_4865724832:;
		_match_end_4865724752:;
	}
	if (_7913_sign) {
		_8413_temp=static_cast<jule::F64>((-(_8413_temp)));
	}
	return _8413_temp;
}



std::tuple<jule::Bool,jule::Int> _231e547b1_conv_bool(jule::Str _4118_s) {
	{
		auto _match_expr{ _4118_s };
		if (!((jule::Str("1", 1)) == _match_expr || (jule::Str("t", 1)) == _match_expr || (jule::Str("T", 1)) == _match_expr || (jule::Str("true", 4)) == _match_expr || (jule::Str("TRUE", 4)) == _match_expr || (jule::Str("True", 4)) == _match_expr)) { goto _case_end_4866168592; }
		_case_begin_4866168592:;
		{
			return std::make_tuple(true,0LLU);
		}
		goto _match_end_4866168480;
		_case_end_4866168592:;
		if (!((jule::Str("0", 1)) == _match_expr || (jule::Str("f", 1)) == _match_expr || (jule::Str("F", 1)) == _match_expr || (jule::Str("false", 5)) == _match_expr || (jule::Str("FALSE", 5)) == _match_expr || (jule::Str("False", 5)) == _match_expr)) { goto _case_end_4866168816; }
		_case_begin_4866168816:;
		{
			return std::make_tuple(false,0LLU);
		}
		goto _match_end_4866168480;
		_case_end_4866168816:;
		_match_end_4866168480:;
	}
	return std::make_tuple(false,2LLU);
}



jule::Str _231e547b1_fmt_bool(jule::Bool _5217_b) {
	if (_5217_b) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



jule::Str _231e5e5ce_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_231e5e5ce_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



jule::Slice<jule::U8> _231e5e5ce_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_231e5e5ce_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4866184320; }
		_case_begin_4866184320:;
		{
			_8313_bits=static_cast<jule::U64>(_23300ecdd_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_231e5e5ce_F32_INFO));
		}
		goto _match_end_4866182800;
		_case_end_4866184320:;
		if (!((64LL) == _match_expr)) { goto _case_end_4866183888; }
		_case_begin_4866183888:;
		{
			_8313_bits=static_cast<jule::U64>(_23300ecdd_f64_bits(_8234_val));
			_8413_flt=(&(_231e5e5ce_F64_INFO));
		}
		goto _match_end_4866182800;
		_case_end_4866183888:;
		_case_begin_4866182272:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4866182800;
		_case_end_4866182272:;
		_match_end_4866182800:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto _match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_4866193152; }
		_case_begin_4866193152:;
		{
			jule::Str _10317_s = jule::Str();
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_4866197376; }
				_case_begin_4866197376:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4866196480;
				_case_end_4866197376:;
				if (!((_969_neg))) { goto _case_end_4866198368; }
				_case_begin_4866198368:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4866196480;
				_case_end_4866198368:;
				_case_begin_4866196592:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4866196480;
				_case_end_4866196592:;
				_match_end_4866196480:;
			}
			return jule::append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4866192016;
		_case_end_4866193152:;
		if (!((0LL) == _match_expr)) { goto _case_end_4866194576; }
		_case_begin_4866194576:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4866192016;
		_case_end_4866194576:;
		_case_begin_4866185232:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_4866192016;
		_case_end_4866185232:;
		_match_end_4866192016:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _231e5e5ce_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _231e5e5ce_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _231e5e5ce_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_231e5e5ce_DecimalSlice _13413_digs = _231e5e5ce_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_232dd8d0a_ryu_ftoa_shortest(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4866211088; }
			_case_begin_4866211088:;
			{
				_8259_prec=static_cast<jule::Int>(_231e5e5ce_max(static_cast<jule::Int>(_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4866211008;
			_case_end_4866211088:;
			if (!(('f') == _match_expr)) { goto _case_end_4866211184; }
			_case_begin_4866211184:;
			{
				_8259_prec=static_cast<jule::Int>(_231e5e5ce_max(static_cast<jule::Int>(_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4866211008;
			_case_end_4866211184:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4866211568; }
			_case_begin_4866211568:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_4866211008;
			_case_end_4866211568:;
			_match_end_4866211008:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto _match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4866217664; }
			_case_begin_4866217664:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4866216224;
			_case_end_4866217664:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4866216720; }
			_case_begin_4866216720:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_4866216224;
			_case_end_4866216720:;
			_case_begin_4866212432:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4866216224;
			_case_end_4866212432:;
			_match_end_4866216224:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_232dd8d0a_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_232dd8d0a_ryu_ftoa_fixed64(_13413_digs,_9813_mant,static_cast<jule::Int>(static_cast<jule::Int>(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits))),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _231e5e5ce_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _231e5e5ce_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



jule::Slice<jule::U8> _231e5e5ce_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_231e5e5ce_FloatInfo& _18735_flt) {
	_232e74d1e_Decimal _18813_d = _232e74d1e_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(static_cast<jule::Int>(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits)));
	_231e5e5ce_DecimalSlice _19113_digs = _231e5e5ce_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_231e5e5ce_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_231e5e5ce_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4866241488; }
			_case_begin_4866241488:;
			{
				_18634_prec=static_cast<jule::Int>(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4866239792;
			_case_end_4866241488:;
			if (!(('f') == _match_expr)) { goto _case_end_4866241584; }
			_case_begin_4866241584:;
			{
				_18634_prec=static_cast<jule::Int>(_231e5e5ce_max(static_cast<jule::Int>(_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4866239792;
			_case_end_4866241584:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4866241680; }
			_case_begin_4866241680:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_4866239792;
			_case_end_4866241680:;
			_match_end_4866239792:;
		}
	} else {
		{
			auto _match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4866245104; }
			_case_begin_4866245104:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18634_prec + 1LL));
			}
			goto _match_end_4866245472;
			_case_end_4866245104:;
			if (!(('f') == _match_expr)) { goto _case_end_4866245200; }
			_case_begin_4866245200:;
			{
				_18813_d._method_round(static_cast<jule::Int>(_18813_d._field_dp + _18634_prec));
			}
			goto _match_end_4866245472;
			_case_end_4866245200:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4866242256; }
			_case_begin_4866242256:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_4866245472;
			_case_end_4866242256:;
			_match_end_4866245472:;
		}
		_19113_digs=_231e5e5ce_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _231e5e5ce_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



jule::Slice<jule::U8> _231e5e5ce_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_231e5e5ce_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_4866256192; }
		_case_begin_4866256192:;
		{
			return _231e5e5ce_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4866256000;
		_case_end_4866256192:;
		if (!(('f') == _match_expr)) { goto _case_end_4866256304; }
		_case_begin_4866256304:;
		{
			return _231e5e5ce_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4866256000;
		_case_end_4866256304:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_4866256400; }
		_case_begin_4866256400:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _231e5e5ce_fmt_e(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_22437_prec - 1LL),static_cast<jule::U8>((_22448_fmt + 'e') - 'g'));
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _231e5e5ce_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_231e5e5ce_max(static_cast<jule::Int>(_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4866256000;
		_case_end_4866256400:;
		_match_end_4866256000:;
	}
	return jule::append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



void _231e5e5ce_round_shortest(_232e74d1e_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_231e5e5ce_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_232e74d1e_Decimal _29113_upper = _232e74d1e_Decimal();
	_29113_upper._method_assign(static_cast<jule::U64>((_26136_mant * 2LL) + 1LL));
	_29113_upper._method_shift(static_cast<jule::Int>((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=static_cast<jule::U64>(_26136_mant - 1LL);
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=static_cast<jule::U64>((_26136_mant * 2LL) - 1LL);
		_30213_explo=static_cast<jule::Int>(_26147_exp - 1LL);
	}
	_232e74d1e_Decimal _31013_lower = _232e74d1e_Decimal();
	_31013_lower._method_assign(static_cast<jule::U64>((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(static_cast<jule::Int>((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = jule::mod(_26136_mant,2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	for (; ; (_33413_ui)++) {
		{
			jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
			if (_33913_mi >= _26124_d._field_nd) {
				goto _iter_end_4866279904;
			}
			jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
			jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
			if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
				_34417_l=_31013_lower._field_d[_34313_li];
			}
			jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
			if (_33913_mi >= 0LL) {
				_34817_m=_26124_d._field_d[_33913_mi];
			}
			jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
			if (_33413_ui < _29113_upper._field_nd) {
				_35217_u=_29113_upper._field_d[_33413_ui];
			}
			jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
			{
				if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_4866305136; }
				_case_begin_4866305136:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4866304560;
				_case_end_4866305136:;
				if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_4866305232; }
				_case_begin_4866305232:;
				{
					_33013_upperdelta=1LL;
				}
				goto _match_end_4866304560;
				_case_end_4866305232:;
				if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_4866305600; }
				_case_begin_4866305600:;
				{
					_33013_upperdelta=2LL;
				}
				goto _match_end_4866304560;
				_case_end_4866305600:;
				_match_end_4866304560:;
			}
			jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
			{
				if (!((_36013_okdown && _38113_okup))) { goto _case_end_4866310912; }
				_case_begin_4866310912:;
				{
					_26124_d._method_round(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4866308272;
				_case_end_4866310912:;
				if (!((_36013_okdown))) { goto _case_end_4866311152; }
				_case_begin_4866311152:;
				{
					_26124_d._method_round_down(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4866308272;
				_case_end_4866311152:;
				if (!((_38113_okup))) { goto _case_end_4866311248; }
				_case_begin_4866311248:;
				{
					_26124_d._method_round_up(static_cast<jule::Int>(_33913_mi + 1LL));
					return;
				}
				goto _match_end_4866308272;
				_case_end_4866311248:;
				_match_end_4866308272:;
			}
		}
	_iter_next_4866279904:;
	}
	_iter_end_4866279904:;
}



jule::Slice<jule::U8> _231e5e5ce_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_231e5e5ce_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[0LL];
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _231e5e5ce_min(_40038_d._field_nd,static_cast<jule::Int>(_40055_prec + 1LL));
		if (_41617_i < _41713_m) {
			_40014_dst=jule::append(_40014_dst,_40038_d._field_d.slice(_41617_i,_41713_m));
			_41617_i=_41713_m;
		}
		for (; _41617_i <= _40055_prec; (_41617_i)++) {
			{
				_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0'}));
			}
		_iter_next_4866330400:;
		}
		_iter_end_4866330400:;
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_4866335536; }
		_case_begin_4866335536:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_4866328976;
		_case_end_4866335536:;
		if (!((_42913_exp < 100LL))) { goto _case_end_4866334240; }
		_case_begin_4866334240:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4866328976;
		_case_end_4866334240:;
		_case_begin_4866332624:;
		{
			_40014_dst=jule::append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_42913_exp,10LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_42913_exp,10LL)) + '0')}));
		}
		goto _match_end_4866328976;
		_case_end_4866332624:;
		_match_end_4866328976:;
	}
	return _40014_dst;
}



jule::Slice<jule::U8> _231e5e5ce_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_231e5e5ce_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _231e5e5ce_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=jule::append(_45514_dst,_45538_d._field_d.slice(0LL,_46317_m));
		for (; _46317_m < _45538_d._field_dp; (_46317_m)++) {
			{
				_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
			}
		_iter_next_4866348160:;
		}
		_iter_end_4866348160:;
	} else {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		for (; _47417_i < _45555_prec; (_47417_i)++) {
			{
				jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
				jule::Int _47717_j = _45538_d._field_dp + _47417_i;
				if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
					_47621_ch=_45538_d._field_d[_47717_j];
				}
				_45514_dst=jule::append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
			}
		_iter_next_4866350640:;
		}
		_iter_end_4866350640:;
	}
	return _45514_dst;
}



jule::Slice<jule::U8> _231e5e5ce_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_231e5e5ce_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _232e766a0_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=jule::append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _232e766a0_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



jule::Slice<jule::U8> _231e5e5ce_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_231e5e5ce_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	while ((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LLU) == 0LL)) {
		{
			_51113_mant<<=1LL;
			(_51128_exp)--;
		}
	_iter_next_4866369680:;
	}
	_iter_end_4866369680:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846975LLU;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LLU) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LLU) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		while (_51113_mant != 0LL) {
			{
				_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
				_51113_mant<<=4LL;
			}
		_iter_next_4866381088:;
		}
		_iter_end_4866381088:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		for (; _56017_i < _51027_prec; (_56017_i)++) {
			{
				_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
				_51113_mant<<=4LL;
			}
		_iter_next_4866382672:;
		}
		_iter_end_4866382672:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _231e6dda2_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_4866391696; }
		_case_begin_4866391696:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4866390816;
		_case_end_4866391696:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_4866378416; }
		_case_begin_4866378416:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4866390816;
		_case_end_4866378416:;
		_case_begin_4866393904:;
		{
			_51014_dst=jule::append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>(jule::mod(static_cast<jule::U8>(jule::div(_51128_exp,100LL)),10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(jule::div(_51128_exp,10LL),10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::mod(_51128_exp,10LL)) + '0')}));
		}
		goto _match_end_4866390816;
		_case_end_4866393904:;
		_match_end_4866390816:;
	}
	return _51014_dst;
}



jule::Int _231e5e5ce_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



jule::Int _231e5e5ce_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



jule::U8 _231e6dda2_lower(jule::U8 _4910_c) {
	return static_cast<jule::U8>(_4910_c | 32LL);
}



std::tuple<jule::U64,jule::Int> _231e6dda2_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str()) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_4866412528; }
		goto _match_end_4866409952;
		_case_end_4866412528:;
		if (!((_5435_base == 0LL))) { goto _case_end_4866411696; }
		_case_begin_4866411696:;
		{
			_5435_base=10LL;
			if (_5423_s[0LL] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_231e6dda2_lower(_5423_s[1LL]) == 'b')))) { goto _case_end_4866416944; }
					_case_begin_4866416944:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4866415024;
					_case_end_4866416944:;
					if (!(((_5423_s.len() >= 3LL) && (_231e6dda2_lower(_5423_s[1LL]) == 'o')))) { goto _case_end_4866415952; }
					_case_begin_4866415952:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4866415024;
					_case_end_4866415952:;
					if (!(((_5423_s.len() >= 3LL) && (_231e6dda2_lower(_5423_s[1LL]) == 'x')))) { goto _case_end_4866416480; }
					_case_begin_4866416480:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(2LL);
					}
					goto _match_end_4866415024;
					_case_end_4866416480:;
					_case_begin_4866415168:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(1LL);
					}
					goto _match_end_4866415024;
					_case_end_4866415168:;
					_match_end_4866415024:;
				}
			}
		}
		goto _match_end_4866409952;
		_case_end_4866411696:;
		_case_begin_4866409072:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4866409952;
		_case_end_4866409072:;
		_match_end_4866409952:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LLU;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_4866427120; }
		_case_begin_4866427120:;
		{
			_9313_cutoff=1844674407370955264LL;
		}
		goto _match_end_4866424208;
		_case_end_4866427120:;
		if (!((16LL) == _match_expr)) { goto _case_end_4866428208; }
		_case_begin_4866428208:;
		{
			_9313_cutoff=1152921504606846976LL;
		}
		goto _match_end_4866424208;
		_case_end_4866428208:;
		_case_begin_4866424768:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_4866424208;
		_case_end_4866424768:;
		_match_end_4866424208:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_4866423248; }
		_case_begin_4866423248:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4866426448;
		_case_end_4866423248:;
		if (!((64LL) == _match_expr)) { goto _case_end_4866429232; }
		_case_begin_4866429232:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4866426448;
		_case_end_4866429232:;
		_match_end_4866426448:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto expr = _5423_s;
		auto it = expr.begin();
		_iter_begin_4866430256:;
		if (it != expr.end()) {
			jule::U8 _231e6dda2_c = *it;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _231e6dda2_c) && (_231e6dda2_c <= '9')))) { goto _case_end_4866436656; }
					_case_begin_4866436656:;
					{
						_11417_d=static_cast<jule::U8>(_231e6dda2_c - '0');
					}
					goto _match_end_4866434736;
					_case_end_4866436656:;
					if (!((('a' <= _231e6dda2_lower(_231e6dda2_c)) && (_231e6dda2_lower(_231e6dda2_c) <= 'z')))) { goto _case_end_4866435824; }
					_case_begin_4866435824:;
					{
						_11417_d=static_cast<jule::U8>((_231e6dda2_lower(_231e6dda2_c) - 'a') + 10LL);
					}
					goto _match_end_4866434736;
					_case_end_4866435824:;
					_case_begin_4866434848:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4866434736;
					_case_end_4866434848:;
					_match_end_4866434736:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4866430256:;
			++it;
			goto _iter_begin_4866430256;
		}
		_iter_end_4866430256:;
	}
	return std::make_tuple(_11213_n,0LLU);
}



std::tuple<jule::I64,jule::Int> _231e6dda2_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::I64 _16562_i = jule::I64();
	jule::Int _16570_err = 0LLU;
	if (_16522_s == jule::Str()) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[0LL] == '+') {
		_16522_s=_16522_s.slice(1LL);
	} else if (_16522_s[0LL] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(1LL);
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _231e6dda2_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LLU;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>((-(static_cast<jule::I64>(_1909_cutoff))));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



std::tuple<jule::F64,jule::Bool> _232172407_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::F64 _4158_f = jule::F64();
	jule::Bool _4166_ok = jule::Bool();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_23300ecdd_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _2335950dc_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _2335950dc_mul64(_4123_man,_232172407_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL][1LL]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _2335950dc_mul64(_4123_man,_232172407_DETAILED_POWS_OF_TEN[_4133_exp10 - -348LL][0LL]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=static_cast<jule::U64>(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_23300ecdd_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



std::tuple<jule::F32,jule::Bool> _232172407_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::F32 _11058_f = jule::F32();
	jule::Bool _11066_ok = jule::Bool();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_23300ecdd_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _2335950dc_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _2335950dc_mul64(_11023_man,_232172407_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL][1LL]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _2335950dc_mul64(_11023_man,_232172407_DETAILED_POWS_OF_TEN[_11033_exp10 - -348LL][0LL]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=static_cast<jule::U64>(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_23300ecdd_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



jule::Int _232d42e62_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	for (; _5013_i < _4613_n; (_5013_i)++) {
		{
			jule::U8 _5217_c = _4534_s[_5013_i];
			if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
				_5217_c+=32LL;
			}
			if (_5217_c != _4542_prefix[_5013_i]) {
				return _5013_i;
			}
		}
	_iter_next_4866552688:;
	}
	_iter_end_4866552688:;
	return _4613_n;
}



std::tuple<jule::F64,jule::Int,jule::Bool> _232d42e62_special(jule::Str _6816_s) {
	jule::F64 _6826_f = jule::F64();
	jule::Int _6834_n = jule::Int();
	jule::Bool _6842_ok = jule::Bool();
	if (_6816_s == jule::Str()) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[0LL] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_4866565616; }
		_case_begin_4866565616:;
		{
			if (_6816_s[0LL] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(1LL);
			goto _case_begin_4866565712;
		}
		goto _match_end_4866565536;
		_case_end_4866565616:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_4866565712; }
		_case_begin_4866565712:;
		{
			jule::Int _8317_case_n = _232d42e62_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = static_cast<jule::F64>(_2330d8e50_inf(_7213_sign));
				_6834_n = static_cast<jule::Int>(_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4866565536;
		_case_end_4866565712:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_4866565808; }
		_case_begin_4866565808:;
		{
			if (_232d42e62_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = static_cast<jule::F64>(_2330d8e50_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4866565536;
		_case_end_4866565808:;
		_match_end_4866565536:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _232d42e62_read_float(jule::Str _10315_s) {
	jule::U64 _10325_mantissa = jule::U64();
	jule::Int _10340_exp = jule::Int();
	jule::Bool _10350_neg = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10438_hex = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10457_ok = jule::Bool();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[_10449_i] == '+'))) { goto _case_end_4866582160; }
		_case_begin_4866582160:;
		{
			(_10449_i)++;
		}
		goto _match_end_4866582032;
		_case_end_4866582160:;
		if (!((_10315_s[_10449_i] == '-'))) { goto _case_end_4866581504; }
		_case_begin_4866581504:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4866582032;
		_case_end_4866581504:;
		_match_end_4866582032:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[_10449_i] == '0')) && (_231e6dda2_lower(_10315_s[_10449_i + 1LL]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	for (; _10449_i < _10315_s.len(); (_10449_i)++) {
		{
			jule::U8 _13413_c = _10315_s[_10449_i];
			{
				if (!((_13413_c == '.'))) { goto _case_end_4866598304; }
				_case_begin_4866598304:;
				{
					if (_12813_sawdot) {
						goto _julec_label_loop_end;
					}
					_12813_sawdot=true;
					_13213_dp=_13013_nd;
					goto _iter_next_4866594816;
				}
				goto _match_end_4866598224;
				_case_end_4866598304:;
				if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_4866598400; }
				_case_begin_4866598400:;
				{
					_12913_sawdigits=true;
					if ((_13413_c == '0') && (_13013_nd == 0LL)) {
						(_13213_dp)--;
						goto _iter_next_4866594816;
					}
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=_11813_base;
						_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
						(_13113_nd_mant)++;
					} else if (_13413_c != '0') {
						_10425_trunc=true;
					}
					goto _iter_next_4866594816;
				}
				goto _match_end_4866598224;
				_case_end_4866598400:;
				if (!((((_11813_base == 16LL) && ('a' <= _231e6dda2_lower(_13413_c))) && (_231e6dda2_lower(_13413_c) <= 'f')))) { goto _case_end_4866598496; }
				_case_begin_4866598496:;
				{
					_12913_sawdigits=true;
					(_13013_nd)++;
					if (_13113_nd_mant < _11913_max_mant_digits) {
						_10325_mantissa*=16LL;
						_10325_mantissa+=static_cast<jule::U64>((_231e6dda2_lower(_13413_c) - 'a') + 10LL);
						(_13113_nd_mant)++;
					} else {
						_10425_trunc=true;
					}
					goto _iter_next_4866594816;
				}
				goto _match_end_4866598224;
				_case_end_4866598496:;
				_match_end_4866598224:;
			}
			goto _iter_end_4866594816;
		}
	_iter_next_4866594816:;
	}
	_iter_end_4866594816:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_231e6dda2_lower(_10315_s[_10449_i]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[_10449_i] == '+') {
			(_10449_i)++;
		} else if (_10315_s[_10449_i] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[_10449_i] < '0')) || (_10315_s[_10449_i] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		for (; (_10449_i < _10315_s.len()) && (('0' <= _10315_s[_10449_i]) && (_10315_s[_10449_i] <= '9')); (_10449_i)++) {
			{
				if (_20517_e < 10000LL) {
					_20517_e=static_cast<jule::Int>(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[_10449_i])) - '0');
				}
			}
		_iter_next_4866618240:;
		}
		_iter_end_4866618240:;
		_13213_dp+=static_cast<jule::Int>(_20517_e * _19517_esign);
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=static_cast<jule::Int>(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



std::tuple<jule::F64,jule::Bool> _232d42e62_atof64_exact(jule::U64 _43317_mantissa,jule::Int _43336_exp,jule::Bool _43346_neg) {
	jule::F64 _43359_f = jule::F64();
	jule::Bool _43367_ok = jule::Bool();
	if ((_43317_mantissa >> _231e5e5ce_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_43359_f,_43367_ok);
	}
	_43359_f=static_cast<jule::F64>(_43317_mantissa);
	if (_43346_neg) {
		_43359_f=static_cast<jule::F64>((-(_43359_f)));
	}
	{
		if (!((_43336_exp == 0LL))) { goto _case_end_4866633744; }
		_case_begin_4866633744:;
		{
			_43359_f = _43359_f;
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4866633600;
		_case_end_4866633744:;
		if (!(((_43336_exp > 0LL) && (_43336_exp <= 37LL)))) { goto _case_end_4866633840; }
		_case_begin_4866633840:;
		{
			if (_43336_exp > 22LL) {
				_43359_f*=_232d42e62_F64_POW10[_43336_exp - 22LL];
				_43336_exp=22LL;
			}
			if ((_43359_f > 1000000000000000LL) || (_43359_f < -1000000000000000LL)) {
				return std::make_tuple(_43359_f,_43367_ok);
			}
			_43359_f = static_cast<jule::F64>(_43359_f * _232d42e62_F64_POW10[_43336_exp]);
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4866633600;
		_case_end_4866633840:;
		if (!(((_43336_exp < 0LL) && (_43336_exp >= -22LL)))) { goto _case_end_4866633952; }
		_case_begin_4866633952:;
		{
			_43359_f = static_cast<jule::F64>(jule::div(_43359_f,_232d42e62_F64_POW10[(-(_43336_exp))]));
			_43367_ok = true;
			return std::make_tuple(_43359_f,_43367_ok);
		}
		goto _match_end_4866633600;
		_case_end_4866633952:;
		_match_end_4866633600:;
	}
	return std::make_tuple(_43359_f,_43367_ok);
}



std::tuple<jule::F64,jule::Bool> _232d42e62_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::F64 _47258_f = jule::F64();
	jule::Bool _47266_ok = jule::Bool();
	if ((_47216_mantissa >> _231e5e5ce_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_4866648112; }
		_case_begin_4866648112:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4866647840;
		_case_end_4866648112:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_4866648208; }
		_case_begin_4866648208:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_232d42e62_F64_POW10[_47235_exp - 22LL];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1000000000000000LL) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = static_cast<jule::F64>(_47258_f * _232d42e62_F64_POW10[_47235_exp]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4866647840;
		_case_end_4866648208:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_4866648304; }
		_case_begin_4866648304:;
		{
			_47258_f = static_cast<jule::F64>(jule::div(_47258_f,_232d42e62_F64_POW10[(-(_47235_exp))]));
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4866647840;
		_case_end_4866648304:;
		_match_end_4866647840:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



std::tuple<jule::F32,jule::Bool> _232d42e62_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::F32 _50662_f = jule::F32();
	jule::Bool _50670_ok = jule::Bool();
	if ((_50616_mantissa >> _231e5e5ce_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_4866662160; }
		_case_begin_4866662160:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4866662016;
		_case_end_4866662160:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_4866662256; }
		_case_begin_4866662256:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_232d42e62_F32_POW10[_50635_exp - 10LL];
				_50635_exp=10LL;
			}
			if ((_50662_f > 10000000LL) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = static_cast<jule::F32>(_50662_f * _232d42e62_F32_POW10[_50635_exp]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4866662016;
		_case_end_4866662256:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_4866662368; }
		_case_begin_4866662368:;
		{
			_50662_f = static_cast<jule::F32>(jule::div(_50662_f,_232d42e62_F32_POW10[(-(_50635_exp))]));
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4866662016;
		_case_end_4866662368:;
		_match_end_4866662016:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



std::tuple<jule::F64,jule::Int> _232d42e62_atof_hex(jule::Str _54213_s,_231e5e5ce_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	while ((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL)) {
		{
			_54242_mantissa<<=1LL;
			(_54261_exp)--;
		}
	_iter_next_4866676464:;
	}
	_iter_end_4866676464:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	while ((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4866679808:;
	}
	_iter_end_4866679808:;
	while ((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL))) {
		{
			_54242_mantissa=static_cast<jule::U64>((_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL));
			(_54261_exp)++;
		}
	_iter_next_4866682000:;
	}
	_iter_end_4866682000:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=static_cast<jule::U64>(_54242_mantissa & 1LL);
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=static_cast<jule::Int>(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _231e5e5ce_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_23300ecdd_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_23300ecdd_f64_from_bits(_59613_bits)),_58913_err);
}



std::tuple<jule::F32,jule::Int,jule::Int> _232d42e62_atof32(jule::Str _60711_s) {
	jule::F32 _60721_f = jule::F32();
	jule::Int _60729_n = jule::Int();
	jule::Int _60737_err = 0LLU;
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _232d42e62_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60729_n = _60919__n;
			_60737_err = 0LLU;
			return std::make_tuple(_60721_f,_60729_n,_60737_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _232d42e62_read_float(_60711_s);
	_60729_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0LL;
		std::tie(_62217_ff,_60737_err) = _232d42e62_atof_hex(_60711_s.slice(0LL,_60729_n),_231e5e5ce_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60729_n = _60729_n;
		_60737_err = _60737_err;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _232d42e62_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _232172407_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
			jule::F32 _64421_f_up = 0LL;
			std::tie(_64421_f_up,_61550_ok) = _232172407_eisel_lemire32(static_cast<jule::U64>(_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60729_n = _60729_n;
				_60737_err = 0LLU;
				return std::make_tuple(_60721_f,_60729_n,_60737_err);
			}
		}
	}
	_232e74d1e_Decimal _65313_d = _232e74d1e_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,_60729_n))))) {
		_60721_f = 0LL;
		_60729_n = _60729_n;
		_60737_err = 2LLU;
		return std::make_tuple(_60721_f,_60729_n,_60737_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_231e5e5ce_F32_INFO);
	_60721_f=static_cast<jule::F32>(_23300ecdd_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60737_err=1LLU;
	}
	_60721_f = _60721_f;
	_60729_n = _60729_n;
	_60737_err = _60737_err;
	return std::make_tuple(_60721_f,_60729_n,_60737_err);
}



std::tuple<jule::F64,jule::Int,jule::Int> _232d42e62_atof64(jule::Str _66511_s) {
	jule::F64 _66521_f = jule::F64();
	jule::Int _66529_n = jule::Int();
	jule::Int _66537_err = 0LLU;
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _232d42e62_special(_66511_s);
		if (_66723_ok) {
			_66521_f = _66714_val;
			_66529_n = _66719__n;
			_66537_err = 0LLU;
			return std::make_tuple(_66521_f,_66529_n,_66537_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _232d42e62_read_float(_66511_s);
	_66529_n=_67342__n;
	if ((!(_67350_ok))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (_67337_hex) {
		std::tie(_66521_f,_66537_err) = _232d42e62_atof_hex(_66511_s.slice(0LL,_66529_n),_231e5e5ce_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66521_f = _66521_f;
		_66529_n = _66529_n;
		_66537_err = _66537_err;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66521_f,_67350_ok) = _232d42e62_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
		std::tie(_66521_f,_67350_ok) = _232172407_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
			jule::F64 _70121_f_up = 0LL;
			std::tie(_70121_f_up,_67350_ok) = _232172407_eisel_lemire64(static_cast<jule::U64>(_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if (_67350_ok && (_66521_f == _70121_f_up)) {
				_66521_f = _66521_f;
				_66529_n = _66529_n;
				_66537_err = 0LLU;
				return std::make_tuple(_66521_f,_66529_n,_66537_err);
			}
		}
	}
	_232e74d1e_Decimal _71013_d = _232e74d1e_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,_66529_n))))) {
		_66521_f = 0LL;
		_66529_n = _66529_n;
		_66537_err = 2LLU;
		return std::make_tuple(_66521_f,_66529_n,_66537_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_231e5e5ce_F64_INFO);
	_66521_f=static_cast<jule::F64>(_23300ecdd_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66537_err=1LLU;
	}
	_66521_f = _66521_f;
	_66529_n = _66529_n;
	_66537_err = _66537_err;
	return std::make_tuple(_66521_f,_66529_n,_66537_err);
}



std::tuple<jule::F64,jule::Int,jule::Int> _232d42e62_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _232d42e62_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	jule::F64 _72810_f;
	jule::Int _72813_n;
	jule::Int _72816_err;
	std::tie(_72810_f,_72813_n,_72816_err) = _232d42e62_atof64(_72223_s);
	return std::make_tuple(_72810_f,_72813_n,_72816_err);
}



std::tuple<jule::F64,jule::Int> _232d42e62_parse_float(jule::Str _75620_s,jule::Int _75628_bit_size) {
	jule::F64 _75710_f;
	jule::Int _75713_n;
	jule::Int _75716_err;
	std::tie(_75710_f,_75713_n,_75716_err) = _232d42e62_parse_float_prefix(_75620_s,_75628_bit_size);
	if ((_75713_n != _75620_s.len()) && ((_75716_err == 0LLU) || (_75716_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75710_f,_75716_err);
}



void _232dd8d0a_ryu_ftoa_fixed32(_231e5e5ce_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _2335950dc_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_232dd8d0a_mul_by_log2_log10(static_cast<jule::Int>(_6213_e2 + 24LL)))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _232dd8d0a_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _232dd8d0a_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(static_cast<jule::U32>(_8114_di >> _949_extra),static_cast<jule::U32>(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_232dd8d0a_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



void _232dd8d0a_ryu_ftoa_fixed64(_231e5e5ce_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _2335950dc_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=static_cast<jule::U64>(_12347_mant << static_cast<jule::Uint>(55LL - _1349_b));
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_232dd8d0a_mul_by_log2_log10(static_cast<jule::Int>(_13313_e2 + 54LL)))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _232dd8d0a_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _232dd8d0a_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(static_cast<jule::U64>(_15514_di >> _1689_extra),static_cast<jule::U64>(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_232dd8d0a_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



void _232dd8d0a_format_decimal(_231e5e5ce_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _232dd8d0a_U64_POW10[_20490_prec];
	jule::Int _20613_trimmed = 0LL;
	while (_20445_m >= _2059_max) {
		{
			jule::U64 _20814_a = jule::div(_20445_m,10LL);
			jule::U64 _20817_b = jule::mod(_20445_m,10LL);
			std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),jule::mod(_20445_m,10LL));
			_20445_m=_20814_a;
			(_20613_trimmed)++;
			if (_20817_b > 5LL) {
				_20474_round_up=true;
			} else if (_20817_b < 5LL) {
				_20474_round_up=false;
			} else {
				_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
			}
			if (_20817_b != 0LL) {
				_20457_trunc=true;
			}
		}
	_iter_next_4866839408:;
	}
	_iter_end_4866839408:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m = jule::div(_20445_m,10LL);
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	while (_23513_v >= 100LL) {
		{
			jule::U64 _23717_v1 = 0LLU;
			jule::U64 _23817_v2 = 0LLU;
			if ((_23513_v >> 32LL) == 0LL) {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(jule::mod(static_cast<jule::U32>(_23513_v),100LL)));
			} else {
				std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(_23513_v,100LL)),static_cast<jule::U64>(jule::mod(_23513_v,100LL)));
			}
			_23313_n-=2LL;
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
			_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
			_23513_v=_23717_v1;
		}
	_iter_next_4866839888:;
	}
	_iter_end_4866839888:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	while (_20424_d._field_d[_20424_d._field_nd - 1LL] == '0') {
		{
			(_20424_d._field_nd)--;
			(_20613_trimmed)++;
		}
	_iter_next_4866849840:;
	}
	_iter_end_4866849840:;
	_20424_d._field_dp=static_cast<jule::Int>(_20424_d._field_nd + _20613_trimmed);
}



void _232dd8d0a_ryu_ftoa_shortest(_231e5e5ce_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_231e5e5ce_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_2335950dc_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_232dd8d0a_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _232dd8d0a_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_232dd8d0a_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _232dd8d0a_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _231e5e5ce_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _232dd8d0a_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _232dd8d0a_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _232dd8d0a_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _232dd8d0a_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _232dd8d0a_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _232dd8d0a_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_232dd8d0a_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_232dd8d0a_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_232dd8d0a_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(static_cast<jule::U64>(_28713_dl >> _3299_extra),static_cast<jule::U64>(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(static_cast<jule::U64>(_28813_dc >> _3299_extra),static_cast<jule::U64>(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(static_cast<jule::U64>(_28913_du >> _3299_extra),static_cast<jule::U64>(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_232dd8d0a_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



jule::Int _232dd8d0a_mul_by_log2_log10(jule::Int _38322_x) {
	return static_cast<jule::Int>((_38322_x * 78913LL) >> 18LL);
}



jule::Int _232dd8d0a_mul_by_log10_log2(jule::Int _39322_x) {
	return static_cast<jule::Int>((_39322_x * 108853LL) >> 15LL);
}



std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _232dd8d0a_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_231e5e5ce_FloatInfo& _40218_flt) {
	jule::U64 _40236_lower = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40262_upper = jule::U64();
	jule::Int _40274_e2 = jule::Int();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 1LL);
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=static_cast<jule::Int>(_40130_exp - 2LL);
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



void _232dd8d0a_ryu_digits(_231e5e5ce_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _232dd8d0a_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _232dd8d0a_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _232dd8d0a_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_232dd8d0a_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 500000000LL) || ((_41715_clo == 500000000LL) && _41593_cup);
		_232dd8d0a_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		while (_43517_v > 0LL) {
			{
				jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
				jule::U32 _43722_v2 = jule::mod(_43517_v,10LL);
				std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),jule::mod(_43517_v,10LL));
				_43517_v=_43718_v1;
				(_43417_n)--;
				_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
			}
		_iter_next_4866954096:;
		}
		_iter_end_4866954096:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_232dd8d0a_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,static_cast<jule::Int>(_41520_d._field_nd + 8LL));
	}
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[_41520_d._field_nd - 1LL] == '0')) {
		{
			(_41520_d._field_nd)--;
		}
	_iter_next_4866950496:;
	}
	_iter_end_4866950496:;
	while ((_41520_d._field_nd > 0LL) && (_41520_d._field_d[0LL] == '0')) {
		{
			(_41520_d._field_nd)--;
			(_41520_d._field_dp)--;
			_41520_d._field_d=_41520_d._field_d.slice(1LL);
		}
	_iter_next_4866953856:;
	}
	_iter_end_4866953856:;
}



void _232dd8d0a_ryu_digits32(_231e5e5ce_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=static_cast<jule::Int>(_46166_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	while (_46121_upper > 0LL) {
		{
			jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
			jule::U32 _47718_c = jule::div(_46059_central,10LL);
			jule::U32 _47725_cdigit = jule::mod(_46059_central,10LL);
			std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),jule::mod(_46059_central,10LL));
			jule::U32 _47813_u = jule::div(_46121_upper,10LL);
			if (_47613_l > _47813_u) {
				goto _iter_end_4866971664;
			}
			if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
				(_47718_c)++;
				_47725_cdigit=0LL;
				_46151_cup=false;
			}
			(_46613_trimmed)++;
			_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
			_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
			std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
		}
	_iter_next_4866971664:;
	}
	_iter_end_4866971664:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	while (_51813_n > _46022_d._field_nd) {
		{
			jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
			jule::U32 _52018_v2 = jule::mod(_51713_v,100LL);
			std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),jule::mod(_51713_v,100LL));
			_46022_d._field_d[_51813_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
			_46022_d._field_d[_51813_n - 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
			_51813_n-=2LL;
			_51713_v=_52014_v1;
		}
	_iter_next_4866982960:;
	}
	_iter_end_4866982960:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[_51813_n]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=static_cast<jule::Int>(_46166_endindex + 1LL);
	_46022_d._field_dp=static_cast<jule::Int>(_46022_d._field_nd + _46613_trimmed);
}



std::tuple<jule::U32,jule::Int,jule::Bool> _232dd8d0a_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::U32 _54251_resM = jule::U32();
	jule::Int _54262_resE = jule::Int();
	jule::Bool _54273_exact = jule::Bool();
	if (_54241_q == 0LL) {
		_54251_resM = static_cast<jule::U32>(_54220_m << 6LL);
		_54262_resE = static_cast<jule::Int>(_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _232172407_DETAILED_POWS_OF_TEN[_54241_q - -348LL][1LL];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _2335950dc_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_232dd8d0a_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



std::tuple<jule::U64,jule::Int,jule::Bool> _232dd8d0a_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::U64 _57052_resM = jule::U64();
	jule::Int _57063_resE = jule::Int();
	jule::Bool _57074_exact = jule::Bool();
	if (_57042_q == 0LL) {
		_57052_resM = static_cast<jule::U64>(_57021_m << 8LL);
		_57063_resE = static_cast<jule::Int>(_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _232172407_DETAILED_POWS_OF_TEN[_57042_q - -348LL];
	if (_57042_q < 0LL) {
		_57913_pow[0LL]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_232dd8d0a_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _2335950dc_mul64(_57021_m,_57913_pow[0LL]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _2335950dc_mul64(_57021_m,_57913_pow[1LL]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _2335950dc_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = static_cast<jule::U64>((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



jule::Bool _232dd8d0a_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	for (; _59813_i < _59434_k; (_59813_i)++) {
		{
			if (jule::mod(_59426_m,5LL) != 0LL) {
				return false;
			}
			_59426_m = jule::div(_59426_m,5LL);
		}
	_iter_next_4867032944:;
	}
	_iter_end_4867032944:;
	return true;
}



std::tuple<jule::U32,jule::U32> _232dd8d0a_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1000000000LL)),static_cast<jule::U32>(jule::mod(_61014_x,1000000000LL)));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _2335950dc_mul64(static_cast<jule::U64>(_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1000000000LL)));
}



jule::Int _232e74d1e_digit_zero(jule::Slice<jule::U8> _26519_dst) {
	{
		auto expr = _26519_dst;
		auto it = expr.begin();
		_iter_begin_4867042880:;
		if (it != expr.end()) {
			jule::Int _232e74d1e_i = it - expr.begin();
			{
				_26519_dst[_232e74d1e_i]='0';
			}
			_iter_next_4867042880:;
			++it;
			_232e74d1e_i++;
			goto _iter_begin_4867042880;
		}
		_iter_end_4867042880:;
	}
	return static_cast<jule::I64>(_26519_dst.len());
}



void _232e74d1e_trim(_232e74d1e_Decimal& _27514_a) {
	while ((_27514_a._field_nd > 0LL) && (_27514_a._field_d[_27514_a._field_nd - 1LL] == '0')) {
		{
			(_27514_a._field_nd)--;
		}
	_iter_next_4867043664:;
	}
	_iter_end_4867043664:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



void _232e74d1e_right_shift(_232e74d1e_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	for (; (_29013_n >> _28533_k) == 0LL; (_28613_r)++) {
		{
			if (_28613_r >= _28521_a._field_nd) {
				if (_29013_n == 0LL) {
					_28521_a._field_nd=0LL;
					return;
				}
				while ((_29013_n >> _28533_k) == 0LL) {
					{
						_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
						(_28613_r)++;
					}
				_iter_next_4867055536:;
				}
				_iter_end_4867055536:;
				goto _iter_end_4867050832;
			}
			jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _30413_c) - '0');
		}
	_iter_next_4867050832:;
	}
	_iter_end_4867050832:;
	_28521_a._field_dp-=static_cast<jule::Int>(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	for (; _28613_r < _28521_a._field_nd; (_28613_r)++) {
		{
			jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[_28613_r]);
			jule::Uint _31413_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_31413_dig + '0');
			(_28713_w)++;
			_29013_n=static_cast<jule::Uint>(((_29013_n * 10LL) + _31313_c) - '0');
		}
	_iter_next_4867060352:;
	}
	_iter_end_4867060352:;
	while (_29013_n > 0LL) {
		{
			jule::Uint _32313_dig = _29013_n >> _28533_k;
			_29013_n&=_3099_mask;
			if (_28713_w < 800LL) {
				_28521_a._field_d[_28713_w]=static_cast<jule::U8>(_32313_dig + '0');
				(_28713_w)++;
			} else if (_32313_dig > 0LL) {
				_28521_a._field_trunc=true;
			}
			_29013_n=static_cast<jule::Uint>(_29013_n * 10LL);
		}
	_iter_next_4867064256:;
	}
	_iter_end_4867064256:;
	_28521_a._field_nd=_28713_w;
	_232e74d1e_trim(_28521_a);
}



jule::Bool _232e74d1e_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	for (; _34013_i < _33935_s.len(); (_34013_i)++) {
		{
			if (_34013_i >= _33924_b.len()) {
				return true;
			}
			if (_33924_b[_34013_i] != _33935_s[_34013_i]) {
				return _33924_b[_34013_i] < _33935_s[_34013_i];
			}
		}
	_iter_next_4867074080:;
	}
	_iter_end_4867074080:;
	return false;
}



void _232e74d1e_left_shift(_232e74d1e_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _232e74d1e_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_232e74d1e_prefix_is_less_than(_35320_a._field_d.slice(0LL,_35320_a._field_nd),_232e74d1e_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	for (; _35913_r >= 0LL; (_35913_r)--) {
		{
			_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[_35913_r]) - '0') << _35332_k);
			jule::Uint _36713_quo = jule::div(_36313_n,10LL);
			jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_36813_rem + '0');
			} else if (_36813_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_36713_quo;
		}
	_iter_next_4867086272:;
	}
	_iter_end_4867086272:;
	while (_36313_n > 0LL) {
		{
			jule::Uint _38013_quo = jule::div(_36313_n,10LL);
			jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
			(_36013_w)--;
			if (_36013_w < 800LL) {
				_35320_a._field_d[_36013_w]=static_cast<jule::U8>(_38113_rem + '0');
			} else if (_38113_rem != 0LL) {
				_35320_a._field_trunc=true;
			}
			_36313_n=_38013_quo;
		}
	_iter_next_4867089904:;
	}
	_iter_end_4867089904:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_232e74d1e_trim(_35320_a);
}



jule::Bool _232e74d1e_should_round_up(_232e74d1e_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[_40033_nd] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (jule::mod(_40021_a._field_d[_40033_nd - 1LL] - '0',2LL) != 0LL);
	}
	return _40021_a._field_d[_40033_nd] >= '5';
}



jule::Str _232e766a0_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _232e766a0_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _232e766a0_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



jule::Str _232e766a0_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _232e766a0_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _232e766a0_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



jule::Str _232e766a0_itoa(jule::Int _8213_i) {
	return _232e766a0_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



jule::Str _232e766a0_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i,_8510_i + 1LL);
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(_8510_i * 2LL,(_8510_i * 2LL) + 2LL);
}



jule::Bool _232e766a0_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



std::tuple<jule::Slice<jule::U8>,jule::Str> _232e766a0_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	jule::Str _9992_s = jule::Str();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			while (_9934_u >= 1000000000LL) {
				{
					jule::U64 _12521_q = jule::div(_9934_u,1000000000LL);
					jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1000000000LL));
					jule::Int _12725_j = 4LL;
					for (; _12725_j > 0LL; (_12725_j)--) {
						{
							jule::Uint _12925_is = jule::mod(_12625_us,100LL) * 2LL;
							_12625_us = jule::div(_12625_us,100LL);
							_10613_i-=2LL;
							_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
							_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
						}
					_iter_next_4867135504:;
					}
					_iter_end_4867135504:;
					(_10613_i)--;
					_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
					_9934_u=_12521_q;
				}
			_iter_next_4867133632:;
			}
			_iter_end_4867133632:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		while (_14717_us >= 100LL) {
			{
				jule::Uint _14917_is = jule::mod(_14717_us,100LL) * 2LL;
				_14717_us = jule::div(_14717_us,100LL);
				_10613_i-=2LL;
				_10513_a[_10613_i + 1LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
				_10513_a[_10613_i + 0LL]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
			}
		_iter_next_4867146912:;
		}
		_iter_end_4867146912:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_232e766a0_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_2335950dc_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		while (_9934_u >= _17313_b) {
			{
				(_10613_i)--;
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
				_9934_u>>=_17213_shift;
			}
		_iter_next_4867133344:;
		}
		_iter_end_4867133344:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		while (_9934_u >= _18513_b) {
			{
				(_10613_i)--;
				jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
				_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
				_9934_u=_19117_q;
			}
		_iter_next_4867167456:;
		}
		_iter_end_4867167456:;
		(_10613_i)--;
		_10513_a[_10613_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[_10613_i]='-';
	}
	if (_9964_append_) {
		_9981_d=jule::append(_9917_dst,_10513_a.slice(_10613_i));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(_10613_i));
	return std::make_tuple(_9981_d,_9992_s);
}



void _231e64150_push_opt_level(jule::Int _2823_level) {
	{
		auto _match_expr{ _2823_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_4867309120; }
		_case_begin_4867309120:;
		{
			(*(_231e64150_OPT_COPY))=false;
			(*(_231e64150_OPT_DEADCODE))=false;
			(*(_231e64150_OPT_APPEND))=false;
			(*(_231e64150_OPT_MATH))=false;
			(*(_231e64150_OPT_ACCESS))=false;
			(*(_231e64150_OPT_INLINE))=false;
		}
		goto _match_end_4867307920;
		_case_end_4867309120:;
		if (!((1LLU) == _match_expr)) { goto _case_end_4867309216; }
		_case_begin_4867309216:;
		{
			(*(_231e64150_OPT_COPY))=true;
			(*(_231e64150_OPT_DEADCODE))=true;
			(*(_231e64150_OPT_APPEND))=true;
			(*(_231e64150_OPT_MATH))=true;
			(*(_231e64150_OPT_ACCESS))=true;
			(*(_231e64150_OPT_INLINE))=true;
		}
		goto _match_end_4867307920;
		_case_end_4867309216:;
		_case_begin_4867307728:;
		{
			return;
		}
		goto _match_end_4867307920;
		_case_end_4867307728:;
		_match_end_4867307920:;
	}
}



jule::Int _233414049_get_last_fs_error(void) {
	jule::Int _739_err = _232037124_get_last_errno();
	{
		auto _match_expr{ _739_err };
		if (!((13LL) == _match_expr)) { goto _case_end_4867344704; }
		_case_begin_4867344704:;
		{
			return 1LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344704:;
		if (!((5LL) == _match_expr)) { goto _case_end_4867344800; }
		_case_begin_4867344800:;
		{
			return 2LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344800:;
		if (!((62LL) == _match_expr)) { goto _case_end_4867344336; }
		_case_begin_4867344336:;
		{
			return 3LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344336:;
		if (!((63LL) == _match_expr)) { goto _case_end_4867344432; }
		_case_begin_4867344432:;
		{
			return 4LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344432:;
		if (!((2LL) == _match_expr)) { goto _case_end_4867344528; }
		_case_begin_4867344528:;
		{
			return 5LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344528:;
		if (!((20LL) == _match_expr)) { goto _case_end_4867344912; }
		_case_begin_4867344912:;
		{
			return 6LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344912:;
		if (!((84LL) == _match_expr)) { goto _case_end_4867345008; }
		_case_begin_4867345008:;
		{
			return 7LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867345008:;
		if (!((9LL) == _match_expr)) { goto _case_end_4867345104; }
		_case_begin_4867345104:;
		{
			return 8LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867345104:;
		if (!((24LL) == _match_expr)) { goto _case_end_4867343728; }
		_case_begin_4867343728:;
		{
			return 9LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867343728:;
		if (!((23LL) == _match_expr)) { goto _case_end_4867343824; }
		_case_begin_4867343824:;
		{
			return 10LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867343824:;
		if (!((12LL) == _match_expr)) { goto _case_end_4867343920; }
		_case_begin_4867343920:;
		{
			return 11LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867343920:;
		if (!((17LL) == _match_expr)) { goto _case_end_4867344016; }
		_case_begin_4867344016:;
		{
			return 12LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867344016:;
		if (!((4LL) == _match_expr)) { goto _case_end_4867345792; }
		_case_begin_4867345792:;
		{
			return 13LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867345792:;
		if (!((22LL) == _match_expr)) { goto _case_end_4867345888; }
		_case_begin_4867345888:;
		{
			return 14LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867345888:;
		if (!((21LL) == _match_expr)) { goto _case_end_4867346000; }
		_case_begin_4867346000:;
		{
			return 15LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346000:;
		if (!((98LL) == _match_expr)) { goto _case_end_4867346112; }
		_case_begin_4867346112:;
		{
			return 16LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346112:;
		if (!((28LL) == _match_expr)) { goto _case_end_4867346224; }
		_case_begin_4867346224:;
		{
			return 17LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346224:;
		if (!((6LL) == _match_expr)) { goto _case_end_4867346336; }
		_case_begin_4867346336:;
		{
			return 18LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346336:;
		if (!((30LL) == _match_expr)) { goto _case_end_4867346448; }
		_case_begin_4867346448:;
		{
			return 19LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346448:;
		if (!((35LL) == _match_expr)) { goto _case_end_4867346560; }
		_case_begin_4867346560:;
		{
			return 20LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346560:;
		if (!((26LL) == _match_expr || (16LL) == _match_expr)) { goto _case_end_4867346672; }
		_case_begin_4867346672:;
		{
			return 21LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346672:;
		if (!((27LL) == _match_expr)) { goto _case_end_4867346784; }
		_case_begin_4867346784:;
		{
			return 22LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346784:;
		if (!((32LL) == _match_expr)) { goto _case_end_4867346896; }
		_case_begin_4867346896:;
		{
			return 23LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867346896:;
		if (!((34LL) == _match_expr)) { goto _case_end_4867347008; }
		_case_begin_4867347008:;
		{
			return 24LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867347008:;
		if (!((29LL) == _match_expr)) { goto _case_end_4867347120; }
		_case_begin_4867347120:;
		{
			return 25LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867347120:;
		if (!((55LL) == _match_expr)) { goto _case_end_4867347232; }
		_case_begin_4867347232:;
		{
			return 26LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867347232:;
		if (!((94LL) == _match_expr)) { goto _case_end_4867347344; }
		_case_begin_4867347344:;
		{
			return 27LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867347344:;
		if (!((66LL) == _match_expr)) { goto _case_end_4867347456; }
		_case_begin_4867347456:;
		{
			return 28LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867347456:;
		_case_begin_4867342512:;
		{
			return 0LLU;
		}
		goto _match_end_4867343264;
		_case_end_4867342512:;
		_match_end_4867343264:;
	}
}



jule::Bool _2337a3707_is_graphic(jule::I32 _5619_r) {
	if (static_cast<jule::U32>(_5619_r) <= 255LL) {
		return (_23380876d__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_5619_r))] & 144LL) != 0LL;
	}
	return _2337a3707_is_in(_5619_r,_2337a3707_GRAPHIC_RANGES);
}



jule::Bool _2337a3707_is_in(jule::I32 _6614_r,jule::Slice<jule::Ptr<_234223e9b_RangeTable>> _6623_ranges) {
	{
		auto expr = _6623_ranges;
		auto it = expr.begin();
		_iter_begin_4871948272:;
		if (it != expr.end()) {
			jule::Ptr<_234223e9b_RangeTable> _2337a3707_inside = *it;
			{
				if (_234223e9b_is(_2337a3707_inside,_6614_r)) {
					return true;
				}
			}
			_iter_next_4871948272:;
			++it;
			goto _iter_begin_4871948272;
		}
		_iter_end_4871948272:;
	}
	return false;
}



jule::Bool _2337a3707_is_letter(jule::I32 _7618_r) {
	if (static_cast<jule::U32>(_7618_r) <= 255LL) {
		return (_23380876d__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_7618_r))] & 96LL) != 0LL;
	}
	return _234223e9b_is_excluding_latin(_23380876d_LETTER,_7618_r);
}



jule::Bool _2337a3707_is_number(jule::I32 _8418_r) {
	if (static_cast<jule::U32>(_8418_r) <= 255LL) {
		return (_23380876d__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_8418_r))] & 4LL) != 0LL;
	}
	return _234223e9b_is_excluding_latin(_23380876d_NUMBER,_8418_r);
}



jule::Bool _2337a3707_is_punct(jule::I32 _9217_r) {
	if (static_cast<jule::U32>(_9217_r) <= 255LL) {
		return (_23380876d__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_9217_r))] & 2LL) != 0LL;
	}
	return _234223e9b_is(_23380876d_PUNCT,_9217_r);
}



jule::Bool _2337a3707_is_space(jule::I32 _10717_r) {
	if (static_cast<jule::U32>(_10717_r) <= 255LL) {
		{
			auto _match_expr{ _10717_r };
			if (!(('\t') == _match_expr || ('\n') == _match_expr || ('\v') == _match_expr || ('\f') == _match_expr || ('\r') == _match_expr || (' ') == _match_expr || (133LL) == _match_expr || (160LL) == _match_expr)) { goto _case_end_4871962032; }
			_case_begin_4871962032:;
			{
				return true;
			}
			goto _match_end_4871961920;
			_case_end_4871962032:;
			_match_end_4871961920:;
		}
		return false;
	}
	return _234223e9b_is_excluding_latin(_23380876d_WHITE_SPACE,_10717_r);
}



jule::Bool _233808a59_is_digit(jule::I32 _3917_r) {
	if (_3917_r <= 255LL) {
		return ('0' <= _3917_r) && (_3917_r <= '9');
	}
	return _234223e9b_is_excluding_latin(_23380876d_DIGIT,_3917_r);
}



std::tuple<jule::I32,jule::Bool> _234223e9b___to(jule::Int _1259_case,jule::I32 _12520_r,jule::Slice<_234223e9b_CaseRange> _12529_case_range) {
	jule::I32 _12556_mapped_rune = jule::I32();
	jule::Bool _12575_found_mapping = jule::Bool();
	if ((_1259_case < 0LL) || (3LL <= _1259_case)) {
		_12556_mapped_rune = 65533LL;
		_12575_found_mapping = false;
		return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
	}
	jule::Int _13113_lo = 0LL;
	jule::I64 _13213_hi = _12529_case_range.len();
	while (_13113_lo < _13213_hi) {
		{
			jule::Int _13413_m = _13113_lo + jule::div(_13213_hi - _13113_lo,2LL);
			_234223e9b_CaseRange _13513_cr = _12529_case_range[_13413_m];
			if ((static_cast<jule::I32>(_13513_cr._field_lo) <= _12520_r) && (_12520_r <= static_cast<jule::I32>(_13513_cr._field_hi))) {
				jule::I32 _13717_delta = _13513_cr._field_delta[_1259_case];
				if (_13717_delta > 1114111LL) {
					_12556_mapped_rune = static_cast<jule::I32>(static_cast<jule::I32>(_13513_cr._field_lo) + (((_12520_r - static_cast<jule::I32>(_13513_cr._field_lo)) & -2LL) | static_cast<jule::I32>(_1259_case & 1LL)));
					_12575_found_mapping = true;
					return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
				}
				_12556_mapped_rune = static_cast<jule::I32>(_12520_r + _13717_delta);
				_12575_found_mapping = true;
				return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
			}
			if (_12520_r < static_cast<jule::I32>(_13513_cr._field_lo)) {
				_13213_hi=_13413_m;
			} else {
				_13113_lo=static_cast<jule::Int>(_13413_m + 1LL);
			}
		}
	_iter_next_4871965920:;
	}
	_iter_end_4871965920:;
	_12556_mapped_rune = _12520_r;
	_12575_found_mapping = false;
	return std::make_tuple(_12556_mapped_rune,_12575_found_mapping);
}



jule::I32 _234223e9b_to(jule::Int _16311_case,jule::I32 _16326_r) {
	std::tie(_16326_r,std::ignore) = _234223e9b___to(_16311_case,_16326_r,_23380876d_CASE_RANGES);
	return _16326_r;
}



jule::I32 _234223e9b_to_upper(jule::I32 _16921_r) {
	if (_16921_r <= 127LL) {
		if (('a' <= _16921_r) && (_16921_r <= 'z')) {
			_16921_r-=32LL;
		}
		return _16921_r;
	}
	return static_cast<jule::I32>(_234223e9b_to(0LL,_16921_r));
}



jule::I32 _234223e9b_to_lower(jule::I32 _18021_r) {
	if (_18021_r <= 127LL) {
		if (('A' <= _18021_r) && (_18021_r <= 'Z')) {
			_18021_r+=32LL;
		}
		return _18021_r;
	}
	return static_cast<jule::I32>(_234223e9b_to(1LL,_18021_r));
}



jule::Bool _234223e9b_is16(jule::Slice<_234223e9b_Range16> _1919_ranges,jule::U16 _19128_r) {
	if ((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LL)) {
		{
			auto expr = _1919_ranges;
			auto it = expr.begin();
			_iter_begin_4871995168:;
			if (it != expr.end()) {
				jule::Int _234223e9b_i = it - expr.begin();
				{
					_234223e9b_Range16* _19417_range = (&(_1919_ranges[_234223e9b_i]));
					{
						if (_19128_r < _19417_range->_field_lo) {
							return false;
						}
						if (_19128_r <= _19417_range->_field_hi) {
							return (_19417_range->_field_stride == 1LL) || (jule::mod(_19128_r - _19417_range->_field_lo,_19417_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4871995168:;
				++it;
				_234223e9b_i++;
				goto _iter_begin_4871995168;
			}
			_iter_end_4871995168:;
		}
		return false;
	}
	jule::Int _20813_lo = 0LL;
	jule::I64 _20913_hi = _1919_ranges.len();
	while (_20813_lo < _20913_hi) {
		{
			jule::Int _21113_m = _20813_lo + jule::div(_20913_hi - _20813_lo,2LL);
			_234223e9b_Range16* _21213_range = (&(_1919_ranges[_21113_m]));
			{
				if ((_21213_range->_field_lo <= _19128_r) && (_19128_r <= _21213_range->_field_hi)) {
					return (_21213_range->_field_stride == 1LL) || (jule::mod(_19128_r - _21213_range->_field_lo,_21213_range->_field_stride) == 0LL);
				}
				if (_19128_r < _21213_range->_field_lo) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::Int>(_21113_m + 1LL);
				}
			}
		}
	_iter_next_4871946736:;
	}
	_iter_end_4871946736:;
	return false;
}



jule::Bool _234223e9b_is32(jule::Slice<_234223e9b_Range32> _2289_ranges,jule::U32 _22828_r) {
	if (_2289_ranges.len() <= 18LL) {
		{
			auto expr = _2289_ranges;
			auto it = expr.begin();
			_iter_begin_4872001216:;
			if (it != expr.end()) {
				jule::Int _234223e9b_i = it - expr.begin();
				{
					_234223e9b_Range32* _23117_range = (&(_2289_ranges[_234223e9b_i]));
					{
						if (_22828_r < _23117_range->_field_lo) {
							return false;
						}
						if (_22828_r <= _23117_range->_field_hi) {
							return (_23117_range->_field_stride == 1LL) || (jule::mod(_22828_r - _23117_range->_field_lo,_23117_range->_field_stride) == 0LL);
						}
					}
				}
				_iter_next_4872001216:;
				++it;
				_234223e9b_i++;
				goto _iter_begin_4872001216;
			}
			_iter_end_4872001216:;
		}
		return false;
	}
	jule::Int _24513_lo = 0LL;
	jule::I64 _24613_hi = _2289_ranges.len();
	while (_24513_lo < _24613_hi) {
		{
			jule::Int _24813_m = _24513_lo + jule::div(_24613_hi - _24513_lo,2LL);
			_234223e9b_Range32* _24913_range = (&(_2289_ranges[_24813_m]));
			{
				if ((_24913_range->_field_lo <= _22828_r) && (_22828_r <= _24913_range->_field_hi)) {
					return (_24913_range->_field_stride == 1LL) || (jule::mod(_22828_r - _24913_range->_field_lo,_24913_range->_field_stride) == 0LL);
				}
				if (_22828_r < _24913_range->_field_lo) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::Int>(_24813_m + 1LL);
				}
			}
		}
	_iter_next_4872004816:;
	}
	_iter_end_4872004816:;
	return false;
}



jule::Bool _234223e9b_is(jule::Ptr<_234223e9b_RangeTable> _26511_range_tab,jule::I32 _26535_r) {
	jule::Slice<_234223e9b_Range16> &_26610_r16 = _26511_range_tab->_field_r16;
	if ((_26610_r16.len() > 0LL) && (static_cast<jule::U32>(_26535_r) <= static_cast<jule::U32>(_26610_r16[_26610_r16.len() - 1LL]._field_hi))) {
		return _234223e9b_is16(_26610_r16,static_cast<jule::U16>(_26535_r));
	}
	jule::Slice<_234223e9b_Range32> &_27110_r32 = _26511_range_tab->_field_r32;
	if ((_27110_r32.len() > 0LL) && (_26535_r >= static_cast<jule::I32>(_27110_r32[0LL]._field_lo))) {
		return _234223e9b_is32(_27110_r32,static_cast<jule::U32>(_26535_r));
	}
	return false;
}



jule::Bool _234223e9b_is_excluding_latin(jule::Ptr<_234223e9b_RangeTable> _27823_range_tab,jule::I32 _27847_r) {
	{
		jule::Slice<_234223e9b_Range16> &_28014_r16 = _27823_range_tab->_field_r16;
		jule::Int _28213_off = _27823_range_tab->_field_latin_offset;
		if ((_28014_r16.len() > _28213_off) && (static_cast<jule::U32>(_27847_r) <= static_cast<jule::U32>(_28014_r16[_28014_r16.len() - 1LL]._field_hi))) {
			return _234223e9b_is16(_28014_r16.slice(_28213_off),static_cast<jule::U16>(_27847_r));
		}
	}
	jule::Slice<_234223e9b_Range32> &_28710_r32 = _27823_range_tab->_field_r32;
	if ((_28710_r32.len() > 0LL) && (_27847_r >= static_cast<jule::I32>(_28710_r32[0LL]._field_lo))) {
		return _234223e9b_is32(_28710_r32,static_cast<jule::U32>(_27847_r));
	}
	return false;
}



jule::Bool _234223e9b_is_upper(jule::I32 _29517_r) {
	if (static_cast<jule::U32>(_29517_r) <= 255LL) {
		return (_23380876d__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_29517_r))] & 96LL) == 32LL;
	}
	return _234223e9b_is_excluding_latin(_23380876d_UPPER,_29517_r);
}



jule::Bool _234223e9b_is_lower(jule::I32 _30417_r) {
	if (static_cast<jule::U32>(_30417_r) <= 255LL) {
		return (_23380876d__PROPERTIES[static_cast<jule::Int>(static_cast<jule::U8>(_30417_r))] & 96LL) == 64LL;
	}
	return _234223e9b_is_excluding_latin(_23380876d_LOWER,_30417_r);
}



jule::Bool _23381108e_full_rune(jule::Slice<jule::U8> _13718_p) {
	if (_13718_p.len() == 0LL) {
		return false;
	}
	jule::U8 _1419_x = _23381108e_FIRST[static_cast<jule::Int>(_13718_p[0LL])];
	if (_13718_p.len() >= static_cast<jule::Int>(_1419_x & 7LL)) {
		return true;
	}
	_23381108e_accept_range _1469_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_1419_x >> 4LL)];
	if ((_13718_p.len() > 1LL) && ((_13718_p[1LL] < _1469_accept._field_lo) || (_1469_accept._field_hi < _13718_p[1LL]))) {
		return true;
	} else if ((_13718_p.len() > 2LL) && ((_13718_p[2LL] < 128LL) || (191LL < _13718_p[2LL]))) {
		return true;
	}
	return false;
}



jule::Bool _23381108e_full_rune_str(jule::Str _15622_s) {
	if (_15622_s.len() == 0LL) {
		return false;
	}
	jule::U8 _1609_x = _23381108e_FIRST[static_cast<jule::Int>(_15622_s[0LL])];
	if (_15622_s.len() >= static_cast<jule::Int>(_1609_x & 7LL)) {
		return true;
	}
	_23381108e_accept_range _1659_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_1609_x >> 4LL)];
	if ((_15622_s.len() > 1LL) && ((_15622_s[1LL] < _1659_accept._field_lo) || (_1659_accept._field_hi < _15622_s[1LL]))) {
		return true;
	} else if ((_15622_s.len() > 2LL) && ((_15622_s[2LL] < 128LL) || (191LL < _15622_s[2LL]))) {
		return true;
	}
	return false;
}



std::tuple<jule::I32,jule::Int> _23381108e_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::I32 _18233_r = jule::I32();
	jule::Int _18242_size = jule::Int();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[0LL];
	jule::U8 _1879_x = _23381108e_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = static_cast<jule::U8>((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_23381108e_accept_range _1969_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[1LL];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[2LL];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = static_cast<jule::I32>(((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[3LL];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



std::tuple<jule::I32,jule::Int> _23381108e_decode_rune_str(jule::Str _22924_s) {
	jule::I32 _22934_r = jule::I32();
	jule::Int _22943_size = jule::Int();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[0LL];
	jule::U8 _2349_x = _23381108e_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = static_cast<jule::U8>((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_23381108e_accept_range _2439_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[1LL];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[2LL];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = static_cast<jule::I32>(((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[3LL];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



std::tuple<jule::I32,jule::Int> _23381108e_decode_last_rune(jule::Slice<jule::U8> _27625_p) {
	jule::I32 _27638_r = jule::I32();
	jule::Int _27647_size = jule::Int();
	if (_27625_p.len() == 0LL) {
		_27638_r = 65533LL;
		_27647_size = 0LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _2809_end = _27625_p.len();
	jule::I64 _28113_start = _2809_end - 1LL;
	_27638_r=static_cast<jule::I32>(_27625_p[_28113_start]);
	if (_27638_r < 128LL) {
		_27638_r = _27638_r;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	jule::I64 _28913_lim = _2809_end - 4LL;
	if (_28913_lim < 0LL) {
		_28913_lim=0LL;
	}
	(_28113_start)--;
	for (; _28113_start >= _28913_lim; (_28113_start)--) {
		{
			if (_23381108e_rune_start(_27625_p[_28113_start])) {
				goto _iter_end_4872213072;
			}
		}
	_iter_next_4872213072:;
	}
	_iter_end_4872213072:;
	if (_28113_start < 0LL) {
		_28113_start=0LL;
	}
	std::tie(_27638_r,_27647_size) = _23381108e_decode_rune(_27625_p.slice(_28113_start,_2809_end));
	if ((_28113_start + _27647_size) != _2809_end) {
		_27638_r = 65533LL;
		_27647_size = 1LL;
		return std::make_tuple(_27638_r,_27647_size);
	}
	_27638_r = _27638_r;
	_27647_size = _27647_size;
	return std::make_tuple(_27638_r,_27647_size);
}



std::tuple<jule::I32,jule::Int> _23381108e_decode_last_rune_str(jule::Str _31729_s) {
	jule::I32 _31739_r = jule::I32();
	jule::Int _31748_size = jule::Int();
	if (_31729_s.len() == 0LL) {
		_31739_r = 65533LL;
		_31748_size = 0LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _3219_end = _31729_s.len();
	jule::I64 _32213_start = _3219_end - 1LL;
	_31739_r=static_cast<jule::I32>(_31729_s[_32213_start]);
	if (_31739_r < 128LL) {
		_31739_r = _31739_r;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	jule::I64 _33013_lim = _3219_end - 4LL;
	if (_33013_lim < 0LL) {
		_33013_lim=0LL;
	}
	(_32213_start)--;
	for (; _32213_start >= _33013_lim; (_32213_start)--) {
		{
			if (_23381108e_rune_start(_31729_s[_32213_start])) {
				goto _iter_end_4872226176;
			}
		}
	_iter_next_4872226176:;
	}
	_iter_end_4872226176:;
	if (_32213_start < 0LL) {
		_32213_start=0LL;
	}
	std::tie(_31739_r,_31748_size) = _23381108e_decode_rune_str(_31729_s.slice(_32213_start,_3219_end));
	if ((_32213_start + _31748_size) != _3219_end) {
		_31739_r = 65533LL;
		_31748_size = 1LL;
		return std::make_tuple(_31739_r,_31748_size);
	}
	_31739_r = _31739_r;
	_31748_size = _31748_size;
	return std::make_tuple(_31739_r,_31748_size);
}



jule::Int _23381108e_rune_len(jule::I32 _35217_r) {
	{
		if (!((_35217_r < 0LL))) { goto _case_end_4872234336; }
		_case_begin_4872234336:;
		{
			return -1LL;
		}
		goto _match_end_4872226384;
		_case_end_4872234336:;
		if (!((_35217_r <= 127LLU))) { goto _case_end_4872234432; }
		_case_begin_4872234432:;
		{
			return 1LL;
		}
		goto _match_end_4872226384;
		_case_end_4872234432:;
		if (!((_35217_r <= 2047LLU))) { goto _case_end_4872234688; }
		_case_begin_4872234688:;
		{
			return 2LL;
		}
		goto _match_end_4872226384;
		_case_end_4872234688:;
		if (!(((55296LL <= _35217_r) && (_35217_r <= 57343LL)))) { goto _case_end_4872234784; }
		_case_begin_4872234784:;
		{
			return -1LL;
		}
		goto _match_end_4872226384;
		_case_end_4872234784:;
		if (!((_35217_r <= 65535LLU))) { goto _case_end_4872234896; }
		_case_begin_4872234896:;
		{
			return 3LL;
		}
		goto _match_end_4872226384;
		_case_end_4872234896:;
		if (!((_35217_r <= 1114111LL))) { goto _case_end_4872233984; }
		_case_begin_4872233984:;
		{
			return 4LL;
		}
		goto _match_end_4872226384;
		_case_end_4872233984:;
		_case_begin_4872233024:;
		{
			return -1LL;
		}
		goto _match_end_4872226384;
		_case_end_4872233024:;
		_match_end_4872226384:;
	}
}



jule::Int _23381108e_encode_rune(jule::Slice<jule::U8> _36724_p,jule::I32 _36739_r) {
	jule::U32 _3699_i = static_cast<jule::U32>(_36739_r);
	{
		if (!((_3699_i <= 127LLU))) { goto _case_end_4872241552; }
		_case_begin_4872241552:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(_36739_r);
			return 1LL;
		}
		goto _match_end_4872240656;
		_case_end_4872241552:;
		if (!((_3699_i <= 2047LLU))) { goto _case_end_4872241056; }
		_case_begin_4872241056:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(192LL | static_cast<jule::U8>(_36739_r >> 6LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 2LL;
		}
		goto _match_end_4872240656;
		_case_end_4872241056:;
		if (!((_3699_i > 1114111LL) || ((55296LL <= _3699_i) && (_3699_i <= 57343LL)))) { goto _case_end_4872241152; }
		_case_begin_4872241152:;
		{
			_36739_r=65533LL;
			goto _case_begin_4872241248;
		}
		goto _match_end_4872240656;
		_case_end_4872241152:;
		if (!((_3699_i <= 65535LLU))) { goto _case_end_4872241248; }
		_case_begin_4872241248:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(224LL | static_cast<jule::U8>(_36739_r >> 12LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 3LL;
		}
		goto _match_end_4872240656;
		_case_end_4872241248:;
		_case_begin_4872240768:;
		{
			_36724_p[0LL]=static_cast<jule::U8>(240LL | static_cast<jule::U8>(_36739_r >> 18LL));
			_36724_p[1LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 12LL) & 63LL));
			_36724_p[2LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r >> 6LL) & 63LL));
			_36724_p[3LL]=static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_36739_r) & 63LL));
			return 4LL;
		}
		goto _match_end_4872240656;
		_case_end_4872240768:;
		_match_end_4872240656:;
	}
}



jule::Slice<jule::U8> _23381108e_append_rune(jule::Slice<jule::U8> _39824_p,jule::I32 _39835_r) {
	if (_39835_r <= 127LLU) {
		return jule::append(_39824_p,jule::Slice<jule::U8>({static_cast<jule::U8>(_39835_r)}));
	}
	return _23381108e_append_rune_non_ascii(_39824_p,_39835_r);
}



jule::Slice<jule::U8> _23381108e_append_rune_non_ascii(jule::Slice<jule::U8> _40530_p,jule::I32 _40545_r) {
	jule::U32 _4079_i = static_cast<jule::U32>(_40545_r);
	{
		if (!((_4079_i <= 2047LLU))) { goto _case_end_4872266128; }
		_case_begin_4872266128:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(192LL | static_cast<jule::U8>(_40545_r >> 6LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4872264480;
		_case_end_4872266128:;
		if (!((_4079_i > 1114111LL) || ((55296LL <= _4079_i) && (_4079_i <= 57343LL)))) { goto _case_end_4872267344; }
		_case_begin_4872267344:;
		{
			_40545_r=65533LL;
			goto _case_begin_4872267440;
		}
		goto _match_end_4872264480;
		_case_end_4872267344:;
		if (!((_4079_i <= 65535LLU))) { goto _case_end_4872267440; }
		_case_begin_4872267440:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(224LL | static_cast<jule::U8>(_40545_r >> 12LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4872264480;
		_case_end_4872267440:;
		_case_begin_4872264592:;
		{
			return jule::append(_40530_p,jule::Slice<jule::U8>({static_cast<jule::U8>(240LL | static_cast<jule::U8>(_40545_r >> 18LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 12LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r >> 6LL) & 63LL)),static_cast<jule::U8>(128LL | (static_cast<jule::U8>(_40545_r) & 63LL))}));
		}
		goto _match_end_4872264480;
		_case_end_4872264592:;
		_match_end_4872264480:;
	}
}



jule::Int _23381108e_rune_count(jule::Slice<jule::U8> _42319_p) {
	jule::Int _42332_n = jule::Int();
	jule::Int _42413_i = 0LL;
	while (_42413_i < _42319_p.len()) {
		{
			(_42332_n)++;
			jule::U8 _42717_c = _42319_p[_42413_i];
			if (_42717_c < 128LL) {
				(_42413_i)++;
				goto _iter_next_4872265760;
			}
			jule::U8 _43313_x = _23381108e_FIRST[static_cast<jule::Int>(_42717_c)];
			if (_43313_x == 241LL) {
				(_42413_i)++;
				goto _iter_next_4872265760;
			}
			jule::Int _43817_size = static_cast<jule::Int>(_43313_x & 7LL);
			if ((_42413_i + _43817_size) > _42319_p.len()) {
				(_42413_i)++;
				goto _iter_next_4872265760;
			}
			_23381108e_accept_range _44313_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_43313_x >> 4LL)];
			_42717_c=_42319_p[_42413_i + 1LL];
			if ((_42717_c < _44313_accept._field_lo) || (_44313_accept._field_hi < _42717_c)) {
				_43817_size=1LL;
			} else if (_43817_size == 2LL) {
			} else {
				_42717_c=_42319_p[_42413_i + 2LL];
				if ((_42717_c < 128LL) || (191LL < _42717_c)) {
					_43817_size=1LL;
				} else if (_43817_size == 3LL) {
				} else {
					_42717_c=_42319_p[_42413_i + 3LL];
					if ((_42717_c < 128LL) || (191LL < _42717_c)) {
						_43817_size=1LL;
					}
				}
			}
			_42413_i+=_43817_size;
		}
	_iter_next_4872265760:;
	}
	_iter_end_4872265760:;
	_42332_n = _42332_n;
	return _42332_n;
}



jule::Int _23381108e_rune_count_str(jule::Str _46623_s) {
	jule::Int _46633_n = jule::Int();
	jule::Int _46713_i = 0LL;
	for (; _46713_i < _46623_s.len(); (_46633_n)++) {
		{
			jule::U8 _46917_c = _46623_s[_46713_i];
			if (_46917_c < 128LL) {
				(_46713_i)++;
				goto _iter_next_4872294272;
			}
			jule::U8 _47513_x = _23381108e_FIRST[static_cast<jule::Int>(_46917_c)];
			if (_47513_x == 241LL) {
				(_46713_i)++;
				goto _iter_next_4872294272;
			}
			jule::Int _48017_size = static_cast<jule::Int>(_47513_x & 7LL);
			if ((_46713_i + _48017_size) > _46623_s.len()) {
				(_46713_i)++;
				goto _iter_next_4872294272;
			}
			_23381108e_accept_range _48513_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_47513_x >> 4LL)];
			_46917_c=_46623_s[_46713_i + 1LL];
			if ((_46917_c < _48513_accept._field_lo) || (_48513_accept._field_hi < _46917_c)) {
				_48017_size=1LL;
			} else if (_48017_size == 2LL) {
			} else {
				_46917_c=_46623_s[_46713_i + 2LL];
				if ((_46917_c < 128LL) || (191LL < _46917_c)) {
					_48017_size=1LL;
				} else if (_48017_size == 3LL) {
				} else {
					_46917_c=_46623_s[_46713_i + 3LL];
					if ((_46917_c < 128LL) || (191LL < _46917_c)) {
						_48017_size=1LL;
					}
				}
			}
			_46713_i+=_48017_size;
		}
	_iter_next_4872294272:;
	}
	_iter_end_4872294272:;
	_46633_n = _46633_n;
	return _46633_n;
}



jule::Bool _23381108e_rune_start(jule::U8 _51019_b) {
	return (_51019_b & 192LL) != 128LL;
}



jule::Bool _23381108e_valid(jule::Slice<jule::U8> _51314_p) {
	jule::Slice<jule::U8> _51613_cp = (*((&(_51314_p))));
	while (_51613_cp.len() >= 8LL) {
		{
			jule::U32 _52213_first32 = ((static_cast<jule::U32>(_51613_cp[0LL]) | (static_cast<jule::U32>(_51613_cp[1LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[2LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[3LL]) << 24LL);
			jule::U32 _52313_second32 = ((static_cast<jule::U32>(_51613_cp[4LL]) | (static_cast<jule::U32>(_51613_cp[5LL]) << 8LL)) | (static_cast<jule::U32>(_51613_cp[6LL]) << 16LL)) | (static_cast<jule::U32>(_51613_cp[7LL]) << 24LL);
			if (((_52213_first32 | _52313_second32) & 2155905152LL) != 0LL) {
				goto _iter_end_4872312304;
			}
			_51613_cp=_51613_cp.slice(8LL);
		}
	_iter_next_4872312304:;
	}
	_iter_end_4872312304:;
	jule::Int _53013_i = 0LL;
	while (_53013_i < _51613_cp.len()) {
		{
			jule::U8 _53213_pi = _51613_cp[_53013_i];
			if (_53213_pi < 128LL) {
				(_53013_i)++;
				goto _iter_next_4872311248;
			}
			jule::U8 _53713_x = _23381108e_FIRST[static_cast<jule::Int>(_53213_pi)];
			if (_53713_x == 241LL) {
				return false;
			}
			jule::Int _54113_size = static_cast<jule::Int>(_53713_x & 7LL);
			if ((_53013_i + _54113_size) > _51613_cp.len()) {
				return false;
			}
			_23381108e_accept_range _54513_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_53713_x >> 4LL)];
			jule::U8 _54617_c = _51613_cp[_53013_i + 1LL];
			if ((_54617_c < _54513_accept._field_lo) || (_54513_accept._field_hi < _54617_c)) {
				return false;
			} else if (_54113_size == 2LL) {
			} else {
				_54617_c=_51613_cp[_53013_i + 2LL];
				if ((_54617_c < 128LL) || (191LL < _54617_c)) {
					return false;
				} else if (_54113_size == 3LL) {
				} else {
					_54617_c=_51613_cp[_53013_i + 3LL];
					if ((_54617_c < 128LL) || (191LL < _54617_c)) {
						return false;
					}
				}
			}
			_53013_i+=_54113_size;
		}
	_iter_next_4872311248:;
	}
	_iter_end_4872311248:;
	return true;
}



jule::Bool _23381108e_valid_str(jule::Str _56822_s) {
	while (_56822_s.len() >= 8LL) {
		{
			jule::U32 _57313_first32 = ((static_cast<jule::U32>(_56822_s[0LL]) | (static_cast<jule::U32>(_56822_s[1LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[2LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[3LL]) << 24LL);
			jule::U32 _57413_second32 = ((static_cast<jule::U32>(_56822_s[4LL]) | (static_cast<jule::U32>(_56822_s[5LL]) << 8LL)) | (static_cast<jule::U32>(_56822_s[6LL]) << 16LL)) | (static_cast<jule::U32>(_56822_s[7LL]) << 24LL);
			if (((_57313_first32 | _57413_second32) & 2155905152LL) != 0LL) {
				goto _iter_end_4872327552;
			}
			_56822_s=_56822_s.slice(8LL);
		}
	_iter_next_4872327552:;
	}
	_iter_end_4872327552:;
	jule::Int _58113_i = 0LL;
	while (_58113_i < _56822_s.len()) {
		{
			jule::U8 _58313_si = _56822_s[_58113_i];
			if (_58313_si < 128LL) {
				(_58113_i)++;
				goto _iter_next_4872355968;
			}
			jule::U8 _58813_x = _23381108e_FIRST[static_cast<jule::Int>(_58313_si)];
			if (_58813_x == 241LL) {
				return false;
			}
			jule::Int _59213_size = static_cast<jule::Int>(_58813_x & 7LL);
			if ((_58113_i + _59213_size) > _56822_s.len()) {
				return false;
			}
			_23381108e_accept_range _59613_accept = _23381108e_ACCEPT_RANGES[static_cast<jule::Int>(_58813_x >> 4LL)];
			jule::U8 _59717_c = _56822_s[_58113_i + 1LL];
			if ((_59717_c < _59613_accept._field_lo) || (_59613_accept._field_hi < _59717_c)) {
				return false;
			} else if (_59213_size == 2LL) {
			} else {
				_59717_c=_56822_s[_58113_i + 2LL];
				if ((_59717_c < 128LL) || (191LL < _59717_c)) {
					return false;
				} else if (_59213_size == 3LL) {
				} else {
					_59717_c=_56822_s[_58113_i + 3LL];
					if ((_59717_c < 128LL) || (191LL < _59717_c)) {
						return false;
					}
				}
			}
			_58113_i+=_59213_size;
		}
	_iter_next_4872355968:;
	}
	_iter_end_4872355968:;
	return true;
}



jule::Bool _23381108e_valid_rune(jule::I32 _62019_r) {
	{
		if (!(((0LL <= _62019_r) && (_62019_r < 55296LL)))) { goto _case_end_4872374704; }
		_case_begin_4872374704:;
		{
			return true;
		}
		goto _match_end_4872340288;
		_case_end_4872374704:;
		if (!(((57343LL < _62019_r) && (_62019_r <= 1114111LL)))) { goto _case_end_4872372192; }
		_case_begin_4872372192:;
		{
			return true;
		}
		goto _match_end_4872340288;
		_case_end_4872372192:;
		_case_begin_4872374368:;
		{
			return false;
		}
		goto _match_end_4872340288;
		_case_end_4872374368:;
		_match_end_4872340288:;
	}
}



jule::Bool _2336ea198_is_unary_op(jule::Str _31120_kind) {
	{
		auto expr = _2336ea198_UNARY_OPS;
		auto it = expr.begin();
		_iter_begin_4872551904:;
		if (it != expr.end()) {
			jule::Str _2336ea198_op = *it;
			{
				if (_31120_kind == _2336ea198_op) {
					return true;
				}
			}
			_iter_next_4872551904:;
			++it;
			goto _iter_begin_4872551904;
		}
		_iter_end_4872551904:;
	}
	return false;
}



jule::Bool _2336ea198_is_bin_op(jule::Str _32218_kind) {
	{
		auto expr = _2336ea198_BIN_OPS;
		auto it = expr.begin();
		_iter_begin_4872554592:;
		if (it != expr.end()) {
			jule::Str _2336ea198_op = *it;
			{
				if (_32218_kind == _2336ea198_op) {
					return true;
				}
			}
			_iter_next_4872554592:;
			++it;
			goto _iter_begin_4872554592;
		}
		_iter_end_4872554592:;
	}
	return false;
}



jule::Bool _2336ea198_is_weak_op(jule::Str _33319_kind) {
	{
		auto expr = _2336ea198_WEAK_OPS;
		auto it = expr.begin();
		_iter_begin_4872553200:;
		if (it != expr.end()) {
			jule::Str _2336ea198_op = *it;
			{
				if (_33319_kind == _2336ea198_op) {
					return true;
				}
			}
			_iter_next_4872553200:;
			++it;
			goto _iter_begin_4872553200;
		}
		_iter_end_4872553200:;
	}
	return false;
}



jule::Bool _2336ea198_is_str(jule::Str _34415_k) {
	return (_34415_k != jule::Str()) && ((_34415_k[0LL] == '\"') || _2336ea198_is_raw_str(_34415_k));
}



jule::Bool _2336ea198_is_raw_str(jule::Str _34619_k) {
	return (_34619_k != jule::Str()) && (_34619_k[0LL] == '`');
}



jule::Bool _2336ea198_is_rune(jule::Str _34916_k) {
	return (_34916_k != jule::Str()) && (_34916_k[0LL] == '\'');
}



jule::Bool _2336ea198_is_nil(jule::Str _35115_k) {
	return _35115_k == jule::Str("nil", 3);
}



jule::Bool _2336ea198_is_bool(jule::Str _35316_k) {
	return (_35316_k == jule::Str("true", 4)) || (_35316_k == jule::Str("false", 5));
}



jule::Bool _2336ea198_contains_any(jule::Str _35517_s,jule::Str _35525_bytes) {
	{
		auto expr = _35525_bytes;
		auto it = expr.begin();
		_iter_begin_4872559584:;
		if (it != expr.end()) {
			jule::U8 _2336ea198_b = *it;
			{
				jule::Int _35713_i = _35517_s.find(static_cast<jule::Str>(_2336ea198_b));
				if (_35713_i >= 0LL) {
					return true;
				}
			}
			_iter_next_4872559584:;
			++it;
			goto _iter_begin_4872559584;
		}
		_iter_end_4872559584:;
	}
	return false;
}



jule::Bool _2336ea198_is_float(jule::Str _36717_k) {
	if (_36717_k.has_prefix(jule::Str("0x", 2))) {
		return _2336ea198_contains_any(_36717_k,jule::Str(".pP", 3));
	}
	return _2336ea198_contains_any(_36717_k,jule::Str(".eE", 3));
}



jule::Bool _2336ea198_is_num(jule::Str _37615_k) {
	if (_37615_k == jule::Str()) {
		return false;
	}
	jule::U8 _3819_b = _37615_k[0LL];
	return (_3819_b == '.') || (('0' <= _3819_b) && (_3819_b <= '9'));
}



jule::Bool _2336ea198_is_lit(jule::Str _38615_k) {
	return (((_2336ea198_is_num(_38615_k) || _2336ea198_is_str(_38615_k)) || _2336ea198_is_rune(_38615_k)) || _2336ea198_is_nil(_38615_k)) || _2336ea198_is_bool(_38615_k);
}



jule::Bool _2336ea198_is_ignore_ident(jule::Str _39124_ident) {
	return _39124_ident == jule::Str("_", 1);
}



jule::Bool _2336ea198_is_anon_ident(jule::Str _39322_ident) {
	return _39322_ident == jule::Str("<anonymous>", 11);
}



jule::Bool _2336ea198_is_punct(jule::I32 _39617_r) {
	{
		auto expr = _2336ea198_PUNCTS;
		auto it = expr.begin();
		_iter_begin_4872584560:;
		if (it != expr.end()) {
			jule::I32 _2336ea198_cr = *it;
			{
				if (_39617_r == _2336ea198_cr) {
					return true;
				}
			}
			_iter_next_4872584560:;
			++it;
			goto _iter_begin_4872584560;
		}
		_iter_end_4872584560:;
	}
	return false;
}



jule::Bool _2336ea198_is_space(jule::I32 _40717_r) {
	{
		auto expr = _2336ea198_SPACES;
		auto it = expr.begin();
		_iter_begin_4872586816:;
		if (it != expr.end()) {
			jule::I32 _2336ea198_cr = *it;
			{
				if (_40717_r == _2336ea198_cr) {
					return true;
				}
			}
			_iter_next_4872586816:;
			++it;
			goto _iter_begin_4872586816;
		}
		_iter_end_4872586816:;
	}
	return false;
}



jule::Bool _2336ea198_is_letter(jule::I32 _41818_r) {
	return _2337a3707_is_letter(_41818_r);
}



jule::Bool _2336ea198_is_ident_rune(jule::Str _42422_s) {
	if (_42422_s == jule::Str()) {
		return false;
	}
	if (_42422_s[0LL] != '_') {
		jule::I32 _43014_r;
		std::tie(_43014_r,std::ignore) = _23381108e_decode_rune_str(_42422_s);
		if ((!(_2336ea198_is_letter(_43014_r)))) {
			return false;
		}
	}
	return true;
}



jule::Bool _2336ea198_is_decimal(jule::U8 _44019_b) {
	return ('0' <= _44019_b) && (_44019_b <= '9');
}



jule::Bool _2336ea198_is_binary(jule::U8 _44218_b) {
	return (_44218_b == '0') || (_44218_b == '1');
}



jule::Bool _2336ea198_is_octal(jule::U8 _44417_b) {
	return ('0' <= _44417_b) && (_44417_b <= '7');
}



jule::Bool _2336ea198_is_hex(jule::U8 _44715_b) {
	{
		if (!((('0' <= _44715_b) && (_44715_b <= '9')))) { goto _case_end_4872600128; }
		_case_begin_4872600128:;
		{
			return true;
		}
		goto _match_end_4872598656;
		_case_end_4872600128:;
		if (!((('a' <= _44715_b) && (_44715_b <= 'f')))) { goto _case_end_4872600224; }
		_case_begin_4872600224:;
		{
			return true;
		}
		goto _match_end_4872598656;
		_case_end_4872600224:;
		if (!((('A' <= _44715_b) && (_44715_b <= 'F')))) { goto _case_end_4872600320; }
		_case_begin_4872600320:;
		{
			return true;
		}
		goto _match_end_4872598656;
		_case_end_4872600320:;
		_case_begin_4872597008:;
		{
			return false;
		}
		goto _match_end_4872598656;
		_case_end_4872597008:;
		_match_end_4872598656:;
	}
}



jule::Bool _2336ea198_is_assign(jule::Uint _45918_id) {
	return ((((((_45918_id == 2LLU) || (_45918_id == 31LLU)) || (_45918_id == 34LLU)) || (_45918_id == 20LLU)) || (_45918_id == 28LLU)) || (_45918_id == 3LLU)) || (_45918_id == 7LLU);
}



jule::Bool _2336ea198_is_postfix_op(jule::Str _47222_kind) {
	{
		auto expr = _2336ea198_POSTFIX_OPS;
		auto it = expr.begin();
		_iter_begin_4872605472:;
		if (it != expr.end()) {
			jule::Str _2336ea198_op = *it;
			{
				if (_47222_kind == _2336ea198_op) {
					return true;
				}
			}
			_iter_next_4872605472:;
			++it;
			goto _iter_begin_4872605472;
		}
		_iter_end_4872605472:;
	}
	return false;
}



jule::Bool _2336ea198_is_assign_op(jule::Str _48321_kind) {
	if (_2336ea198_is_postfix_op(_48321_kind)) {
		return true;
	}
	{
		auto expr = _2336ea198_ASSING_OPS;
		auto it = expr.begin();
		_iter_begin_4872606896:;
		if (it != expr.end()) {
			jule::Str _2336ea198_op = *it;
			{
				if (_48321_kind == _2336ea198_op) {
					return true;
				}
			}
			_iter_next_4872606896:;
			++it;
			goto _iter_begin_4872606896;
		}
		_iter_end_4872606896:;
	}
	return false;
}



jule::Ptr<_2334d2d3d_File> _2334d2d3d_new_file_set(jule::Str _6421_path) {
	return jule::new_struct<_2334d2d3d_File>(new( std::nothrow ) _2334d2d3d_File(jule::Slice<jule::U8>(),_6421_path,jule::Slice<_2336ea198_Token>()));
}



_231e4202e_Log _2334d2db5_make_err(jule::Int _10313_row,jule::Int _10323_col,jule::Ptr<_2334d2d3d_File>& _10334_f,jule::Str _10344_fmt,jule::Slice<jule::Any> _10357_args) {
	return _231e4202e_Log(1LLU,_10313_row,_10323_col,_10334_f->_method_path(),_231e4202e_logf(_10344_fmt,_10357_args),jule::Str(),jule::Str());
}



jule::Bool _2334d2db5_bytes_has_prefix(jule::Slice<jule::U8>& _11322_bytes,jule::Str _11337_prefix) {
	if (_11322_bytes.len() < _11337_prefix.len()) {
		return false;
	}
	{
		auto expr = _11337_prefix;
		auto it = expr.begin();
		_iter_begin_4872619648:;
		if (it != expr.end()) {
			jule::Int _2334d2db5_i = it - expr.begin();
			{
				if (_11322_bytes[_2334d2db5_i] != _11337_prefix[_2334d2db5_i]) {
					return false;
				}
			}
			_iter_next_4872619648:;
			++it;
			_2334d2db5_i++;
			goto _iter_begin_4872619648;
		}
		_iter_end_4872619648:;
	}
	return true;
}



jule::Str _2334d2db5_float_fmt_e(jule::Slice<jule::U8>& _12517_txt,jule::Int _12534_i) {
	jule::Str _12544_lit = jule::Str();
	(_12534_i)++;
	if (_12534_i >= _12517_txt.len()) {
		return _12544_lit;
	}
	jule::U8 _13113_b = _12517_txt[_12534_i];
	if ((_13113_b == '+') || (_13113_b == '-')) {
		(_12534_i)++;
		if (_12534_i >= _12517_txt.len()) {
			return _12544_lit;
		}
	}
	jule::Int _1399_first = _12534_i;
	for (; _12534_i < _12517_txt.len(); (_12534_i)++) {
		{
			_13113_b=_12517_txt[_12534_i];
			if ((!(_2336ea198_is_decimal(_13113_b)))) {
				goto _iter_end_4872628288;
			}
		}
	_iter_next_4872628288:;
	}
	_iter_end_4872628288:;
	if (_12534_i == _1399_first) {
		_12544_lit = jule::Str();
		return _12544_lit;
	}
	_12544_lit = static_cast<jule::Str>(_12517_txt.slice(0LL,_12534_i));
	return _12544_lit;
}



jule::Str _2334d2db5_float_fmt_p(jule::Slice<jule::U8>& _15317_txt,jule::Int _15330_i) {
	return _2334d2db5_float_fmt_e(_15317_txt,_15330_i);
}



jule::Str _2334d2db5_float_fmt_dotnp(jule::Slice<jule::U8>& _15521_txt,jule::Int _15538_i) {
	if (_15521_txt[_15538_i] != '.') {
		return jule::Str();
	}
	(_15538_i)++;
	_julec_label_loop:;
	for (; _15538_i < _15521_txt.len(); (_15538_i)++) {
		{
			jule::U8 _16313_b = _15521_txt[_15538_i];
			{
				if (!((_2336ea198_is_decimal(_16313_b)))) { goto _case_end_4872638928; }
				_case_begin_4872638928:;
				{
					goto _iter_next_4872632480;
				}
				goto _match_end_4872638480;
				_case_end_4872638928:;
				if (!((_2334d2db5_is_float_fmt_p(_16313_b,_15538_i)))) { goto _case_end_4872639024; }
				_case_begin_4872639024:;
				{
					return _2334d2db5_float_fmt_p(_15521_txt,_15538_i);
				}
				goto _match_end_4872638480;
				_case_end_4872639024:;
				_case_begin_4872638592:;
				{
					goto _iter_end_4872632480;
				}
				goto _match_end_4872638480;
				_case_end_4872638592:;
				_match_end_4872638480:;
			}
		}
	_iter_next_4872632480:;
	}
	_iter_end_4872632480:;
	return jule::Str();
}



jule::Str _2334d2db5_float_fmt_dotfp(jule::Slice<jule::U8>& _17321_txt,jule::Int _17338_i) {
	_17338_i+=2LL;
	return _2334d2db5_float_fmt_e(_17321_txt,_17338_i);
}



jule::Str _2334d2db5_float_fmt_dotp(jule::Slice<jule::U8>& _18020_txt,jule::Int _18037_i) {
	(_18037_i)++;
	return _2334d2db5_float_fmt_e(_18020_txt,_18037_i);
}



jule::Str _2334d2db5_float_num(jule::Slice<jule::U8>& _18715_txt,jule::Int _18732_i) {
	jule::Str _18742_lit = jule::Str();
	(_18732_i)++;
	for (; _18732_i < _18715_txt.len(); (_18732_i)++) {
		{
			jule::U8 _19013_b = _18715_txt[_18732_i];
			if ((_18732_i > 1LL) && ((_19013_b == 'e') || (_19013_b == 'E'))) {
				_18742_lit = _2334d2db5_float_fmt_e(_18715_txt,_18732_i);
				return _18742_lit;
			}
			if ((!(_2336ea198_is_decimal(_19013_b)))) {
				goto _iter_end_4872642832;
			}
		}
	_iter_next_4872642832:;
	}
	_iter_end_4872642832:;
	if (_18732_i == 1LL) {
		return _18742_lit;
	}
	_18742_lit = static_cast<jule::Str>(_18715_txt.slice(0LL,_18732_i));
	return _18742_lit;
}



jule::Str _2334d2db5_common_num(jule::Slice<jule::U8>& _20516_txt) {
	jule::Str _20531_lit = jule::Str();
	jule::Int _20613_i = 0LL;
	_julec_label_loop:;
	for (; _20613_i < _20516_txt.len(); (_20613_i)++) {
		{
			jule::U8 _20913_b = _20516_txt[_20613_i];
			{
				if (!((_20913_b == '.'))) { goto _case_end_4872657248; }
				_case_begin_4872657248:;
				{
					_20531_lit = _2334d2db5_float_num(_20516_txt,_20613_i);
					return _20531_lit;
				}
				goto _match_end_4872657072;
				_case_end_4872657248:;
				if (!((_2334d2db5_is_float_fmt_e(_20913_b,_20613_i)))) { goto _case_end_4872657360; }
				_case_begin_4872657360:;
				{
					_20531_lit = _2334d2db5_float_fmt_e(_20516_txt,_20613_i);
					return _20531_lit;
				}
				goto _match_end_4872657072;
				_case_end_4872657360:;
				if (!(((!(_2336ea198_is_decimal(_20913_b)))))) { goto _case_end_4872657472; }
				_case_begin_4872657472:;
				{
					goto _iter_end_4872652720;
				}
				goto _match_end_4872657072;
				_case_end_4872657472:;
				_match_end_4872657072:;
			}
		}
	_iter_next_4872652720:;
	}
	_iter_end_4872652720:;
	if (_20613_i == 0LL) {
		return _20531_lit;
	}
	_20531_lit = static_cast<jule::Str>(_20516_txt.slice(0LL,_20613_i));
	return _20531_lit;
}



jule::Str _2334d2db5_binary_num(jule::Slice<jule::U8>& _22316_txt) {
	jule::Str _22331_lit = jule::Str();
	if ((!(_2334d2db5_bytes_has_prefix(_22316_txt,jule::Str("0b", 2))))) {
		_22331_lit = jule::Str();
		return _22331_lit;
	}
	if (_22316_txt.len() < 2LL) {
		return _22331_lit;
	}
	
	jule::Int _23213_i = 2LL;
	for (; _23213_i < _22316_txt.len(); (_23213_i)++) {
		{
			if ((!(_2336ea198_is_binary(_22316_txt[_23213_i])))) {
				goto _iter_end_4872663392;
			}
		}
	_iter_next_4872663392:;
	}
	_iter_end_4872663392:;
	if (_23213_i == 2LL) {
		return _22331_lit;
	}
	_22331_lit = static_cast<jule::Str>(_22316_txt.slice(0LL,_23213_i));
	return _22331_lit;
}



jule::Bool _2334d2db5_is_float_fmt_e(jule::U8 _24519_b,jule::Int _24528_i) {
	return (_24528_i > 0LL) && ((_24519_b == 'e') || (_24519_b == 'E'));
}



jule::Bool _2334d2db5_is_float_fmt_p(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'p') || (_24619_b == 'P'));
}



jule::Bool _2334d2db5_is_float_fmt_dotnp(jule::Slice<jule::U8>& _24824_txt,jule::Int _24841_i) {
	if (_24824_txt[_24841_i] != '.') {
		return false;
	}
	(_24841_i)++;
	_julec_label_loop:;
	for (; _24841_i < _24824_txt.len(); (_24841_i)++) {
		{
			jule::U8 _25613_b = _24824_txt[_24841_i];
			{
				if (!((_2336ea198_is_decimal(_25613_b)))) { goto _case_end_4872679584; }
				_case_begin_4872679584:;
				{
					goto _iter_next_4872672512;
				}
				goto _match_end_4872679136;
				_case_end_4872679584:;
				if (!((_2334d2db5_is_float_fmt_p(_25613_b,_24841_i)))) { goto _case_end_4872679680; }
				_case_begin_4872679680:;
				{
					return true;
				}
				goto _match_end_4872679136;
				_case_end_4872679680:;
				_case_begin_4872679248:;
				{
					goto _iter_end_4872672512;
				}
				goto _match_end_4872679136;
				_case_end_4872679248:;
				_match_end_4872679136:;
			}
		}
	_iter_next_4872672512:;
	}
	_iter_end_4872672512:;
	return false;
}



jule::Bool _2334d2db5_is_float_fmt_dotp(jule::Slice<jule::U8>& _26723_txt,jule::Int _26736_i) {
	{
		if (!((_26723_txt.len() < 3LL))) { goto _case_end_4872685008; }
		_case_begin_4872685008:;
		{
			goto _case_begin_4872685104;
		}
		goto _match_end_4872683200;
		_case_end_4872685008:;
		if (!((_26723_txt[_26736_i] != '.'))) { goto _case_end_4872685104; }
		_case_begin_4872685104:;
		{
			goto _case_begin_4872685216;
		}
		goto _match_end_4872683200;
		_case_end_4872685104:;
		if (!(((_26723_txt[_26736_i + 1LL] != 'p') && (_26723_txt[_26736_i + 1LL] != 'P')))) { goto _case_end_4872685216; }
		_case_begin_4872685216:;
		{
			return false;
		}
		goto _match_end_4872683200;
		_case_end_4872685216:;
		_case_begin_4872683376:;
		{
			return true;
		}
		goto _match_end_4872683200;
		_case_end_4872683376:;
		_match_end_4872683200:;
	}
}



jule::Bool _2334d2db5_is_float_fmt_dotfp(jule::Slice<jule::U8>& _27624_txt,jule::Int _27637_i) {
	{
		if (!((_27624_txt.len() < 4LL))) { goto _case_end_4872691024; }
		_case_begin_4872691024:;
		{
			goto _case_begin_4872691120;
		}
		goto _match_end_4872689248;
		_case_end_4872691024:;
		if (!((_27624_txt[_27637_i] != '.'))) { goto _case_end_4872691120; }
		_case_begin_4872691120:;
		{
			goto _case_begin_4872691232;
		}
		goto _match_end_4872689248;
		_case_end_4872691120:;
		if (!(((_27624_txt[_27637_i + 1LL] != 'f') && (_27624_txt[_27637_i + 1LL] != 'F')))) { goto _case_end_4872691232; }
		_case_begin_4872691232:;
		{
			goto _case_begin_4872689664;
		}
		goto _match_end_4872689248;
		_case_end_4872691232:;
		if (!(((_27624_txt[_27637_i + 2LL] != 'p') && (_27624_txt[_27637_i + 1LL] != 'P')))) { goto _case_end_4872689664; }
		_case_begin_4872689664:;
		{
			return false;
		}
		goto _match_end_4872689248;
		_case_end_4872689664:;
		_case_begin_4872689376:;
		{
			return true;
		}
		goto _match_end_4872689248;
		_case_end_4872689376:;
		_match_end_4872689248:;
	}
}



jule::Str _2334d2db5_octal_num(jule::Slice<jule::U8>& _28615_txt) {
	jule::Str _28630_lit = jule::Str();
	if (_28615_txt[0LL] != '0') {
		_28630_lit = jule::Str();
		return _28630_lit;
	}
	if (_28615_txt.len() < 2LL) {
		return _28630_lit;
	}
	jule::Int _29413_octal_start = 1LL;
	if (_28615_txt[1LL] == 'o') {
		if (_28615_txt.len() < 3LL) {
			return _28630_lit;
		}
		(_29413_octal_start)++;
	}
	jule::Int _30313_i = _29413_octal_start;
	for (; _30313_i < _28615_txt.len(); (_30313_i)++) {
		{
			jule::U8 _30513_b = _28615_txt[_30313_i];
			if (_2334d2db5_is_float_fmt_e(_30513_b,_30313_i)) {
				_28630_lit = _2334d2db5_float_fmt_e(_28615_txt,_30313_i);
				return _28630_lit;
			}
			if ((!(_2336ea198_is_octal(_30513_b)))) {
				goto _iter_end_4872702688;
			}
		}
	_iter_next_4872702688:;
	}
	_iter_end_4872702688:;
	if (_30313_i == _29413_octal_start) {
		return _28630_lit;
	}
	_28630_lit = static_cast<jule::Str>(_28615_txt.slice(0LL,_30313_i));
	return _28630_lit;
}



jule::Str _2334d2db5_hex_num(jule::Slice<jule::U8>& _32013_txt) {
	jule::Str _32028_lit = jule::Str();
	if (_32013_txt.len() < 3LL) {
		return _32028_lit;
	}
	if ((_32013_txt[0LL] != '0') || ((_32013_txt[1LL] != 'x') && (_32013_txt[1LL] != 'X'))) {
		return _32028_lit;
	}
	
	jule::Int _32913_i = 2LL;
	_julec_label_loop:;
	for (; _32913_i < _32013_txt.len(); (_32913_i)++) {
		{
			jule::U8 _33213_b = _32013_txt[_32913_i];
			{
				if (!((_2334d2db5_is_float_fmt_dotp(_32013_txt,_32913_i)))) { goto _case_end_4872717408; }
				_case_begin_4872717408:;
				{
					_32028_lit = _2334d2db5_float_fmt_dotp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4872717200;
				_case_end_4872717408:;
				if (!((_2334d2db5_is_float_fmt_dotfp(_32013_txt,_32913_i)))) { goto _case_end_4872717520; }
				_case_begin_4872717520:;
				{
					_32028_lit = _2334d2db5_float_fmt_dotfp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4872717200;
				_case_end_4872717520:;
				if (!((_2334d2db5_is_float_fmt_p(_33213_b,_32913_i)))) { goto _case_end_4872717632; }
				_case_begin_4872717632:;
				{
					_32028_lit = _2334d2db5_float_fmt_p(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4872717200;
				_case_end_4872717632:;
				if (!((_2334d2db5_is_float_fmt_dotnp(_32013_txt,_32913_i)))) { goto _case_end_4872717744; }
				_case_begin_4872717744:;
				{
					_32028_lit = _2334d2db5_float_fmt_dotnp(_32013_txt,_32913_i);
					return _32028_lit;
				}
				goto _match_end_4872717200;
				_case_end_4872717744:;
				if (!(((!(_2336ea198_is_hex(_33213_b)))))) { goto _case_end_4872717856; }
				_case_begin_4872717856:;
				{
					goto _iter_end_4872714768;
				}
				goto _match_end_4872717200;
				_case_end_4872717856:;
				_match_end_4872717200:;
			}
		}
	_iter_next_4872714768:;
	}
	_iter_end_4872714768:;
	if (_32913_i == 2LL) {
		return _32028_lit;
	}
	_32028_lit = static_cast<jule::Str>(_32013_txt.slice(0LL,_32913_i));
	return _32028_lit;
}



jule::Str _2334d2db5_hex_escape(jule::Slice<jule::U8>& _35716_txt,jule::Int _35729_n) {
	jule::Str _35739_seq = jule::Str();
	if (_35716_txt.len() < _35729_n) {
		return _35739_seq;
	}
	
	jule::Int _36313_i = 2LL;
	for (; _36313_i < _35729_n; (_36313_i)++) {
		{
			if ((!(_2336ea198_is_hex(_35716_txt[_36313_i])))) {
				return _35739_seq;
			}
		}
	_iter_next_4872724512:;
	}
	_iter_end_4872724512:;
	_35739_seq=static_cast<jule::Str>(_35716_txt.slice(0LL,_35729_n));
	return _35739_seq;
}



jule::Str _2334d2db5_big_unicode_point_escape(jule::Slice<jule::U8>& _37530_txt) {
	return _2334d2db5_hex_escape(_37530_txt,10LL);
}



jule::Str _2334d2db5_little_unicode_point_escape(jule::Slice<jule::U8>& _37733_txt) {
	return _2334d2db5_hex_escape(_37733_txt,6LL);
}



jule::Str _2334d2db5_hex_byte_escape(jule::Slice<jule::U8>& _37921_txt) {
	return _2334d2db5_hex_escape(_37921_txt,4LL);
}



jule::Str _2334d2db5_byte_escape(jule::Slice<jule::U8>& _38217_txt) {
	jule::Str _38232_seq = jule::Str();
	if (_38217_txt.len() < 4LL) {
		return _38232_seq;
	}
	if (((!(_2336ea198_is_octal(_38217_txt[1LL]))) || (!(_2336ea198_is_octal(_38217_txt[2LL])))) || (!(_2336ea198_is_octal(_38217_txt[3LL])))) {
		return _38232_seq;
	}
	_38232_seq = static_cast<jule::Str>(_38217_txt.slice(0LL,4LL));
	return _38232_seq;
}



jule::Slice<_231e4202e_Log> _2334d2db5_lex(jule::Ptr<_2334d2d3d_File> _77816_f) {
	if (_77816_f == nullptr) {
		return nullptr;
	}
	_2334d2db5_Lex _78313_lex = _2334d2db5_Lex(jule::Slice<_2336ea198_Token>(),_77816_f,0LL,jule::Int(),-1LL,jule::Slice<_231e4202e_Log>());
	_78313_lex._method_new_line();
	_78313_lex._method_lex();
	if (_78313_lex._field_errors.len() > 0LL) {
		return _78313_lex._field_errors;
	}
	_77816_f->_field__tokens=_78313_lex._field_tokens;
	return nullptr;
}



jule::Ptr<_2334e3821_FileInfo> _2334e3821_parse_file(jule::Ptr<_2334d2d3d_File> _2223_f) {
	if (_2223_f == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2334e3821_FileInfo> _2713_finf = jule::new_struct<_2334e3821_FileInfo>(new( std::nothrow ) _2334e3821_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _2334e3821_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors.len() > 0LL) {
		_2713_finf->_field_ast=nullptr;
	}
	return _2713_finf;
}



jule::Ptr<_2334e3821_PackageInfo> _2334e3821_parse_package(jule::Slice<jule::Ptr<_2334d2d3d_File>> _3926_filesets) {
	if (_3926_filesets == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2334e3821_PackageInfo> _4413_pinf = jule::new_struct<_2334e3821_PackageInfo>(new( std::nothrow ) _2334e3821_PackageInfo());
	_4413_pinf->_field_files=jule::Slice<jule::Ptr<_2334e3821_FileInfo>>::alloc(0LL,static_cast<jule::I64>(_3926_filesets.len()));
	{
		auto expr = _3926_filesets;
		auto it = expr.begin();
		_iter_begin_4873377168:;
		if (it != expr.end()) {
			jule::Ptr<_2334d2d3d_File> _2334e3821_f = *it;
			{
				if (_2334e3821_f == nullptr) {
					goto _iter_next_4873377168;
				}
				jule::Ptr<_2334e3821_FileInfo> _5117_finfo = _2334e3821_parse_file(_2334e3821_f);
				_4413_pinf->_field_files=jule::append(_4413_pinf->_field_files,jule::Slice<jule::Ptr<_2334e3821_FileInfo>>({_5117_finfo}));
			}
			_iter_next_4873377168:;
			++it;
			goto _iter_begin_4873377168;
		}
		_iter_end_4873377168:;
	}
	return _4413_pinf;
}



std::tuple<jule::Ptr<_23346420e_Ast>,jule::Slice<_231e4202e_Log>> _2334e3821_parse_fileset(jule::Ptr<_2334d2d3d_File> _5822_f) {
	jule::Ptr<_23441cd43_Parser> _5913_p = jule::new_struct_ptr<_23441cd43_Parser>(new( std::nothrow ) _23441cd43_Parser());
	_5913_p->_method_parse(_5822_f);
	return std::make_tuple(_5913_p->_field_ast,_5913_p->_field_errors);
}



jule::Ptr<_233464770_ScopeTree> _2337c95da_new_scope(void) {
	return jule::new_struct<_233464770_ScopeTree>(new( std::nothrow ) _233464770_ScopeTree());
}



std::tuple<jule::Bool,jule::Bool> _2337c95da_is_st(_2336ea198_Token _4410_current,_2336ea198_Token _4426_prev) {
	jule::Bool _4441_ok = jule::Bool();
	jule::Bool _4451_terminated = jule::Bool();
	_4441_ok=(_4410_current._field_id == 5LLU) || (_4426_prev._field_row < _4410_current._field_row);
	_4451_terminated=_4410_current._field_id == 5LLU;
	return std::make_tuple(_4441_ok,_4451_terminated);
}



jule::Bool _2337c95da_prev_is_incomplete_expr(jule::Slice<_2336ea198_Token>& _5029_tokens,jule::Int& _5047_i) {
	if ((_5047_i > 1LL) && (_5029_tokens[_5047_i - 2LL]._field_id == 23LLU)) {
		return false;
	}
	{
		_2336ea198_Token* _5713_prev = (&(_5029_tokens[_5047_i - 1LL]));
		return (_5713_prev->_field_id == 20LLU) || (((_5713_prev->_field_id == 7LLU) && _2336ea198_is_bin_op(_5713_prev->_field_kind)) && (_5713_prev->_field_row < _5029_tokens[_5047_i]._field_row));
	}
}



std::tuple<jule::Int,jule::Bool> _2337c95da_next_st_pos(jule::Slice<_2336ea198_Token>& _6617_tokens,jule::Int _6634_start) {
	jule::Int _6713_brace_n = 0LL;
	jule::Int _6813_i = _6634_start;
	for (; _6813_i < _6617_tokens.len(); (_6813_i)++) {
		{
			jule::Bool _7017_ok = false;
			jule::Bool _7117_terminated = false;
			_2336ea198_Token _7213_tok = _6617_tokens[_6813_i];
			{
				auto _match_expr{ _7213_tok._field_id };
				if (!((3LLU) == _match_expr)) { goto _case_end_4873402640; }
				_case_begin_4873402640:;
				{
					{
						auto _match_expr{ _7213_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873411184; }
						_case_begin_4873411184:;
						{
							if ((_6713_brace_n == 0LL) && (_6813_i > _6634_start)) {
								if ((!(_2337c95da_prev_is_incomplete_expr(_6617_tokens,_6813_i)))) {
									std::tie(_7017_ok,_7117_terminated) = _2337c95da_is_st(_7213_tok,_6617_tokens[_6813_i - 1LL]);
									if (_7017_ok) {
										goto _julec_label_return;
									}
								}
							}
							(_6713_brace_n)++;
						}
						goto _match_end_4873407072;
						_case_end_4873411184:;
						_case_begin_4873405792:;
						{
							(_6713_brace_n)--;
							if ((_6713_brace_n == 0LL) && ((_6813_i + 1LL) < _6617_tokens.len())) {
								std::tie(_7017_ok,_7117_terminated) = _2337c95da_is_st(_6617_tokens[_6813_i + 1LL],_7213_tok);
								if (_7017_ok) {
									(_6813_i)++;
									goto _julec_label_return;
								}
							}
						}
						goto _match_end_4873407072;
						_case_end_4873405792:;
						_match_end_4873407072:;
					}
					goto _iter_next_4873400656;
				}
				goto _match_end_4873405648;
				_case_end_4873402640:;
				_match_end_4873405648:;
			}
			if (_6713_brace_n != 0LL) {
				goto _iter_next_4873400656;
			}
			if (_6813_i > _6634_start) {
				if (_2337c95da_prev_is_incomplete_expr(_6617_tokens,_6813_i)) {
					goto _iter_next_4873400656;
				}
				std::tie(_7017_ok,_7117_terminated) = _2337c95da_is_st(_7213_tok,_6617_tokens[_6813_i - 1LL]);
			} else {
				std::tie(_7017_ok,_7117_terminated) = _2337c95da_is_st(_7213_tok,_7213_tok);
			}
			if ((!(_7017_ok))) {
				goto _iter_next_4873400656;
			}
			_julec_label_return:;
			if (_7117_terminated) {
				(_6813_i)++;
			}
			return std::make_tuple(_6813_i,_7117_terminated);
		}
	_iter_next_4873400656:;
	}
	_iter_end_4873400656:;
	return std::make_tuple(_6813_i,false);
}



std::tuple<jule::Slice<_2336ea198_Token>,jule::Bool> _2337c95da_skip_st(jule::Int& _12917_i,jule::Slice<_2336ea198_Token> _12929_tokens) {
	jule::Int _1309_start = _12917_i;
	jule::Bool _13113_terminated = false;
	std::tie(_12917_i,_13113_terminated) = _2337c95da_next_st_pos(_12929_tokens,_1309_start);
	jule::Slice<_2336ea198_Token> _13313_st_tokens = _12929_tokens.slice(_1309_start,_12917_i);
	if (_13113_terminated) {
		if (_13313_st_tokens.len() == 1LL) {
			std::tie(_13313_st_tokens,_13113_terminated) = _2337c95da_skip_st(_12917_i,_12929_tokens);
			return std::make_tuple(_13313_st_tokens,_13113_terminated);
		}
		_13313_st_tokens=_13313_st_tokens.slice(0LL,_13313_st_tokens.len() - 1LL);
	}
	return std::make_tuple(_13313_st_tokens,_13113_terminated);
}



jule::Slice<jule::Ptr<_2337c95da_Stmt>> _2337c95da_split_stms(jule::Slice<_2336ea198_Token>& _15120_tokens) {
	jule::Slice<jule::Ptr<_2337c95da_Stmt>> _15213_stms = nullptr;
	jule::Int _15313_pos = 0LL;
	while (_15313_pos < _15120_tokens.len()) {
		{
			jule::Slice<_2336ea198_Token> _15518_tokens;
			jule::Bool _15526_terminated;
			std::tie(_15518_tokens,_15526_terminated) = _2337c95da_skip_st(_15313_pos,_15120_tokens);
			_15213_stms=jule::append(_15213_stms,jule::Slice<jule::Ptr<_2337c95da_Stmt>>({jule::new_struct<_2337c95da_Stmt>(new( std::nothrow ) _2337c95da_Stmt(_15518_tokens,_15526_terminated))}));
		}
	_iter_next_4873430752:;
	}
	_iter_end_4873430752:;
	return _15213_stms;
}



jule::Slice<_2336ea198_Token> _2337db201_is_fn_call(jule::Slice<_2336ea198_Token>& _4020_tokens) {
	{
		auto _match_expr{ _4020_tokens[0LL]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_4873445184; }
		goto _match_end_4873437072;
		_case_end_4873445184:;
		_case_begin_4873436432:;
		{
			_2336ea198_Token _4813_tok = _4020_tokens[_4020_tokens.len() - 1LL];
			if ((_4813_tok._field_id != 3LLU) && (_4813_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_4873437072;
		_case_end_4873436432:;
		_match_end_4873437072:;
	}
	_2336ea198_Token _5313_tok = _4020_tokens[_4020_tokens.len() - 1LL];
	if ((_5313_tok._field_id != 3LLU) || (_5313_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5713_brace_n = 0LL;
	jule::I64 _6013_i = _4020_tokens.len() - 1LL;
	for (; _6013_i >= 1LL; (_6013_i)--) {
		{
			_5313_tok=_4020_tokens[_6013_i];
			if (_5313_tok._field_id == 3LLU) {
				{
					auto _match_expr{ _5313_tok._field_kind };
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4873453088; }
					_case_begin_4873453088:;
					{
						(_5713_brace_n)++;
					}
					goto _match_end_4873452944;
					_case_end_4873453088:;
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873453184; }
					_case_begin_4873453184:;
					{
						(_5713_brace_n)--;
					}
					goto _match_end_4873452944;
					_case_end_4873453184:;
					_match_end_4873452944:;
				}
				if (_5713_brace_n == 0LL) {
					return _4020_tokens.slice(0LL,_6013_i);
				}
			}
		}
	_iter_next_4873448880:;
	}
	_iter_end_4873448880:;
	return nullptr;
}



jule::Ptr<_2337db201_CallData> _2337db201_get_call_data(jule::Slice<_2336ea198_Token>& _8223_tokens) {
	jule::Ptr<_2337db201_CallData> _8313_data = jule::new_struct<_2337db201_CallData>(new( std::nothrow ) _2337db201_CallData());
	std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_args_tokens) = _23441cd43_range_last(_8223_tokens);
	if (_8313_data->_field_expr_tokens.len() == 0LL) {
		return _8313_data;
	}
	_2336ea198_Token _909_token = _8313_data->_field_expr_tokens[_8313_data->_field_expr_tokens.len() - 1LL];
	if ((_909_token._field_id == 3LLU) && (_909_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8313_data->_field_expr_tokens,_8313_data->_field_generics_tokens) = _23441cd43_range_last(_8313_data->_field_expr_tokens);
	}
	return _8313_data;
}



jule::Slice<_2336ea198_Token> _2337db201_get_block_expr(jule::Slice<_2336ea198_Token>& _9824_tokens) {
	jule::Int _9913_brace_n = 0LL;
	{
		auto expr = _9824_tokens;
		auto it = expr.begin();
		_iter_begin_4873464400:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_tok = *it;
			{
				if (_2337db201_tok._field_id == 3LLU) {
					{
						auto _match_expr{ _2337db201_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4873469072; }
						_case_begin_4873469072:;
						{
							if (_9913_brace_n > 0LL) {
								(_9913_brace_n)++;
								goto _match_end_4873467712;
							}
							return _9824_tokens.slice(0LL,_2337db201_i);
						}
						goto _match_end_4873467712;
						_case_end_4873469072:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873468480; }
						_case_begin_4873468480:;
						{
							(_9913_brace_n)++;
						}
						goto _match_end_4873467712;
						_case_end_4873468480:;
						_case_begin_4873467024:;
						{
							(_9913_brace_n)--;
						}
						goto _match_end_4873467712;
						_case_end_4873467024:;
						_match_end_4873467712:;
					}
				}
			}
			_iter_next_4873464400:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4873464400;
		}
		_iter_end_4873464400:;
	}
	return nullptr;
}



std::tuple<jule::Slice<_2336ea198_Token>,jule::Slice<_2336ea198_Token>> _2337db201_split_colon(jule::Slice<_2336ea198_Token>& _12421_tokens) {
	jule::Int _12513_range_n = 0LL;
	{
		auto expr = _12421_tokens;
		auto it = expr.begin();
		_iter_begin_4873466368:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_token = *it;
			{
				{
					auto _match_expr{ _2337db201_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_4873473776; }
					_case_begin_4873473776:;
					{
						{
							auto _match_expr{ _2337db201_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873476736; }
							_case_begin_4873476736:;
							{
								(_12513_range_n)++;
								goto _iter_next_4873466368;
							}
							goto _match_end_4873475312;
							_case_end_4873476736:;
							_case_begin_4873474032:;
							{
								(_12513_range_n)--;
							}
							goto _match_end_4873475312;
							_case_end_4873474032:;
							_match_end_4873475312:;
						}
					}
					goto _match_end_4873473696;
					_case_end_4873473776:;
					if (!((11LLU) == _match_expr)) { goto _case_end_4873473872; }
					_case_begin_4873473872:;
					{
						if (_12513_range_n < 1LL) {
							jule::Slice<_2336ea198_Token> _14225_l = _12421_tokens.slice(0LL,_2337db201_i);
							jule::Slice<_2336ea198_Token> _14325_r = _12421_tokens.slice(_2337db201_i + 1LL);
							return std::make_tuple(_14225_l,_14325_r);
						}
					}
					goto _match_end_4873473696;
					_case_end_4873473872:;
					_match_end_4873473696:;
				}
			}
			_iter_next_4873466368:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4873466368;
		}
		_iter_end_4873466368:;
	}
	return std::make_tuple(nullptr,nullptr);
}



jule::Slice<_2336ea198_Token> _2337db201_eliminate_comments(jule::Slice<_2336ea198_Token>& _18228_tokens) {
	jule::Slice<_2336ea198_Token> _18313_cutted = nullptr;
	{
		auto expr = _18228_tokens;
		auto it = expr.begin();
		_iter_begin_4873481392:;
		if (it != expr.end()) {
			_2336ea198_Token _2337db201_token = *it;
			{
				if (_2337db201_token._field_id != 18LLU) {
					_18313_cutted=jule::append(_18313_cutted,jule::Slice<_2336ea198_Token>({_2337db201_token}));
				}
			}
			_iter_next_4873481392:;
			++it;
			goto _iter_begin_4873481392;
		}
		_iter_end_4873481392:;
	}
	return _18313_cutted;
}



jule::Int _2337db201_find_lowest_prec_op(jule::Slice<_2336ea198_Token>& _19425_tokens) {
	_2337db201_Precedencer _19513_prec = _2337db201_Precedencer();
	jule::Int _19613_brace_n = 0LL;
	jule::Bool _19713_skip_to_next_brace_open = false;
	{
		auto expr = _19425_tokens;
		auto it = expr.begin();
		_iter_begin_4873488832:;
		if (it != expr.end()) {
			jule::Int _2337db201_i = it - expr.begin();
			_2336ea198_Token _2337db201_token = *it;
			{
				{
					if (!((_2337db201_token._field_id == 3LLU))) { goto _case_end_4873491328; }
					_case_begin_4873491328:;
					{
						{
							auto _match_expr{ _2337db201_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_4873495168; }
							_case_begin_4873495168:;
							{
								_19713_skip_to_next_brace_open=false;
								goto _case_begin_4873494576;
							}
							goto _match_end_4873493776;
							_case_end_4873495168:;
							if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_4873494576; }
							_case_begin_4873494576:;
							{
								(_19613_brace_n)++;
							}
							goto _match_end_4873493776;
							_case_end_4873494576:;
							_case_begin_4873492800:;
							{
								(_19613_brace_n)--;
							}
							goto _match_end_4873493776;
							_case_end_4873492800:;
							_match_end_4873493776:;
						}
						goto _iter_next_4873488832;
					}
					goto _match_end_4873491040;
					_case_end_4873491328:;
					if (!((_19713_skip_to_next_brace_open))) { goto _case_end_4873491440; }
					_case_begin_4873491440:;
					{
						goto _iter_next_4873488832;
					}
					goto _match_end_4873491040;
					_case_end_4873491440:;
					if (!((_2337db201_token._field_id == 16LLU))) { goto _case_end_4873491552; }
					_case_begin_4873491552:;
					{
						_19713_skip_to_next_brace_open=true;
						goto _iter_next_4873488832;
					}
					goto _match_end_4873491040;
					_case_end_4873491552:;
					if (!((_2337db201_i == 0LL))) { goto _case_end_4873491664; }
					_case_begin_4873491664:;
					{
						goto _iter_next_4873488832;
					}
					goto _match_end_4873491040;
					_case_end_4873491664:;
					if (!((_2337db201_token._field_id != 7LLU))) { goto _case_end_4873491776; }
					_case_begin_4873491776:;
					{
						goto _iter_next_4873488832;
					}
					goto _match_end_4873491040;
					_case_end_4873491776:;
					if (!((_19613_brace_n > 0LL))) { goto _case_end_4873491888; }
					_case_begin_4873491888:;
					{
						goto _iter_next_4873488832;
					}
					goto _match_end_4873491040;
					_case_end_4873491888:;
					_match_end_4873491040:;
				}
				_2336ea198_Token _23213_left = _19425_tokens[_2337db201_i - 1LL];
				if ((_23213_left._field_id == 7LLU) || (_23213_left._field_id == 11LLU)) {
					goto _iter_next_4873488832;
				}
				if (((_2337db201_i > 1LL) && (_23213_left._field_id == 3LLU)) && (_23213_left._field_kind == jule::Str("]", 1))) {
					_2336ea198_Token _24017_lleft = _19425_tokens[_2337db201_i - 2LL];
					if ((_24017_lleft._field_id == 3LLU) && (_24017_lleft._field_kind == jule::Str("[", 1))) {
						if ((_2337db201_token._field_kind == jule::Str("&", 1)) || (_2337db201_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_4873488832;
						}
					}
				}
				jule::Int _24913_p = _2337db201_token._method_prec();
				if (_24913_p != -1LL) {
					_19513_prec._method_set(_24913_p,jule::Any(_2337db201_i));
				}
			}
			_iter_next_4873488832:;
			++it;
			_2337db201_i++;
			goto _iter_begin_4873488832;
		}
		_iter_end_4873488832:;
	}
	jule::Any _2559_data = _19513_prec._method_get_lower();
	if (_2559_data == nullptr) {
		return -1LL;
	}
	return _2559_data.operator jule::Int();
}



jule::Ptr<_233464770_IdentExpr> _2337db201_build_ident_expr(_2336ea198_Token& _26226_token) {
	return jule::new_struct<_233464770_IdentExpr>(new( std::nothrow ) _233464770_IdentExpr(_26226_token,_26226_token._field_kind,false));
}



std::tuple<jule::Slice<_2336ea198_Token>,jule::Int> _2337db201_get_range_expr_tokens(jule::Slice<_2336ea198_Token>& _27031_tokens) {
	jule::Int _27113_range_n = 0LL;
	jule::I64 _27213_i = _27031_tokens.len() - 1LL;
	for (; _27213_i >= 0LL; (_27213_i)--) {
		{
			_2336ea198_Token _27413_tok = _27031_tokens[_27213_i];
			if (_27413_tok._field_id == 3LLU) {
				{
					auto _match_expr{ _27413_tok._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4873520704; }
					_case_begin_4873520704:;
					{
						(_27113_range_n)++;
					}
					goto _match_end_4873519344;
					_case_end_4873520704:;
					_case_begin_4873518656:;
					{
						(_27113_range_n)--;
					}
					goto _match_end_4873519344;
					_case_end_4873518656:;
					_match_end_4873519344:;
				}
			}
			if (_27113_range_n == 0LL) {
				return std::make_tuple(_27031_tokens.slice(0LL,_27213_i),_27113_range_n);
			}
		}
	_iter_next_4873460736:;
	}
	_iter_end_4873460736:;
	return std::make_tuple(nullptr,_27113_range_n);
}



jule::Bool _23441b814_check_assign_tokens(jule::Slice<_2336ea198_Token>& _1625_tokens) {
	if ((_1625_tokens.len() == 0LL) || (!(_2336ea198_is_assign(_1625_tokens[0LL]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto expr = _1625_tokens;
		auto it = expr.begin();
		_iter_begin_4873525680:;
		if (it != expr.end()) {
			_2336ea198_Token _23441b814_t = *it;
			{
				if (_23441b814_t._field_id == 3LLU) {
					{
						auto _match_expr{ _23441b814_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873529952; }
						_case_begin_4873529952:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4873528592;
						_case_end_4873529952:;
						_case_begin_4873527904:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4873528592;
						_case_end_4873527904:;
						_match_end_4873528592:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_4873525680;
				} else if ((_23441b814_t._field_id == 7LLU) && _2336ea198_is_assign_op(_23441b814_t._field_kind)) {
					return true;
				}
			}
			_iter_next_4873525680:;
			++it;
			goto _iter_begin_4873525680;
		}
		_iter_end_4873525680:;
	}
	return false;
}



_231e4202e_Log _23441cd43_make_err(jule::Int _5113_row,jule::Int _5123_col,jule::Ptr<_2334d2d3d_File>& _5134_f,jule::Str _5144_fmt,jule::Slice<jule::Any> _5157_args) {
	return _231e4202e_Log(1LLU,_5113_row,_5123_col,_5134_f->_method_path(),_231e4202e_logf(_5144_fmt,_5157_args),jule::Str(),jule::Str());
}



jule::Slice<_2336ea198_Token> _23441cd43_range(jule::Int& _7015_i,jule::Str _7023_open,jule::Str _7040_close,jule::Slice<_2336ea198_Token>& _7063_tokens) {
	if (_7015_i >= _7063_tokens.len()) {
		return nullptr;
	}
	_2336ea198_Token _759_tok = _7063_tokens[_7015_i];
	if ((_759_tok._field_id != 3LLU) || (_759_tok._field_kind != _7023_open)) {
		return nullptr;
	}
	(_7015_i)++;
	jule::Int _8113_range_n = 1LL;
	jule::Int _829_start = _7015_i;
	for (; (_8113_range_n != 0LL) && (_7015_i < _7063_tokens.len()); (_7015_i)++) {
		{
			_2336ea198_Token _8413_token = _7063_tokens[_7015_i];
			if (_8413_token._field_id == 3LLU) {
				{
					auto _match_expr{ _8413_token._field_kind };
					if (!((_7023_open) == _match_expr)) { goto _case_end_4873547136; }
					_case_begin_4873547136:;
					{
						(_8113_range_n)++;
					}
					goto _match_end_4873547056;
					_case_end_4873547136:;
					if (!((_7040_close) == _match_expr)) { goto _case_end_4873547232; }
					_case_begin_4873547232:;
					{
						(_8113_range_n)--;
					}
					goto _match_end_4873547056;
					_case_end_4873547232:;
					_match_end_4873547056:;
				}
			}
		}
	_iter_next_4873541056:;
	}
	_iter_end_4873541056:;
	return _7063_tokens.slice(_829_start,_7015_i - 1LL);
}



std::tuple<jule::Slice<_2336ea198_Token>,jule::Slice<_2336ea198_Token>> _23441cd43_range_last(jule::Slice<_2336ea198_Token>& _10320_tokens) {
	jule::Slice<_2336ea198_Token> _10339_cutted = jule::Slice<_2336ea198_Token>();
	jule::Slice<_2336ea198_Token> _10356_cut = jule::Slice<_2336ea198_Token>();
	if (_10320_tokens.len() == 0LL) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	} else if (_10320_tokens[_10320_tokens.len() - 1LL]._field_id != 3LLU) {
		_10339_cutted = _10320_tokens;
		_10356_cut = nullptr;
		return std::make_tuple(_10339_cutted,_10356_cut);
	}
	jule::Int _11013_brace_n = 0LL;
	jule::I64 _11113_i = _10320_tokens.len() - 1LL;
	for (; _11113_i >= 0LL; (_11113_i)--) {
		{
			_2336ea198_Token _11313_token = _10320_tokens[_11113_i];
			if (_11313_token._field_id == 3LLU) {
				{
					auto _match_expr{ _11313_token._field_kind };
					if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_4873560672; }
					_case_begin_4873560672:;
					{
						(_11013_brace_n)++;
						goto _iter_next_4873546208;
					}
					goto _match_end_4873559312;
					_case_end_4873560672:;
					_case_begin_4873558624:;
					{
						(_11013_brace_n)--;
					}
					goto _match_end_4873559312;
					_case_end_4873558624:;
					_match_end_4873559312:;
				}
			}
			if (_11013_brace_n == 0LL) {
				_10339_cutted = _10320_tokens.slice(0LL,_11113_i);
				_10356_cut = _10320_tokens.slice(_11113_i);
				return std::make_tuple(_10339_cutted,_10356_cut);
			}
		}
	_iter_next_4873546208:;
	}
	_iter_end_4873546208:;
	_10339_cutted = _10320_tokens;
	_10356_cut = nullptr;
	return std::make_tuple(_10339_cutted,_10356_cut);
}



std::tuple<jule::Slice<jule::Slice<_2336ea198_Token>>,jule::Slice<_231e4202e_Log>> _23441cd43_parts(jule::Slice<_2336ea198_Token>& _14115_tokens,jule::Uint _14132_id,jule::Bool _14145_expr_must) {
	if (_14115_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_2336ea198_Token>> _14613_parts = nullptr;
	jule::Slice<_231e4202e_Log> _14713_errors = nullptr;
	jule::Int _14913_range_n = 0LL;
	jule::Int _15013_last = 0LL;
	{
		auto expr = _14115_tokens;
		auto it = expr.begin();
		_iter_begin_4873563792:;
		if (it != expr.end()) {
			jule::Int _23441cd43_i = it - expr.begin();
			_2336ea198_Token _23441cd43_token = *it;
			{
				if (_23441cd43_token._field_id == 3LLU) {
					{
						auto _match_expr{ _23441cd43_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873574304; }
						_case_begin_4873574304:;
						{
							(_14913_range_n)++;
							goto _iter_next_4873563792;
						}
						goto _match_end_4873572944;
						_case_end_4873574304:;
						_case_begin_4873572256:;
						{
							(_14913_range_n)--;
						}
						goto _match_end_4873572944;
						_case_end_4873572256:;
						_match_end_4873572944:;
					}
				}
				if (_14913_range_n > 0LL) {
					goto _iter_next_4873563792;
				}
				if (_23441cd43_token._field_id == _14132_id) {
					if (_14145_expr_must && ((_23441cd43_i - _15013_last) <= 0LL)) {
						_231e4202e_Log _17021_err = _23441cd43_make_err(_23441cd43_token._field_row,_23441cd43_token._field_column,_23441cd43_token._field_file,jule::Str("expression missing", 18),jule::Slice<jule::Any>({}));
						_14713_errors=jule::append(_14713_errors,jule::Slice<_231e4202e_Log>({_17021_err}));
					}
					_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_2336ea198_Token>>({_14115_tokens.slice(_15013_last,_23441cd43_i)}));
					_15013_last=static_cast<jule::Int>(_23441cd43_i + 1LL);
				}
			}
			_iter_next_4873563792:;
			++it;
			_23441cd43_i++;
			goto _iter_begin_4873563792;
		}
		_iter_end_4873563792:;
	}
	if (_15013_last < _14115_tokens.len()) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_2336ea198_Token>>({_14115_tokens.slice(_15013_last)}));
	} else if ((!(_14145_expr_must))) {
		_14613_parts=jule::append(_14613_parts,jule::Slice<jule::Slice<_2336ea198_Token>>({jule::Slice<_2336ea198_Token>({})}));
	}
	return std::make_tuple(_14613_parts,_14713_errors);
}



jule::Str _23441cd43_get_close_kind_of_brace(jule::Str _18728_left) {
	{
		auto _match_expr{ _18728_left };
		if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_4873583968; }
		_case_begin_4873583968:;
		{
			return jule::Str("(", 1);
		}
		goto _match_end_4873583616;
		_case_end_4873583968:;
		if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_4873583712; }
		_case_begin_4873583712:;
		{
			return jule::Str("{", 1);
		}
		goto _match_end_4873583616;
		_case_end_4873583712:;
		if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_4873583808; }
		_case_begin_4873583808:;
		{
			return jule::Str("[", 1);
		}
		goto _match_end_4873583616;
		_case_end_4873583808:;
		_case_begin_4873571248:;
		{
			return jule::Str();
		}
		goto _match_end_4873583616;
		_case_end_4873571248:;
		_match_end_4873583616:;
	}
}



_231e4202e_Log _23441cd43_compiler_err(_2336ea198_Token& _19618_token,jule::Str& _19633_fmt,jule::Slice<jule::Any> _19646_args) {
	return _231e4202e_Log(1LLU,_19618_token._field_row,_19618_token._field_column,_19618_token._field_file->_method_path(),_231e4202e_logf(_19633_fmt,_19646_args),_19618_token._field_file->_method_get_row(_19618_token._field_row),jule::Str());
}



void _23441cd43_push_suggestion(_231e4202e_Log* _20731_log,jule::Str _20742_fmt,jule::Slice<jule::Any> _20755_args) {
	_20731_log->_field_suggestion=_231e4202e_logf(_20742_fmt,_20755_args);
}



jule::Ptr<_233464770_Comment> _23441cd43_build_comment(_2336ea198_Token& _21123_token) {
	_21123_token._field_kind=_21123_token._field_kind.slice(2LL).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_233464770_Comment>(new( std::nothrow ) _233464770_Comment(_21123_token,_21123_token._field_kind));
}



jule::Str _23441cd43_tokstoa(jule::Slice<_2336ea198_Token>& _22013_tokens) {
	jule::Str _22113_s = jule::Str();
	{
		auto expr = _22013_tokens;
		auto it = expr.begin();
		_iter_begin_4873597120:;
		if (it != expr.end()) {
			_2336ea198_Token _23441cd43_token = *it;
			{
				_22113_s+=_23441cd43_token._field_kind;
			}
			_iter_next_4873597120:;
			++it;
			goto _iter_begin_4873597120;
		}
		_iter_end_4873597120:;
	}
	return _22113_s;
}



jule::Ptr<_233464770_TypeDecl> _23473c948_build_void_type(void) {
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl());
}



jule::Ptr<_233464770_TypeDecl> _23473c948_build_prim_type(_2336ea198_Token _2024_token) {
	return jule::new_struct<_233464770_TypeDecl>(new( std::nothrow ) _233464770_TypeDecl(_2024_token,jule::Any(jule::new_struct<_233464770_IdentTypeDecl>(new( std::nothrow ) _233464770_IdentTypeDecl(_2024_token,_2024_token._field_kind,false,nullptr)))));
}



std::tuple<jule::Slice<_2336ea198_Token>,jule::Int> _23473c948_split_map_range(jule::Slice<_2336ea198_Token>& _3525_tokens,jule::Int& _3547_i) {
	jule::Slice<_2336ea198_Token> _3557_range_tokens = jule::Slice<_2336ea198_Token>();
	jule::Int _3580_colon = jule::Int();
	_3580_colon=-1LL;
	jule::Int _3713_range_n = 0LL;
	jule::Int _389_start = _3547_i;
	for (; _3547_i < _3525_tokens.len(); (_3547_i)++) {
		{
			_2336ea198_Token _4013_token = _3525_tokens[_3547_i];
			if (_4013_token._field_id == 3LLU) {
				{
					auto _match_expr{ _4013_token._field_kind };
					if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_4873610176; }
					_case_begin_4873610176:;
					{
						(_3713_range_n)++;
						goto _iter_next_4873604032;
					}
					goto _match_end_4873608816;
					_case_end_4873610176:;
					_case_begin_4873608128:;
					{
						(_3713_range_n)--;
					}
					goto _match_end_4873608816;
					_case_end_4873608128:;
					_match_end_4873608816:;
				}
			}
			if (_3713_range_n == 0LL) {
				if ((_389_start + 1LL) > _3547_i) {
					return std::make_tuple(_3557_range_tokens,_3580_colon);
				}
				_3557_range_tokens=_3525_tokens.slice(_389_start + 1LL,_3547_i);
				goto _iter_end_4873604032;
			} else if (_3713_range_n != 1LL) {
				goto _iter_next_4873604032;
			}
			if ((_3580_colon == -1LL) && (_4013_token._field_id == 11LLU)) {
				_3580_colon=static_cast<jule::Int>((_3547_i - _389_start) - 1LL);
			}
		}
	_iter_next_4873604032:;
	}
	_iter_end_4873604032:;
	return std::make_tuple(_3557_range_tokens,_3580_colon);
}



void _1d68bd462_lshift_unsig(_1d68bd462_Const& _55822_c,_1d68bd462_Const& _55833_x) {
	jule::U64 _5599_l = _55822_c._method_as_u64();
	jule::U64 _5609_r = _55833_x._method_as_u64();
	_55822_c._method_set_u64(static_cast<jule::U64>(_5599_l << _5609_r));
}



void _1d68bd462_rshift_unsig(_1d68bd462_Const& _56422_c,_1d68bd462_Const& _56433_x) {
	jule::U64 _5659_l = _56422_c._method_as_u64();
	jule::U64 _5669_r = _56433_x._method_as_u64();
	_56422_c._method_set_u64(static_cast<jule::U64>(_5659_l >> _5669_r));
}



jule::Bool _1d68c15ca_check_bit(jule::Str _914_v,jule::Int _922_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)> _932_checker) {
	{
		if (!((_914_v == jule::Str()))) { goto _case_end_4876267920; }
		_case_begin_4876267920:;
		{
			return false;
		}
		goto _match_end_4876266112;
		_case_end_4876267920:;
		if (!((_914_v.len() == 1LL))) { goto _case_end_4876268304; }
		_case_begin_4876268304:;
		{
			return true;
		}
		goto _match_end_4876266112;
		_case_end_4876268304:;
		if (!((_914_v.has_prefix(jule::Str("0x", 2))))) { goto _case_end_4876268592; }
		_case_begin_4876268592:;
		{
			return _932_checker(_914_v.slice(2LL),16LL,_922_bit);
		}
		goto _match_end_4876266112;
		_case_end_4876268592:;
		if (!((_914_v.has_prefix(jule::Str("0b", 2))))) { goto _case_end_4876268688; }
		_case_begin_4876268688:;
		{
			return _932_checker(_914_v.slice(2LL),2LL,_922_bit);
		}
		goto _match_end_4876266112;
		_case_end_4876268688:;
		if (!((_914_v.has_prefix(jule::Str("0o", 2))))) { goto _case_end_4876268784; }
		_case_begin_4876268784:;
		{
			return _932_checker(_914_v.slice(2LL),8LL,_922_bit);
		}
		goto _match_end_4876266112;
		_case_end_4876268784:;
		if (!((_914_v[0LL] == '0'))) { goto _case_end_4876267232; }
		_case_begin_4876267232:;
		{
			return _932_checker(_914_v.slice(1LL),8LL,_922_bit);
		}
		goto _match_end_4876266112;
		_case_end_4876267232:;
		_case_begin_4876266256:;
		{
			return _932_checker(_914_v,10LL,_922_bit);
		}
		goto _match_end_4876266112;
		_case_end_4876266256:;
		_match_end_4876266112:;
	}
}



jule::Str _1d68c15ca_real_kind_of(jule::Str _2421_kind) {
	{
		auto _match_expr{ _2421_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_4876278912; }
		_case_begin_4876278912:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4876275920;
		_case_end_4876278912:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_4876279008; }
		_case_begin_4876279008:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4876275920;
		_case_end_4876279008:;
		_case_begin_4876275824:;
		{
			return _2421_kind;
		}
		goto _match_end_4876275920;
		_case_end_4876275824:;
		_match_end_4876275920:;
	}
}



jule::Int _1d68c15ca_bitsize_of(jule::Str _4019_k) {
	{
		auto _match_expr{ _4019_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4876281984; }
		_case_begin_4876281984:;
		{
			return 8LL;
		}
		goto _match_end_4876280560;
		_case_end_4876281984:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4876282080; }
		_case_begin_4876282080:;
		{
			return 16LL;
		}
		goto _match_end_4876280560;
		_case_end_4876282080:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4876282336; }
		_case_begin_4876282336:;
		{
			return 32LL;
		}
		goto _match_end_4876280560;
		_case_end_4876282336:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4876282432; }
		_case_begin_4876282432:;
		{
			return 64LL;
		}
		goto _match_end_4876280560;
		_case_end_4876282432:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_4876282528; }
		_case_begin_4876282528:;
		{
			return 64LL;
		}
		goto _match_end_4876280560;
		_case_end_4876282528:;
		_case_begin_4876280416:;
		{
			return -1LL;
		}
		goto _match_end_4876280560;
		_case_end_4876280416:;
		_match_end_4876280560:;
	}
}



jule::Str _1d68c15ca_int_from_bits(jule::U64 _7222_bits) {
	{
		auto _match_expr{ _7222_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4876286592; }
		_case_begin_4876286592:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4876285376;
		_case_end_4876286592:;
		if (!((16LL) == _match_expr)) { goto _case_end_4876286688; }
		_case_begin_4876286688:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4876285376;
		_case_end_4876286688:;
		if (!((32LL) == _match_expr)) { goto _case_end_4876286784; }
		_case_begin_4876286784:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4876285376;
		_case_end_4876286784:;
		if (!((64LL) == _match_expr)) { goto _case_end_4876286080; }
		_case_begin_4876286080:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4876285376;
		_case_end_4876286080:;
		_case_begin_4876285520:;
		{
			return jule::Str();
		}
		goto _match_end_4876285376;
		_case_end_4876285520:;
		_match_end_4876285376:;
	}
}



jule::Str _1d68c15ca_uint_from_bits(jule::U64 _8523_bits) {
	{
		auto _match_expr{ _8523_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_4876290272; }
		_case_begin_4876290272:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4876289728;
		_case_end_4876290272:;
		if (!((16LL) == _match_expr)) { goto _case_end_4876290368; }
		_case_begin_4876290368:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4876289728;
		_case_end_4876290368:;
		if (!((32LL) == _match_expr)) { goto _case_end_4876290464; }
		_case_begin_4876290464:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4876289728;
		_case_end_4876290464:;
		if (!((64LL) == _match_expr)) { goto _case_end_4876287216; }
		_case_begin_4876287216:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4876289728;
		_case_end_4876287216:;
		_case_begin_4876288144:;
		{
			return jule::Str();
		}
		goto _match_end_4876289728;
		_case_end_4876288144:;
		_match_end_4876289728:;
	}
}



jule::Str _1d68c15ca_float_from_bits(jule::U64 _9924_bits) {
	{
		auto _match_expr{ _9924_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_4876294368; }
		_case_begin_4876294368:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4876291824;
		_case_end_4876294368:;
		if (!((64LL) == _match_expr)) { goto _case_end_4876293952; }
		_case_begin_4876293952:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4876291824;
		_case_end_4876293952:;
		_case_begin_4876292688:;
		{
			return jule::Str();
		}
		goto _match_end_4876291824;
		_case_end_4876292688:;
		_match_end_4876291824:;
	}
}



jule::Bool _1d68c15ca_check_bit_int(jule::Str _10822_v,jule::Int _10830_bit) {
	return _1d68c15ca_check_bit(_10822_v,_10830_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _10930_v,jule::Int _10938_base,jule::Int _10949_bit) mutable -> jule::Bool {
		jule::Int _11017_err;
		std::tie(std::ignore,_11017_err) = _231e6dda2_parse_int(_10930_v,_10938_base,_10949_bit);
		return _11017_err == 0LLU;
	}));
}



jule::Bool _1d68c15ca_check_bit_uint(jule::Str _11623_v,jule::Int _11631_bit) {
	return _1d68c15ca_check_bit(_11623_v,_11631_bit,jule::Fn<jule::Bool(jule::Str,jule::Int,jule::Int)>([=](jule::Str _11730_v,jule::Int _11738_base,jule::Int _11749_bit) mutable -> jule::Bool {
		jule::Int _11817_err;
		std::tie(std::ignore,_11817_err) = _231e6dda2_parse_uint(_11730_v,_11738_base,_11749_bit);
		return _11817_err == 0LLU;
	}));
}



jule::Bool _1d68c15ca_check_bit_float(jule::Str _12424_val,jule::Int _12434_bit) {
	jule::Int _12513_err;
	std::tie(std::ignore,_12513_err) = _232d42e62_parse_float(_12424_val,_12434_bit);
	return _12513_err == 0LLU;
}



jule::U64 _1d68c15ca_bitsize_of_float(jule::F64 _13425_x) {
	{
		if (!(((-340282346638528860000000000000000000000.0 <= _13425_x) && (_13425_x <= 340282346638528860000000000000000000000.0)))) { goto _case_end_4876314704; }
		_case_begin_4876314704:;
		{
			return 32LL;
		}
		goto _match_end_4876312256;
		_case_end_4876314704:;
		_case_begin_4876312432:;
		{
			return 64LL;
		}
		goto _match_end_4876312256;
		_case_end_4876312432:;
		_match_end_4876312256:;
	}
}



jule::U64 _1d68c15ca_bitsize_of_int(jule::I64 _14823_x) {
	{
		if (!(((-128LL <= _14823_x) && (_14823_x <= 127LL)))) { goto _case_end_4876317136; }
		_case_begin_4876317136:;
		{
			return 8LL;
		}
		goto _match_end_4876315136;
		_case_end_4876317136:;
		if (!(((-32768LL <= _14823_x) && (_14823_x <= 32767LL)))) { goto _case_end_4876317472; }
		_case_begin_4876317472:;
		{
			return 16LL;
		}
		goto _match_end_4876315136;
		_case_end_4876317472:;
		if (!(((-2147483648LL <= _14823_x) && (_14823_x <= 2147483647LL)))) { goto _case_end_4876317568; }
		_case_begin_4876317568:;
		{
			return 32LL;
		}
		goto _match_end_4876315136;
		_case_end_4876317568:;
		_case_begin_4876315792:;
		{
			return 64LL;
		}
		goto _match_end_4876315136;
		_case_end_4876315792:;
		_match_end_4876315136:;
	}
}



jule::U64 _1d68c15ca_bitsize_of_uint(jule::U64 _16424_x) {
	{
		if (!((_16424_x <= 255LL))) { goto _case_end_4876321936; }
		_case_begin_4876321936:;
		{
			return 8LL;
		}
		goto _match_end_4876320896;
		_case_end_4876321936:;
		if (!((_16424_x <= 65535LL))) { goto _case_end_4876322272; }
		_case_begin_4876322272:;
		{
			return 16LL;
		}
		goto _match_end_4876320896;
		_case_end_4876322272:;
		if (!((_16424_x <= 4294967295LL))) { goto _case_end_4876322368; }
		_case_begin_4876322368:;
		{
			return 32LL;
		}
		goto _match_end_4876320896;
		_case_end_4876322368:;
		_case_begin_4876320336:;
		{
			return 64LL;
		}
		goto _match_end_4876320896;
		_case_end_4876320336:;
		_match_end_4876320896:;
	}
}



jule::F64 _1d68ca88c_min(jule::Str _4316_k) {
	_4316_k=_1d68c15ca_real_kind_of(_4316_k);
	{
		auto _match_expr{ _4316_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4876326000; }
		_case_begin_4876326000:;
		{
			return -128LL;
		}
		goto _match_end_4876324304;
		_case_end_4876326000:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4876326336; }
		_case_begin_4876326336:;
		{
			return -32768LL;
		}
		goto _match_end_4876324304;
		_case_end_4876326336:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4876326432; }
		_case_begin_4876326432:;
		{
			return -2147483648LL;
		}
		goto _match_end_4876324304;
		_case_end_4876326432:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4876325632; }
		_case_begin_4876325632:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4876324304;
		_case_end_4876325632:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4876325728; }
		_case_begin_4876325728:;
		{
			return -340282346638528860000000000000000000000.0;
		}
		goto _match_end_4876324304;
		_case_end_4876325728:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4876325824; }
		_case_begin_4876325824:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4876324304;
		_case_end_4876325824:;
		_case_begin_4876323472:;
		{
			return 0LL;
		}
		goto _match_end_4876324304;
		_case_end_4876323472:;
		_match_end_4876324304:;
	}
}



jule::F64 _1d68ca88c_max(jule::Str _5816_k) {
	_5816_k=_1d68c15ca_real_kind_of(_5816_k);
	{
		auto _match_expr{ _5816_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4876331536; }
		_case_begin_4876331536:;
		{
			return 127LL;
		}
		goto _match_end_4876330224;
		_case_end_4876331536:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4876331680; }
		_case_begin_4876331680:;
		{
			return 32767LL;
		}
		goto _match_end_4876330224;
		_case_end_4876331680:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4876331776; }
		_case_begin_4876331776:;
		{
			return 2147483647LL;
		}
		goto _match_end_4876330224;
		_case_end_4876331776:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4876330592; }
		_case_begin_4876330592:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4876330224;
		_case_end_4876330592:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4876330688; }
		_case_begin_4876330688:;
		{
			return 255LL;
		}
		goto _match_end_4876330224;
		_case_end_4876330688:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4876330784; }
		_case_begin_4876330784:;
		{
			return 65535LL;
		}
		goto _match_end_4876330224;
		_case_end_4876330784:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4876330880; }
		_case_begin_4876330880:;
		{
			return 4294967295LL;
		}
		goto _match_end_4876330224;
		_case_end_4876330880:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4876330992; }
		_case_begin_4876330992:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4876330224;
		_case_end_4876330992:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4876331104; }
		_case_begin_4876331104:;
		{
			return 340282346638528860000000000000000000000.0;
		}
		goto _match_end_4876330224;
		_case_end_4876331104:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4876331216; }
		_case_begin_4876331216:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4876330224;
		_case_end_4876331216:;
		_case_begin_4876326864:;
		{
			return 0LL;
		}
		goto _match_end_4876330224;
		_case_end_4876326864:;
		_match_end_4876330224:;
	}
}



jule::Bool _1d68cc3c7_is_i8_compatible(jule::Str _629_k) {
	_629_k=_1d68c15ca_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



jule::Bool _1d68cc3c7_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_1d68c15ca_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



jule::Bool _1d68cc3c7_is_i32_compatible(jule::Str _2030_k) {
	_2030_k=_1d68c15ca_real_kind_of(_2030_k);
	return ((((_2030_k == jule::Str("i8", 2)) || (_2030_k == jule::Str("i16", 3))) || (_2030_k == jule::Str("i32", 3))) || (_2030_k == jule::Str("u8", 2))) || (_2030_k == jule::Str("u16", 3));
}



jule::Bool _1d68cc3c7_is_i64_compatible(jule::Str _3030_k) {
	_3030_k=_1d68c15ca_real_kind_of(_3030_k);
	return ((((((_3030_k == jule::Str("i8", 2)) || (_3030_k == jule::Str("i16", 3))) || (_3030_k == jule::Str("i32", 3))) || (_3030_k == jule::Str("i64", 3))) || (_3030_k == jule::Str("u8", 2))) || (_3030_k == jule::Str("u16", 3))) || (_3030_k == jule::Str("u32", 3));
}



jule::Bool _1d68cc3c7_is_u8_compatible(jule::Str _4229_k) {
	_4229_k=_1d68c15ca_real_kind_of(_4229_k);
	return _4229_k == jule::Str("u8", 2);
}



jule::Bool _1d68cc3c7_is_u16_compatible(jule::Str _4830_k) {
	_4830_k=_1d68c15ca_real_kind_of(_4830_k);
	return (_4830_k == jule::Str("u8", 2)) || (_4830_k == jule::Str("u16", 3));
}



jule::Bool _1d68cc3c7_is_u32_compatible(jule::Str _5430_k) {
	_5430_k=_1d68c15ca_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3))) || (_5430_k == jule::Str("u32", 3));
}



jule::Bool _1d68cc3c7_is_u64_compatible(jule::Str _6230_k) {
	_6230_k=_1d68c15ca_real_kind_of(_6230_k);
	return (((_6230_k == jule::Str("u8", 2)) || (_6230_k == jule::Str("u16", 3))) || (_6230_k == jule::Str("u32", 3))) || (_6230_k == jule::Str("u64", 3));
}



jule::Bool _1d68cc3c7_is_f32_compatible(jule::Str _7130_k) {
	_7130_k=_1d68c15ca_real_kind_of(_7130_k);
	return _7130_k == jule::Str("f32", 3);
}



jule::Bool _1d68cc3c7_is_f64_compatible(jule::Str _7730_k) {
	_7730_k=_1d68c15ca_real_kind_of(_7730_k);
	return (_7730_k == jule::Str("f64", 3)) || (_7730_k == jule::Str("f32", 3));
}



jule::Bool _1d68cc3c7_types_are_compatible(jule::Str _8633_k1,jule::Str _8642_k2) {
	_8633_k1=_1d68c15ca_real_kind_of(_8633_k1);
	{
		auto _match_expr{ _8633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4876358592; }
		_case_begin_4876358592:;
		{
			return true;
		}
		goto _match_end_4876357024;
		_case_end_4876358592:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_4876357424; }
		_case_begin_4876357424:;
		{
			return _1d68cc3c7_is_i8_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876357424:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4876357520; }
		_case_begin_4876357520:;
		{
			return _1d68cc3c7_is_i16_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876357520:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4876357616; }
		_case_begin_4876357616:;
		{
			return _1d68cc3c7_is_i32_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876357616:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4876357712; }
		_case_begin_4876357712:;
		{
			return _1d68cc3c7_is_i64_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876357712:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4876357808; }
		_case_begin_4876357808:;
		{
			return _1d68cc3c7_is_u8_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876357808:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4876357904; }
		_case_begin_4876357904:;
		{
			return _1d68cc3c7_is_u16_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876357904:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4876358000; }
		_case_begin_4876358000:;
		{
			return _1d68cc3c7_is_u32_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876358000:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4876358096; }
		_case_begin_4876358096:;
		{
			return _1d68cc3c7_is_u64_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876358096:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4876358192; }
		_case_begin_4876358192:;
		{
			return _1d68cc3c7_is_f32_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876358192:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4876358768; }
		_case_begin_4876358768:;
		{
			return _1d68cc3c7_is_f64_compatible(_8642_k2);
		}
		goto _match_end_4876357024;
		_case_end_4876358768:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_4876358864; }
		_case_begin_4876358864:;
		{
			return _8642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_4876357024;
		_case_end_4876358864:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_4876358976; }
		_case_begin_4876358976:;
		{
			return _8642_k2 == jule::Str("str", 3);
		}
		goto _match_end_4876357024;
		_case_end_4876358976:;
		_case_begin_4876357104:;
		{
			return false;
		}
		goto _match_end_4876357024;
		_case_end_4876357104:;
		_match_end_4876357024:;
	}
}



jule::Bool _1d68cc3c7_is_i16_greater(jule::Str _10727_k) {
	_10727_k=_1d68c15ca_real_kind_of(_10727_k);
	return _10727_k == jule::Str("u8", 2);
}



jule::Bool _1d68cc3c7_is_i32_greater(jule::Str _11327_k) {
	_11327_k=_1d68c15ca_real_kind_of(_11327_k);
	return (_11327_k == jule::Str("i8", 2)) || (_11327_k == jule::Str("i16", 3));
}



jule::Bool _1d68cc3c7_is_i64_greater(jule::Str _11927_k) {
	_11927_k=_1d68c15ca_real_kind_of(_11927_k);
	return ((_11927_k == jule::Str("i8", 2)) || (_11927_k == jule::Str("i16", 3))) || (_11927_k == jule::Str("i32", 3));
}



jule::Bool _1d68cc3c7_is_u8_greater(jule::Str _12726_k) {
	_12726_k=_1d68c15ca_real_kind_of(_12726_k);
	return _12726_k == jule::Str("i8", 2);
}



jule::Bool _1d68cc3c7_is_u16_greater(jule::Str _13327_k) {
	_13327_k=_1d68c15ca_real_kind_of(_13327_k);
	return ((_13327_k == jule::Str("u8", 2)) || (_13327_k == jule::Str("i8", 2))) || (_13327_k == jule::Str("i16", 3));
}



jule::Bool _1d68cc3c7_is_u32_greater(jule::Str _14127_k) {
	_14127_k=_1d68c15ca_real_kind_of(_14127_k);
	return ((((_14127_k == jule::Str("u8", 2)) || (_14127_k == jule::Str("u16", 3))) || (_14127_k == jule::Str("i8", 2))) || (_14127_k == jule::Str("i16", 3))) || (_14127_k == jule::Str("i32", 3));
}



jule::Bool _1d68cc3c7_is_u64_greater(jule::Str _15127_k) {
	_15127_k=_1d68c15ca_real_kind_of(_15127_k);
	return ((((((_15127_k == jule::Str("u8", 2)) || (_15127_k == jule::Str("u16", 3))) || (_15127_k == jule::Str("u32", 3))) || (_15127_k == jule::Str("i8", 2))) || (_15127_k == jule::Str("i16", 3))) || (_15127_k == jule::Str("i32", 3))) || (_15127_k == jule::Str("i64", 3));
}



jule::Bool _1d68cc3c7_is_f32_greater(jule::Str _16323_k) {
	return _16323_k != jule::Str("f64", 3);
}



jule::Bool _1d68cc3c7_is_f64_greater(jule::Str _16523_k) {
	return true;
}



jule::Bool _1d68cc3c7_is_greater(jule::Str _16823_k1,jule::Str _16832_k2) {
	_16823_k1=_1d68c15ca_real_kind_of(_16823_k1);
	{
		auto _match_expr{ _16823_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_4876384544; }
		_case_begin_4876384544:;
		{
			return _1d68cc3c7_is_i16_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876384544:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_4876384640; }
		_case_begin_4876384640:;
		{
			return _1d68cc3c7_is_i32_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876384640:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_4876385520; }
		_case_begin_4876385520:;
		{
			return _1d68cc3c7_is_i64_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876385520:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_4876385616; }
		_case_begin_4876385616:;
		{
			return _1d68cc3c7_is_u16_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876385616:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_4876385712; }
		_case_begin_4876385712:;
		{
			return _1d68cc3c7_is_u8_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876385712:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_4876385824; }
		_case_begin_4876385824:;
		{
			return _1d68cc3c7_is_u32_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876385824:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_4876384944; }
		_case_begin_4876384944:;
		{
			return _1d68cc3c7_is_u64_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876384944:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_4876385056; }
		_case_begin_4876385056:;
		{
			return _1d68cc3c7_is_f32_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876385056:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_4876385168; }
		_case_begin_4876385168:;
		{
			return _1d68cc3c7_is_f64_greater(_16832_k2);
		}
		goto _match_end_4876384096;
		_case_end_4876385168:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_4876385280; }
		_case_begin_4876385280:;
		{
			return true;
		}
		goto _match_end_4876384096;
		_case_end_4876385280:;
		_case_begin_4876379424:;
		{
			return false;
		}
		goto _match_end_4876384096;
		_case_end_4876379424:;
		_match_end_4876384096:;
	}
}



jule::Bool _1d68ce6a4_is_sig_int(jule::Str _2723_k) {
	_2723_k=_1d68c15ca_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



jule::Bool _1d68ce6a4_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_1d68c15ca_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



jule::Bool _1d68ce6a4_is_int(jule::Str _4915_k) {
	return _1d68ce6a4_is_sig_int(_4915_k) || _1d68ce6a4_is_unsig_int(_4915_k);
}



jule::Bool _1d68ce6a4_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



jule::Bool _1d68ce6a4_is_num(jule::Str _5915_k) {
	return _1d68ce6a4_is_int(_5915_k) || _1d68ce6a4_is_float(_5915_k);
}



jule::Bool _1d68ce6a4_is_sig_num(jule::Str _6419_k) {
	return _1d68ce6a4_is_sig_int(_6419_k) || _1d68ce6a4_is_float(_6419_k);
}



jule::Bool _1d6a262e0_is_ascii(jule::I32 _1017_r) {
	
	return _1017_r <= 127LLU;
}



jule::I32 _1d6a262e0_to_rune(jule::Slice<jule::U8> _1816_bytes) {
	if (_1816_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _2313_r = 0LL;
	if ((_1816_bytes[0LL] == '\\') && (_1816_bytes.len() > 1LL)) {
		jule::Int _2517_i = 0LL;
		_2313_r=static_cast<jule::I32>(_1d6a262e0_rune_from_esq_seq(_1816_bytes,_2517_i));
	} else {
		std::tie(_2313_r,std::ignore) = _23381108e_decode_rune(_1816_bytes);
	}
	return _2313_r;
}



jule::Str _1d6a262e0_to_raw_str(jule::Slice<jule::U8> _3719_bytes) {
	return static_cast<jule::Str>(_3719_bytes);
}



jule::Str _1d6a262e0_to_str(jule::Slice<jule::U8> _4215_bytes) {
	if (_4215_bytes.len() == 0LL) {
		return jule::Str();
	}
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL,static_cast<jule::I64>(_4215_bytes.len()));
	jule::Int _4813_i = 0LL;
	while (_4813_i < _4215_bytes.len()) {
		{
			jule::U8 _5013_b = _4215_bytes[_4813_i];
			if (_5013_b == '\\') {
				_4713_s=jule::append(_4713_s,_1d6a262e0_str_esq_seq(_4215_bytes,_4813_i));
			} else {
				jule::I32 _5418_r;
				jule::Int _5421_size;
				std::tie(_5418_r,_5421_size) = _23381108e_decode_rune(_4215_bytes.slice(_4813_i));
				_4813_i+=_5421_size;
				_4713_s=_23381108e_append_rune(_4713_s,_5418_r);
			}
		}
	_iter_next_4876422272:;
	}
	_iter_end_4876422272:;
	return static_cast<jule::Str>(_4713_s);
}



std::tuple<jule::U8,jule::Bool> _1d6a262e0_try_btoa_common_esq(jule::Slice<jule::U8> _6224_bytes) {
	jule::U8 _6241_seq = jule::U8();
	jule::Bool _6252_ok = jule::Bool();
	if ((_6224_bytes.len() < 2LL) || (_6224_bytes[0LL] != '\\')) {
		return std::make_tuple(_6241_seq,_6252_ok);
	}
	{
		auto _match_expr{ _6224_bytes[1LL] };
		if (!(('\\') == _match_expr)) { goto _case_end_4876434560; }
		_case_begin_4876434560:;
		{
			_6241_seq='\\';
		}
		goto _match_end_4876436048;
		_case_end_4876434560:;
		if (!(('\'') == _match_expr)) { goto _case_end_4876436496; }
		_case_begin_4876436496:;
		{
			_6241_seq='\'';
		}
		goto _match_end_4876436048;
		_case_end_4876436496:;
		if (!(('\"') == _match_expr)) { goto _case_end_4876436592; }
		_case_begin_4876436592:;
		{
			_6241_seq='\"';
		}
		goto _match_end_4876436048;
		_case_end_4876436592:;
		if (!(('a') == _match_expr)) { goto _case_end_4876436688; }
		_case_begin_4876436688:;
		{
			_6241_seq='\a';
		}
		goto _match_end_4876436048;
		_case_end_4876436688:;
		if (!(('b') == _match_expr)) { goto _case_end_4876436784; }
		_case_begin_4876436784:;
		{
			_6241_seq='\b';
		}
		goto _match_end_4876436048;
		_case_end_4876436784:;
		if (!(('f') == _match_expr)) { goto _case_end_4876436880; }
		_case_begin_4876436880:;
		{
			_6241_seq='\f';
		}
		goto _match_end_4876436048;
		_case_end_4876436880:;
		if (!(('n') == _match_expr)) { goto _case_end_4876436992; }
		_case_begin_4876436992:;
		{
			_6241_seq='\n';
		}
		goto _match_end_4876436048;
		_case_end_4876436992:;
		if (!(('r') == _match_expr)) { goto _case_end_4876437104; }
		_case_begin_4876437104:;
		{
			_6241_seq='\r';
		}
		goto _match_end_4876436048;
		_case_end_4876437104:;
		if (!(('t') == _match_expr)) { goto _case_end_4876437216; }
		_case_begin_4876437216:;
		{
			_6241_seq='\t';
		}
		goto _match_end_4876436048;
		_case_end_4876437216:;
		if (!(('v') == _match_expr)) { goto _case_end_4876437328; }
		_case_begin_4876437328:;
		{
			_6241_seq='\v';
		}
		goto _match_end_4876436048;
		_case_end_4876437328:;
		_match_end_4876436048:;
	}
	_6252_ok=_6241_seq != 0LL;
	return std::make_tuple(_6241_seq,_6252_ok);
}



jule::I32 _1d6a262e0_rune_from_esq_seq(jule::Slice<jule::U8> _8422_bytes,jule::Int& _8442_i) {
	jule::U8 _8510_b;
	jule::Bool _8513_ok;
	std::tie(_8510_b,_8513_ok) = _1d6a262e0_try_btoa_common_esq(_8422_bytes.slice(_8442_i));
	(_8442_i)++;
	if (_8513_ok) {
		(_8442_i)++;
		return static_cast<jule::I32>(_8510_b);
	}
	{
		auto _match_expr{ _8422_bytes[_8442_i] };
		if (!(('u') == _match_expr)) { goto _case_end_4876451136; }
		_case_begin_4876451136:;
		{
			
			jule::U64 _9514_rc;
			std::tie(_9514_rc,std::ignore) = _231e6dda2_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 5LL)),16LL,64LL);
			_8442_i+=5LL;
			jule::I32 _9713_r = static_cast<jule::I32>(_9514_rc);
			return _9713_r;
		}
		goto _match_end_4876447136;
		_case_end_4876451136:;
		if (!(('U') == _match_expr)) { goto _case_end_4876451792; }
		_case_begin_4876451792:;
		{
			
			jule::U64 _10214_rc;
			std::tie(_10214_rc,std::ignore) = _231e6dda2_parse_uint(static_cast<jule::Str>(_8422_bytes.slice(_8442_i + 1LL,_8442_i + 9LL)),16LL,64LL);
			_8442_i+=9LL;
			jule::I32 _10413_r = static_cast<jule::I32>(_10214_rc);
			return _10413_r;
		}
		goto _match_end_4876447136;
		_case_end_4876451792:;
		if (!(('x') == _match_expr)) { goto _case_end_4876451888; }
		_case_begin_4876451888:;
		{
			
			jule::Slice<jule::U8> _10913_seq = _8422_bytes.slice(_8442_i + 1LL,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11114_b;
			std::tie(_11114_b,std::ignore) = _231e6dda2_parse_uint(static_cast<jule::Str>(_10913_seq),16LL,64LL);
			return static_cast<jule::I32>(_11114_b);
		}
		goto _match_end_4876447136;
		_case_end_4876451888:;
		_case_begin_4876445184:;
		{
			
			jule::Slice<jule::U8> _11613_seq = _8422_bytes.slice(_8442_i,_8442_i + 3LL);
			_8442_i+=3LL;
			jule::U64 _11814_b;
			std::tie(_11814_b,std::ignore) = _231e6dda2_parse_uint(static_cast<jule::Str>(_11613_seq.slice(1LL)),8LL,64LL);
			return static_cast<jule::I32>(_11814_b);
		}
		goto _match_end_4876447136;
		_case_end_4876445184:;
		_match_end_4876447136:;
	}
}



jule::Slice<jule::U8> _1d6a262e0_str_esq_seq(jule::Slice<jule::U8> _12316_bytes,jule::Int& _12336_i) {
	jule::I32 _1249_r = _1d6a262e0_rune_from_esq_seq(_12316_bytes,_12336_i);
	if (_1249_r <= 255LL) {
		return jule::Slice<jule::U8>({static_cast<jule::U8>(_1249_r)});
	}
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1249_r));
}



jule::Bool _2185d51ad_kind_uses_generics(jule::Ptr<_200d010d9_TypeKind> _38823_k,jule::Slice<jule::Ptr<_233464770_GenericDecl>>& _38838_generics) {
	jule::Str _3899_pk = _38823_k->_method_to_str();
	{
		auto expr = _38838_generics;
		auto it = expr.begin();
		_iter_begin_4877314432:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_GenericDecl> _2185d51ad_g = *it;
			{
				if (_3899_pk.find(_2185d51ad_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_4877314432:;
			++it;
			goto _iter_begin_4877314432;
		}
		_iter_end_4877314432:;
	}
	return false;
}



jule::Bool _2185d51ad_parameter_uses_generics(jule::Ptr<_2185d51ad_Param>& _39829_p,jule::Slice<jule::Ptr<_233464770_GenericDecl>>& _39841_generics) {
	if (_39829_p->_method_is_self()) {
		return false;
	}
	return _2185d51ad_kind_uses_generics(_39829_p->_field_kind->_field_kind,_39841_generics);
}



jule::Str _21862cb1d_str_repeat(jule::Str _8715_sub,jule::Int _8729_n) {
	if (_8729_n == 0LL) {
		return jule::Str();
	}
	jule::Str _9213_s = jule::Str();
	for (; _8729_n > 0LL; (_8729_n)--) {
		{
			_9213_s+=_8715_sub;
		}
	_iter_next_4877323536:;
	}
	_iter_end_4877323536:;
	return _9213_s;
}



jule::Str _21862cb1d_build_doc(jule::Ptr<_233464770_CommentGroup> _9918_cg) {
	if (_9918_cg == nullptr) {
		return jule::Str();
	}
	jule::Str _10413_doc = jule::Str();
	{
		auto expr = _9918_cg->_field_comments;
		auto it = expr.begin();
		_iter_begin_4877327552:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Comment> _21862cb1d_c = *it;
			{
				_10413_doc+=_21862cb1d_c->_field_text;
				_10413_doc+=jule::Str(" ", 1);
			}
			_iter_next_4877327552:;
			++it;
			goto _iter_begin_4877327552;
		}
		_iter_end_4877327552:;
	}
	return _10413_doc;
}



jule::Ptr<_200d010d9_TypeSymbol> _21862cb1d_build_type(jule::Ptr<_233464770_TypeDecl> _11219_t) {
	if (_11219_t == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(_11219_t,jule::Ptr<_200d010d9_TypeKind>()));
}



jule::Ptr<_218751758_Value> _21862cb1d_build_expr(jule::Ptr<_233464770_Expr> _12119_expr) {
	if (_12119_expr == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_218751758_Value>(new( std::nothrow ) _218751758_Value(_12119_expr,jule::Ptr<_218751758_Data>()));
}



jule::Ptr<_200d010d9_TypeAlias> _21862cb1d_build_type_alias(jule::Ptr<_233464770_TypeAliasDecl> _13125_decl) {
	return jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(_13125_decl->_field_scope,_13125_decl->_field_public,_13125_decl->_field_cpp_linked,jule::Bool(),jule::Bool(),_13125_decl->_field_token,_13125_decl->_field_ident,_21862cb1d_build_type(_13125_decl->_field_kind),_21862cb1d_build_doc(_13125_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



jule::Ptr<_23461aa35_Field> _21862cb1d_build_field(jule::Ptr<_233464770_FieldDecl> _14320_decl) {
	return jule::new_struct_ptr<_23461aa35_Field>(new( std::nothrow ) _23461aa35_Field(jule::Ptr<_23461aa35_Struct>(),_14320_decl->_field_token,_14320_decl->_field_public,_14320_decl->_field_mutable,_14320_decl->_field_ident,_21862cb1d_build_type(_14320_decl->_field_kind)));
}



jule::Slice<jule::Ptr<_23461aa35_Field>> _21862cb1d_build_fields(jule::Slice<jule::Ptr<_233464770_FieldDecl>>& _15322_decls) {
	jule::Slice<jule::Ptr<_23461aa35_Field>> _15413_fields = jule::Slice<jule::Ptr<_23461aa35_Field>>::alloc(0LL,static_cast<jule::I64>(_15322_decls.len()));
	{
		auto expr = _15322_decls;
		auto it = expr.begin();
		_iter_begin_4877340576:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_FieldDecl> _21862cb1d_decl = *it;
			{
				_15413_fields=jule::append(_15413_fields,jule::Slice<jule::Ptr<_23461aa35_Field>>({_21862cb1d_build_field(_21862cb1d_decl)}));
			}
			_iter_next_4877340576:;
			++it;
			goto _iter_begin_4877340576;
		}
		_iter_end_4877340576:;
	}
	return _15413_fields;
}



jule::Ptr<_23461aa35_Struct> _21862cb1d_build_struct(jule::Ptr<_233464770_StructDecl> _16121_decl) {
	return jule::new_struct_ptr<_23461aa35_Struct>(new( std::nothrow ) _23461aa35_Struct(jule::Ptr<_1eec2c632_Sema>(),jule::Slice<jule::Ptr<_23461aa35_Struct>>(),jule::Slice<jule::Ptr<_23461aa35_Struct>>(),_16121_decl->_field_token,_16121_decl->_field_ident,_21862cb1d_build_fields(_16121_decl->_field_fields),jule::Slice<jule::Ptr<_2185d51ad_Fn>>(),jule::Slice<jule::Ptr<_200c58948_Var>>(),_16121_decl->_field_public,_16121_decl->_field_cpp_linked,_16121_decl->_field_directives,_21862cb1d_build_doc(_16121_decl->_field_doc_comments),_16121_decl->_field_generics,jule::Slice<jule::Ptr<_2185da36c_Trait>>(),jule::Slice<jule::Ptr<_23461aa35_StructIns>>()));
}



jule::Ptr<_2185d51ad_Param> _21862cb1d_build_param(jule::Ptr<_233464770_ParamDecl> _17420_decl) {
	return jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_17420_decl->_field_token,_17420_decl->_field_mutable,_17420_decl->_field_variadic,_17420_decl->_field_reference,_21862cb1d_build_type(_17420_decl->_field_kind),_17420_decl->_field_ident));
}



jule::Slice<jule::Ptr<_2185d51ad_Param>> _21862cb1d_build_params(jule::Slice<jule::Ptr<_233464770_ParamDecl>>& _18522_decls) {
	jule::Slice<jule::Ptr<_2185d51ad_Param>> _18613_params = jule::Slice<jule::Ptr<_2185d51ad_Param>>::alloc(0LL,static_cast<jule::I64>(_18522_decls.len()));
	{
		auto expr = _18522_decls;
		auto it = expr.begin();
		_iter_begin_4877351456:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_ParamDecl> _21862cb1d_decl = *it;
			{
				_18613_params=jule::append(_18613_params,jule::Slice<jule::Ptr<_2185d51ad_Param>>({_21862cb1d_build_param(_21862cb1d_decl)}));
			}
			_iter_next_4877351456:;
			++it;
			goto _iter_begin_4877351456;
		}
		_iter_end_4877351456:;
	}
	return _18613_params;
}



jule::Ptr<_2185d51ad_RetType> _21862cb1d_build_ret_type(jule::Ptr<_233464770_RetTypeDecl> _19323_decl) {
	if ((_19323_decl->_field_idents == nullptr) && (_19323_decl->_field_kind == nullptr)) {
		return nullptr;
	}
	return jule::new_struct<_2185d51ad_RetType>(new( std::nothrow ) _2185d51ad_RetType(_21862cb1d_build_type(_19323_decl->_field_kind),_19323_decl->_field_idents));
}



jule::Ptr<_2185d51ad_Fn> _21862cb1d_build_fn(jule::Ptr<_233464770_FnDecl> _20317_decl) {
	return jule::new_struct_ptr<_2185d51ad_Fn>(new( std::nothrow ) _2185d51ad_Fn(jule::Ptr<_1eec2c632_Sema>(),_20317_decl->_field_token,_20317_decl->_field_global,_20317_decl->_field_unsafety,_20317_decl->_field_public,_20317_decl->_field_cpp_linked,_20317_decl->_field_statically,_20317_decl->_field_ident,_20317_decl->_field_directives,_21862cb1d_build_doc(_20317_decl->_field_doc_comments),_20317_decl->_field_scope,_20317_decl->_field_generics,_21862cb1d_build_ret_type(_20317_decl->_field_result),_21862cb1d_build_params(_20317_decl->_field_params),jule::Ptr<_23461aa35_Struct>(),jule::Slice<jule::Ptr<_2185d51ad_FnIns>>()));
}



jule::Slice<jule::Ptr<_2185d51ad_Fn>> _21862cb1d_build_methods(jule::Slice<jule::Ptr<_233464770_FnDecl>>& _22123_decls) {
	jule::Slice<jule::Ptr<_2185d51ad_Fn>> _22213_methods = jule::Slice<jule::Ptr<_2185d51ad_Fn>>::alloc(0LL,static_cast<jule::I64>(_22123_decls.len()));
	{
		auto expr = _22123_decls;
		auto it = expr.begin();
		_iter_begin_4877364048:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_FnDecl> _21862cb1d_decl = *it;
			{
				_22213_methods=jule::append(_22213_methods,jule::Slice<jule::Ptr<_2185d51ad_Fn>>({_21862cb1d_build_fn(_21862cb1d_decl)}));
			}
			_iter_next_4877364048:;
			++it;
			goto _iter_begin_4877364048;
		}
		_iter_end_4877364048:;
	}
	return _22213_methods;
}



jule::Ptr<_2185da36c_Trait> _21862cb1d_build_trait(jule::Ptr<_233464770_TraitDecl> _22920_decl) {
	return jule::new_struct_ptr<_2185da36c_Trait>(new( std::nothrow ) _2185da36c_Trait(_22920_decl->_field_token,_22920_decl->_field_ident,_22920_decl->_field_public,jule::Bool(),_21862cb1d_build_doc(_22920_decl->_field_doc_comments),_21862cb1d_build_methods(_22920_decl->_field_methods),jule::Slice<jule::Ptr<_23461aa35_Struct>>()));
}



jule::Ptr<_2186be3da_EnumItem> _21862cb1d_build_enum_item(jule::Ptr<_233464770_EnumItemDecl> _23924_decl) {
	return jule::new_struct<_2186be3da_EnumItem>(new( std::nothrow ) _2186be3da_EnumItem(_23924_decl->_field_token,_23924_decl->_field_ident,_21862cb1d_build_expr(_23924_decl->_field_expr)));
}



jule::Slice<jule::Ptr<_2186be3da_EnumItem>> _21862cb1d_build_enum_items(jule::Slice<jule::Ptr<_233464770_EnumItemDecl>>& _24726_decls) {
	jule::Slice<jule::Ptr<_2186be3da_EnumItem>> _24813_items = jule::Slice<jule::Ptr<_2186be3da_EnumItem>>::alloc(0LL,static_cast<jule::I64>(_24726_decls.len()));
	{
		auto expr = _24726_decls;
		auto it = expr.begin();
		_iter_begin_4877373296:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_EnumItemDecl> _21862cb1d_decl = *it;
			{
				_24813_items=jule::append(_24813_items,jule::Slice<jule::Ptr<_2186be3da_EnumItem>>({_21862cb1d_build_enum_item(_21862cb1d_decl)}));
			}
			_iter_next_4877373296:;
			++it;
			goto _iter_begin_4877373296;
		}
		_iter_end_4877373296:;
	}
	return _24813_items;
}



jule::Ptr<_2186be3da_Enum> _21862cb1d_build_enum(jule::Ptr<_233464770_EnumDecl> _25519_decl) {
	return jule::new_struct_ptr<_2186be3da_Enum>(new( std::nothrow ) _2186be3da_Enum(_25519_decl->_field_token,_25519_decl->_field_public,_25519_decl->_field_ident,_21862cb1d_build_type(_25519_decl->_field_kind),_21862cb1d_build_enum_items(_25519_decl->_field_items),_21862cb1d_build_doc(_25519_decl->_field_doc_comments)));
}



jule::Ptr<_200c58948_Var> _21862cb1d_build_var(jule::Ptr<_233464770_VarDecl> _26618_decl) {
	return jule::new_struct<_200c58948_Var>(new( std::nothrow ) _200c58948_Var(jule::Ptr<_2186ce186_Scope>(),_26618_decl->_field_token,_26618_decl->_field_ident,_26618_decl->_field_cpp_linked,_26618_decl->_field_constant,_26618_decl->_field_mutable,_26618_decl->_field_public,jule::Bool(),_26618_decl->_field_statically,_26618_decl->_field_reference,_21862cb1d_build_doc(_26618_decl->_field_doc_comments),_21862cb1d_build_type(_26618_decl->_field_kind),_21862cb1d_build_expr(_26618_decl->_field_expr),_21862cb1d_ReferenceStack::_static_method_new(),_26618_decl->_field_directives,jule::Ptr<_200c58948_IterRelation>(),jule::Slice<jule::Ptr<_200c58948_Var>>()));
}



jule::Slice<jule::Ptr<_200c58948_Var>> _21862cb1d_build_vars(jule::Slice<jule::Ptr<_233464770_VarDecl>> _28419_decls) {
	jule::Slice<jule::Ptr<_200c58948_Var>> _28513_vars = jule::Slice<jule::Ptr<_200c58948_Var>>::alloc(0LL,static_cast<jule::I64>(_28419_decls.len()));
	{
		auto expr = _28419_decls;
		auto it = expr.begin();
		_iter_begin_4877386880:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_VarDecl> _21862cb1d_decl = *it;
			{
				_28513_vars=jule::append(_28513_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_21862cb1d_build_var(_21862cb1d_decl)}));
			}
			_iter_next_4877386880:;
			++it;
			goto _iter_begin_4877386880;
		}
		_iter_end_4877386880:;
	}
	return _28513_vars;
}



jule::Ptr<_2185e0064_Impl> _21862cb1d_build_impl(jule::Ptr<_233464770_Impl> _29219_decl) {
	return jule::new_struct<_2185e0064_Impl>(new( std::nothrow ) _2185e0064_Impl(_29219_decl->_field_base,_29219_decl->_field_dest,_21862cb1d_build_methods(_29219_decl->_field_methods),_21862cb1d_build_vars(_29219_decl->_field_statics)));
}



jule::Ptr<_2186ce186_ScopeChecker> _2186ce186_new_scope_checker_base(jule::Ptr<_1eec2c632_Sema>& _3932_s,jule::Ptr<_2185d51ad_FnIns> _3946_owner) {
	return jule::new_struct_ptr<_2186ce186_ScopeChecker>(new( std::nothrow ) _2186ce186_ScopeChecker(_3932_s,_3946_owner,jule::Ptr<_2186ce186_ScopeChecker>(),jule::Int(),jule::new_struct<_218737b7e_SymbolTable>(new( std::nothrow ) _218737b7e_SymbolTable()),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_233464770_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>>(),jule::Ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>>(),jule::Int()));
}



jule::Ptr<_2186ce186_ScopeChecker> _2186ce186_new_scope_checker(jule::Ptr<_1eec2c632_Sema>& _4727_s,jule::Ptr<_2185d51ad_FnIns> _4741_owner) {
	jule::Ptr<_2186ce186_ScopeChecker> _4813_base = _2186ce186_new_scope_checker_base(_4727_s,_4741_owner);
	_4813_base->_field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeLabel>>>(nullptr);
	_4813_base->_field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_2186ce186_ScopeGoto>>>(nullptr);
	return _4813_base;
}



jule::Ptr<_2186ce186_ScopeLabel> _2186ce186_find_label_parent(jule::Str _5722_ident,jule::Ptr<_2186ce186_ScopeChecker> _5738_scope) {
	jule::Ptr<_2186ce186_ScopeLabel> _5813_label = _5738_scope->_method_find_label_scope(_5722_ident);
	while (_5813_label == nullptr) {
		{
			if ((_5738_scope->_field_parent == nullptr) || (_5738_scope->_field_owner != nullptr)) {
				return nullptr;
			}
			_5738_scope=_5738_scope->_field_parent;
			_5813_label=_5738_scope->_method_find_label_scope(_5722_ident);
		}
	_iter_next_4877398160:;
	}
	_iter_end_4877398160:;
	return _5813_label;
}



jule::Bool _2186ce186_stmt_is_goto_scope(jule::Any& _7124_stmt,jule::Ptr<_2186ce186_Scope>& _7136_sc) {
	{
		auto _match_expr{ _7124_stmt };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Scope>>())) { goto _case_end_4877407200; }
		_case_begin_4877407200:;
		{
			return _7124_stmt.operator jule::Ptr<_2186ce186_Scope>() == _7136_sc;
		}
		goto _match_end_4877405424;
		_case_end_4877407200:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_InfIter>>())) { goto _case_end_4877407296; }
		_case_begin_4877407296:;
		{
			return _7124_stmt.operator jule::Ptr<_2186ce186_InfIter>()->_field_scope == _7136_sc;
		}
		goto _match_end_4877405424;
		_case_end_4877407296:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RangeIter>>())) { goto _case_end_4877405904; }
		_case_begin_4877405904:;
		{
			return _7124_stmt.operator jule::Ptr<_2186ce186_RangeIter>()->_field_scope == _7136_sc;
		}
		goto _match_end_4877405424;
		_case_end_4877405904:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_WhileIter>>())) { goto _case_end_4877406000; }
		_case_begin_4877406000:;
		{
			return _7124_stmt.operator jule::Ptr<_2186ce186_WhileIter>()->_field_scope == _7136_sc;
		}
		goto _match_end_4877405424;
		_case_end_4877406000:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Match>>())) { goto _case_end_4877406096; }
		_case_begin_4877406096:;
		{
			jule::Ptr<_2186ce186_Match> _8613_m = _7124_stmt.operator jule::Ptr<_2186ce186_Match>();
			{
				auto expr = _8613_m->_field_cases;
				auto it = expr.begin();
				_iter_begin_4877416512:;
				if (it != expr.end()) {
					jule::Ptr<_2186ce186_Case> _2186ce186_c = *it;
					{
						if (_2186ce186_c->_field_scope == _7136_sc) {
							return true;
						}
					}
					_iter_next_4877416512:;
					++it;
					goto _iter_begin_4877416512;
				}
				_iter_end_4877416512:;
			}
			return (_8613_m->_field_default != nullptr) && (_8613_m->_field_default->_field_scope == _7136_sc);
		}
		goto _match_end_4877405424;
		_case_end_4877406096:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Conditional>>())) { goto _case_end_4877406192; }
		_case_begin_4877406192:;
		{
			jule::Ptr<_2186ce186_Conditional> _9513_c = _7124_stmt.operator jule::Ptr<_2186ce186_Conditional>();
			{
				auto expr = _9513_c->_field_elifs;
				auto it = expr.begin();
				_iter_begin_4877421152:;
				if (it != expr.end()) {
					jule::Ptr<_2186ce186_If> _2186ce186_elif = *it;
					{
						if (_2186ce186_elif->_field_scope == _7136_sc) {
							return true;
						}
					}
					_iter_next_4877421152:;
					++it;
					goto _iter_begin_4877421152;
				}
				_iter_end_4877421152:;
			}
			return (_9513_c->_field_default != nullptr) && (_9513_c->_field_default->_field_scope == _7136_sc);
		}
		goto _match_end_4877405424;
		_case_end_4877406192:;
		_case_begin_4877401376:;
		{
			return false;
		}
		goto _match_end_4877405424;
		_case_end_4877401376:;
		_match_end_4877405424:;
	}
}



jule::Int _2186ce186_count_match_type(jule::Ptr<_2186ce186_Match>& _10822_m,jule::Ptr<_200d010d9_TypeKind>& _10834_t) {
	jule::Int _10913_n = 0LL;
	jule::Str _1109_kind = _10834_t->_method_to_str();
	_julec_label_loop:;
	{
		auto expr = _10822_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4877426928:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_Case> _2186ce186_c = *it;
			{
				if (_2186ce186_c == nullptr) {
					goto _iter_next_4877426928;
				}
				{
					auto expr = _2186ce186_c->_field_exprs;
					auto it = expr.begin();
					_iter_begin_4877428640:;
					if (it != expr.end()) {
						jule::Any _2186ce186_expr = *it;
						{
							if (_2186ce186_expr == nullptr) {
								goto _iter_end_4877426928;
							}
							if (_1109_kind == _2186ce186_expr.operator jule::Ptr<_200d010d9_TypeKind>()->_method_to_str()) {
								(_10913_n)++;
							}
						}
						_iter_next_4877428640:;
						++it;
						goto _iter_begin_4877428640;
					}
					_iter_end_4877428640:;
				}
			}
			_iter_next_4877426928:;
			++it;
			goto _iter_begin_4877426928;
		}
		_iter_end_4877426928:;
	}
	return _10913_n;
}



jule::Slice<jule::Ptr<_218751758_Data>> _2186ce186_get_datas_from_tuple_data(jule::Ptr<_218751758_Data>& _13235_d) {
	if (_13235_d->_field_kind->_method_tup() != nullptr) {
		{
			auto _match_expr{ _13235_d->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_2188586ea_TupleExprModel>>())) { goto _case_end_4877443504; }
			_case_begin_4877443504:;
			{
				return _13235_d->_field_model.operator jule::Ptr<_2188586ea_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4877434032;
			_case_end_4877443504:;
			_case_begin_4877433536:;
			{
				jule::Ptr<_200d010d9_Tuple> _13921_t = _13235_d->_field_kind->_method_tup();
				jule::Slice<jule::Ptr<_218751758_Data>> _14021_r = jule::Slice<jule::Ptr<_218751758_Data>>::alloc(0LL,static_cast<jule::I64>(_13921_t->_field_types.len()));
				{
					auto expr = _13921_t->_field_types;
					auto it = expr.begin();
					_iter_begin_4877438480:;
					if (it != expr.end()) {
						jule::Ptr<_200d010d9_TypeKind> _2186ce186_kind = *it;
						{
							_14021_r=jule::append(_14021_r,jule::Slice<jule::Ptr<_218751758_Data>>({jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(_2186ce186_kind,jule::Ptr<_200d010d9_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()))}));
						}
						_iter_next_4877438480:;
						++it;
						goto _iter_begin_4877438480;
					}
					_iter_end_4877438480:;
				}
				return _14021_r;
			}
			goto _match_end_4877434032;
			_case_end_4877433536:;
			_match_end_4877434032:;
		}
	} else {
		return jule::Slice<jule::Ptr<_218751758_Data>>({_13235_d});
	}
}



jule::Slice<jule::Any> _2186ce186_get_expr_models(jule::Any& _15425_m) {
	{
		auto _match_expr{ _15425_m };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_TupleExpr>>())) { goto _case_end_4877445632; }
		_case_begin_4877445632:;
		{
			jule::Ptr<_233464770_TupleExpr> _15717_tup = _15425_m.operator jule::Ptr<_233464770_TupleExpr>();
			jule::Slice<jule::Any> _15817_models = jule::Slice<jule::Any>::alloc(0LL,static_cast<jule::I64>(_15717_tup->_field_expr.len()));
			{
				auto expr = _15717_tup->_field_expr;
				auto it = expr.begin();
				_iter_begin_4877448480:;
				if (it != expr.end()) {
					jule::Ptr<_233464770_Expr> _2186ce186_expr = *it;
					{
						_15817_models=jule::append(_15817_models,jule::Slice<jule::Any>({_2186ce186_expr->_field_kind}));
					}
					_iter_next_4877448480:;
					++it;
					goto _iter_begin_4877448480;
				}
				_iter_end_4877448480:;
			}
			return _15817_models;
		}
		goto _match_end_4877441360;
		_case_end_4877445632:;
		_case_begin_4877433376:;
		{
			return jule::Slice<jule::Any>({_15425_m});
		}
		goto _match_end_4877441360;
		_case_end_4877433376:;
		_match_end_4877441360:;
	}
}



jule::Bool _2186ce186_check_mut(jule::Ptr<_1eec2c632_Sema>& _16919_s,jule::Ptr<_218751758_Data>& _16930_left,jule::Ptr<_218751758_Data> _16947_right,_2336ea198_Token _16961_error_token) {
	jule::Bool _16983_ok = jule::Bool();
	{
		if (!(((!(_16930_left->_field_mutable))))) { goto _case_end_4877455248; }
		_case_begin_4877455248:;
		{
			_16919_s->_method_push_err(_16961_error_token,jule::Str("cannot assign to immutable define", 33),jule::Slice<jule::Any>({}));
			_16983_ok = false;
			return _16983_ok;
		}
		goto _match_end_4877453648;
		_case_end_4877455248:;
		if (!((((_16947_right != nullptr) && (!(_16947_right->_field_mutable))) && _16947_right->_field_kind->_method_mutable()))) { goto _case_end_4877454800; }
		_case_begin_4877454800:;
		{
			_16919_s->_method_push_err(_16961_error_token,jule::Str("cannot assign mutable type used immutable define to mutable define", 66),jule::Slice<jule::Any>({}));
			_16983_ok = false;
			return _16983_ok;
		}
		goto _match_end_4877453648;
		_case_end_4877454800:;
		_case_begin_4877453824:;
		{
			_16983_ok = true;
			return _16983_ok;
		}
		goto _match_end_4877453648;
		_case_end_4877453824:;
		_match_end_4877453648:;
	}
}



jule::Bool _2186ce186_check_assign(jule::Ptr<_1eec2c632_Sema>& _18422_s,jule::Ptr<_218751758_Data>& _18437_left,jule::Ptr<_218751758_Data> _18454_right,_2336ea198_Token _18468_error_token) {
	jule::Bool _18490_ok = jule::Bool();
	jule::Ptr<_2185d51ad_FnIns> _1859_f = _18437_left->_field_kind->_method_fnc();
	if (((_1859_f != nullptr) && (_1859_f->_field_decl != nullptr)) && _1859_f->_field_decl->_field_global) {
		_18422_s->_method_push_err(_18468_error_token,jule::Str("type is not support assignment", 30),jule::Slice<jule::Any>({}));
		_18490_ok = false;
		return _18490_ok;
	}
	{
		if (!((_18437_left->_method_is_const()))) { goto _case_end_4877470464; }
		_case_begin_4877470464:;
		{
			_18422_s->_method_push_err(_18468_error_token,jule::Str("constants is can't assign", 25),jule::Slice<jule::Any>({}));
			_18422_s->_method_push_suggestion(jule::Str("remove constant qualifer if you need to assign", 46),jule::Slice<jule::Any>({}));
			_18490_ok = false;
			return _18490_ok;
		}
		goto _match_end_4877467984;
		_case_end_4877470464:;
		if (!(((!(_18437_left->_field_lvalue))))) { goto _case_end_4877470000; }
		_case_begin_4877470000:;
		{
			_18422_s->_method_push_err(_18468_error_token,jule::Str("assignment required lvalue", 26),jule::Slice<jule::Any>({}));
			_18490_ok = false;
			return _18490_ok;
		}
		goto _match_end_4877467984;
		_case_end_4877470000:;
		if (!(((!(_2186ce186_check_mut(_18422_s,_18437_left,_18454_right,_18468_error_token)))))) { goto _case_end_4877470096; }
		_case_begin_4877470096:;
		{
			_18490_ok = false;
			return _18490_ok;
		}
		goto _match_end_4877467984;
		_case_end_4877470096:;
		_case_begin_4877468064:;
		{
			_18490_ok = true;
			return _18490_ok;
		}
		goto _match_end_4877467984;
		_case_end_4877468064:;
		_match_end_4877467984:;
	}
}



jule::Bool _2186ce186_is_valid_ast_st_for_next_st(jule::Any& _20937_n) {
	{
		auto _match_expr{ _20937_n };
		if (!(_match_expr.type_is<jule::Ptr<_233464770_AssignSt>>())) { goto _case_end_4877476816; }
		_case_begin_4877476816:;
		{
			return (!(_20937_n.operator jule::Ptr<_233464770_AssignSt>()->_field_declarative));
		}
		goto _match_end_4877478176;
		_case_end_4877476816:;
		if (!(_match_expr.type_is<jule::Ptr<_233464770_FnCallExpr>>() || _match_expr.type_is<jule::Ptr<_233464770_Expr>>())) { goto _case_end_4877476912; }
		_case_begin_4877476912:;
		{
			return true;
		}
		goto _match_end_4877478176;
		_case_end_4877476912:;
		_case_begin_4877477328:;
		{
			return false;
		}
		goto _match_end_4877478176;
		_case_end_4877477328:;
		_match_end_4877478176:;
	}
}



jule::Bool _2186ce186_is_valid_st_for_next_st(jule::Any& _22329_st) {
	{
		auto _match_expr{ _22329_st };
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_FnCallExprModel>>() || _match_expr.type_is<jule::Ptr<_2186ce186_Postfix>>() || _match_expr.type_is<jule::Ptr<_2186ce186_Assign>>() || _match_expr.type_is<jule::Ptr<_2186ce186_MultiAssign>>())) { goto _case_end_4877483088; }
		_case_begin_4877483088:;
		{
			return true;
		}
		goto _match_end_4877481744;
		_case_end_4877483088:;
		if (!(_match_expr.type_is<jule::Ptr<_218751758_Data>>())) { goto _case_end_4877483184; }
		_case_begin_4877483184:;
		{
			{
				auto _match_expr{ _22329_st.operator jule::Ptr<_218751758_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ptr<_2188586ea_FnCallExprModel>>())) { goto _case_end_4877489200; }
				_case_begin_4877489200:;
				{
					return true;
				}
				goto _match_end_4877488832;
				_case_end_4877489200:;
				_case_begin_4877487072:;
				{
					return false;
				}
				goto _match_end_4877488832;
				_case_end_4877487072:;
				_match_end_4877488832:;
			}
		}
		goto _match_end_4877481744;
		_case_end_4877483184:;
		_case_begin_4877481648:;
		{
			return false;
		}
		goto _match_end_4877481744;
		_case_end_4877481648:;
		_match_end_4877481744:;
	}
}



jule::Bool _2186ce186_st_is_def(jule::Any& _24215_st) {
	{
		auto _match_expr{ _24215_st };
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4877490032; }
		_case_begin_4877490032:;
		{
			return true;
		}
		goto _match_end_4877488352;
		_case_end_4877490032:;
		_case_begin_4877490416:;
		{
			return false;
		}
		goto _match_end_4877488352;
		_case_end_4877490416:;
		_match_end_4877488352:;
	}
}



jule::Ptr<_200c58948_Var> _218848bd5_find_var_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _2729_files,jule::Str _2752_ident,jule::Bool _2764_cpp_linked) {
	{
		auto expr = _2729_files;
		auto it = expr.begin();
		_iter_begin_4877493664:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _218848bd5_f = *it;
			{
				jule::Ptr<_200c58948_Var> _2917_v = _218848bd5_f->_method_find_var(_2752_ident,_2764_cpp_linked);
				if (_2917_v != nullptr) {
					return _2917_v;
				}
			}
			_iter_next_4877493664:;
			++it;
			goto _iter_begin_4877493664;
		}
		_iter_end_4877493664:;
	}
	return nullptr;
}



jule::Ptr<_200d010d9_TypeAlias> _218848bd5_find_type_alias_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _3936_files,jule::Str _3959_ident,jule::Bool _3971_cpp_linked) {
	{
		auto expr = _3936_files;
		auto it = expr.begin();
		_iter_begin_4877499680:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _218848bd5_f = *it;
			{
				jule::Ptr<_200d010d9_TypeAlias> _4117_ta = _218848bd5_f->_method_find_type_alias(_3959_ident,_3971_cpp_linked);
				if (_4117_ta != nullptr) {
					return _4117_ta;
				}
			}
			_iter_next_4877499680:;
			++it;
			goto _iter_begin_4877499680;
		}
		_iter_end_4877499680:;
	}
	return nullptr;
}



jule::Ptr<_23461aa35_Struct> _218848bd5_find_struct_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _5132_files,jule::Str _5155_ident,jule::Bool _5167_cpp_linked) {
	{
		auto expr = _5132_files;
		auto it = expr.begin();
		_iter_begin_4877505680:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _218848bd5_f = *it;
			{
				jule::Ptr<_23461aa35_Struct> _5317_s = _218848bd5_f->_method_find_struct(_5155_ident,_5167_cpp_linked);
				if (_5317_s != nullptr) {
					return _5317_s;
				}
			}
			_iter_next_4877505680:;
			++it;
			goto _iter_begin_4877505680;
		}
		_iter_end_4877505680:;
	}
	return nullptr;
}



jule::Ptr<_2185d51ad_Fn> _218848bd5_find_fn_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _6328_files,jule::Str _6351_ident,jule::Bool _6363_cpp_linked) {
	{
		auto expr = _6328_files;
		auto it = expr.begin();
		_iter_begin_4877511680:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _218848bd5_file = *it;
			{
				jule::Ptr<_2185d51ad_Fn> _6517_f = _218848bd5_file->_method_find_fn(_6351_ident,_6363_cpp_linked);
				if (_6517_f != nullptr) {
					return _6517_f;
				}
			}
			_iter_next_4877511680:;
			++it;
			goto _iter_begin_4877511680;
		}
		_iter_end_4877511680:;
	}
	return nullptr;
}



jule::Ptr<_2185da36c_Trait> _218848bd5_find_trait_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _7531_files,jule::Str _7554_ident) {
	{
		auto expr = _7531_files;
		auto it = expr.begin();
		_iter_begin_4877517616:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _218848bd5_f = *it;
			{
				jule::Ptr<_2185da36c_Trait> _7717_t = _218848bd5_f->_method_find_trait(_7554_ident);
				if (_7717_t != nullptr) {
					return _7717_t;
				}
			}
			_iter_next_4877517616:;
			++it;
			goto _iter_begin_4877517616;
		}
		_iter_end_4877517616:;
	}
	return nullptr;
}



jule::Ptr<_2186be3da_Enum> _218848bd5_find_enum_in_package(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _8730_files,jule::Str _8753_ident) {
	{
		auto expr = _8730_files;
		auto it = expr.begin();
		_iter_begin_4877517840:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _218848bd5_f = *it;
			{
				jule::Ptr<_2186be3da_Enum> _8917_e = _218848bd5_f->_method_find_enum(_8753_ident);
				if (_8917_e != nullptr) {
					return _8917_e;
				}
			}
			_iter_next_4877517840:;
			++it;
			goto _iter_begin_4877517840;
		}
		_iter_end_4877517840:;
	}
	return nullptr;
}



jule::Bool _1eec2c632_is_valid_model_for_ref(jule::Any _1527_m) {
	{
		auto _match_expr{ _1527_m };
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4877523104; }
		_case_begin_4877523104:;
		{
			return true;
		}
		goto _match_end_4877518208;
		_case_end_4877523104:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructSubIdentExprModel>>())) { goto _case_end_4877523200; }
		_case_begin_4877523200:;
		{
			jule::Ptr<_2188586ea_StructSubIdentExprModel> _2113_model = _1527_m.operator jule::Ptr<_2188586ea_StructSubIdentExprModel>();
			return _1eec2c632_is_valid_model_for_ref(_2113_model->_field_expr);
		}
		goto _match_end_4877518208;
		_case_end_4877523200:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_TraitSubIdentExprModel>>())) { goto _case_end_4877523296; }
		_case_begin_4877523296:;
		{
			jule::Ptr<_2188586ea_TraitSubIdentExprModel> _2513_model = _1527_m.operator jule::Ptr<_2188586ea_TraitSubIdentExprModel>();
			return _1eec2c632_is_valid_model_for_ref(_2513_model->_field_expr);
		}
		goto _match_end_4877518208;
		_case_end_4877523296:;
		_case_begin_4877527744:;
		{
			return false;
		}
		goto _match_end_4877518208;
		_case_end_4877527744:;
		_match_end_4877518208:;
	}
}



_231e4202e_Log _1eec2c632_compiler_err(_2336ea198_Token& _3318_token,jule::Bool _3332_line,jule::Str _3344_fmt,jule::Slice<jule::Any> _3357_args) {
	_231e4202e_Log _3413_log = _231e4202e_Log(1LLU,_3318_token._field_row,_3318_token._field_column,_3318_token._field_file->_method_path(),_231e4202e_logf(_3344_fmt,_3357_args),jule::Str(),jule::Str());
	if (_3332_line) {
		_3413_log._field_line=_3318_token._field_file->_method_get_row(_3318_token._field_row);
	}
	return _3413_log;
}



jule::Bool _1eec2c632_imp_is_lookupable(jule::Ptr<_218848bd5_ImportInfo>& _4723_i,jule::Str _4739_ident) {
	if (_4723_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_4723_i->_field_import_all))) {
		if (_4723_i->_field_selected.len() > 0LL) {
			return _4723_i->_method_exist_ident(_4739_ident);
		}
	}
	return _4723_i->_field_import_all;
}



jule::Slice<jule::Ptr<_200c58948_Var>> _1eec2c632_build_ret_vars(jule::Ptr<_2185d51ad_FnIns>& _6024_f) {
	if (_6024_f->_field_decl->_method_is_void() || (_6024_f->_field_result == nullptr)) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_200c58948_Var>> _6513_vars = nullptr;
	jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _6613_types = _200c5bcc0_get_fn_result_types(_6024_f);
	{
		auto expr = _6024_f->_field_decl->_field_result->_field_idents;
		auto it = expr.begin();
		_iter_begin_4877553184:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			_2336ea198_Token _1eec2c632_ident = *it;
			{
				if (_2336ea198_is_ignore_ident(_1eec2c632_ident._field_kind)) {
					goto _iter_next_4877553184;
				}
				jule::Ptr<_200c58948_Var> _7217_v = jule::new_struct<_200c58948_Var>(new( std::nothrow ) _200c58948_Var(_6024_f->_field_scope,_1eec2c632_ident,_1eec2c632_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_6613_types[_1eec2c632_i])),jule::new_struct<_218751758_Value>(new( std::nothrow ) _218751758_Value(jule::Ptr<_233464770_Expr>(),jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data()))),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_200c58948_IterRelation>(),jule::Slice<jule::Ptr<_200c58948_Var>>()));
				_6513_vars=jule::append(_6513_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_7217_v}));
			}
			_iter_next_4877553184:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4877553184;
		}
		_iter_end_4877553184:;
	}
	return _6513_vars;
}



jule::Slice<jule::Ptr<_200c58948_Var>> _1eec2c632_build_param_vars(jule::Ptr<_2185d51ad_FnIns>& _8926_f) {
	if (_8926_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_200c58948_Var>> _9413_vars = jule::Slice<jule::Ptr<_200c58948_Var>>::alloc(0LL,static_cast<jule::I64>(_8926_f->_field_params.len()));
	{
		auto expr = _8926_f->_field_params;
		auto it = expr.begin();
		_iter_begin_4877563552:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _1eec2c632_p = *it;
			{
				jule::Ptr<_200c58948_Var> _9617_v = jule::new_struct<_200c58948_Var>(new( std::nothrow ) _200c58948_Var(_8926_f->_field_scope,_1eec2c632_p->_field_decl->_field_token,_1eec2c632_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1eec2c632_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol()),jule::new_struct<_218751758_Value>(new( std::nothrow ) _218751758_Value(jule::Ptr<_233464770_Expr>(),jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data()))),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Slice<jule::Ptr<_233464770_Directive>>(),jule::Ptr<_200c58948_IterRelation>(),jule::Slice<jule::Ptr<_200c58948_Var>>()));
				{
					if (!((_1eec2c632_p->_field_decl->_method_is_self()))) { goto _case_end_4877569680; }
					_case_begin_4877569680:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_8926_f->_field_owner));
						_9617_v->_field_reference=true;
						if (_1eec2c632_p->_field_decl->_method_is_ref()) {
							_9617_v->_field_ident=_9617_v->_field_ident.slice(1LL);
							_9617_v->_field_kind->_field_kind->_field_kind=jule::new_struct_ptr<_200d010d9_Sptr>(new( std::nothrow ) _200d010d9_Sptr(_9617_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4877568544;
					_case_end_4877569680:;
					if (!((_1eec2c632_p->_field_decl->_field_variadic))) { goto _case_end_4877572272; }
					_case_begin_4877572272:;
					{
						_9617_v->_field_kind->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Slc>(new( std::nothrow ) _200d010d9_Slc(_1eec2c632_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4877568544;
					_case_end_4877572272:;
					_case_begin_4877568896:;
					{
						_9617_v->_field_kind->_field_kind=_1eec2c632_p->_field_kind->_method_clone();
					}
					goto _match_end_4877568544;
					_case_end_4877568896:;
					_match_end_4877568544:;
				}
				_9413_vars=jule::append(_9413_vars,jule::Slice<jule::Ptr<_200c58948_Var>>({_9617_v}));
			}
			_iter_next_4877563552:;
			++it;
			goto _iter_begin_4877563552;
		}
		_iter_end_4877563552:;
	}
	return _9413_vars;
}



jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _1eec2c632_build_generic_type_aliases(jule::Ptr<_2185d51ad_FnIns>& _13736_f) {
	jule::I64 _13813_size = _13736_f->_field_generics.len();
	if (_13736_f->_field_decl->_field_owner != nullptr) {
		_13813_size+=static_cast<jule::I64>(_13736_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_13813_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ptr<_200d010d9_TypeAlias>> _14713_aliases = jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>::alloc(0LL,_13813_size);
	{
		auto expr = _13736_f->_field_generics;
		auto it = expr.begin();
		_iter_begin_4877586288:;
		if (it != expr.end()) {
			jule::Int _1eec2c632_i = it - expr.begin();
			jule::Ptr<_200d010d9_TypeKind> _1eec2c632_g = *it;
			{
				jule::Ptr<_233464770_GenericDecl> _15017_decl = _13736_f->_field_decl->_field_generics[_1eec2c632_i];
				_14713_aliases=jule::append(_14713_aliases,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_15017_decl->_field_token,_15017_decl->_field_ident,jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_1eec2c632_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4877586288:;
			++it;
			_1eec2c632_i++;
			goto _iter_begin_4877586288;
		}
		_iter_end_4877586288:;
	}
	if (_13736_f->_field_decl->_field_owner != nullptr) {
		jule::Ptr<_23461aa35_StructIns> _16217_owner = _13736_f->_field_owner;
		{
			auto expr = _16217_owner->_field_generics;
			auto it = expr.begin();
			_iter_begin_4877590688:;
			if (it != expr.end()) {
				jule::Int _1eec2c632_i = it - expr.begin();
				jule::Ptr<_200d010d9_TypeKind> _1eec2c632_g = *it;
				{
					jule::Ptr<_233464770_GenericDecl> _16421_decl = _16217_owner->_field_decl->_field_generics[_1eec2c632_i];
					_14713_aliases=jule::append(_14713_aliases,jule::Slice<jule::Ptr<_200d010d9_TypeAlias>>({jule::new_struct<_200d010d9_TypeAlias>(new( std::nothrow ) _200d010d9_TypeAlias(_13736_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,true,_16421_decl->_field_token,_16421_decl->_field_ident,jule::new_struct<_200d010d9_TypeSymbol>(new( std::nothrow ) _200d010d9_TypeSymbol(jule::Ptr<_233464770_TypeDecl>(),_1eec2c632_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4877590688:;
				++it;
				_1eec2c632_i++;
				goto _iter_begin_4877590688;
			}
			_iter_end_4877590688:;
		}
	}
	return _14713_aliases;
}



jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_find_file(jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>& _17919_files,jule::Ptr<_2334d2d3d_File>& _17943_handler) {
	{
		auto expr = _17919_files;
		auto it = expr.begin();
		_iter_begin_4877601872:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1eec2c632_fl = *it;
			{
				if (_1eec2c632_fl->_field_file == _17943_handler) {
					return _1eec2c632_fl;
				}
			}
			_iter_next_4877601872:;
			++it;
			goto _iter_begin_4877601872;
		}
		_iter_end_4877601872:;
	}
	return nullptr;
}



std::tuple<jule::Bool,jule::Bool> _1eec2c632_conditional_has_ret(jule::Ptr<_2186ce186_Conditional> _18828_c) {
	jule::Bool _18847_ok = jule::Bool();
	jule::Bool _18857_breaking = jule::Bool();
	jule::Bool _18913_breaked = false;
	{
		auto expr = _18828_c->_field_elifs;
		auto it = expr.begin();
		_iter_begin_4877605296:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_If> _1eec2c632_elif = *it;
			{
				if (_1eec2c632_elif == nullptr) {
					_18847_ok = false;
					_18857_breaking = false;
					return std::make_tuple(_18847_ok,_18857_breaking);
				}
				std::tie(_18847_ok,std::ignore,_18857_breaking) = _1eec2c632___has_ret(_1eec2c632_elif->_field_scope);
				_18913_breaked=_18913_breaked || _18857_breaking;
				if ((!(_18847_ok))) {
					_18847_ok = false;
					_18857_breaking = _18913_breaked;
					return std::make_tuple(_18847_ok,_18857_breaking);
				}
			}
			_iter_next_4877605296:;
			++it;
			goto _iter_begin_4877605296;
		}
		_iter_end_4877605296:;
	}
	if (_18828_c->_field_default == nullptr) {
		_18847_ok = false;
		_18857_breaking = _18913_breaked;
		return std::make_tuple(_18847_ok,_18857_breaking);
	}
	std::tie(_18847_ok,std::ignore,_18857_breaking) = _1eec2c632___has_ret(_18828_c->_field_default->_field_scope);
	_18913_breaked=_18913_breaked || _18857_breaking;
	_18847_ok = _18847_ok;
	_18857_breaking = _18913_breaked;
	return std::make_tuple(_18847_ok,_18857_breaking);
}



jule::Bool _1eec2c632_match_has_ret(jule::Ptr<_2186ce186_Match> _21022_m) {
	if (_21022_m->_field_default == nullptr) {
		return false;
	}
	jule::Bool _21513_ok = true;
	jule::Bool _21613_falled = false;
	jule::Bool _21713_breaked = false;
	{
		auto expr = _21022_m->_field_cases;
		auto it = expr.begin();
		_iter_begin_4877617680:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_Case> _1eec2c632_c = *it;
			{
				if (_1eec2c632_c == nullptr) {
					return false;
				}
				std::tie(_21513_ok,_21613_falled,_21713_breaked) = _1eec2c632___has_ret(_1eec2c632_c->_field_scope);
				if (((!(_21513_ok)) && (!(_21613_falled))) || _21713_breaked) {
					return false;
				}
				{
					if (!(((!(_21513_ok))))) { goto _case_end_4877621600; }
					_case_begin_4877621600:;
					{
						if ((!(_21613_falled))) {
							return false;
						}
						goto _case_begin_4877621696;
					}
					goto _match_end_4877621280;
					_case_end_4877621600:;
					if (!((_21613_falled))) { goto _case_end_4877621696; }
					_case_begin_4877621696:;
					{
						if (_1eec2c632_c->_field_next == nullptr) {
							return false;
						}
						goto _iter_next_4877617680;
					}
					goto _match_end_4877621280;
					_case_end_4877621696:;
					_match_end_4877621280:;
				}
				_21613_falled=false;
			}
			_iter_next_4877617680:;
			++it;
			goto _iter_begin_4877617680;
		}
		_iter_end_4877617680:;
	}
	return _1eec2c632_has_ret(_21022_m->_field_default->_field_scope);
}



std::tuple<jule::Bool,jule::Bool,jule::Bool> _1eec2c632___has_ret(jule::Ptr<_2186ce186_Scope> _24618_s) {
	jule::Bool _24631_ok = jule::Bool();
	jule::Bool _24641_falled = jule::Bool();
	jule::Bool _24655_breaked = jule::Bool();
	if (_24618_s == nullptr) {
		_24631_ok = false;
		_24641_falled = false;
		_24655_breaked = false;
		return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
	}
	{
		auto expr = _24618_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4877627040:;
		if (it != expr.end()) {
			jule::Any _1eec2c632_st = *it;
			{
				{
					auto _match_expr{ _1eec2c632_st };
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_FallSt>>())) { goto _case_end_4877630336; }
					_case_begin_4877630336:;
					{
						_24641_falled=true;
					}
					goto _match_end_4877630768;
					_case_end_4877630336:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_BreakSt>>())) { goto _case_end_4877630848; }
					_case_begin_4877630848:;
					{
						_24631_ok = false;
						_24641_falled = false;
						_24655_breaked = true;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					goto _match_end_4877630768;
					_case_end_4877630848:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ContSt>>())) { goto _case_end_4877631136; }
					_case_begin_4877631136:;
					{
						_24631_ok = false;
						_24641_falled = false;
						_24655_breaked = true;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					goto _match_end_4877630768;
					_case_end_4877631136:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_InfIter>>())) { goto _case_end_4877631232; }
					_case_begin_4877631232:;
					{
						_24631_ok=_1eec2c632_has_ret(_1eec2c632_st.operator jule::Ptr<_2186ce186_InfIter>()->_field_scope);
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4877630768;
					_case_end_4877631232:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RetSt>>())) { goto _case_end_4877631328; }
					_case_begin_4877631328:;
					{
						_24631_ok = true;
						_24641_falled = _24641_falled;
						_24655_breaked = _24655_breaked;
						return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
					}
					goto _match_end_4877630768;
					_case_end_4877631328:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Scope>>())) { goto _case_end_4877631424; }
					_case_begin_4877631424:;
					{
						_24631_ok=_1eec2c632_has_ret(_1eec2c632_st.operator jule::Ptr<_2186ce186_Scope>());
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4877630768;
					_case_end_4877631424:;
					if (!(_match_expr.type_is<jule::Ptr<_218751758_Data>>())) { goto _case_end_4877631536; }
					_case_begin_4877631536:;
					{
						{
							auto _match_expr{ _1eec2c632_st.operator jule::Ptr<_218751758_Data>()->_field_model };
							if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>>())) { goto _case_end_4877646752; }
							_case_begin_4877646752:;
							{
								_24631_ok = true;
								_24641_falled = _24641_falled;
								_24655_breaked = _24655_breaked;
								return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
							}
							goto _match_end_4877647200;
							_case_end_4877646752:;
							_match_end_4877647200:;
						}
					}
					goto _match_end_4877630768;
					_case_end_4877631536:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Recover>>())) { goto _case_end_4877631648; }
					_case_begin_4877631648:;
					{
						jule::Bool _28418_ok;
						jule::Bool _28422__falled;
						jule::Bool _28431__breaked;
						std::tie(_28418_ok,_28422__falled,_28431__breaked) = _1eec2c632___has_ret(_1eec2c632_st.operator jule::Ptr<_2186ce186_Recover>()->_field_scope);
						if (_28418_ok) {
							_24631_ok = true;
							_24641_falled = _28422__falled;
							_24655_breaked = _28431__breaked;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4877630768;
					_case_end_4877631648:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Conditional>>())) { goto _case_end_4877631760; }
					_case_begin_4877631760:;
					{
						std::tie(_24631_ok,_24655_breaked) = _1eec2c632_conditional_has_ret(_1eec2c632_st.operator jule::Ptr<_2186ce186_Conditional>());
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
						if (_24655_breaked) {
							_24631_ok = false;
							_24641_falled = false;
							_24655_breaked = _24655_breaked;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4877630768;
					_case_end_4877631760:;
					if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Match>>())) { goto _case_end_4877631872; }
					_case_begin_4877631872:;
					{
						_24631_ok=_1eec2c632_match_has_ret(_1eec2c632_st.operator jule::Ptr<_2186ce186_Match>());
						if (_24631_ok) {
							_24631_ok = true;
							_24641_falled = false;
							_24655_breaked = false;
							return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
						}
					}
					goto _match_end_4877630768;
					_case_end_4877631872:;
					_match_end_4877630768:;
				}
			}
			_iter_next_4877627040:;
			++it;
			goto _iter_begin_4877627040;
		}
		_iter_end_4877627040:;
	}
	_24631_ok = false;
	_24641_falled = _24641_falled;
	_24655_breaked = _24655_breaked;
	return std::make_tuple(_24631_ok,_24641_falled,_24655_breaked);
}



jule::Bool _1eec2c632_has_ret(jule::Ptr<_2186ce186_Scope> _31016_s) {
	jule::Bool _31110_ok;
	std::tie(_31110_ok,std::ignore,std::ignore) = _1eec2c632___has_ret(_31016_s);
	return _31110_ok;
}



void _1eec2c632_push_suggestion(_231e4202e_Log* _31531_log,jule::Str _31542_fmt,jule::Slice<jule::Any> _31555_args) {
	_31531_log->_field_suggestion=_231e4202e_logf(_31542_fmt,_31555_args);
}



jule::Slice<jule::Ptr<_200d010d9_TypeKind>> _200c5bcc0_get_fn_result_types(jule::Ptr<_2185d51ad_FnIns>& _2629_f) {
	{
		if (!((_2629_f->_field_decl->_method_is_void() || (_2629_f->_field_result == nullptr)))) { goto _case_end_4877669792; }
		_case_begin_4877669792:;
		{
			return nullptr;
		}
		goto _match_end_4877668272;
		_case_end_4877669792:;
		if (!((_2629_f->_field_result->_method_tup() == nullptr))) { goto _case_end_4877670704; }
		_case_begin_4877670704:;
		{
			return jule::Slice<jule::Ptr<_200d010d9_TypeKind>>({_2629_f->_field_result});
		}
		goto _match_end_4877668272;
		_case_end_4877670704:;
		_case_begin_4877668448:;
		{
			return _2629_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4877668272;
		_case_end_4877668448:;
		_match_end_4877668272:;
	}
}



jule::Bool _200c5bcc0_trait_has_reference_receiver(jule::Ptr<_2185da36c_Trait>& _3934_t) {
	{
		auto expr = _3934_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4877672128:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _200c5bcc0_f = *it;
			{
				if (_200c5bcc0_f->_field_statically) {
					goto _iter_next_4877672128;
				}
				jule::Ptr<_2185d51ad_Param> _4613_p = _200c5bcc0_f->_field_params[0LL];
				if (_4613_p->_method_is_ref() && _4613_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_4877672128:;
			++it;
			goto _iter_begin_4877672128;
		}
		_iter_end_4877672128:;
	}
	return false;
}



jule::Bool _200c5bcc0_float_assignable(jule::Str _5421_kind,jule::Ptr<_218751758_Data>& _5433_d) {
	jule::Str _559_value = _231e5e5ce_fmt_float(static_cast<jule::F64>(_5433_d->_field_constant->_method_as_f64()),'g',-1LL,64LL);
	return _1d68c15ca_check_bit_float(_559_value,static_cast<jule::Int>(_1d68c15ca_bitsize_of(_5421_kind)));
}



jule::Bool _200c5bcc0_sig_assignable(jule::Str _5919_kind,jule::Ptr<_218751758_Data>& _5931_d) {
	jule::F64 _609_min = _1d68ca88c_min(_5919_kind);
	jule::F64 _619_max = _1d68ca88c_max(_5919_kind);
	{
		if (!((_5931_d->_field_constant->_method_is_f64()))) { goto _case_end_4877685376; }
		_case_begin_4877685376:;
		{
			jule::F64 _6513_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_f64());
			jule::F64 _6614_i;
			jule::F64 _6617_frac;
			std::tie(_6614_i,_6617_frac) = _2331e779a_modf(_6513_x);
			if (_6617_frac != 0LL) {
				return false;
			}
			return (_6614_i >= _609_min) && (_6614_i <= _619_max);
		}
		goto _match_end_4877685056;
		_case_end_4877685376:;
		if (!((_5931_d->_field_constant->_method_is_u64()))) { goto _case_end_4877685472; }
		_case_begin_4877685472:;
		{
			jule::F64 _7313_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_u64());
			if (_7313_x <= _619_max) {
				return true;
			}
		}
		goto _match_end_4877685056;
		_case_end_4877685472:;
		if (!((_5931_d->_field_constant->_method_is_i64()))) { goto _case_end_4877685568; }
		_case_begin_4877685568:;
		{
			jule::F64 _7913_x = static_cast<jule::F64>(_5931_d->_field_constant->_method_read_i64());
			return (_609_min <= _7913_x) && (_7913_x <= _619_max);
		}
		goto _match_end_4877685056;
		_case_end_4877685568:;
		_match_end_4877685056:;
	}
	return false;
}



jule::Bool _200c5bcc0_unsig_assignable(jule::Str _8621_kind,jule::Ptr<_218751758_Data>& _8633_d) {
	jule::F64 _879_max = _1d68ca88c_max(_8621_kind);
	if (_8633_d->_field_is_rune && (_8621_kind == jule::Str("u8", 2))) {
		return _1d6a262e0_is_ascii(static_cast<jule::I32>(_8633_d->_field_constant->_method_read_i64()));
	}
	{
		if (!((_8633_d->_field_constant->_method_is_f64()))) { goto _case_end_4877698368; }
		_case_begin_4877698368:;
		{
			jule::F64 _9413_x = _8633_d->_field_constant->_method_read_f64();
			if (_9413_x < 0LL) {
				return false;
			}
			jule::F64 _9914_i;
			jule::F64 _9917_frac;
			std::tie(_9914_i,_9917_frac) = _2331e779a_modf(_9413_x);
			if (_9917_frac != 0LL) {
				return false;
			}
			return _9914_i <= _879_max;
		}
		goto _match_end_4877699200;
		_case_end_4877698368:;
		if (!((_8633_d->_field_constant->_method_is_u64()))) { goto _case_end_4877698464; }
		_case_begin_4877698464:;
		{
			jule::F64 _10613_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_u64());
			if (_10613_x <= _879_max) {
				return true;
			}
		}
		goto _match_end_4877699200;
		_case_end_4877698464:;
		if (!((_8633_d->_field_constant->_method_is_i64()))) { goto _case_end_4877700992; }
		_case_begin_4877700992:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(_8633_d->_field_constant->_method_read_i64());
			return (0LL <= _11213_x) && (_11213_x <= _879_max);
		}
		goto _match_end_4877699200;
		_case_end_4877700992:;
		_match_end_4877699200:;
	}
	return false;
}



jule::Bool _200c5bcc0_int_assignable(jule::Str _11919_kind,jule::Ptr<_218751758_Data>& _11931_d) {
	{
		if (!((_1d68ce6a4_is_sig_int(_11919_kind)))) { goto _case_end_4877714288; }
		_case_begin_4877714288:;
		{
			return _200c5bcc0_sig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4877712528;
		_case_end_4877714288:;
		if (!((_1d68ce6a4_is_unsig_int(_11919_kind)))) { goto _case_end_4877714384; }
		_case_begin_4877714384:;
		{
			return _200c5bcc0_unsig_assignable(_11919_kind,_11931_d);
		}
		goto _match_end_4877712528;
		_case_end_4877714384:;
		_case_begin_4877712240:;
		{
			return false;
		}
		goto _match_end_4877712528;
		_case_end_4877712240:;
		_match_end_4877712528:;
	}
}



jule::Any _218751758_find_builtins_import(jule::Str _4625_ident,jule::Ptr<_218848bd5_ImportInfo> _4637_imp) {
	return _1d67e4c4b_find_package_builtin_def(_4637_imp->_field_link_path,_4625_ident);
}



void _218751758_make_struct_lit_alloc(jule::Ptr<_218751758_Data>& _5031_d,jule::Ptr<_2188586ea_StructLitExprModel>& _5046_lit) {
	_5031_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Sptr>(new( std::nothrow ) _200d010d9_Sptr(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_5046_lit->_field_strct))))));
	_5031_d->_field_model=jule::Any(jule::new_struct<_2188586ea_AllocStructLitExprModel>(new( std::nothrow ) _2188586ea_AllocStructLitExprModel(_5046_lit)));
}



jule::Any _218751758_find_builtins_sema(jule::Str _6223_ident,jule::Ptr<_1eec2c632_Sema> _6239_s) {
	{
		auto expr = _6239_s->_field_file->_field_imports;
		auto it = expr.begin();
		_iter_begin_4877724352:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _218751758_imp = *it;
			{
				if (_218751758_imp->_field_import_all || _218751758_imp->_method_exist_ident(_6223_ident)) {
					jule::Any _6521_def = _218751758_find_builtins_import(_6223_ident,_218751758_imp);
					if (_6521_def != nullptr) {
						return _6521_def;
					}
				}
			}
			_iter_next_4877724352:;
			++it;
			goto _iter_begin_4877724352;
		}
		_iter_end_4877724352:;
	}
	return jule::Any(nullptr);
}



jule::Bool _218751758_is_ok_for_shifting(jule::Ptr<_218751758_Data>& _7428_d) {
	jule::Ptr<_200d010d9_Prim> _759_prim = _7428_d->_field_kind->_method_prim();
	if ((_759_prim == nullptr) || (!(_1d68ce6a4_is_int(_759_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_7428_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_7428_d->_field_constant->_method_is_i64()))) { goto _case_end_4877735920; }
		_case_begin_4877735920:;
		{
			return _7428_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_4877733776;
		_case_end_4877735920:;
		if (!((_7428_d->_field_constant->_method_is_u64()))) { goto _case_end_4877736016; }
		_case_begin_4877736016:;
		{
			return true;
		}
		goto _match_end_4877733776;
		_case_end_4877736016:;
		_case_begin_4877733888:;
		{
			return false;
		}
		goto _match_end_4877733776;
		_case_end_4877733888:;
		_match_end_4877733776:;
	}
}



jule::Bool _218751758_is_instanced_struct(jule::Ptr<_23461aa35_StructIns> _9124_s) {
	return _9124_s->_field_decl->_field_generics.len() == _9124_s->_field_generics.len();
}



jule::Bool _218751758_is_ptr_arithmetic_compatible_int(jule::Ptr<_218751758_Data>& _9542_d) {
	if (_9542_d->_method_is_const()) {
		return _200c5bcc0_int_assignable(jule::Str("int", 3),_9542_d);
	}
	_200c5bcc0_TypeCompatibilityChecker _9913_tcc = _200c5bcc0_TypeCompatibilityChecker(jule::Ptr<_1eec2c632_Sema>(),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3)))),_9542_d->_field_kind,_2336ea198_Token(),jule::Bool());
	return _9913_tcc._method_check();
}



void _218751758_normalize_bitsize(jule::Ptr<_218751758_Data>& _10627_d) {
	if ((!(_10627_d->_method_is_const()))) {
		return;
	}
	jule::Str _11113_kind = jule::Str();
	{
		if (!((_10627_d->_field_constant->_method_is_i64()))) { goto _case_end_4877755152; }
		_case_begin_4877755152:;
		{
			jule::I64 _11413_x = _10627_d->_field_constant->_method_read_i64();
			_11113_kind=_1d68c15ca_int_from_bits(static_cast<jule::U64>(_1d68c15ca_bitsize_of_int(_11413_x)));
		}
		goto _match_end_4877753952;
		_case_end_4877755152:;
		if (!((_10627_d->_field_constant->_method_is_u64()))) { goto _case_end_4877755248; }
		_case_begin_4877755248:;
		{
			jule::U64 _11813_x = _10627_d->_field_constant->_method_read_u64();
			_11113_kind=_1d68c15ca_uint_from_bits(static_cast<jule::U64>(_1d68c15ca_bitsize_of_uint(_11813_x)));
		}
		goto _match_end_4877753952;
		_case_end_4877755248:;
		_case_begin_4877754192:;
		{
			return;
		}
		goto _match_end_4877753952;
		_case_end_4877754192:;
		_match_end_4877753952:;
	}
	if (_10627_d->_field_kind->_method_enm() != nullptr) {
		return;
	}
	_10627_d->_field_kind->_field_kind=_200d010d9_build_prim_type(_11113_kind);
}



void _218751758_normalize_type(jule::Ptr<_218751758_Data>& _13324_d) {
	{
		if (!((_200c5bcc0_int_assignable(jule::Str("int", 3),_13324_d)))) { goto _case_end_4877764176; }
		_case_begin_4877764176:;
		{
			_13324_d->_field_kind->_field_kind=_200d010d9_build_prim_type(jule::Str("int", 3));
			_13324_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_13324_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4877763952;
		_case_end_4877764176:;
		if (!((_200c5bcc0_int_assignable(jule::Str("uint", 4),_13324_d)))) { goto _case_end_4877764288; }
		_case_begin_4877764288:;
		{
			_13324_d->_field_kind->_field_kind=_200d010d9_build_prim_type(jule::Str("uint", 4));
			_13324_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_13324_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4877763952;
		_case_end_4877764288:;
		_match_end_4877763952:;
	}
}



void _218751758_apply_cast_kind_model(jule::Ptr<_218751758_Data>& _14531_d) {
	_14531_d->_field_model=jule::Any(jule::new_struct<_2188586ea_CastingExprModel>(new( std::nothrow ) _2188586ea_CastingExprModel(_14531_d->_field_model,_14531_d->_field_cast_kind,_14531_d->_field_kind)));
}



void _218751758_apply_cast_kind(jule::Ptr<_218751758_Data>& _15325_d) {
	if (_15325_d->_field_cast_kind == nullptr) {
		return;
	}
	_218751758_apply_cast_kind_model(_15325_d);
	_15325_d->_field_kind=_15325_d->_field_cast_kind;
	_15325_d->_field_cast_kind=nullptr;
}



jule::Ptr<_218751758_Data> _218751758_build_void_data(void) {
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("void", 4)))),jule::Ptr<_200d010d9_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ptr<_1d68bd462_Const>()));
}



jule::Str _218751758_kind_by_bitsize(jule::Any _17420_expr) {
	{
		auto _match_expr{ _17420_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4877780800; }
		_case_begin_4877780800:;
		{
			jule::F64 _17713_x = _17420_expr.operator jule::F64();
			return _1d68c15ca_float_from_bits(static_cast<jule::U64>(_1d68c15ca_bitsize_of_float(_17713_x)));
		}
		goto _match_end_4877777552;
		_case_end_4877780800:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4877780992; }
		_case_begin_4877780992:;
		{
			jule::I64 _18113_x = _17420_expr.operator jule::I64();
			return _1d68c15ca_int_from_bits(static_cast<jule::U64>(_1d68c15ca_bitsize_of_int(_18113_x)));
		}
		goto _match_end_4877777552;
		_case_end_4877780992:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4877781088; }
		_case_begin_4877781088:;
		{
			jule::U64 _18513_x = _17420_expr.operator jule::U64();
			return _1d68c15ca_uint_from_bits(static_cast<jule::U64>(_1d68c15ca_bitsize_of_uint(_18513_x)));
		}
		goto _match_end_4877777552;
		_case_end_4877781088:;
		_case_begin_4877775584:;
		{
			return jule::Str();
		}
		goto _match_end_4877777552;
		_case_end_4877775584:;
		_match_end_4877777552:;
	}
}



jule::Str _218751758_check_data_for_integer_indexing(jule::Ptr<_218751758_Data>& _19341_d) {
	jule::Str _19353_err_fmt = jule::Str();
	if (_19341_d == nullptr) {
		_19353_err_fmt = jule::Str();
		return _19353_err_fmt;
	}
	{
		if (!((_19341_d->_field_kind->_method_prim() == nullptr))) { goto _case_end_4877789552; }
		_case_begin_4877789552:;
		{
			_19353_err_fmt = jule::Str("invalid expression", 18);
			return _19353_err_fmt;
		}
		goto _match_end_4877789184;
		_case_end_4877789552:;
		if (!(((!(_1d68ce6a4_is_int(_19341_d->_field_kind->_method_prim()->_method_to_str())))))) { goto _case_end_4877788688; }
		_case_begin_4877788688:;
		{
			_19353_err_fmt = jule::Str("invalid expression", 18);
			return _19353_err_fmt;
		}
		goto _match_end_4877789184;
		_case_end_4877788688:;
		if (!((_19341_d->_method_is_const()))) { goto _case_end_4877788800; }
		_case_begin_4877788800:;
		{
			if (_19341_d->_field_constant->_method_as_f64() < 0LL) {
				_19353_err_fmt = jule::Str("overflow the limit of data-type", 31);
				return _19353_err_fmt;
			}
		}
		goto _match_end_4877789184;
		_case_end_4877788800:;
		if (!((_19341_d->_field_kind->_method_prim() == nullptr) || (_19341_d->_method_is_const()) || (_1d68c15ca_real_kind_of(_19341_d->_field_kind->_method_prim()->_method_to_str()) != _1d68c15ca_real_kind_of(jule::Str("int", 3))))) { goto _case_end_4877788912; }
		_case_begin_4877788912:;
		{
			_19341_d->_field_cast_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("int", 3))));
			_218751758_apply_cast_kind(_19341_d);
		}
		goto _match_end_4877789184;
		_case_end_4877788912:;
		_match_end_4877789184:;
	}
	_19353_err_fmt = jule::Str();
	return _19353_err_fmt;
}



jule::Bool _200d010d9_can_get_ptr(jule::Ptr<_218751758_Data>& _55221_d) {
	if ((!(_55221_d->_field_lvalue)) || _55221_d->_method_is_const()) {
		return false;
	}
	{
		if (!(((_55221_d->_field_kind->_method_fnc() != nullptr) || (_55221_d->_field_kind->_method_enm() != nullptr)))) { goto _case_end_4877800592; }
		_case_begin_4877800592:;
		{
			return false;
		}
		goto _match_end_4877799104;
		_case_end_4877800592:;
		_case_begin_4877799776:;
		{
			return true;
		}
		goto _match_end_4877799104;
		_case_end_4877799776:;
		_match_end_4877799104:;
	}
}



jule::Bool _200d010d9_is_valid_for_sptr_type(jule::Ptr<_200d010d9_TypeKind>& _56732_t) {
	jule::Ptr<_23461aa35_StructIns> _56813_s = _56732_t->_method_strct();
	if (((_56813_s != nullptr) && (_56813_s->_field_decl != nullptr)) && _56813_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return true;
}



jule::Bool _200d010d9_is_valid_for_ref(jule::Ptr<_200d010d9_TypeKind>& _57626_t) {
	return _57626_t->_method_fnc() == nullptr;
}



jule::Str _200d010d9_build_link_path_by_tokens(jule::Slice<_2336ea198_Token>& _57831_tokens) {
	jule::Str _57913_s = _57831_tokens[0LL]._field_kind;
	{
		auto expr = _57831_tokens.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4877810864:;
		if (it != expr.end()) {
			_2336ea198_Token _200d010d9_token = *it;
			{
				_57913_s+=jule::Str("::", 2);
				_57913_s+=_200d010d9_token._field_kind;
			}
			_iter_next_4877810864:;
			++it;
			goto _iter_begin_4877810864;
		}
		_iter_end_4877810864:;
	}
	return _57913_s;
}



jule::Ptr<_200d010d9_Prim> _200d010d9_build_prim_type(jule::Str _58720_kind) {
	return jule::new_struct_ptr<_200d010d9_Prim>(new( std::nothrow ) _200d010d9_Prim(_58720_kind));
}



jule::Ptr<_23461aa35_Struct> _200d010d9_get_struct_from_kind(jule::Ptr<_200d010d9_TypeKind> _59329_k) {
	{
		if (!((_59329_k == nullptr))) { goto _case_end_4877815424; }
		_case_begin_4877815424:;
		{
			return nullptr;
		}
		goto _match_end_4877814320;
		_case_end_4877815424:;
		if (!((_59329_k->_method_strct() != nullptr))) { goto _case_end_4877815520; }
		_case_begin_4877815520:;
		{
			return _59329_k->_method_strct()->_field_decl;
		}
		goto _match_end_4877814320;
		_case_end_4877815520:;
		if (!((_59329_k->_method_sptr() != nullptr))) { goto _case_end_4877815616; }
		_case_begin_4877815616:;
		{
			return _200d010d9_get_struct_from_kind(_59329_k->_method_sptr()->_field_elem);
		}
		goto _match_end_4877814320;
		_case_end_4877815616:;
		if (!((_59329_k->_method_slc() != nullptr))) { goto _case_end_4877815984; }
		_case_begin_4877815984:;
		{
			return _200d010d9_get_struct_from_kind(_59329_k->_method_slc()->_field_elem);
		}
		goto _match_end_4877814320;
		_case_end_4877815984:;
		if (!((_59329_k->_method_arr() != nullptr))) { goto _case_end_4877816080; }
		_case_begin_4877816080:;
		{
			return _200d010d9_get_struct_from_kind(_59329_k->_method_arr()->_field_elem);
		}
		goto _match_end_4877814320;
		_case_end_4877816080:;
		if (!((_59329_k->_method_ptr() != nullptr))) { goto _case_end_4877816176; }
		_case_begin_4877816176:;
		{
			return nullptr;
		}
		goto _match_end_4877814320;
		_case_end_4877816176:;
		_case_begin_4877814528:;
		{
			return nullptr;
		}
		goto _match_end_4877814320;
		_case_end_4877814528:;
		_match_end_4877814320:;
	}
}



jule::Bool _200d010d9_is_prim(jule::Str _62212_kind) {
	return (((((((((((((((_62212_kind == jule::Str("i8", 2)) || (_62212_kind == jule::Str("i16", 3))) || (_62212_kind == jule::Str("i32", 3))) || (_62212_kind == jule::Str("i64", 3))) || (_62212_kind == jule::Str("u8", 2))) || (_62212_kind == jule::Str("u16", 3))) || (_62212_kind == jule::Str("u32", 3))) || (_62212_kind == jule::Str("u64", 3))) || (_62212_kind == jule::Str("f32", 3))) || (_62212_kind == jule::Str("f64", 3))) || (_62212_kind == jule::Str("int", 3))) || (_62212_kind == jule::Str("uint", 4))) || (_62212_kind == jule::Str("uintptr", 7))) || (_62212_kind == jule::Str("bool", 4))) || (_62212_kind == jule::Str("str", 3))) || (_62212_kind == jule::Str("any", 3));
}



std::tuple<jule::Ptr<_218737b7e_SymbolTable>,jule::Slice<_231e4202e_Log>> _1d67cdc79_build_symbols(jule::Ptr<_23346420e_Ast>& _1523_ast,jule::Trait<_218848bd5_Importer>& _1539_importer,jule::Ptr<_21862cb1d_SymbolBuilder> _1563_owner) {
	jule::Ptr<_21862cb1d_SymbolBuilder> _1613_sb = jule::new_struct_ptr<_21862cb1d_SymbolBuilder>(new( std::nothrow ) _21862cb1d_SymbolBuilder(_1563_owner,_1539_importer,jule::Slice<_231e4202e_Log>(),_1523_ast,jule::Ptr<_218737b7e_SymbolTable>()));
	_1613_sb->_method_build();
	if (_1613_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1613_sb->_field_table,nullptr);
	}
	return std::make_tuple(nullptr,_1613_sb->_field_errors);
}



std::tuple<jule::Ptr<_218848bd5_Package>,jule::Slice<_231e4202e_Log>> _1d67cdc79___analyze_package(jule::Slice<jule::Ptr<_23346420e_Ast>>& _2927_files,jule::Trait<_218848bd5_Importer>& _2947_importer,jule::Int& _2968_flags) {
	jule::Slice<jule::Ptr<_218737b7e_SymbolTable>> _3113_tables = jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>::alloc(0LL,static_cast<jule::I64>(_2927_files.len()));
	{
		auto expr = _2927_files;
		auto it = expr.begin();
		_iter_begin_4877841952:;
		if (it != expr.end()) {
			jule::Ptr<_23346420e_Ast> _1d67cdc79_f = *it;
			{
				jule::Ptr<_218737b7e_SymbolTable> _3318_table;
				jule::Slice<_231e4202e_Log> _3329_errors;
				std::tie(_3318_table,_3329_errors) = _1d67cdc79_build_symbols(_1d67cdc79_f,_2947_importer,nullptr);
				if (_3329_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_3329_errors);
				}
				_3113_tables=jule::append(_3113_tables,jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>({_3318_table}));
			}
			_iter_next_4877841952:;
			++it;
			goto _iter_begin_4877841952;
		}
		_iter_end_4877841952:;
	}
	jule::Ptr<_1eec2c632_Sema> _4013_sema = jule::new_struct_ptr<_1eec2c632_Sema>(new( std::nothrow ) _1eec2c632_Sema(jule::Slice<_231e4202e_Log>(),jule::Slice<jule::Ptr<_218737b7e_SymbolTable>>(),jule::Ptr<_218737b7e_SymbolTable>(),_2968_flags));
	_4013_sema->_method_check(_3113_tables);
	if (_4013_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(nullptr,_4013_sema->_field_errors);
	}
	jule::Ptr<_218848bd5_Package> _4813_pkg = jule::new_struct<_218848bd5_Package>(new( std::nothrow ) _218848bd5_Package(_4013_sema->_field_files));
	return std::make_tuple(_4813_pkg,nullptr);
}



std::tuple<jule::Ptr<_218848bd5_Package>,jule::Slice<_231e4202e_Log>> _1d67cdc79_analyze_package(jule::Slice<jule::Ptr<_23346420e_Ast>> _7228_files,jule::Trait<_218848bd5_Importer> _7247_importer,jule::Int _7267_flags) {
	if (_7228_files.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Ptr<_218848bd5_Package> _7714_package;
	jule::Slice<_231e4202e_Log> _7727_logs;
	std::tie(_7714_package,_7727_logs) = _1d67cdc79___analyze_package(_7228_files,_7247_importer,_7267_flags);
	return std::make_tuple(_7714_package,_7727_logs);
}



std::tuple<jule::Ptr<_218737b7e_SymbolTable>,jule::Slice<_231e4202e_Log>> _1d67cdc79_analyze_file(jule::Ptr<_23346420e_Ast> _9825_f,jule::Trait<_218848bd5_Importer> _9838_importer,jule::Int _9858_flags) {
	jule::Slice<jule::Ptr<_23346420e_Ast>> _9913_files = jule::Slice<jule::Ptr<_23346420e_Ast>>({_9825_f});
	jule::Ptr<_218848bd5_Package> _10014_pkg;
	jule::Slice<_231e4202e_Log> _10023_errors;
	std::tie(_10014_pkg,_10023_errors) = _1d67cdc79_analyze_package(_9913_files,_9838_importer,_9858_flags);
	if (_10023_errors.len() > 0LL) {
		return std::make_tuple(nullptr,_10023_errors);
	}
	jule::Ptr<_218737b7e_SymbolTable> _10713_table = _10014_pkg->_field_files[0LL];
	return std::make_tuple(_10713_table,nullptr);
}



void _1d67e4c4b_init(void) {
	_1d67e4c4b_BUILTIN_FN_OUT->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_out);
	_1d67e4c4b_BUILTIN_FN_OUTLN->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_outln);
	_1d67e4c4b_BUILTIN_FN_NEW->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_new);
	_1d67e4c4b_BUILTIN_FN_PANIC->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_panic);
	_1d67e4c4b_BUILTIN_FN_MAKE->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_make);
	_1d67e4c4b_BUILTIN_FN_APPEND->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_append);
	_1d67e4c4b_BUILTIN_FN_COPY->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_copy);
	_1d67e4c4b_BUILTIN_FN_RECOVER->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_recover);
	_1d67e4c4b_BUILTIN_FN_CLONE->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_clone);
	_1d67e4c4b_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_std_mem_size_of);
	_1d67e4c4b_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_std_mem_align_of);
	_1d67e4c4b_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_std_jule_integrated_to_str);
	jule::Ptr<_2185d51ad_Fn> _10513_error_method = _1d67e4c4b_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ptr<_2185d51ad_FnIns> _10613_error_method_ins = _10513_error_method->_method_instance();
	_10613_error_method_ins->_field_result=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("str", 3))));
	_10613_error_method_ins->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common);
	_10513_error_method->_method_append_instance(_10613_error_method_ins);
	jule::Ptr<_2185d51ad_Fn> _11113_dispose_method = _1d67e4c4b_BUILTIN_TRAIT_DISPOSE->_method_find_method(jule::Str("dispose", 7));
	jule::Ptr<_2185d51ad_FnIns> _11213_dispose_method_ins = _11113_dispose_method->_method_instance();
	_11213_dispose_method_ins->_field_caller=jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common);
	_11113_dispose_method->_method_append_instance(_11213_dispose_method_ins);
}



jule::Ptr<_2185d51ad_FnIns> _1d67e4c4b_find_builtin_fn(jule::Str _11720_ident) {
	{
		auto _match_expr{ _11720_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_4877888736; }
		_case_begin_4877888736:;
		{
			return _1d67e4c4b_BUILTIN_FN_OUT;
		}
		goto _match_end_4877887296;
		_case_end_4877888736:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_4877888832; }
		_case_begin_4877888832:;
		{
			return _1d67e4c4b_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4877887296;
		_case_end_4877888832:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_4877888928; }
		_case_begin_4877888928:;
		{
			return _1d67e4c4b_BUILTIN_FN_NEW;
		}
		goto _match_end_4877887296;
		_case_end_4877888928:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_4877889296; }
		_case_begin_4877889296:;
		{
			return _1d67e4c4b_BUILTIN_FN_PANIC;
		}
		goto _match_end_4877887296;
		_case_end_4877889296:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_4877889392; }
		_case_begin_4877889392:;
		{
			return _1d67e4c4b_BUILTIN_FN_MAKE;
		}
		goto _match_end_4877887296;
		_case_end_4877889392:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_4877889488; }
		_case_begin_4877889488:;
		{
			return _1d67e4c4b_BUILTIN_FN_APPEND;
		}
		goto _match_end_4877887296;
		_case_end_4877889488:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_4877888096; }
		_case_begin_4877888096:;
		{
			return _1d67e4c4b_BUILTIN_FN_COPY;
		}
		goto _match_end_4877887296;
		_case_end_4877888096:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_4877888192; }
		_case_begin_4877888192:;
		{
			return _1d67e4c4b_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4877887296;
		_case_end_4877888192:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_4877888288; }
		_case_begin_4877888288:;
		{
			return _1d67e4c4b_BUILTIN_FN_CLONE;
		}
		goto _match_end_4877887296;
		_case_end_4877888288:;
		_case_begin_4877887200:;
		{
			return nullptr;
		}
		goto _match_end_4877887296;
		_case_end_4877887200:;
		_match_end_4877887296:;
	}
}



jule::Ptr<_200d010d9_TypeAlias> _1d67e4c4b_find_builtin_type_alias(jule::Str _13228_ident) {
	{
		auto _match_expr{ _13228_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_4877895312; }
		_case_begin_4877895312:;
		{
			return _1d67e4c4b_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4877892528;
		_case_end_4877895312:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_4877895456; }
		_case_begin_4877895456:;
		{
			return _1d67e4c4b_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4877892528;
		_case_end_4877895456:;
		_case_begin_4877893376:;
		{
			return nullptr;
		}
		goto _match_end_4877892528;
		_case_end_4877893376:;
		_match_end_4877892528:;
	}
}



jule::Ptr<_2185da36c_Trait> _1d67e4c4b_find_builtin_trait(jule::Str _14023_ident) {
	{
		auto _match_expr{ _14023_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_4877894864; }
		_case_begin_4877894864:;
		{
			return _1d67e4c4b_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4877896880;
		_case_end_4877894864:;
		if (!((jule::Str("Dispose", 7)) == _match_expr)) { goto _case_end_4877898048; }
		_case_begin_4877898048:;
		{
			return _1d67e4c4b_BUILTIN_TRAIT_DISPOSE;
		}
		goto _match_end_4877896880;
		_case_end_4877898048:;
		_case_begin_4877896560:;
		{
			return nullptr;
		}
		goto _match_end_4877896880;
		_case_end_4877896560:;
		_match_end_4877896880:;
	}
}



jule::Any _1d67e4c4b_find_builtin_def(jule::Str _14821_ident) {
	jule::Ptr<_2185d51ad_FnIns> _14913_f = _1d67e4c4b_find_builtin_fn(_14821_ident);
	if (_14913_f != nullptr) {
		return jule::Any(_14913_f);
	}
	jule::Ptr<_200d010d9_TypeAlias> _15413_ta = _1d67e4c4b_find_builtin_type_alias(_14821_ident);
	if (_15413_ta != nullptr) {
		return jule::Any(_15413_ta);
	}
	jule::Ptr<_2185da36c_Trait> _15913_t = _1d67e4c4b_find_builtin_trait(_14821_ident);
	if (_15913_t != nullptr) {
		return jule::Any(_15913_t);
	}
	return jule::Any(nullptr);
}



jule::Any _1d67e4c4b_find_builtin_def_std_mem(jule::Str _16729_ident) {
	{
		auto _match_expr{ _16729_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_4877907264; }
		_case_begin_4877907264:;
		{
			return jule::Any(_1d67e4c4b_BUILTIN_FN_STD_MEM_SIZE_OF);
		}
		goto _match_end_4877903616;
		_case_end_4877907264:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_4877906768; }
		_case_begin_4877906768:;
		{
			return jule::Any(_1d67e4c4b_BUILTIN_FN_STD_MEM_ALIGN_OF);
		}
		goto _match_end_4877903616;
		_case_end_4877906768:;
		_case_begin_4877904400:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4877903616;
		_case_end_4877904400:;
		_match_end_4877903616:;
	}
}



jule::Any _1d67e4c4b_find_builtin_def_std_jule_integrated(jule::Str _17541_ident) {
	{
		auto _match_expr{ _17541_ident };
		if (!((jule::Str("to_str", 6)) == _match_expr)) { goto _case_end_4877910256; }
		_case_begin_4877910256:;
		{
			return jule::Any(_1d67e4c4b_BUILTIN_FN_STD_JULE_INTEGRATED_TO_STR);
		}
		goto _match_end_4877908848;
		_case_end_4877910256:;
		_case_begin_4877906400:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4877908848;
		_case_end_4877906400:;
		_match_end_4877908848:;
	}
}



jule::Any _1d67e4c4b_find_package_builtin_def(jule::Str _18229_link_path,jule::Str _18245_ident) {
	{
		auto _match_expr{ _18229_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_4877913168; }
		_case_begin_4877913168:;
		{
			return _1d67e4c4b_find_builtin_def_std_mem(_18245_ident);
		}
		goto _match_end_4877909344;
		_case_end_4877913168:;
		if (!((jule::Str("std::jule::integrated", 21)) == _match_expr)) { goto _case_end_4877912672; }
		_case_begin_4877912672:;
		{
			return _1d67e4c4b_find_builtin_def_std_jule_integrated(_18245_ident);
		}
		goto _match_end_4877909344;
		_case_end_4877912672:;
		_case_begin_4877910560:;
		{
			return jule::Any(nullptr);
		}
		goto _match_end_4877909344;
		_case_end_4877910560:;
		_match_end_4877909344:;
	}
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_common_plain(jule::Ptr<_218751758_Eval>& _19037_e,jule::Ptr<_233464770_FnCallExpr>& _19052_fc,jule::Ptr<_218751758_Data>& _19074_d) {
	jule::Ptr<_2185d51ad_FnIns> _19113_f = _19074_d->_field_kind->_method_fnc();
	_200c5bcc0_FnCallArgChecker _19313_fcac = _200c5bcc0_FnCallArgChecker(_19037_e,_19052_fc->_field_args,_19052_fc->_field_token,_19113_f,false,jule::Slice<jule::Any>());
	_19313_fcac._method_check();
	jule::Ptr<_2188586ea_FnCallExprModel> _20213_model = jule::new_struct<_2188586ea_FnCallExprModel>(new( std::nothrow ) _2188586ea_FnCallExprModel(_19113_f,_19052_fc->_field_concurrent,_19074_d->_field_model,_19313_fcac._field_arg_models));
	if (_19113_f->_field_result == nullptr) {
		_19074_d=_218751758_build_void_data();
	} else {
		_19074_d=jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(_19113_f->_field_result,jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
	}
	_19074_d->_field_model=jule::Any(_20213_model);
	return _19074_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_common(jule::Ptr<_218751758_Eval>& _22131_e,jule::Ptr<_233464770_FnCallExpr>& _22146_fc,jule::Ptr<_218751758_Data>& _22168_d) {
	if (_22146_fc->_field_generics.len() > 0LL) {
		_22131_e->_method_push_err(_22146_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	return _1d67e4c4b_builtin_caller_common_plain(_22131_e,_22146_fc,_22168_d);
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_common_mut(jule::Ptr<_218751758_Eval>& _22935_e,jule::Ptr<_233464770_FnCallExpr>& _22950_fc,jule::Ptr<_218751758_Data>& _22972_d) {
	if ((!(_22972_d->_field_mutable))) {
		_22935_e->_method_push_err(_22950_fc->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	return _1d67e4c4b_builtin_caller_common(_22935_e,_22950_fc,_22972_d);
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_out(jule::Ptr<_218751758_Eval>& _23628_e,jule::Ptr<_233464770_FnCallExpr>& _23643_fc,jule::Ptr<_218751758_Data>& ) {
	if (_23643_fc->_field_generics.len() > 0LL) {
		_23628_e->_method_push_err(_23643_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_23643_fc->_field_args.len() < 1LL) {
		_23628_e->_method_push_err(_23643_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return nullptr;
	}
	if (_23643_fc->_field_args.len() > 1LL) {
		_23628_e->_method_push_err(_23643_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _24813_expr = _23628_e->_method_eval_expr(_23643_fc->_field_args[0LL]);
	if (_24813_expr == nullptr) {
		return nullptr;
	}
	if ((_24813_expr->_method_is_void() || (_24813_expr->_field_kind->_method_fnc() != nullptr)) || (_24813_expr->_field_kind->_method_tup() != nullptr)) {
		_23628_e->_method_push_err(_23643_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _25813_d = _218751758_build_void_data();
	_25813_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinOutCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinOutCallExprModel(_24813_expr->_field_model)));
	return _25813_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_outln(jule::Ptr<_218751758_Eval>& _26330_e,jule::Ptr<_233464770_FnCallExpr>& _26345_fc,jule::Ptr<_218751758_Data>& _26367_d) {
	_26367_d=_1d67e4c4b_builtin_caller_out(_26330_e,_26345_fc,_26367_d);
	if (_26367_d == nullptr) {
		return nullptr;
	}
	_26367_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinOutlnCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinOutlnCallExprModel(_26367_d->_field_model.operator jule::Ptr<_2188586ea_BuiltinOutCallExprModel>()->_field_expr)));
	return _26367_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_new(jule::Ptr<_218751758_Eval>& _27528_e,jule::Ptr<_233464770_FnCallExpr>& _27543_fc,jule::Ptr<_218751758_Data>& _27565_d) {
	if (_27543_fc->_field_generics.len() > 0LL) {
		_27528_e->_method_push_err(_27543_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_27543_fc->_field_args.len() < 1LL) {
		_27528_e->_method_push_err(_27543_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return nullptr;
	}
	if (_27543_fc->_field_args.len() > 2LL) {
		_27528_e->_method_push_err(_27543_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _28713_t = _27528_e->_method_eval_expr_kind(_27543_fc->_field_args[0LL]->_field_kind);
	if (_28713_t == nullptr) {
		return nullptr;
	}
	if ((!(_28713_t->_field_decl))) {
		_27528_e->_method_push_err(_27543_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if ((!(_200d010d9_is_valid_for_sptr_type(_28713_t->_field_kind)))) {
		jule::Ptr<_23461aa35_StructIns> _29817_s = _28713_t->_field_kind->_method_strct();
		if (((_29817_s != nullptr) && (_29817_s->_field_decl != nullptr)) && _29817_s->_field_decl->_field_cpp_linked) {
			_27528_e->_method_push_err(_27543_fc->_field_args[0LL]->_field_token,jule::Str("cpp-linked structures cannot supports reference counting", 56),jule::Slice<jule::Any>({}));
		}
		return nullptr;
	}
	_27565_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_200d010d9_Sptr>(new( std::nothrow ) _200d010d9_Sptr(_28713_t->_field_kind->_method_clone()))));
	if (_27543_fc->_field_args.len() == 2LL) {
		jule::Ptr<_200d010d9_TypeKind> _30817_old = _27528_e->_field_prefix;
		_27528_e->_field_prefix=_28713_t->_field_kind;
		jule::Ptr<_218751758_Data> _31117_init = _27528_e->_method_eval_expr(_27543_fc->_field_args[1LL]);
		_27528_e->_field_prefix=_30817_old;
		if (_31117_init != nullptr) {
			_2336ea198_Token _31621_token = _27543_fc->_field_args[1LL]->_field_token;
			
			_27528_e->_field_s->_method_check_validity_for_init_expr((!(_27528_e->_field_immutable)),false,_28713_t->_field_kind,_31117_init,_31621_token);
			_27528_e->_field_s->_method_check_assign_type(false,_28713_t->_field_kind,_31117_init,_31621_token);
			_27565_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinNewCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinNewCallExprModel(_28713_t->_field_kind,_31117_init->_field_model)));
		}
	} else {
		_27565_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinNewCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinNewCallExprModel(_28713_t->_field_kind,jule::Any())));
	}
	return _27565_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_panic(jule::Ptr<_218751758_Eval>& _33430_e,jule::Ptr<_233464770_FnCallExpr>& _33445_fc,jule::Ptr<_218751758_Data>& ) {
	if (_33445_fc->_field_generics.len() > 0LL) {
		_33430_e->_method_push_err(_33445_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_33445_fc->_field_args.len() < 1LL) {
		_33430_e->_method_push_err(_33445_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return nullptr;
	}
	if (_33445_fc->_field_args.len() > 1LL) {
		_33430_e->_method_push_err(_33445_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _34613_expr = _33430_e->_method_eval_expr(_33445_fc->_field_args[0LL]);
	if (_34613_expr == nullptr) {
		return nullptr;
	}
	if (_34613_expr->_field_kind->_method_strct() != nullptr) {
		jule::Ptr<_23461aa35_StructIns> _35213_s = _34613_expr->_field_kind->_method_strct();
		if (_35213_s->_field_decl->_method_is_implements(_1d67e4c4b_BUILTIN_TRAIT_ERROR)) {
			_34613_expr->_field_cast_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1d67e4c4b_BUILTIN_TRAIT_ERROR));
			_218751758_apply_cast_kind(_34613_expr);
		}
	}
	jule::Ptr<_218751758_Data> _36113_d = _218751758_build_void_data();
	_36113_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinPanicCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinPanicCallExprModel(_34613_expr->_field_model)));
	return _36113_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_make(jule::Ptr<_218751758_Eval>& _36629_e,jule::Ptr<_233464770_FnCallExpr>& _36644_fc,jule::Ptr<_218751758_Data>& _36666_d) {
	if (_36644_fc->_field_generics.len() > 0LL) {
		_36629_e->_method_push_err(_36644_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_36644_fc->_field_args.len() < 2LL) {
		if (_36644_fc->_field_args.len() == 1LL) {
			_36629_e->_method_push_err(_36644_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return nullptr;
		}
		_36629_e->_method_push_err(_36644_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return nullptr;
	}
	if (_36644_fc->_field_args.len() > 3LL) {
		_36629_e->_method_push_err(_36644_fc->_field_args[3LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _38213_t = _36629_e->_method_eval_expr_kind(_36644_fc->_field_args[0LL]->_field_kind);
	if (_38213_t == nullptr) {
		return nullptr;
	}
	if ((!(_38213_t->_field_decl)) || (_38213_t->_field_kind->_method_slc() == nullptr)) {
		_36629_e->_method_push_err(_36644_fc->_field_args[0LL]->_field_token,jule::Str("invalid data-type", 17),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_36666_d->_field_kind=_38213_t->_field_kind;
	jule::Ptr<_218751758_Data> _39413_len = _36629_e->_field_s->_method_evalp(_36629_e->_field_lookup,_38213_t->_field_kind)->_method_eval_expr(_36644_fc->_field_args[1LL]);
	if (_39413_len == nullptr) {
		return _36666_d;
	}
	_36629_e->_method_check_integer_indexing_by_data(_39413_len,_36644_fc->_field_args[1LL]->_field_token);
	if (_36644_fc->_field_args.len() == 3LL) {
		jule::Ptr<_218751758_Data> _40217_cap = _36629_e->_field_s->_method_evalp(_36629_e->_field_lookup,_38213_t->_field_kind)->_method_eval_expr(_36644_fc->_field_args[2LL]);
		if (_40217_cap == nullptr) {
			return _36666_d;
		}
		_36629_e->_method_check_integer_indexing_by_data(_40217_cap,_36644_fc->_field_args[2LL]->_field_token);
		_36666_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinMakeCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinMakeCallExprModel(_38213_t->_field_kind,_39413_len->_field_model,_40217_cap->_field_model)));
	} else {
		_36666_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinMakeCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinMakeCallExprModel(_38213_t->_field_kind,_39413_len->_field_model,jule::Any())));
	}
	return _36666_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_append(jule::Ptr<_218751758_Eval>& _42331_e,jule::Ptr<_233464770_FnCallExpr>& _42346_fc,jule::Ptr<_218751758_Data>& _42368_d) {
	if (_42346_fc->_field_generics.len() > 0LL) {
		_42331_e->_method_push_err(_42346_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_42346_fc->_field_args.len() < 2LL) {
		if (_42346_fc->_field_args.len() == 1LL) {
			_42331_e->_method_push_err(_42346_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_42331_e->_method_push_err(_42346_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	jule::Ptr<_218751758_Data> _43613_t = _42331_e->_method_eval_expr(_42346_fc->_field_args[0LL]);
	if (_43613_t == nullptr) {
		return nullptr;
	}
	if (_43613_t->_field_kind->_method_slc() == nullptr) {
		_42331_e->_method_push_err(_42346_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Ptr<_2185d51ad_FnIns> _44613_f = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str())),_43613_t->_field_kind->_method_clone())),jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),true,true,jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str())),_43613_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_43613_t->_field_kind->_method_clone(),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_42368_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_44613_f));
	_42368_d->_field_model=jule::Any(jule::new_struct<_2188586ea_CommonIdentExprModel>(new( std::nothrow ) _2188586ea_CommonIdentExprModel(jule::Str("append", 6))));
	_42368_d=_1d67e4c4b_builtin_caller_common_plain(_42331_e,_42346_fc,_42368_d);
	if (_42368_d != nullptr) {
		jule::Ptr<_2188586ea_FnCallExprModel> _47017_model = _42368_d->_field_model.operator jule::Ptr<_2188586ea_FnCallExprModel>();
		_42368_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinAppendCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinAppendCallExprModel(_47017_model->_field_args[0LL],_47017_model->_field_args[1LL])));
	}
	return _42368_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_copy(jule::Ptr<_218751758_Eval>& _47929_e,jule::Ptr<_233464770_FnCallExpr>& _47944_fc,jule::Ptr<_218751758_Data>& _47966_d) {
	if (_47944_fc->_field_generics.len() > 0LL) {
		_47929_e->_method_push_err(_47944_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_47944_fc->_field_args.len() < 2LL) {
		if (_47944_fc->_field_args.len() == 1LL) {
			_47929_e->_method_push_err(_47944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return nullptr;
		}
		_47929_e->_method_push_err(_47944_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return nullptr;
	}
	if (_47944_fc->_field_args.len() > 2LL) {
		_47929_e->_method_push_err(_47944_fc->_field_args[2LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _49513_t = _47929_e->_method_eval_expr(_47944_fc->_field_args[0LL]);
	if (_49513_t == nullptr) {
		return nullptr;
	}
	if (_49513_t->_field_kind->_method_slc() == nullptr) {
		_47929_e->_method_push_err(_47944_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if ((!(_49513_t->_field_mutable))) {
		_47929_e->_method_push_err(_47944_fc->_field_args[0LL]->_field_token,jule::Str("mutable operation cannot used with immutable define", 51),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_2185d51ad_FnIns> _50913_f = jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::Ptr<_2185d51ad_Fn>(),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param()),_49513_t->_field_kind->_method_clone())),jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),true,jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str())),_49513_t->_field_kind->_method_clone()))}),_1d67e4c4b_BUILTIN_FN_COPY->_field_result,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(_1d67e4c4b_builtin_caller_common_plain),jule::Bool(),jule::Bool()));
	_47966_d->_field_kind=jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_50913_f));
	_47966_d->_field_model=jule::Any(jule::new_struct<_2188586ea_CommonIdentExprModel>(new( std::nothrow ) _2188586ea_CommonIdentExprModel(jule::Str("copy", 4))));
	_47966_d=_1d67e4c4b_builtin_caller_common_plain(_47929_e,_47944_fc,_47966_d);
	return _47966_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_recover(jule::Ptr<_218751758_Eval>& _53332_e,jule::Ptr<_233464770_FnCallExpr>& _53347_fc,jule::Ptr<_218751758_Data>& ) {
	if (_53347_fc->_field_generics.len() > 0LL) {
		_53332_e->_method_push_err(_53347_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_200d010d9_TypeKind> _5379_HANDLER_KIND = jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),jule::new_struct_ptr<_2185d51ad_FnIns>(new( std::nothrow ) _2185d51ad_FnIns(jule::Ptr<_23461aa35_StructIns>(),jule::new_struct_ptr<_2185d51ad_Fn>(new( std::nothrow ) _2185d51ad_Fn()),jule::Slice<jule::Ptr<_200d010d9_TypeKind>>(),jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>({jule::new_struct<_2185d51ad_ParamIns>(new( std::nothrow ) _2185d51ad_ParamIns(jule::new_struct_ptr<_2185d51ad_Param>(new( std::nothrow ) _2185d51ad_Param(_2336ea198_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ptr<_200d010d9_TypeSymbol>(),jule::Str("err", 3))),jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_1d67e4c4b_BUILTIN_TRAIT_ERROR))))}),jule::Ptr<_200d010d9_TypeKind>(),jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Ptr<_21862cb1d_ReferenceStack>(),jule::Fn<jule::Ptr<_218751758_Data>(jule::Ptr<_218751758_Eval>&,jule::Ptr<_233464770_FnCallExpr>&,jule::Ptr<_218751758_Data>&)>(),jule::Bool(),jule::Bool()))));
	if (_53347_fc->_field_args.len() < 1LL) {
		_53332_e->_method_push_err(_53347_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return nullptr;
	}
	if (_53347_fc->_field_args.len() > 1LL) {
		_53332_e->_method_push_err(_53347_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _56113_t = _53332_e->_method_eval_expr(_53347_fc->_field_args[0LL]);
	if (_56113_t == nullptr) {
		return nullptr;
	}
	jule::Ptr<_2185d51ad_FnIns> _5669_f = _56113_t->_field_kind->_method_fnc();
	if (_5669_f == nullptr) {
		_53332_e->_method_push_err(_53347_fc->_field_args[0LL]->_field_token,jule::Str("invalid expression", 18),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	if ((!(_5669_f->_method_equals(_5379_HANDLER_KIND)))) {
		_53332_e->_method_push_err(_53347_fc->_field_args[0LL]->_field_token,jule::Str("@ and @ data-types are not compatible", 37),jule::Slice<jule::Any>({jule::Any(_56113_t->_field_kind->_method_to_str()),jule::Any(_5379_HANDLER_KIND->_method_to_str())}));
	}
	jule::Ptr<_218751758_Data> _57613_d = _218751758_build_void_data();
	_57613_d->_field_kind=_56113_t->_field_kind->_method_clone();
	_57613_d->_field_model=jule::Any(jule::new_struct<_2186ce186_Recover>(new( std::nothrow ) _2186ce186_Recover(jule::Ptr<_2185d51ad_FnIns>(),_56113_t->_field_model,jule::Ptr<_2186ce186_Scope>(),jule::Ptr<_2185d51ad_FnIns>())));
	return _57613_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_clone(jule::Ptr<_218751758_Eval>& _58430_e,jule::Ptr<_233464770_FnCallExpr>& _58445_fc,jule::Ptr<_218751758_Data>& ) {
	if (_58445_fc->_field_generics.len() > 0LL) {
		_58430_e->_method_push_err(_58445_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_58445_fc->_field_args.len() < 1LL) {
		_58430_e->_method_push_err(_58445_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_58445_fc->_field_args.len() > 1LL) {
		_58430_e->_method_push_err(_58445_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _59713_d = _58430_e->_method_eval_expr_kind(_58445_fc->_field_args[0LL]->_field_kind);
	if (_59713_d == nullptr) {
		return nullptr;
	}
	jule::Fn<void(jule::Ptr<_200d010d9_TypeKind>)> _6029_check_kind = jule::Fn<void(jule::Ptr<_200d010d9_TypeKind>)>([=](jule::Ptr<_200d010d9_TypeKind> _60229_k) mutable -> void {
		{
			if (!((_60229_k->_method_slc() != nullptr))) { goto _case_end_4878180080; }
			_case_begin_4878180080:;
			{
				if ((!(_60229_k->_method_slc()->_field_elem->_method_supports_cloning()))) {
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
				}
			}
			goto _match_end_4878176160;
			_case_end_4878180080:;
			if (!((_60229_k->_method_map() != nullptr))) { goto _case_end_4878176624; }
			_case_begin_4878176624:;
			{
				jule::Ptr<_200d010d9_Map> _61017_m = _60229_k->_method_map();
				if ((!(_61017_m->_field_key->_method_supports_cloning())) || (!(_61017_m->_field_val->_method_supports_cloning()))) {
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
				}
			}
			goto _match_end_4878176160;
			_case_end_4878176624:;
			if (!((_60229_k->_method_arr() != nullptr))) { goto _case_end_4878176720; }
			_case_begin_4878176720:;
			{
				if ((!(_60229_k->_method_arr()->_field_elem->_method_supports_cloning()))) {
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
				}
			}
			goto _match_end_4878176160;
			_case_end_4878176720:;
			if (!((_60229_k->_method_sptr() != nullptr))) { goto _case_end_4878176816; }
			_case_begin_4878176816:;
			{
				if ((!(_60229_k->_method_sptr()->_field_elem->_method_supports_cloning()))) {
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("internal types of \"@\" is not supports cloning", 45),jule::Slice<jule::Any>({jule::Any(_60229_k->_method_to_str())}));
				}
			}
			goto _match_end_4878176160;
			_case_end_4878176816:;
			if (!((_60229_k->_method_strct() != nullptr))) { goto _case_end_4878176912; }
			_case_begin_4878176912:;
			{
				jule::Ptr<_23461aa35_StructIns> _62617_s = _59713_d->_field_kind->_method_strct();
				if ((!(_62617_s->_field_mutable))) {
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59),jule::Slice<jule::Any>({jule::Any(_59713_d->_field_kind->_method_to_str())}));
				}
				if (((_62617_s->_field_decl == nullptr) || _62617_s->_field_decl->_field_cpp_linked) || (!(_62617_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_59713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4878176160;
			_case_end_4878176912:;
			_case_begin_4878176336:;
			{
				_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("type \"@\" is not derives: @", 26),jule::Slice<jule::Any>({jule::Any(_59713_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4878176160;
			_case_end_4878176336:;
			_match_end_4878176160:;
		}
	});
	{
		if (!(((!(_59713_d->_field_lvalue))))) { goto _case_end_4878167088; }
		_case_begin_4878167088:;
		{
			_58430_e->_method_push_err(_58445_fc->_field_args[0LL]->_field_token,jule::Str("non-lvalue expressions cannot be clone", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4878206912;
		_case_end_4878167088:;
		if (!(((!(_59713_d->_field_kind->_method_supports_cloning()))))) { goto _case_end_4878197456; }
		_case_begin_4878197456:;
		{
			_6029_check_kind(_59713_d->_field_kind);
		}
		goto _match_end_4878206912;
		_case_end_4878197456:;
		_match_end_4878206912:;
	}
	_59713_d->_field_mutable=true;
	_59713_d->_field_model=jule::Any(jule::new_struct<_2188586ea_BuiltinCloneCallExprModel>(new( std::nothrow ) _2188586ea_BuiltinCloneCallExprModel(_59713_d->_field_model)));
	return _59713_d;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_std_mem_size_of(jule::Ptr<_218751758_Eval>& _65240_e,jule::Ptr<_233464770_FnCallExpr>& _65255_fc,jule::Ptr<_218751758_Data>& ) {
	if (_65255_fc->_field_generics.len() > 0LL) {
		_65240_e->_method_push_err(_65255_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _65613_result = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
	if (_65255_fc->_field_args.len() < 1LL) {
		_65240_e->_method_push_err(_65255_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _65613_result;
	}
	if (_65255_fc->_field_args.len() > 1LL) {
		_65240_e->_method_push_err(_65255_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _66813_d = _65240_e->_method_eval_expr_kind(_65255_fc->_field_args[0LL]->_field_kind);
	if (_66813_d == nullptr) {
		return _65613_result;
	}
	_65613_result->_field_model=jule::Any(jule::new_struct<_2188586ea_SizeofExprModel>(new( std::nothrow ) _2188586ea_SizeofExprModel(_66813_d->_field_model)));
	return _65613_result;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_std_mem_align_of(jule::Ptr<_218751758_Eval>& _67741_e,jule::Ptr<_233464770_FnCallExpr>& _67756_fc,jule::Ptr<_218751758_Data>& ) {
	if (_67756_fc->_field_generics.len() > 0LL) {
		_67741_e->_method_push_err(_67756_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _68113_result = jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("uint", 4)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
	if (_67756_fc->_field_args.len() < 1LL) {
		_67741_e->_method_push_err(_67756_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _68113_result;
	}
	if (_67756_fc->_field_args.len() > 1LL) {
		_67741_e->_method_push_err(_67756_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _69313_d = _67741_e->_method_eval_expr_kind(_67756_fc->_field_args[0LL]->_field_kind);
	if (_69313_d == nullptr) {
		return _68113_result;
	}
	_68113_result->_field_model=jule::Any(jule::new_struct<_2188586ea_AlignofExprModel>(new( std::nothrow ) _2188586ea_AlignofExprModel(_69313_d->_field_model)));
	return _68113_result;
}



jule::Ptr<_218751758_Data> _1d67e4c4b_builtin_caller_std_jule_integrated_to_str(jule::Ptr<_218751758_Eval>& _70251_e,jule::Ptr<_233464770_FnCallExpr>& _70266_fc,jule::Ptr<_218751758_Data>& ) {
	if (_70266_fc->_field_generics.len() > 0LL) {
		_70251_e->_method_push_err(_70266_fc->_field_token,jule::Str("define not has generics", 23),jule::Slice<jule::Any>({}));
	}
	if (_70266_fc->_field_args.len() < 1LL) {
		_70251_e->_method_push_err(_70266_fc->_field_token,jule::Str("missing expression for @", 24),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return nullptr;
	}
	if (_70266_fc->_field_args.len() > 1LL) {
		_70251_e->_method_push_err(_70266_fc->_field_args[1LL]->_field_token,jule::Str("argument overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ptr<_218751758_Data> _71513_d = _70251_e->_method_eval_expr_kind(_70266_fc->_field_args[0LL]->_field_kind);
	if (_71513_d == nullptr) {
		return nullptr;
	}
	return jule::new_struct<_218751758_Data>(new( std::nothrow ) _218751758_Data(jule::new_struct_ptr<_200d010d9_TypeKind>(new( std::nothrow ) _200d010d9_TypeKind(jule::Str(),jule::Bool(),jule::Bool(),_200d010d9_build_prim_type(jule::Str("str", 3)))),jule::Ptr<_200d010d9_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(jule::new_struct<_2188586ea_IntegratedToStrExprModel>(new( std::nothrow ) _2188586ea_IntegratedToStrExprModel(_71513_d->_field_model))),jule::Bool(),jule::Ptr<_1d68bd462_Const>()));
}



std::tuple<jule::Bool,jule::Bool> _2330c2a93_check_os(jule::Str _1013_arg) {
	jule::Bool _1025_ok = jule::Bool();
	jule::Bool _1035_exist = jule::Bool();
	_1025_ok=false;
	_1035_exist=true;
	{
		auto _match_expr{ _1013_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4884152880; }
		_case_begin_4884152880:;
		{
			_1025_ok=_231e8d3bb_is_windows(_231e610d6_OS);
		}
		goto _match_end_4884151728;
		_case_end_4884152880:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4884153344; }
		_case_begin_4884153344:;
		{
			_1025_ok=_231e8d3bb_is_darwin(_231e610d6_OS);
		}
		goto _match_end_4884151728;
		_case_end_4884153344:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4884152560; }
		_case_begin_4884152560:;
		{
			_1025_ok=_231e8d3bb_is_linux(_231e610d6_OS);
		}
		goto _match_end_4884151728;
		_case_end_4884152560:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_4884152048; }
		_case_begin_4884152048:;
		{
			_1025_ok=_231e8d3bb_is_unix(_231e610d6_OS);
		}
		goto _match_end_4884151728;
		_case_end_4884152048:;
		_case_begin_4884151536:;
		{
			_1025_ok=true;
			_1035_exist=false;
		}
		goto _match_end_4884151728;
		_case_end_4884151536:;
		_match_end_4884151728:;
	}
	return std::make_tuple(_1025_ok,_1035_exist);
}



std::tuple<jule::Bool,jule::Bool> _2330c2a93_check_arch(jule::Str _2715_arg) {
	jule::Bool _2727_ok = jule::Bool();
	jule::Bool _2737_exist = jule::Bool();
	_2727_ok=false;
	_2737_exist=true;
	{
		auto _match_expr{ _2715_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4884159840; }
		_case_begin_4884159840:;
		{
			_2727_ok=_231e8d3bb_is_i386(_231e610d6_ARCH);
		}
		goto _match_end_4884158224;
		_case_end_4884159840:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4884159056; }
		_case_begin_4884159056:;
		{
			_2727_ok=_231e8d3bb_is_amd64(_231e610d6_ARCH);
		}
		goto _match_end_4884158224;
		_case_end_4884159056:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4884158544; }
		_case_begin_4884158544:;
		{
			_2727_ok=_231e8d3bb_is_arm64(_231e610d6_ARCH);
		}
		goto _match_end_4884158224;
		_case_end_4884158544:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_4884158640; }
		_case_begin_4884158640:;
		{
			_2727_ok=_231e8d3bb_is_64bit(_231e610d6_ARCH);
		}
		goto _match_end_4884158224;
		_case_end_4884158640:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_4884158736; }
		_case_begin_4884158736:;
		{
			_2727_ok=_231e8d3bb_is_32bit(_231e610d6_ARCH);
		}
		goto _match_end_4884158224;
		_case_end_4884158736:;
		_case_begin_4884158032:;
		{
			_2727_ok=true;
			_2737_exist=false;
		}
		goto _match_end_4884158224;
		_case_end_4884158032:;
		_match_end_4884158224:;
	}
	return std::make_tuple(_2727_ok,_2737_exist);
}



jule::Bool _2330c2a93_is_pass_file_annotation(jule::Str _4632_p) {
	_4632_p=_231ed2cb2_base(_4632_p);
	jule::I64 _489_n = _4632_p.len();
	_4632_p=_4632_p.slice(0LL,_489_n - _231ed2cb2_ext(_4632_p).len());
	jule::Str _5413_a1 = jule::Str();
	jule::Str _5713_a2 = jule::Str();
	jule::Int _6013_i = _4632_p.rfind(jule::Str("_", 1));
	if (_6013_i == -1LL) {
		jule::Bool _6318_ok;
		jule::Bool _6326_exist;
		std::tie(_6318_ok,_6326_exist) = _2330c2a93_check_os(_4632_p);
		if (_6326_exist) {
			return _6318_ok;
		}
		std::tie(_6318_ok,_6326_exist) = _2330c2a93_check_arch(_4632_p);
		return (!(_6326_exist)) || _6318_ok;
	}
	if ((_6013_i + 1LL) >= _489_n) {
		return true;
	}
	_5413_a1=_4632_p.slice(_6013_i + 1LL);
	_4632_p=_4632_p.slice(0LL,_6013_i);
	_6013_i=static_cast<jule::Int>(_4632_p.rfind(jule::Str("_", 1)));
	if (_6013_i != -1LL) {
		_5713_a2=_4632_p.slice(_6013_i + 1LL);
	}
	if (_5713_a2 == jule::Str()) {
		jule::Bool _8418_ok;
		jule::Bool _8426_exist;
		std::tie(_8418_ok,_8426_exist) = _2330c2a93_check_os(_5413_a1);
		if (_8426_exist) {
			return _8418_ok;
		}
		std::tie(_8418_ok,_8426_exist) = _2330c2a93_check_arch(_5413_a1);
		return (!(_8426_exist)) || _8418_ok;
	}
	jule::Bool _9214_ok;
	jule::Bool _9222_exist;
	std::tie(_9214_ok,_9222_exist) = _2330c2a93_check_arch(_5413_a1);
	if (_9222_exist) {
		if ((!(_9214_ok))) {
			return false;
		}
		jule::Bool _9714_ok;
		jule::Bool _9718_exist;
		std::tie(_9714_ok,_9718_exist) = _2330c2a93_check_os(_5713_a2);
		return (!(_9718_exist)) || _9714_ok;
	}
	std::tie(_9214_ok,_9222_exist) = _2330c2a93_check_os(_5413_a1);
	return (!(_9222_exist)) || _9214_ok;
}



jule::Bool _23311c88a_eval_directive_ident(jule::Str _625_ident) {
	if (_625_ident == jule::Str()) {
		return false;
	}
	{
		auto expr = _23314edea_FLAGS;
		auto it = expr.begin();
		_iter_begin_4884187440:;
		if (it != expr.end()) {
			jule::Str _23311c88a_flag = *it;
			{
				if (_23311c88a_flag == _625_ident) {
					return true;
				}
			}
			_iter_next_4884187440:;
			++it;
			goto _iter_begin_4884187440;
		}
		_iter_end_4884187440:;
	}
	return false;
}



jule::Bool _23311c88a_eval_directive_part(jule::Str _2228_part) {
	jule::Bool _239_logical_not = _2228_part[0LL] == '!';
	if (_239_logical_not) {
		_2228_part=_2228_part.slice(1LL);
	}
	jule::Bool _2813_result = _23311c88a_eval_directive_ident(_2228_part);
	if (_239_logical_not) {
		_2813_result=(!(_2813_result));
	}
	return _2813_result;
}



jule::Slice<jule::Str> _23311c88a_split_operans(jule::Str _3718_op,jule::Str _3727_expr) {
	jule::Slice<jule::Str> _3813_parts = jule::Slice<jule::Str>::alloc(0LL,10LL);
	jule::Int _4013_range_n = 0LL;
	jule::Int _4113_i = 0LL;
	jule::Int _4213_last = 0LL;
	for (; _4113_i < (_3727_expr.len() - 1LL); (_4113_i)++) {
		{
			jule::U8 _4413_b = _3727_expr[_4113_i];
			if (_4413_b == '(') {
				(_4013_range_n)++;
				goto _iter_next_4884195344;
			} else if (_4413_b == ')') {
				(_4013_range_n)--;
			}
			if (_4013_range_n > 0LL) {
				goto _iter_next_4884195344;
			}
			{
				auto _match_expr{ _3718_op };
				if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_4884201920; }
				_case_begin_4884201920:;
				{
					if ((_4413_b == '|') && (_3727_expr[_4113_i + 1LL] == '|')) {
						_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(_4213_last,_4113_i)}));
						_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
					}
				}
				goto _match_end_4884201072;
				_case_end_4884201920:;
				if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_4884202272; }
				_case_begin_4884202272:;
				{
					if ((_4413_b == '&') && (_3727_expr[_4113_i + 1LL] == '&')) {
						_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(_4213_last,_4113_i)}));
						_4213_last=static_cast<jule::Int>(_4113_i + 2LL);
					}
				}
				goto _match_end_4884201072;
				_case_end_4884202272:;
				_match_end_4884201072:;
			}
		}
	_iter_next_4884195344:;
	}
	_iter_end_4884195344:;
	if (_4213_last < _3727_expr.len()) {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({_3727_expr.slice(_4213_last)}));
	} else {
		_3813_parts=jule::append(_3813_parts,jule::Slice<jule::Str>({jule::Str()}));
	}
	return _3813_parts;
}



jule::Bool _23311c88a_eval_directive_expr(jule::Str _8724_expr) {
	if (_8724_expr == jule::Str()) {
		return false;
	}
	jule::Bool _9213_result = false;
	jule::Slice<jule::Str> _949_logical_or_parts = _23311c88a_split_operans(jule::Str("||", 2),_8724_expr);
	{
		auto expr = _949_logical_or_parts;
		auto it = expr.begin();
		_iter_begin_4884213776:;
		if (it != expr.end()) {
			jule::Str _23311c88a_part = *it;
			{
				if (_23311c88a_part == jule::Str()) {
					return false;
				}
				jule::Bool _10017_and = true;
				jule::Slice<jule::Str> _10113_logical_and_parts = _23311c88a_split_operans(jule::Str("&&", 2),_23311c88a_part);
				{
					auto expr = _10113_logical_and_parts;
					auto it = expr.begin();
					_iter_begin_4884217968:;
					if (it != expr.end()) {
						jule::Str _23311c88a_and_part = *it;
						{
							if (_23311c88a_and_part.find(jule::Str("(", 1)) != -1LL) {
								if (_23311c88a_and_part[_23311c88a_and_part.len() - 1LL] != ')') {
									return false;
								}
								jule::Str _10721__expr = _23311c88a_and_part.slice(1LL,_23311c88a_and_part.len() - 1LL);
								_10017_and=_10017_and && _23311c88a_eval_directive_expr(_10721__expr);
							} else {
								_10017_and=_10017_and && _23311c88a_eval_directive_part(_23311c88a_and_part);
							}
						}
						_iter_next_4884217968:;
						++it;
						goto _iter_begin_4884217968;
					}
					_iter_end_4884217968:;
				}
				_9213_result=_9213_result || _10017_and;
			}
			_iter_next_4884213776:;
			++it;
			goto _iter_begin_4884213776;
		}
		_iter_end_4884213776:;
	}
	return _9213_result;
}



void _23314edea_set_os_flags(void) {
	{
		auto _match_expr{ _231e610d6_OS };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_4884213200; }
		_case_begin_4884213200:;
		{
			_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("windows", 7)}));
		}
		goto _match_end_4884226688;
		_case_end_4884213200:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_4884217264; }
		_case_begin_4884217264:;
		{
			_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("linux", 5)}));
		}
		goto _match_end_4884226688;
		_case_end_4884217264:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_4884218576; }
		_case_begin_4884218576:;
		{
			_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("darwin", 6)}));
		}
		goto _match_end_4884226688;
		_case_end_4884218576:;
		_match_end_4884226688:;
	}
	if (_231e8d3bb_is_unix(_231e610d6_OS)) {
		_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("unix", 4)}));
	}
}



void _23314edea_set_arch_flags(void) {
	{
		auto _match_expr{ _231e610d6_ARCH };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_4884228880; }
		_case_begin_4884228880:;
		{
			_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("i386", 4)}));
		}
		goto _match_end_4884229344;
		_case_end_4884228880:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_4884229680; }
		_case_begin_4884229680:;
		{
			_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("amd64", 5)}));
		}
		goto _match_end_4884229344;
		_case_end_4884229680:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_4884218784; }
		_case_begin_4884218784:;
		{
			_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("arm64", 5)}));
		}
		goto _match_end_4884229344;
		_case_end_4884218784:;
		_match_end_4884229344:;
	}
	if (_231e8d3bb_is_64bit(_231e610d6_ARCH)) {
		_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("64bit", 5)}));
	}
	if (_231e8d3bb_is_32bit(_231e610d6_ARCH)) {
		_23314edea_FLAGS=jule::append(_23314edea_FLAGS,jule::Slice<jule::Str>({jule::Str("32bit", 5)}));
	}
}



void _23314edea_init_flags(void) {
	_23314edea_set_os_flags();
	_23314edea_set_arch_flags();
}



void _233336642_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_23200a669_exit(1LL);
}



jule::Slice<jule::U8> _233336642_read_buff(jule::Str _3014_path) {
	jule::Slice<jule::U8> _3114_buffer;
	jule::Int _3122_err;
	std::tie(_3114_buffer,_3122_err) = _2334d2447_File::_static_method_read(_3014_path);
	if (_3122_err != 0LLU) {
		_233336642_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3114_buffer;
}



_231e4202e_Log _233336642_flat_compiler_err(jule::Str _4022_text) {
	return _231e4202e_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_4022_text,jule::Str(),jule::Str());
}



std::tuple<jule::Slice<jule::Ptr<_233463670_DirEntry>>,jule::Str> _233336642_read_package_dirents(jule::Str _4825_path) {
	jule::Str _4851_err_msg = jule::Str();
	jule::Slice<jule::Ptr<_233463670_DirEntry>> _4914_dirents;
	jule::Int _4923_err;
	std::tie(_4914_dirents,_4923_err) = _233463670_Directory::_static_method_read(_4825_path);
	if (_4923_err != 0LLU) {
		_4851_err_msg = jule::Str("connot read package directory: ", 31) + _4825_path;
		return std::make_tuple(nullptr,_4851_err_msg);
	}
	jule::Slice<jule::Ptr<_233463670_DirEntry>> _5413_passed_dirents = nullptr;
	{
		auto expr = _4914_dirents;
		auto it = expr.begin();
		_iter_begin_4884248656:;
		if (it != expr.end()) {
			jule::Ptr<_233463670_DirEntry> _233336642_dirent = *it;
			{
				jule::Str _5613_name = _233336642_dirent->_field_name;
				if (_233336642_dirent->_field_stat->_method_is_dir() || (!(_5613_name.has_suffix(jule::Str(".jule", 5))))) {
					goto _iter_next_4884248656;
				}
				_5413_passed_dirents=jule::append(_5413_passed_dirents,jule::Slice<jule::Ptr<_233463670_DirEntry>>({_233336642_dirent}));
			}
			_iter_next_4884248656:;
			++it;
			goto _iter_begin_4884248656;
		}
		_iter_end_4884248656:;
	}
	_4851_err_msg = jule::Str();
	return std::make_tuple(_5413_passed_dirents,_4851_err_msg);
}



jule::Str _233336642_concat_all_parts(jule::Slice<jule::Str> _7021_parts) {
	jule::Str _7113_s = jule::Str();
	{
		auto expr = _7021_parts;
		auto it = expr.begin();
		_iter_begin_4884256320:;
		if (it != expr.end()) {
			jule::Str _233336642_part = *it;
			{
				_7113_s+=_233336642_part;
			}
			_iter_next_4884256320:;
			++it;
			goto _iter_begin_4884256320;
		}
		_iter_end_4884256320:;
	}
	return _7113_s;
}



jule::Bool _233336642_is_pass_build_directives(jule::Ptr<_23346420e_Ast>& _7934_file) {
	{
		auto expr = _7934_file->_field_top_directives;
		auto it = expr.begin();
		_iter_begin_4884257440:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Directive> _233336642_td = *it;
			{
				if (_233336642_td->_field_tag != jule::Str("build", 5)) {
					goto _iter_next_4884257440;
				}
				jule::Str _8513_expr = _233336642_concat_all_parts(_233336642_td->_field_args);
				jule::Bool _8613_result = _23311c88a_eval_directive_expr(_8513_expr);
				if ((!(_8613_result))) {
					return false;
				}
			}
			_iter_next_4884257440:;
			++it;
			goto _iter_begin_4884257440;
		}
		_iter_end_4884257440:;
	}
	return true;
}



void _23301cea5_push_passes(jule::Ptr<_218848bd5_Package>& _11321_p,jule::Slice<jule::Str>& _11345_passes) {
	{
		auto expr = _11321_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4884332048:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _23301cea5_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = _23301cea5_f->_field_passes;
					auto it = expr.begin();
					_iter_begin_4884334208:;
					if (it != expr.end()) {
						_21862cb1d_Pass _23301cea5_pass = *it;
						{
							if (_23301cea5_pass._field_text == jule::Str()) {
								goto _iter_next_4884334208;
							}
							{
								auto expr = _11345_passes;
								auto it = expr.begin();
								_iter_begin_4884335552:;
								if (it != expr.end()) {
									jule::Str _23301cea5_cpass = *it;
									{
										if (_23301cea5_cpass == _23301cea5_pass._field_text) {
											goto _iter_next_4884334208;
										}
									}
									_iter_next_4884335552:;
									++it;
									goto _iter_begin_4884335552;
								}
								_iter_end_4884335552:;
							}
							_11345_passes=jule::append(_11345_passes,jule::Slice<jule::Str>({_23301cea5_pass._field_text}));
						}
						_iter_next_4884334208:;
						++it;
						goto _iter_begin_4884334208;
					}
					_iter_end_4884334208:;
				}
			}
			_iter_next_4884332048:;
			++it;
			goto _iter_begin_4884332048;
		}
		_iter_end_4884332048:;
	}
}



jule::Slice<jule::Str> _23301cea5_get_all_unique_passes(jule::Ptr<_218848bd5_Package>& _13031_pkg,jule::Slice<jule::Ptr<_218848bd5_ImportInfo>> _13056_uses) {
	jule::Slice<jule::Str> _13113_passes = nullptr;
	_23301cea5_push_passes(_13031_pkg,_13113_passes);
	{
		auto expr = _13056_uses;
		auto it = expr.begin();
		_iter_begin_4884341888:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _23301cea5_u = *it;
			{
				if ((!(_23301cea5_u->_field_cpp_linked))) {
					_23301cea5_push_passes(_23301cea5_u->_field_package,_13113_passes);
				}
			}
			_iter_next_4884341888:;
			++it;
			goto _iter_begin_4884341888;
		}
		_iter_end_4884341888:;
	}
	return _13113_passes;
}



jule::Bool _231e62d30_is_exist_0(jule::Slice<jule::Any> _3016_arr,jule::Ptr<_2185d51ad_FnIns> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4884487200:;
		if (it != expr.end()) {
			jule::Any _231e62d30_ref = *it;
			{
				{
					auto _match_expr{ _231e62d30_ref };
					if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884488640; }
					_case_begin_4884488640:;
					{
						if (_231e62d30_ref.operator jule::Ptr<_2185d51ad_FnIns>() == _3028_t) {
							return true;
						}
					}
					goto _match_end_4884488960;
					_case_end_4884488640:;
					_match_end_4884488960:;
				}
			}
			_iter_next_4884487200:;
			++it;
			goto _iter_begin_4884487200;
		}
		_iter_end_4884487200:;
	}
	return false;
}

jule::Bool _231e62d30_is_exist_1(jule::Slice<jule::Any> _3016_arr,jule::Ptr<_200c58948_Var> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4884494304:;
		if (it != expr.end()) {
			jule::Any _231e62d30_ref = *it;
			{
				{
					auto _match_expr{ _231e62d30_ref };
					if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884495744; }
					_case_begin_4884495744:;
					{
						if (_231e62d30_ref.operator jule::Ptr<_200c58948_Var>() == _3028_t) {
							return true;
						}
					}
					goto _match_end_4884496064;
					_case_end_4884495744:;
					_match_end_4884496064:;
				}
			}
			_iter_next_4884494304:;
			++it;
			goto _iter_begin_4884494304;
		}
		_iter_end_4884494304:;
	}
	return false;
}

jule::Bool _231e62d30_is_exist_2(jule::Slice<jule::Any> _3016_arr,jule::Ptr<_23461aa35_StructIns> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4884501472:;
		if (it != expr.end()) {
			jule::Any _231e62d30_ref = *it;
			{
				{
					auto _match_expr{ _231e62d30_ref };
					if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884502912; }
					_case_begin_4884502912:;
					{
						if (_231e62d30_ref.operator jule::Ptr<_23461aa35_StructIns>() == _3028_t) {
							return true;
						}
					}
					goto _match_end_4884503232;
					_case_end_4884502912:;
					_match_end_4884503232:;
				}
			}
			_iter_next_4884501472:;
			++it;
			goto _iter_begin_4884501472;
		}
		_iter_end_4884501472:;
	}
	return false;
}

jule::Bool _231e62d30_is_exist_3(jule::Slice<jule::Any> _3016_arr,jule::Ptr<_2185da36c_Trait> _3028_t) {
	{
		auto expr = _3016_arr;
		auto it = expr.begin();
		_iter_begin_4884508576:;
		if (it != expr.end()) {
			jule::Any _231e62d30_ref = *it;
			{
				{
					auto _match_expr{ _231e62d30_ref };
					if (!(_match_expr.type_is<jule::Ptr<_2185da36c_Trait>>())) { goto _case_end_4884510016; }
					_case_begin_4884510016:;
					{
						if (_231e62d30_ref.operator jule::Ptr<_2185da36c_Trait>() == _3028_t) {
							return true;
						}
					}
					goto _match_end_4884510336;
					_case_end_4884510016:;
					_match_end_4884510336:;
				}
			}
			_iter_next_4884508576:;
			++it;
			goto _iter_begin_4884508576;
		}
		_iter_end_4884508576:;
	}
	return false;
}



jule::Bool _231e62d30_is_exist_ref(jule::Slice<jule::Any> _4321_refs,jule::Any _4334_ref) {
	{
		auto _match_expr{ _4334_ref };
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884480208; }
		_case_begin_4884480208:;
		{
			return _231e62d30_is_exist_0(_4321_refs,_4334_ref.operator jule::Ptr<_2185d51ad_FnIns>());
		}
		goto _match_end_4884479648;
		_case_end_4884480208:;
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884480304; }
		_case_begin_4884480304:;
		{
			return _231e62d30_is_exist_1(_4321_refs,_4334_ref.operator jule::Ptr<_200c58948_Var>());
		}
		goto _match_end_4884479648;
		_case_end_4884480304:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884480400; }
		_case_begin_4884480400:;
		{
			return _231e62d30_is_exist_2(_4321_refs,_4334_ref.operator jule::Ptr<_23461aa35_StructIns>());
		}
		goto _match_end_4884479648;
		_case_end_4884480400:;
		if (!(_match_expr.type_is<jule::Ptr<_2185da36c_Trait>>())) { goto _case_end_4884481248; }
		_case_begin_4884481248:;
		{
			return _231e62d30_is_exist_3(_4321_refs,_4334_ref.operator jule::Ptr<_2185da36c_Trait>());
		}
		goto _match_end_4884479648;
		_case_end_4884481248:;
		_case_begin_4884479408:;
		{
			return false;
		}
		goto _match_end_4884479648;
		_case_end_4884479408:;
		_match_end_4884479648:;
	}
}



jule::Bool _231e62d30_is_dead(jule::Any _5416_ref) {
	jule::Bool _5428_dead = jule::Bool();
	if (_231e62d30_is_exist_ref(_231e62d30_deads,_5416_ref)) {
		_5428_dead = true;
		return _5428_dead;
	}
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884515104; }
		_case_begin_4884515104:;
		{
			if (_5416_ref.operator jule::Ptr<_2185d51ad_FnIns>()->_field_decl->_method_is_init()) {
				goto _match_end_4884506560;
			}
			goto _case_begin_4884512912;
		}
		goto _match_end_4884506560;
		_case_end_4884515104:;
		_case_begin_4884512912:;
		{
			if (_231e62d30_is_exist_ref(jule::Slice<jule::Any>({_231e62d30_current,_231e62d30_main_current}),_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
			if (_231e62d30_is_exist_ref(_231e62d30_checking,_5416_ref)) {
				_5428_dead = true;
				return _5428_dead;
			}
		}
		goto _match_end_4884506560;
		_case_end_4884512912:;
		_match_end_4884506560:;
	}
	jule::Any _7513_old = _231e62d30_current;
	_231e62d30_current=_5416_ref;
	jule::I64 _779_len = _231e62d30_checking.len();
	_231e62d30_checking=jule::append(_231e62d30_checking,jule::Slice<jule::Any>({_5416_ref}));
	__JULE_DEFER({
		_231e62d30_current=_7513_old;
		_231e62d30_drop_ref(_231e62d30_checking,_779_len);
	});
	{
		auto _match_expr{ _5416_ref };
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884521312; }
		_case_begin_4884521312:;
		{
			_5428_dead = _231e62d30_is_fn_dead(_5416_ref.operator jule::Ptr<_2185d51ad_FnIns>());
			return _5428_dead;
		}
		goto _match_end_4884519952;
		_case_end_4884521312:;
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884521408; }
		_case_begin_4884521408:;
		{
			_5428_dead = _231e62d30_is_var_dead(_5416_ref.operator jule::Ptr<_200c58948_Var>());
			return _5428_dead;
		}
		goto _match_end_4884519952;
		_case_end_4884521408:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884521504; }
		_case_begin_4884521504:;
		{
			_5428_dead = _231e62d30_is_struct_dead(_5416_ref.operator jule::Ptr<_23461aa35_StructIns>());
			return _5428_dead;
		}
		goto _match_end_4884519952;
		_case_end_4884521504:;
		if (!(_match_expr.type_is<jule::Ptr<_2185da36c_Trait>>())) { goto _case_end_4884521600; }
		_case_begin_4884521600:;
		{
			_5428_dead = _231e62d30_is_trait_dead(_5416_ref.operator jule::Ptr<_2185da36c_Trait>());
			return _5428_dead;
		}
		goto _match_end_4884519952;
		_case_end_4884521600:;
		_case_begin_4884519760:;
		{
			_5428_dead = false;
			return _5428_dead;
		}
		goto _match_end_4884519952;
		_case_end_4884519760:;
		_match_end_4884519952:;
	}
}



void _231e62d30_drop_ref(jule::Slice<jule::Any>& _10618_refs,jule::Int _10631_pos) {
	_10618_refs=_10618_refs.slice(0LL,_10631_pos);
}



jule::Bool _231e62d30_is_all_references_are_dead_0(jule::Ptr<_21862cb1d_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _231e62d30_current };
				if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884540048; }
				_case_begin_4884540048:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884541328; }
						_case_begin_4884541328:;
						{
							if (_231e62d30_current.operator jule::Ptr<_2185d51ad_FnIns>() == _11717_ref.operator jule::Ptr<_2185d51ad_FnIns>()) {
								goto _iter_next_4884538976;
							}
						}
						goto _match_end_4884542784;
						_case_end_4884541328:;
						_match_end_4884542784:;
					}
				}
				goto _match_end_4884541200;
				_case_end_4884540048:;
				_match_end_4884541200:;
			}
			{
				auto _match_expr{ _231e62d30_main_current };
				if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884545680; }
				_case_begin_4884545680:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4884543360; }
						_case_begin_4884543360:;
						{
							if (_231e62d30_main_current.operator jule::Ptr<_2185d51ad_FnIns>() == _11717_ref.operator jule::Ptr<_2185d51ad_FnIns>()) {
								goto _iter_next_4884538976;
							}
						}
						goto _match_end_4884546048;
						_case_end_4884543360:;
						_match_end_4884546048:;
					}
				}
				goto _match_end_4884542080;
				_case_end_4884545680:;
				_match_end_4884542080:;
			}
			if ((!(_231e62d30_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4884538976:;
	}
	_iter_end_4884538976:;
	return true;
}

jule::Bool _231e62d30_is_all_references_are_dead_1(jule::Ptr<_21862cb1d_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _231e62d30_current };
				if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884555040; }
				_case_begin_4884555040:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884556288; }
						_case_begin_4884556288:;
						{
							if (_231e62d30_current.operator jule::Ptr<_200c58948_Var>() == _11717_ref.operator jule::Ptr<_200c58948_Var>()) {
								goto _iter_next_4884553968;
							}
						}
						goto _match_end_4884557728;
						_case_end_4884556288:;
						_match_end_4884557728:;
					}
				}
				goto _match_end_4884556160;
				_case_end_4884555040:;
				_match_end_4884556160:;
			}
			{
				auto _match_expr{ _231e62d30_main_current };
				if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884560640; }
				_case_begin_4884560640:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4884556816; }
						_case_begin_4884556816:;
						{
							if (_231e62d30_main_current.operator jule::Ptr<_200c58948_Var>() == _11717_ref.operator jule::Ptr<_200c58948_Var>()) {
								goto _iter_next_4884553968;
							}
						}
						goto _match_end_4884561088;
						_case_end_4884556816:;
						_match_end_4884561088:;
					}
				}
				goto _match_end_4884556720;
				_case_end_4884560640:;
				_match_end_4884556720:;
			}
			if ((!(_231e62d30_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4884553968:;
	}
	_iter_end_4884553968:;
	return true;
}

jule::Bool _231e62d30_is_all_references_are_dead_2(jule::Ptr<_21862cb1d_ReferenceStack> _11438_references) {
	jule::Int _11513_i = 0LL;
	for (; _11513_i < _11438_references->_method_len(); (_11513_i)++) {
		{
			jule::Any _11717_ref = _11438_references->_method_at(_11513_i);
			{
				auto _match_expr{ _231e62d30_current };
				if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884584960; }
				_case_begin_4884584960:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884586336; }
						_case_begin_4884586336:;
						{
							if (_231e62d30_current.operator jule::Ptr<_23461aa35_StructIns>() == _11717_ref.operator jule::Ptr<_23461aa35_StructIns>()) {
								goto _iter_next_4884583888;
							}
						}
						goto _match_end_4884587648;
						_case_end_4884586336:;
						_match_end_4884587648:;
					}
				}
				goto _match_end_4884586208;
				_case_end_4884584960:;
				_match_end_4884586208:;
			}
			{
				auto _match_expr{ _231e62d30_main_current };
				if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884590560; }
				_case_begin_4884590560:;
				{
					{
						auto _match_expr{ _11717_ref };
						if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4884588368; }
						_case_begin_4884588368:;
						{
							if (_231e62d30_main_current.operator jule::Ptr<_23461aa35_StructIns>() == _11717_ref.operator jule::Ptr<_23461aa35_StructIns>()) {
								goto _iter_next_4884583888;
							}
						}
						goto _match_end_4884590928;
						_case_end_4884588368:;
						_match_end_4884590928:;
					}
				}
				goto _match_end_4884586832;
				_case_end_4884590560:;
				_match_end_4884586832:;
			}
			if ((!(_231e62d30_is_dead(_11717_ref)))) {
				return false;
			}
		}
	_iter_next_4884583888:;
	}
	_iter_end_4884583888:;
	return true;
}



jule::Bool _231e62d30_is_fn_dead(jule::Ptr<_2185d51ad_FnIns> _14319_f) {
	if (_14319_f->_field_decl->_field_cpp_linked) {
		return false;
	}
	if (_14319_f->_field_decl->_method_is_entry_point() || _14319_f->_field_decl->_method_is_init()) {
		return (!(_14319_f->_field_decl->_field_statically));
	}
	if (_14319_f->_field_owner != nullptr) {
		if (_231e62d30_is_exist_ref(_231e62d30_checking,jule::Any(_14319_f->_field_owner))) {
			return true;
		}
		return _231e62d30_is_dead(jule::Any(_14319_f->_field_owner));
	}
	return _231e62d30_is_all_references_are_dead_0(_14319_f->_field_references);
}



jule::Bool _231e62d30_is_var_dead(jule::Ptr<_200c58948_Var> _16920_v) {
	if (_16920_v->_field_constant) {
		return true;
	}
	if (_16920_v->_field_cpp_linked) {
		return false;
	}
	return _231e62d30_is_all_references_are_dead_1(_16920_v->_field_references);
}



jule::Bool _231e62d30_kind_is_dead(jule::Ptr<_200d010d9_TypeKind> _18121_k) {
	{
		if (!((_18121_k->_method_sptr() != nullptr))) { goto _case_end_4884561904; }
		_case_begin_4884561904:;
		{
			return _231e62d30_kind_is_dead(_18121_k->_method_sptr()->_field_elem);
		}
		goto _match_end_4884564336;
		_case_end_4884561904:;
		if (!((_18121_k->_method_ptr() != nullptr))) { goto _case_end_4884550832; }
		_case_begin_4884550832:;
		{
			return _231e62d30_kind_is_dead(_18121_k->_method_ptr()->_field_elem);
		}
		goto _match_end_4884564336;
		_case_end_4884550832:;
		if (!((_18121_k->_method_slc() != nullptr))) { goto _case_end_4884550928; }
		_case_begin_4884550928:;
		{
			return _231e62d30_kind_is_dead(_18121_k->_method_slc()->_field_elem);
		}
		goto _match_end_4884564336;
		_case_end_4884550928:;
		if (!((_18121_k->_method_arr() != nullptr))) { goto _case_end_4884549760; }
		_case_begin_4884549760:;
		{
			return _231e62d30_kind_is_dead(_18121_k->_method_arr()->_field_elem);
		}
		goto _match_end_4884564336;
		_case_end_4884549760:;
		if (!((_18121_k->_method_trt() != nullptr))) { goto _case_end_4884549856; }
		_case_begin_4884549856:;
		{
			jule::Ptr<_2185da36c_Trait> _19617_t = _18121_k->_method_trt();
			if (_231e62d30_is_dead(jule::Any(_19617_t))) {
				return true;
			}
		}
		goto _match_end_4884564336;
		_case_end_4884549856:;
		if (!((_18121_k->_method_strct() != nullptr))) { goto _case_end_4884551760; }
		_case_begin_4884551760:;
		{
			jule::Ptr<_23461aa35_StructIns> _20217_s = _18121_k->_method_strct();
			if (_231e62d30_is_dead(jule::Any(_20217_s))) {
				return true;
			}
		}
		goto _match_end_4884564336;
		_case_end_4884551760:;
		_match_end_4884564336:;
	}
	return false;
}



jule::Bool _231e62d30_is_any_generic_is_dead(jule::Slice<jule::Ptr<_200d010d9_TypeKind>>& _21032_generics) {
	{
		auto expr = _21032_generics;
		auto it = expr.begin();
		_iter_begin_4884575872:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeKind> _231e62d30_g = *it;
			{
				if (_231e62d30_kind_is_dead(_231e62d30_g)) {
					return true;
				}
			}
			_iter_next_4884575872:;
			++it;
			goto _iter_begin_4884575872;
		}
		_iter_end_4884575872:;
	}
	return false;
}



jule::Bool _231e62d30_is_struct_dead(jule::Ptr<_23461aa35_StructIns> _21923_s) {
	return false;
	if (_21923_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return _231e62d30_is_all_references_are_dead_2(_21923_s->_field_references);
}



jule::Bool _231e62d30_is_trait_dead(jule::Ptr<_2185da36c_Trait> _23622_t) {
	return false;
	{
		auto expr = _23622_t->_field_implemented;
		auto it = expr.begin();
		_iter_begin_4884580688:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _231e62d30_imp = *it;
			{
				jule::Int _24117_i = 0LL;
				for (; _24117_i < _231e62d30_imp->_field_instances.len(); (_24117_i)++) {
					{
						jule::Ptr<_23461aa35_StructIns> _24321_ins = _231e62d30_imp->_field_instances[_24117_i];
						if ((!(_231e62d30_is_struct_dead(_24321_ins)))) {
							return false;
						}
					}
				_iter_next_4884595120:;
				}
				_iter_end_4884595120:;
			}
			_iter_next_4884580688:;
			++it;
			goto _iter_begin_4884580688;
		}
		_iter_end_4884580688:;
	}
	return true;
}



void _231e62d30_eliminate_dead_functions(jule::Slice<jule::Ptr<_2185d51ad_Fn>>& _25434_funcs) {
	jule::Int _25513_i = 0LL;
	while (_25513_i < _25434_funcs.len()) {
		{
			jule::Ptr<_2185d51ad_Fn> _25717_f = _25434_funcs[_25513_i];
			jule::Int _25817_j = 0LL;
			while (_25817_j < _25717_f->_field_instances.len()) {
				{
					jule::Ptr<_2185d51ad_FnIns> _26021_ins = _25717_f->_field_instances[_25817_j];
					_231e62d30_main_current=jule::Any(_26021_ins);
					if (_231e62d30_is_fn_dead(_26021_ins)) {
						_231e62d30_deads=jule::append(_231e62d30_deads,jule::Slice<jule::Any>({jule::Any(_26021_ins)}));
						_25717_f->_field_instances=jule::append(_25717_f->_field_instances.slice(0LL,_25817_j),_25717_f->_field_instances.slice(_25817_j + 1LL));
						goto _iter_next_4884601840;
					}
					_232e769d0_eliminate_dead_code_of_scope(_26021_ins->_field_scope);
					(_25817_j)++;
				}
			_iter_next_4884601840:;
			}
			_iter_end_4884601840:;
			if (_25717_f->_field_instances.len() == 0LL) {
				_25434_funcs=jule::append(_25434_funcs.slice(0LL,_25513_i),_25434_funcs.slice(_25513_i + 1LL));
				goto _iter_next_4884598624;
			}
			(_25513_i)++;
		}
	_iter_next_4884598624:;
	}
	_iter_end_4884598624:;
}



void _231e62d30_eliminate_dead_globals(jule::Ptr<_218848bd5_Package>& _28032_pkg) {
	{
		auto expr = _28032_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4884612128:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _231e62d30_f = *it;
			{
				jule::Int _28217_i = 0LL;
				while (_28217_i < _231e62d30_f->_field_vars.len()) {
					{
						jule::Ptr<_200c58948_Var> _28421_v = _231e62d30_f->_field_vars[_28217_i];
						_231e62d30_main_current=jule::Any(_28421_v);
						if (_231e62d30_is_var_dead(_28421_v)) {
							_231e62d30_deads=jule::append(_231e62d30_deads,jule::Slice<jule::Any>({jule::Any(_28421_v)}));
							_231e62d30_f->_field_vars=jule::append(_231e62d30_f->_field_vars.slice(0LL,_28217_i),_231e62d30_f->_field_vars.slice(_28217_i + 1LL));
						} else {
							(_28217_i)++;
						}
					}
				_iter_next_4884613120:;
				}
				_iter_end_4884613120:;
			}
			_iter_next_4884612128:;
			++it;
			goto _iter_begin_4884612128;
		}
		_iter_end_4884612128:;
	}
}



void _231e62d30_eliminate_dead_functions_package(jule::Ptr<_218848bd5_Package>& _29642_pkg) {
	{
		auto expr = _29642_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4884619504:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _231e62d30_f = *it;
			{
				_231e62d30_eliminate_dead_functions(_231e62d30_f->_field_funcs);
			}
			_iter_next_4884619504:;
			++it;
			goto _iter_begin_4884619504;
		}
		_iter_end_4884619504:;
	}
}



void _231e62d30_eliminate_dead_structs(jule::Ptr<_218848bd5_Package>& _30232_pkg) {
	{
		auto expr = _30232_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4884618144:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _231e62d30_f = *it;
			{
				jule::Int _30417_i = 0LL;
				while (_30417_i < _231e62d30_f->_field_structs.len()) {
					{
						jule::Ptr<_23461aa35_Struct> _30621_s = _231e62d30_f->_field_structs[_30417_i];
						jule::Int _30721_j = 0LL;
						while (_30721_j < _30621_s->_field_instances.len()) {
							{
								jule::Ptr<_23461aa35_StructIns> _30925_ins = _30621_s->_field_instances[_30721_j];
								_231e62d30_main_current=jule::Any(_30925_ins);
								if (_231e62d30_is_struct_dead(_30925_ins)) {
									_231e62d30_deads=jule::append(_231e62d30_deads,jule::Slice<jule::Any>({jule::Any(_30925_ins)}));
									_30621_s->_field_instances=jule::append(_30621_s->_field_instances.slice(0LL,_30721_j),_30621_s->_field_instances.slice(_30721_j + 1LL));
									goto _iter_next_4884626464;
								}
								(_30721_j)++;
							}
						_iter_next_4884626464:;
						}
						_iter_end_4884626464:;
						if (_30621_s->_field_instances.len() == 0LL) {
							_231e62d30_f->_field_structs=jule::append(_231e62d30_f->_field_structs.slice(0LL,_30417_i),_231e62d30_f->_field_structs.slice(_30417_i + 1LL));
							goto _iter_next_4884623760;
						}
						(_30417_i)++;
					}
				_iter_next_4884623760:;
				}
				_iter_end_4884623760:;
			}
			_iter_next_4884618144:;
			++it;
			goto _iter_begin_4884618144;
		}
		_iter_end_4884618144:;
	}
}



void _231e62d30_eliminate_dead_traits(jule::Ptr<_218848bd5_Package>& _32831_pkg) {
	{
		auto expr = _32831_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4884622448:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _231e62d30_f = *it;
			{
				jule::Int _33017_i = 0LL;
				while (_33017_i < _231e62d30_f->_field_traits.len()) {
					{
						jule::Ptr<_2185da36c_Trait> _33221_t = _231e62d30_f->_field_traits[_33017_i];
						_231e62d30_main_current=jule::Any(_33221_t);
						if (_231e62d30_is_trait_dead(_33221_t)) {
							_231e62d30_deads=jule::append(_231e62d30_deads,jule::Slice<jule::Any>({jule::Any(_33221_t)}));
							_231e62d30_f->_field_traits=jule::append(_231e62d30_f->_field_traits.slice(0LL,_33017_i),_231e62d30_f->_field_traits.slice(_33017_i + 1LL));
						} else {
							(_33017_i)++;
						}
					}
				_iter_next_4884631408:;
				}
				_iter_end_4884631408:;
			}
			_iter_next_4884622448:;
			++it;
			goto _iter_begin_4884622448;
		}
		_iter_end_4884622448:;
	}
}



void _231e62d30_catch_alive_init(jule::Ptr<_218848bd5_Package>& _34426_pkg) {
	
	
	jule::Ptr<_2185d51ad_Fn> _34713_f = _34426_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_34713_f == nullptr) {
		return;
	}
	jule::I64 _3529_n = _231e62d30_deads.len();
	__JULE_DEFER({
		_231e62d30_deads=_231e62d30_deads.slice(0LL,_3529_n);
		_231e62d30_checking=nullptr;
		_231e62d30_current=jule::Any(nullptr);
	});
	jule::Ptr<_2185d51ad_FnIns> _36013_ins = _34713_f->_field_instances[0LL];
	jule::Int _36113_i = 0LL;
	for (; _36113_i < _36013_ins->_field_refers->_method_len(); (_36113_i)++) {
		{
			if ((!(_231e62d30_is_dead(_36013_ins->_field_refers->_method_at(_36113_i))))) {
				_34713_f->_field_statically=true;
				return;
			}
		}
	_iter_next_4884640784:;
	}
	_iter_end_4884640784:;
}



void _231e62d30_eliminate_package(jule::Ptr<_218848bd5_Package>& _37027_pkg) {
	_231e62d30_deads=jule::Slice<jule::Any>::alloc(0LL,2000LL);
	_231e62d30_catch_alive_init(_37027_pkg);
	_231e62d30_eliminate_dead_globals(_37027_pkg);
	_231e62d30_eliminate_dead_functions_package(_37027_pkg);
}



void _231e62d30_eliminate(jule::Ptr<_23301cea5_IR>& _38123_ir) {
	jule::I64 _38213_i = _38123_ir->_field_used.len() - 1LL;
	for (; _38213_i >= 0LL; (_38213_i)--) {
		{
			jule::Ptr<_218848bd5_ImportInfo> _38417_u = _38123_ir->_field_used[_38213_i];
			if ((!(_38417_u->_field_cpp_linked))) {
				_231e62d30_eliminate_package(_38417_u->_field_package);
			}
		}
	_iter_next_4884658032:;
	}
	_iter_end_4884658032:;
	_231e62d30_eliminate_package(_38123_ir->_field_main);
	_231e62d30_deads=nullptr;
	_231e62d30_checking=nullptr;
	_231e62d30_current=jule::Any(nullptr);
}



void _232e769d0_eliminate_dead_code_of_scope(jule::Ptr<_2186ce186_Scope> _7337_s) {
	jule::Ptr<_232e769d0_ScopeDeadCode> _7413_sdc = jule::new_struct_ptr<_232e769d0_ScopeDeadCode>(new( std::nothrow ) _232e769d0_ScopeDeadCode(jule::Ptr<_232e769d0_ScopeDeadCode>(),_7337_s,(&(_7337_s->_field_stmts)),jule::Int()));
	{
		_7413_sdc->_method_optimize_stmts();
	}
}



jule::U64 _1d6d86650_unix(void) {
	return static_cast<jule::U64>(time(nullptr));
}



jule::U64 _1d6d86650_unix_year_to_seconds(jule::Uint _25725_y,jule::Bool& _25743_leap) {
	if ((_25725_y - 2LL) <= 136LL) {
		jule::Uint _25917_leaps = (_25725_y - 68LL) >> 2LL;
		_25743_leap=((_25725_y - 68LL) & 3LL) == 0LL;
		if (_25743_leap) {
			(_25917_leaps)--;
		}
		return static_cast<jule::Uint>((31536000LL * (_25725_y - 70LL)) + (86400LL * _25917_leaps));
	}
	jule::Uint _26713_leaps = 0LLU;
	jule::Uint _26813_centuries = 0LLU;
	jule::Uint _26913_cycles = jule::div(_25725_y - 100LL,400LL);
	jule::Uint _27013_rem = jule::mod(_25725_y - 100LL,400LL);
	if (_27013_rem < 0LL) {
		(_26913_cycles)--;
		_27013_rem+=400LL;
	}
	if (_27013_rem == 0LL) {
		_25743_leap=true;
		_26813_centuries=0LL;
		_26713_leaps=0LL;
	} else {
		if (_27013_rem >= 200LL) {
			if (_27013_rem >= 300LL) {
				_26813_centuries=3LL;
				_27013_rem-=300LL;
			} else {
				_26813_centuries=2LL;
				_27013_rem-=200LL;
			}
		} else {
			if (_27013_rem >= 100LL) {
				_26813_centuries=1LL;
				_27013_rem-=100LL;
			} else {
				_26813_centuries=0LL;
			}
		}
		if (_27013_rem == 0LL) {
			_25743_leap=false;
			_26713_leaps=0LL;
		} else {
			_26713_leaps=static_cast<jule::Uint>(jule::div(_27013_rem,4LL));
			_27013_rem = jule::mod(_27013_rem,4LL);
			_25743_leap=_27013_rem == 0LL;
		}
	}
	_26713_leaps+=static_cast<jule::Uint>((97LL * _26913_cycles) + (24LL * _26813_centuries));
	if (_25743_leap) {
		(_26713_leaps)++;
	}
	return static_cast<jule::Uint>(((((_25725_y - 100LL) * 31536000LL) + (_26713_leaps * 86400LL)) + 946684800LL) + 86400LL);
}



jule::U64 _1d6d86650_unix_month_to_seconds(jule::Uint _31426_m,jule::Bool _31439_leap) {
	jule::U64 _31613_t = 0LLU;
	{
		auto _match_expr{ _31426_m };
		if (!((1LL) == _match_expr)) { goto _case_end_4884740176; }
		_case_begin_4884740176:;
		{
			_31613_t=2678400LL;
		}
		goto _match_end_4884740864;
		_case_end_4884740176:;
		if (!((2LL) == _match_expr)) { goto _case_end_4884740944; }
		_case_begin_4884740944:;
		{
			_31613_t=5097600LL;
		}
		goto _match_end_4884740864;
		_case_end_4884740944:;
		if (!((3LL) == _match_expr)) { goto _case_end_4884741376; }
		_case_begin_4884741376:;
		{
			_31613_t=7776000LL;
		}
		goto _match_end_4884740864;
		_case_end_4884741376:;
		if (!((4LL) == _match_expr)) { goto _case_end_4884741472; }
		_case_begin_4884741472:;
		{
			_31613_t=10368000LL;
		}
		goto _match_end_4884740864;
		_case_end_4884741472:;
		if (!((5LL) == _match_expr)) { goto _case_end_4884741568; }
		_case_begin_4884741568:;
		{
			_31613_t=13046400LL;
		}
		goto _match_end_4884740864;
		_case_end_4884741568:;
		if (!((6LL) == _match_expr)) { goto _case_end_4884741664; }
		_case_begin_4884741664:;
		{
			_31613_t=15638400LL;
		}
		goto _match_end_4884740864;
		_case_end_4884741664:;
		if (!((7LL) == _match_expr)) { goto _case_end_4884741776; }
		_case_begin_4884741776:;
		{
			_31613_t=18316800LL;
		}
		goto _match_end_4884740864;
		_case_end_4884741776:;
		if (!((8LL) == _match_expr)) { goto _case_end_4884741888; }
		_case_begin_4884741888:;
		{
			_31613_t=20995200LL;
		}
		goto _match_end_4884740864;
		_case_end_4884741888:;
		if (!((9LL) == _match_expr)) { goto _case_end_4884742000; }
		_case_begin_4884742000:;
		{
			_31613_t=23587200LL;
		}
		goto _match_end_4884740864;
		_case_end_4884742000:;
		if (!((10LL) == _match_expr)) { goto _case_end_4884742112; }
		_case_begin_4884742112:;
		{
			_31613_t=26265600LL;
		}
		goto _match_end_4884740864;
		_case_end_4884742112:;
		if (!((11LL) == _match_expr)) { goto _case_end_4884742224; }
		_case_begin_4884742224:;
		{
			_31613_t=28857600LL;
		}
		goto _match_end_4884740864;
		_case_end_4884742224:;
		_match_end_4884740864:;
	}
	if (_31439_leap && (_31426_m >= 2LL)) {
		_31613_t+=86400LL;
	}
	return _31613_t;
}



jule::Bool _200ad0429_iter_expr_is_copy_optimizable(jule::Ptr<_218751758_Data>& _3935_expr,jule::Ptr<_200c58948_Var>& _3949_v) {
	return (((!(_3935_expr->_field_lvalue)) || (!(_3935_expr->_field_mutable))) && (!(_3949_v->_field_mutable))) || _3949_v->_field_kind->_field_kind->_method_mutable();
}



jule::Str _200ad0429_gen_range_index_iter(jule::Ptr<_2186ce186_RangeIter>& _4330_it) {
	jule::Str _449_begin = _1d6c1d84a_iter_begin_label_ident(static_cast<jule::Uintptr>(_4330_it));
	jule::Str _459_next = _1d6c1d84a_iter_next_label_ident(static_cast<jule::Uintptr>(_4330_it));
	jule::Str _4713_obj = jule::Str("{\n", 2);
	_1d6c4a2c2_add_indent();
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=jule::Str("auto ", 5);
	if (((*(_231e64150_OPT_COPY)) && _4330_it->_field_expr->_field_lvalue) && (!(_4330_it->_field_expr->_field_mutable))) {
		_4713_obj+=jule::Str("&", 1);
	}
	_4713_obj+=jule::Str("expr = ", 7);
	_4713_obj+=_200c454b2_gen_expr_model(_4330_it->_field_expr->_field_model);
	_4713_obj+=jule::Str(";\n", 2);
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=_449_begin;
	_4713_obj+=jule::Str(":;\n", 3);
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1d6c4a2c2_add_indent();
	_4713_obj+=_1d6c4a2c2_indent();
	if (_4330_it->_field_key_a != nullptr) {
		_4713_obj+=_1d6c4a2c2_gen_var_init_expr(_4330_it->_field_key_a,jule::Str("it - expr.begin()", 17));
		_4713_obj+=jule::Str("\n", 1);
		_4713_obj+=_1d6c4a2c2_indent();
	}
	if (_4330_it->_field_key_b != nullptr) {
		if ((*(_231e64150_OPT_COPY))) {
			_4330_it->_field_key_b->_field_reference=_200ad0429_iter_expr_is_copy_optimizable(_4330_it->_field_expr,_4330_it->_field_key_b);
		}
		_4713_obj+=_1d6c4a2c2_gen_var_init_expr(_4330_it->_field_key_b,jule::Str("*it", 3));
		_4713_obj+=jule::Str("\n", 1);
		_4713_obj+=_1d6c4a2c2_indent();
	}
	_4713_obj+=_200ad0429_gen_scope(_4330_it->_field_scope);
	_4713_obj+=jule::Str("\n", 1);
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=_459_next;
	_4713_obj+=jule::Str(":;\n", 3);
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=jule::Str("++it;\n", 6);
	_4713_obj+=_1d6c4a2c2_indent();
	if (_4330_it->_field_key_a != nullptr) {
		_4713_obj+=_1d6c1d84a_var_out_ident(_4330_it->_field_key_a);
		_4713_obj+=jule::Str("++;\n", 4);
		_4713_obj+=_1d6c4a2c2_indent();
	}
	_4713_obj+=jule::Str("goto ", 5);
	_4713_obj+=_449_begin;
	_4713_obj+=jule::Str(";\n", 2);
	_1d6c4a2c2_done_indent();
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=jule::Str("}\n", 2);
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=_1d6c1d84a_iter_end_label_ident(static_cast<jule::Uintptr>(_4330_it));
	_4713_obj+=jule::Str(":;\n", 3);
	_1d6c4a2c2_done_indent();
	_4713_obj+=_1d6c4a2c2_indent();
	_4713_obj+=jule::Str("}", 1);
	return _4713_obj;
}



jule::Str _200ad0429_gen_range_hashmap_iter(jule::Ptr<_2186ce186_RangeIter>& _11332_it) {
	jule::Str _1149_begin = _1d6c1d84a_iter_begin_label_ident(static_cast<jule::Uintptr>(_11332_it));
	jule::Str _1159_next = _1d6c1d84a_iter_next_label_ident(static_cast<jule::Uintptr>(_11332_it));
	jule::Str _11713_obj = jule::Str("{\n", 2);
	_1d6c4a2c2_add_indent();
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("auto ", 5);
	if (((*(_231e64150_OPT_COPY)) && _11332_it->_field_expr->_field_lvalue) && (!(_11332_it->_field_expr->_field_mutable))) {
		_11713_obj+=jule::Str("&", 1);
	}
	_11713_obj+=jule::Str("expr = ", 7);
	_11713_obj+=_200c454b2_gen_expr_model(_11332_it->_field_expr->_field_model);
	_11713_obj+=jule::Str(";\n", 2);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("auto it = expr.begin();\n", 24);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=_1149_begin;
	_11713_obj+=jule::Str(":;\n", 3);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("if (it != expr.end()) {\n", 24);
	_1d6c4a2c2_add_indent();
	_11713_obj+=_1d6c4a2c2_indent();
	if (_11332_it->_field_key_a != nullptr) {
		if ((*(_231e64150_OPT_COPY))) {
			_11332_it->_field_key_a->_field_reference=_200ad0429_iter_expr_is_copy_optimizable(_11332_it->_field_expr,_11332_it->_field_key_a);
		}
		_11713_obj+=_1d6c4a2c2_gen_var_init_expr(_11332_it->_field_key_a,jule::Str("it->first", 9));
		_11713_obj+=jule::Str("\n", 1);
		_11713_obj+=_1d6c4a2c2_indent();
	}
	if (_11332_it->_field_key_b != nullptr) {
		if ((*(_231e64150_OPT_COPY))) {
			_11332_it->_field_key_b->_field_reference=_200ad0429_iter_expr_is_copy_optimizable(_11332_it->_field_expr,_11332_it->_field_key_b);
		}
		_11713_obj+=_1d6c4a2c2_gen_var_init_expr(_11332_it->_field_key_b,jule::Str("it->second", 10));
		_11713_obj+=jule::Str("\n", 1);
		_11713_obj+=_1d6c4a2c2_indent();
	}
	_11713_obj+=_200ad0429_gen_scope(_11332_it->_field_scope);
	_11713_obj+=jule::Str("\n", 1);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=_1159_next;
	_11713_obj+=jule::Str(":;\n", 3);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("++it;\n", 6);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("goto ", 5);
	_11713_obj+=_1149_begin;
	_11713_obj+=jule::Str(";\n", 2);
	_1d6c4a2c2_done_indent();
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("}\n", 2);
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=_1d6c1d84a_iter_end_label_ident(static_cast<jule::Uintptr>(_11332_it));
	_11713_obj+=jule::Str(":;\n", 3);
	_1d6c4a2c2_done_indent();
	_11713_obj+=_1d6c4a2c2_indent();
	_11713_obj+=jule::Str("}", 1);
	return _11713_obj;
}



jule::Str _200ad0429_gen_if(jule::Ptr<_2186ce186_If> _18115_i) {
	jule::Str _18213_obj = jule::Str("if (", 4);
	_18213_obj+=_200c454b2_gen_expr(_18115_i->_field_expr);
	_18213_obj+=jule::Str(") ", 2);
	_18213_obj+=_200ad0429_gen_scope(_18115_i->_field_scope);
	return _18213_obj;
}



jule::Str _200ad0429_gen_conditional(jule::Ptr<_2186ce186_Conditional> _18924_c) {
	jule::Str _19013_obj = _200ad0429_gen_if(_18924_c->_field_elifs[0LL]);
	{
		auto expr = _18924_c->_field_elifs.slice(1LL);
		auto it = expr.begin();
		_iter_begin_4885155152:;
		if (it != expr.end()) {
			jule::Ptr<_2186ce186_If> _200ad0429_elif = *it;
			{
				_19013_obj+=jule::Str(" else ", 6);
				_19013_obj+=_200ad0429_gen_if(_200ad0429_elif);
			}
			_iter_next_4885155152:;
			++it;
			goto _iter_begin_4885155152;
		}
		_iter_end_4885155152:;
	}
	if (_18924_c->_field_default != nullptr) {
		_19013_obj+=jule::Str(" else ", 6);
		_19013_obj+=_200ad0429_gen_scope(_18924_c->_field_default->_field_scope);
	}
	return _19013_obj;
}



jule::Str _200ad0429_gen_inf_iter(jule::Ptr<_2186ce186_InfIter> _20521_it) {
	jule::Str _20613_obj = jule::Str("for (;;) {\n", 11);
	_1d6c4a2c2_add_indent();
	_20613_obj+=_1d6c4a2c2_indent();
	_20613_obj+=_200ad0429_gen_scope(_20521_it->_field_scope);
	_1d6c4a2c2_done_indent();
	jule::Str _2139_indent = _1d6c4a2c2_indent();
	_20613_obj+=jule::Str("\n", 1);
	_20613_obj+=_2139_indent;
	_20613_obj+=_1d6c1d84a_iter_next_label_ident(static_cast<jule::Uintptr>(_20521_it));
	_20613_obj+=jule::Str(":;\n", 3);
	_20613_obj+=_2139_indent;
	_20613_obj+=jule::Str("}\n", 2);
	_20613_obj+=_2139_indent;
	_20613_obj+=_1d6c1d84a_iter_end_label_ident(static_cast<jule::Uintptr>(_20521_it));
	_20613_obj+=jule::Str(":;", 2);
	return _20613_obj;
}



jule::Str _200ad0429_gen_while_iter(jule::Ptr<_2186ce186_WhileIter> _22823_it) {
	jule::Str _22913_obj = jule::Str();
	if ((_22823_it->_field_expr != nullptr) && (_22823_it->_field_next == nullptr)) {
		_22913_obj+=jule::Str("while (", 7);
		_22913_obj+=_200c454b2_gen_expr(_22823_it->_field_expr);
		_22913_obj+=jule::Str(") {\n", 4);
	} else {
		_22913_obj+=jule::Str("for (; ", 7);
		if (_22823_it->_field_expr != nullptr) {
			_22913_obj+=_200c454b2_gen_expr(_22823_it->_field_expr);
		}
		_22913_obj+=jule::Str("; ", 2);
		if (_22823_it->_field_next != nullptr) {
			jule::Str _24117_st = _200ad0429_gen_st(_22823_it->_field_next);
			_22913_obj+=_24117_st.slice(0LL,_24117_st.len() - 1LL);
		}
		_22913_obj+=jule::Str(") {\n", 4);
	}
	_1d6c4a2c2_add_indent();
	_22913_obj+=_1d6c4a2c2_indent();
	_22913_obj+=_200ad0429_gen_scope(_22823_it->_field_scope);
	_22913_obj+=jule::Str("\n", 1);
	_1d6c4a2c2_done_indent();
	_22913_obj+=_1d6c4a2c2_indent();
	_22913_obj+=_1d6c1d84a_iter_next_label_ident(static_cast<jule::Uintptr>(_22823_it));
	_22913_obj+=jule::Str(":;\n", 3);
	_22913_obj+=_1d6c4a2c2_indent();
	_22913_obj+=jule::Str("}\n", 2);
	_22913_obj+=_1d6c4a2c2_indent();
	_22913_obj+=_1d6c1d84a_iter_end_label_ident(static_cast<jule::Uintptr>(_22823_it));
	_22913_obj+=jule::Str(":;", 2);
	return _22913_obj;
}



jule::Str _200ad0429_gen_range_iter(jule::Ptr<_2186ce186_RangeIter> _26423_it) {
	{
		if (!((_26423_it->_field_expr->_field_kind->_method_slc() != nullptr))) { goto _case_end_4885181184; }
		_case_begin_4885181184:;
		{
			return _200ad0429_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4885176048;
		_case_end_4885181184:;
		if (!((_26423_it->_field_expr->_field_kind->_method_arr() != nullptr))) { goto _case_end_4885180816; }
		_case_begin_4885180816:;
		{
			return _200ad0429_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4885176048;
		_case_end_4885180816:;
		if (!((_26423_it->_field_expr->_field_kind->_method_map() != nullptr))) { goto _case_end_4885180912; }
		_case_begin_4885180912:;
		{
			return _200ad0429_gen_range_hashmap_iter(_26423_it);
		}
		goto _match_end_4885176048;
		_case_end_4885180912:;
		_case_begin_4885176176:;
		{
			return _200ad0429_gen_range_index_iter(_26423_it);
		}
		goto _match_end_4885176048;
		_case_end_4885176176:;
		_match_end_4885176048:;
	}
}



jule::Str _200ad0429_gen_cont(jule::Ptr<_2186ce186_ContSt> _27313_c) {
	jule::Str _27413_obj = jule::Str("goto ", 5);
	_27413_obj+=_1d6c1d84a_iter_next_label_ident(_27313_c->_field_it);
	_27413_obj+=jule::Str(";", 1);
	return _27413_obj;
}



jule::Str _200ad0429_gen_label(jule::Ptr<_2186ce186_Label> _28014_l) {
	return _1d6c1d84a_label_ident(_28014_l->_field_ident) + jule::Str(":;", 2);
}



jule::Str _200ad0429_gen_goto(jule::Ptr<_2186ce186_GotoSt> _28413_gt) {
	jule::Str _28513_obj = jule::Str("goto ", 5);
	_28513_obj+=_1d6c1d84a_label_ident(_28413_gt->_field_ident);
	_28513_obj+=jule::Str(";", 1);
	return _28513_obj;
}



jule::Str _200ad0429_gen_postfix(jule::Ptr<_2186ce186_Postfix> _29120_p) {
	jule::Str _29213_obj = jule::Str("(", 1);
	_29213_obj+=_200c454b2_gen_expr(_29120_p->_field_expr);
	_29213_obj+=jule::Str(")", 1);
	_29213_obj+=_29120_p->_field_op;
	_29213_obj+=jule::Str(";", 1);
	return _29213_obj;
}



jule::Str _200ad0429_gen_div_by_zero_assign(jule::Ptr<_2186ce186_Assign> _30031_a) {
	jule::Str _30113_obj = _200c454b2_gen_expr(_30031_a->_field_l);
	_30113_obj+=jule::Str(" = ", 3);
	_30113_obj+=_200c454b2_gen_div_by_zero_binop_expr_model(_30031_a->_field_op.slice(0LL,1LL),_30031_a->_field_l,_30031_a->_field_r);
	_30113_obj+=jule::Str(";", 1);
	return _30113_obj;
}



jule::Str _200ad0429_gen_assign(jule::Ptr<_2186ce186_Assign> _30819_a) {
	{
		auto _match_expr{ _30819_a->_field_op };
		if (!((jule::Str("/=", 2)) == _match_expr || (jule::Str("%=", 2)) == _match_expr)) { goto _case_end_4885199552; }
		_case_begin_4885199552:;
		{
			return _200ad0429_gen_div_by_zero_assign(_30819_a);
		}
		goto _match_end_4885199472;
		_case_end_4885199552:;
		_match_end_4885199472:;
	}
	jule::Str _31513_obj = _200c454b2_gen_expr(_30819_a->_field_l);
	_31513_obj+=_30819_a->_field_op;
	if ((*(_231e64150_OPT_APPEND))) {
		{
			auto _match_expr{ _30819_a->_field_r };
			if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>>())) { goto _case_end_4885204240; }
			_case_begin_4885204240:;
			{
				jule::Ptr<_2188586ea_BuiltinAppendCallExprModel> _32021_model = _30819_a->_field_r.operator jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>();
				jule::Str _32118_expr;
				jule::Bool _32124_optimized;
				std::tie(_32118_expr,_32124_optimized) = _200c454b2_gen_builtin_append_call_expr_model_assign(_30819_a->_field_l,_32021_model);
				if (_32124_optimized) {
					return _32118_expr;
				}
				_31513_obj+=_32118_expr;
			}
			goto _match_end_4885203280;
			_case_end_4885204240:;
			_case_begin_4885200224:;
			{
				_31513_obj+=_200c454b2_gen_expr(_30819_a->_field_r);
			}
			goto _match_end_4885203280;
			_case_end_4885200224:;
			_match_end_4885203280:;
		}
	} else {
		_31513_obj+=_200c454b2_gen_expr(_30819_a->_field_r);
	}
	_31513_obj+=jule::Str(";", 1);
	return _31513_obj;
}



jule::Str _200ad0429_gen_multi_assign(jule::Ptr<_2186ce186_MultiAssign> _33725_a) {
	jule::Str _33813_obj = jule::Str("std::tie(", 9);
	{
		auto expr = _33725_a->_field_l;
		auto it = expr.begin();
		_iter_begin_4885210896:;
		if (it != expr.end()) {
			jule::Any _200ad0429_l = *it;
			{
				if (_200ad0429_l == nullptr) {
					_33813_obj+=jule::Str("std::ignore", 11);
					_33813_obj+=jule::Str(",", 1);
				} else {
					_33813_obj+=_200c454b2_gen_expr(_200ad0429_l);
					_33813_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4885210896:;
			++it;
			goto _iter_begin_4885210896;
		}
		_iter_end_4885210896:;
	}
	_33813_obj=_33813_obj.slice(0LL,_33813_obj.len() - 1LL);
	_33813_obj+=jule::Str(") = ", 4);
	_33813_obj+=_200c454b2_gen_expr(_33725_a->_field_r);
	_33813_obj+=jule::Str(";", 1);
	return _33813_obj;
}



jule::Str _200ad0429_gen_case(jule::Ptr<_2186ce186_Match> _35717_m,jule::Ptr<_2186ce186_Case> _35732_c) {
	
	jule::Str _3609_end = _1d6c1d84a_case_end_label_ident(static_cast<jule::Uintptr>(_35732_c));
	jule::Str _36113_obj = jule::Str();
	if ((_35732_c->_field_exprs.len() > 0LL) && (!(_35717_m->_method_is_generic_type_match()))) {
		_36113_obj+=jule::Str("if (!(", 6);
		{
			auto expr = _35732_c->_field_exprs;
			auto it = expr.begin();
			_iter_begin_4885220752:;
			if (it != expr.end()) {
				jule::Int _200ad0429_i = it - expr.begin();
				jule::Any _200ad0429_expr = *it;
				{
					{
						if (!(((!(_35717_m->_field_type_match))))) { goto _case_end_4885224128; }
						_case_begin_4885224128:;
						{
							_36113_obj+=jule::Str("(", 1);
							_36113_obj+=_200c454b2_gen_expr(_200ad0429_expr);
							_36113_obj+=jule::Str(")", 1);
							if (_35717_m->_field_expr->_method_is_const()) {
								if ((!(_35717_m->_field_expr->_field_constant->_method_is_bool())) || (!(_35717_m->_field_expr->_field_constant->_method_read_bool()))) {
									_36113_obj+=jule::Str(" == ", 4);
									_36113_obj+=_200c454b2_gen_expr_model(_35717_m->_field_expr->_field_model);
								}
							} else {
								_36113_obj+=jule::Str(" == ", 4);
								_36113_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_4885223168;
						_case_end_4885224128:;
						_case_begin_4885223344:;
						{
							_36113_obj+=jule::Str("_match_expr", 11);
							_36113_obj+=jule::Str(".type_is<", 9);
							_36113_obj+=_200c454b2_gen_expr(_200ad0429_expr);
							_36113_obj+=jule::Str(">()", 3);
						}
						goto _match_end_4885223168;
						_case_end_4885223344:;
						_match_end_4885223168:;
					}
					if ((_200ad0429_i + 1LL) < _35732_c->_field_exprs.len()) {
						_36113_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4885220752:;
				++it;
				_200ad0429_i++;
				goto _iter_begin_4885220752;
			}
			_iter_end_4885220752:;
		}
		_36113_obj+=jule::Str(")) { goto ", 10);
		_36113_obj+=_3609_end;
		_36113_obj+=jule::Str("; }\n", 4);
	}
	if (_35732_c->_field_scope->_field_stmts.len() > 0LL) {
		_36113_obj+=_1d6c4a2c2_indent();
		_36113_obj+=_1d6c1d84a_case_begin_label_ident(static_cast<jule::Uintptr>(_35732_c));
		_36113_obj+=jule::Str(":;\n", 3);
		_36113_obj+=_1d6c4a2c2_indent();
		_36113_obj+=_200ad0429_gen_scope(_35732_c->_field_scope);
		_36113_obj+=jule::Str("\n", 1);
	}
	_36113_obj+=_1d6c4a2c2_indent();
	_36113_obj+=jule::Str("goto ", 5);
	_36113_obj+=_1d6c1d84a_match_end_label_ident(static_cast<jule::Uintptr>(_35717_m)) + jule::Str(";", 1);
	_36113_obj+=jule::Str("\n", 1);
	_36113_obj+=_1d6c4a2c2_indent();
	_36113_obj+=_3609_end;
	_36113_obj+=jule::Str(":;", 2);
	return _36113_obj;
}



jule::Str _200ad0429_gen_match(jule::Ptr<_2186ce186_Match> _41718_m) {
	if ((_41718_m->_field_cases.len() == 0LL) && (_41718_m->_field_default == nullptr)) {
		return jule::Str();
	}
	jule::Bool _4229_generic_type_match = _41718_m->_method_is_generic_type_match();
	if (_4229_generic_type_match && ((_41718_m->_field_default == nullptr) || (_41718_m->_field_default->_field_scope->_field_stmts.len() == 0LL))) {
		return jule::Str();
	}
	jule::Str _42713_obj = jule::Str("{\n", 2);
	_1d6c4a2c2_add_indent();
	_42713_obj+=_1d6c4a2c2_indent();
	if ((!(_4229_generic_type_match)) && (!(_41718_m->_field_expr->_method_is_const()))) {
		if (_41718_m->_field_expr->_field_lvalue && (*(_231e64150_OPT_COPY))) {
			_42713_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_42713_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_42713_obj+=_200c454b2_gen_expr(_41718_m->_field_expr->_field_model);
		_42713_obj+=jule::Str(" };\n", 4);
		_42713_obj+=_1d6c4a2c2_indent();
	}
	if (_41718_m->_field_cases.len() > 0LL) {
		_42713_obj+=_200ad0429_gen_case(_41718_m,_41718_m->_field_cases[0LL]);
		{
			auto expr = _41718_m->_field_cases.slice(1LL);
			auto it = expr.begin();
			_iter_begin_4885252048:;
			if (it != expr.end()) {
				jule::Ptr<_2186ce186_Case> _200ad0429_c = *it;
				{
					_42713_obj+=jule::Str("\n", 1);
					_42713_obj+=_1d6c4a2c2_indent();
					_42713_obj+=_200ad0429_gen_case(_41718_m,_200ad0429_c);
				}
				_iter_next_4885252048:;
				++it;
				goto _iter_begin_4885252048;
			}
			_iter_end_4885252048:;
		}
	}
	if (_41718_m->_field_default != nullptr) {
		_42713_obj+=jule::Str("\n", 1);
		_42713_obj+=_200ad0429_gen_case(_41718_m,_41718_m->_field_default);
	}
	_42713_obj+=jule::Str("\n", 1);
	_42713_obj+=_1d6c4a2c2_indent();
	_42713_obj+=_1d6c1d84a_match_end_label_ident(static_cast<jule::Uintptr>(_41718_m));
	_42713_obj+=jule::Str(":;", 2);
	_42713_obj+=jule::Str("\n", 1);
	_1d6c4a2c2_done_indent();
	_42713_obj+=_1d6c4a2c2_indent();
	_42713_obj+=jule::Str("}", 1);
	return _42713_obj;
}



jule::Str _200ad0429_gen_fall_st(jule::Ptr<_2186ce186_FallSt> _47316_f) {
	jule::Str _47413_obj = jule::Str("goto ", 5);
	_47413_obj+=_1d6c1d84a_case_begin_label_ident(_47316_f->_field_dest_case);
	_47413_obj+=jule::Str(";", 1);
	return _47413_obj;
}



jule::Str _200ad0429_gen_break_st(jule::Ptr<_2186ce186_BreakSt> _48017_b) {
	jule::Str _48113_obj = jule::Str("goto ", 5);
	if (_48017_b->_field_it != 0LL) {
		_48113_obj+=_1d6c1d84a_iter_end_label_ident(_48017_b->_field_it);
	} else {
		_48113_obj+=_1d6c1d84a_match_end_label_ident(_48017_b->_field_mtch);
	}
	_48113_obj+=jule::Str(";", 1);
	return _48113_obj;
}



jule::Str _200ad0429_gen_ret_vars(jule::Ptr<_2186ce186_RetSt> _49221_r) {
	jule::Str _49313_obj = jule::Str();
	{
		auto expr = _49221_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4885266048:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _200ad0429_v = *it;
			{
				if (_2336ea198_is_ignore_ident(_200ad0429_v->_field_ident)) {
					_49313_obj+=_200c454b2_get_init_expr(_200ad0429_v->_field_kind->_field_kind);
				} else {
					_49313_obj+=_1d6c1d84a_var_out_ident(_200ad0429_v);
				}
				_49313_obj+=jule::Str(",", 1);
			}
			_iter_next_4885266048:;
			++it;
			goto _iter_begin_4885266048;
		}
		_iter_end_4885266048:;
	}
	_49313_obj=_49313_obj.slice(0LL,_49313_obj.len() - 1LL);
	if (_49221_r->_field_vars.len() > 1LL) {
		_49313_obj=(jule::Str("return std::make_tuple(", 23) + _49313_obj) + jule::Str(")", 1);
	} else {
		_49313_obj=jule::Str("return ", 7) + _49313_obj;
	}
	_49313_obj+=jule::Str(";", 1);
	return _49313_obj;
}



jule::Str _200ad0429_gen_ret_expr_tuple(jule::Ptr<_2186ce186_RetSt> _51627_r) {
	{
		auto _match_expr{ _51627_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_FnCallExprModel>>())) { goto _case_end_4885268080; }
		_case_begin_4885268080:;
		{
			jule::Str _51917_obj = jule::Str("return ", 7);
			_51917_obj+=_200c454b2_gen_expr_model(_51627_r->_field_expr);
			_51917_obj+=jule::Str(";", 1);
			return _51917_obj;
		}
		goto _match_end_4885273072;
		_case_end_4885268080:;
		_match_end_4885273072:;
	}
	jule::Slice<jule::Ptr<_218751758_Data>> _52513_datas = _51627_r->_field_expr.operator jule::Ptr<_2188586ea_TupleExprModel>()->_field_datas;
	jule::Str _52613_obj = jule::Str();
	{
		auto expr = _51627_r->_field_vars;
		auto it = expr.begin();
		_iter_begin_4885278416:;
		if (it != expr.end()) {
			jule::Int _200ad0429_i = it - expr.begin();
			jule::Ptr<_200c58948_Var> _200ad0429_v = *it;
			{
				if ((!(_2336ea198_is_ignore_ident(_200ad0429_v->_field_ident)))) {
					jule::Str _53017_ident = _1d6c1d84a_var_out_ident(_200ad0429_v);
					_52613_obj+=_53017_ident;
					_52613_obj+=jule::Str(" = ", 3);
					_52613_obj+=_200c454b2_gen_expr(_52513_datas[_200ad0429_i]->_field_model);
					_52613_obj+=jule::Str(";\n", 2);
					_52613_obj+=_1d6c4a2c2_indent();
				}
			}
			_iter_next_4885278416:;
			++it;
			_200ad0429_i++;
			goto _iter_begin_4885278416;
		}
		_iter_end_4885278416:;
	}
	_52613_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto expr = _52513_datas;
		auto it = expr.begin();
		_iter_begin_4885279664:;
		if (it != expr.end()) {
			jule::Int _200ad0429_i = it - expr.begin();
			jule::Ptr<_218751758_Data> _200ad0429_d = *it;
			{
				jule::Ptr<_200c58948_Var> _54117_v = _51627_r->_field_vars[_200ad0429_i];
				if (_2336ea198_is_ignore_ident(_54117_v->_field_ident)) {
					_52613_obj+=_200c454b2_gen_expr(_200ad0429_d->_field_model);
				} else {
					_52613_obj+=_1d6c1d84a_var_out_ident(_54117_v);
				}
				_52613_obj+=jule::Str(",", 1);
			}
			_iter_next_4885279664:;
			++it;
			_200ad0429_i++;
			goto _iter_begin_4885279664;
		}
		_iter_end_4885279664:;
	}
	_52613_obj=_52613_obj.slice(0LL,_52613_obj.len() - 1LL);
	_52613_obj+=jule::Str(");", 2);
	return _52613_obj;
}



jule::Str _200ad0429_gen_ret_expr(jule::Ptr<_2186ce186_RetSt> _55621_r) {
	if (_55621_r->_field_vars.len() == 0LL) {
		jule::Str _55817_obj = jule::Str("return ", 7);
		_55817_obj+=_200c454b2_gen_expr(_55621_r->_field_expr);
		_55817_obj+=jule::Str(";", 1);
		return _55817_obj;
	}
	if (_55621_r->_field_vars.len() > 1LL) {
		return _200ad0429_gen_ret_expr_tuple(_55621_r);
	}
	if ((!(_2336ea198_is_ignore_ident(_55621_r->_field_vars[0LL]->_field_ident)))) {
		jule::Str _56913_ident = _1d6c1d84a_var_out_ident(_55621_r->_field_vars[0LL]);
		jule::Str _57017_obj = _56913_ident;
		_57017_obj+=jule::Str(" = ", 3);
		_57017_obj+=_200c454b2_gen_expr(_55621_r->_field_expr);
		_57017_obj+=jule::Str(";\n", 2);
		_57017_obj+=_1d6c4a2c2_indent();
		_57017_obj+=jule::Str("return ", 7);
		_57017_obj+=_56913_ident;
		_57017_obj+=jule::Str(";", 1);
		return _57017_obj;
	}
	jule::Str _58113_obj = jule::Str("return ", 7);
	_58113_obj+=_200c454b2_gen_expr(_55621_r->_field_expr);
	_58113_obj+=jule::Str(";", 1);
	return _58113_obj;
}



jule::Str _200ad0429_gen_ret_st(jule::Ptr<_2186ce186_RetSt> _58719_r) {
	if ((_58719_r->_field_expr == nullptr) && (_58719_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_58719_r->_field_expr == nullptr) {
		return _200ad0429_gen_ret_vars(_58719_r);
	}
	return _200ad0429_gen_ret_expr(_58719_r);
}



jule::Str _200ad0429_gen_ret_st_with_defaults(jule::Ptr<_200d010d9_TypeKind> _59933_result) {
	jule::Str _60013_obj = jule::Str("return ", 7);
	if (_59933_result->_method_tup() != nullptr) {
		_60013_obj+=jule::Str("std::make_tuple(", 16);
		{
			auto expr = _59933_result->_method_tup()->_field_types;
			auto it = expr.begin();
			_iter_begin_4885309232:;
			if (it != expr.end()) {
				jule::Ptr<_200d010d9_TypeKind> _200ad0429_t = *it;
				{
					_60013_obj+=_200c454b2_get_init_expr(_200ad0429_t);
					_60013_obj+=jule::Str(",", 1);
				}
				_iter_next_4885309232:;
				++it;
				goto _iter_begin_4885309232;
			}
			_iter_end_4885309232:;
		}
		_60013_obj=_60013_obj.slice(0LL,_60013_obj.len() - 1LL);
		_60013_obj+=jule::Str(")", 1);
	} else {
		_60013_obj+=_200c454b2_get_init_expr(_59933_result);
	}
	_60013_obj+=jule::Str(";", 1);
	return _60013_obj;
}



jule::Str _200ad0429_gen_recover(jule::Ptr<_2186ce186_Recover> _61620_r) {
	jule::Str _61713_obj = jule::Str("try ", 4);
	_61713_obj+=_200ad0429_gen_scope(_61620_r->_field_scope);
	_61713_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_61620_r->_field_handler->_method_is_anon()) {
		_1d6c4a2c2_add_indent();
		_61713_obj+=jule::Str("{\n", 2);
		_61713_obj+=_1d6c4a2c2_indent();
		_61713_obj+=_200c454b2_gen_expr(_61620_r->_field_handler_expr);
		_61713_obj+=jule::Str("(jule::exception_to_error(e));", 30);
		if ((!(_61620_r->_field_scope_owner->_field_decl->_method_is_void()))) {
			_61713_obj+=jule::Str("\n", 1);
			_61713_obj+=_1d6c4a2c2_indent();
			_1d6c4a2c2_done_indent();
			_61713_obj+=_200ad0429_gen_ret_st_with_defaults(_61620_r->_field_scope_owner->_field_result);
		} else {
			_1d6c4a2c2_done_indent();
		}
		_61713_obj+=jule::Str("\n", 1);
		_61713_obj+=_1d6c4a2c2_indent();
		_61713_obj+=jule::Str("}", 1);
	} else {
		_61713_obj+=jule::Str("{\n", 2);
		_1d6c4a2c2_add_indent();
		_61713_obj+=_1d6c4a2c2_indent();
		_61713_obj+=_200c454b2_gen_expr(_61620_r->_field_handler_expr);
		_61713_obj+=jule::Str("(jule::exception_to_error(e));\n", 31);
		_61713_obj+=_1d6c4a2c2_indent();
		if (_61620_r->_field_scope_owner->_field_decl->_method_is_void()) {
			_1d6c4a2c2_done_indent();
			_61713_obj+=jule::Str(" }", 2);
		} else {
			_61713_obj+=_200ad0429_gen_ret_st_with_defaults(_61620_r->_field_scope_owner->_field_result);
			_61713_obj+=jule::Str("\n", 1);
			_1d6c4a2c2_done_indent();
			_61713_obj+=_1d6c4a2c2_indent();
			_61713_obj+=jule::Str("}", 1);
		}
	}
	return _61713_obj;
}



jule::Str _200ad0429_gen_data_expr(jule::Ptr<_218751758_Data> _66522_d) {
	return _200c454b2_gen_expr(_66522_d->_field_model) + jule::Str(";", 1);
}



jule::Str _200ad0429_gen_scope_var(jule::Ptr<_200c58948_Var> _66922_v) {
	if (_66922_v->_field_constant) {
		return jule::Str();
	}
	return _1d6c4a2c2_gen_var(_66922_v);
}



jule::Str _200ad0429_gen_st(jule::Any _67715_st) {
	{
		auto _match_expr{ _67715_st };
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Scope>>())) { goto _case_end_4885349616; }
		_case_begin_4885349616:;
		{
			return _200ad0429_gen_scope(_67715_st.operator jule::Ptr<_2186ce186_Scope>());
		}
		goto _match_end_4885347504;
		_case_end_4885349616:;
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4885349712; }
		_case_begin_4885349712:;
		{
			return _200ad0429_gen_scope_var(_67715_st.operator jule::Ptr<_200c58948_Var>());
		}
		goto _match_end_4885347504;
		_case_end_4885349712:;
		if (!(_match_expr.type_is<jule::Ptr<_218751758_Data>>())) { goto _case_end_4885348656; }
		_case_begin_4885348656:;
		{
			return _200ad0429_gen_data_expr(_67715_st.operator jule::Ptr<_218751758_Data>());
		}
		goto _match_end_4885347504;
		_case_end_4885348656:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Conditional>>())) { goto _case_end_4885348752; }
		_case_begin_4885348752:;
		{
			return _200ad0429_gen_conditional(_67715_st.operator jule::Ptr<_2186ce186_Conditional>());
		}
		goto _match_end_4885347504;
		_case_end_4885348752:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_InfIter>>())) { goto _case_end_4885348848; }
		_case_begin_4885348848:;
		{
			return _200ad0429_gen_inf_iter(_67715_st.operator jule::Ptr<_2186ce186_InfIter>());
		}
		goto _match_end_4885347504;
		_case_end_4885348848:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_WhileIter>>())) { goto _case_end_4885348944; }
		_case_begin_4885348944:;
		{
			return _200ad0429_gen_while_iter(_67715_st.operator jule::Ptr<_2186ce186_WhileIter>());
		}
		goto _match_end_4885347504;
		_case_end_4885348944:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RangeIter>>())) { goto _case_end_4885349872; }
		_case_begin_4885349872:;
		{
			return _200ad0429_gen_range_iter(_67715_st.operator jule::Ptr<_2186ce186_RangeIter>());
		}
		goto _match_end_4885347504;
		_case_end_4885349872:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_ContSt>>())) { goto _case_end_4885349984; }
		_case_begin_4885349984:;
		{
			return _200ad0429_gen_cont(_67715_st.operator jule::Ptr<_2186ce186_ContSt>());
		}
		goto _match_end_4885347504;
		_case_end_4885349984:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Label>>())) { goto _case_end_4885350096; }
		_case_begin_4885350096:;
		{
			return _200ad0429_gen_label(_67715_st.operator jule::Ptr<_2186ce186_Label>());
		}
		goto _match_end_4885347504;
		_case_end_4885350096:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_GotoSt>>())) { goto _case_end_4885350288; }
		_case_begin_4885350288:;
		{
			return _200ad0429_gen_goto(_67715_st.operator jule::Ptr<_2186ce186_GotoSt>());
		}
		goto _match_end_4885347504;
		_case_end_4885350288:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Postfix>>())) { goto _case_end_4885350384; }
		_case_begin_4885350384:;
		{
			return _200ad0429_gen_postfix(_67715_st.operator jule::Ptr<_2186ce186_Postfix>());
		}
		goto _match_end_4885347504;
		_case_end_4885350384:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Assign>>())) { goto _case_end_4885350480; }
		_case_begin_4885350480:;
		{
			return _200ad0429_gen_assign(_67715_st.operator jule::Ptr<_2186ce186_Assign>());
		}
		goto _match_end_4885347504;
		_case_end_4885350480:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_MultiAssign>>())) { goto _case_end_4885350576; }
		_case_begin_4885350576:;
		{
			return _200ad0429_gen_multi_assign(_67715_st.operator jule::Ptr<_2186ce186_MultiAssign>());
		}
		goto _match_end_4885347504;
		_case_end_4885350576:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Match>>())) { goto _case_end_4885350672; }
		_case_begin_4885350672:;
		{
			return _200ad0429_gen_match(_67715_st.operator jule::Ptr<_2186ce186_Match>());
		}
		goto _match_end_4885347504;
		_case_end_4885350672:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_FallSt>>())) { goto _case_end_4885350768; }
		_case_begin_4885350768:;
		{
			return _200ad0429_gen_fall_st(_67715_st.operator jule::Ptr<_2186ce186_FallSt>());
		}
		goto _match_end_4885347504;
		_case_end_4885350768:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_BreakSt>>())) { goto _case_end_4885350880; }
		_case_begin_4885350880:;
		{
			return _200ad0429_gen_break_st(_67715_st.operator jule::Ptr<_2186ce186_BreakSt>());
		}
		goto _match_end_4885347504;
		_case_end_4885350880:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_RetSt>>())) { goto _case_end_4885350992; }
		_case_begin_4885350992:;
		{
			return _200ad0429_gen_ret_st(_67715_st.operator jule::Ptr<_2186ce186_RetSt>());
		}
		goto _match_end_4885347504;
		_case_end_4885350992:;
		if (!(_match_expr.type_is<jule::Ptr<_2186ce186_Recover>>())) { goto _case_end_4885351104; }
		_case_begin_4885351104:;
		{
			return _200ad0429_gen_recover(_67715_st.operator jule::Ptr<_2186ce186_Recover>());
		}
		goto _match_end_4885347504;
		_case_end_4885351104:;
		_case_begin_4885347376:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4885347504;
		_case_end_4885347376:;
		_match_end_4885347504:;
	}
}



jule::Str _200ad0429_gen_scope(jule::Ptr<_2186ce186_Scope> _70218_s) {
	jule::Str _70313_obj = jule::Str("{\n", 2);
	_1d6c4a2c2_add_indent();
	{
		auto expr = _70218_s->_field_stmts;
		auto it = expr.begin();
		_iter_begin_4885377184:;
		if (it != expr.end()) {
			jule::Any _200ad0429_st = *it;
			{
				_70313_obj+=_1d6c4a2c2_indent();
				_70313_obj+=_200ad0429_gen_st(_200ad0429_st);
				_70313_obj+=jule::Str("\n", 1);
			}
			_iter_next_4885377184:;
			++it;
			goto _iter_begin_4885377184;
		}
		_iter_end_4885377184:;
	}
	_1d6c4a2c2_done_indent();
	_70313_obj+=_1d6c4a2c2_indent();
	_70313_obj+=jule::Str("}", 1);
	if (_70218_s->_field_deferred) {
		_70313_obj=(jule::Str("__JULE_DEFER(", 13) + _70313_obj) + jule::Str(");", 2);
	}
	return _70313_obj;
}



jule::Str _200ad0429_gen_fn_scope(jule::Ptr<_2185d51ad_FnIns> _72421_f) {
	if (_72421_f->_field_owner != nullptr) {
		return _200ad0429_gen_method_scope(_72421_f);
	}
	return _200ad0429_gen_scope(_72421_f->_field_scope);
}



jule::Str _200ad0429_gen_method_scope(jule::Ptr<_2185d51ad_FnIns> _73325_f) {
	return _200ad0429_gen_scope(_73325_f->_field_scope);
}



jule::Str _200c454b2_concat_all_parts(jule::Slice<jule::Str> _7821_parts) {
	jule::Str _7913_s = jule::Str();
	{
		auto expr = _7821_parts;
		auto it = expr.begin();
		_iter_begin_4885386304:;
		if (it != expr.end()) {
			jule::Str _200c454b2_part = *it;
			{
				_7913_s+=_200c454b2_part;
			}
			_iter_next_4885386304:;
			++it;
			goto _iter_begin_4885386304;
		}
		_iter_end_4885386304:;
	}
	return _7913_s;
}



jule::Str _200c454b2_get_accessor(jule::Ptr<_200d010d9_TypeKind>& _8622_t) {
	if ((_8622_t->_method_sptr() != nullptr) || (_8622_t->_method_ptr() != nullptr)) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



jule::Str _200c454b2_decompose_common_esq(jule::U8 _9325_b) {
	{
		auto _match_expr{ _9325_b };
		if (!(('\\') == _match_expr)) { goto _case_end_4885392144; }
		_case_begin_4885392144:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885392144:;
		if (!(('\'') == _match_expr)) { goto _case_end_4885391952; }
		_case_begin_4885391952:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4885388720;
		_case_end_4885391952:;
		if (!(('\"') == _match_expr)) { goto _case_end_4885391168; }
		_case_begin_4885391168:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885391168:;
		if (!(('\a') == _match_expr)) { goto _case_end_4885391264; }
		_case_begin_4885391264:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885391264:;
		if (!(('\b') == _match_expr)) { goto _case_end_4885391360; }
		_case_begin_4885391360:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885391360:;
		if (!(('\f') == _match_expr)) { goto _case_end_4885391456; }
		_case_begin_4885391456:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885391456:;
		if (!(('\n') == _match_expr)) { goto _case_end_4885392400; }
		_case_begin_4885392400:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885392400:;
		if (!(('\r') == _match_expr)) { goto _case_end_4885392496; }
		_case_begin_4885392496:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885392496:;
		if (!(('\t') == _match_expr)) { goto _case_end_4885392592; }
		_case_begin_4885392592:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885392592:;
		if (!(('\v') == _match_expr)) { goto _case_end_4885392688; }
		_case_begin_4885392688:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4885388720;
		_case_end_4885392688:;
		_case_begin_4885390192:;
		{
			return jule::Str();
		}
		goto _match_end_4885388720;
		_case_end_4885390192:;
		_match_end_4885388720:;
	}
}



jule::Str _200c454b2_sbtoa(jule::U8 _10910_b) {
	if (_10910_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_10910_b <= 127LL) {
		jule::Str _11513_seq = _200c454b2_decompose_common_esq(_10910_b);
		if (_11513_seq != jule::Str()) {
			return _11513_seq;
		}
		if ((32LL <= _10910_b) && (_10910_b <= 126LL)) {
			return static_cast<jule::Str>(_10910_b);
		}
	}
	jule::Str _1259_seq = _232e766a0_fmt_uint(static_cast<jule::U64>(_10910_b),8LL);
	if (_1259_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1259_seq;
	}
	return jule::Str("\\", 1) + _1259_seq;
}



jule::Str _200c454b2_get_str_model(jule::Ptr<_1d68bd462_Const>& _13219_c) {
	jule::Str _1339_content = _13219_c->_method_read_str();
	jule::Slice<jule::U8> _1349_bytes = static_cast<jule::Slice<jule::U8>>(_1339_content);
	jule::Str _1359_len = _232e766a0_fmt_int(static_cast<jule::I64>(_1349_bytes.len()),10LL);
	jule::Str _13713_lit = jule::Str();
	{
		auto expr = _1349_bytes;
		auto it = expr.begin();
		_iter_begin_4885409584:;
		if (it != expr.end()) {
			jule::U8 _200c454b2_b = *it;
			{
				_13713_lit+=_200c454b2_sbtoa(_200c454b2_b);
			}
			_iter_next_4885409584:;
			++it;
			goto _iter_begin_4885409584;
		}
		_iter_end_4885409584:;
	}
	if (_13713_lit.len() == 0LL) {
		return _1d6c1d84a_as_jt(jule::Str("str", 3)) + jule::Str("()", 2);
	}
	return ((((_1d6c1d84a_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _13713_lit) + jule::Str("\", ", 3)) + _1359_len) + jule::Str(")", 1);
}



jule::Str _200c454b2_get_bool_model(jule::Ptr<_1d68bd462_Const>& _14920_c) {
	if (_14920_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



jule::Str _200c454b2_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



jule::Str _200c454b2_gen_float_special_cases(jule::F64& _15829_x) {
	{
		if (!((_2330d8e50_is_nan(_15829_x)))) { goto _case_end_4885418000; }
		_case_begin_4885418000:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4885416416;
		_case_end_4885418000:;
		if (!((_2330d8e50_is_inf(_15829_x,1LL)))) { goto _case_end_4885417568; }
		_case_begin_4885417568:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4885416416;
		_case_end_4885417568:;
		if (!((_2330d8e50_is_inf(_15829_x,-1LL)))) { goto _case_end_4885417664; }
		_case_begin_4885417664:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4885416416;
		_case_end_4885417664:;
		_case_begin_4885416592:;
		{
			return jule::Str();
		}
		goto _match_end_4885416416;
		_case_end_4885416592:;
		_match_end_4885416416:;
	}
}



jule::Str _200c454b2_ftoa(jule::F64 _1679_f,jule::Int _16717_bitsize) {
	if (_16717_bitsize != 32LL) {
		if (_1679_f == static_cast<jule::F64>(static_cast<jule::I64>(_1679_f))) {
			return _200c454b2_i64toa(static_cast<jule::I64>(_1679_f));
		}
		if (_1679_f == static_cast<jule::F64>(static_cast<jule::U64>(_1679_f))) {
			return _200c454b2_u64toa(static_cast<jule::U64>(_1679_f));
		}
	}
	jule::Str _17713_m = _231e5e5ce_fmt_float(_1679_f,'f',-1LL,_16717_bitsize);
	if (_17713_m.find(jule::Str(".", 1)) == -1LL) {
		_17713_m+=jule::Str(".0", 2);
	}
	return _17713_m;
}



jule::Str _200c454b2_get_f32_model(jule::Ptr<_1d68bd462_Const>& _18419_c) {
	jule::F64 _1859_x = _18419_c->_method_as_f64();
	jule::Str _1889_f = _200c454b2_gen_float_special_cases(_1859_x);
	if (_1889_f != jule::Str()) {
		return _1889_f;
	}
	{
		if (!((_1859_x == 340282346638528860000000000000000000000.0))) { goto _case_end_4885431696; }
		_case_begin_4885431696:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4885432448;
		_case_end_4885431696:;
		if (!((_1859_x == -340282346638528860000000000000000000000.0))) { goto _case_end_4885431792; }
		_case_begin_4885431792:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4885432448;
		_case_end_4885431792:;
		_match_end_4885432448:;
	}
	return _200c454b2_ftoa(_1859_x,32LL) + jule::Str("f", 1);
}



jule::Str _200c454b2_get_f64_model(jule::Ptr<_1d68bd462_Const>& _20119_c) {
	jule::F64 _2029_x = _20119_c->_method_as_f64();
	jule::Str _2059_f = _200c454b2_gen_float_special_cases(_2029_x);
	if (_2059_f != jule::Str()) {
		return _2059_f;
	}
	{
		if (!((_2029_x == jule::MAX_F64))) { goto _case_end_4885438160; }
		_case_begin_4885438160:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4885437744;
		_case_end_4885438160:;
		if (!((_2029_x == jule::MIN_F64))) { goto _case_end_4885438256; }
		_case_begin_4885438256:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4885437744;
		_case_end_4885438256:;
		_match_end_4885437744:;
	}
	return _200c454b2_ftoa(_2029_x,64LL);
}



jule::Str _200c454b2_get_float_model(jule::Ptr<_218751758_Data>& _21825_d) {
	{
		if (!((_21825_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_4885442768; }
		_case_begin_4885442768:;
		{
			return _200c454b2_get_f32_model(_21825_d->_field_constant);
		}
		goto _match_end_4885440528;
		_case_end_4885442768:;
		_case_begin_4885439600:;
		{
			return _200c454b2_get_f64_model(_21825_d->_field_constant);
		}
		goto _match_end_4885440528;
		_case_end_4885439600:;
		_match_end_4885440528:;
	}
}



jule::Str _200c454b2_i64toa(jule::I64 _22511_x) {
	{
		if (!((_22511_x == jule::MAX_I64))) { goto _case_end_4885443328; }
		_case_begin_4885443328:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4885441680;
		_case_end_4885443328:;
		if (!((_22511_x == jule::MIN_I64))) { goto _case_end_4885443440; }
		_case_begin_4885443440:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4885441680;
		_case_end_4885443440:;
		_match_end_4885441680:;
	}
	jule::Str _2319_fmt = _232e766a0_fmt_int(_22511_x,10LL);
	if (_231e8d3bb_is_64bit(jule::Str("arm64", 5))) {
		return _2319_fmt + jule::Str("LL", 2);
	}
	return _2319_fmt + jule::Str("L", 1);
}



jule::Str _200c454b2_get_i64_model(jule::Ptr<_1d68bd462_Const>& _23819_c) {
	return _200c454b2_i64toa(static_cast<jule::I64>(_23819_c->_method_read_i64()));
}



jule::Str _200c454b2_u64toa(jule::U64 _24211_x) {
	{
		if (!((_24211_x == jule::MAX_U64))) { goto _case_end_4885450400; }
		_case_begin_4885450400:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4885448272;
		_case_end_4885450400:;
		_match_end_4885448272:;
	}
	jule::Str _2489_fmt = _232e766a0_fmt_uint(_24211_x,10LL);
	if (_231e8d3bb_is_64bit(jule::Str("arm64", 5))) {
		return _2489_fmt + jule::Str("LLU", 3);
	}
	return _2489_fmt + jule::Str("LU", 2);
}



jule::Str _200c454b2_get_u64_model(jule::Ptr<_1d68bd462_Const> _25518_c) {
	return _200c454b2_u64toa(static_cast<jule::U64>(_25518_c->_method_read_u64()));
}



jule::Str _200c454b2_gen_const_expr(jule::Ptr<_218751758_Data> _25923_d) {
	{
		if (!((_25923_d->_field_constant->_method_is_str()))) { goto _case_end_4885457504; }
		_case_begin_4885457504:;
		{
			return _200c454b2_get_str_model(_25923_d->_field_constant);
		}
		goto _match_end_4876154160;
		_case_end_4885457504:;
		if (!((_25923_d->_field_constant->_method_is_bool()))) { goto _case_end_4885457600; }
		_case_begin_4885457600:;
		{
			return _200c454b2_get_bool_model(_25923_d->_field_constant);
		}
		goto _match_end_4876154160;
		_case_end_4885457600:;
		if (!((_25923_d->_field_constant->_method_is_f64()))) { goto _case_end_4885457696; }
		_case_begin_4885457696:;
		{
			return _200c454b2_get_float_model(_25923_d);
		}
		goto _match_end_4876154160;
		_case_end_4885457696:;
		if (!((_25923_d->_field_constant->_method_is_i64()))) { goto _case_end_4885457008; }
		_case_begin_4885457008:;
		{
			return _200c454b2_get_i64_model(_25923_d->_field_constant);
		}
		goto _match_end_4876154160;
		_case_end_4885457008:;
		if (!((_25923_d->_field_constant->_method_is_u64()))) { goto _case_end_4885457104; }
		_case_begin_4885457104:;
		{
			return _200c454b2_get_u64_model(_25923_d->_field_constant);
		}
		goto _match_end_4876154160;
		_case_end_4885457104:;
		if (!((_25923_d->_field_constant->_method_is_nil()))) { goto _case_end_4885457200; }
		_case_begin_4885457200:;
		{
			return _200c454b2_get_nil_model();
		}
		goto _match_end_4876154160;
		_case_end_4885457200:;
		_case_begin_4885453136:;
		{
			return jule::Str();
		}
		goto _match_end_4876154160;
		_case_end_4885453136:;
		_match_end_4876154160:;
	}
}



jule::Str _200c454b2_gen_const_expr_model(jule::Ptr<_1d68bd462_Const> _27125_m) {
	{
		if (!((_27125_m->_method_is_str()))) { goto _case_end_4885467648; }
		_case_begin_4885467648:;
		{
			return _200c454b2_get_str_model(_27125_m);
		}
		goto _match_end_4885466912;
		_case_end_4885467648:;
		if (!((_27125_m->_method_is_bool()))) { goto _case_end_4885467744; }
		_case_begin_4885467744:;
		{
			return _200c454b2_get_bool_model(_27125_m);
		}
		goto _match_end_4885466912;
		_case_end_4885467744:;
		if (!((_27125_m->_method_is_f64()))) { goto _case_end_4885467840; }
		_case_begin_4885467840:;
		{
			return _200c454b2_get_f64_model(_27125_m);
		}
		goto _match_end_4885466912;
		_case_end_4885467840:;
		if (!((_27125_m->_method_is_i64()))) { goto _case_end_4885467056; }
		_case_begin_4885467056:;
		{
			return _200c454b2_get_i64_model(_27125_m);
		}
		goto _match_end_4885466912;
		_case_end_4885467056:;
		if (!((_27125_m->_method_is_u64()))) { goto _case_end_4885467152; }
		_case_begin_4885467152:;
		{
			return _200c454b2_get_u64_model(_27125_m);
		}
		goto _match_end_4885466912;
		_case_end_4885467152:;
		if (!((_27125_m->_method_is_nil()))) { goto _case_end_4885467248; }
		_case_begin_4885467248:;
		{
			return _200c454b2_get_nil_model();
		}
		goto _match_end_4885466912;
		_case_end_4885467248:;
		_case_begin_4885464720:;
		{
			return jule::Str();
		}
		goto _match_end_4885466912;
		_case_end_4885464720:;
		_match_end_4885466912:;
	}
}



jule::Str _200c454b2_gen_div_by_zero_binop_expr_model(jule::Str _28337_op,jule::Any _28350_l,jule::Any _28368_r) {
	jule::Str _28413_op_func = jule::Str();
	{
		auto _match_expr{ _28337_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_4885475344; }
		_case_begin_4885475344:;
		{
			_28413_op_func=jule::Str("div", 3);
		}
		goto _match_end_4885476192;
		_case_end_4885475344:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_4885476272; }
		_case_begin_4885476272:;
		{
			_28413_op_func=jule::Str("mod", 3);
		}
		goto _match_end_4885476192;
		_case_end_4885476272:;
		_match_end_4885476192:;
	}
	if ((*(_231e64150_OPT_MATH))) {
		{
			auto _match_expr{ _28368_r };
			if (!(_match_expr.type_is<jule::Ptr<_1d68bd462_Const>>())) { goto _case_end_4885476960; }
			_case_begin_4885476960:;
			{
				_28413_op_func=jule::Str("unsafe_", 7) + _28413_op_func;
			}
			goto _match_end_4885478720;
			_case_end_4885476960:;
			_match_end_4885478720:;
		}
	}
	jule::Str _29713_obj = jule::Str("jule::", 6);
	_29713_obj+=_28413_op_func;
	_29713_obj+=jule::Str("(", 1);
	_29713_obj+=_200c454b2_gen_expr(_28350_l);
	_29713_obj+=jule::Str(",", 1);
	_29713_obj+=_200c454b2_gen_expr(_28368_r);
	_29713_obj+=jule::Str(")", 1);
	return _29713_obj;
}



jule::Str _200c454b2_gen_binop_expr_model(jule::Ptr<_2188586ea_BinopExprModel> _30729_m) {
	{
		auto _match_expr{ _30729_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr)) { goto _case_end_4885481840; }
		_case_begin_4885481840:;
		{
			return _200c454b2_gen_div_by_zero_binop_expr_model(_30729_m->_field_op,_30729_m->_field_left,_30729_m->_field_right);
		}
		goto _match_end_4885482688;
		_case_end_4885481840:;
		_match_end_4885482688:;
	}
	jule::Str _31413_obj = jule::Str("(", 1);
	_31413_obj+=_200c454b2_gen_expr_model(_30729_m->_field_left);
	_31413_obj+=jule::Str(" ", 1);
	_31413_obj+=_30729_m->_field_op;
	_31413_obj+=jule::Str(" ", 1);
	_31413_obj+=_200c454b2_gen_expr_model(_30729_m->_field_right);
	_31413_obj+=jule::Str(")", 1);
	return _31413_obj;
}



jule::Str _200c454b2_gen_var_expr_model(jule::Ptr<_200c58948_Var> _32427_m) {
	if (_32427_m->_field_cpp_linked) {
		jule::Ptr<_233464770_Directive> _32613_d = _1d6c4a932_find_directive(_32427_m->_field_directives,jule::Str("namespace", 9));
		if (_32613_d != nullptr) {
			jule::Str _32821_obj = _200c454b2_concat_all_parts(_32613_d->_field_args);
			_32821_obj+=jule::Str("::", 2);
			_32821_obj+=_1d6c1d84a_var_out_ident(_32427_m);
			return _32821_obj;
		}
	}
	return _1d6c1d84a_var_out_ident(_32427_m);
}



jule::Str _200c454b2_gen_struct_expr_model(jule::Ptr<_23461aa35_Struct> _33726_m) {
	return _1d6c4a932_gen_struct_kind(_33726_m);
}



jule::Str _200c454b2_gen_struct_ins_expr_model(jule::Ptr<_23461aa35_StructIns> _34134_m) {
	return _1d6c4a932_gen_struct_kind_ins(_34134_m);
}



jule::Str _200c454b2_gen_unary_expr_model(jule::Ptr<_2188586ea_UnaryExprModel> _34529_m) {
	{
		auto _match_expr{ _34529_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_4885497040; }
		_case_begin_4885497040:;
		{
			jule::Str _34817_obj = jule::Str("(~(", 3);
			_34817_obj+=_200c454b2_gen_expr(_34529_m->_field_expr);
			_34817_obj+=jule::Str("))", 2);
			return _34817_obj;
		}
		goto _match_end_4885490928;
		_case_end_4885497040:;
		_case_begin_4885494800:;
		{
			jule::Str _35417_obj = jule::Str("(", 1);
			_35417_obj+=_34529_m->_field_op;
			_35417_obj+=jule::Str("(", 1);
			_35417_obj+=_200c454b2_gen_expr(_34529_m->_field_expr);
			_35417_obj+=jule::Str("))", 2);
			return _35417_obj;
		}
		goto _match_end_4885490928;
		_case_end_4885494800:;
		_match_end_4885490928:;
	}
}



jule::Str _200c454b2_gen_cpp_struct_lit_expr_model(jule::Ptr<_2188586ea_StructLitExprModel> _36338_m) {
	jule::Str _36413_obj = jule::Str("(", 1) + _1d6c4a932_gen_struct_kind_ins(_36338_m->_field_strct);
	_36413_obj+=jule::Str("){", 2);
	if (_36338_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto expr = _36338_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4885504704:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _200c454b2_f = *it;
				{
					if (_36338_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto expr = _36338_m->_field_args;
							auto it = expr.begin();
							_iter_begin_4885507392:;
							if (it != expr.end()) {
								jule::Ptr<_2188586ea_StructArgExprModel> _200c454b2_arg = *it;
								{
									if (_200c454b2_arg->_field_field == _200c454b2_f) {
										_36413_obj+=jule::Str(".", 1);
										_36413_obj+=_1d6c1d84a_field_out_ident(_200c454b2_f->_field_decl);
										_36413_obj+=jule::Str("=", 1);
										_36413_obj+=_200c454b2_gen_expr(_200c454b2_arg->_field_expr);
										_36413_obj+=jule::Str(",", 1);
										goto _iter_next_4885504704;
									}
								}
								_iter_next_4885507392:;
								++it;
								goto _iter_begin_4885507392;
							}
							_iter_end_4885507392:;
						}
						goto _iter_next_4885504704;
					}
					_36413_obj+=_1d6c1d84a_field_out_ident(_200c454b2_f->_field_decl);
					_36413_obj+=jule::Str(": ", 2);
					{
						auto expr = _36338_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4885507968:;
						if (it != expr.end()) {
							jule::Ptr<_2188586ea_StructArgExprModel> _200c454b2_arg = *it;
							{
								if (_200c454b2_arg->_field_field == _200c454b2_f) {
									_36413_obj+=_200c454b2_gen_expr(_200c454b2_arg->_field_expr);
									_36413_obj+=jule::Str(",", 1);
									goto _iter_next_4885504704;
								}
							}
							_iter_next_4885507968:;
							++it;
							goto _iter_begin_4885507968;
						}
						_iter_end_4885507968:;
					}
					_36413_obj+=_200c454b2_get_init_expr(_200c454b2_f->_field_kind);
					_36413_obj+=jule::Str(",", 1);
				}
				_iter_next_4885504704:;
				++it;
				goto _iter_begin_4885504704;
			}
			_iter_end_4885504704:;
		}
		_36413_obj=_36413_obj.slice(0LL,_36413_obj.len() - 1LL);
	}
	_36413_obj+=jule::Str("}", 1);
	return _36413_obj;
}



jule::Str _200c454b2_gen_struct_lit_expr_model(jule::Ptr<_2188586ea_StructLitExprModel> _40134_m) {
	if (_40134_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _200c454b2_gen_cpp_struct_lit_expr_model(_40134_m);
	}
	jule::Str _40613_obj = _1d6c1d84a_struct_ins_out_ident(_40134_m->_field_strct);
	_40613_obj+=jule::Str("(", 1);
	if (_40134_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto expr = _40134_m->_field_strct->_field_fields;
			auto it = expr.begin();
			_iter_begin_4885522048:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _200c454b2_f = *it;
				{
					{
						auto expr = _40134_m->_field_args;
						auto it = expr.begin();
						_iter_begin_4885523824:;
						if (it != expr.end()) {
							jule::Ptr<_2188586ea_StructArgExprModel> _200c454b2_arg = *it;
							{
								if (_200c454b2_arg->_field_field == _200c454b2_f) {
									_40613_obj+=_200c454b2_gen_expr(_200c454b2_arg->_field_expr);
									_40613_obj+=jule::Str(",", 1);
									goto _iter_next_4885522048;
								}
							}
							_iter_next_4885523824:;
							++it;
							goto _iter_begin_4885523824;
						}
						_iter_end_4885523824:;
					}
					_40613_obj+=_200c454b2_get_init_expr(_200c454b2_f->_field_kind);
					_40613_obj+=jule::Str(",", 1);
				}
				_iter_next_4885522048:;
				++it;
				goto _iter_begin_4885522048;
			}
			_iter_end_4885522048:;
		}
		_40613_obj=_40613_obj.slice(0LL,_40613_obj.len() - 1LL);
	}
	_40613_obj+=jule::Str(")", 1);
	return _40613_obj;
}



jule::Str _200c454b2_gen_alloc_struct_lit_expr_model(jule::Ptr<_2188586ea_AllocStructLitExprModel> _42740_m) {
	jule::Str _42813_obj = jule::Str("jule::new_struct", 16);
	if (_42740_m->_field_lit->_field_strct->_field_decl->_method_has_ref_accessible()) {
		_42813_obj+=jule::Str("_ptr", 4);
	}
	_42813_obj+=jule::Str("<", 1);
	_42813_obj+=_1d6c1d84a_struct_ins_out_ident(_42740_m->_field_lit->_field_strct);
	_42813_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_42813_obj+=_200c454b2_gen_struct_lit_expr_model(_42740_m->_field_lit);
	_42813_obj+=jule::Str(")", 1);
	return _42813_obj;
}



jule::Str _200c454b2_gen_casting_expr_model(jule::Ptr<_2188586ea_CastingExprModel> _44031_m) {
	jule::Str _44113_obj = jule::Str();
	{
		if (!(((_44031_m->_field_kind->_method_prim() != nullptr) && _44031_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_4885536560; }
		_case_begin_4885536560:;
		{
			_44113_obj+=_1d6c4a932_gen_type_kind(_44031_m->_field_kind);
			_44113_obj+=jule::Str("(", 1);
			_44113_obj+=_200c454b2_gen_expr_model(_44031_m->_field_expr);
			_44113_obj+=jule::Str(")", 1);
		}
		goto _match_end_4885535664;
		_case_end_4885536560:;
		if (!((_44031_m->_field_expr_kind->_method_ptr() != nullptr) || (_44031_m->_field_kind->_method_ptr() != nullptr))) { goto _case_end_4885538832; }
		_case_begin_4885538832:;
		{
			_44113_obj+=jule::Str("((", 2);
			_44113_obj+=_1d6c4a932_gen_type_kind(_44031_m->_field_kind);
			_44113_obj+=jule::Str(")(", 2);
			_44113_obj+=_200c454b2_gen_expr(_44031_m->_field_expr);
			_44113_obj+=jule::Str("))", 2);
		}
		goto _match_end_4885535664;
		_case_end_4885538832:;
		if (!((_44031_m->_field_expr_kind->_method_trt() != nullptr) || ((_44031_m->_field_expr_kind->_method_prim() != nullptr) && _44031_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_4885538928; }
		_case_begin_4885538928:;
		{
			_44113_obj+=_200c454b2_gen_expr_model(_44031_m->_field_expr);
			_44113_obj+=_200c454b2_get_accessor(_44031_m->_field_expr_kind);
			_44113_obj+=jule::Str("operator ", 9);
			_44113_obj+=_1d6c4a932_gen_type_kind(_44031_m->_field_kind);
			_44113_obj+=jule::Str("()", 2);
		}
		goto _match_end_4885535664;
		_case_end_4885538928:;
		_case_begin_4885535776:;
		{
			_44113_obj+=jule::Str("static_cast<", 12);
			_44113_obj+=_1d6c4a932_gen_type_kind(_44031_m->_field_kind);
			_44113_obj+=jule::Str(">(", 2);
			_44113_obj+=_200c454b2_gen_expr(_44031_m->_field_expr);
			_44113_obj+=jule::Str(")", 1);
		}
		goto _match_end_4885535664;
		_case_end_4885535776:;
		_match_end_4885535664:;
	}
	return _44113_obj;
}



jule::Str _200c454b2_gen_arg_expr_models(jule::Slice<jule::Any> _47528_models) {
	if (_47528_models.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _48013_obj = jule::Str();
	{
		auto expr = _47528_models;
		auto it = expr.begin();
		_iter_begin_4885550768:;
		if (it != expr.end()) {
			jule::Any _200c454b2_m = *it;
			{
				_48013_obj+=_200c454b2_gen_expr(_200c454b2_m);
				_48013_obj+=jule::Str(",", 1);
			}
			_iter_next_4885550768:;
			++it;
			goto _iter_begin_4885550768;
		}
		_iter_end_4885550768:;
	}
	_48013_obj=_48013_obj.slice(0LL,_48013_obj.len() - 1LL);
	return _48013_obj;
}



jule::Str _200c454b2_gen_expr_model_for_call(jule::Any _48932_expr) {
	{
		auto _match_expr{ _48932_expr };
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4885556288; }
		_case_begin_4885556288:;
		{
			return _200c454b2_gen_fn_ins_expr_model(_48932_expr.operator jule::Ptr<_2185d51ad_FnIns>());
		}
		goto _match_end_4885553056;
		_case_end_4885556288:;
		_case_begin_4885554272:;
		{
			return _200c454b2_gen_expr_model(_48932_expr);
		}
		goto _match_end_4885553056;
		_case_end_4885554272:;
		_match_end_4885553056:;
	}
}



jule::Str _200c454b2_gen_fn_call_expr_model(jule::Ptr<_2188586ea_FnCallExprModel> _49631_m) {
	jule::Str _49713_obj = _200c454b2_gen_expr_model_for_call(_49631_m->_field_expr);
	if ((!(_49631_m->_field_func->_method_is_builtin()))) {
		if (_49631_m->_field_func->_field_decl->_field_cpp_linked && (_49631_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_1d6c4a932_has_directive(_49631_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_49713_obj+=jule::Str("<", 1);
				{
					auto expr = _49631_m->_field_func->_field_generics;
					auto it = expr.begin();
					_iter_begin_4885562256:;
					if (it != expr.end()) {
						jule::Ptr<_200d010d9_TypeKind> _200c454b2_g = *it;
						{
							_49713_obj+=_1d6c4a932_gen_type_kind(_200c454b2_g);
							_49713_obj+=jule::Str(",", 1);
						}
						_iter_next_4885562256:;
						++it;
						goto _iter_begin_4885562256;
					}
					_iter_end_4885562256:;
				}
				_49713_obj=_49713_obj.slice(0LL,_49713_obj.len() - 1LL);
				_49713_obj+=jule::Str(">", 1);
			}
		}
	}
	_49713_obj+=jule::Str("(", 1);
	_49713_obj+=_200c454b2_gen_arg_expr_models(_49631_m->_field_args);
	_49713_obj+=jule::Str(")", 1);
	if (_49631_m->_field_is_co) {
		_49713_obj=jule::Str("__JULE_CO(", 10) + _49713_obj;
		_49713_obj+=jule::Str(")", 1);
	}
	return _49713_obj;
}



jule::Str _200c454b2_gen_slice_expr_model(jule::Ptr<_2188586ea_SliceExprModel> _52329_m) {
	jule::Str _52413_obj = _1d6c4a932_as_slice_kind(_52329_m->_field_elem_kind);
	_52413_obj+=jule::Str("({", 2);
	_52413_obj+=_200c454b2_gen_arg_expr_models(_52329_m->_field_elems);
	_52413_obj+=jule::Str("})", 2);
	return _52413_obj;
}



jule::Str _200c454b2_gen_indexing_expr_model(jule::Ptr<_2188586ea_IndexigExprModel> _53132_m) {
	jule::Str _53213_obj = _200c454b2_gen_expr_model(_53132_m->_field_expr->_field_model);
	if ((*(_231e64150_OPT_ACCESS))) {
		jule::Bool _53613_array = _53132_m->_field_expr->_field_kind->_method_arr() != nullptr;
		if (_53613_array && _53132_m->_field_index->_method_is_const()) {
			_53213_obj+=jule::Str(".__at(", 6);
			_53213_obj+=_200c454b2_gen_expr(_53132_m->_field_index->_field_model);
			_53213_obj+=jule::Str(")", 1);
			return _53213_obj;
		}
		{
			auto _match_expr{ _53132_m->_field_index->_field_model };
			if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4885577680; }
			_case_begin_4885577680:;
			{
				jule::Ptr<_200c58948_Var> _54817_i = _53132_m->_field_index->_field_model.operator jule::Ptr<_200c58948_Var>();
				if (_54817_i->_field_mutable || (_54817_i->_field_iter_relation == nullptr)) {
					goto _match_end_4885578880;
				}
				{
					auto _match_expr{ _53132_m->_field_expr->_field_model };
					if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4885581904; }
					_case_begin_4885581904:;
					{
						jule::Ptr<_200c58948_Var> _55421_r = _53132_m->_field_expr->_field_model.operator jule::Ptr<_200c58948_Var>();
						if ((!(_53613_array)) && _55421_r->_field_mutable) {
							goto _match_end_4885583232;
						}
						if (_54817_i->_field_iter_relation->_field_range == _55421_r) {
							_53213_obj+=jule::Str(".__at(", 6);
							_53213_obj+=_200c454b2_gen_expr(_53132_m->_field_index->_field_model);
							_53213_obj+=jule::Str(")", 1);
							return _53213_obj;
						}
					}
					goto _match_end_4885583232;
					_case_end_4885581904:;
					_match_end_4885583232:;
				}
			}
			goto _match_end_4885578880;
			_case_end_4885577680:;
			_match_end_4885578880:;
		}
	}
	_53213_obj+=jule::Str("[", 1);
	_53213_obj+=_200c454b2_gen_expr(_53132_m->_field_index->_field_model);
	_53213_obj+=jule::Str("]", 1);
	return _53213_obj;
}



jule::Str _200c454b2_gen_anon_fn_expr_model(jule::Ptr<_2188586ea_AnonFnExprModel> _58031_m) {
	jule::Str _58113_obj = _1d6c4a932_gen_fn_kind(_58031_m->_field_func);
	_58113_obj+=jule::Str("([=]", 4);
	_58113_obj+=_1d6c4a2c2_gen_params_ins(_58031_m->_field_func->_field_params);
	_58113_obj+=jule::Str(" mutable -> ", 12);
	_58113_obj+=_1d6c4a2c2_gen_fn_ins_result(_58031_m->_field_func);
	_58113_obj+=jule::Str(" ", 1);
	_58113_obj+=_200ad0429_gen_fn_scope(_58031_m->_field_func);
	_58113_obj+=jule::Str(")", 1);
	return _58113_obj;
}



jule::Str _200c454b2_gen_map_expr_model(jule::Ptr<_2188586ea_MapExprModel> _59227_m) {
	jule::Str _59313_obj = _1d6c1d84a_as_jt(jule::Str("map", 3));
	_59313_obj+=jule::Str("<", 1);
	_59313_obj+=_1d6c4a932_gen_type_kind(_59227_m->_field_key_kind);
	_59313_obj+=jule::Str(",", 1);
	_59313_obj+=_1d6c4a932_gen_type_kind(_59227_m->_field_val_kind);
	_59313_obj+=jule::Str(">({", 3);
	if (_59227_m->_field_entries.len() > 0LL) {
		{
			auto expr = _59227_m->_field_entries;
			auto it = expr.begin();
			_iter_begin_4885598480:;
			if (it != expr.end()) {
				jule::Ptr<_2188586ea_KeyValPairExprModel> _200c454b2_pair = *it;
				{
					jule::Str _60121_pair_obj = jule::Str("{", 1);
					_60121_pair_obj+=_200c454b2_gen_expr(_200c454b2_pair->_field_key);
					_60121_pair_obj+=jule::Str(",", 1);
					_60121_pair_obj+=_200c454b2_gen_expr(_200c454b2_pair->_field_val);
					_60121_pair_obj+=jule::Str("}", 1);
					_59313_obj+=_60121_pair_obj;
					_59313_obj+=jule::Str(",", 1);
				}
				_iter_next_4885598480:;
				++it;
				goto _iter_begin_4885598480;
			}
			_iter_end_4885598480:;
		}
		_59313_obj=_59313_obj.slice(0LL,_59313_obj.len() - 1LL);
	}
	_59313_obj+=jule::Str("})", 2);
	return _59313_obj;
}



jule::Str _200c454b2_gen_slicing_expr_model(jule::Ptr<_2188586ea_SlicingExprModel> _61531_m) {
	jule::Str _61613_obj = _200c454b2_gen_expr_model(_61531_m->_field_expr);
	_61613_obj+=jule::Str(".slice(", 7);
	_61613_obj+=_200c454b2_gen_expr(_61531_m->_field_left);
	if (_61531_m->_field_right != nullptr) {
		_61613_obj+=jule::Str(",", 1);
		_61613_obj+=_200c454b2_gen_expr(_61531_m->_field_right);
	}
	_61613_obj+=jule::Str(")", 1);
	return _61613_obj;
}



jule::Str _200c454b2_gen_trait_sub_ident_expr_model(jule::Ptr<_2188586ea_TraitSubIdentExprModel> _62739_m) {
	jule::Str _62813_obj = _200c454b2_gen_expr_model(_62739_m->_field_expr);
	_62813_obj+=jule::Str(".get()._method_", 15);
	_62813_obj+=_62739_m->_field_ident;
	return _62813_obj;
}



jule::Str _200c454b2_gen_struct_sub_ident_expr_model(jule::Ptr<_2188586ea_StructSubIdentExprModel> _63440_m) {
	jule::Str _63513_obj = _200c454b2_gen_expr_model(_63440_m->_field_expr);
	_63513_obj+=_200c454b2_get_accessor(_63440_m->_field_expr_kind);
	if (_63440_m->_field_field != nullptr) {
		_63513_obj+=_1d6c1d84a_field_out_ident(_63440_m->_field_field->_field_decl);
	} else {
		_63513_obj+=_1d6c1d84a_fn_ins_out_ident(_63440_m->_field_method);
	}
	return _63513_obj;
}



jule::Str _200c454b2_gen_common_ident_expr_model(jule::Ptr<_2188586ea_CommonIdentExprModel> _64532_m) {
	return _64532_m->_field_ident;
}



jule::Str _200c454b2_gen_common_sub_ident_expr_model(jule::Ptr<_2188586ea_CommonSubIdentExprModel> _64940_m) {
	jule::Str _65013_obj = _200c454b2_gen_expr_model(_64940_m->_field_expr);
	_65013_obj+=_200c454b2_get_accessor(_64940_m->_field_expr_kind);
	_65013_obj+=_64940_m->_field_ident;
	return _65013_obj;
}



jule::Str _200c454b2_gen_array_expr_model(jule::Ptr<_2188586ea_ArrayExprModel> _65629_m) {
	jule::Str _65713_obj = _1d6c4a932_gen_array_kind(_65629_m->_field_kind);
	_65713_obj+=jule::Str("({", 2);
	_65713_obj+=_200c454b2_gen_arg_expr_models(_65629_m->_field_elems);
	_65713_obj+=jule::Str("})", 2);
	return _65713_obj;
}



jule::Str _200c454b2_gen_fn_ins_expr_model_common(jule::Ptr<_2185d51ad_FnIns> _66637_m) {
	jule::Str _66713_obj = _1d6c4a932_gen_fn_kind(_66637_m);
	_66713_obj+=jule::Str("(", 1);
	_66713_obj+=_200c454b2_gen_fn_ins_expr_model(_66637_m);
	_66713_obj+=jule::Str(")", 1);
	return _66713_obj;
}



jule::Str _200c454b2_gen_fn_ins_expr_model(jule::Ptr<_2185d51ad_FnIns> _67530_m) {
	if ((_67530_m->_field_decl != nullptr) && _67530_m->_field_decl->_field_cpp_linked) {
		jule::Ptr<_233464770_Directive> _67713_d = _1d6c4a932_find_directive(_67530_m->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_67713_d != nullptr) {
			jule::Str _67921_obj = _200c454b2_concat_all_parts(_67713_d->_field_args);
			_67921_obj+=jule::Str("::", 2);
			_67921_obj+=_1d6c1d84a_fn_ins_out_ident(_67530_m);
			return _67921_obj;
		}
	}
	return _1d6c1d84a_fn_ins_out_ident(_67530_m);
}



jule::Str _200c454b2_gen_tuple_expr_model(jule::Ptr<_2188586ea_TupleExprModel> _68829_m) {
	jule::Str _68913_obj = jule::Str("std::make_tuple(", 16);
	{
		auto expr = _68829_m->_field_datas;
		auto it = expr.begin();
		_iter_begin_4885631120:;
		if (it != expr.end()) {
			jule::Ptr<_218751758_Data> _200c454b2_d = *it;
			{
				_68913_obj+=_200c454b2_gen_expr(_200c454b2_d->_field_model);
				_68913_obj+=jule::Str(",", 1);
			}
			_iter_next_4885631120:;
			++it;
			goto _iter_begin_4885631120;
		}
		_iter_end_4885631120:;
	}
	_68913_obj=_68913_obj.slice(0LL,_68913_obj.len() - 1LL);
	_68913_obj+=jule::Str(")", 1);
	return _68913_obj;
}



jule::Str _200c454b2_gen_builtin_new_call_expr_model(jule::Ptr<_2188586ea_BuiltinNewCallExprModel> _69940_m) {
	jule::Str _70013_obj = jule::Str("jule::new_ptr<", 14);
	_70013_obj+=_1d6c4a932_gen_type_kind(_69940_m->_field_kind);
	_70013_obj+=jule::Str(">(", 2);
	if (_69940_m->_field_init != nullptr) {
		_70013_obj+=_200c454b2_gen_expr(_69940_m->_field_init);
	}
	_70013_obj+=jule::Str(")", 1);
	return _70013_obj;
}



jule::Str _200c454b2_gen_builtin_out_call_expr_model(jule::Ptr<_2188586ea_BuiltinOutCallExprModel> _71040_m) {
	jule::Str _71113_obj = jule::Str("jule::out(", 10);
	_71113_obj+=_200c454b2_gen_expr(_71040_m->_field_expr);
	_71113_obj+=jule::Str(")", 1);
	return _71113_obj;
}



jule::Str _200c454b2_gen_builtin_outln_call_expr_model(jule::Ptr<_2188586ea_BuiltinOutlnCallExprModel> _71742_m) {
	jule::Str _71813_obj = jule::Str("jule::outln(", 12);
	_71813_obj+=_200c454b2_gen_expr(_71742_m->_field_expr);
	_71813_obj+=jule::Str(")", 1);
	return _71813_obj;
}



jule::Str _200c454b2_gen_builtin_real_call_expr_model(jule::Ptr<_2188586ea_BuiltinRealCallExprModel> _72441_m) {
	jule::Str _72513_obj = jule::Str("jule::real(", 11);
	_72513_obj+=_200c454b2_gen_expr(_72441_m->_field_expr);
	_72513_obj+=jule::Str(")", 1);
	return _72513_obj;
}



jule::Str _200c454b2_gen_builtin_drop_call_expr_model(jule::Ptr<_2188586ea_BuiltinDropCallExprModel> _73141_m) {
	jule::Str _73213_obj = jule::Str("jule::drop(", 11);
	_73213_obj+=_200c454b2_gen_expr(_73141_m->_field_expr);
	_73213_obj+=jule::Str(")", 1);
	return _73213_obj;
}



jule::Str _200c454b2_gen_builtin_panic_call_expr_model(jule::Ptr<_2188586ea_BuiltinPanicCallExprModel> _73842_m) {
	jule::Str _73913_obj = jule::Str("jule::panic(", 12);
	_73913_obj+=_200c454b2_gen_expr(_73842_m->_field_expr);
	_73913_obj+=jule::Str(")", 1);
	return _73913_obj;
}



jule::Str _200c454b2_gen_builtin_make_call_expr_model(jule::Ptr<_2188586ea_BuiltinMakeCallExprModel> _74541_m) {
	jule::Str _74613_obj = jule::Str();
	if (_74541_m->_field_len != nullptr) {
		_74613_obj+=_200c454b2_gen_expr(_74541_m->_field_len);
	} else {
		_74613_obj+=jule::Str("0", 1);
	}
	if (_74541_m->_field_cap != nullptr) {
		_74613_obj+=jule::Str(",", 1) + _200c454b2_gen_expr(_74541_m->_field_cap);
	}
	if (_74541_m->_field_kind->_method_slc()->_field_elem->_method_enm() != nullptr) {
		_74613_obj+=jule::Str(",", 1);
		_74613_obj+=_200c454b2_get_init_expr(_74541_m->_field_kind->_method_slc()->_field_elem);
		if (_74541_m->_field_cap != nullptr) {
			_74613_obj=(_1d6c4a932_gen_type_kind(_74541_m->_field_kind) + jule::Str("::alloc(", 8)) + _74613_obj;
		} else {
			_74613_obj=(_1d6c4a932_gen_type_kind(_74541_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _74613_obj;
		}
	} else {
		_74613_obj=(_1d6c4a932_gen_type_kind(_74541_m->_field_kind) + jule::Str("::alloc(", 8)) + _74613_obj;
	}
	_74613_obj+=jule::Str(")", 1);
	return _74613_obj;
}



jule::Str _200c454b2_gen_builtin_append_call_expr_model_assign_opt(jule::Bool _7735_same_dest,jule::Str& _7746_dest_expr,jule::Ptr<_200d010d9_TypeKind>& _77510_dest_kind,jule::Ptr<_2188586ea_SliceExprModel>& _77610_s,jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>& _77710_m) {
	jule::Str _77813_obj = jule::Str();
	if ((!(_7735_same_dest))) {
		_77813_obj+=_7746_dest_expr;
		_77813_obj+=jule::Str(" = jule::alloc_for_append(", 26);
		_77813_obj+=_200c454b2_gen_expr_model(_77710_m->_field_dest);
		_77813_obj+=jule::Str(",", 1);
		_77813_obj+=_232e766a0_itoa(static_cast<jule::I64>(_77610_s->_field_elems.len()));
		_77813_obj+=jule::Str(");", 2);
	}
	{
		auto expr = _77610_s->_field_elems;
		auto it = expr.begin();
		_iter_begin_4885668560:;
		if (it != expr.end()) {
			jule::Any _200c454b2_e = *it;
			{
				_77813_obj+=_7746_dest_expr;
				_77813_obj+=_200c454b2_get_accessor(_77510_dest_kind);
				_77813_obj+=jule::Str("push(", 5);
				_77813_obj+=_200c454b2_gen_expr_model(_200c454b2_e);
				_77813_obj+=jule::Str(");", 2);
			}
			_iter_next_4885668560:;
			++it;
			goto _iter_begin_4885668560;
		}
		_iter_end_4885668560:;
	}
	return _77813_obj;
}



std::tuple<jule::Str,jule::Bool> _200c454b2_gen_builtin_append_call_expr_model_assign(jule::Any _79750_dest,jule::Ptr<_2188586ea_BuiltinAppendCallExprModel> _79771_m) {
	jule::Bool _797110_optimized = jule::Bool();
	{
		auto _match_expr{ _79771_m->_field_elements };
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_SliceExprModel>>())) { goto _case_end_4885664848; }
		_case_begin_4885664848:;
		{
			{
				auto _match_expr{ _79750_dest };
				if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4885672320; }
				_case_begin_4885672320:;
				{
					jule::Ptr<_2188586ea_SliceExprModel> _80221_s = _79771_m->_field_elements.operator jule::Ptr<_2188586ea_SliceExprModel>();
					jule::Str _80317_dest_expr = _200c454b2_gen_expr_model(_79750_dest);
					jule::Ptr<_200c58948_Var> _80421_dest_var = _79750_dest.operator jule::Ptr<_200c58948_Var>();
					jule::Bool _80517_same_dest = _1d6c4a932_any_equals_0(_80421_dest_var,_79771_m->_field_dest);
					_797110_optimized = true;
					return std::make_tuple(_200c454b2_gen_builtin_append_call_expr_model_assign_opt(_80517_same_dest,_80317_dest_expr,_80421_dest_var->_field_kind->_field_kind,_80221_s,_79771_m),_797110_optimized);
				}
				goto _match_end_4885673712;
				_case_end_4885672320:;
				if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructSubIdentExprModel>>())) { goto _case_end_4885673792; }
				_case_begin_4885673792:;
				{
					jule::Ptr<_2188586ea_SliceExprModel> _81021_s = _79771_m->_field_elements.operator jule::Ptr<_2188586ea_SliceExprModel>();
					jule::Str _81117_dest_expr = _200c454b2_gen_expr_model(_79750_dest);
					jule::Ptr<_23461aa35_FieldIns> _81221_dest_field = _79750_dest.operator jule::Ptr<_2188586ea_StructSubIdentExprModel>()->_field_field;
					jule::Bool _81317_same_dest = _1d6c4a932_any_equals_1(_81221_dest_field,_79771_m->_field_dest);
					_797110_optimized = true;
					return std::make_tuple(_200c454b2_gen_builtin_append_call_expr_model_assign_opt(_81317_same_dest,_81117_dest_expr,_81221_dest_field->_field_kind,_81021_s,_79771_m),_797110_optimized);
				}
				goto _match_end_4885673712;
				_case_end_4885673792:;
				_match_end_4885673712:;
			}
		}
		goto _match_end_4885672176;
		_case_end_4885664848:;
		_match_end_4885672176:;
	}
	_797110_optimized = false;
	return std::make_tuple(_200c454b2_gen_builtin_append_call_expr_model(_79771_m),_797110_optimized);
}



jule::Str _200c454b2_gen_builtin_append_call_expr_model(jule::Ptr<_2188586ea_BuiltinAppendCallExprModel> _82243_m) {
	jule::Str _82313_obj = jule::Str("jule::append(", 13);
	_82313_obj+=_200c454b2_gen_expr_model(_82243_m->_field_dest);
	_82313_obj+=jule::Str(",", 1);
	_82313_obj+=_200c454b2_gen_expr_model(_82243_m->_field_elements);
	_82313_obj+=jule::Str(")", 1);
	return _82313_obj;
}



jule::Str _200c454b2_gen_builtin_clone_call_expr_model(jule::Ptr<_2188586ea_BuiltinCloneCallExprModel> _83142_m) {
	jule::Str _83213_obj = jule::Str("jule::clone(", 12);
	_83213_obj+=_200c454b2_gen_expr_model(_83142_m->_field_expr);
	_83213_obj+=jule::Str(")", 1);
	return _83213_obj;
}



jule::Str _200c454b2_gen_sizeof_expr_model(jule::Ptr<_2188586ea_SizeofExprModel> _83830_m) {
	jule::Str _83913_obj = jule::Str("sizeof(", 7);
	_83913_obj+=_200c454b2_gen_expr(_83830_m->_field_expr);
	_83913_obj+=jule::Str(")", 1);
	return _83913_obj;
}



jule::Str _200c454b2_gen_alignof_expr_model(jule::Ptr<_2188586ea_AlignofExprModel> _84531_m) {
	jule::Str _84613_obj = jule::Str("alignof(", 8);
	_84613_obj+=_200c454b2_gen_expr(_84531_m->_field_expr);
	_84613_obj+=jule::Str(")", 1);
	return _84613_obj;
}



jule::Str _200c454b2_gen_rune_expr_model(jule::Ptr<_2188586ea_RuneExprModel> _85224_m) {
	if (_85224_m->_field_code <= 127LL) {
		jule::Str _85417_b = _200c454b2_sbtoa(static_cast<jule::U8>(_85224_m->_field_code));
		if (_85417_b == jule::Str("'", 1)) {
			_85417_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _85417_b) + jule::Str("'", 1);
	}
	return _200c454b2_i64toa(static_cast<jule::I64>(_85224_m->_field_code));
}



jule::Str _200c454b2_gen_builtin_error_trait_sub_ident_expr_model(jule::Ptr<_2188586ea_BuiltinErrorTraitSubIdentExprModel> _86353_m) {
	jule::Str _86413_obj = _200c454b2_gen_expr_model(_86353_m->_field_expr);
	_86413_obj+=jule::Str(".get().", 7);
	_86413_obj+=jule::Str("_method_", 8);
	_86413_obj+=_86353_m->_field_ident;
	return _86413_obj;
}



jule::Str _200c454b2_gen_struct_static_ident_expr_model(jule::Ptr<_2188586ea_StructStaticIdentExprModel> _87143_m) {
	jule::Str _87213_obj = _1d6c1d84a_struct_ins_out_ident(_87143_m->_field_structure);
	_87213_obj+=jule::Str("::", 2);
	_87213_obj+=_1d6c1d84a_fn_ins_out_ident(_87143_m->_field_method);
	return _87213_obj;
}



jule::Str _200c454b2_gen_integrated_to_str_expr_model(jule::Ptr<_2188586ea_IntegratedToStrExprModel> _87841_m) {
	jule::Str _87913_obj = jule::Str("jule::to_str(", 13);
	_87913_obj+=_200c454b2_gen_expr_model(_87841_m->_field_expr);
	_87913_obj+=jule::Str(")", 1);
	return _87913_obj;
}



jule::Str _200c454b2_gen_ternary_expr_model(jule::Ptr<_2188586ea_TernaryExprModel> _88531_m) {
	jule::Str _88613_obj = jule::Str("((", 2);
	_88613_obj+=_200c454b2_gen_expr_model(_88531_m->_field_condition);
	_88613_obj+=jule::Str(") ? (", 5);
	_88613_obj+=_200c454b2_gen_expr_model(_88531_m->_field_true_expr);
	_88613_obj+=jule::Str(") : (", 5);
	_88613_obj+=_200c454b2_gen_expr_model(_88531_m->_field_false_expr);
	_88613_obj+=jule::Str("))", 2);
	return _88613_obj;
}



jule::Str _200c454b2_gen_expr_model(jule::Any _89623_m) {
	{
		auto _match_expr{ _89623_m };
		if (!(_match_expr.type_is<jule::Ptr<_200d010d9_TypeKind>>())) { goto _case_end_4885727648; }
		_case_begin_4885727648:;
		{
			return _1d6c4a932_gen_type_kind(_89623_m.operator jule::Ptr<_200d010d9_TypeKind>());
		}
		goto _match_end_4885725408;
		_case_end_4885727648:;
		if (!(_match_expr.type_is<jule::Ptr<_1d68bd462_Const>>())) { goto _case_end_4885727744; }
		_case_begin_4885727744:;
		{
			return _200c454b2_gen_const_expr_model(_89623_m.operator jule::Ptr<_1d68bd462_Const>());
		}
		goto _match_end_4885725408;
		_case_end_4885727744:;
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4885727840; }
		_case_begin_4885727840:;
		{
			return _200c454b2_gen_var_expr_model(_89623_m.operator jule::Ptr<_200c58948_Var>());
		}
		goto _match_end_4885725408;
		_case_end_4885727840:;
		if (!(_match_expr.type_is<jule::Ptr<_2185da36c_Trait>>())) { goto _case_end_4885728096; }
		_case_begin_4885728096:;
		{
			return _1d6c1d84a_trait_out_ident(_89623_m.operator jule::Ptr<_2185da36c_Trait>());
		}
		goto _match_end_4885725408;
		_case_end_4885728096:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_Struct>>())) { goto _case_end_4885728192; }
		_case_begin_4885728192:;
		{
			return _200c454b2_gen_struct_expr_model(_89623_m.operator jule::Ptr<_23461aa35_Struct>());
		}
		goto _match_end_4885725408;
		_case_end_4885728192:;
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_StructIns>>())) { goto _case_end_4885728288; }
		_case_begin_4885728288:;
		{
			return _200c454b2_gen_struct_ins_expr_model(_89623_m.operator jule::Ptr<_23461aa35_StructIns>());
		}
		goto _match_end_4885725408;
		_case_end_4885728288:;
		if (!(_match_expr.type_is<jule::Ptr<_2185d51ad_FnIns>>())) { goto _case_end_4885727280; }
		_case_begin_4885727280:;
		{
			return _200c454b2_gen_fn_ins_expr_model_common(_89623_m.operator jule::Ptr<_2185d51ad_FnIns>());
		}
		goto _match_end_4885725408;
		_case_end_4885727280:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BinopExprModel>>())) { goto _case_end_4885727392; }
		_case_begin_4885727392:;
		{
			return _200c454b2_gen_binop_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BinopExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885727392:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_UnaryExprModel>>())) { goto _case_end_4885727504; }
		_case_begin_4885727504:;
		{
			return _200c454b2_gen_unary_expr_model(_89623_m.operator jule::Ptr<_2188586ea_UnaryExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885727504:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructLitExprModel>>())) { goto _case_end_4885726720; }
		_case_begin_4885726720:;
		{
			return _200c454b2_gen_struct_lit_expr_model(_89623_m.operator jule::Ptr<_2188586ea_StructLitExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885726720:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_AllocStructLitExprModel>>())) { goto _case_end_4885726816; }
		_case_begin_4885726816:;
		{
			return _200c454b2_gen_alloc_struct_lit_expr_model(_89623_m.operator jule::Ptr<_2188586ea_AllocStructLitExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885726816:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_CastingExprModel>>())) { goto _case_end_4885726928; }
		_case_begin_4885726928:;
		{
			return _200c454b2_gen_casting_expr_model(_89623_m.operator jule::Ptr<_2188586ea_CastingExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885726928:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_FnCallExprModel>>())) { goto _case_end_4885729040; }
		_case_begin_4885729040:;
		{
			return _200c454b2_gen_fn_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_FnCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729040:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_SliceExprModel>>())) { goto _case_end_4885729136; }
		_case_begin_4885729136:;
		{
			return _200c454b2_gen_slice_expr_model(_89623_m.operator jule::Ptr<_2188586ea_SliceExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729136:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_ArrayExprModel>>())) { goto _case_end_4885729232; }
		_case_begin_4885729232:;
		{
			return _200c454b2_gen_array_expr_model(_89623_m.operator jule::Ptr<_2188586ea_ArrayExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729232:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_IndexigExprModel>>())) { goto _case_end_4885729328; }
		_case_begin_4885729328:;
		{
			return _200c454b2_gen_indexing_expr_model(_89623_m.operator jule::Ptr<_2188586ea_IndexigExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729328:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_AnonFnExprModel>>())) { goto _case_end_4885729424; }
		_case_begin_4885729424:;
		{
			return _200c454b2_gen_anon_fn_expr_model(_89623_m.operator jule::Ptr<_2188586ea_AnonFnExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729424:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_MapExprModel>>())) { goto _case_end_4885729536; }
		_case_begin_4885729536:;
		{
			return _200c454b2_gen_map_expr_model(_89623_m.operator jule::Ptr<_2188586ea_MapExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729536:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_SlicingExprModel>>())) { goto _case_end_4885729648; }
		_case_begin_4885729648:;
		{
			return _200c454b2_gen_slicing_expr_model(_89623_m.operator jule::Ptr<_2188586ea_SlicingExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729648:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_TraitSubIdentExprModel>>())) { goto _case_end_4885729760; }
		_case_begin_4885729760:;
		{
			return _200c454b2_gen_trait_sub_ident_expr_model(_89623_m.operator jule::Ptr<_2188586ea_TraitSubIdentExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729760:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructSubIdentExprModel>>())) { goto _case_end_4885729872; }
		_case_begin_4885729872:;
		{
			return _200c454b2_gen_struct_sub_ident_expr_model(_89623_m.operator jule::Ptr<_2188586ea_StructSubIdentExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729872:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_CommonIdentExprModel>>())) { goto _case_end_4885729984; }
		_case_begin_4885729984:;
		{
			return _200c454b2_gen_common_ident_expr_model(_89623_m.operator jule::Ptr<_2188586ea_CommonIdentExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885729984:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_CommonSubIdentExprModel>>())) { goto _case_end_4885730096; }
		_case_begin_4885730096:;
		{
			return _200c454b2_gen_common_sub_ident_expr_model(_89623_m.operator jule::Ptr<_2188586ea_CommonSubIdentExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730096:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_TupleExprModel>>())) { goto _case_end_4885730208; }
		_case_begin_4885730208:;
		{
			return _200c454b2_gen_tuple_expr_model(_89623_m.operator jule::Ptr<_2188586ea_TupleExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730208:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinOutCallExprModel>>())) { goto _case_end_4885730320; }
		_case_begin_4885730320:;
		{
			return _200c454b2_gen_builtin_out_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinOutCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730320:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinOutlnCallExprModel>>())) { goto _case_end_4885730432; }
		_case_begin_4885730432:;
		{
			return _200c454b2_gen_builtin_outln_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730432:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinNewCallExprModel>>())) { goto _case_end_4885730544; }
		_case_begin_4885730544:;
		{
			return _200c454b2_gen_builtin_new_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinNewCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730544:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinRealCallExprModel>>())) { goto _case_end_4885730656; }
		_case_begin_4885730656:;
		{
			return _200c454b2_gen_builtin_real_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinRealCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730656:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinDropCallExprModel>>())) { goto _case_end_4885730768; }
		_case_begin_4885730768:;
		{
			return _200c454b2_gen_builtin_drop_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinDropCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730768:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>>())) { goto _case_end_4885730880; }
		_case_begin_4885730880:;
		{
			return _200c454b2_gen_builtin_panic_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730880:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinMakeCallExprModel>>())) { goto _case_end_4885730992; }
		_case_begin_4885730992:;
		{
			return _200c454b2_gen_builtin_make_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885730992:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>>())) { goto _case_end_4885731104; }
		_case_begin_4885731104:;
		{
			return _200c454b2_gen_builtin_append_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinAppendCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731104:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinCloneCallExprModel>>())) { goto _case_end_4885731216; }
		_case_begin_4885731216:;
		{
			return _200c454b2_gen_builtin_clone_call_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731216:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_SizeofExprModel>>())) { goto _case_end_4885731328; }
		_case_begin_4885731328:;
		{
			return _200c454b2_gen_sizeof_expr_model(_89623_m.operator jule::Ptr<_2188586ea_SizeofExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731328:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_AlignofExprModel>>())) { goto _case_end_4885731440; }
		_case_begin_4885731440:;
		{
			return _200c454b2_gen_alignof_expr_model(_89623_m.operator jule::Ptr<_2188586ea_AlignofExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731440:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_RuneExprModel>>())) { goto _case_end_4885731552; }
		_case_begin_4885731552:;
		{
			return _200c454b2_gen_rune_expr_model(_89623_m.operator jule::Ptr<_2188586ea_RuneExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731552:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4885731664; }
		_case_begin_4885731664:;
		{
			return _200c454b2_gen_builtin_error_trait_sub_ident_expr_model(_89623_m.operator jule::Ptr<_2188586ea_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731664:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_StructStaticIdentExprModel>>())) { goto _case_end_4885731776; }
		_case_begin_4885731776:;
		{
			return _200c454b2_gen_struct_static_ident_expr_model(_89623_m.operator jule::Ptr<_2188586ea_StructStaticIdentExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731776:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_IntegratedToStrExprModel>>())) { goto _case_end_4885731888; }
		_case_begin_4885731888:;
		{
			return _200c454b2_gen_integrated_to_str_expr_model(_89623_m.operator jule::Ptr<_2188586ea_IntegratedToStrExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885731888:;
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_TernaryExprModel>>())) { goto _case_end_4885732000; }
		_case_begin_4885732000:;
		{
			return _200c454b2_gen_ternary_expr_model(_89623_m.operator jule::Ptr<_2188586ea_TernaryExprModel>());
		}
		goto _match_end_4885725408;
		_case_end_4885732000:;
		_case_begin_4885724208:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4885725408;
		_case_end_4885724208:;
		_match_end_4885725408:;
	}
}



jule::Str _200c454b2_gen_expr(jule::Any _102317_e) {
	jule::Str _102413_obj = _200c454b2_gen_expr_model(_102317_e);
	if (_102413_obj[0LL] != '(') {
		return _102413_obj;
	}
	{
		auto _match_expr{ _102317_e };
		if (!(_match_expr.type_is<jule::Ptr<_2188586ea_BinopExprModel>>())) { goto _case_end_4885787040; }
		_case_begin_4885787040:;
		{
			_102413_obj=_102413_obj.slice(1LL,_102413_obj.len() - 1LL);
		}
		goto _match_end_4885786672;
		_case_end_4885787040:;
		_match_end_4885786672:;
	}
	return _102413_obj;
}



jule::Str _200c454b2_gen_val(jule::Ptr<_218751758_Value> _103616_v) {
	if (_103616_v->_field_data->_method_is_const()) {
		return _200c454b2_gen_const_expr(_103616_v->_field_data);
	}
	return _200c454b2_gen_expr(_103616_v->_field_data->_field_model);
}



jule::Str _200c454b2_get_init_expr(jule::Ptr<_200d010d9_TypeKind> _104322_t) {
	if (_104322_t->_method_ptr() != nullptr) {
		return jule::Str("nullptr", 7);
	}
	jule::Ptr<_2186be3da_Enum> _104813_enm = _104322_t->_method_enm();
	if (_104813_enm != nullptr) {
		return _200c454b2_gen_val(_104813_enm->_field_items[0LL]->_field_value);
	}
	return _1d6c4a932_gen_type_kind(_104322_t) + jule::Str("()", 2);
}



jule::Str _1d6c1e780_get_derive_fn_decl_clone(jule::Ptr<_23461aa35_Struct>& _730_s) {
	jule::Str _813_obj = _1d6c4a932_gen_struct_kind(_730_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



jule::Str _1d6c1e780_get_derive_fn_def_clone(jule::Ptr<_23461aa35_Struct>& _1329_s) {
	jule::Str _1413_obj = _1d6c4a932_gen_struct_kind(_1329_s);
	_1413_obj+=jule::Str(" ", 1) + _1413_obj;
	_1413_obj+=jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



jule::Str _1d6c1d84a_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



jule::Str _1d6c1d84a_as_jt(jule::Str _2814_id) {
	if ((97LL <= _2814_id[0LL]) && (_2814_id[0LL] <= 122LL)) {
		_2814_id[0LL]-=32LL;
	}
	return jule::Str("jule::", 6) + _2814_id;
}



jule::Str _1d6c1d84a_get_addr_as_ident(jule::Uintptr _3622_addr) {
	return jule::Str("_", 1) + _232e766a0_fmt_uint(static_cast<jule::U64>(_3622_addr),15LL);
}



jule::Str _1d6c1d84a_as_out_ident(jule::Str _4517_ident,jule::Uintptr _4529_addr) {
	if (_4529_addr != 0LL) {
		jule::Str _4717_obj = _1d6c1d84a_get_addr_as_ident(_4529_addr);
		_4717_obj+=jule::Str("_", 1);
		_4717_obj+=_4517_ident;
		return _4717_obj;
	}
	return _1d6c1d84a_as_ident(_4517_ident);
}



jule::Str _1d6c1d84a_as_local_ident(jule::Int _6119_row,jule::Int _6129_col,jule::Str _6139_ident) {
	jule::Str _6213_obj = _232e766a0_itoa(_6119_row);
	_6213_obj+=_232e766a0_itoa(_6129_col);
	_6213_obj+=jule::Str("_", 1);
	_6213_obj+=_6139_ident;
	return _1d6c1d84a_as_ident(_6213_obj);
}



jule::Str _1d6c1d84a_fn_out_ident(jule::Ptr<_2185d51ad_Fn>& _7018_f) {
	{
		if (!((_7018_f->_field_cpp_linked))) { goto _case_end_4885817232; }
		_case_begin_4885817232:;
		{
			return _7018_f->_field_ident;
		}
		goto _match_end_4885815088;
		_case_end_4885817232:;
		if (!((_7018_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_4885819008; }
		_case_begin_4885819008:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4885815088;
		_case_end_4885819008:;
		if (!((_7018_f->_method_is_method()))) { goto _case_end_4885819104; }
		_case_begin_4885819104:;
		{
			if (_7018_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7018_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7018_f->_field_ident;
		}
		goto _match_end_4885815088;
		_case_end_4885819104:;
		_case_begin_4885815216:;
		{
			return _1d6c1d84a_as_out_ident(_7018_f->_field_ident,static_cast<jule::Uintptr>(_7018_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4885815088;
		_case_end_4885815216:;
		_match_end_4885815088:;
	}
}



jule::Str _1d6c1d84a_fn_ins_out_ident(jule::Ptr<_2185d51ad_FnIns>& _9026_f) {
	if (_9026_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9026_f->_field_decl->_field_ident;
	}
	if (_9026_f->_field_decl->_field_cpp_linked || (_9026_f->_field_generics.len() == 0LL)) {
		return _1d6c1d84a_fn_out_ident(_9026_f->_field_decl);
	}
	{
		auto expr = _9026_f->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4885826048:;
		if (it != expr.end()) {
			jule::Int _1d6c1d84a_i = it - expr.begin();
			jule::Ptr<_2185d51ad_FnIns> _1d6c1d84a_ins = *it;
			{
				if (_1d6c1d84a_ins->_method_same(_9026_f)) {
					jule::Str _10121_obj = _1d6c1d84a_fn_out_ident(_9026_f->_field_decl);
					_10121_obj+=jule::Str("_", 1);
					_10121_obj+=_232e766a0_itoa(_1d6c1d84a_i);
					return _10121_obj;
				}
			}
			_iter_next_4885826048:;
			++it;
			_1d6c1d84a_i++;
			goto _iter_begin_4885826048;
		}
		_iter_end_4885826048:;
	}
	return jule::Str("__?__", 5);
}



jule::Str _1d6c1d84a_trait_out_ident(jule::Ptr<_2185da36c_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _1d6c1d84a_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



jule::Str _1d6c1d84a_param_out_ident(jule::Ptr<_2185d51ad_Param>& _12021_p) {
	if (_2336ea198_is_anon_ident(_12021_p->_field_ident) || _2336ea198_is_ignore_ident(_12021_p->_field_ident)) {
		return jule::Str();
	}
	return _1d6c1d84a_as_local_ident(_12021_p->_field_token._field_row,_12021_p->_field_token._field_column,_12021_p->_field_ident);
}



jule::Str _1d6c1d84a_struct_out_ident(jule::Ptr<_23461aa35_Struct>& _12822_s) {
	if (_12822_s->_field_cpp_linked) {
		if (_1d6c4a932_has_directive(_12822_s->_field_directives,jule::Str("typedef", 7))) {
			return _12822_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12822_s->_field_ident;
	}
	return _1d6c1d84a_as_out_ident(_12822_s->_field_ident,static_cast<jule::Uintptr>(_12822_s->_field_token._field_file->_method_addr()));
}



jule::Str _1d6c1d84a_struct_ins_out_ident(jule::Ptr<_23461aa35_StructIns>& _13930_s) {
	if (_13930_s->_field_decl->_field_cpp_linked || (_13930_s->_field_generics.len() == 0LL)) {
		return _1d6c1d84a_struct_out_ident(_13930_s->_field_decl);
	}
	{
		auto expr = _13930_s->_field_decl->_field_instances;
		auto it = expr.begin();
		_iter_begin_4885844608:;
		if (it != expr.end()) {
			jule::Int _1d6c1d84a_i = it - expr.begin();
			jule::Ptr<_23461aa35_StructIns> _1d6c1d84a_ins = *it;
			{
				if (_1d6c1d84a_ins->_method_same(_13930_s)) {
					jule::Str _14621_obj = _1d6c1d84a_struct_out_ident(_13930_s->_field_decl);
					_14621_obj+=jule::Str("_", 1);
					_14621_obj+=_232e766a0_itoa(_1d6c1d84a_i);
					return _14621_obj;
				}
			}
			_iter_next_4885844608:;
			++it;
			_1d6c1d84a_i++;
			goto _iter_begin_4885844608;
		}
		_iter_end_4885844608:;
	}
	return jule::Str("__?__", 5);
}



jule::Str _1d6c1d84a_field_out_ident(jule::Ptr<_23461aa35_Field>& _15721_f) {
	if (_15721_f->_field_owner->_field_cpp_linked) {
		return _15721_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15721_f->_field_ident;
}



jule::Str _1d6c1d84a_var_out_ident(jule::Ptr<_200c58948_Var> _16522_v) {
	{
		if (!((_16522_v->_field_cpp_linked))) { goto _case_end_4885853344; }
		_case_begin_4885853344:;
		{
			return _16522_v->_field_ident;
		}
		goto _match_end_4885850624;
		_case_end_4885853344:;
		if (!((_16522_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_4885854928; }
		_case_begin_4885854928:;
		{
			if (_16522_v->_field_kind->_field_kind->_method_sptr() != nullptr) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4885850624;
		_case_end_4885854928:;
		if (!((_16522_v->_field_scope != nullptr))) { goto _case_end_4885855024; }
		_case_begin_4885855024:;
		{
			return _1d6c1d84a_as_local_ident(_16522_v->_field_token._field_row,_16522_v->_field_token._field_column,_16522_v->_field_ident);
		}
		goto _match_end_4885850624;
		_case_end_4885855024:;
		_case_begin_4885850784:;
		{
			return _1d6c1d84a_as_out_ident(_16522_v->_field_ident,static_cast<jule::Uintptr>(_16522_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4885850624;
		_case_end_4885850784:;
		_match_end_4885850624:;
	}
}



jule::Str _1d6c1d84a_iter_begin_label_ident(jule::Uintptr _18527_it) {
	return jule::Str("_iter_begin_", 12) + _232e766a0_itoa(static_cast<jule::Int>(_18527_it));
}



jule::Str _1d6c1d84a_iter_end_label_ident(jule::Uintptr _19025_it) {
	return jule::Str("_iter_end_", 10) + _232e766a0_itoa(static_cast<jule::Int>(_19025_it));
}



jule::Str _1d6c1d84a_iter_next_label_ident(jule::Uintptr _19526_it) {
	return jule::Str("_iter_next_", 11) + _232e766a0_itoa(static_cast<jule::Int>(_19526_it));
}



jule::Str _1d6c1d84a_label_ident(jule::Str _20016_ident) {
	return jule::Str("_julec_label_", 13) + _20016_ident;
}



jule::Str _1d6c1d84a_match_end_label_ident(jule::Uintptr _20526_m) {
	return jule::Str("_match_end_", 11) + _232e766a0_itoa(static_cast<jule::Int>(_20526_m));
}



jule::Str _1d6c1d84a_case_begin_label_ident(jule::Uintptr _21027_c) {
	return jule::Str("_case_begin_", 12) + _232e766a0_itoa(static_cast<jule::Int>(_21027_c));
}



jule::Str _1d6c1d84a_case_end_label_ident(jule::Uintptr _21525_c) {
	return jule::Str("_case_end_", 10) + _232e766a0_itoa(static_cast<jule::Int>(_21525_c));
}



jule::Bool _1d6c4a932_any_equals_0(jule::Ptr<_200c58948_Var>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ptr<_200c58948_Var>>())) { goto _case_end_4885685040; }
		_case_begin_4885685040:;
		{
			return _2619_first == _2631_other.operator jule::Ptr<_200c58948_Var>();
		}
		goto _match_end_4885683344;
		_case_end_4885685040:;
		_case_begin_4885683152:;
		{
			return false;
		}
		goto _match_end_4885683344;
		_case_end_4885683152:;
		_match_end_4885683344:;
	}
}

jule::Bool _1d6c4a932_any_equals_1(jule::Ptr<_23461aa35_FieldIns>& _2619_first,jule::Any& _2631_other) {
	{
		auto _match_expr{ _2631_other };
		if (!(_match_expr.type_is<jule::Ptr<_23461aa35_FieldIns>>())) { goto _case_end_4885696640; }
		_case_begin_4885696640:;
		{
			return _2619_first == _2631_other.operator jule::Ptr<_23461aa35_FieldIns>();
		}
		goto _match_end_4885694944;
		_case_end_4885696640:;
		_case_begin_4885694752:;
		{
			return false;
		}
		goto _match_end_4885694944;
		_case_end_4885694752:;
		_match_end_4885694944:;
	}
}



jule::Ptr<_233464770_Directive> _1d6c4a932_find_directive(jule::Slice<jule::Ptr<_233464770_Directive>>& _3424_directives,jule::Str _3455_tag) {
	{
		auto expr = _3424_directives;
		auto it = expr.begin();
		_iter_begin_4885868640:;
		if (it != expr.end()) {
			jule::Ptr<_233464770_Directive> _1d6c4a932_dr = *it;
			{
				if (_1d6c4a932_dr->_field_tag == _3455_tag) {
					return _1d6c4a932_dr;
				}
			}
			_iter_next_4885868640:;
			++it;
			goto _iter_begin_4885868640;
		}
		_iter_end_4885868640:;
	}
	return nullptr;
}



jule::Bool _1d6c4a932_has_directive(jule::Slice<jule::Ptr<_233464770_Directive>>& _4419_directives,jule::Str _4450_tag) {
	return _1d6c4a932_find_directive((*((&(_4419_directives)))),_4450_tag) != nullptr;
}



jule::Str _1d6c4a932_gen_prim_kind(jule::Ptr<_200d010d9_Prim> _4918_p) {
	return _1d6c1d84a_as_jt(_4918_p->_method_to_str());
}



jule::Str _1d6c4a932_gen_tuple_kind(jule::Ptr<_200d010d9_Tuple> _5423_t) {
	jule::Str _5513_obj = jule::Str("std::tuple<", 11);
	{
		auto expr = _5423_t->_field_types;
		auto it = expr.begin();
		_iter_begin_4885877152:;
		if (it != expr.end()) {
			jule::Ptr<_200d010d9_TypeKind> _1d6c4a932_tk = *it;
			{
				_5513_obj+=_1d6c4a932_gen_type_kind(_1d6c4a932_tk);
				_5513_obj+=jule::Str(",", 1);
			}
			_iter_next_4885877152:;
			++it;
			goto _iter_begin_4885877152;
		}
		_iter_end_4885877152:;
	}
	_5513_obj=_5513_obj.slice(0LL,_5513_obj.len() - 1LL);
	_5513_obj+=jule::Str(">", 1);
	return _5513_obj;
}



jule::Str _1d6c4a932_as_sptr_kind(jule::Str _6617_elem) {
	jule::Str _6713_obj = _1d6c1d84a_as_jt(jule::Str("ptr", 3));
	_6713_obj+=jule::Str("<", 1);
	_6713_obj+=_6617_elem;
	_6713_obj+=jule::Str(">", 1);
	return _6713_obj;
}



jule::Str _1d6c4a932_gen_sptr_kind(jule::Ptr<_200d010d9_Sptr> _7522_sptr) {
	return _1d6c4a932_as_sptr_kind(_1d6c4a932_gen_type_kind(_7522_sptr->_field_elem));
}



jule::Str _1d6c4a932_gen_ptr_kind(jule::Ptr<_200d010d9_Ptr> _8021_p) {
	
	if (_8021_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _8613_elem = _1d6c4a932_gen_type_kind(_8021_p->_field_elem);
	_8613_elem+=jule::Str("*", 1);
	return _8613_elem;
}



jule::Str _1d6c4a932_gen_enum_kind(jule::Ptr<_2186be3da_Enum> _9222_e) {
	return _1d6c4a932_gen_type_kind(_9222_e->_field_kind->_field_kind);
}



jule::Str _1d6c4a932_as_slice_kind(jule::Ptr<_200d010d9_TypeKind> _9622_elem) {
	jule::Str _9713_obj = _1d6c1d84a_as_jt(jule::Str("slice", 5));
	_9713_obj+=jule::Str("<", 1);
	_9713_obj+=_1d6c4a932_gen_type_kind(_9622_elem);
	_9713_obj+=jule::Str(">", 1);
	return _9713_obj;
}



jule::Str _1d6c4a932_gen_slice_kind(jule::Ptr<_200d010d9_Slc> _10523_s) {
	return _1d6c4a932_as_slice_kind(_10523_s->_field_elem);
}



jule::Str _1d6c4a932_gen_map_kind(jule::Ptr<_200d010d9_Map> _11021_m) {
	jule::Str _11113_obj = _1d6c1d84a_as_jt(jule::Str("map", 3));
	_11113_obj+=jule::Str("<", 1);
	_11113_obj+=_1d6c4a932_gen_type_kind(_11021_m->_field_key);
	_11113_obj+=jule::Str(",", 1);
	_11113_obj+=_1d6c4a932_gen_type_kind(_11021_m->_field_val);
	_11113_obj+=jule::Str(">", 1);
	return _11113_obj;
}



jule::Str _1d6c4a932_gen_trait_kind_from_ident(jule::Str _12030_ident) {
	jule::Str _12113_obj = _1d6c1d84a_as_jt(jule::Str("trait", 5));
	_12113_obj+=jule::Str("<", 1);
	_12113_obj+=_12030_ident;
	_12113_obj+=jule::Str(">", 1);
	return _12113_obj;
}



jule::Str _1d6c4a932_gen_trait_kind(jule::Ptr<_2185da36c_Trait> _12919_t) {
	jule::Str _1309_ident = _1d6c1d84a_trait_out_ident(_12919_t);
	return _1d6c4a932_gen_trait_kind_from_ident(_1309_ident);
}



jule::Str _1d6c4a932_gen_struct_kind(jule::Ptr<_23461aa35_Struct> _13520_s) {
	jule::Str _13613_rep = jule::Str();
	if (_13520_s->_field_cpp_linked && (!(_1d6c4a932_has_directive(_13520_s->_field_directives,jule::Str("typedef", 7))))) {
		_13613_rep+=jule::Str("struct ", 7);
	}
	_13613_rep+=_1d6c1d84a_struct_out_ident(_13520_s);
	return _13613_rep;
}



jule::Str _1d6c4a932_gen_struct_kind_ins(jule::Ptr<_23461aa35_StructIns> _14628_s) {
	if (_14628_s->_field_decl->_field_cpp_linked) {
		jule::Str _14817_ident = _1d6c1d84a_struct_ins_out_ident(_14628_s);
		if (_14628_s->_field_generics.len() > 0LL) {
			_14817_ident+=jule::Str("<", 1);
			{
				auto expr = _14628_s->_field_generics;
				auto it = expr.begin();
				_iter_begin_4885907200:;
				if (it != expr.end()) {
					jule::Ptr<_200d010d9_TypeKind> _1d6c4a932_g = *it;
					{
						_14817_ident+=_1d6c4a932_gen_type_kind(_1d6c4a932_g);
						_14817_ident+=jule::Str(",", 1);
					}
					_iter_next_4885907200:;
					++it;
					goto _iter_begin_4885907200;
				}
				_iter_end_4885907200:;
			}
			_14817_ident=_14817_ident.slice(0LL,_14817_ident.len() - 1LL);
			_14817_ident+=jule::Str(">", 1);
		}
		jule::Ptr<_233464770_Directive> _15813_d = _1d6c4a932_find_directive(_14628_s->_field_decl->_field_directives,jule::Str("namespace", 9));
		if (_15813_d != nullptr) {
			_14817_ident=(_200c454b2_concat_all_parts(_15813_d->_field_args) + jule::Str("::", 2)) + _14817_ident;
		}
		return _14817_ident;
	}
	return _1d6c1d84a_struct_ins_out_ident(_14628_s);
}



jule::Str _1d6c4a932_gen_array_kind(jule::Ptr<_200d010d9_Arr> _16823_a) {
	jule::Str _16913_obj = _1d6c1d84a_as_jt(jule::Str("array", 5));
	_16913_obj+=jule::Str("<", 1);
	_16913_obj+=_1d6c4a932_gen_type_kind(_16823_a->_field_elem);
	_16913_obj+=jule::Str(",", 1);
	_16913_obj+=_232e766a0_itoa(_16823_a->_field_n);
	_16913_obj+=jule::Str(">", 1);
	return _16913_obj;
}



jule::Str _1d6c4a932_gen_fn_anon_decl(jule::Ptr<_2185d51ad_FnIns> _17825_f) {
	jule::Str _17913_decl = _1d6c4a2c2_gen_fn_ins_result(_17825_f);
	_17913_decl+=jule::Str("(", 1);
	if (_17825_f->_field_params.len() > 0LL) {
		{
			auto expr = _17825_f->_field_params;
			auto it = expr.begin();
			_iter_begin_4885919536:;
			if (it != expr.end()) {
				jule::Ptr<_2185d51ad_ParamIns> _1d6c4a932_param = *it;
				{
					if (_1d6c4a932_param->_field_decl->_method_is_self()) {
						goto _iter_next_4885919536;
					}
					_17913_decl+=_1d6c4a2c2_gen_param_ins_prototype(_1d6c4a932_param);
					_17913_decl+=jule::Str(",", 1);
				}
				_iter_next_4885919536:;
				++it;
				goto _iter_begin_4885919536;
			}
			_iter_end_4885919536:;
		}
		_17913_decl=_17913_decl.slice(0LL,_17913_decl.len() - 1LL);
	} else {
		_17913_decl+=jule::Str("void", 4);
	}
	_17913_decl+=jule::Str(")", 1);
	return _17913_decl;
}



jule::Str _1d6c4a932_gen_fn_kind(jule::Ptr<_2185d51ad_FnIns> _20120_f) {
	jule::Str _20213_obj = _1d6c1d84a_as_jt(jule::Str("fn", 2));
	_20213_obj+=jule::Str("<", 1);
	_20213_obj+=_1d6c4a932_gen_fn_anon_decl(_20120_f);
	_20213_obj+=jule::Str(">", 1);
	return _20213_obj;
}



jule::Str _1d6c4a932_gen_type_kind(jule::Ptr<_200d010d9_TypeKind> _21022_k) {
	{
		if (!((_21022_k->_method_cpp_linked()))) { goto _case_end_4885928512; }
		_case_begin_4885928512:;
		{
			return _21022_k->_field_cpp_ident;
		}
		goto _match_end_4885926576;
		_case_end_4885928512:;
		if (!((_21022_k->_method_prim() != nullptr))) { goto _case_end_4885928608; }
		_case_begin_4885928608:;
		{
			return _1d6c4a932_gen_prim_kind(_21022_k->_method_prim());
		}
		goto _match_end_4885926576;
		_case_end_4885928608:;
		if (!((_21022_k->_method_tup() != nullptr))) { goto _case_end_4885928704; }
		_case_begin_4885928704:;
		{
			return _1d6c4a932_gen_tuple_kind(_21022_k->_method_tup());
		}
		goto _match_end_4885926576;
		_case_end_4885928704:;
		if (!((_21022_k->_method_sptr() != nullptr))) { goto _case_end_4885927728; }
		_case_begin_4885927728:;
		{
			return _1d6c4a932_gen_sptr_kind(_21022_k->_method_sptr());
		}
		goto _match_end_4885926576;
		_case_end_4885927728:;
		if (!((_21022_k->_method_ptr() != nullptr))) { goto _case_end_4885927824; }
		_case_begin_4885927824:;
		{
			return _1d6c4a932_gen_ptr_kind(_21022_k->_method_ptr());
		}
		goto _match_end_4885926576;
		_case_end_4885927824:;
		if (!((_21022_k->_method_enm() != nullptr))) { goto _case_end_4885927920; }
		_case_begin_4885927920:;
		{
			return _1d6c4a932_gen_enum_kind(_21022_k->_method_enm());
		}
		goto _match_end_4885926576;
		_case_end_4885927920:;
		if (!((_21022_k->_method_slc() != nullptr))) { goto _case_end_4885927056; }
		_case_begin_4885927056:;
		{
			return _1d6c4a932_gen_slice_kind(_21022_k->_method_slc());
		}
		goto _match_end_4885926576;
		_case_end_4885927056:;
		if (!((_21022_k->_method_map() != nullptr))) { goto _case_end_4885927152; }
		_case_begin_4885927152:;
		{
			return _1d6c4a932_gen_map_kind(_21022_k->_method_map());
		}
		goto _match_end_4885926576;
		_case_end_4885927152:;
		if (!((_21022_k->_method_trt() != nullptr))) { goto _case_end_4885927248; }
		_case_begin_4885927248:;
		{
			return _1d6c4a932_gen_trait_kind(_21022_k->_method_trt());
		}
		goto _match_end_4885926576;
		_case_end_4885927248:;
		if (!((_21022_k->_method_strct() != nullptr))) { goto _case_end_4885927344; }
		_case_begin_4885927344:;
		{
			return _1d6c4a932_gen_struct_kind_ins(_21022_k->_method_strct());
		}
		goto _match_end_4885926576;
		_case_end_4885927344:;
		if (!((_21022_k->_method_arr() != nullptr))) { goto _case_end_4885928848; }
		_case_begin_4885928848:;
		{
			return _1d6c4a932_gen_array_kind(_21022_k->_method_arr());
		}
		goto _match_end_4885926576;
		_case_end_4885928848:;
		if (!((_21022_k->_method_fnc() != nullptr))) { goto _case_end_4885928944; }
		_case_begin_4885928944:;
		{
			return _1d6c4a932_gen_fn_kind(_21022_k->_method_fnc());
		}
		goto _match_end_4885926576;
		_case_end_4885928944:;
		_case_begin_4885926768:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4885926576;
		_case_end_4885926768:;
		_match_end_4885926576:;
	}
}



void _1d6c4a2c2_add_indent(void) {
	_1d6c4a2c2_INDENT=jule::append(_1d6c4a2c2_INDENT,jule::Slice<jule::U8>({9LLU}));
}



void _1d6c4a2c2_done_indent(void) {
	_1d6c4a2c2_INDENT=_1d6c4a2c2_INDENT.slice(0LL,_1d6c4a2c2_INDENT.len() - 1LL);
}



jule::Str _1d6c4a2c2_indent(void) {
	return static_cast<jule::Str>(_1d6c4a2c2_INDENT);
}



jule::Bool _1d6c4a2c2_is_cpp_header_file(jule::Str _6723_path) {
	jule::Int _689_offset = _6723_path.rfind(jule::Str(".", 1));
	if (_689_offset == -1LL) {
		return false;
	}
	return _231e4edb6_is_valid_header_ext(_6723_path.slice(_689_offset));
}



jule::Str _1d6c4a2c2_gen_links(jule::Ptr<_23301cea5_IR>& _7619_ir) {
	jule::Str _7713_obj = jule::Str();
	{
		auto expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4885952592:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_pkg = *it;
			{
				{
					if (!(((!(_1d6c4a2c2_pkg->_field_cpp_linked))))) { goto _case_end_4885954288; }
					_case_begin_4885954288:;
					{
						goto _iter_next_4885952592;
					}
					goto _match_end_4885954064;
					_case_end_4885954288:;
					if (!((_231e4edb6_is_std_header_path(_1d6c4a2c2_pkg->_field_path)))) { goto _case_end_4885954400; }
					_case_begin_4885954400:;
					{
						_7713_obj+=jule::Str("#include ", 9);
						_7713_obj+=_1d6c4a2c2_pkg->_field_path;
						_7713_obj+=jule::Str("\n", 1);
					}
					goto _match_end_4885954064;
					_case_end_4885954400:;
					_match_end_4885954064:;
				}
			}
			_iter_next_4885952592:;
			++it;
			goto _iter_begin_4885952592;
		}
		_iter_end_4885952592:;
	}
	{
		auto expr = _7619_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4885957072:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_pkg = *it;
			{
				{
					if (!(((!(_1d6c4a2c2_pkg->_field_cpp_linked))))) { goto _case_end_4885958192; }
					_case_begin_4885958192:;
					{
						goto _iter_next_4885957072;
					}
					goto _match_end_4885953648;
					_case_end_4885958192:;
					if (!((_1d6c4a2c2_is_cpp_header_file(_1d6c4a2c2_pkg->_field_path)))) { goto _case_end_4885958304; }
					_case_begin_4885958304:;
					{
						_7713_obj+=jule::Str("#include \"", 10);
						_7713_obj+=_1d6c4a2c2_pkg->_field_path;
						_7713_obj+=jule::Str("\"\n", 2);
					}
					goto _match_end_4885953648;
					_case_end_4885958304:;
					_match_end_4885953648:;
				}
			}
			_iter_next_4885957072:;
			++it;
			goto _iter_begin_4885957072;
		}
		_iter_end_4885957072:;
	}
	return _7713_obj;
}



jule::Str _1d6c4a2c2_gen_fn_result(jule::Ptr<_2185d51ad_Fn>& _10523_f) {
	if (_10523_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1d6c4a932_gen_type_kind(_10523_f->_field_result->_field_kind->_field_kind);
}



jule::Str _1d6c4a2c2_gen_fn_ins_result(jule::Ptr<_2185d51ad_FnIns>& _11327_f) {
	if (_11327_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _1d6c4a932_gen_type_kind(_11327_f->_field_result);
}



jule::Str _1d6c4a2c2_gen_param_prototype(jule::Ptr<_2185d51ad_Param>& _12129_p) {
	jule::Str _12213_obj = jule::Str();
	if (_12129_p->_field_variadic) {
		_12213_obj+=_1d6c1d84a_as_jt(jule::Str("slice", 5));
		_12213_obj+=jule::Str("<", 1);
		_12213_obj+=_1d6c4a932_gen_type_kind(_12129_p->_field_kind->_field_kind);
		_12213_obj+=jule::Str(">", 1);
	} else {
		_12213_obj+=_1d6c4a932_gen_type_kind(_12129_p->_field_kind->_field_kind);
	}
	return _12213_obj;
}



jule::Str _1d6c4a2c2_gen_param_ins(jule::Ptr<_2185d51ad_ParamIns>& _13523_p) {
	jule::Str _13613_obj = _1d6c4a2c2_gen_param_ins_prototype(_13523_p);
	_13613_obj+=jule::Str(" ", 1);
	_13613_obj+=_1d6c1d84a_param_out_ident(_13523_p->_field_decl);
	return _13613_obj;
}



jule::Str _1d6c4a2c2_gen_param_ins_prototype(jule::Ptr<_2185d51ad_ParamIns>& _14333_p) {
	jule::Str _14413_obj = jule::Str();
	if (_14333_p->_field_decl->_field_variadic) {
		_14413_obj+=_1d6c1d84a_as_jt(jule::Str("slice", 5));
		_14413_obj+=jule::Str("<", 1);
		_14413_obj+=_1d6c4a932_gen_type_kind(_14333_p->_field_kind);
		_14413_obj+=jule::Str(">", 1);
	} else {
		_14413_obj+=_1d6c4a932_gen_type_kind(_14333_p->_field_kind);
	}
	if (_14333_p->_field_decl->_field_reference) {
		_14413_obj+=jule::Str("&", 1);
	}
	return _14413_obj;
}



jule::Str _1d6c4a2c2_gen_param(jule::Ptr<_2185d51ad_Param>& _16219_p) {
	jule::Str _16313_obj = _1d6c4a2c2_gen_param_prototype(_16219_p);
	if (((_16219_p->_field_ident != jule::Str()) && (!(_2336ea198_is_ignore_ident(_16219_p->_field_ident)))) && (!(_2336ea198_is_anon_ident(_16219_p->_field_ident)))) {
		_16313_obj+=jule::Str(" ", 1);
		_16313_obj+=_1d6c1d84a_param_out_ident(_16219_p);
	}
	return _16313_obj;
}



jule::Str _1d6c4a2c2_gen_params(jule::Slice<jule::Ptr<_2185d51ad_Param>>& _17220_params) {
	{
		if (!((_17220_params.len() == 0LL))) { goto _case_end_4885983136; }
		_case_begin_4885983136:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4885982912;
		_case_end_4885983136:;
		if (!(((_17220_params.len() == 1LL) && _17220_params[0LL]->_method_is_self()))) { goto _case_end_4885983248; }
		_case_begin_4885983248:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4885982912;
		_case_end_4885983248:;
		_match_end_4885982912:;
	}
	jule::Str _18113_obj = jule::Str("(", 1);
	{
		auto expr = _17220_params;
		auto it = expr.begin();
		_iter_begin_4885986448:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Param> _1d6c4a2c2_p = *it;
			{
				if ((!(_1d6c4a2c2_p->_method_is_self()))) {
					_18113_obj+=_1d6c4a2c2_gen_param(_1d6c4a2c2_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4885986448:;
			++it;
			goto _iter_begin_4885986448;
		}
		_iter_end_4885986448:;
	}
	_18113_obj=_18113_obj.slice(0LL,_18113_obj.len() - 1LL);
	return _18113_obj + jule::Str(")", 1);
}



jule::Str _1d6c4a2c2_gen_params_ins(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>& _19324_params) {
	{
		if (!((_19324_params.len() == 0LL))) { goto _case_end_4885987760; }
		_case_begin_4885987760:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4885990800;
		_case_end_4885987760:;
		if (!(((_19324_params.len() == 1LL) && _19324_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4885991360; }
		_case_begin_4885991360:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4885990800;
		_case_end_4885991360:;
		_match_end_4885990800:;
	}
	jule::Str _20213_obj = jule::Str("(", 1);
	{
		auto expr = _19324_params;
		auto it = expr.begin();
		_iter_begin_4885994672:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _1d6c4a2c2_p = *it;
			{
				if ((!(_1d6c4a2c2_p->_field_decl->_method_is_self()))) {
					_20213_obj+=_1d6c4a2c2_gen_param_ins(_1d6c4a2c2_p) + jule::Str(",", 1);
				}
			}
			_iter_next_4885994672:;
			++it;
			goto _iter_begin_4885994672;
		}
		_iter_end_4885994672:;
	}
	_20213_obj=_20213_obj.slice(0LL,_20213_obj.len() - 1LL);
	return _20213_obj + jule::Str(")", 1);
}



jule::Str _1d6c4a2c2_gen_params_prototypes(jule::Slice<jule::Ptr<_2185d51ad_ParamIns>>& _21531_params) {
	{
		if (!((_21531_params.len() == 0LL))) { goto _case_end_4885996848; }
		_case_begin_4885996848:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4885996256;
		_case_end_4885996848:;
		if (!(((_21531_params.len() == 1LL) && _21531_params[0LL]->_field_decl->_method_is_self()))) { goto _case_end_4885999776; }
		_case_begin_4885999776:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4885996256;
		_case_end_4885999776:;
		_match_end_4885996256:;
	}
	jule::Str _22413_obj = jule::Str("(", 1);
	{
		auto expr = _21531_params;
		auto it = expr.begin();
		_iter_begin_4886003776:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_ParamIns> _1d6c4a2c2_p = *it;
			{
				if ((!(_1d6c4a2c2_p->_field_decl->_method_is_self()))) {
					_22413_obj+=_1d6c4a2c2_gen_param_ins_prototype(_1d6c4a2c2_p);
					_22413_obj+=jule::Str(",", 1);
				}
			}
			_iter_next_4886003776:;
			++it;
			goto _iter_begin_4886003776;
		}
		_iter_end_4886003776:;
	}
	_22413_obj=_22413_obj.slice(0LL,_22413_obj.len() - 1LL);
	return _22413_obj + jule::Str(")", 1);
}



jule::Str _1d6c4a2c2_gen_trait(jule::Ptr<_2185da36c_Trait>& _23819_t) {
	
	jule::Str _2409_outid = _1d6c1d84a_trait_out_ident(_23819_t);
	jule::Str _24213_obj = jule::Str("struct ", 7);
	_24213_obj+=_2409_outid;
	_24213_obj+=jule::Str(" {\n", 3);
	_24213_obj+=jule::Str("\t", 1);
	_24213_obj+=jule::Str("virtual ~", 9);
	_24213_obj+=_2409_outid;
	_24213_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto expr = _23819_t->_field_methods;
		auto it = expr.begin();
		_iter_begin_4886010448:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1d6c4a2c2_f = *it;
			{
				_24213_obj+=jule::Str("\t", 1);
				_24213_obj+=jule::Str("virtual ", 8);
				_24213_obj+=_1d6c4a2c2_gen_fn_result(_1d6c4a2c2_f);
				_24213_obj+=jule::Str(" _method_", 9);
				_24213_obj+=_1d6c4a2c2_f->_field_ident;
				_24213_obj+=_1d6c4a2c2_gen_params(_1d6c4a2c2_f->_field_params);
				_24213_obj+=jule::Str(" {", 2);
				if ((!(_1d6c4a2c2_f->_method_is_void()))) {
					_24213_obj+=jule::Str(" return {}; ", 12);
				}
				_24213_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4886010448:;
			++it;
			goto _iter_begin_4886010448;
		}
		_iter_end_4886010448:;
	}
	_24213_obj+=jule::Str("};", 2);
	return _24213_obj;
}



jule::Str _1d6c4a2c2_gen_traits_tbl(jule::Ptr<_218737b7e_SymbolTable>& _26724_tbl) {
	jule::Str _26813_obj = jule::Str();
	{
		auto expr = _26724_tbl->_field_traits;
		auto it = expr.begin();
		_iter_begin_4886018624:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _1d6c4a2c2_t = *it;
			{
				_26813_obj+=_1d6c4a2c2_gen_trait(_1d6c4a2c2_t);
				_26813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4886018624:;
			++it;
			goto _iter_begin_4886018624;
		}
		_iter_end_4886018624:;
	}
	return _26813_obj;
}



jule::Str _1d6c4a2c2_gen_traits_pkg(jule::Ptr<_218848bd5_Package>& _27724_pkg) {
	jule::Str _27813_obj = jule::Str();
	{
		auto expr = _27724_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4886022112:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1d6c4a2c2_tbl = *it;
			{
				_27813_obj+=_1d6c4a2c2_gen_traits_tbl(_1d6c4a2c2_tbl);
			}
			_iter_next_4886022112:;
			++it;
			goto _iter_begin_4886022112;
		}
		_iter_end_4886022112:;
	}
	return _27813_obj;
}



jule::Str _1d6c4a2c2_gen_traits(jule::Ptr<_23301cea5_IR>& _28620_ir) {
	jule::Str _28713_obj = jule::Str();
	{
		auto expr = _28620_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4886025408:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_u = *it;
			{
				if ((!(_1d6c4a2c2_u->_field_cpp_linked))) {
					_28713_obj+=_1d6c4a2c2_gen_traits_pkg(_1d6c4a2c2_u->_field_package);
				}
			}
			_iter_next_4886025408:;
			++it;
			goto _iter_begin_4886025408;
		}
		_iter_end_4886025408:;
	}
	_28713_obj+=_1d6c4a2c2_gen_traits_pkg(_28620_ir->_field_main);
	return _28713_obj;
}



jule::Str _1d6c4a2c2_gen_trait_prototype(jule::Ptr<_2185da36c_Trait>& _29825_t) {
	jule::Str _29913_obj = jule::Str("struct ", 7);
	_29913_obj+=_1d6c1d84a_trait_out_ident(_29825_t);
	_29913_obj+=jule::Str(";", 1);
	return _29913_obj;
}



jule::Str _1d6c4a2c2_gen_trait_prototypes(jule::Ptr<_218848bd5_Package>& _30630_p) {
	jule::Str _30713_obj = jule::Str();
	{
		auto expr = _30630_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4886032304:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1d6c4a2c2_f = *it;
			{
				{
					auto expr = _1d6c4a2c2_f->_field_traits;
					auto it = expr.begin();
					_iter_begin_4886034128:;
					if (it != expr.end()) {
						jule::Ptr<_2185da36c_Trait> _1d6c4a2c2_t = *it;
						{
							if (_1d6c4a2c2_t->_field_token._field_id != 0LLU) {
								_30713_obj+=_1d6c4a2c2_gen_trait_prototype(_1d6c4a2c2_t);
								_30713_obj+=jule::Str("\n", 1);
							}
						}
						_iter_next_4886034128:;
						++it;
						goto _iter_begin_4886034128;
					}
					_iter_end_4886034128:;
				}
			}
			_iter_next_4886032304:;
			++it;
			goto _iter_begin_4886032304;
		}
		_iter_end_4886032304:;
	}
	return _30713_obj;
}



jule::Str _1d6c4a2c2_gen_struct_plain_prototype(jule::Ptr<_23461aa35_Struct>& _32036_s) {
	jule::Str _32113_obj = jule::Str();
	{
		auto expr = _32036_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4886033312:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_StructIns> _1d6c4a2c2_ins = *it;
			{
				_32113_obj+=jule::Str("\nstruct ", 8);
				_32113_obj+=_1d6c1d84a_struct_ins_out_ident(_1d6c4a2c2_ins);
				_32113_obj+=jule::Str(";", 1);
				_32113_obj+=jule::Str("\n", 1);
			}
			_iter_next_4886033312:;
			++it;
			goto _iter_begin_4886033312;
		}
		_iter_end_4886033312:;
	}
	return _32113_obj;
}



jule::Str _1d6c4a2c2_gen_struct_plain_prototypes(jule::Slice<jule::Ptr<_23461aa35_Struct>>& _33237_structs) {
	jule::Str _33313_obj = jule::Str();
	{
		auto expr = _33237_structs;
		auto it = expr.begin();
		_iter_begin_4886041360:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1d6c4a2c2_s = *it;
			{
				if ((!(_1d6c4a2c2_s->_field_cpp_linked)) && (_1d6c4a2c2_s->_field_token._field_id != 0LLU)) {
					_33313_obj+=_1d6c4a2c2_gen_struct_plain_prototype(_1d6c4a2c2_s);
					_33313_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4886041360:;
			++it;
			goto _iter_begin_4886041360;
		}
		_iter_end_4886041360:;
	}
	return _33313_obj;
}



jule::Str _1d6c4a2c2_gen_struct_traits(jule::Ptr<_23461aa35_Struct>& _34423_s) {
	if (_34423_s->_field_implements.len() == 0LL) {
		return jule::Str();
	}
	jule::Str _34913_obj = jule::Str(": ", 2);
	{
		auto expr = _34423_s->_field_implements;
		auto it = expr.begin();
		_iter_begin_4886047328:;
		if (it != expr.end()) {
			jule::Ptr<_2185da36c_Trait> _1d6c4a2c2_i = *it;
			{
				_34913_obj+=jule::Str("public ", 7);
				_34913_obj+=_1d6c1d84a_trait_out_ident(_1d6c4a2c2_i);
				_34913_obj+=jule::Str(",", 1);
			}
			_iter_next_4886047328:;
			++it;
			goto _iter_begin_4886047328;
		}
		_iter_end_4886047328:;
	}
	_34913_obj=_34913_obj.slice(0LL,_34913_obj.len() - 1LL);
	return _34913_obj;
}



jule::Str _1d6c4a2c2_gen_field_decl(jule::Ptr<_23461aa35_FieldIns>& _36024_f) {
	jule::Str _36113_obj = _1d6c4a932_gen_type_kind(_36024_f->_field_kind);
	_36113_obj+=jule::Str(" ", 1);
	_36113_obj+=_1d6c1d84a_field_out_ident(_36024_f->_field_decl);
	_36113_obj+=jule::Str("{", 1);
	_36113_obj+=_200c454b2_get_init_expr(_36024_f->_field_kind);
	_36113_obj+=jule::Str("}", 1);
	_36113_obj+=jule::Str(";", 1);
	return _36113_obj;
}



jule::Str _1d6c4a2c2_gen_struct_self_field_type_kind(jule::Ptr<_23461aa35_StructIns>& _37141_s) {
	return _1d6c4a932_as_sptr_kind(_1d6c4a932_gen_struct_kind_ins(_37141_s));
}



jule::Str _1d6c4a2c2_gen_struct_self_field(jule::Ptr<_23461aa35_StructIns>& _37631_s) {
	jule::Str _37713_obj = _1d6c4a2c2_gen_struct_self_field_type_kind(_37631_s);
	_37713_obj+=jule::Str(" self{};", 8);
	return _37713_obj;
}



jule::Str _1d6c4a2c2_gen_struct_self_field_init_st(jule::Ptr<_23461aa35_StructIns>& _38239_s) {
	jule::Str _38313_obj = jule::Str("this->self = ", 13);
	_38313_obj+=_1d6c4a2c2_gen_struct_self_field_type_kind(_38239_s);
	_38313_obj+=jule::Str("::make(this, nullptr);", 22);
	return _38313_obj;
}



jule::Str _1d6c4a2c2_gen_struct_constructor(jule::Ptr<_23461aa35_StructIns>& _38932_s) {
	jule::Str _39013_obj = _1d6c1d84a_struct_ins_out_ident(_38932_s);
	_39013_obj+=jule::Str("(", 1);
	if (_38932_s->_field_fields.len() > 0LL) {
		{
			auto expr = _38932_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4886062192:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _1d6c4a2c2_f = *it;
				{
					_39013_obj+=_1d6c4a932_gen_type_kind(_1d6c4a2c2_f->_field_kind);
					_39013_obj+=jule::Str(" __param_", 9);
					_39013_obj+=_1d6c4a2c2_f->_field_decl->_field_ident;
					_39013_obj+=jule::Str(", ", 2);
				}
				_iter_next_4886062192:;
				++it;
				goto _iter_begin_4886062192;
			}
			_iter_end_4886062192:;
		}
		_39013_obj=_39013_obj.slice(0LL,_39013_obj.len() - 2LL);
	} else {
		_39013_obj+=jule::Str("void", 4);
	}
	_39013_obj+=jule::Str(")", 1);
	if (_38932_s->_field_fields.len() > 0LL) {
		_39013_obj+=jule::Str(": ", 2);
		{
			auto expr = _38932_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4886066768:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _1d6c4a2c2_f = *it;
				{
					_39013_obj+=_1d6c1d84a_field_out_ident(_1d6c4a2c2_f->_field_decl);
					_39013_obj+=jule::Str("(", 1);
					_39013_obj+=jule::Str("__param_", 8);
					_39013_obj+=_1d6c4a2c2_f->_field_decl->_field_ident;
					_39013_obj+=jule::Str("), ", 3);
				}
				_iter_next_4886066768:;
				++it;
				goto _iter_begin_4886066768;
			}
			_iter_end_4886066768:;
		}
		_39013_obj=_39013_obj.slice(0LL,_39013_obj.len() - 2LL);
	}
	_39013_obj+=jule::Str(" {", 2);
	if (_38932_s->_field_decl->_method_has_ref_accessible()) {
		_39013_obj+=jule::Str("\n", 1);
		_1d6c4a2c2_add_indent();
		_39013_obj+=_1d6c4a2c2_indent();
		_39013_obj+=_1d6c4a2c2_gen_struct_self_field_init_st(_38932_s);
		_39013_obj+=jule::Str("\n", 1);
		_1d6c4a2c2_done_indent();
		_39013_obj+=jule::Str("\n", 1);
		_39013_obj+=_1d6c4a2c2_indent();
	}
	_39013_obj+=jule::Str("}", 1);
	return _39013_obj;
}



jule::Str _1d6c4a2c2_gen_struct_destructor(jule::Ptr<_23461aa35_StructIns>& _43331_s) {
	jule::Bool _4349_disposed = _43331_s->_field_decl->_method_is_implements(_1d67e4c4b_BUILTIN_TRAIT_DISPOSE);
	jule::Bool _4359_ref_access = _43331_s->_field_decl->_method_has_ref_accessible();
	if ((!(_4359_ref_access)) && (!(_4349_disposed))) {
		return jule::Str();
	}
	jule::Str _44113_obj = jule::Str("~", 1);
	_44113_obj+=_1d6c1d84a_struct_ins_out_ident(_43331_s);
	_44113_obj+=jule::Str("(void) { ", 9);
	if (_4349_disposed) {
		jule::Ptr<_2185d51ad_Fn> _44613_dispose_method = _43331_s->_method_find_method(jule::Str("dispose", 7),false);
		_44113_obj+=jule::Str("this->", 6);
		_44113_obj+=_1d6c1d84a_fn_out_ident(_44613_dispose_method);
		_44113_obj+=jule::Str("(); ", 4);
	}
	if (_4359_ref_access) {
		_44113_obj+=jule::Str("this->self.ref = nullptr; ", 26);
	}
	_44113_obj+=jule::Str("}", 1);
	return _44113_obj;
}



jule::Str _1d6c4a2c2_gen_struct_operators(jule::Ptr<_23461aa35_StructIns>& _46030_s) {
	jule::Str _4619_out_ident = _1d6c1d84a_struct_ins_out_ident(_46030_s);
	jule::Str _46213_obj = jule::Str();
	_46213_obj+=_1d6c4a2c2_indent();
	if ((*(_231e64150_OPT_INLINE))) {
		_46213_obj+=jule::Str("inline ", 7);
	}
	_46213_obj+=jule::Str("bool operator==(const ", 22);
	_46213_obj+=_4619_out_ident;
	_46213_obj+=jule::Str(" &_Src) const {", 15);
	if (_46030_s->_field_fields.len() > 0LL) {
		_1d6c4a2c2_add_indent();
		_46213_obj+=jule::Str("\n", 1);
		_46213_obj+=_1d6c4a2c2_indent();
		_46213_obj+=jule::Str("return ", 7);
		_1d6c4a2c2_add_indent();
		jule::Int _47717_n = 0LL;
		{
			auto expr = _46030_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4886091120:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _1d6c4a2c2_f = *it;
				{
					jule::Ptr<_23461aa35_StructIns> _48017_strct = _1d6c4a2c2_f->_field_kind->_method_strct();
					if (((_48017_strct != nullptr) && (_48017_strct->_field_decl != nullptr)) && _48017_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_4886091120;
					}
					(_47717_n)++;
					_46213_obj+=jule::Str("\n", 1);
					_46213_obj+=_1d6c4a2c2_indent();
					_46213_obj+=jule::Str("this->", 6);
					jule::Str _48917_f_ident = _1d6c1d84a_field_out_ident(_1d6c4a2c2_f->_field_decl);
					_46213_obj+=_48917_f_ident;
					_46213_obj+=jule::Str(" == _Src.", 9);
					_46213_obj+=_48917_f_ident;
					_46213_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4886091120:;
				++it;
				goto _iter_begin_4886091120;
			}
			_iter_end_4886091120:;
		}
		_1d6c4a2c2_done_indent();
		if (_47717_n > 0LL) {
			_46213_obj=_46213_obj.slice(0LL,_46213_obj.len() - 3LL);
		} else {
			_46213_obj+=jule::Str("true", 4);
		}
		_46213_obj+=jule::Str(";\n", 2);
		_1d6c4a2c2_done_indent();
		_46213_obj+=_1d6c4a2c2_indent();
		_46213_obj+=jule::Str("}", 1);
	} else {
		_46213_obj+=jule::Str(" return true; }", 15);
	}
	_46213_obj+=jule::Str("\n\n", 2);
	_46213_obj+=_1d6c4a2c2_indent();
	if ((*(_231e64150_OPT_INLINE))) {
		_46213_obj+=jule::Str("inline ", 7);
	}
	_46213_obj+=jule::Str("bool operator!=(const ", 22);
	_46213_obj+=_4619_out_ident;
	_46213_obj+=jule::Str(" &_Src) const { return !this->operator==(_Src); }", 49);
	return _46213_obj;
}



jule::Str _1d6c4a2c2_gen_struct_derive_defs_prototypes(jule::Ptr<_23461aa35_StructIns>& _51939_s) {
	jule::Str _52013_obj = jule::Str();
	if (_51939_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_52013_obj+=_1d6c4a2c2_indent();
		_52013_obj+=_1d6c1e780_get_derive_fn_decl_clone(_51939_s->_field_decl);
		_52013_obj+=jule::Str(";\n\n", 3);
	}
	return _52013_obj;
}



jule::Str _1d6c4a2c2_gen_struct_ins_prototype(jule::Ptr<_23461aa35_StructIns>& _53134_s) {
	jule::Str _53213_obj = jule::Str("struct ", 7);
	jule::Str _5339_out_ident = _1d6c1d84a_struct_ins_out_ident(_53134_s);
	_53213_obj+=_5339_out_ident;
	_53213_obj+=_1d6c4a2c2_gen_struct_traits(_53134_s->_field_decl);
	_53213_obj+=jule::Str(" {\n", 3);
	jule::Bool _5399_ref_access = _53134_s->_field_decl->_method_has_ref_accessible();
	_1d6c4a2c2_add_indent();
	if (_5399_ref_access) {
		_53213_obj+=_1d6c4a2c2_indent();
		_53213_obj+=_1d6c4a2c2_gen_struct_self_field(_53134_s);
		_53213_obj+=jule::Str("\n\n", 2);
	}
	if (_53134_s->_field_fields.len() > 0LL) {
		{
			auto expr = _53134_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4886114208:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _1d6c4a2c2_f = *it;
				{
					_53213_obj+=_1d6c4a2c2_indent();
					_53213_obj+=_1d6c4a2c2_gen_field_decl(_1d6c4a2c2_f);
					_53213_obj+=jule::Str("\n", 1);
				}
				_iter_next_4886114208:;
				++it;
				goto _iter_begin_4886114208;
			}
			_iter_end_4886114208:;
		}
		_53213_obj+=jule::Str("\n\n", 2);
		_53213_obj+=_1d6c4a2c2_indent();
		_53213_obj+=_1d6c4a2c2_gen_struct_constructor(_53134_s);
		_53213_obj+=jule::Str("\n\n", 2);
	}
	_53213_obj+=_1d6c4a2c2_indent();
	_53213_obj+=_1d6c4a2c2_gen_struct_destructor(_53134_s);
	_53213_obj+=jule::Str("\n\n", 2);
	_53213_obj+=_1d6c4a2c2_indent();
	_53213_obj+=_5339_out_ident;
	if (_5399_ref_access) {
		_53213_obj+=jule::Str("(void) { ", 9);
		_53213_obj+=_1d6c4a2c2_gen_struct_self_field_init_st(_53134_s);
		_53213_obj+=jule::Str(" }\n\n", 4);
	} else {
		_53213_obj+=jule::Str("(void) = default;\n\n", 19);
	}
	{
		auto expr = _53134_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4886120416:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1d6c4a2c2_f = *it;
			{
				_53213_obj+=_1d6c4a2c2_gen_fn_prototype(_1d6c4a2c2_f,true);
				_53213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4886120416:;
			++it;
			goto _iter_begin_4886120416;
		}
		_iter_end_4886120416:;
	}
	_53213_obj+=_1d6c4a2c2_gen_struct_derive_defs_prototypes(_53134_s);
	_53213_obj+=_1d6c4a2c2_gen_struct_operators(_53134_s);
	_53213_obj+=jule::Str("\n", 1);
	_1d6c4a2c2_done_indent();
	_53213_obj+=_1d6c4a2c2_indent() + jule::Str("};", 2);
	return _53213_obj;
}



jule::Str _1d6c4a2c2_gen_struct_prototype(jule::Ptr<_23461aa35_Struct>& _59030_s) {
	jule::Str _59113_obj = jule::Str();
	{
		auto expr = _59030_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4886125648:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_StructIns> _1d6c4a2c2_ins = *it;
			{
				_59113_obj+=_1d6c4a2c2_gen_struct_ins_prototype(_1d6c4a2c2_ins);
				_59113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4886125648:;
			++it;
			goto _iter_begin_4886125648;
		}
		_iter_end_4886125648:;
	}
	return _59113_obj;
}



jule::Str _1d6c4a2c2_gen_struct_prototypes(jule::Slice<jule::Ptr<_23461aa35_Struct>>& _60031_structs) {
	jule::Str _60113_obj = jule::Str();
	{
		auto expr = _60031_structs;
		auto it = expr.begin();
		_iter_begin_4886128816:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1d6c4a2c2_s = *it;
			{
				if ((!(_1d6c4a2c2_s->_field_cpp_linked)) && (_1d6c4a2c2_s->_field_token._field_id != 0LLU)) {
					_60113_obj+=_1d6c4a2c2_gen_struct_prototype(_1d6c4a2c2_s);
					_60113_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4886128816:;
			++it;
			goto _iter_begin_4886128816;
		}
		_iter_end_4886128816:;
	}
	return _60113_obj;
}



jule::Str _1d6c4a2c2_gen_fn_decl_head(jule::Ptr<_2185d51ad_FnIns>& _61126_f,jule::Bool _61137_method) {
	jule::Str _61213_obj = jule::Str();
	if (_61137_method && _61126_f->_field_decl->_field_statically) {
		_61213_obj+=jule::Str("static ", 7);
	}
	if ((*(_231e64150_OPT_INLINE)) && (!(_61126_f->_field_decl->_method_is_entry_point()))) {
		_61213_obj+=jule::Str("inline ", 7);
	}
	_61213_obj+=_1d6c4a2c2_gen_fn_ins_result(_61126_f) + jule::Str(" ", 1);
	if ((!(_61137_method)) && (_61126_f->_field_decl->_field_owner != nullptr)) {
		_61213_obj+=_1d6c1d84a_struct_ins_out_ident(_61126_f->_field_owner);
		_61213_obj+=jule::Str("::", 2);
	}
	_61213_obj+=_1d6c1d84a_fn_ins_out_ident(_61126_f);
	return _61213_obj;
}



jule::Str _1d6c4a2c2_gen_fn_prototype(jule::Ptr<_2185d51ad_Fn>& _63326_f,jule::Bool _63334_method) {
	jule::Str _63413_obj = jule::Str();
	{
		auto expr = _63326_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4886142016:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_FnIns> _1d6c4a2c2_c = *it;
			{
				_63413_obj+=_1d6c4a2c2_indent();
				_63413_obj+=_1d6c4a2c2_gen_fn_decl_head(_1d6c4a2c2_c,_63334_method);
				_63413_obj+=_1d6c4a2c2_gen_params_prototypes(_1d6c4a2c2_c->_field_params);
				_63413_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4886142016:;
			++it;
			goto _iter_begin_4886142016;
		}
		_iter_end_4886142016:;
	}
	return _63413_obj;
}



jule::Str _1d6c4a2c2_gen_fn_prototypes(jule::Ptr<_218848bd5_Package>& _64527_pkg) {
	jule::Str _64613_obj = jule::Str();
	{
		auto expr = _64527_pkg->_field_files;
		auto it = expr.begin();
		_iter_begin_4886146704:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1d6c4a2c2_file = *it;
			{
				{
					auto expr = _1d6c4a2c2_file->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4886148528:;
					if (it != expr.end()) {
						jule::Ptr<_2185d51ad_Fn> _1d6c4a2c2_f = *it;
						{
							if ((!(_1d6c4a2c2_f->_field_cpp_linked)) && (_1d6c4a2c2_f->_field_token._field_id != 0LLU)) {
								_64613_obj+=_1d6c4a2c2_gen_fn_prototype(_1d6c4a2c2_f,false);
							}
						}
						_iter_next_4886148528:;
						++it;
						goto _iter_begin_4886148528;
					}
					_iter_end_4886148528:;
				}
			}
			_iter_next_4886146704:;
			++it;
			goto _iter_begin_4886146704;
		}
		_iter_end_4886146704:;
	}
	return _64613_obj;
}



jule::Str _1d6c4a2c2_gen_prototypes(jule::Ptr<_23301cea5_IR>& _65824_ir) {
	jule::Str _65913_obj = jule::Str();
	{
		auto expr = _65824_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4886152480:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_u = *it;
			{
				if ((!(_1d6c4a2c2_u->_field_cpp_linked))) {
					_65913_obj+=_1d6c4a2c2_gen_trait_prototypes(_1d6c4a2c2_u->_field_package);
				}
			}
			_iter_next_4886152480:;
			++it;
			goto _iter_begin_4886152480;
		}
		_iter_end_4886152480:;
	}
	_65913_obj+=_1d6c4a2c2_gen_trait_prototypes(_65824_ir->_field_main);
	_65913_obj+=_1d6c4a2c2_gen_struct_plain_prototypes(_65824_ir->_field_ordered._field_structs);
	_65913_obj+=_1d6c4a2c2_gen_traits(_65824_ir);
	_65913_obj+=jule::Str("\n", 1);
	_65913_obj+=_1d6c4a2c2_gen_struct_prototypes(_65824_ir->_field_ordered._field_structs);
	{
		auto expr = _65824_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4886157680:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_u = *it;
			{
				if ((!(_1d6c4a2c2_u->_field_cpp_linked))) {
					_65913_obj+=_1d6c4a2c2_gen_fn_prototypes(_1d6c4a2c2_u->_field_package);
				}
			}
			_iter_next_4886157680:;
			++it;
			goto _iter_begin_4886157680;
		}
		_iter_end_4886157680:;
	}
	_65913_obj+=_1d6c4a2c2_gen_fn_prototypes(_65824_ir->_field_main);
	return _65913_obj;
}



jule::Str _1d6c4a2c2_gen_var_init_expr(jule::Ptr<_200c58948_Var>& _68727_v,jule::Str _68736_init) {
	jule::Str _68813_obj = jule::Str();
	if (_68727_v->_field_statically) {
		_68813_obj+=jule::Str("static ", 7);
	}
	_68813_obj+=_1d6c4a932_gen_type_kind(_68727_v->_field_kind->_field_kind);
	_68813_obj+=jule::Str(" ", 1);
	if (_68727_v->_field_reference) {
		_68813_obj+=jule::Str("&", 1);
	}
	_68813_obj+=_1d6c1d84a_var_out_ident(_68727_v);
	if (_68736_init != jule::Str()) {
		_68813_obj+=jule::Str(" = ", 3);
		_68813_obj+=_68736_init;
	}
	_68813_obj+=jule::Str(";", 1);
	return _68813_obj;
}



jule::Str _1d6c4a2c2_gen_var(jule::Ptr<_200c58948_Var> _70816_v) {
	if (_2336ea198_is_ignore_ident(_70816_v->_field_ident)) {
		return jule::Str();
	}
	if ((_70816_v->_field_value != nullptr) && (_70816_v->_field_value->_field_expr != nullptr)) {
		if (_70816_v->_field_value->_field_data->_field_model != nullptr) {
			return _1d6c4a2c2_gen_var_init_expr(_70816_v,_200c454b2_gen_val(_70816_v->_field_value));
		}
		return _1d6c4a2c2_gen_var_init_expr(_70816_v,jule::Str());
	}
	return _1d6c4a2c2_gen_var_init_expr(_70816_v,_200c454b2_get_init_expr(_70816_v->_field_kind->_field_kind));
}



jule::Str _1d6c4a2c2_gen_globals(jule::Slice<jule::Ptr<_200c58948_Var>>& _72321_globals) {
	jule::Str _72413_obj = jule::Str();
	{
		auto expr = _72321_globals;
		auto it = expr.begin();
		_iter_begin_4886174464:;
		if (it != expr.end()) {
			jule::Ptr<_200c58948_Var> _1d6c4a2c2_v = *it;
			{
				if (_1d6c4a2c2_v->_field_token._field_id != 0LLU) {
					_72413_obj+=_1d6c4a2c2_gen_var(_1d6c4a2c2_v);
					_72413_obj+=jule::Str("\n", 1);
				}
			}
			_iter_next_4886174464:;
			++it;
			goto _iter_begin_4886174464;
		}
		_iter_end_4886174464:;
	}
	return _72413_obj;
}



jule::Str _1d6c4a2c2_gen_fn(jule::Ptr<_2185d51ad_Fn>& _73716_f) {
	jule::Str _73813_obj = jule::Str();
	{
		auto expr = _73716_f->_field_instances;
		auto it = expr.begin();
		_iter_begin_4886178880:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_FnIns> _1d6c4a2c2_ins = *it;
			{
				_73813_obj+=_1d6c4a2c2_gen_fn_decl_head(_1d6c4a2c2_ins,false);
				_73813_obj+=_1d6c4a2c2_gen_params_ins(_1d6c4a2c2_ins->_field_params);
				_73813_obj+=jule::Str(" ", 1);
				_73813_obj+=_200ad0429_gen_fn_scope(_1d6c4a2c2_ins);
				_73813_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4886178880:;
			++it;
			goto _iter_begin_4886178880;
		}
		_iter_end_4886178880:;
	}
	return _73813_obj;
}



jule::Str _1d6c4a2c2_gen_pkg_fns(jule::Ptr<_218848bd5_Package>& _75021_p) {
	jule::Str _75113_obj = jule::Str();
	{
		auto expr = _75021_p->_field_files;
		auto it = expr.begin();
		_iter_begin_4886183456:;
		if (it != expr.end()) {
			jule::Ptr<_218737b7e_SymbolTable> _1d6c4a2c2_f = *it;
			{
				{
					auto expr = _1d6c4a2c2_f->_field_funcs;
					auto it = expr.begin();
					_iter_begin_4886185280:;
					if (it != expr.end()) {
						jule::Ptr<_2185d51ad_Fn> _1d6c4a2c2_f = *it;
						{
							if ((!(_1d6c4a2c2_f->_field_cpp_linked)) && (_1d6c4a2c2_f->_field_token._field_id != 0LLU)) {
								_75113_obj+=_1d6c4a2c2_gen_fn(_1d6c4a2c2_f);
								_75113_obj+=jule::Str("\n\n", 2);
							}
						}
						_iter_next_4886185280:;
						++it;
						goto _iter_begin_4886185280;
					}
					_iter_end_4886185280:;
				}
			}
			_iter_next_4886183456:;
			++it;
			goto _iter_begin_4886183456;
		}
		_iter_end_4886183456:;
	}
	return _75113_obj;
}



jule::Str _1d6c4a2c2_gen_struct_method_defs(jule::Ptr<_23461aa35_StructIns>& _76432_s) {
	jule::Str _76513_obj = jule::Str();
	{
		auto expr = _76432_s->_field_methods;
		auto it = expr.begin();
		_iter_begin_4886189456:;
		if (it != expr.end()) {
			jule::Ptr<_2185d51ad_Fn> _1d6c4a2c2_f = *it;
			{
				_76513_obj+=_1d6c4a2c2_indent();
				_76513_obj+=_1d6c4a2c2_gen_fn(_1d6c4a2c2_f);
				_76513_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4886189456:;
			++it;
			goto _iter_begin_4886189456;
		}
		_iter_end_4886189456:;
	}
	return _76513_obj;
}



jule::Str _1d6c4a2c2_gen_struct_ostream(jule::Ptr<_23461aa35_StructIns>& _77528_s) {
	jule::Str _77613_obj = jule::Str();
	_77613_obj+=_1d6c4a2c2_indent();
	_77613_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_77613_obj+=_1d6c1d84a_struct_ins_out_ident(_77528_s);
	_77613_obj+=jule::Str(" &_Src) {\n", 10);
	_1d6c4a2c2_add_indent();
	_77613_obj+=_1d6c4a2c2_indent();
	_77613_obj+=jule::Str("_Stream << \"", 12);
	_77613_obj+=_77528_s->_field_decl->_field_ident;
	_77613_obj+=jule::Str("{\";\n", 4);
	{
		auto expr = _77528_s->_field_fields;
		auto it = expr.begin();
		_iter_begin_4886194624:;
		if (it != expr.end()) {
			jule::Int _1d6c4a2c2_i = it - expr.begin();
			jule::Ptr<_23461aa35_FieldIns> _1d6c4a2c2_f = *it;
			{
				_77613_obj+=_1d6c4a2c2_indent();
				_77613_obj+=jule::Str("_Stream << \"", 12);
				_77613_obj+=_1d6c4a2c2_f->_field_decl->_field_ident;
				_77613_obj+=jule::Str(":", 1);
				jule::Ptr<_23461aa35_StructIns> _79413_strct = _1d6c4a2c2_f->_field_kind->_method_strct();
				if (((_79413_strct != nullptr) && (_79413_strct->_field_decl != nullptr)) && _79413_strct->_field_decl->_field_cpp_linked) {
					_77613_obj+=jule::Str(" cpp.", 5);
					_77613_obj+=_1d6c1d84a_field_out_ident(_1d6c4a2c2_f->_field_decl);
					_77613_obj+=jule::Str("\"", 1);
				} else {
					_77613_obj+=jule::Str("\" << _Src.", 10);
					_77613_obj+=_1d6c1d84a_field_out_ident(_1d6c4a2c2_f->_field_decl);
				}
				if ((_1d6c4a2c2_i + 1LL) < _77528_s->_field_fields.len()) {
					_77613_obj+=jule::Str(" << \", \"", 8);
				}
				_77613_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4886194624:;
			++it;
			_1d6c4a2c2_i++;
			goto _iter_begin_4886194624;
		}
		_iter_end_4886194624:;
	}
	_77613_obj+=_1d6c4a2c2_indent();
	_77613_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_77613_obj+=_1d6c4a2c2_indent();
	_77613_obj+=jule::Str("return _Stream;\n", 16);
	_1d6c4a2c2_done_indent();
	_77613_obj+=_1d6c4a2c2_indent();
	_77613_obj+=jule::Str("}", 1);
	return _77613_obj;
}



jule::Str _1d6c4a2c2_gen_struct_derive_defs(jule::Ptr<_23461aa35_StructIns>& _81932_s) {
	jule::Str _82013_obj = jule::Str();
	if (_81932_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_82013_obj+=_1d6c4a2c2_indent();
		_82013_obj+=_1d6c1e780_get_derive_fn_def_clone(_81932_s->_field_decl);
		_82013_obj+=jule::Str("{\n", 2);
		_1d6c4a2c2_add_indent();
		_82013_obj+=_1d6c4a2c2_indent();
		_82013_obj+=_1d6c4a932_gen_struct_kind_ins(_81932_s);
		_82013_obj+=jule::Str(" clone;\n", 8);
		{
			auto expr = _81932_s->_field_fields;
			auto it = expr.begin();
			_iter_begin_4886211520:;
			if (it != expr.end()) {
				jule::Ptr<_23461aa35_FieldIns> _1d6c4a2c2_f = *it;
				{
					jule::Str _83117_ident = _1d6c1d84a_field_out_ident(_1d6c4a2c2_f->_field_decl);
					_82013_obj+=_1d6c4a2c2_indent();
					_82013_obj+=jule::Str("clone.", 6);
					_82013_obj+=_83117_ident;
					_82013_obj+=jule::Str(" = jule::clone(this->", 21);
					_82013_obj+=_83117_ident;
					_82013_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4886211520:;
				++it;
				goto _iter_begin_4886211520;
			}
			_iter_end_4886211520:;
		}
		_82013_obj+=_1d6c4a2c2_indent();
		_82013_obj+=jule::Str("return clone;\n", 14);
		_1d6c4a2c2_done_indent();
		_82013_obj+=_1d6c4a2c2_indent();
		_82013_obj+=jule::Str("}", 1);
	}
	return _82013_obj;
}



jule::Str _1d6c4a2c2_gen_struct_ins(jule::Ptr<_23461aa35_StructIns>& _85124_s) {
	jule::Str _85213_obj = _1d6c4a2c2_gen_struct_method_defs(_85124_s);
	_85213_obj+=jule::Str("\n\n", 2);
	_85213_obj+=_1d6c4a2c2_gen_struct_derive_defs(_85124_s);
	_85213_obj+=jule::Str("\n\n", 2);
	_85213_obj+=_1d6c4a2c2_gen_struct_ostream(_85124_s);
	return _85213_obj;
}



jule::Str _1d6c4a2c2_gen_struct(jule::Ptr<_23461aa35_Struct>& _86120_s) {
	jule::Str _86213_obj = jule::Str();
	{
		auto expr = _86120_s->_field_instances;
		auto it = expr.begin();
		_iter_begin_4886221600:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_StructIns> _1d6c4a2c2_ins = *it;
			{
				_86213_obj+=_1d6c4a2c2_gen_struct_ins(_1d6c4a2c2_ins);
				_86213_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4886221600:;
			++it;
			goto _iter_begin_4886221600;
		}
		_iter_end_4886221600:;
	}
	return _86213_obj;
}



jule::Str _1d6c4a2c2_gen_structs(jule::Slice<jule::Ptr<_23461aa35_Struct>>& _87121_structs) {
	jule::Str _87213_obj = jule::Str();
	{
		auto expr = _87121_structs;
		auto it = expr.begin();
		_iter_begin_4886224768:;
		if (it != expr.end()) {
			jule::Ptr<_23461aa35_Struct> _1d6c4a2c2_s = *it;
			{
				if ((!(_1d6c4a2c2_s->_field_cpp_linked)) && (_1d6c4a2c2_s->_field_token._field_id != 0LLU)) {
					_87213_obj+=_1d6c4a2c2_gen_struct(_1d6c4a2c2_s);
					_87213_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4886224768:;
			++it;
			goto _iter_begin_4886224768;
		}
		_iter_end_4886224768:;
	}
	return _87213_obj;
}



jule::Str _1d6c4a2c2_gen_fns(jule::Ptr<_23301cea5_IR>& _88317_ir) {
	jule::Str _88413_obj = jule::Str();
	{
		auto expr = _88317_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4886229664:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_u = *it;
			{
				if ((!(_1d6c4a2c2_u->_field_cpp_linked))) {
					_88413_obj+=_1d6c4a2c2_gen_pkg_fns(_1d6c4a2c2_u->_field_package);
				}
			}
			_iter_next_4886229664:;
			++it;
			goto _iter_begin_4886229664;
		}
		_iter_end_4886229664:;
	}
	_88413_obj+=_1d6c4a2c2_gen_pkg_fns(_88317_ir->_field_main);
	return _88413_obj;
}



void _1d6c4a2c2_push_init(jule::Ptr<_218848bd5_Package>& _89619_pkg,jule::Str& _89639_obj) {
	
	
	jule::Ptr<_2185d51ad_Fn> _9009_f = _89619_pkg->_method_find_fn(jule::Str("init", 4),false);
	if (_9009_f == nullptr) {
		return;
	}
	_89639_obj+=jule::Str("\n\t", 2);
	_89639_obj+=_1d6c1d84a_fn_out_ident(_9009_f);
	_89639_obj+=jule::Str("();", 3);
}



jule::Str _1d6c4a2c2_gen_init_caller(jule::Ptr<_23301cea5_IR>& _91125_ir) {
	jule::Str _91213_obj = jule::Str("void ", 5);
	_91213_obj+=jule::Str("__jule_call_initializers", 24);
	_91213_obj+=jule::Str("(void) {", 8);
	{
		auto expr = _91125_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4886240528:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _1d6c4a2c2_u = *it;
			{
				if ((!(_1d6c4a2c2_u->_field_cpp_linked))) {
					_1d6c4a2c2_push_init(_1d6c4a2c2_u->_field_package,_91213_obj);
				}
			}
			_iter_next_4886240528:;
			++it;
			goto _iter_begin_4886240528;
		}
		_iter_end_4886240528:;
	}
	_1d6c4a2c2_push_init(_91125_ir->_field_main,_91213_obj);
	_91213_obj+=jule::Str("\n}", 2);
	return _91213_obj;
}



void _1d6c4a2c2_append_standard(jule::Str& _92729_obj_code,jule::Str _92744_compiler,jule::Str _92759_compiler_cmd) {
	_1d6d86650_AbsTime _9289_time = _1d6d86650_Time::_static_method_now()._method_abs();
	jule::Str _93013_time_str = jule::Str();
	_93013_time_str+=_232e766a0_fmt_uint(_9289_time._field_day,10LL);
	_93013_time_str+=jule::Str("/", 1);
	_93013_time_str+=_232e766a0_fmt_uint(_9289_time._field_month,10LL);
	_93013_time_str+=jule::Str("/", 1);
	_93013_time_str+=_232e766a0_fmt_uint(_9289_time._field_year,10LL);
	_93013_time_str+=jule::Str(" ", 1);
	_93013_time_str+=_232e766a0_fmt_uint(_9289_time._field_hour,10LL);
	_93013_time_str+=jule::Str(".", 1);
	_93013_time_str+=_232e766a0_fmt_uint(_9289_time._field_minute,10LL);
	_93013_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM) UTC", 25);
	jule::Str _94213_s = jule::Str();
	_94213_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_94213_s+=jule::Str("// JuleC version: ", 18);
	_94213_s+=jule::Str("beta 0.0.5 @master", 18);
	_94213_s+=jule::Str("\n", 1);
	_94213_s+=jule::Str("// Date: ", 9);
	_94213_s+=_93013_time_str;
	_94213_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_94213_s+=_92744_compiler;
	_94213_s+=jule::Str(" ", 1);
	_94213_s+=_92759_compiler_cmd;
	_94213_s+=jule::Str("\n\n#include \"", 12);
	_94213_s+=_231e881a7_PATH_API;
	_94213_s+=jule::Str("\"\n\n", 3);
	_94213_s+=_92729_obj_code;
	_94213_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n    std::set_terminate(&jule::terminate_handler);\n    jule::set_sig_handler(jule::signal_handler);\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    entry_point();\n\n    return EXIT_SUCCESS;\n}", 290);
	_92729_obj_code=_94213_s;
}



jule::Str _1d6c4a2c2_gen(jule::Ptr<_23301cea5_IR>& _97617_ir) {
	jule::Str _97713_obj = jule::Str();
	_97713_obj+=_1d6c4a2c2_gen_links(_97617_ir);
	_97713_obj+=jule::Str("\n", 1);
	_97713_obj+=_1d6c4a2c2_gen_prototypes(_97617_ir);
	_97713_obj+=jule::Str("\n\n", 2);
	_97713_obj+=_1d6c4a2c2_gen_globals(_97617_ir->_field_ordered._field_globals);
	_97713_obj+=jule::Str("\n", 1);
	_97713_obj+=_1d6c4a2c2_gen_structs(_97617_ir->_field_ordered._field_structs);
	_97713_obj+=_1d6c4a2c2_gen_fns(_97617_ir);
	_97713_obj+=jule::Str("\n", 1);
	_97713_obj+=_1d6c4a2c2_gen_init_caller(_97617_ir);
	_97713_obj+=jule::Str("\n", 1);
	return _97713_obj;
}



jule::Str _231dc6612_str_repeat(jule::Str _3015_sub,jule::Int _3029_n) {
	if (_3029_n == 0LL) {
		return jule::Str();
	}
	jule::Str _3513_s = jule::Str();
	for (; _3029_n > 0LL; (_3029_n)--) {
		{
			_3513_s+=_3015_sub;
		}
	_iter_next_4886524064:;
	}
	_iter_end_4886524064:;
	return _3513_s;
}



void _231dc6612_print_error_message(jule::Str _4224_msg) {
	jule::outln(_4224_msg);
}



void _231dc6612_help(jule::Slice<jule::Str>& _4510_args) {
	if (_4510_args.len() > 2LL) {
		_231dc6612_print_error_message(jule::Str("invalid command: ", 17) + _4510_args[2LL]);
		return;
	}
	jule::I64 _5113_max = _231dc6612_HELP_MAP[0LL][0LL].len();
	{
		auto expr = _231dc6612_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4886531376:;
		if (it != expr.end()) {
			jule::Array<jule::Str,2> _231dc6612_k = *it;
			{
				jule::I64 _5313_n = _231dc6612_k[0LL].len();
				if (_5313_n > _5113_max) {
					_5113_max=_5313_n;
				}
			}
			_iter_next_4886531376:;
			++it;
			goto _iter_begin_4886531376;
		}
		_iter_end_4886531376:;
	}
	jule::Str _5913_s = jule::Str();
	
	{
		auto expr = _231dc6612_HELP_MAP;
		auto it = expr.begin();
		_iter_begin_4886536336:;
		if (it != expr.end()) {
			jule::Int _231dc6612_i = it - expr.begin();
			jule::Array<jule::Str,2> _231dc6612_part = *it;
			{
				_5913_s+=_231dc6612_part[0LL];
				_5913_s+=_231dc6612_str_repeat(jule::Str(" ", 1),static_cast<jule::I64>((_5113_max - _231dc6612_part[0LL].len()) + 5LL));
				_5913_s+=_231dc6612_part[1LL];
				if ((_231dc6612_i + 1LL) < 4LL) {
					_5913_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4886536336:;
			++it;
			_231dc6612_i++;
			goto _iter_begin_4886536336;
		}
		_iter_end_4886536336:;
	}
	jule::outln(_5913_s);
}



void _231dc6612_version(jule::Slice<jule::Str>& _7313_args) {
	if (_7313_args.len() > 2LL) {
		_231dc6612_print_error_message(jule::Str("invalid command: ", 17) + _7313_args[2LL]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.5 @master", 18));
}



void _231dc6612_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto expr = _231e8d3bb_DISTOS;
		auto it = expr.begin();
		_iter_begin_4886546480:;
		if (it != expr.end()) {
			jule::Str _231dc6612_os = *it;
			{
				jule::out(_231dc6612_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4886546480:;
			++it;
			goto _iter_begin_4886546480;
		}
		_iter_end_4886546480:;
	}
	jule::outln(jule::Str());
}



void _231dc6612_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto expr = _231e8d3bb_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4886548944:;
		if (it != expr.end()) {
			jule::Str _231dc6612_arch = *it;
			{
				jule::out(_231dc6612_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4886548944:;
			++it;
			goto _iter_begin_4886548944;
		}
		_iter_end_4886548944:;
	}
	jule::outln(jule::Str());
}



void _231dc6612_tool(jule::Slice<jule::Str>& _10310_args) {
	if (_10310_args.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_10310_args.len() > 3LL) {
		_231dc6612_print_error_message(jule::Str("invalid command: ", 17) + _10310_args[3LL]);
		return;
	}
	jule::Str _1149_cmd = _10310_args[2LL];
	{
		auto _match_expr{ _1149_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_4886558848; }
		_case_begin_4886558848:;
		{
			_231dc6612_tool_distos();
		}
		goto _match_end_4886556944;
		_case_end_4886558848:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_4886557776; }
		_case_begin_4886557776:;
		{
			_231dc6612_tool_distarch();
		}
		goto _match_end_4886556944;
		_case_end_4886557776:;
		_case_begin_4886554688:;
		{
			_231dc6612_print_error_message(jule::Str("Undefined command: ", 19) + _1149_cmd);
		}
		goto _match_end_4886556944;
		_case_end_4886554688:;
		_match_end_4886556944:;
	}
}



void _231dc6612_julenv(void) {
	jule::outln(jule::Str("julec version: beta 0.0.5 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln(jule::Str("default compiler: ", 18) + (*(_231e15bd4_COMPILER)));
	jule::outln(jule::Str("default C++ standard: ", 22) + _231e15bd4_CPP_STD);
}



jule::Bool _231dc6612_process_command(jule::Slice<jule::Str>& _13321_args) {
	{
		auto _match_expr{ _13321_args[1LL] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_4886565888; }
		_case_begin_4886565888:;
		{
			_231dc6612_help(_13321_args);
		}
		goto _match_end_4886564208;
		_case_end_4886565888:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_4886565984; }
		_case_begin_4886565984:;
		{
			_231dc6612_version(_13321_args);
		}
		goto _match_end_4886564208;
		_case_end_4886565984:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_4886566096; }
		_case_begin_4886566096:;
		{
			_231dc6612_tool(_13321_args);
		}
		goto _match_end_4886564208;
		_case_end_4886566096:;
		if (!((jule::Str("julenv", 6)) == _match_expr)) { goto _case_end_4886564528; }
		_case_begin_4886564528:;
		{
			_231dc6612_julenv();
		}
		goto _match_end_4886564208;
		_case_end_4886564528:;
		_case_begin_4886559808:;
		{
			return false;
		}
		goto _match_end_4886564208;
		_case_end_4886559808:;
		_match_end_4886564208:;
	}
	return true;
}



void _231dc6612_exit_err(jule::Str _14513_msg) {
	jule::outln(_14513_msg);
	_23200a669_exit(1LL);
}



void entry_point(void) {
	jule::Slice<jule::Str> _1519_args = _232036ed1_args();
	if (_1519_args.len() < 2LL) {
		return;
	}
	if (_231dc6612_process_command(_1519_args)) {
		return;
	}
	_231e15bd4_compile_command(_1519_args);
}



void _231de1792___init_common(void) {
	(*(_231e15bd4_COMPILER))=jule::Str("clang", 5);
	(*(_231e15bd4_COMPILER_PATH))=jule::Str("clang++", 7);
	_231e15bd4_flagset->_method_add_var_0(_231e15bd4_SHADOWING,jule::Str("shadowing", 9),0LL,jule::Str("Let shadowing", 13));
	_231e15bd4_flagset->_method_add_var_0(_231e15bd4_TRANSPILATION,jule::Str("transpile", 9),'t',jule::Str("Transpile code", 14));
	_231e15bd4_flagset->_method_add_var_1(_231e15bd4_COMPILER,jule::Str("compiler", 8),0LL,jule::Str("Backend compiler", 16));
	_231e15bd4_flagset->_method_add_var_1(_231e15bd4_OPT,jule::Str("opt", 3),0LL,jule::Str("Optimization level", 18));
	_231e15bd4_flagset->_method_add_var_1(_231e15bd4_TARGET,jule::Str("target", 6),0LL,jule::Str("Target system", 13));
	_231e15bd4_flagset->_method_add_var_1(_231e15bd4_OUT,jule::Str("out", 3),'o',jule::Str("Output identifier", 17));
	_231e15bd4_flagset->_method_add_var_0(_231e64150_OPT_COPY,jule::Str("opt-copy", 8),0LL,jule::Str("Copy optimization", 17));
	_231e15bd4_flagset->_method_add_var_0(_231e64150_OPT_DEADCODE,jule::Str("opt-deadcode", 12),0LL,jule::Str("Deadcode optimization", 21));
	_231e15bd4_flagset->_method_add_var_0(_231e64150_OPT_APPEND,jule::Str("opt-append", 10),0LL,jule::Str("Append optimization", 19));
	_231e15bd4_flagset->_method_add_var_0(_231e64150_OPT_MATH,jule::Str("opt-math", 8),0LL,jule::Str("Math optimization", 17));
	_231e15bd4_flagset->_method_add_var_0(_231e64150_OPT_ACCESS,jule::Str("opt-access", 10),0LL,jule::Str("Access optimization", 19));
	_231e15bd4_flagset->_method_add_var_0(_231e64150_OPT_INLINE,jule::Str("opt-inline", 10),0LL,jule::Str("Inline optimization", 19));
}



void _231e14c5a_init(void) {
	_231de1792___init_common();
}



jule::Int _231e15bd4_system(jule::Str _5711_cmd) {
	return static_cast<jule::Int>(static_cast<jule::Int>(system(((char*)((&(_5711_cmd[0LL])))))));
}



void _231e15bd4_write_output(jule::Str _6117_path,jule::Str _6128_content) {
	jule::Str _629_dir = _231ed2cb2_dir(_6117_path);
	jule::Int _6417_err;
	std::tie(std::ignore,_6417_err) = _2334b9671_Status::_static_method_of(_629_dir);
	if (_6417_err != 0LLU) {
		_6417_err=_233463670_Directory::_static_method_create(_629_dir);
		if (_6417_err != 0LLU) {
			_231dc6612_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	_6417_err=_2334d2447_File::_static_method_write(_6117_path,static_cast<jule::Slice<jule::U8>>(_6128_content),432LL);
	if (_6417_err != 0LLU) {
		_231dc6612_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
}



void _231e15bd4_clear_objects(void) {
	if (_2334d2447_File::_static_method_remove(_231e15bd4_get_compile_path()) != 0LLU) {
		jule::outln(jule::Str("a problem occurs when object cleaning", 37));
		return;
	}
	_233463670_Directory::_static_method_remove(_231e15bd4_OUT_DIR);
}



void _231e15bd4_compile_ir(jule::Str _9215_compiler,jule::Str _9230_compiler_cmd) {
	jule::Int _939_status = _231e15bd4_system((_9215_compiler + jule::Str(" ", 1)) + _9230_compiler_cmd);
	if (_939_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_939_status);
		_231dc6612_exit_err(jule::Str());
	}
	_231e15bd4_clear_objects();
}



void _231e15bd4_do_spell(jule::Str _10413_obj,jule::Str _10423_compiler,jule::Str _10438_compiler_cmd) {
	jule::Str _1059_path = _231e15bd4_get_compile_path();
	_231e15bd4_write_output(_1059_path,_10413_obj);
	if ((!((*(_231e15bd4_TRANSPILATION))))) {
		_231e15bd4_compile_ir(_10423_compiler,_10438_compiler_cmd);
	}
}



jule::Bool _231e15bd4_is_cpp_source_file(jule::Str _11223_path) {
	jule::Int _1139_offset = _11223_path.rfind(jule::Str(".", 1));
	if (_1139_offset == -1LL) {
		return false;
	}
	return _231e4edb6_is_valid_cpp_ext(_11223_path.slice(_1139_offset));
}



std::tuple<jule::Str,jule::Str> _231e15bd4_gen_compile_cmd(jule::Str _12120_source_path,jule::Ptr<_23301cea5_IR>& _12139_ir) {
	jule::Str _1229_compiler = (*(_231e15bd4_COMPILER_PATH));
	
	
	
	jule::Str _1279_SET_STD = jule::Str("--std=", 6) + _231e15bd4_CPP_STD;
	jule::Str _12913_cmd = jule::Str("-O0 ", 4);
	{
		auto _match_expr{ (*(_231e15bd4_COMPILER)) };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4886674096; }
		_case_begin_4886674096:;
		{
			_12913_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_4886677152;
		_case_end_4886674096:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4886677616; }
		_case_begin_4886677616:;
		{
			_12913_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_4886677152;
		_case_end_4886677616:;
		_match_end_4886677152:;
	}
	_12913_cmd+=_1279_SET_STD + jule::Str(" ", 1);
	{
		auto expr = _12139_ir->_field_passes;
		auto it = expr.begin();
		_iter_begin_4886680128:;
		if (it != expr.end()) {
			jule::Str _231e15bd4_pass = *it;
			{
				_12913_cmd+=_231e15bd4_pass + jule::Str(" ", 1);
			}
			_iter_next_4886680128:;
			++it;
			goto _iter_begin_4886680128;
		}
		_iter_end_4886680128:;
	}
	{
		auto expr = _12139_ir->_field_used;
		auto it = expr.begin();
		_iter_begin_4886679152:;
		if (it != expr.end()) {
			jule::Ptr<_218848bd5_ImportInfo> _231e15bd4_u = *it;
			{
				if (_231e15bd4_u->_field_cpp_linked && _231e15bd4_is_cpp_source_file(_231e15bd4_u->_field_path)) {
					_12913_cmd+=_231e15bd4_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_4886679152:;
			++it;
			goto _iter_begin_4886679152;
		}
		_iter_end_4886679152:;
	}
	if ((*(_231e15bd4_OUT)) != jule::Str()) {
		_12913_cmd+=(jule::Str("-o ", 3) + (*(_231e15bd4_OUT))) + jule::Str(" ", 1);
	}
	_12913_cmd+=_12120_source_path;
	return std::make_tuple(_1229_compiler,_12913_cmd);
}



jule::Str _231e15bd4_get_compile_path(void) {
	return _231ed2cb2_join(jule::Slice<jule::Str>({_231e15bd4_OUT_DIR,_231e15bd4_OUT_NAME}));
}



void _231e15bd4_apply_target_independent_optimizations(jule::Ptr<_23301cea5_IR>& _17048_ir) {
	if ((*(_231e64150_OPT_DEADCODE))) {
		_231e62d30_eliminate(_17048_ir);
	}
}



void _231e15bd4_check_compiler_flag(void) {
	{
		auto _match_expr{ (*(_231e15bd4_COMPILER)) };
		if (!((jule::Str()) == _match_expr)) { goto _case_end_4886690208; }
		_case_begin_4886690208:;
		{
			_231dc6612_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4886687184;
		_case_end_4886690208:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_4886690304; }
		_case_begin_4886690304:;
		{
			(*(_231e15bd4_COMPILER_PATH))=jule::Str("clang++", 7);
		}
		goto _match_end_4886687184;
		_case_end_4886690304:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_4886690400; }
		_case_begin_4886690400:;
		{
			(*(_231e15bd4_COMPILER_PATH))=jule::Str("g++", 3);
		}
		goto _match_end_4886687184;
		_case_end_4886690400:;
		_case_begin_4886687568:;
		{
			_231dc6612_exit_err(jule::Str("invalid option value for --compiler: ", 37) + (*(_231e15bd4_COMPILER)));
		}
		goto _match_end_4886687184;
		_case_end_4886687568:;
		_match_end_4886687184:;
	}
}



void _231e15bd4_check_target_arch(jule::Str _19222_arch) {
	{
		auto expr = _231e8d3bb_DISTARCH;
		auto it = expr.begin();
		_iter_begin_4886692560:;
		if (it != expr.end()) {
			jule::Str _231e15bd4_distarch = *it;
			{
				if (_19222_arch == _231e15bd4_distarch) {
					return;
				}
			}
			_iter_next_4886692560:;
			++it;
			goto _iter_begin_4886692560;
		}
		_iter_end_4886692560:;
	}
	_231dc6612_exit_err(jule::Str("--target: unsupported/undefined architecture: ", 46) + _19222_arch);
}



void _231e15bd4_check_target_os(jule::Str _20220_os) {
	{
		auto expr = _231e8d3bb_DISTOS;
		auto it = expr.begin();
		_iter_begin_4886695760:;
		if (it != expr.end()) {
			jule::Str _231e15bd4_distos = *it;
			{
				if (_20220_os == _231e15bd4_distos) {
					return;
				}
			}
			_iter_next_4886695760:;
			++it;
			goto _iter_begin_4886695760;
		}
		_iter_end_4886695760:;
	}
	_231dc6612_exit_err(jule::Str("--target: unsupported/undefined operating system: ", 50) + _20220_os);
}



void _231e15bd4_check_target_flag(void) {
	if ((*(_231e15bd4_TARGET)) == jule::Str()) {
		_231dc6612_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2179_parts = _231e15bd4_TARGET->split(jule::Str("-", 1),-1LL);
	if (_2179_parts.len() != 2LL) {
		_231dc6612_exit_err(jule::Str("--target: undefined platform target format: ", 44) + (*(_231e15bd4_TARGET)));
	}
	jule::Str _22210_os = _2179_parts[0LL];
	jule::Str _22214_arch = _2179_parts[1LL];
	std::tie(_22210_os,_22214_arch) = std::make_tuple(_2179_parts[0LL],_2179_parts[1LL]);
	if (_22210_os != jule::Str("native", 6)) {
		_231e15bd4_check_target_os(_22210_os);
		_231e610d6_OS=_22210_os;
	}
	if (_22214_arch != jule::Str("native", 6)) {
		_231e15bd4_check_target_arch(_22214_arch);
		_231e610d6_ARCH=_22214_arch;
	}
}



void _231e15bd4_check_opt_flag(void) {
	if ((*(_231e15bd4_OPT)) == jule::Str()) {
		_231dc6612_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ (*(_231e15bd4_OPT)) };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_4886709648; }
		goto _match_end_4886705920;
		_case_end_4886709648:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_4886710608; }
		_case_begin_4886710608:;
		{
			_231e64150_push_opt_level(1LLU);
		}
		goto _match_end_4886705920;
		_case_end_4886710608:;
		_case_begin_4886709872:;
		{
			_231dc6612_exit_err(jule::Str("--opt: invalid optimization level: ", 35) + (*(_231e15bd4_OPT)));
		}
		goto _match_end_4886705920;
		_case_end_4886709872:;
		_match_end_4886705920:;
	}
}



void _231e15bd4_check_flags(void) {
	_231e15bd4_check_compiler_flag();
	_231e15bd4_check_target_flag();
	_231e15bd4_check_opt_flag();
	if ((*(_231e15bd4_SHADOWING))) {
		_231e15bd4_SEMA_FLAGS|=1LL;
	}
}



void _231e15bd4_compile_command(jule::Slice<jule::Str>& _25821_args) {
	jule::Slice<jule::Str> _25910_content;
	jule::Str _25919_error;
	std::tie(_25910_content,_25919_error) = _231e15bd4_flagset->_method_parse(_25821_args.slice(1LL));
	if (_25919_error != jule::Str()) {
		_231dc6612_exit_err(_25919_error);
	}
	_231e15bd4_check_flags();
	if (_25910_content.len() == 0LL) {
		_231dc6612_exit_err(_231e4202e_logf(jule::Str("missing compile path", 20),jule::Slice<jule::Any>({})));
	} else if (_25910_content.len() > 1LL) {
		_231dc6612_exit_err(jule::Str("undefined content: ", 19) + _25910_content[1LL]);
	}
	jule::Str _2719_path = _25910_content[0LL];
	jule::Ptr<_2334b9671_Status> _27410_inf;
	jule::Int _27415_err;
	std::tie(_27410_inf,_27415_err) = _2334b9671_Status::_static_method_of(_231e881a7_PATH_STDLIB);
	if ((_27415_err != 0LLU) || (!(_27410_inf->_method_is_dir()))) {
		_231dc6612_exit_err(_231e4202e_logf(jule::Str("standard library directory not found", 36),jule::Slice<jule::Any>({})));
	}
	_23314edea_init_flags();
	jule::Ptr<_23301cea5_IR> _28214_ir;
	jule::Slice<_231e4202e_Log> _28218_logs;
	std::tie(_28214_ir,_28218_logs) = _23301cea5_IR::_static_method_build(_2719_path,_231e15bd4_SEMA_FLAGS);
	if ((_28214_ir == nullptr) && (_28218_logs == nullptr)) {
		_231dc6612_exit_err(_231e4202e_logf(jule::Str("there is no Jule source code in this package: @", 47),jule::Slice<jule::Any>({jule::Any(_2719_path)})));
	}
	if (_28218_logs != nullptr) {
		_231dc726c_Logger::_static_method_print_logs(_28218_logs);
		_231dc6612_exit_err(jule::Str());
	}
	
	jule::Ptr<_2185d51ad_Fn> _29413_f = _28214_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if (_29413_f == nullptr) {
		_231dc6612_exit_err(_231e4202e_logf(jule::Str("entry point (main) function is not defined", 42),jule::Slice<jule::Any>({})));
	}
	_29413_f->_field_statically=true;
	_29413_f=_28214_ir->_field_main->_method_find_fn(jule::Str("init", 4),false);
	if (_29413_f != nullptr) {
		_29413_f->_field_statically=true;
	}
	_231e15bd4_apply_target_independent_optimizations(_28214_ir);
	_28214_ir->_method_order();
	jule::Str _31010_compiler;
	jule::Str _31020_compiler_cmd;
	std::tie(_31010_compiler,_31020_compiler_cmd) = _231e15bd4_gen_compile_cmd(_231e15bd4_get_compile_path(),_28214_ir);
	jule::Str _31213_obj = _1d6c4a2c2_gen(_28214_ir);
	_1d6c4a2c2_append_standard(_31213_obj,_31010_compiler,_31020_compiler_cmd);
	_231e15bd4_do_spell(_31213_obj,_31010_compiler,_31020_compiler_cmd);
}




void __jule_call_initializers(void) {
	_231e881a7_init();
	_1d67e4c4b_init();
	_231e14c5a_init();
}

int main(int argc, char *argv[], char *envp[]) {
    std::set_terminate(&jule::terminate_handler);
    jule::set_sig_handler(jule::signal_handler);
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}