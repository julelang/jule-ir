// Auto generated by JuleC.
// JuleC version: jule0.0.13 @master
// Date: 23/5/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1a53deb74_Importer{};
struct _1a5491d58_Kind{};
struct _1a54ad209_Lookup{};
struct _1a6698239_CommonFlag{};
struct _1ce9d412e_Range16;
struct _1ce9d45a2_Range32;
struct _1ce9d4a25_RangeTable;
struct _1cea9d1c6_acceptRange;
struct _1e8691d6c_lazyBuff;
struct _1e78a8925_DirEntry;
struct _1e77bb151_Directory;
struct _1e85b3ec0_File;
struct _1e85b4388_Status;
struct _1cec1d203_cmdAttrs;
struct _1ceb4952a_Log;
struct _1ceee8973_Token;
struct _1ceeedd0d_File;
struct _1d0000d65_kindPair;
struct _1d00068c6_lex;
struct _1a3c1be0e_Ast;
struct _1a3c1cc01_Node;
struct _1a3c1d0ec_Directive;
struct _1a48619a9_TypeDecl;
struct _1a4862070_IdentTypeDecl;
struct _1a48626be_SubIdentTypeDecl;
struct _1a4862a76_NamespaceTypeDecl;
struct _1a4862d62_SptrTypeDecl;
struct _1a486325d_SlcTypeDecl;
struct _1a4863549_TupleTypeDecl;
struct _1a4863835_PtrTypeDecl;
struct _1a4863eb7_ArrTypeDecl;
struct _1a4864715_MapTypeDecl;
struct _1a4864abc_RetTypeDecl;
struct _1a4865eca_Expr;
struct _1a48662b6_RangeExpr;
struct _1a486686b_UseExpr;
struct _1a4866b57_TupleExpr;
struct _1a486700e_LitExpr;
struct _1a4867718_UnsafeExpr;
struct _1a4867b8b_IdentExpr;
struct _1a4868395_UnaryExpr;
struct _1a486874c_VariadicExpr;
struct _1a4868b04_CastExpr;
struct _1a4868eab_NsSelectionExpr;
struct _1a486942e_SubIdentExpr;
struct _1a48698a2_BinopExpr;
struct _1a4869eac_FnCallExpr;
struct _1a486a93b_FieldExprPair;
struct _1a486b189_StructLit;
struct _1a486b60c_BraceLit;
struct _1a486bdd2_KeyValPair;
struct _1a486c5b9_SliceExpr;
struct _1a486ce38_IndexingExpr;
struct _1a486d543_SlicingExpr;
struct _1a486d82e_Constraint;
struct _1a486dca2_GenericDecl;
struct _1a486e159_LabelSt;
struct _1a486e511_GotoSt;
struct _1a486e7ec_FallSt;
struct _1a486ee07_AssignLeft;
struct _1a4870446_AssignSt;
struct _1a4871337_Stmt;
struct _1a4871942_ScopeTree;
struct _1a4872118_ParamDecl;
struct _1a4873438_FnDecl;
struct _1a4874417_VarDecl;
struct _1a48747be_RetSt;
struct _1a4874e2e_Iter;
struct _1a4875704_WhileKind;
struct _1a4876095_RangeKind;
struct _1a487644c_BreakSt;
struct _1a4876804_ContSt;
struct _1a4876c77_If;
struct _1a487712e_Else;
struct _1a48775a2_Conditional;
struct _1a4877c78_TypeAliasDecl;
struct _1a48781eb_Case;
struct _1a48788c2_MatchCase;
struct _1a4879164_UseDecl;
struct _1a48795d7_EnumItemDecl;
struct _1a487a110_EnumDecl;
struct _1a487ab16_TypeEnumItemDecl;
struct _1a487b221_TypeEnumDecl;
struct _1a487b41e_FieldDecl;
struct _1a487bbc2_StructDecl;
struct _1a487c2cc_TraitDecl;
struct _1a487c8d7_Impl;
struct _1a5034d6e_floatInfo;
struct _1a4e378cb_decimalSlice;
struct _1a537e8a0_leftCheat;
struct _1a537ecac_decimal;
struct _1a5389ec6_Const;
struct _1a4852208_Field;
struct _1a485984d_Operators;
struct _1a487d19b_Struct;
struct _1a487d388_FieldIns;
struct _1a5395ce5_OperandExprModel;
struct _1a53962ac_BinopExprModel;
struct _1a5396664_UnaryExprModel;
struct _1a5396a60_StructArgExprModel;
struct _1a5396e17_StructLitExprModel;
struct _1a5397225_AllocStructLitExprModel;
struct _1a5397775_CastingExprModel;
struct _1a5398127_FnCallExprModel;
struct _1a53984ce_SliceExprModel;
struct _1a5398952_IndexingExprModel;
struct _1a5398d09_AnonFnExprModel;
struct _1a53991b1_KeyValPairExprModel;
struct _1a5399634_MapExprModel;
struct _1a5399b73_SlicingExprModel;
struct _1a539a1b2_TraitSubIdentExprModel;
struct _1a539a998_StructSubIdentExprModel;
struct _1a539ad3e_StructStaticIdentExprModel;
struct _1a539b207_ArrayExprModel;
struct _1a539b4e3_CommonIdentExprModel;
struct _1a539ba54_CommonSubIdentExprModel;
struct _1a539bd51_TupleExprModel;
struct _1a539c22a_BuiltinOutCallExprModel;
struct _1a539c615_BuiltinOutlnCallExprModel;
struct _1a539c934_BuiltinCloneCallExprModel;
struct _1a539cd1e_BuiltinNewCallExprModel;
struct _1a539d209_BuiltinPanicCallExprModel;
struct _1a539d6b0_BuiltinAssertCallExprModel;
struct _1a539db66_BuiltinMakeCallExprModel;
struct _1a539e051_BuiltinAppendCallExprModel;
struct _1a539e370_BuiltinLenCallExprModel;
struct _1a539e68e_BuiltinCapCallExprModel;
struct _1a539ed43_BuiltinDeleteCallExprModel;
struct _1a53a01a6_BuiltinCopyCallExprModel;
struct _1a53a0591_BuiltinErrorCallExprModel;
struct _1a53a088d_SizeofExprModel;
struct _1a53a0b79_AlignofExprModel;
struct _1a53a0e65_RuneExprModel;
struct _1a53a1273_IntegratedToStrExprModel;
struct _1a53a163b_BackendEmitExprModel;
struct _1a53a1927_FreeExprModel;
struct _1a53a24b6_RetType;
struct _1a53a2b8c_Param;
struct _1a53a44c9_Fn;
struct _1a53a62ab_ParamIns;
struct _1a53a717a_FnIns;
struct _1a53aa0e5_ReferenceStack;
struct _1a53ab459_Pass;
struct _1a53b0903_symbolBuilder;
struct _1a53b63cb_Trait;
struct _1a53b7a2b_EnumItem;
struct _1a53b8521_Enum;
struct _1a53b9555_TypeEnumItem;
struct _1a53b9b1b_TypeEnum;
struct _1a53bc14b_constraintChecker;
struct _1a53be082_Impl;
struct _1a53c40dc_Scope;
struct _1a53c44d8_If;
struct _1a53c47c4_Else;
struct _1a53c4b48_Conditional;
struct _1a53c4e34_InfIter;
struct _1a53c53a7_WhileIter;
struct _1a53c5c8c_RangeIter;
struct _1a53c6188_ContSt;
struct _1a53c6540_BreakSt;
struct _1a53c682b_Label;
struct _1a53c6b17_GotoSt;
struct _1a53c6ebe_Postfix;
struct _1a53c7442_Assign;
struct _1a53c77e9_MultiAssign;
struct _1a53c7d38_Match;
struct _1a53c8883_Case;
struct _1a53c8e38_FallSt;
struct _1a53c92ac_RetSt;
struct _1a53c98b7_scopeLabel;
struct _1a53c9d3a_scopeGoto;
struct _1a53cab4e_scopeChecker;
struct _1a53db764_directiveChecker;
struct _1a53e27e2_ImportInfo;
struct _1a53e574b_Package;
struct _1a53ea93d_Sema;
struct _1a5415c44_missingRetChecker;
struct _1a5417905_IterRelation;
struct _1a5418939_Var;
struct _1a54196d7_FuncPattern;
struct _1a54500be_typeCompatibilityChecker;
struct _1a5451be7_assignTypeChecker;
struct _1a54536cc_dynamicTypeAnnotation;
struct _1a5458094_fnCallArgChecker;
struct _1a545a99d_structLitChecker;
struct _1a545c582_rangeChecker;
struct _1a545e61c_retTypeChecker;
struct _1a54614cb_SymbolTable;
struct _1a5466305_Data;
struct _1a546737d_Value;
struct _1a5467d73_Eval;
struct _1a5483c18_unaryEval;
struct _1a54859a6_binaryEval;
struct _1a5490a5a_InsGeneric;
struct _1a5491594_TypeAlias;
struct _1a5492287_TypeKind;
struct _1a5496665_TypeSymbol;
struct _1a5496ed4_Prim;
struct _1a549a768_Sptr;
struct _1a549b1c5_Slc;
struct _1a549bc53_Tuple;
struct _1a549c77b_Map;
struct _1a549d370_Arr;
struct _1a549dccc_Ptr;
struct _1a549ec23_referencer;
struct _1a54a0b03_typeChecker;
struct _1a54a8314_identTypeLookup;
struct _1a4d47d80_FileInfo;
struct _1a4d4a558_stmt;
struct _1a4d4ad83_scopeParser;
struct _1a4d5739a_exprBuilder;
struct _1a4d63b9d_assignInfo;
struct _1a4d674cb_parser;
struct _1a4d781e0_typeBuilder;
struct _1b5a50b43_CompileInfo;
struct _1b5a51e96_directiveEval;
struct _1a4d35e6c_JuleImporter;
struct _1a4d7d547_OrderedDefines;
struct _1a4d7d79a_defineOrderer;
struct _1a5d47ce6_liveTable;
struct _1a5d7da63_scopeDeadCode;
struct _1a5d829bd_exprDeadCode;
struct _1b5667150_UnsafeBinopExprModel;
struct _1b567d5a6_UnsafeIndexingExprModel;
struct _1a3c3d914_PushToSliceExprModel;
struct _1b56cd727_MutSlicingExprModel;
struct _1b56cd914_StrInsertBeginExprModel;
struct _1a3e43333_scopeOptimizer;
struct _1a3e43520_exprOptimizer;
struct _1a4dacbc5_Optimizer;
struct _1a5d9cd7e_AnsiEscape;
struct _1a5d9e39c_Logger;
struct _1a663314c_AbsTime;
struct _1a66337e0_Time;
struct _1ced54ea5_scopeCoder;
struct _1cec7eb5a_exprCoder;
struct _1a62c9497_deriveCoder;
struct _1a62cadb1_TestCoder;
struct _1a62cd512_identCoder;
struct _1a65cc1b2_SerializationInfo;
struct _1a62d62b7_traitHash;
struct _1a664115a_customType;
struct _1a6641b0b_typeCoder;
struct _1a66493e9_resultCoder;
struct _1a9111298_Flag;
struct _1a9114ee4_Flag;
struct _1a91187ab_Flag;
struct _1a911c0b7_Flag;
struct _1a912087e_Flag;
struct _1a6699ba8_FlagSet;
struct _1cebd5440_Cmd;
struct _1a4ce7615_IR;
struct _1a5d48159_ObjectDeadCode;
struct _1a487d575_StructIns;
struct _1a663a60a_ObjectCoder;
struct _1a669c381_argParser;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a5466305_Data__jule_tuple_x_1a5466305_Data {
	jule::Ptr<_1a5466305_Data> __jule_result_arg0;
	jule::Ptr<_1a5466305_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1a48781eb_Case__jule_tuple_bool {
	jule::Ptr<_1a48781eb_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a48781eb_Case__jule_tuple_x_1a487712e_Else {
	jule::Slice<jule::Ptr<_1a48781eb_Case>> __jule_result_arg0;
	jule::Ptr<_1a487712e_Else> __jule_result_arg1;
};
struct __jule_tuple__1a4871106_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool {
	jule::Ptr<_1a4870446_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1a48619a9_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1a4864abc_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log {
	jule::Slice<jule::Ptr<_1a3c1be0e_Ast>> __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1ceb4952a_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a4ce7615_IR__jule_tuple_s_1ceb4952a_Log {
	jule::Ptr<_1a4ce7615_IR> __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a47ebb42_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a47ebb42_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a47ebb42_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1a54614cb_SymbolTable__jule_tuple_s_1ceb4952a_Log {
	jule::Ptr<_1a54614cb_SymbolTable> __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log {
	jule::Ptr<_1a53e574b_Package> __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log {
	jule::Ptr<_1a3c1be0e_Ast> __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ceee8973_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1ceee8973_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> __jule_result_arg0;
	jule::Slice<_1ceb4952a_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _1ce9d412e_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_1ce9d412e_Range16(void) = default;

	inline bool operator==(_1ce9d412e_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1ce9d412e_Range16 _other) { return !this->operator==(_other); }


};
struct _1ce9d45a2_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_1ce9d45a2_Range32(void) = default;

	inline bool operator==(_1ce9d45a2_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1ce9d45a2_Range32 _other) { return !this->operator==(_other); }


};
struct _1ce9d4a25_RangeTable {
	jule::Slice<_1ce9d412e_Range16> _field_R16;
	jule::Slice<_1ce9d45a2_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_1ce9d4a25_RangeTable(void) = default;


};
struct _1cea9d1c6_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_1cea9d1c6_acceptRange(void) = default;

	inline bool operator==(_1cea9d1c6_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1cea9d1c6_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _1e869847d_index(_1e8691d6c_lazyBuff*, jule::I64);
inline void _1e869acaa_append(_1e8691d6c_lazyBuff*, jule::U8);
inline jule::Str _1e869c5d6_string(_1e8691d6c_lazyBuff*);
struct _1e8691d6c_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_1e8691d6c_lazyBuff(void) = default;


};
struct _1e78a8925_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1e85b4388_Status> _field_Stat;
	

	_1e78a8925_DirEntry(void) = default;

	inline bool operator==(_1e78a8925_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1e78a8925_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>> static__1e8603bad_Read(jule::Str);
inline jule::VoidExceptional static__1e862d6ee_Create(jule::Str);
inline jule::VoidExceptional static__1e8608564_Remove(jule::Str);
struct _1e77bb151_Directory {
	

	_1e77bb151_Directory(void) = default;

	inline bool operator==(_1e77bb151_Directory _other) { return true; }

	inline bool operator!=(_1e77bb151_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1e85b3ec0_File>> static__1e78ee042_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1e78a667b_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1e77a209e_Write(_1e85b3ec0_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1e77bbd33_Read(_1e85b3ec0_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1e85b3ec0_File> static__1e77e1d03_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1e85b3ec0_File>> static__1e78a5e1c_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1e78a64d3_Read(jule::Str);
inline jule::VoidExceptional static__1e78a6ed9_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional static__1e77bc3e9_WriteStr(jule::Str, jule::Str*, jule::I64);
inline jule::Exceptional<jule::I64> _1e78a578a_Seek(_1e85b3ec0_File*, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e77a0b08_WriteStr(_1e85b3ec0_File*, jule::Str*);
inline jule::VoidExceptional _1e77bde67_Close(_1e85b3ec0_File*);
struct _1e85b3ec0_File {
	jule::Uintptr _field_handle = 0;
	

	_1e85b3ec0_File(void) = default;

	inline bool operator==(_1e85b3ec0_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1e85b3ec0_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_1e85b4388_Status>> static__1e77deb25_Of(jule::Str);
inline jule::Bool _1e77decbd_IsDir(_1e85b4388_Status*);
inline jule::Bool _1e85b4575_IsReg(_1e85b4388_Status*);
inline jule::U64 _1e85b46a7_Size(_1e85b4388_Status*);
struct _1e85b4388_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	_1e85b4388_Status(void) = default;

	inline bool operator==(_1e85b4388_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1e85b4388_Status _other) { return !this->operator==(_other); }


};
struct _1cec1d203_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	_1cec1d203_cmdAttrs(void) = default;

	inline bool operator==(_1cec1d203_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1cec1d203_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1ceb4952a_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_1ceb4952a_Log(void) = default;

	inline bool operator==(_1ceb4952a_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1ceb4952a_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _1ceee8d2a_Prec(_1ceee8973_Token*);
struct _1ceee8973_Token {
	jule::Ptr<_1ceeedd0d_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_1ceee8973_Token(void) = default;

	inline bool operator==(_1ceee8973_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1ceee8973_Token _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ceeee21a_IsOk(_1ceeedd0d_File*);
inline void _1ceeee490_Fill(_1ceeedd0d_File*, jule::Slice<jule::U8>);
inline jule::Str _1ceeee704_Dir(_1ceeedd0d_File*);
inline jule::Str _1ceeee968_Name(_1ceeedd0d_File*);
inline jule::Uintptr _1ceeeebcc_Addr(_1ceeedd0d_File*);
inline jule::Str _1ceeeeeda_GetRow(_1ceeedd0d_File*, jule::I64);
struct _1ceeedd0d_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Tokens;
	

	_1ceeedd0d_File(void) = default;


};
struct _1d0000d65_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_1d0000d65_kindPair(void) = default;

	inline bool operator==(_1d0000d65_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1d0000d65_kindPair _other) { return !this->operator==(_other); }


};
inline void _1d0006e6a_pushErr(_1d00068c6_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1d0007289_pushErrTok(_1d00068c6_lex*, jule::Ptr<_1ceee8973_Token>*, jule::Str);
inline void _1d0007465_lex(_1d00068c6_lex*);
inline jule::Str _1d0007773_id(_1d00068c6_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1d00079d7_resume(_1d00068c6_lex*);
inline void _1d0007c5c_lexLineComment(_1d00068c6_lex*, jule::Ptr<_1ceee8973_Token>*);
inline void _1d0007ed2_lexRangeComment(_1d00068c6_lex*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Str _1d00082e0_num(_1d00068c6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1d00085ed_escapeSeq(_1d00068c6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1d00089a5_getRune(_1d00068c6_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1d0008cb3_lexRune(_1d00068c6_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1d0009027_lexStr(_1d00068c6_lex*);
inline jule::Bool _1d000928b_isFirstTokenOfLine(_1d00068c6_lex*);
inline void _1d0009467_newLine(_1d00068c6_lex*);
inline jule::Bool _1d0009962_isOp(_1d00068c6_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1d0009d19_lexBasicOps(_1d00068c6_lex*, jule::Slice<jule::U8>, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1d000a1c1_lexId(_1d00068c6_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1d000a578_lexNum(_1d00068c6_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Ptr<_1ceee8973_Token> _1d000a7dc_token(_1d00068c6_lex*);
struct _1d00068c6_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_tokens;
	jule::Ptr<_1ceeedd0d_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1ceb4952a_Log> _field_errors;
	

	_1d00068c6_lex(void) = default;


};
struct _1a3c1be0e_Ast {
	jule::Ptr<_1ceeedd0d_File> _field_File;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1a4879164_UseDecl>> _field_UseDecls;
	jule::Slice<_1a3c1cc01_Node> _field_Nodes;
	

	_1a3c1be0e_Ast(void) = default;


};
struct _1a3c1cc01_Node {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1a3c1cc01_Node(void) = default;

	inline bool operator==(_1a3c1cc01_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a3c1cc01_Node _other) { return !this->operator==(_other); }


};
struct _1a3c1d0ec_Directive {
	jule::Ptr<_1ceee8973_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Args;
	

	_1a3c1d0ec_Directive(void) = default;


};
struct _1a48619a9_TypeDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1a48619a9_TypeDecl(void) = default;

	inline bool operator==(_1a48619a9_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a48619a9_TypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a48623d3_IsPrim(_1a4862070_IdentTypeDecl*);
struct _1a4862070_IdentTypeDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _field_Generics;
	

	_1a4862070_IdentTypeDecl(void) = default;


};
struct _1a48626be_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1a4862070_IdentTypeDecl>> _field_Idents;
	

	_1a48626be_SubIdentTypeDecl(void) = default;


};
struct _1a4862a76_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Idents;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	

	_1a4862a76_NamespaceTypeDecl(void) = default;


};
struct _1a4862d62_SptrTypeDecl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Elem;
	

	_1a4862d62_SptrTypeDecl(void) = default;

	inline bool operator==(_1a4862d62_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a4862d62_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a486325d_SlcTypeDecl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Elem;
	

	_1a486325d_SlcTypeDecl(void) = default;

	inline bool operator==(_1a486325d_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a486325d_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a4863549_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _field_Types;
	

	_1a4863549_TupleTypeDecl(void) = default;


};
inline jule::Bool _1a4863b87_IsUnsafe(_1a4863835_PtrTypeDecl*);
struct _1a4863835_PtrTypeDecl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Elem;
	

	_1a4863835_PtrTypeDecl(void) = default;

	inline bool operator==(_1a4863835_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a4863835_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a4864391_AutoSized(_1a4863eb7_ArrTypeDecl*);
struct _1a4863eb7_ArrTypeDecl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Elem;
	jule::Ptr<_1a4865eca_Expr> _field_Size;
	

	_1a4863eb7_ArrTypeDecl(void) = default;

	inline bool operator==(_1a4863eb7_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1a4863eb7_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a4864715_MapTypeDecl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Key;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Val;
	

	_1a4864715_MapTypeDecl(void) = default;

	inline bool operator==(_1a4864715_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a4864715_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1a4864abc_RetTypeDecl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Idents;
	

	_1a4864abc_RetTypeDecl(void) = default;


};
struct _1a4865eca_Expr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1a4865eca_Expr(void) = default;

	inline bool operator==(_1a4865eca_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a4865eca_Expr _other) { return !this->operator==(_other); }


};
struct _1a48662b6_RangeExpr {
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a48662b6_RangeExpr(void) = default;

	inline bool operator==(_1a48662b6_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a48662b6_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1a486686b_UseExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a486686b_UseExpr(void) = default;

	inline bool operator==(_1a486686b_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a486686b_UseExpr _other) { return !this->operator==(_other); }


};
struct _1a4866b57_TupleExpr {
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_Expr;
	

	_1a4866b57_TupleExpr(void) = default;


};
inline jule::Bool _1a4867361_IsNil(_1a486700e_LitExpr*);
struct _1a486700e_LitExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Value;
	

	_1a486700e_LitExpr(void) = default;

	inline bool operator==(_1a486700e_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a486700e_LitExpr _other) { return !this->operator==(_other); }


};
struct _1a4867718_UnsafeExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a4867718_UnsafeExpr(void) = default;

	inline bool operator==(_1a4867718_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a4867718_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a4867edd_IsSelf(_1a4867b8b_IdentExpr*);
struct _1a4867b8b_IdentExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	

	_1a4867b8b_IdentExpr(void) = default;

	inline bool operator==(_1a4867b8b_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_CppLinked == _other._field_CppLinked;
	}

	inline bool operator!=(_1a4867b8b_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1a4868395_UnaryExpr {
	jule::Ptr<_1ceee8973_Token> _field_Op;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a4868395_UnaryExpr(void) = default;

	inline bool operator==(_1a4868395_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a4868395_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1a486874c_VariadicExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a486874c_VariadicExpr(void) = default;

	inline bool operator==(_1a486874c_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a486874c_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1a4868b04_CastExpr {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a4868b04_CastExpr(void) = default;

	inline bool operator==(_1a4868b04_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a4868b04_CastExpr _other) { return !this->operator==(_other); }


};
struct _1a4868eab_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Ns;
	jule::Ptr<_1ceee8973_Token> _field_Ident;
	

	_1a4868eab_NsSelectionExpr(void) = default;


};
struct _1a486942e_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Ptr<_1ceee8973_Token> _field_Ident;
	

	_1a486942e_SubIdentExpr(void) = default;

	inline bool operator==(_1a486942e_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a486942e_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1a48698a2_BinopExpr {
	jule::Ptr<_1a4865eca_Expr> _field_Left;
	jule::Ptr<_1a4865eca_Expr> _field_Right;
	jule::Ptr<_1ceee8973_Token> _field_Op;
	

	_1a48698a2_BinopExpr(void) = default;

	inline bool operator==(_1a48698a2_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a48698a2_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a486a320_Unhandled(_1a4869eac_FnCallExpr*);
inline jule::Bool _1a486a584_Ignored(_1a4869eac_FnCallExpr*);
struct _1a4869eac_FnCallExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_Args;
	jule::Ptr<_1a4871942_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1a4869eac_FnCallExpr(void) = default;


};
inline jule::Bool _1a486ac8d_IsTargeted(_1a486a93b_FieldExprPair*);
struct _1a486a93b_FieldExprPair {
	jule::Ptr<_1ceee8973_Token> _field_Field;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a486a93b_FieldExprPair(void) = default;

	inline bool operator==(_1a486a93b_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a486a93b_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1a486b189_StructLit {
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_Exprs;
	

	_1a486b189_StructLit(void) = default;


};
inline jule::Bool _1a486b95e_IsEmpty(_1a486b60c_BraceLit*);
struct _1a486b60c_BraceLit {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_Exprs;
	

	_1a486b60c_BraceLit(void) = default;


};
struct _1a486bdd2_KeyValPair {
	jule::Ptr<_1a4865eca_Expr> _field_Key;
	jule::Ptr<_1a4865eca_Expr> _field_Val;
	jule::Ptr<_1ceee8973_Token> _field_Colon;
	

	_1a486bdd2_KeyValPair(void) = default;

	inline bool operator==(_1a486bdd2_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1a486bdd2_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a486c8e9_IsEmpty(_1a486c5b9_SliceExpr*);
struct _1a486c5b9_SliceExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_Exprs;
	

	_1a486c5b9_SliceExpr(void) = default;


};
struct _1a486ce38_IndexingExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Ptr<_1a4865eca_Expr> _field_Index;
	

	_1a486ce38_IndexingExpr(void) = default;

	inline bool operator==(_1a486ce38_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a486ce38_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1a486d543_SlicingExpr {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Ptr<_1a4865eca_Expr> _field_Start;
	jule::Ptr<_1a4865eca_Expr> _field_To;
	

	_1a486d543_SlicingExpr(void) = default;

	inline bool operator==(_1a486d543_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1a486d543_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1a486d82e_Constraint {
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _field_Mask;
	

	_1a486d82e_Constraint(void) = default;


};
struct _1a486dca2_GenericDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a486d82e_Constraint> _field_Constraint;
	

	_1a486dca2_GenericDecl(void) = default;

	inline bool operator==(_1a486dca2_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1a486dca2_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1a486e159_LabelSt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1a486e159_LabelSt(void) = default;

	inline bool operator==(_1a486e159_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a486e159_LabelSt _other) { return !this->operator==(_other); }


};
struct _1a486e511_GotoSt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_Label;
	

	_1a486e511_GotoSt(void) = default;

	inline bool operator==(_1a486e511_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a486e511_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a486e7ec_FallSt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	

	_1a486e7ec_FallSt(void) = default;

	inline bool operator==(_1a486e7ec_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1a486e7ec_FallSt _other) { return !this->operator==(_other); }


};
struct _1a486ee07_AssignLeft {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a486ee07_AssignLeft(void) = default;

	inline bool operator==(_1a486ee07_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a486ee07_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1a4870446_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1ceee8973_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1a486ee07_AssignLeft>> _field_Left;
	jule::Ptr<_1a4865eca_Expr> _field_Right;
	

	_1a4870446_AssignSt(void) = default;


};
struct _1a4871337_Stmt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1a4871337_Stmt(void) = default;

	inline bool operator==(_1a4871337_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a4871337_Stmt _other) { return !this->operator==(_other); }


};
struct _1a4871942_ScopeTree {
	jule::Ptr<_1a4871942_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1a4871337_Stmt> _field_Stmts;
	jule::Ptr<_1ceee8973_Token> _field_End;
	

	_1a4871942_ScopeTree(void) = default;


};
inline jule::Bool _1a487247b_IsSelf(_1a4872118_ParamDecl*);
inline jule::Bool _1a48726e0_IsRef(_1a4872118_ParamDecl*);
struct _1a4872118_ParamDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1a4872118_ParamDecl(void) = default;

	inline bool operator==(_1a4872118_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a4872118_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a487378a_IsAnon(_1a4873438_FnDecl*);
struct _1a4873438_FnDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_Directives;
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _field_Generics;
	jule::Ptr<_1a4864abc_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1a4872118_ParamDecl>> _field_Params;
	

	_1a4873438_FnDecl(void) = default;


};
struct _1a4874417_VarDecl {
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_Directives;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a4874417_VarDecl(void) = default;


};
struct _1a48747be_RetSt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a48747be_RetSt(void) = default;

	inline bool operator==(_1a48747be_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a48747be_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a4875281_IsInf(_1a4874e2e_Iter*);
struct _1a4874e2e_Iter {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	

	_1a4874e2e_Iter(void) = default;

	inline bool operator==(_1a4874e2e_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a4874e2e_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a4875a56_IsWhileNext(_1a4875704_WhileKind*);
struct _1a4875704_WhileKind {
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ceee8973_Token> _field_NextToken;
	

	_1a4875704_WhileKind(void) = default;

	inline bool operator==(_1a4875704_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1a4875704_WhileKind _other) { return !this->operator==(_other); }


};
struct _1a4876095_RangeKind {
	jule::Ptr<_1ceee8973_Token> _field_InToken;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Ptr<_1a4874417_VarDecl> _field_KeyA;
	jule::Ptr<_1a4874417_VarDecl> _field_KeyB;
	

	_1a4876095_RangeKind(void) = default;

	inline bool operator==(_1a4876095_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a4876095_RangeKind _other) { return !this->operator==(_other); }


};
struct _1a487644c_BreakSt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_Label;
	

	_1a487644c_BreakSt(void) = default;

	inline bool operator==(_1a487644c_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a487644c_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a4876804_ContSt {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_Label;
	

	_1a4876804_ContSt(void) = default;

	inline bool operator==(_1a4876804_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1a4876804_ContSt _other) { return !this->operator==(_other); }


};
struct _1a4876c77_If {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	

	_1a4876c77_If(void) = default;

	inline bool operator==(_1a4876c77_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a4876c77_If _other) { return !this->operator==(_other); }


};
struct _1a487712e_Else {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	

	_1a487712e_Else(void) = default;

	inline bool operator==(_1a487712e_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a487712e_Else _other) { return !this->operator==(_other); }


};
struct _1a48775a2_Conditional {
	jule::Ptr<_1a4876c77_If> _field_Head;
	jule::Slice<jule::Ptr<_1a4876c77_If>> _field_Tail;
	jule::Ptr<_1a487712e_Else> _field_Default;
	

	_1a48775a2_Conditional(void) = default;


};
struct _1a4877c78_TypeAliasDecl {
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	

	_1a4877c78_TypeAliasDecl(void) = default;

	inline bool operator==(_1a4877c78_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_CppLinked == _other._field_CppLinked &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a4877c78_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1a48781eb_Case {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_Exprs;
	

	_1a48781eb_Case(void) = default;


};
struct _1a48788c2_MatchCase {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1a48781eb_Case>> _field_Cases;
	jule::Ptr<_1a487712e_Else> _field_Default;
	

	_1a48788c2_MatchCase(void) = default;


};
struct _1a4879164_UseDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Selected;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	

	_1a4879164_UseDecl(void) = default;


};
inline jule::Bool _1a4879939_AutoExpr(_1a48795d7_EnumItemDecl*);
struct _1a48795d7_EnumItemDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	

	_1a48795d7_EnumItemDecl(void) = default;

	inline bool operator==(_1a48795d7_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a48795d7_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a487a693_DefaultTyped(_1a487a110_EnumDecl*);
struct _1a487a110_EnumDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>> _field_Items;
	jule::Ptr<_1ceee8973_Token> _field_End;
	

	_1a487a110_EnumDecl(void) = default;


};
struct _1a487ab16_TypeEnumItemDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	

	_1a487ab16_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1a487ab16_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a487ab16_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1a487b221_TypeEnumDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1ceee8973_Token> _field_End;
	

	_1a487b221_TypeEnumDecl(void) = default;


};
struct _1a487b41e_FieldDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Kind;
	jule::Ptr<_1a4865eca_Expr> _field_Default;
	

	_1a487b41e_FieldDecl(void) = default;

	inline bool operator==(_1a487b41e_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a487b41e_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1a487bbc2_StructDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a487b41e_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _field_Generics;
	

	_1a487bbc2_StructDecl(void) = default;


};
struct _1a487c2cc_TraitDecl {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1a4873438_FnDecl>> _field_Methods;
	

	_1a487c2cc_TraitDecl(void) = default;


};
inline jule::Bool _1a487cc4a_IsTraitImpl(_1a487c8d7_Impl*);
inline jule::Bool _1a487ceae_IsStructImpl(_1a487c8d7_Impl*);
struct _1a487c8d7_Impl {
	jule::Ptr<_1ceee8973_Token> _field_End;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Base;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a4873438_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1a4874417_VarDecl>> _field_Statics;
	

	_1a487c8d7_Impl(void) = default;


};
struct _1a5034d6e_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_1a5034d6e_floatInfo(void) = default;

	inline bool operator==(_1a5034d6e_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1a5034d6e_floatInfo _other) { return !this->operator==(_other); }


};
struct _1a4e378cb_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1a4e378cb_decimalSlice(void) = default;


};
struct _1a537e8a0_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1a537e8a0_leftCheat(void) = default;

	inline bool operator==(_1a537e8a0_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1a537e8a0_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a537b847_set(_1a537ecac_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1a537b979_floatBits(_1a537ecac_decimal*, _1a5034d6e_floatInfo*);
inline void _1a537ee99_assign(_1a537ecac_decimal*, jule::U64);
inline void _1a53800cb_shift(_1a537ecac_decimal*, jule::I64);
inline void _1a538020d_roundDown(_1a537ecac_decimal*, jule::I64);
inline void _1a5380340_roundUp(_1a537ecac_decimal*, jule::I64);
inline void _1a5380472_round(_1a537ecac_decimal*, jule::I64);
inline jule::U64 _1a53805a4_roundedInteger(_1a537ecac_decimal*);
struct _1a537ecac_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1a537ecac_decimal(void) = default;

	inline bool operator==(_1a537ecac_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1a537ecac_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a5389ec6_Const> static__1a538a449_NewI64(jule::I64);
inline jule::Ptr<_1a5389ec6_Const> static__1a538a6e1_NewU64(jule::U64);
inline jule::Ptr<_1a5389ec6_Const> static__1a538a988_NewBool(jule::Bool);
inline jule::Ptr<_1a5389ec6_Const> static__1a538ac30_NewStr(jule::Str);
inline jule::Ptr<_1a5389ec6_Const> static__1a538aec7_NewF64(jule::F64);
inline jule::Ptr<_1a5389ec6_Const> static__1a538b1c5_NewNil(void);
inline jule::I64 _1a538b7be_ReadI64(_1a5389ec6_Const*);
inline jule::U64 _1a538ba33_ReadU64(_1a5389ec6_Const*);
inline jule::Bool _1a538bc97_ReadBool(_1a5389ec6_Const*);
inline jule::Str _1a538c00b_ReadStr(_1a5389ec6_Const*);
inline jule::F64 _1a538c270_ReadF64(_1a5389ec6_Const*);
inline jule::I64 _1a538c4d4_AsI64(_1a5389ec6_Const*);
inline jule::U64 _1a538c748_AsU64(_1a5389ec6_Const*);
inline jule::F64 _1a538c9ac_AsF64(_1a5389ec6_Const*);
inline void _1a538cc32_SetI64(_1a5389ec6_Const*, jule::I64);
inline void _1a538cea7_SetU64(_1a5389ec6_Const*, jule::U64);
inline void _1a538d22c_SetBool(_1a5389ec6_Const*, jule::Bool);
inline void _1a538d4a2_SetStr(_1a5389ec6_Const*, jule::Str);
inline void _1a538d727_SetF64(_1a5389ec6_Const*, jule::F64);
inline void _1a538d903_SetNil(_1a5389ec6_Const*);
inline jule::Bool _1a538db67_IsI64(_1a5389ec6_Const*);
inline jule::Bool _1a538ddcb_IsU64(_1a5389ec6_Const*);
inline jule::Bool _1a538e140_IsBool(_1a5389ec6_Const*);
inline jule::Bool _1a538e3a4_IsStr(_1a5389ec6_Const*);
inline jule::Bool _1a538e618_IsF64(_1a5389ec6_Const*);
inline jule::Bool _1a538e87c_IsNil(_1a5389ec6_Const*);
inline jule::Bool _1a538eb8a_AreSameTypes(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a538ee98_And(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a53902a6_Or(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a53905b4_Eq(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a53908c2_Lt(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5390bd0_LtEq(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5390edd_Gt(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a53912eb_GtEq(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5391609_Add(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5391917_Sub(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5391c25_Mul(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5392033_Div(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5392341_Mod(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a539264e_BitwiseAnd(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a539295c_BitwiseOr(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5392c6a_Xor(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5393078_Lshift(_1a5389ec6_Const*, _1a5389ec6_Const);
inline jule::Bool _1a5393386_Rshift(_1a5389ec6_Const*, _1a5389ec6_Const);
struct _1a5389ec6_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1a5389ec6_Const(void) = default;

	inline jule::Bool operator==(_1a5389ec6_Const _other) { return _1a53905b4_Eq(this, _other); }

	inline bool operator!=(_1a5389ec6_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1a5389ec6_Const _other) { return _1a5390edd_Gt(this, _other); }

	inline jule::Bool operator>=(_1a5389ec6_Const _other) { return _1a53912eb_GtEq(this, _other); }

	inline jule::Bool operator<(_1a5389ec6_Const _other) { return _1a53908c2_Lt(this, _other); }

	inline jule::Bool operator<=(_1a5389ec6_Const _other) { return _1a5390bd0_LtEq(this, _other); }


};
inline jule::Ptr<_1a487d388_FieldIns> _1a3c25610_instance(jule::Ptr<_1a4852208_Field>);
struct _1a4852208_Field {
	jule::Ptr<_1a487d19b_Struct> _field_Owner;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	jule::Ptr<_1a4865eca_Expr> _field_Default;
	

	_1a4852208_Field(void) = default;

	inline bool operator==(_1a4852208_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a4852208_Field _other) { return !this->operator==(_other); }


};
struct _1a485984d_Operators {
	jule::Ptr<_1a53a717a_FnIns> _field_Eq;
	jule::Ptr<_1a53a717a_FnIns> _field_Gt;
	jule::Ptr<_1a53a717a_FnIns> _field_GtEq;
	jule::Ptr<_1a53a717a_FnIns> _field_Lt;
	jule::Ptr<_1a53a717a_FnIns> _field_LtEq;
	jule::Ptr<_1a53a717a_FnIns> _field_Shl;
	jule::Ptr<_1a53a717a_FnIns> _field_Shr;
	jule::Ptr<_1a53a717a_FnIns> _field_Add;
	jule::Ptr<_1a53a717a_FnIns> _field_Sub;
	jule::Ptr<_1a53a717a_FnIns> _field_Div;
	jule::Ptr<_1a53a717a_FnIns> _field_Mul;
	jule::Ptr<_1a53a717a_FnIns> _field_Mod;
	jule::Ptr<_1a53a717a_FnIns> _field_BitAnd;
	jule::Ptr<_1a53a717a_FnIns> _field_BitOr;
	jule::Ptr<_1a53a717a_FnIns> _field_BitXor;
	jule::Ptr<_1a53a717a_FnIns> _field_Neg;
	jule::Ptr<_1a53a717a_FnIns> _field_Pos;
	jule::Ptr<_1a53a717a_FnIns> _field_BitNot;
	jule::Ptr<_1a53a717a_FnIns> _field_AddAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_SubAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_DivAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_MulAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_ModAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_ShlAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_ShrAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_BitOrAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_BitAndAssign;
	jule::Ptr<_1a53a717a_FnIns> _field_BitXorAssign;
	

	_1a485984d_Operators(void) = default;

	inline bool operator==(_1a485984d_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1a485984d_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a487d575_StructIns> _1a483994e_instance(jule::Ptr<_1a487d19b_Struct>);
inline jule::Ptr<_1a487d575_StructIns> _1a483d722_appendInstance(_1a487d19b_Struct*, jule::Ptr<_1a487d575_StructIns>*);
inline jule::Ptr<_1a53a44c9_Fn> _1a483e47b_FindMethod(_1a487d19b_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5418939_Var> _1a48425d3_FindStatic(_1a487d19b_Struct*, jule::Str);
inline jule::Ptr<_1a4852208_Field> _1a4841a33_FindField(_1a487d19b_Struct*, jule::Str);
inline jule::Bool _1a4843e0e_IsImplements(_1a487d19b_Struct*, jule::Ptr<_1a53b63cb_Trait>);
inline jule::Bool _1a484320a_IsDerives(_1a487d19b_Struct*, jule::Str);
inline jule::Bool _1a48471cb_IsUses(_1a487d19b_Struct*, jule::Ptr<_1a487d19b_Struct>);
inline jule::Bool _1a4847891_HasRefAccessible(_1a487d19b_Struct*);
struct _1a487d19b_Struct {
	jule::Ptr<_1a53ea93d_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _field_Uses;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a4852208_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1a53b63cb_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1a487d575_StructIns>> _field_Instances;
	

	_1a487d19b_Struct(void) = default;


};
struct _1a487d388_FieldIns {
	jule::Ptr<_1a4852208_Field> _field_Decl;
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Ptr<_1a5466305_Data> _field_Default;
	

	_1a487d388_FieldIns(void) = default;

	inline bool operator==(_1a487d388_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1a487d388_FieldIns _other) { return !this->operator==(_other); }


};
struct _1a5395ce5_OperandExprModel {
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1a5395ce5_OperandExprModel(void) = default;

	inline bool operator==(_1a5395ce5_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1a5395ce5_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1a53962ac_BinopExprModel {
	jule::Ptr<_1a5395ce5_OperandExprModel> _field_Left;
	jule::Ptr<_1a5395ce5_OperandExprModel> _field_Right;
	jule::Ptr<_1ceee8973_Token> _field_Op;
	

	_1a53962ac_BinopExprModel(void) = default;

	inline bool operator==(_1a53962ac_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a53962ac_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1a5396664_UnaryExprModel {
	jule::Ptr<_1a5466305_Data> _field_Expr;
	jule::Ptr<_1ceee8973_Token> _field_Op;
	

	_1a5396664_UnaryExprModel(void) = default;

	inline bool operator==(_1a5396664_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a5396664_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1a5396a60_StructArgExprModel {
	jule::Ptr<_1a487d388_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a5396a60_StructArgExprModel(void) = default;

	inline bool operator==(_1a5396a60_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a5396a60_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1a5396e17_StructLitExprModel {
	jule::Ptr<_1a487d575_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1a5396a60_StructArgExprModel>> _field_Args;
	

	_1a5396e17_StructLitExprModel(void) = default;


};
struct _1a5397225_AllocStructLitExprModel {
	jule::Ptr<_1a5396e17_StructLitExprModel> _field_Lit;
	

	_1a5397225_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1a5397225_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1a5397225_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1a5397775_CastingExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Ptr<_1a5492287_TypeKind> _field_ExprKind;
	

	_1a5397775_CastingExprModel(void) = default;

	inline bool operator==(_1a5397775_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1a5397775_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1a5398127_FnCallExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a53a717a_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1a53c40dc_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1a5398127_FnCallExprModel(void) = default;


};
struct _1a53984ce_SliceExprModel {
	jule::Ptr<_1a5492287_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1a53984ce_SliceExprModel(void) = default;


};
struct _1a5398952_IndexingExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a5466305_Data> _field_Expr;
	jule::Ptr<_1a5466305_Data> _field_Index;
	

	_1a5398952_IndexingExprModel(void) = default;

	inline bool operator==(_1a5398952_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1a5398952_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a5398d09_AnonFnExprModel {
	jule::Ptr<_1a53a717a_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1a5398d09_AnonFnExprModel(void) = default;

	inline bool operator==(_1a5398d09_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1a5398d09_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1a53991b1_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1a53991b1_KeyValPairExprModel(void) = default;

	inline bool operator==(_1a53991b1_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a53991b1_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1a5399634_MapExprModel {
	jule::Ptr<_1a5492287_TypeKind> _field_KeyKind;
	jule::Ptr<_1a5492287_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1a53991b1_KeyValPairExprModel>> _field_Entries;
	

	_1a5399634_MapExprModel(void) = default;


};
struct _1a5399b73_SlicingExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1a5399b73_SlicingExprModel(void) = default;

	inline bool operator==(_1a5399b73_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1a5399b73_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1a539a1b2_TraitSubIdentExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a53a44c9_Fn> _field_Method;
	jule::Ptr<_1a53b63cb_Trait> _field_Trt;
	

	_1a539a1b2_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1a539a1b2_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1a539a1b2_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a539a998_StructSubIdentExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Ptr<_1a5466305_Data> _field_Expr;
	jule::Ptr<_1a53a717a_FnIns> _field_Method;
	jule::Ptr<_1a487d388_FieldIns> _field_Field;
	jule::Ptr<_1a487d575_StructIns> _field_Owner;
	

	_1a539a998_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1a539a998_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1a539a998_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a539ad3e_StructStaticIdentExprModel {
	jule::Ptr<_1a487d575_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a53a717a_FnIns> _field_Method;
	

	_1a539ad3e_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1a539ad3e_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1a539ad3e_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a539b207_ArrayExprModel {
	jule::Ptr<_1a549d370_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1a539b207_ArrayExprModel(void) = default;


};
struct _1a539b4e3_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1a539b4e3_CommonIdentExprModel(void) = default;

	inline bool operator==(_1a539b4e3_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a539b4e3_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a539ba54_CommonSubIdentExprModel {
	jule::Ptr<_1a5492287_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1a539ba54_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1a539ba54_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a539ba54_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1a539bd51_TupleExprModel {
	jule::Slice<jule::Ptr<_1a5466305_Data>> _field_Datas;
	

	_1a539bd51_TupleExprModel(void) = default;


};
struct _1a539c22a_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1a539c22a_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1a539c22a_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a539c22a_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539c615_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1a539c615_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1a539c615_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1a539c615_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539c934_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a539c934_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1a539c934_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a539c934_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539cd1e_BuiltinNewCallExprModel {
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1a539cd1e_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1a539cd1e_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1a539cd1e_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539d209_BuiltinPanicCallExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a539d209_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1a539d209_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a539d209_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539d6b0_BuiltinAssertCallExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1a539d6b0_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1a539d6b0_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1a539d6b0_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539db66_BuiltinMakeCallExprModel {
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1a539db66_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1a539db66_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1a539db66_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539e051_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1a539e051_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1a539e051_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1a539e051_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539e370_BuiltinLenCallExprModel {
	jule::Ptr<_1a5466305_Data> _field_Expr;
	

	_1a539e370_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1a539e370_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a539e370_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539e68e_BuiltinCapCallExprModel {
	jule::Ptr<_1a5466305_Data> _field_Expr;
	

	_1a539e68e_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1a539e68e_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a539e68e_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a539ed43_BuiltinDeleteCallExprModel {
	jule::Ptr<_1a5466305_Data> _field_Dest;
	jule::Ptr<_1a5466305_Data> _field_Key;
	

	_1a539ed43_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1a539ed43_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1a539ed43_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a01a6_BuiltinCopyCallExprModel {
	jule::Ptr<_1a5466305_Data> _field_Dest;
	jule::Ptr<_1a5466305_Data> _field_Src;
	

	_1a53a01a6_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1a53a01a6_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1a53a01a6_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a0591_BuiltinErrorCallExprModel {
	jule::Ptr<_1a53a717a_FnIns> _field_Func;
	jule::Ptr<_1a5466305_Data> _field_Err;
	

	_1a53a0591_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1a53a0591_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1a53a0591_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a088d_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a53a088d_SizeofExprModel(void) = default;

	inline bool operator==(_1a53a088d_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a53a088d_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a0b79_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a53a0b79_AlignofExprModel(void) = default;

	inline bool operator==(_1a53a0b79_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a53a0b79_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a0e65_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1a53a0e65_RuneExprModel(void) = default;

	inline bool operator==(_1a53a0e65_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1a53a0e65_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a1273_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a53a1273_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1a53a1273_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a53a1273_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a163b_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1a53a163b_BackendEmitExprModel(void) = default;


};
struct _1a53a1927_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a53a1927_FreeExprModel(void) = default;

	inline bool operator==(_1a53a1927_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a53a1927_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1a53a24b6_RetType {
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Idents;
	

	_1a53a24b6_RetType(void) = default;


};
inline jule::Ptr<_1a53a62ab_ParamIns> _1a53a3055_instance(jule::Ptr<_1a53a2b8c_Param>);
inline jule::Bool _1a53a32b9_IsSelf(_1a53a2b8c_Param*);
inline jule::Bool _1a53a352d_IsRef(_1a53a2b8c_Param*);
struct _1a53a2b8c_Param {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1a53a2b8c_Param(void) = default;

	inline bool operator==(_1a53a2b8c_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a53a2b8c_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a53a493b_IsVoid(_1a53a44c9_Fn*);
inline jule::Bool _1a53a4ba0_IsMethod(_1a53a44c9_Fn*);
inline jule::Bool _1a53a4e14_IsEntryPoint(_1a53a44c9_Fn*);
inline jule::Bool _1a53a5178_IsInit(_1a53a44c9_Fn*);
inline jule::Bool _1a53a53dc_IsAnon(_1a53a44c9_Fn*);
inline jule::Bool _1a53a5651_AnyVar(_1a53a44c9_Fn*);
inline jule::Ptr<_1a53a717a_FnIns> _1a53a58b5_instanceForce(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Ptr<_1a53a717a_FnIns> _1a53a5b29_instance(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Ptr<_1a53a717a_FnIns> _1a53a5e04_appendInstance(_1a53a44c9_Fn*, jule::Ptr<_1a53a717a_FnIns>*);
struct _1a53a44c9_Fn {
	jule::Ptr<_1a53ea93d_Sema> _field_sema;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_Directives;
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _field_Generics;
	jule::Ptr<_1a53a24b6_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1a53a2b8c_Param>> _field_Params;
	jule::Ptr<_1a487d19b_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1a53a717a_FnIns>> _field_Instances;
	

	_1a53a44c9_Fn(void) = default;


};
inline jule::Str _1a53a6685_Str(_1a53a62ab_ParamIns*);
struct _1a53a62ab_ParamIns {
	jule::Ptr<_1a53a2b8c_Param> _field_Decl;
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	

	_1a53a62ab_ParamIns(void) = default;

	inline bool operator==(_1a53a62ab_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a53a62ab_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1a53a74aa_Str(_1a53a717a_FnIns*);
inline jule::Bool _1a53a77b8_Equal(jule::Ptr<_1a53a717a_FnIns>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a53a7c2a_EqualFn(jule::Ptr<_1a53a717a_FnIns>, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Bool _1a53a8038_equalTrait(jule::Ptr<_1a53a717a_FnIns>, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _1a53a829c_Types(_1a53a717a_FnIns*);
inline jule::Bool _1a53a8511_IsBuiltin(_1a53a717a_FnIns*);
inline jule::Bool _1a53a8775_IsAnon(_1a53a717a_FnIns*);
inline jule::Bool _1a53a8a83_Same(_1a53a717a_FnIns*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Str _1a53a8d91_GetKindStr(_1a53a717a_FnIns*, jule::Bool);
struct _1a53a717a_FnIns {
	jule::Ptr<_1a487d575_StructIns> _field_Owner;
	jule::Ptr<_1a53a44c9_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1a5490a5a_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>> _field_Params;
	jule::Ptr<_1a5492287_TypeKind> _field_Result;
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	jule::Ptr<_1a53aa0e5_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1a53a717a_FnIns(void) = default;


};
inline jule::Ptr<_1a53aa0e5_ReferenceStack> static__1a53aa37b_new(void);
inline jule::I64 _1a53aa711_Len(_1a53aa0e5_ReferenceStack*);
inline jule::Any _1a53aaa1e_At(_1a53aa0e5_ReferenceStack*, jule::I64);
inline void _1a53aac94_Push(_1a53aa0e5_ReferenceStack*, jule::Any);
inline jule::Bool _1a7eb32b1_Exist(_1a53aa0e5_ReferenceStack*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Bool _1a7ec6ca8_Exist(_1a53aa0e5_ReferenceStack*, jule::Ptr<_1a5418939_Var>);
inline jule::Bool _1a8066991_Exist(_1a53aa0e5_ReferenceStack*, jule::Ptr<_1a487d575_StructIns>);
inline jule::Bool _1a82d139d_Exist(_1a53aa0e5_ReferenceStack*, jule::Ptr<_1a53b63cb_Trait>);
struct _1a53aa0e5_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1a53aa0e5_ReferenceStack(void) = default;


};
struct _1a53ab459_Pass {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Text;
	

	_1a53ab459_Pass(void) = default;

	inline bool operator==(_1a53ab459_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1a53ab459_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a53b0903_symbolBuilder> _1a53b0da9_getRoot(jule::Ptr<_1a53b0903_symbolBuilder>);
inline void _1a53b1272_pushErr(_1a53b0903_symbolBuilder*, jule::Ptr<_1ceee8973_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1a53b163a_pushErrText(_1a53b0903_symbolBuilder*, jule::Ptr<_1ceee8973_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1a53b1959_pushSuggestion(_1a53b0903_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a53b1d11_checkCppUseDeclPath(_1a53b0903_symbolBuilder*, jule::Ptr<_1a4879164_UseDecl>*, jule::Str);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b20db_buildCppHeaderImport(_1a53b0903_symbolBuilder*, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b23e9_buildStdImport(_1a53b0903_symbolBuilder*, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b2707_buildIdentImport(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b2a15_buildImport(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Bool _1a53b2d23_checkDuplicateUseDecl(_1a53b0903_symbolBuilder*, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline void _1a53b3142_implImportSelections(_1a53b0903_symbolBuilder*, jule::Ptr<_1a53e27e2_ImportInfo>*, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Str _1a53b3450_getAsLinkPath(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Str);
inline void _1a53b3818_pushCycleError(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a53b0903_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1a53b3bd1_pushCrossCycleError(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a53b0903_symbolBuilder>*, jule::Ptr<_1a53e27e2_ImportInfo>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a53b4088_checkImportCycles(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a53e27e2_ImportInfo>, jule::Ptr<_1a4879164_UseDecl>*);
inline void _1a53b4473_checkPackageAccessibility(_1a53b0903_symbolBuilder*, jule::Ptr<_1a4879164_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1a53b483b_importPackage(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a53e27e2_ImportInfo>*, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b4b49_importUseDecl(jule::Ptr<_1a53b0903_symbolBuilder>, jule::Ptr<_1a4879164_UseDecl>*);
inline void _1a53b4d25_importUseDecls(jule::Ptr<_1a53b0903_symbolBuilder>);
inline void _1a53b509a_appendNode(_1a53b0903_symbolBuilder*, _1a3c1cc01_Node*);
inline void _1a53b5276_appendNodes(_1a53b0903_symbolBuilder*);
inline void _1a53b54eb_pushDirectivePass(_1a53b0903_symbolBuilder*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53b56c7_appendTopDirectives(_1a53b0903_symbolBuilder*);
inline void _1a53b58a3_build(jule::Ptr<_1a53b0903_symbolBuilder>);
struct _1a53b0903_symbolBuilder {
	jule::Ptr<_1a53b0903_symbolBuilder> _field_owner;
	jule::Trait<_1a53deb74_Importer> _field_importer;
	jule::Slice<_1ceb4952a_Log> _field_errors;
	jule::Ptr<_1a3c1be0e_Ast> _field_ast;
	jule::Ptr<_1a54614cb_SymbolTable> _field_table;
	

	_1a53b0903_symbolBuilder(void) = default;


};
inline jule::Str _1a53b67c7_Str(_1a53b63cb_Trait*);
inline jule::Bool _1a53b6ad5_Equal(jule::Ptr<_1a53b63cb_Trait>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a53b6e48_IsBuiltin(_1a53b63cb_Trait*);
inline jule::Ptr<_1a53a44c9_Fn> _1a53b7256_FindMethod(_1a53b63cb_Trait*, jule::Str);
struct _1a53b63cb_Trait {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _field_Implemented;
	

	_1a53b63cb_Trait(void) = default;


};
inline jule::Bool _1a53b7e16_AutoExpr(_1a53b7a2b_EnumItem*);
struct _1a53b7a2b_EnumItem {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a546737d_Value> _field_Value;
	

	_1a53b7a2b_EnumItem(void) = default;

	inline bool operator==(_1a53b7a2b_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1a53b7a2b_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a53b8884_Str(_1a53b8521_Enum*);
inline jule::Bool _1a53b8b92_Equal(jule::Ptr<_1a53b8521_Enum>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Ptr<_1a53b7a2b_EnumItem> _1a53b90d2_FindItem(_1a53b8521_Enum*, jule::Str);
struct _1a53b8521_Enum {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>> _field_Items;
	

	_1a53b8521_Enum(void) = default;


};
struct _1a53b9555_TypeEnumItem {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	

	_1a53b9555_TypeEnumItem(void) = default;

	inline bool operator==(_1a53b9555_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a53b9555_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1a53b9e4b_Str(_1a53b9b1b_TypeEnum*);
inline jule::Bool _1a53ba259_Equal(jule::Ptr<_1a53b9b1b_TypeEnum>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Ptr<_1a53b9555_TypeEnumItem> _1a53ba655_FindItem(_1a53b9b1b_TypeEnum*, jule::Str);
struct _1a53b9b1b_TypeEnum {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>> _field_Items;
	

	_1a53b9b1b_TypeEnum(void) = default;


};
inline jule::Fn<jule::Bool(jule::Ptr<_1a53ea93d_Sema>*,jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*)> _1a53bc57a_readyFn(jule::Ptr<_1a53bc14b_constraintChecker>);
inline jule::Bool _1a53bc7de_readyFi(jule::Ptr<_1a53bc14b_constraintChecker>);
inline jule::Bool _1a53bca53_readySi(jule::Ptr<_1a53bc14b_constraintChecker>);
inline jule::Bool _1a53bccb7_ready(jule::Ptr<_1a53bc14b_constraintChecker>);
inline jule::Bool _1a53bd02b_check(jule::Ptr<_1a53bc14b_constraintChecker>);
struct _1a53bc14b_constraintChecker {
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1a5490a5a_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _field_genericsA;
	jule::Ptr<_1a53a717a_FnIns> _field_fi;
	jule::Ptr<_1a487d575_StructIns> _field_si;
	jule::Ptr<_1ceee8973_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1a53bc14b_constraintChecker(void) = default;


};
inline jule::Bool _1a53be47d_IsTraitImpl(_1a53be082_Impl*);
inline jule::Bool _1a53be6e2_IsStructImpl(_1a53be082_Impl*);
struct _1a53be082_Impl {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Base;
	jule::Ptr<_1a48619a9_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_Statics;
	

	_1a53be082_Impl(void) = default;


};
struct _1a53c40dc_Scope {
	jule::Ptr<_1a53c40dc_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1a53c40dc_Scope(void) = default;


};
struct _1a53c44d8_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	

	_1a53c44d8_If(void) = default;

	inline bool operator==(_1a53c44d8_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a53c44d8_If _other) { return !this->operator==(_other); }


};
struct _1a53c47c4_Else {
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	

	_1a53c47c4_Else(void) = default;

	inline bool operator==(_1a53c47c4_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a53c47c4_Else _other) { return !this->operator==(_other); }


};
struct _1a53c4b48_Conditional {
	jule::Slice<jule::Ptr<_1a53c44d8_If>> _field_Elifs;
	jule::Ptr<_1a53c47c4_Else> _field_Default;
	

	_1a53c4b48_Conditional(void) = default;


};
struct _1a53c4e34_InfIter {
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	

	_1a53c4e34_InfIter(void) = default;

	inline bool operator==(_1a53c4e34_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a53c4e34_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a53c574d_IsWhileNext(_1a53c53a7_WhileIter*);
struct _1a53c53a7_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	

	_1a53c53a7_WhileIter(void) = default;

	inline bool operator==(_1a53c53a7_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1a53c53a7_WhileIter _other) { return !this->operator==(_other); }


};
struct _1a53c5c8c_RangeIter {
	jule::Ptr<_1a5466305_Data> _field_Expr;
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	jule::Ptr<_1a5418939_Var> _field_KeyA;
	jule::Ptr<_1a5418939_Var> _field_KeyB;
	

	_1a53c5c8c_RangeIter(void) = default;

	inline bool operator==(_1a53c5c8c_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1a53c5c8c_RangeIter _other) { return !this->operator==(_other); }


};
struct _1a53c6188_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1a53c6188_ContSt(void) = default;

	inline bool operator==(_1a53c6188_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1a53c6188_ContSt _other) { return !this->operator==(_other); }


};
struct _1a53c6540_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1a53c6540_BreakSt(void) = default;

	inline bool operator==(_1a53c6540_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1a53c6540_BreakSt _other) { return !this->operator==(_other); }


};
struct _1a53c682b_Label {
	jule::Str _field_Ident;
	

	_1a53c682b_Label(void) = default;

	inline bool operator==(_1a53c682b_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a53c682b_Label _other) { return !this->operator==(_other); }


};
struct _1a53c6b17_GotoSt {
	jule::Str _field_Ident;
	

	_1a53c6b17_GotoSt(void) = default;

	inline bool operator==(_1a53c6b17_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1a53c6b17_GotoSt _other) { return !this->operator==(_other); }


};
struct _1a53c6ebe_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1a53c6ebe_Postfix(void) = default;

	inline bool operator==(_1a53c6ebe_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a53c6ebe_Postfix _other) { return !this->operator==(_other); }


};
struct _1a53c7442_Assign {
	jule::Ptr<_1a5395ce5_OperandExprModel> _field_L;
	jule::Ptr<_1a5395ce5_OperandExprModel> _field_R;
	jule::Ptr<_1ceee8973_Token> _field_Op;
	

	_1a53c7442_Assign(void) = default;

	inline bool operator==(_1a53c7442_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1a53c7442_Assign _other) { return !this->operator==(_other); }


};
struct _1a53c77e9_MultiAssign {
	jule::Slice<jule::Ptr<_1a5466305_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1a53c77e9_MultiAssign(void) = default;


};
inline jule::Bool _1a53c8344_IsGenericTypeMatch(_1a53c7d38_Match*);
struct _1a53c7d38_Match {
	jule::Ptr<_1a5466305_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Slice<jule::Ptr<_1a53c8883_Case>> _field_Cases;
	jule::Ptr<_1a53c8883_Case> _field_Default;
	

	_1a53c7d38_Match(void) = default;


};
inline jule::Bool _1a53c8b4c_isDefault(_1a53c8883_Case*);
struct _1a53c8883_Case {
	jule::Ptr<_1a53c7d38_Match> _field_Owner;
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1a5466305_Data>> _field_Exprs;
	jule::Ptr<_1a53c8883_Case> _field_Next;
	

	_1a53c8883_Case(void) = default;


};
struct _1a53c8e38_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1a53c8e38_FallSt(void) = default;

	inline bool operator==(_1a53c8e38_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1a53c8e38_FallSt _other) { return !this->operator==(_other); }


};
struct _1a53c92ac_RetSt {
	jule::Ptr<_1a53a717a_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1a53c92ac_RetSt(void) = default;

	inline bool operator==(_1a53c92ac_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1a53c92ac_RetSt _other) { return !this->operator==(_other); }


};
struct _1a53c98b7_scopeLabel {
	jule::Ptr<_1ceee8973_Token> _field_token;
	jule::Ptr<_1a53c682b_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1a53cab4e_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1a53c98b7_scopeLabel(void) = default;

	inline bool operator==(_1a53c98b7_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1a53c98b7_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1a53c9d3a_scopeGoto {
	jule::Ptr<_1a486e511_GotoSt> _field_gt;
	jule::Ptr<_1a53cab4e_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1a53c9d3a_scopeGoto(void) = default;

	inline bool operator==(_1a53c9d3a_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1a53c9d3a_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53cb0d3_FindPackage(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53cb3e1_SelectPackage(_1a53cab4e_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>);
inline jule::Ptr<_1a5418939_Var> _1a53cb798_FindVar(_1a53cab4e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a53cbb50_FindTypeAlias(_1a53cab4e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d19b_Struct> _1a53cc007_FindStruct(_1a53cab4e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53a44c9_Fn> _1a53cc3ae_FindFn(_1a53cab4e_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53b63cb_Trait> _1a53cc6bc_FindTrait(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Ptr<_1a53b8521_Enum> _1a53cc9ca_FindEnum(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53cccd8_FindTypeEnum(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Bool _1a53cd118_isUnsafe(jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Bool _1a53cd37c_isRoot(_1a53cab4e_scopeChecker*);
inline void _1a53cd558_stop(_1a53cab4e_scopeChecker*);
inline jule::Bool _1a53cd7bc_stopped(_1a53cab4e_scopeChecker*);
inline jule::Bool _1a53cda31_isDeferred(jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53cdc95_getRoot(jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53ce009_getHardRoot(jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Ptr<_1a53c682b_Label> _1a53ce317_findLabel(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Ptr<_1a53c98b7_scopeLabel> _1a53ce625_findLabelScope(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Str);
inline jule::Ptr<_1a53c98b7_scopeLabel> _1a53ce933_findLabelAll(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Bool _1a53cecda_isDuplicatedIdent(_1a53cab4e_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1a53d0060_checkVarDecl(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4874417_VarDecl>);
inline void _1a53d02d5_checkTypeAliasDecl(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4877c78_TypeAliasDecl>);
inline jule::Ptr<_1a53c40dc_Scope> _1a53d0549_getChild(_1a53cab4e_scopeChecker*);
inline void _1a53d0912_checkChildSsc(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4871942_ScopeTree>*, jule::Ptr<_1a53c40dc_Scope>*, jule::Ptr<_1a53cab4e_scopeChecker>*);
inline jule::Ptr<_1a53c40dc_Scope> _1a53d0cb9_checkChildSc(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4871942_ScopeTree>*, jule::Ptr<_1a53cab4e_scopeChecker>*);
inline jule::Ptr<_1a53c40dc_Scope> _1a53d10c7_checkChild(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4871942_ScopeTree>*);
inline void _1a53d134c_checkAnonScope(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4871942_ScopeTree>);
inline void _1a53d166b_processErrorCall(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel>*, jule::Ptr<_1ceee8973_Token>);
inline void _1a53d18e1_checkExpr(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4865eca_Expr>);
inline jule::Ptr<_1a53c44d8_If> _1a53d1bee_checkIf(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4876c77_If>);
inline jule::Ptr<_1a53c47c4_Else> _1a53d200c_checkElse(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a487712e_Else>);
inline void _1a53d2282_checkConditional(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a48775a2_Conditional>);
inline void _1a53d26e4_checkIterScopeSsc(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Uintptr, jule::Ptr<_1a4871942_ScopeTree>, jule::Ptr<_1a53c40dc_Scope>*, jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Ptr<_1a53c40dc_Scope> _1a53d2b45_checkIterScopeSc(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Uintptr, jule::Ptr<_1a4871942_ScopeTree>, jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Ptr<_1a53c40dc_Scope> _1a53d2eec_checkIterScope(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Uintptr, jule::Ptr<_1a4871942_ScopeTree>*);
inline void _1a53d3272_checkInfIter(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4874e2e_Iter>*);
inline void _1a53d34e7_checkWhileIter(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4874e2e_Iter>*);
inline void _1a53d376c_checkRangeIter(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4874e2e_Iter>*);
inline void _1a53d39e2_checkIter(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4874e2e_Iter>);
inline jule::Bool _1a53d3d00_checkValidContLabel(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Uintptr);
inline jule::Bool _1a53d410d_checkValidBreakLabel(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1a53c6188_ContSt> _1a53d441b_checkContValidScope(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4876804_ContSt>);
inline void _1a53d4691_checkCont(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4876804_ContSt>);
inline void _1a53d4916_checkLabel(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a486e159_LabelSt>);
inline void _1a53d4b8b_pushGoto(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a486e511_GotoSt>);
inline void _1a53d4e11_checkPostfix(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4870446_AssignSt>);
inline jule::Bool _1a53d521e_isNewAssignIdent(_1a53cab4e_scopeChecker*, jule::Str);
inline jule::Bool _1a53d5670_checkStructureAssignOp(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1a4870446_AssignSt>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a53d58e5_checkSingleAssign(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4870446_AssignSt>*);
inline void _1a53d5e23_processEndPartOfMultiAssign(_1a53cab4e_scopeChecker*, jule::Ptr<_1a53c77e9_MultiAssign>*, jule::Ptr<_1a4870446_AssignSt>*, jule::Ptr<_1a486ee07_AssignLeft>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a53d61a9_checkMultiAssign(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4870446_AssignSt>*);
inline void _1a53d642e_checkAssignSt(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4870446_AssignSt>);
inline jule::Ptr<_1a53c40dc_Scope> _1a53d67d6_checkCaseScope(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a53c8883_Case>*, jule::Ptr<_1a4871942_ScopeTree>*);
inline jule::Ptr<_1a53c8883_Case> _1a53d6cd1_checkCase(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a53c7d38_Match>, jule::I64, jule::Ptr<_1a48781eb_Case>, jule::Ptr<_1a5466305_Data>);
inline void _1a53d7199_checkCases(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a48788c2_MatchCase>*, jule::Ptr<_1a53c7d38_Match>, jule::Ptr<_1a5466305_Data>);
inline jule::Ptr<_1a53c8883_Case> _1a53d7551_checkDefault(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a53c7d38_Match>, jule::Ptr<_1a487712e_Else>);
inline void _1a53d77c6_checkComptimePanic(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a53c40dc_Scope>*);
inline void _1a53d7ae5_pushTypeMatch(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a53c7d38_Match>, jule::Ptr<_1a48788c2_MatchCase>*);
inline void _1a53d7d6a_checkTypeMatch(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a48788c2_MatchCase>*);
inline void _1a53d80e0_checkCommonMatch(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a48788c2_MatchCase>*);
inline void _1a53d8365_checkMatch(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a48788c2_MatchCase>);
inline void _1a53d85da_checkFall(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a486e7ec_FallSt>);
inline jule::Ptr<_1a53c6540_BreakSt> _1a53d88e8_checkBreakWithLabel(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a487644c_BreakSt>);
inline jule::Ptr<_1a53c6540_BreakSt> _1a53d8c06_checkPlainBreak(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a487644c_BreakSt>);
inline void _1a53d8e7b_checkBreak(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a487644c_BreakSt>);
inline void _1a53d9201_checkRet(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a48747be_RetSt>);
inline void _1a53d9476_checkUseExpr(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a486686b_UseExpr>);
inline void _1a53d96eb_checkNode(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Any*);
inline void _1a53d98c7_checkResult(jule::Ptr<_1a53cab4e_scopeChecker>);
inline void _1a53d9aa3_checkTree(jule::Ptr<_1a53cab4e_scopeChecker>);
inline void _1a53d9dc2_checkGoto(_1a53cab4e_scopeChecker*, jule::Ptr<_1a53c9d3a_scopeGoto>*, jule::Ptr<_1a53c98b7_scopeLabel>*);
inline void _1a53da09d_checkGotos(_1a53cab4e_scopeChecker*);
inline void _1a53da279_checkLabels(_1a53cab4e_scopeChecker*);
inline void _1a53da455_checkVars(_1a53cab4e_scopeChecker*);
inline void _1a53da631_checkAliases(_1a53cab4e_scopeChecker*);
inline void _1a53da950_check(jule::Ptr<_1a53cab4e_scopeChecker>, jule::Ptr<_1a4871942_ScopeTree>*, jule::Ptr<_1a53c40dc_Scope>*);
inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53dabb4_newChildChecker(jule::Ptr<_1a53cab4e_scopeChecker>);
struct _1a53cab4e_scopeChecker {
	jule::Ptr<_1ceee8973_Token> _field_calledFrom;
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Ptr<_1a53a717a_FnIns> _field_owner;
	jule::Ptr<_1a53cab4e_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1a54614cb_SymbolTable> _field_table;
	jule::Ptr<_1a53c40dc_Scope> _field_scope;
	jule::Ptr<_1a4871942_ScopeTree> _field_tree;
	jule::Ptr<_1a53a717a_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a53c98b7_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a53c9d3a_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1a53cab4e_scopeChecker(void) = default;

	inline bool operator==(_1a53cab4e_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a53cab4e_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1a53dbba4_checkCdef(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dbe29_checkTypedef(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dc19e_checkDerive(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dc424_checkNamespace(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dc699_checkDeprecated(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dc91e_checkTest(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dcb94_checkDirective(_1a53db764_directiveChecker*, jule::Ptr<_1a3c1d0ec_Directive>*);
inline void _1a53dcd70_check(_1a53db764_directiveChecker*);
struct _1a53db764_directiveChecker {
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1a53db764_directiveChecker(void) = default;

	inline bool operator==(_1a53db764_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1a53db764_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e2d0e_FindPackage(_1a53e27e2_ImportInfo*, jule::Str);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e311c_SelectPackage(_1a53e27e2_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>);
inline jule::Ptr<_1a5418939_Var> _1a53e34c4_FindVar(_1a53e27e2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a53e387b_FindTypeAlias(_1a53e27e2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d19b_Struct> _1a53e3c33_FindStruct(_1a53e27e2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53a44c9_Fn> _1a53e40da_FindFn(_1a53e27e2_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53b63cb_Trait> _1a53e43e8_FindTrait(_1a53e27e2_ImportInfo*, jule::Str);
inline jule::Ptr<_1a53b8521_Enum> _1a53e4706_FindEnum(_1a53e27e2_ImportInfo*, jule::Str);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53e4a14_FindTypeEnum(_1a53e27e2_ImportInfo*, jule::Str);
inline jule::Bool _1a53e4daa_isLookupable(_1a53e27e2_ImportInfo*, jule::Str);
inline jule::Bool _1a53e51b8_existIdent(_1a53e27e2_ImportInfo*, jule::Str);
inline jule::Bool _1a53e544e_isAccessibleViaSelection(_1a53e27e2_ImportInfo*);
struct _1a53e27e2_ImportInfo {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_Selected;
	jule::Ptr<_1a53e574b_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1a53e27e2_ImportInfo(void) = default;


};
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e5c24_FindPackage(_1a53e574b_Package*, jule::Str);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e6032_SelectPackage(_1a53e574b_Package*, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>);
inline jule::Ptr<_1a5418939_Var> _1a53e63d9_FindVar(_1a53e574b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a53e6791_FindTypeAlias(_1a53e574b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d19b_Struct> _1a53e6b48_FindStruct(_1a53e574b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53a44c9_Fn> _1a53e7000_FindFn(_1a53e574b_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53b63cb_Trait> _1a53e730d_FindTrait(_1a53e574b_Package*, jule::Str);
inline jule::Ptr<_1a53b8521_Enum> _1a53e761b_FindEnum(_1a53e574b_Package*, jule::Str);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53e7929_FindTypeEnum(_1a53e574b_Package*, jule::Str);
struct _1a53e574b_Package {
	jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>> _field_Files;
	

	_1a53e574b_Package(void) = default;


};
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53eae5a_FindPackage(_1a53ea93d_Sema*, jule::Str);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53eb268_SelectPackage(_1a53ea93d_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>);
inline jule::Ptr<_1a5418939_Var> _1a53eb620_FindVar(_1a53ea93d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a53eb9c7_FindTypeAlias(_1a53ea93d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d19b_Struct> _1a53ebd7e_FindStruct(_1a53ea93d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53a44c9_Fn> _1a53ec236_FindFn(_1a53ea93d_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53b63cb_Trait> _1a53ec544_FindTrait(_1a53ea93d_Sema*, jule::Str);
inline jule::Ptr<_1a53b8521_Enum> _1a53ec852_FindEnum(_1a53ea93d_Sema*, jule::Str);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53ecb60_FindTypeEnum(_1a53ea93d_Sema*, jule::Str);
inline jule::Bool _1a53eceb2_isFlag(_1a53ea93d_Sema*, jule::I64);
inline void _1a53ed237_setCurrentFile(_1a53ea93d_Sema*, jule::Ptr<_1a54614cb_SymbolTable>);
inline void _1a53ed600_pushErr(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a53ed91e_pushSugggestion(_1a53ea93d_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a53edcc6_isAccessibleDefine(_1a53ea93d_Sema*, jule::Bool, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a53ee227_isDuplicatedIdent(_1a53ea93d_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1a53ee546_checkDirectives(jule::Ptr<_1a53ea93d_Sema>, jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Any);
inline jule::Bool _1a53ee997_checkGenericQuantity(_1a53ea93d_Sema*, jule::I64, jule::I64, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a53eed71_isDuplicatedImportSelection(_1a53ea93d_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1a5400239_getImportDef(_1a53ea93d_Sema*, jule::Str, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline jule::Bool _1a7bca1a4_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a5418939_Var>*);
inline jule::Bool _1a7bce0ed_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a5491594_TypeAlias>*);
inline jule::Bool _1a7bd2db0_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Bool _1a7bd718e_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a53b63cb_Trait>*);
inline jule::Bool _1a7bdae62_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a53b8521_Enum>*);
inline jule::Bool _1a7bded56_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a53b9b1b_TypeEnum>*);
inline jule::Bool _1a7be3ae6_checkImportSelection(_1a53ea93d_Sema*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a53a44c9_Fn>*);
inline jule::Bool _1a5400921_checkImportSelectedSelections(_1a53ea93d_Sema*, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline jule::Bool _1a7be803a_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a5418939_Var>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a7beb58d_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a7bebb65_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a487d19b_Struct>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a7c01eab_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a53a44c9_Fn>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a7c02594_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a53b63cb_Trait>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a7c05256_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a53b8521_Enum>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a7c07e18_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a53b9b1b_TypeEnum>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a540114c_checkImportAllSelections(_1a53ea93d_Sema*, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline jule::Bool _1a540146b_checkImportSelections(_1a53ea93d_Sema*, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline jule::Bool _1a5401779_isUseAliasDuplication(_1a53ea93d_Sema*, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline jule::Bool _1a5401a87_checkImport(_1a53ea93d_Sema*, jule::Ptr<_1a53e27e2_ImportInfo>*);
inline void _1a5401c63_checkImports(_1a53ea93d_Sema*);
inline void _1a5401e3e_implFileImpls(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a540211a_implImpls(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a54022e6_checkEnums(jule::Ptr<_1a53ea93d_Sema>);
inline _1a54a0b03_typeChecker _1a5402747_typeChecker(jule::Ptr<_1a53ea93d_Sema>, jule::Trait<_1a54ad209_Lookup>, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>, jule::Ptr<_1a549ec23_referencer>);
inline jule::Ptr<_1a5492287_TypeKind> _1a5402c42_buildTypeWithRefers(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a48619a9_TypeDecl>*, jule::Trait<_1a54ad209_Lookup>, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>, jule::Ptr<_1a549ec23_referencer>);
inline jule::Bool _1a540323c_checkTypeWithRefers(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5496665_TypeSymbol>*, jule::Trait<_1a54ad209_Lookup>, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>, jule::Ptr<_1a549ec23_referencer>);
inline jule::Ptr<_1a53bc14b_constraintChecker> _1a54034a1_constraintChecker(jule::Ptr<_1a53ea93d_Sema>);
inline jule::Bool _1a5403858_checkType(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5496665_TypeSymbol>*, jule::Trait<_1a54ad209_Lookup>);
inline jule::Ptr<_1a5492287_TypeKind> _1a5403ca9_buildTypeWithGenerics(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a48619a9_TypeDecl>*, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>, jule::Ptr<_1a53aa0e5_ReferenceStack>);
inline jule::Ptr<_1a5492287_TypeKind> _1a54040b7_buildType(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a48619a9_TypeDecl>*);
inline jule::Ptr<_1a5492287_TypeKind> _1a54043c5_selectType(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a48619a9_TypeDecl>*);
inline jule::Ptr<_1a5467d73_Eval> _1a5404826_evalpd(jule::Ptr<_1a53ea93d_Sema>, jule::Trait<_1a54ad209_Lookup>, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5418939_Var>);
inline jule::Ptr<_1a5467d73_Eval> _1a5404bcd_evalp(jule::Ptr<_1a53ea93d_Sema>, jule::Trait<_1a54ad209_Lookup>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Ptr<_1a5467d73_Eval> _1a5404edb_eval(jule::Ptr<_1a53ea93d_Sema>, jule::Trait<_1a54ad209_Lookup>);
inline jule::Bool _1a54054d6_checkAssignType(jule::Ptr<_1a53ea93d_Sema>, jule::Bool, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a5405937_checkTypeCompatibility(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Ptr<_1a5492287_TypeKind> _1a5405daa_buildNonGenericTypeKind(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a48619a9_TypeDecl>*, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>*, jule::Slice<jule::Ptr<_1a5492287_TypeKind>>*);
inline jule::Bool _1a5406295_buildFnNonGenericTypeKinds(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a717a_FnIns>*, jule::Slice<jule::Ptr<_1a5492287_TypeKind>>*);
inline jule::Ptr<_1a53a717a_FnIns> _1a54065b4_getTraitCheckFnKind(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a44c9_Fn>*);
inline jule::Bool _1a5406a15_checkConstraintsFn(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Bool _1a5406e66_checkConstraintsStruct(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a487d575_StructIns>);
inline jule::Bool _1a540731d_fnEnvironment(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a717a_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1a53ea93d_Sema>*,jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*)>);
inline void _1a5407593_checkFnParamKind(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a62ab_ParamIns>*);
inline jule::Bool _1a54078a1_reloadFnInsTypes(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Bool _1a5407d24_checkRefValidityForInitExpr(jule::Ptr<_1a53ea93d_Sema>, jule::Bool, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a54083eb_checkValidityForInitExpr(jule::Ptr<_1a53ea93d_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a54087b4_checkTypeAliasDeclKind(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5491594_TypeAlias>*, jule::Trait<_1a54ad209_Lookup>);
inline void _1a5408ad3_checkTypeAliasDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5491594_TypeAlias>*, jule::Trait<_1a54ad209_Lookup>);
inline void _1a5408d58_checkTypeAliasDeclDup(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5491594_TypeAlias>*);
inline jule::Bool _1a54090bc_checkTypeAliasDecls(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a7c73082_checkEnumItemsDup(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>>);
inline void _1a7c7d378_checkEnumItemsDup(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>>);
inline void _1a54095b7_checkEnumItemsStr(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53b8521_Enum>*);
inline void _1a540983c_checkEnumItemsInt(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53b8521_Enum>*);
inline void _1a5409ab2_checkEnumDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53b8521_Enum>*);
inline void _1a5409d37_checkTypeEnumDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53b9b1b_TypeEnum>*);
inline jule::Bool _1a540a09b_checkEnumDecls(jule::Ptr<_1a53ea93d_Sema>);
inline jule::Bool _1a540a310_checkTypeEnumDecls(jule::Ptr<_1a53ea93d_Sema>);
inline jule::Bool _1a540a61d_checkDeclGenerics(_1a53ea93d_Sema*, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>*);
inline jule::Bool _1a540a92b_checkFnDeclParamsDup(_1a53ea93d_Sema*, jule::Ptr<_1a53a44c9_Fn>*);
inline jule::Bool _1a540ac39_checkFnDeclResultDup(_1a53ea93d_Sema*, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a540aeae_checkFnDeclPrototype(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a540b234_checkTraitDeclMethod(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a540b4a9_checkTraitDeclMethods(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53b63cb_Trait>*);
inline void _1a540b72e_checkTraitDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53b63cb_Trait>*);
inline jule::Bool _1a540b993_checkTraitDecls(jule::Ptr<_1a53ea93d_Sema>);
inline jule::Bool _1a540bd4a_checkTraitImplMethods(_1a53ea93d_Sema*, jule::Ptr<_1a53b63cb_Trait>*, jule::Ptr<_1a53be082_Impl>*);
inline jule::Bool _1a540c202_implToStruct(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*, jule::Ptr<_1a53be082_Impl>*);
inline void _1a540c477_implTrait(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53be082_Impl>*);
inline void _1a540c6ec_implStruct(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53be082_Impl>*);
inline void _1a540c972_implImpl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53be082_Impl>*);
inline void _1a540cc91_checkVarDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5418939_Var>*, jule::Trait<_1a54ad209_Lookup>);
inline void _1a540d016_checkGlobalVarDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5418939_Var>*);
inline jule::Bool _1a540d27a_checkGlobalDecls(jule::Ptr<_1a53ea93d_Sema>);
inline jule::Bool _1a540d632_checkStructTraitImpl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*, jule::Ptr<_1a53b63cb_Trait>*);
inline jule::Bool _1a540d940_checkStructImpls(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Bool _1a540dc4d_checkStructFields(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a540dec3_checkStructDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Bool _1a540e237_checkStructDecls(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a540e4ac_checkFnDecl(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a44c9_Fn>*);
inline jule::Bool _1a540e721_checkFnDecls(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a540ead9_pushCycleError(_1a53ea93d_Sema*, jule::Ptr<_1a487d19b_Struct>*, jule::Ptr<_1a487d19b_Struct>*, jule::Str*);
inline jule::Bool _1a541003a_checkCrossCycle(_1a53ea93d_Sema*, jule::Ptr<_1a487d19b_Struct>*, jule::Ptr<_1a487d19b_Struct>*, jule::Str*);
inline jule::Bool _1a54104ad_checkStructDeriveIllegalCycles(_1a53ea93d_Sema*, jule::Str, jule::Ptr<_1a487d19b_Struct>*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a54107ee_checkStructInsDeriveClone(_1a53ea93d_Sema*, jule::Ptr<_1a487d575_StructIns>);
inline void _1a54109db_checkPackageDecls(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a5410d2c_checkDataForTypeInference(_1a53ea93d_Sema*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline void _1a54110b3_checkVar(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5418939_Var>*);
inline void _1a54113d2_checkTypeVar(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a5418939_Var>*, jule::Trait<_1a54ad209_Lookup>);
inline void _1a54115ad_checkGlobalTypes(jule::Ptr<_1a53ea93d_Sema>);
inline jule::Ptr<_1a53a717a_FnIns> _1a5411965_readyToCheckFn(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a5411c84_checkTypeMethod(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1a53a44c9_Fn>*);
inline jule::Ptr<_1a53a717a_FnIns> _1a54121d5_checkStructInsOp(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1a53a44c9_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1a53a44c9_Fn>)>);
inline jule::Bool _1a541258c_checkStructEnv(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a5412944_precheckStructIns(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1ceee8973_Token>);
inline void _1a5412bb9_checkStructIns(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a5412e3e_checkTypeStruct(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a541311a_checkStructTypes(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a54133b2_checkStructInsOperators(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d575_StructIns>);
inline void _1a5413648_precheckStructType(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a5413824_precheckStructTypes(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a5413a99_checkRets(_1a53ea93d_Sema*, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a5413db8_checkFnInsSc(_1a53ea93d_Sema*, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1a53cab4e_scopeChecker>*);
inline void _1a54141d7_checkFnInsCaller(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1ceee8973_Token>);
inline void _1a541445c_checkFnIns(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a54146d2_checkTypeFn(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a5414957_checkTestFn(_1a53ea93d_Sema*, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a5414bcc_precheckTypeFn(jule::Ptr<_1a53ea93d_Sema>, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a5414da8_precheckFnTypes(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a5415084_checkFnTypes(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a5415260_checkPackageTypes(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a541543b_setFileSemaFields(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a5415617_setSemaFields(jule::Ptr<_1a53ea93d_Sema>);
inline void _1a541588c_check(jule::Ptr<_1a53ea93d_Sema>, jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*);
struct _1a53ea93d_Sema {
	jule::Slice<_1ceb4952a_Log> _field_errors;
	jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>> _field_files;
	jule::Ptr<_1a54614cb_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	

	_1a53ea93d_Sema(void) = default;


};
inline _1a5415c44_missingRetChecker static__1a541610c_new(void);
inline jule::Bool _1a54163d7_checkConditional(_1a5415c44_missingRetChecker*, jule::Ptr<_1a53c4b48_Conditional>);
inline jule::Bool _1a54166e5_checkMatch(_1a5415c44_missingRetChecker*, jule::Ptr<_1a53c7d38_Match>);
inline jule::Bool _1a5416a03_checkInfIter(_1a5415c44_missingRetChecker*, jule::Ptr<_1a53c4e34_InfIter>);
inline jule::Bool _1a5416d11_checkScope(_1a5415c44_missingRetChecker*, jule::Ptr<_1a53c40dc_Scope>);
inline jule::Bool _1a541711e_check(_1a5415c44_missingRetChecker*, jule::Ptr<_1a53c40dc_Scope>);
struct _1a5415c44_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1a5415c44_missingRetChecker(void) = default;


};
struct _1a5417905_IterRelation {
	jule::Ptr<_1a5418939_Var> _field_Range;
	

	_1a5417905_IterRelation(void) = default;

	inline bool operator==(_1a5417905_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1a5417905_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a5418d02_IsInitialized(_1a5418939_Var*);
inline jule::Bool _1a5419066_IsTypeInferred(_1a5418939_Var*);
inline jule::Bool _1a54192ca_untypedConstant(_1a5418939_Var*);
struct _1a5418939_Var {
	jule::Ptr<_1a53c40dc_Scope> _field_Scope;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	jule::Ptr<_1a546737d_Value> _field_Value;
	jule::Ptr<_1a53aa0e5_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_Directives;
	jule::Ptr<_1a5417905_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_Depends;
	

	_1a5418939_Var(void) = default;


};
inline jule::Bool static__1a5419d58_Dispose(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541a100_Str(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541a441_logical(jule::Ptr<_1a53a44c9_Fn>*, jule::Str);
inline jule::Bool static__1a541a6d8_Eq(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541a980_Gt(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541ac27_GtEq(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541aebe_Lt(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541b266_LtEq(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541b5a7_result(jule::Ptr<_1a53a44c9_Fn>*, jule::Str);
inline jule::Bool static__1a541b84e_Shl(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541bae6_Shr(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541bd8d_Add(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541c135_Sub(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541c3cc_Div(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541c674_Mul(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541c91b_Mod(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541cbb3_BitAnd(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541ce5a_BitOr(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541d202_BitXor(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541d543_unary(jule::Ptr<_1a53a44c9_Fn>*, jule::Str);
inline jule::Bool static__1a541d7da_Neg(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541da82_Pos(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541dd29_BitNot(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541e16a_assign(jule::Ptr<_1a53a44c9_Fn>*, jule::Str);
inline jule::Bool static__1a541e412_AddAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541e6a9_SubAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541e951_DivAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541ebe8_MulAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a541ee90_ModAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a5420237_ShlAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a54204ce_ShrAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a5420776_BitOrAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a5420a1d_BitAndAssign(jule::Ptr<_1a53a44c9_Fn>);
inline jule::Bool static__1a5420cb5_BitXorAssign(jule::Ptr<_1a53a44c9_Fn>);
struct _1a54196d7_FuncPattern {
	

	_1a54196d7_FuncPattern(void) = default;


};
inline void _1a54505db_pushErr(_1a54500be_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a5450850_checkTrait(_1a54500be_typeCompatibilityChecker*);
inline jule::Bool _1a5450ab4_checkPtr(_1a54500be_typeCompatibilityChecker*);
inline jule::Bool _1a5450d28_checkPrim(_1a54500be_typeCompatibilityChecker*);
inline jule::Bool _1a54511d0_typeEnum(_1a54500be_typeCompatibilityChecker*, jule::Ptr<_1a53b9b1b_TypeEnum>*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5451444_checkTypeEnum(_1a54500be_typeCompatibilityChecker*);
inline jule::Bool _1a54516a8_check(_1a54500be_typeCompatibilityChecker*);
struct _1a54500be_typeCompatibilityChecker {
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Ptr<_1a5492287_TypeKind> _field_dest;
	jule::Ptr<_1a5492287_TypeKind> _field_src;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	

	_1a54500be_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1a54500be_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a54500be_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1a5452159_pushErr(_1a5451be7_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a54523bd_checkValidity(_1a5451be7_assignTypeChecker*);
inline jule::Bool _1a5452632_checkConst(_1a5451be7_assignTypeChecker*);
inline jule::Bool _1a5452896_isPrim(_1a5451be7_assignTypeChecker*);
inline jule::Bool _1a5452b0a_checkCompatibility(_1a5451be7_assignTypeChecker*);
inline jule::Bool _1a5452d6e_check(_1a5451be7_assignTypeChecker*);
struct _1a5451be7_assignTypeChecker {
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Ptr<_1a5492287_TypeKind> _field_dest;
	jule::Ptr<_1a5466305_Data> _field_d;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	

	_1a5451be7_assignTypeChecker(void) = default;

	inline bool operator==(_1a5451be7_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1a5451be7_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a7de7954_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a7de7cc8_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a7de749d_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a7deee78_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a54540b2_annotateConstraintMap(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a54543c0_annotateConstraintTup(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a54546cd_annotateConstraintFn(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5454a0d_annotateConstraintIdent(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5454d2c_annotateConstraint(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a545514b_pushGeneric(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*, jule::I64);
inline jule::Bool _1a5455459_annotatePrim(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5455767_annotateArr(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5455a75_annotateSlc(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5455e2c_checkMapKey(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a545623a_annotateMap(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5456548_annotateFn(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5456856_annotatePtr(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5456b64_annotateSptr(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5456e72_annotateStruct(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5457280_annotateAny(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a545758d_annotateKind(_1a54536cc_dynamicTypeAnnotation*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a5457802_annotate(_1a54536cc_dynamicTypeAnnotation*);
struct _1a54536cc_dynamicTypeAnnotation {
	jule::Ptr<_1a5467d73_Eval> _field_e;
	jule::Ptr<_1a53a717a_FnIns> _field_f;
	jule::Ptr<_1a53a62ab_ParamIns> _field_p;
	jule::Ptr<_1a5466305_Data> _field_a;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	jule::Ptr<_1a5492287_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1a48619a9_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _field_ignored;
	

	_1a54536cc_dynamicTypeAnnotation(void) = default;


};
inline void _1a54585e4_pushErrToken(_1a5458094_fnCallArgChecker*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a5458913_pushErr(_1a5458094_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>> _1a5458b77_getParams(_1a5458094_fnCallArgChecker*);
inline jule::Bool _1a5458e85_checkCounts(_1a5458094_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>*);
inline jule::Bool _1a54593d6_checkArg(_1a5458094_fnCallArgChecker*, jule::Ptr<_1a53a62ab_ParamIns>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Bool _1a545978d_push(_1a5458094_fnCallArgChecker*, jule::Ptr<_1a53a62ab_ParamIns>*, jule::Ptr<_1a4865eca_Expr>);
inline jule::Bool _1a5459b45_pushVariadic(_1a5458094_fnCallArgChecker*, jule::Ptr<_1a53a62ab_ParamIns>*, jule::I64);
inline jule::Bool _1a5459e53_checkArgs(_1a5458094_fnCallArgChecker*, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>*);
inline jule::Bool _1a545a1d9_checkDynamicTypeAnnotation(_1a5458094_fnCallArgChecker*);
inline jule::Bool _1a545a45e_check(_1a5458094_fnCallArgChecker*);
struct _1a5458094_fnCallArgChecker {
	jule::Ptr<_1a5467d73_Eval> _field_e;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_args;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	jule::Ptr<_1a53a717a_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _field_ignored;
	

	_1a5458094_fnCallArgChecker(void) = default;


};
inline void _1a545aea9_pushErr(_1a545a99d_structLitChecker*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a545b2c8_pushSugggestion(_1a545a99d_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1a545b691_pushMatch(_1a545a99d_structLitChecker*, jule::Ptr<_1a487d388_FieldIns>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline void _1a545b9b0_checkPair(_1a545a99d_structLitChecker*, jule::Ptr<_1a486a93b_FieldExprPair>*, jule::Slice<jule::Ptr<_1a4865eca_Expr>>*);
inline jule::Bool _1a545bcbd_readyExprs(_1a545a99d_structLitChecker*, jule::Slice<jule::Ptr<_1a4865eca_Expr>>*);
inline void _1a545c043_check(_1a545a99d_structLitChecker*, jule::Slice<jule::Ptr<_1a4865eca_Expr>>*);
struct _1a545a99d_structLitChecker {
	jule::Ptr<_1a5467d73_Eval> _field_e;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	jule::Ptr<_1a487d575_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1a5396a60_StructArgExprModel>> _field_args;
	

	_1a545a99d_structLitChecker(void) = default;


};
inline jule::Ptr<_1a5418939_Var> _1a545ca27_buildVar(_1a545c582_rangeChecker*, jule::Ptr<_1a4874417_VarDecl>*);
inline void _1a545cc03_setSizeKey(_1a545c582_rangeChecker*);
inline void _1a545d0bb_checkRangeExprValidity(_1a545c582_rangeChecker*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5418939_Var>*, jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a545d297_checkSlice(_1a545c582_rangeChecker*);
inline void _1a545d473_checkArray(_1a545c582_rangeChecker*);
inline void _1a545d64e_checkMapKeyA(_1a545c582_rangeChecker*);
inline void _1a545d82a_checkMapKeyB(_1a545c582_rangeChecker*);
inline void _1a545da06_checkMap(_1a545c582_rangeChecker*);
inline void _1a545dbd2_checkStr(_1a545c582_rangeChecker*);
inline jule::Bool _1a545de46_check(_1a545c582_rangeChecker*);
struct _1a545c582_rangeChecker {
	jule::Ptr<_1a53cab4e_scopeChecker> _field_sc;
	jule::Ptr<_1a4876095_RangeKind> _field_rang;
	jule::Ptr<_1a53c5c8c_RangeIter> _field_Kind;
	jule::Ptr<_1a5466305_Data> _field_d;
	

	_1a545c582_rangeChecker(void) = default;

	inline bool operator==(_1a545c582_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1a545c582_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1a545eab2_prepareTypes(_1a545e61c_retTypeChecker*);
inline void _1a545ed37_prepareExprs(_1a545e61c_retTypeChecker*, jule::Ptr<_1a4865eca_Expr>*);
inline void _1a5460013_checkExprs(_1a545e61c_retTypeChecker*);
inline jule::Bool _1a5460321_check(_1a545e61c_retTypeChecker*, jule::Ptr<_1a4865eca_Expr>*);
struct _1a545e61c_retTypeChecker {
	jule::Ptr<_1a53cab4e_scopeChecker> _field_sc;
	jule::Ptr<_1a53a717a_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _field_exprs;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1a545e61c_retTypeChecker(void) = default;


};
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54619e8_FindPackage(_1a54614cb_SymbolTable*, jule::Str);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a5461d06_SelectPackage(_1a54614cb_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>);
inline jule::Ptr<_1a5418939_Var> _1a54621ad_FindVar(_1a54614cb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a5462565_FindTypeAlias(_1a54614cb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d19b_Struct> _1a546291c_FindStruct(_1a54614cb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53a44c9_Fn> _1a5462cc4_FindFn(_1a54614cb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53b63cb_Trait> _1a54630d2_FindTrait(_1a54614cb_SymbolTable*, jule::Str);
inline jule::Ptr<_1a53b8521_Enum> _1a54633e0_FindEnum(_1a54614cb_SymbolTable*, jule::Str);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54636ed_FindTypeEnum(_1a54614cb_SymbolTable*, jule::Str);
inline jule::Ptr<_1a5418939_Var> _1a5463c70_findVar(_1a54614cb_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a54641c1_findTypeAlias(_1a54614cb_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1a5464578_defByIdent(_1a54614cb_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1a54649c9_isDuplicatedIdent(_1a54614cb_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1a54614cb_SymbolTable {
	jule::Ptr<_1ceeedd0d_File> _field_File;
	jule::Slice<_1a53ab459_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1a53b63cb_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1a53b8521_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1a53b9b1b_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1a53be082_Impl>> _field_Impls;
	

	_1a54614cb_SymbolTable(void) = default;


};
inline jule::Bool _1a54666e0_IsNil(_1a5466305_Data*);
inline jule::Bool _1a5466954_IsVoid(_1a5466305_Data*);
inline jule::Bool _1a5466bb8_IsConst(_1a5466305_Data*);
inline jule::Bool _1a5466ec6_GoodOperand(_1a5466305_Data*, jule::Ptr<_1a5466305_Data>*);
struct _1a5466305_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1a5389ec6_Const> _field_Constant;
	

	_1a5466305_Data(void) = default;

	inline bool operator==(_1a5466305_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1a5466305_Data _other) { return !this->operator==(_other); }


};
struct _1a546737d_Value {
	jule::Ptr<_1a4865eca_Expr> _field_Expr;
	jule::Ptr<_1a5466305_Data> _field_Data;
	

	_1a546737d_Value(void) = default;

	inline bool operator==(_1a546737d_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1a546737d_Value _other) { return !this->operator==(_other); }


};
inline void _1a546837e_pushErr(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a546869d_pushSugggestion(_1a5467d73_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1a5468879_allowBuiltin(_1a5467d73_Eval*);
inline void _1a5468a55_disallowBuiltin(_1a5467d73_Eval*);
inline jule::Bool _1a5468cb9_isUnsafe(_1a5467d73_Eval*);
inline jule::Bool _1a546902d_isGlobal(_1a5467d73_Eval*);
inline jule::Bool _1a5469308_applyNumericPrefix(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a546956c_litNil(_1a5467d73_Eval*);
inline jule::Ptr<_1a5466305_Data> _1a546987a_litStr(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a5469b88_litBool(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a5469e96_litRune(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a546a2a4_litFloat(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a546a5b2_litInt(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a546a8c0_litNum(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a546abcd_evalLit(_1a5467d73_Eval*, jule::Ptr<_1a486700e_LitExpr>);
inline jule::Any _1a546aedb_findBuiltins(_1a5467d73_Eval*, jule::Str);
inline jule::Any _1a546b393_getDef(_1a5467d73_Eval*, jule::Str, jule::Bool);
inline void _1a7eb0b4e_pushReference(_1a5467d73_Eval*, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a7ec46ce_pushReference(_1a5467d73_Eval*, jule::Ptr<_1a5418939_Var>*);
inline void _1a80642c9_pushReference(_1a5467d73_Eval*, jule::Ptr<_1a487d575_StructIns>*);
inline jule::Ptr<_1a5466305_Data> _1a546b926__evalEnum(_1a5467d73_Eval*, jule::Ptr<_1a53b8521_Enum>);
inline jule::Ptr<_1a5466305_Data> _1a546bccd_evalEnum(_1a5467d73_Eval*, jule::Ptr<_1a53b8521_Enum>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546c0db__evalTypeEnum(_1a5467d73_Eval*, jule::Ptr<_1a53b9b1b_TypeEnum>);
inline jule::Ptr<_1a5466305_Data> _1a546c493_evalTypeEnum(_1a5467d73_Eval*, jule::Ptr<_1a53b9b1b_TypeEnum>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546c7a1__evalStruct(_1a5467d73_Eval*, jule::Ptr<_1a487d575_StructIns>);
inline jule::Ptr<_1a5466305_Data> _1a546cb58_evalStruct(_1a5467d73_Eval*, jule::Ptr<_1a487d575_StructIns>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546ce66_evalFnIns(_1a5467d73_Eval*, jule::Ptr<_1a53a717a_FnIns>);
inline void _1a546d285_checkDeprecated(_1a5467d73_Eval*, jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546d63c_evalFn(_1a5467d73_Eval*, jule::Ptr<_1a53a44c9_Fn>, jule::Ptr<_1ceee8973_Token>);
inline void _1a546da05_pushIllegalCycleError(_1a5467d73_Eval*, jule::Ptr<_1a5418939_Var>*, jule::Ptr<_1a5418939_Var>*, jule::Str*);
inline jule::Bool _1a546ddac_checkCrossCycle(_1a5467d73_Eval*, jule::Ptr<_1a5418939_Var>*, jule::Str*);
inline jule::Bool _1a546e264_checkIllegalCycles(_1a5467d73_Eval*, jule::Ptr<_1a5418939_Var>*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546e61b_evalVar(_1a5467d73_Eval*, jule::Ptr<_1a5418939_Var>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546e9c3_evalTypeAlias(_1a5467d73_Eval*, jule::Ptr<_1a5491594_TypeAlias>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a546ed7a_evalDef(_1a5467d73_Eval*, jule::Any, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a5470188_evalIdent(_1a5467d73_Eval*, jule::Ptr<_1a4867b8b_IdentExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5470496_evalUnary(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4868395_UnaryExpr>);
inline jule::Ptr<_1a5466305_Data> _1a54707a4_evalVariadic(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486874c_VariadicExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5470ab2_evalUnsafe(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4867718_UnsafeExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5470dc0_evalArr(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486c5b9_SliceExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5471321_evalExpSlc(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486c5b9_SliceExpr>, jule::Ptr<_1a5492287_TypeKind>, jule::Any);
inline jule::Ptr<_1a5466305_Data> _1a547162e_evalSliceExpr(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486c5b9_SliceExpr>);
inline void _1a5471970_checkIntegerIndexingByData(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>);
inline void _1a5471d49_indexingPtr(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline void _1a5472212_indexingArr(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline void _1a54725ca_indexingSlc(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline void _1a5472993_indexingMap(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline void _1a5472d5b_indexingStr(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline void _1a5473224_toIndexing(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline jule::Bool _1a5473697_pushGenericsFromExprSubIdent(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486942e_SubIdentExpr>*, jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>*, jule::Ptr<_1a4865eca_Expr>*);
inline jule::Bool _1a5473a60_pushGenericsFromData(jule::Ptr<_1a5467d73_Eval>, jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>*, jule::Ptr<_1a4865eca_Expr>*);
inline void _1a5473da1_evalIdentDeclFromIndexing(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline jule::Bool _1a5474313_checkGenericFn(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1ceee8973_Token>*, jule::Any*);
inline void _1a5474654_evalFnGenericFromIndexing(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486ce38_IndexingExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a5474973_evalIndexing(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486ce38_IndexingExpr>);
inline __jule_tuple_x_1a5466305_Data__jule_tuple_x_1a5466305_Data _1a5474c81_evalSlicingExprs(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486d543_SlicingExpr>*);
inline void _1a5475006_slicingArr(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*);
inline void _1a54753be_slicingStr(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a5475831_checkSlicing(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a486d543_SlicingExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a5475b3e_evalSlicing(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486d543_SlicingExpr>);
inline void _1a5476007_castPtr(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a54763c0_castStruct(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5476788_castRef(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5476b51_castSlc(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5476e70_castStr(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5477338_castInt(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5477701_castNum(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5477ab9_castPrim(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline void _1a5477dd8_castConstant(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a54782a1_castTypeEnum(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline void _1a5478669_castTypeEnumT(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Ptr<_1a5466305_Data> _1a5478aba_evalCastByTypeNData(_1a5467d73_Eval*, jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547901b_evalCastT(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a4865eca_Expr>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Ptr<_1a5466305_Data> _1a5479329_evalCast(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4868b04_CastExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5479637_evalNsSelection(_1a5467d73_Eval*, jule::Ptr<_1a4868eab_NsSelectionExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5479a88_evalStructLitExplicit(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a487d575_StructIns>, jule::Slice<jule::Ptr<_1a4865eca_Expr>>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a5479d96_evalStructLit(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486b189_StructLit>);
inline _1a54a0b03_typeChecker _1a547a10a_typeChecker(_1a5467d73_Eval*);
inline jule::Ptr<_1a5466305_Data> _1a547a418_evalType(_1a5467d73_Eval*, jule::Ptr<_1a48619a9_TypeDecl>);
inline void _1a547a737_callTypeFn(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a547aa56_callBuiltinFn(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a547ad97_checkFnOfConcurrentCall(_1a5467d73_Eval*, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1ceee8973_Token>);
inline void _1a547b293_processExceptionalHandler(_1a5467d73_Eval*, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a547b5c3_callFn(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a547b8d1_evalFnCall(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4869eac_FnCallExpr>);
inline jule::Ptr<_1a5466305_Data> _1a547bc88_evalEnumStatic(_1a5467d73_Eval*, jule::Ptr<_1a53b8521_Enum>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547c140_evalTypeEnumStatic(_1a5467d73_Eval*, jule::Ptr<_1a53b9b1b_TypeEnum>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547c4e7_evalStructStatic(_1a5467d73_Eval*, jule::Ptr<_1a487d575_StructIns>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547c948_evalTraitSubIdent(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1a53b63cb_Trait>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547ce43_evalStructSubIdent(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1a487d575_StructIns>, jule::Ptr<_1a486942e_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1a5466305_Data> _1a547d2ea_evalSliceSubIdent(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547d6a2_evalArraySubIdent(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547d9b0_evalIntTypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547dcbd_evalUintTypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547e0cb_evalI8TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547e3d9_evalI16TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547e6e7_evalI32TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547ea05_evalI64TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a547ed13_evalU8TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a5480121_evalU16TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a548042e_evalU32TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a548073c_evalU64TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a5480a4a_evalF32TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a5480d58_evalF64TypeStatic(_1a5467d73_Eval*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a5481210_evalPrimStatic(_1a5467d73_Eval*, jule::Str, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a5466305_Data> _1a54815b7_evalTypeStatic(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1a486942e_SubIdentExpr>);
inline jule::Ptr<_1a5466305_Data> _1a548196e_evalObjSubIdent(_1a5467d73_Eval*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1a486942e_SubIdentExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5481c7c_evalSubIdent(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486942e_SubIdentExpr>);
inline jule::Ptr<_1a5466305_Data> _1a548208a_evalTuple(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4866b57_TupleExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5482442_evalMap(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a549c77b_Map>, jule::Ptr<_1a486b60c_BraceLit>);
inline jule::Ptr<_1a5466305_Data> _1a5482750_evalBraceLit(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a486b60c_BraceLit>);
inline jule::Ptr<_1a5466305_Data> _1a5482a5d_evalAnonFn(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4873438_FnDecl>);
inline jule::Ptr<_1a5466305_Data> _1a5482d6b_evalBinop(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a48698a2_BinopExpr>);
inline jule::Ptr<_1a5466305_Data> _1a5483179_evalExprKind(jule::Ptr<_1a5467d73_Eval>, jule::Any);
inline jule::Ptr<_1a5466305_Data> _1a5483487_eval(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4865eca_Expr>);
inline jule::Ptr<_1a5466305_Data> _1a5483795_evalExpr(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1a4865eca_Expr>);
struct _1a5467d73_Eval {
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Trait<_1a54ad209_Lookup> _field_lookup;
	jule::Ptr<_1a5492287_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1a5418939_Var> _field_owner;
	jule::Ptr<_1a487d388_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1a5467d73_Eval(void) = default;

	inline bool operator==(_1a5467d73_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1a5467d73_Eval _other) { return !this->operator==(_other); }


};
inline _1a5483c18_unaryEval static__1a54841be_new(jule::Ptr<_1a5467d73_Eval>);
inline void _1a548439a_minus(_1a5483c18_unaryEval*);
inline void _1a5484576_plus(_1a5483c18_unaryEval*);
inline void _1a5484752_caret(_1a5483c18_unaryEval*);
inline void _1a548492d_excl(_1a5483c18_unaryEval*);
inline void _1a5484b09_star(_1a5483c18_unaryEval*);
inline void _1a5484cd5_amper(_1a5483c18_unaryEval*);
inline void _1a5484eb1_typeDecl(_1a5483c18_unaryEval*);
inline void _1a548518c_evalData(_1a5483c18_unaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5485467_eval(_1a5483c18_unaryEval*, jule::Ptr<_1a4868395_UnaryExpr>);
struct _1a5483c18_unaryEval {
	jule::Ptr<_1a5467d73_Eval> _field_e;
	jule::Ptr<_1a5466305_Data> _field_d;
	jule::Ptr<_1a4868395_UnaryExpr> _field_u;
	

	_1a5483c18_unaryEval(void) = default;

	inline bool operator==(_1a5483c18_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1a5483c18_unaryEval _other) { return !this->operator==(_other); }


};
inline _1a54859a6_binaryEval static__1a548607d_newPlain(jule::Ptr<_1a5467d73_Eval>);
inline _1a54859a6_binaryEval static__1a54863be_new(jule::Ptr<_1a5467d73_Eval>, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a5486633_checkTypeCompatibility(_1a54859a6_binaryEval*);
inline jule::Bool _1a54868ca_checkStructCommonOperatorCompatibility(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5486b72_evalNil(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5486dd6_evalEnum(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a548714a_evalTypeEnum(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a54873ae_evalSptr(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5487623_evalPtr(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5487887_evalArr(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5487aeb_evalSlc(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5487d60_evalFn(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a54880c4_evalStruct(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5488338_evalTrait(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a548859c_evalAny(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5488811_evalBool(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5488a75_evalStr(_1a54859a6_binaryEval*);
inline void _1a5488c51_setTypeToGreater(_1a54859a6_binaryEval*);
inline void _1a5488e93_checkModData(_1a54859a6_binaryEval*, jule::Ptr<_1a5466305_Data>*);
inline void _1a548916e_mod(_1a54859a6_binaryEval*);
inline jule::Bool _1a5489526_numbersAreCompatibile(_1a54859a6_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1a5466305_Data> _1a548978a_evalFloat(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a54899ee_evalInt(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a5489c63_evalPrim(_1a54859a6_binaryEval*);
inline void _1a5489e3e_checkSpecialCases(_1a54859a6_binaryEval*);
inline jule::Ptr<_1a5466305_Data> _1a548a1a3_evalOp(_1a54859a6_binaryEval*);
inline void _1a548a428_evalConst(_1a54859a6_binaryEval*, jule::Ptr<_1a5466305_Data>*);
inline void _1a548a69d_checkData(_1a54859a6_binaryEval*, jule::Ptr<_1a5466305_Data>*);
inline void _1a548a879_checkDatas(_1a54859a6_binaryEval*);
inline void _1a548aaee_setModel(_1a54859a6_binaryEval*, jule::Ptr<_1a5466305_Data>*);
inline void _1a548ad74_postEval(_1a54859a6_binaryEval*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a548b22b_solveExplicit(_1a54859a6_binaryEval*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a548b539_eval(_1a54859a6_binaryEval*, jule::Ptr<_1a48698a2_BinopExpr>*);
struct _1a54859a6_binaryEval {
	jule::Ptr<_1a5467d73_Eval> _field_e;
	jule::Ptr<_1a5466305_Data> _field_l;
	jule::Ptr<_1a5466305_Data> _field_r;
	jule::Ptr<_1ceee8973_Token> _field_op;
	

	_1a54859a6_binaryEval(void) = default;

	inline bool operator==(_1a54859a6_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1a54859a6_binaryEval _other) { return !this->operator==(_other); }


};
struct _1a5490a5a_InsGeneric {
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _field_Constraint;
	

	_1a5490a5a_InsGeneric(void) = default;


};
struct _1a5491594_TypeAlias {
	jule::Ptr<_1a4871942_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_CppLinked = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1a5496665_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _field_Generics;
	

	_1a5491594_TypeAlias(void) = default;


};
inline jule::Str _1a5492683_Str(_1a5492287_TypeKind*);
inline jule::Bool _1a5492991_Equal(jule::Ptr<_1a5492287_TypeKind>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a5492e58_CppLinked(_1a5492287_TypeKind*);
inline jule::Bool _1a54931bc_IsNil(_1a5492287_TypeKind*);
inline jule::Bool _1a5493431_Void(_1a5492287_TypeKind*);
inline jule::Bool _1a5493695_Comparable(_1a5492287_TypeKind*);
inline jule::Bool _1a5493909_Mutable(_1a5492287_TypeKind*);
inline jule::Bool _1a5493b6d_NilCompatible(_1a5492287_TypeKind*);
inline jule::Bool _1a5493dd2_PerformsRC(_1a5492287_TypeKind*);
inline jule::Bool _1a5494146_SupportsCloning(_1a5492287_TypeKind*);
inline jule::Bool _1a54943aa_Variadicable(_1a5492287_TypeKind*);
inline jule::Ptr<_1a5496ed4_Prim> _1a549461e_Prim(_1a5492287_TypeKind*);
inline jule::Ptr<_1a549a768_Sptr> _1a5494883_Sptr(_1a5492287_TypeKind*);
inline jule::Ptr<_1a549dccc_Ptr> _1a5494ae7_Ptr(_1a5492287_TypeKind*);
inline jule::Ptr<_1a53b8521_Enum> _1a5494d5b_Enum(_1a5492287_TypeKind*);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54950c0_TypeEnum(_1a5492287_TypeKind*);
inline jule::Ptr<_1a549d370_Arr> _1a5495334_Arr(_1a5492287_TypeKind*);
inline jule::Ptr<_1a549b1c5_Slc> _1a5495598_Slc(_1a5492287_TypeKind*);
inline jule::Ptr<_1a53a717a_FnIns> _1a549580c_Fn(_1a5492287_TypeKind*);
inline jule::Ptr<_1a487d575_StructIns> _1a5495a71_Struct(_1a5492287_TypeKind*);
inline jule::Ptr<_1a53b63cb_Trait> _1a5495cd5_Trait(_1a5492287_TypeKind*);
inline jule::Ptr<_1a549c77b_Map> _1a5496049_Map(_1a5492287_TypeKind*);
inline jule::Ptr<_1a549bc53_Tuple> _1a54962ad_Tup(_1a5492287_TypeKind*);
struct _1a5492287_TypeKind {
	jule::Str _field_CppIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1a5491d58_Kind> _field_Kind;
	

	_1a5492287_TypeKind(void) = default;

	inline bool operator==(_1a5492287_TypeKind _other) {
		return 
			this->_field_CppIdent == _other._field_CppIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5492287_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1a5496a1c_checked(_1a5496665_TypeSymbol*);
inline void _1a5496be8_removeKind(_1a5496665_TypeSymbol*);
struct _1a5496665_TypeSymbol {
	jule::Ptr<_1a48619a9_TypeDecl> _field_Decl;
	jule::Ptr<_1a5492287_TypeKind> _field_Kind;
	

	_1a5496665_TypeSymbol(void) = default;

	inline bool operator==(_1a5496665_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5496665_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1a5497347_Str(_1a5496ed4_Prim*);
inline jule::Bool _1a5497655_Equal(jule::Ptr<_1a5496ed4_Prim>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a5497ac8_IsConstraint(_1a5496ed4_Prim*);
inline jule::Bool _1a5497d3c_IsI8(_1a5496ed4_Prim*);
inline jule::Bool _1a54980a1_IsI16(_1a5496ed4_Prim*);
inline jule::Bool _1a5498315_IsI32(_1a5496ed4_Prim*);
inline jule::Bool _1a5498579_IsI64(_1a5496ed4_Prim*);
inline jule::Bool _1a54987dd_IsU8(_1a5496ed4_Prim*);
inline jule::Bool _1a5498a52_IsU16(_1a5496ed4_Prim*);
inline jule::Bool _1a5498cb6_IsU32(_1a5496ed4_Prim*);
inline jule::Bool _1a549902a_IsU64(_1a5496ed4_Prim*);
inline jule::Bool _1a549928e_IsF32(_1a5496ed4_Prim*);
inline jule::Bool _1a5499503_IsF64(_1a5496ed4_Prim*);
inline jule::Bool _1a5499767_IsInt(_1a5496ed4_Prim*);
inline jule::Bool _1a54999cb_IsUint(_1a5496ed4_Prim*);
inline jule::Bool _1a5499c40_IsUintptr(_1a5496ed4_Prim*);
inline jule::Bool _1a5499ea4_IsBool(_1a5496ed4_Prim*);
inline jule::Bool _1a549a218_IsStr(_1a5496ed4_Prim*);
inline jule::Bool _1a549a47c_IsAny(_1a5496ed4_Prim*);
struct _1a5496ed4_Prim {
	jule::Str _field_Kind;
	

	_1a5496ed4_Prim(void) = default;

	inline bool operator==(_1a5496ed4_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1a5496ed4_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1a549aacb_Str(_1a549a768_Sptr*);
inline jule::Bool _1a549add9_Equal(jule::Ptr<_1a549a768_Sptr>, jule::Ptr<_1a5492287_TypeKind>);
struct _1a549a768_Sptr {
	jule::Ptr<_1a5492287_TypeKind> _field_Elem;
	

	_1a549a768_Sptr(void) = default;

	inline bool operator==(_1a549a768_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a549a768_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a549b6d1_Str(_1a549b1c5_Slc*);
inline jule::Bool _1a549b9de_Equal(jule::Ptr<_1a549b1c5_Slc>, jule::Ptr<_1a5492287_TypeKind>);
struct _1a549b1c5_Slc {
	jule::Ptr<_1a5492287_TypeKind> _field_Elem;
	

	_1a549b1c5_Slc(void) = default;

	inline bool operator==(_1a549b1c5_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a549b1c5_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1a549c0b6_Str(_1a549bc53_Tuple*);
inline jule::Bool _1a549c3c4_Equal(jule::Ptr<_1a549bc53_Tuple>, jule::Ptr<_1a5492287_TypeKind>);
struct _1a549bc53_Tuple {
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _field_Types;
	

	_1a549bc53_Tuple(void) = default;


};
inline jule::Str _1a549cade_Str(_1a549c77b_Map*);
inline jule::Bool _1a549cdec_Equal(jule::Ptr<_1a549c77b_Map>, jule::Ptr<_1a5492287_TypeKind>);
struct _1a549c77b_Map {
	jule::Ptr<_1a5492287_TypeKind> _field_Key;
	jule::Ptr<_1a5492287_TypeKind> _field_Val;
	

	_1a549c77b_Map(void) = default;

	inline bool operator==(_1a549c77b_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1a549c77b_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1a549d6d3_Str(_1a549d370_Arr*);
inline jule::Bool _1a549d9e1_Equal(jule::Ptr<_1a549d370_Arr>, jule::Ptr<_1a5492287_TypeKind>);
struct _1a549d370_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1a5492287_TypeKind> _field_Elem;
	

	_1a549d370_Arr(void) = default;

	inline bool operator==(_1a549d370_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a549d370_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1a549e140_Str(_1a549dccc_Ptr*);
inline jule::Bool _1a549e44d_Equal(jule::Ptr<_1a549dccc_Ptr>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a549e7a0_IsUnsafe(_1a549dccc_Ptr*);
struct _1a549dccc_Ptr {
	jule::Ptr<_1a5492287_TypeKind> _field_Elem;
	

	_1a549dccc_Ptr(void) = default;

	inline bool operator==(_1a549dccc_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1a549dccc_Ptr _other) { return !this->operator==(_other); }


};
struct _1a549ec23_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1a549ec23_referencer(void) = default;

	inline bool operator==(_1a549ec23_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1a549ec23_referencer _other) { return !this->operator==(_other); }


};
inline void _1a54a130c_pushErr(_1a54a0b03_typeChecker*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a54a14d8_allowBuiltin(_1a54a0b03_typeChecker*);
inline void _1a54a16b4_disallowBuiltin(_1a54a0b03_typeChecker*);
inline jule::Ptr<_1a5496ed4_Prim> _1a54a19c2_buildPrim(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*);
inline void _1a82cb8b5_pushReference(_1a54a0b03_typeChecker*, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a82ce742_pushReference(_1a54a0b03_typeChecker*, jule::Ptr<_1a53b63cb_Trait>*);
inline void _1a54a1ebc_pushReferenceByKind(_1a54a0b03_typeChecker*, jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a54a2385_pushCycleError(_1a54a0b03_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1a54a273c_checkCrossCycle(_1a54a0b03_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1a54a2ae4_checkIllegalCycles(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1a5491d58_Kind> _1a54a2e9b_fromTypeAlias(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Ptr<_1a5491594_TypeAlias>*);
inline jule::Ptr<_1a53b8521_Enum> _1a54a3353_fromEnum(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Ptr<_1a53b8521_Enum>*);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54a370a_fromTypeEnum(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Ptr<_1a53b9b1b_TypeEnum>*);
inline jule::Ptr<_1a53b63cb_Trait> _1a54a3ab2_fromTrait(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Ptr<_1a53b63cb_Trait>*);
inline jule::Bool _1a54a3e69_checkStructIns(_1a54a0b03_typeChecker*, jule::Ptr<_1a487d575_StructIns>*, jule::Ptr<_1ceee8973_Token>*);
inline void _1a54a4211_appendUsedStructReference(_1a54a0b03_typeChecker*, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Ptr<_1a487d575_StructIns> _1a54a45c9_buildStructInstance(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Ptr<_1a487d575_StructIns> _1a54a4981_fromStruct(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Trait<_1a5491d58_Kind> _1a54a4c8e_getDef(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>*);
inline jule::Trait<_1a5491d58_Kind> _1a54a509c_buildIdent(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862070_IdentTypeDecl>);
inline jule::Trait<_1a5491d58_Kind> _1a54a53aa_buildSubIdent(_1a54a0b03_typeChecker*, jule::Ptr<_1a48626be_SubIdentTypeDecl>);
inline jule::Ptr<_1a549a768_Sptr> _1a54a56b8_buildSptrFromType(_1a54a0b03_typeChecker*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Ptr<_1a549a768_Sptr> _1a54a59c6_buildSptr(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862d62_SptrTypeDecl>);
inline jule::Ptr<_1a549dccc_Ptr> _1a54a5cd4_buildPtrFromType(_1a54a0b03_typeChecker*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Ptr<_1a549dccc_Ptr> _1a54a60e2_buildPtr(_1a54a0b03_typeChecker*, jule::Ptr<_1a4863835_PtrTypeDecl>);
inline jule::Ptr<_1a549b1c5_Slc> _1a54a6400_buildSlc(_1a54a0b03_typeChecker*, jule::Ptr<_1a486325d_SlcTypeDecl>);
inline jule::Ptr<_1a549d370_Arr> _1a54a670d_buildArr(_1a54a0b03_typeChecker*, jule::Ptr<_1a4863eb7_ArrTypeDecl>);
inline jule::Ptr<_1a549c77b_Map> _1a54a6a1b_buildMap(_1a54a0b03_typeChecker*, jule::Ptr<_1a4864715_MapTypeDecl>);
inline jule::Ptr<_1a549bc53_Tuple> _1a54a6d29_buildTuple(_1a54a0b03_typeChecker*, jule::Ptr<_1a4863549_TupleTypeDecl>);
inline jule::Bool _1a54a7137_checkFnTypes(_1a54a0b03_typeChecker*, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Ptr<_1a53a717a_FnIns> _1a54a7445_buildFn(_1a54a0b03_typeChecker*, jule::Ptr<_1a4873438_FnDecl>);
inline jule::Trait<_1a5491d58_Kind> _1a54a7753_buildByNamespace(_1a54a0b03_typeChecker*, jule::Ptr<_1a4862a76_NamespaceTypeDecl>);
inline jule::Ptr<_1a5492287_TypeKind> _1a54a7a61_build(_1a54a0b03_typeChecker*, jule::Any*);
inline jule::Ptr<_1a5492287_TypeKind> _1a54a7d6e_checkDecl(_1a54a0b03_typeChecker*, jule::Ptr<_1a48619a9_TypeDecl>*);
inline void _1a54a80e4_check(_1a54a0b03_typeChecker*, jule::Ptr<_1a5496665_TypeSymbol>*);
struct _1a54a0b03_typeChecker {
	jule::Ptr<_1a53ea93d_Sema> _field_s;
	jule::Trait<_1a54ad209_Lookup> _field_rootLookup;
	jule::Trait<_1a54ad209_Lookup> _field_lookup;
	jule::Ptr<_1a549ec23_referencer> _field_referencer;
	jule::Ptr<_1a53aa0e5_ReferenceStack> _field_refers;
	jule::Ptr<_1ceee8973_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1a5491594_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1a54a0b03_typeChecker(void) = default;


};
inline jule::Bool static__1a54a8754_prim(jule::Str*, jule::Ptr<_1a5496ed4_Prim>);
inline jule::Bool static__1a54a8a95_exist(jule::Str*, jule::Ptr<_1a5492287_TypeKind>*);
struct _1a54a8314_identTypeLookup {
	

	_1a54a8314_identTypeLookup(void) = default;

	inline bool operator==(_1a54a8314_identTypeLookup _other) { return true; }

	inline bool operator!=(_1a54a8314_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1a4d47d80_FileInfo {
	jule::Ptr<_1a3c1be0e_Ast> _field_Ast;
	jule::Slice<_1ceb4952a_Log> _field_Errors;
	

	_1a4d47d80_FileInfo(void) = default;


};
struct _1a4d4a558_stmt {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1a4d4a558_stmt(void) = default;


};
inline void _1a4d4b515_stop(_1a4d4ad83_scopeParser*);
inline jule::Bool _1a4d4b779_stopped(_1a4d4ad83_scopeParser*);
inline jule::Bool _1a4d4b9dd_finished(_1a4d4ad83_scopeParser*);
inline jule::Bool _1a4d4bc52_isLastSt(_1a4d4ad83_scopeParser*);
inline void _1a4d4c071_pushErr(_1a4d4ad83_scopeParser*, jule::Ptr<_1ceee8973_Token>, jule::Str);
inline void _1a4d4c390_pushSuggestion(_1a4d4ad83_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1a4d4c615_insertAsNext(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4d4a558_stmt> _1a4d4c879_next(_1a4d4ad83_scopeParser*);
inline jule::Ptr<_1a4871942_ScopeTree> _1a4d4cc31_buildScope(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a4874417_VarDecl> _1a4d4d03e_buildVarSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a48747be_RetSt> _1a4d4d34c_buildRetSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4874e2e_Iter> _1a4d4d65a_buildWhileNextIter(_1a4d4ad83_scopeParser*, jule::Ptr<_1a4d4a558_stmt>*);
inline jule::Ptr<_1a4875704_WhileKind> _1a4d4d968_buildWhileIterKind(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d4dc76_getRangeKindKeysTokens(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4874417_VarDecl> _1a4d4e084_buildRangeKindKey(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1a4874417_VarDecl>> _1a4d4e392_buildRangeKindKeys(_1a4d4ad83_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>*);
inline void _1a4d4e6d3_setupRangeKindKeysPlain(_1a4d4ad83_scopeParser*, jule::Ptr<_1a4876095_RangeKind>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d4ea35_setupRangeKindKeysExplicit(_1a4d4ad83_scopeParser*, jule::Ptr<_1a4876095_RangeKind>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d4ed65_setupRangeKindKeys(_1a4d4ad83_scopeParser*, jule::Ptr<_1a4876095_RangeKind>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4876095_RangeKind> _1a4d502b6_buildRangeIterKind(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Any _1a4d5066d_buildCommonIterKind(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Ptr<_1a4874e2e_Iter> _1a4d5097b_buildCommonIter(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4874e2e_Iter> _1a4d50c89_buildIterSt(_1a4d4ad83_scopeParser*, jule::Ptr<_1a4d4a558_stmt>*);
inline jule::Ptr<_1a487644c_BreakSt> _1a4d51097_buildBreakSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4876804_ContSt> _1a4d513a5_buildContSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4876c77_If> _1a4d516b3_buildIf(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a487712e_Else> _1a4d519c1_buildElse(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a48775a2_Conditional> _1a4d51cce_buildIfElseChain(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4865eca_Expr> _1a4d520dc_buildCoCallSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486e511_GotoSt> _1a4d523ea_buildGotoSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a486e7ec_FallSt> _1a4d52708_buildFallSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4877c78_TypeAliasDecl> _1a4d52a16_buildTypeAliasSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d52e78_pushCaseExpr(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Ptr<_1ceee8973_Token>, jule::Bool, jule::Slice<jule::Ptr<_1a4865eca_Expr>>*);
inline jule::Slice<jule::Ptr<_1a4865eca_Expr>> _1a4d533c9_buildCaseExprs(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>*, jule::Bool);
inline jule::Ptr<_1a4871942_ScopeTree> _1a4d536d7_buildCaseScope(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline __jule_tuple_x_1a48781eb_Case__jule_tuple_bool _1a4d53a8e_buildCase(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Bool);
inline __jule_tuple_sx_1a48781eb_Case__jule_tuple_x_1a487712e_Else _1a4d53e46_buildCases(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Bool);
inline jule::Ptr<_1a48788c2_MatchCase> _1a4d54254_buildMatchCase(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4871942_ScopeTree> _1a4d54562_buildScopeSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486e159_LabelSt> _1a4d54870_buildLabelSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline __jule_tuple__1a4871106_StmtData__jule_tuple_bool _1a4d54b7d_buildIdSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4d63b9d_assignInfo> _1a4d54e8b_buildAssignInfo(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a486ee07_AssignLeft> _1a4d55299_buildAssignL(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1a486ee07_AssignLeft>> _1a4d555a7_buildAssignLs(_1a4d4ad83_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>*);
inline __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool _1a4d558b5_buildPlainAssign(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool _1a4d55bc3_buildDeclAssign(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool _1a4d55ed1_buildAssignSt(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a486686b_UseExpr> _1a4d562de_buildUseExpr(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d565ec_buildSt(_1a4d4ad83_scopeParser*, jule::Ptr<_1a4d4a558_stmt>*);
inline void _1a4d5691b_build(_1a4d4ad83_scopeParser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1a4871942_ScopeTree>*);
struct _1a4d4ad83_scopeParser {
	jule::Ptr<_1a4d674cb_parser> _field_p;
	jule::Ptr<_1a4871942_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1a4d4ad83_scopeParser(void) = default;


};
inline void _1a4d57b3c_pushErr(_1a4d5739a_exprBuilder*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a4d57e5b_pushSuggestion(_1a4d5739a_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a4866b57_TupleExpr> _1a4d58269_buildTuple(_1a4d5739a_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>*);
inline jule::Ptr<_1a486700e_LitExpr> _1a4d58577_buildLit(_1a4d5739a_exprBuilder*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d58885_buildPrimitiveType(_1a4d5739a_exprBuilder*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Any _1a4d58b93_buildSingle(_1a4d5739a_exprBuilder*, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a4867b8b_IdentExpr> _1a4d58ea1_buildCppLinkedIdent(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4868395_UnaryExpr> _1a4d592ae_buildUnary(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486942e_SubIdentExpr> _1a4d595bc_buildObjSubIdent(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4868eab_NsSelectionExpr> _1a4d598ca_buildNsSubIdent(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d59bd8_buildType(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d59ee6_buildSubIdent(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a486874c_VariadicExpr> _1a4d5a304_buildVariadic(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Any _1a4d5a612_buildOpRight(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a48662b6_RangeExpr> _1a4d5a942_buildBetweenParentheses(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4868b04_CastExpr> _1a4d5ac61_tryBuildCast(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d5b129_pushArg(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1a4865eca_Expr>>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Ptr<_1ceee8973_Token>);
inline jule::Slice<jule::Ptr<_1a4865eca_Expr>> _1a4d5b437_buildArgs(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _1a4d5b745_buildCallGenerics(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4869eac_FnCallExpr> _1a4d5bb96_buildFnCall(_1a4d5739a_exprBuilder*, jule::Ptr<_1ceee8973_Token>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d5bea4_buildParenthesesRange(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4867718_UnsafeExpr> _1a4d5c2b2_buildUnsafeExpr(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4873438_FnDecl> _1a4d5c5c0_buildAnonFn(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d5c8cd_buildUnsafe(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d5cc96_pushRangeLitPart(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Ptr<_1ceee8973_Token>, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d5d0c6_getBraceRangeLitExprParts(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486a93b_FieldExprPair> _1a4d5d3e5_buildFieldExprPair(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4865eca_Expr> _1a4d5d703_buildStructLitExpr(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1a4865eca_Expr>> _1a4d5da11_buildStructLitExprs(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a486b189_StructLit> _1a4d5dd41_buildTypedStructLiteral(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4865eca_Expr> _1a4d5e160_buildBraceLitPart(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a486b60c_BraceLit> _1a4d5e46d_buildBraceLit(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d5e77b_buildBraceRange(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d5ea89_getEnumerableParts(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486c5b9_SliceExpr> _1a4d5ed97_buildSlice(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486ce38_IndexingExpr> _1a4d602e8_buildIndexing(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Ptr<_1ceee8973_Token>);
inline jule::Ptr<_1a486d543_SlicingExpr> _1a4d6088c_buildSlicing(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1ceee8973_Token>);
inline jule::Any _1a4d60b9a_buildBracketRange(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Any _1a4d60ea8_buildData(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d61360_buildBinop(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64);
inline jule::Any _1a4d6166d_build(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d6197b_buildKind(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4865eca_Expr> _1a4d61c89_buildFromTokens(_1a4d5739a_exprBuilder*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
struct _1a4d5739a_exprBuilder {
	jule::Ptr<_1a4d674cb_parser> _field_p;
	

	_1a4d5739a_exprBuilder(void) = default;

	inline bool operator==(_1a4d5739a_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1a4d5739a_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1a4d63b9d_assignInfo {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_l;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_r;
	jule::Ptr<_1ceee8973_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1a4d63b9d_assignInfo(void) = default;


};
inline void _1a4d6780b_stop(_1a4d674cb_parser*);
inline jule::Bool _1a4d67a70_stopped(_1a4d674cb_parser*);
inline void _1a4d67e38_pushErr(_1a4d674cb_parser*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1a4d68257_pushSuggestion(_1a4d674cb_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a4865eca_Expr> _1a4d68565_buildExpr(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a3c1d0ec_Directive> _1a4d68873_buildDirective(_1a4d674cb_parser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d68ae8_pushDirective(_1a4d674cb_parser*, jule::Ptr<_1a3c1d0ec_Directive>);
inline jule::Ptr<_1a4871942_ScopeTree> _1a4d68ea0_buildScope(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>);
inline __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool _1a4d69401__buildType(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool _1a4d69852_buildType(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1a4877c78_TypeAliasDecl> _1a4d69b60_buildTypeAliasDecl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d69e7e_buildVarTypeAndExpr(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1a4874417_VarDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d6a29d_buildVarCommon(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1a4874417_VarDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d6a666_buildVarBegin(_1a4d674cb_parser*, jule::Ptr<_1a4874417_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4874417_VarDecl> _1a4d6a974_buildVar(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a486dca2_GenericDecl> _1a4d6ac82_buildGeneric(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _1a4d6b139_buildGenerics(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Ptr<_1ceee8973_Token>*);
inline jule::Ptr<_1a4872118_ParamDecl> _1a4d6b447_buildSelfParam(_1a4d674cb_parser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d6b810_paramTypeBegin(_1a4d674cb_parser*, jule::Ptr<_1a4872118_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d6bb2e_buildParamType(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1a4872118_ParamDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d6be4d_buildParamBody(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1a4872118_ParamDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4872118_ParamDecl> _1a4d6c25b_buildParam(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d6c4d1_checkParams(_1a4d674cb_parser*, jule::Slice<jule::Ptr<_1a4872118_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1a4872118_ParamDecl>> _1a4d6c888_buildParams(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Bool);
inline __jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool _1a4d6cc40_buildMultiRetType(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64*);
inline __jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool _1a4d6d0e7_buildRetType(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64*);
inline jule::Ptr<_1a4873438_FnDecl> _1a4d6d548_buildFnPrototype(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1a4873438_FnDecl> _1a4d6d999_buildFn(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1ceee8973_Token>> _1a4d6dca7_getUseDeclSelectors(_1a4d674cb_parser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d6e0c6_buildCppUseDecl(_1a4d674cb_parser*, jule::Ptr<_1a4879164_UseDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d6e3e5_buildStdUseDecl(_1a4d674cb_parser*, jule::Ptr<_1a4879164_UseDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d6e714_buildIdentUseDecl(_1a4d674cb_parser*, jule::Ptr<_1a4879164_UseDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline void _1a4d6ea33_parseUseDecl(_1a4d674cb_parser*, jule::Ptr<_1a4879164_UseDecl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4879164_UseDecl> _1a4d6edda_buildUseDecl(_1a4d674cb_parser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>, jule::Bool);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d70292_buildTypeEnumItemKind(jule::Ptr<_1a4d674cb_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>> _1a4d705a0_buildTypeEnumItems(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a487b221_TypeEnumDecl> _1a4d708ad_buildTypeEnumDecl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4865eca_Expr> _1a4d70c65_buildEnumItemExpr(jule::Ptr<_1a4d674cb_parser>, jule::I64*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>> _1a4d71073_buildEnumItems(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a487a110_EnumDecl> _1a4d71381_buildEnumDecl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Any _1a4d7168e_buildNodeEnumDecl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a487b41e_FieldDecl> _1a4d7199c_buildField(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Slice<jule::Ptr<_1a487b41e_FieldDecl>> _1a4d71caa_buildStructDeclFields(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a487bbc2_StructDecl> _1a4d720b8_buildStructDecl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d7233d_checkMethodReceiver(_1a4d674cb_parser*, jule::Ptr<_1a4873438_FnDecl>*);
inline jule::Slice<jule::Ptr<_1a4873438_FnDecl>> _1a4d7264b_buildTraitMethods(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a487c2cc_TraitDecl> _1a4d72959_buildTraitDecl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4873438_FnDecl> _1a4d72c67_buildCppLinkFn(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4874417_VarDecl> _1a4d73075_buildCppLinkVar(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a487bbc2_StructDecl> _1a4d73383_buildCppLinkStruct(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4877c78_TypeAliasDecl> _1a4d73691_buildCppLinkTypeAlias(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a4879164_UseDecl> _1a4d7399e_buildCppLinkUse(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Any _1a4d73cac_buildCppLink(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4873438_FnDecl> _1a4d740ba_getMethod(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d743d9_parseImplBody(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1a487c8d7_Impl>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a487c8d7_Impl> _1a4d746e7_buildImpl(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Any _1a4d74a05_buildNodeData(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d74c7a_applyFnMeta(_1a4d674cb_parser*, jule::Ptr<_1a4873438_FnDecl>*);
inline void _1a4d75000_applyMeta(_1a4d674cb_parser*, _1a3c1cc01_Node*);
inline void _1a4d75275_pushUseDecl(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1a4879164_UseDecl>*);
inline jule::Bool _1a4d75583_pushMetaNodes(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline _1a3c1cc01_Node _1a4d75891_parseNode(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d75b16_appendNode(jule::Ptr<_1a4d674cb_parser>, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d76078_removeRange(_1a4d674cb_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::I64>*);
inline void _1a4d76441_pushWrongOrderCloseErr(_1a4d674cb_parser*, jule::Ptr<_1ceee8973_Token>*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::I64>*);
inline void _1a4d768a3_pushRangeClose(_1a4d674cb_parser*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Slice<jule::I64>*);
inline void _1a4d76b28_checkRanges(_1a4d674cb_parser*, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline void _1a4d76d9d_parse(jule::Ptr<_1a4d674cb_parser>, jule::Ptr<_1ceeedd0d_File>*);
struct _1a4d674cb_parser {
	jule::Ptr<_1a3c1be0e_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>> _field_directives;
	jule::Slice<_1ceb4952a_Log> _field_errors;
	

	_1a4d674cb_parser(void) = default;


};
inline void _1a4d787b7_pushErr(_1a4d781e0_typeBuilder*, jule::Ptr<_1ceee8973_Token>, jule::Str);
inline void _1a4d78ad6_pushSuggestion(_1a4d781e0_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d78d4a_buildPrim(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d790ae_buildNamespace(_1a4d781e0_typeBuilder*);
inline jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _1a4d79323_buildGenerics(_1a4d781e0_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d79587_identGenerics(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d797eb_buildIdent(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d79a60_buildCppLink(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d79cc4_buildFn(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a038_buildPtr(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a29c_buildSptr(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a511_buildOp(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a775_buildSlc(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a9d9_buildArr(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7ac4d_buildMap(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7aeb2_buildEnumerable(_1a4d781e0_typeBuilder*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7b226_step(_1a4d781e0_typeBuilder*);
inline __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool _1a4d7b48a_build(_1a4d781e0_typeBuilder*);
struct _1a4d781e0_typeBuilder {
	jule::Ptr<_1a4d674cb_parser> _field_p;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1a4d781e0_typeBuilder(void) = default;


};
struct _1b5a50b43_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1b5a50b43_CompileInfo(void) = default;

	inline bool operator==(_1b5a50b43_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1b5a50b43_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1b5a524e6_pushErr(_1b5a51e96_directiveEval*, jule::Ptr<_1ceee8973_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1b5a5289d_splitOperans(_1b5a51e96_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Bool _1b5a52bab_evalDirectiveIdent(_1b5a51e96_directiveEval*, jule::Str);
inline jule::Bool _1b5a52eb9_evalDirectivePart(_1b5a51e96_directiveEval*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Bool _1b5a5322d_eval(_1b5a51e96_directiveEval*);
struct _1b5a51e96_directiveEval {
	jule::Slice<_1ceb4952a_Log> _field_logs;
	jule::Ptr<_1a3c1d0ec_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1b5a51e96_directiveEval(void) = default;


};
inline jule::Ptr<_1a4d35e6c_JuleImporter> static__1a4d1580e_New(_1b5a50b43_CompileInfo);
inline jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>> _1a4d099bd_AllPackages(_1a4d35e6c_JuleImporter*);
inline void _1a4d2de76_SetModPath(_1a4d35e6c_JuleImporter*, jule::Str);
inline jule::Str _1a4d3131e_GetModPath(_1a4d35e6c_JuleImporter*);
inline jule::Str _1a4d0d582_ModById(_1a4d35e6c_JuleImporter*, jule::I64);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a4d7b820_GetImport(_1a4d35e6c_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log _1a4d7bbc7_ImportPackage(_1a4d35e6c_JuleImporter*, jule::Str, jule::Bool);
inline void _1a4d7be4c_Imported(_1a4d35e6c_JuleImporter*, jule::Ptr<_1a53e27e2_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1ceb4952a_Log _1a4d7c38c_isPassBuildDirectives(_1a4d35e6c_JuleImporter*, jule::Ptr<_1a3c1be0e_Ast>*);
struct _1a4d35e6c_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1a4d35e6c_JuleImporter(void) = default;


};
struct _1a4d7d547_OrderedDefines {
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_Globals;
	

	_1a4d7d547_OrderedDefines(void) = default;


};
inline jule::Bool _1a88a7149_isCommonOrdered(jule::Slice<jule::Ptr<_1a487d19b_Struct>>, jule::Ptr<_1a487d19b_Struct>);
inline jule::Bool _1a88ae3a4_isCommonOrdered(jule::Slice<jule::Ptr<_1a5418939_Var>>, jule::Ptr<_1a5418939_Var>);
inline void _1a88a16e8_orderCommon(jule::Slice<jule::Ptr<_1a487d19b_Struct>>*);
inline void _1a88a2089_orderCommon(jule::Slice<jule::Ptr<_1a5418939_Var>>*);
inline void static__1a4d7e16e_orderStructures(jule::Slice<jule::Ptr<_1a487d19b_Struct>>*);
inline void static__1a4d7e37d_orderVars(jule::Slice<jule::Ptr<_1a5418939_Var>>*);
struct _1a4d7d79a_defineOrderer {
	

	_1a4d7d79a_defineOrderer(void) = default;

	inline bool operator==(_1a4d7d79a_defineOrderer _other) { return true; }

	inline bool operator!=(_1a4d7d79a_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1a5d47ce6_liveTable {
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1a53a717a_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1a487d575_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1a53b63cb_Trait>> _field_traits;
	

	_1a5d47ce6_liveTable(void) = default;


};
inline void _1a5d7e03b_optimizeChild(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c40dc_Scope>*);
inline void _1a5d7e2d3_optimizeBodyChildExceptional(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c40dc_Scope>*);
inline void _1a5d7e569_optimizeBodyChild(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c40dc_Scope>*);
inline void _1a5d7e7de_optimizeExprModel(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Any*);
inline void _1a5d7e9ba_eliminateFollowed(_1a5d7da63_scopeDeadCode*);
inline void _1a5d7ec40_pushGoto(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c6b17_GotoSt>);
inline void _1a5d7eeb5_pushLabel(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c682b_Label>);
inline void _1a5d8023a_optimizeRangeIter(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c5c8c_RangeIter>);
inline void _1a5d804b0_optimizeWhileIter(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c53a7_WhileIter>);
inline void _1a5d80735_optimizeInfIter(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c4e34_InfIter>);
inline void _1a5d809aa_optimizeConditional(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c4b48_Conditional>);
inline void _1a5d80c30_optimizeMatch(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c7d38_Match>);
inline void _1a5d80ea5_optimizeAssign(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c7442_Assign>);
inline void _1a5d8122a_optimizeMultiAssign(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Ptr<_1a53c77e9_MultiAssign>);
inline void _1a5d814a0_optimizeStmt(jule::Ptr<_1a5d7da63_scopeDeadCode>, jule::Any);
inline void _1a5d8167b_optimizeStmts(jule::Ptr<_1a5d7da63_scopeDeadCode>);
struct _1a5d7da63_scopeDeadCode {
	jule::Ptr<_1a5d7da63_scopeDeadCode> _field_parent;
	jule::Ptr<_1a53c40dc_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1a53c682b_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1a53c6b17_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1a5d7da63_scopeDeadCode(void) = default;

	inline bool operator==(_1a5d7da63_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1a5d7da63_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1a5d829bd_exprDeadCode static__1a5d830ea_new(jule::Ptr<_1a5d7da63_scopeDeadCode>*);
inline void _1a5d83370_binary(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53962ac_BinopExprModel>);
inline void _1a5d835e5_unary(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5396664_UnaryExprModel>);
inline void _1a5d8386a_structureLit(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5396e17_StructLitExprModel>);
inline void _1a5d83ae0_allocStructure(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5397225_AllocStructLitExprModel>);
inline void _1a5d83d65_casting(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5397775_CastingExprModel>);
inline void _1a5d840da_args(_1a5d829bd_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1a5d84360_funcCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5398127_FnCallExprModel>);
inline void _1a5d845d5_slice(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53984ce_SliceExprModel>);
inline void _1a5d8485a_array(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539b207_ArrayExprModel>);
inline void _1a5d84ad0_indexing(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5398952_IndexingExprModel>);
inline void _1a5d84d55_anonFunc(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5398d09_AnonFnExprModel>);
inline void _1a5d850ca_mapExpr(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5399634_MapExprModel>);
inline void _1a5d85350_slicing(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a5399b73_SlicingExprModel>);
inline void _1a5d855c5_traitSub(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539a1b2_TraitSubIdentExprModel>);
inline void _1a5d8584a_structureSub(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539a998_StructSubIdentExprModel>);
inline void _1a5d85ac0_commonSub(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539ba54_CommonSubIdentExprModel>);
inline void _1a5d85d45_tuple(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539bd51_TupleExprModel>);
inline void _1a5d860ba_newCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel>);
inline void _1a5d86340_outCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539c22a_BuiltinOutCallExprModel>);
inline void _1a5d865b5_outlnCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel>);
inline void _1a5d8683a_panicCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539d209_BuiltinPanicCallExprModel>);
inline void _1a5d86ab0_assertCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel>);
inline void _1a5d86d35_errorCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel>);
inline void _1a5d870aa_makeCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>);
inline void _1a5d87330_appendCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539e051_BuiltinAppendCallExprModel>);
inline void _1a5d875a5_lenCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539e370_BuiltinLenCallExprModel>);
inline void _1a5d8782a_capCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539e68e_BuiltinCapCallExprModel>);
inline void _1a5d87aa0_cloneCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539c934_BuiltinCloneCallExprModel>);
inline void _1a5d87d25_deleteCall(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel>);
inline void _1a5d8809a_sizeof(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53a088d_SizeofExprModel>);
inline void _1a5d88320_alignof(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53a0b79_AlignofExprModel>);
inline void _1a5d88595_integratedToStr(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53a1273_IntegratedToStrExprModel>);
inline void _1a5d8881a_free(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53a1927_FreeExprModel>);
inline void _1a5d88a90_backendEmit(_1a5d829bd_exprDeadCode*, jule::Ptr<_1a53a163b_BackendEmitExprModel>);
inline void _1a5d88d15_optimize(_1a5d829bd_exprDeadCode*, jule::Any*);
struct _1a5d829bd_exprDeadCode {
	jule::Ptr<_1a5d7da63_scopeDeadCode> _field_s;
	

	_1a5d829bd_exprDeadCode(void) = default;

	inline bool operator==(_1a5d829bd_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1a5d829bd_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1b5667150_UnsafeBinopExprModel {
	jule::Ptr<_1a53962ac_BinopExprModel> _field_Node;
	

	_1b5667150_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1b5667150_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b5667150_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b567d5a6_UnsafeIndexingExprModel {
	jule::Ptr<_1a5398952_IndexingExprModel> _field_Node;
	

	_1b567d5a6_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1b567d5a6_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b567d5a6_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1a3c3d914_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1a53984ce_SliceExprModel> _field_Elems;
	

	_1a3c3d914_PushToSliceExprModel(void) = default;

	inline bool operator==(_1a3c3d914_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1a3c3d914_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b56cd727_MutSlicingExprModel {
	jule::Ptr<_1ceee8973_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1b56cd727_MutSlicingExprModel(void) = default;

	inline bool operator==(_1b56cd727_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b56cd727_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b56cd914_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1b56cd914_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1b56cd914_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b56cd914_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a3e43333_scopeOptimizer> static__1ce2988d3_new(jule::Ptr<_1a53c40dc_Scope>);
inline void _1ce29a7c5_setCurrentStmt(_1a3e43333_scopeOptimizer*, jule::Any);
inline void _1ce2972a5_optimizeData(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a5466305_Data>);
inline void _1ce544e48_optimizeVar(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a5418939_Var>);
inline void _1ce54c2d5_optimizeConditional(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c4b48_Conditional>);
inline void _1ce57065a_buildDefaultConstatTrueCase(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c8883_Case>, jule::I64*, jule::Ptr<_1a53c7d38_Match>*);
inline void _1ce576ce3_optimizeMatch(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c7d38_Match>);
inline void _1ce57aab6_optimizeRangeIter(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c5c8c_RangeIter>);
inline void _1ce5864b7_optimizeWhileIter(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c53a7_WhileIter>);
inline jule::Bool _1ce58b7db_substr(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c7442_Assign>);
inline jule::Bool _1ce596c58_strInsert(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c7442_Assign>);
inline jule::Bool _1ce59dc93_strAssign(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c7442_Assign>);
inline void _1ce5ad49a_optimizeAssign(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c7442_Assign>);
inline void _1ce5b4b55_optimizeMultiAssign(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c77e9_MultiAssign>);
inline void _1ce5bc1e0_optimizeRet(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c92ac_RetSt>);
inline void _1ce5da3b7_optimizeStmt(_1a3e43333_scopeOptimizer*, jule::Any);
inline void _1b55b948c_optimizeChild(_1a3e43333_scopeOptimizer*, jule::Ptr<_1a53c40dc_Scope>);
inline void _1b55bcdca_optimize(_1a3e43333_scopeOptimizer*);
struct _1a3e43333_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1a53c40dc_Scope> _field_scope;
	

	_1a3e43333_scopeOptimizer(void) = default;

	inline bool operator==(_1a3e43333_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1a3e43333_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1b56c5c2a_optimize(jule::Any*);
inline jule::Bool _1a3c5186c_strCond(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53962ac_BinopExprModel>);
inline void _1a3c71b45_binary(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53962ac_BinopExprModel>);
inline void _1a3c94393_unary(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5396664_UnaryExprModel>);
inline void _1a3ca5849_structureLit(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5396e17_StructLitExprModel>);
inline void _1a3cbd0d1_allocStructure(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5397225_AllocStructLitExprModel>);
inline void _1a3cd7183_casting(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5397775_CastingExprModel>);
inline void _1a3ce1566_args(_1a3e43520_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1a3ce813e_scope(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53c40dc_Scope>*);
inline void _1a3ced4c9_funcCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5398127_FnCallExprModel>);
inline void _1a3d1ee79_slice(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53984ce_SliceExprModel>);
inline void _1a3d25a2e_array(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539b207_ArrayExprModel>);
inline void _1a3d26e2b_indexing(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5398952_IndexingExprModel>);
inline void _1a3d46cb4_anonFunc(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5398d09_AnonFnExprModel>);
inline void _1a3d61790_mapExpr(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5399634_MapExprModel>);
inline void _1a3d6ccc9_slicing(_1a3e43520_exprOptimizer*, jule::Ptr<_1a5399b73_SlicingExprModel>);
inline void _1a3d707c1_traitSub(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539a1b2_TraitSubIdentExprModel>);
inline void _1a3d87178_structureSub(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539a998_StructSubIdentExprModel>);
inline void _1a3d8cb73_commonSub(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539ba54_CommonSubIdentExprModel>);
inline void _1a3d97ed0_tuple(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539bd51_TupleExprModel>);
inline void _1a3d9de09_newCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel>);
inline void _1a3e2c2d9_outCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539c22a_BuiltinOutCallExprModel>);
inline void _1ce56a91e_outlnCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel>);
inline void _1ce5b6b02_panicCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539d209_BuiltinPanicCallExprModel>);
inline void _1b5611957_assertCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel>);
inline void _1b5629695_errorCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel>);
inline void _1b562a7b7_makeCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>);
inline void _1b562cb3d_appendCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539e051_BuiltinAppendCallExprModel>);
inline void _1b562d853_lenCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539e370_BuiltinLenCallExprModel>);
inline void _1b5646c67_capCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539e68e_BuiltinCapCallExprModel>);
inline void _1b565cd27_cloneCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539c934_BuiltinCloneCallExprModel>);
inline void _1a3c3e041_deleteCall(_1a3e43520_exprOptimizer*, jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel>);
inline void _1a3c4904b_sizeof(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53a088d_SizeofExprModel>);
inline void _1a3c580c1_alignof(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53a0b79_AlignofExprModel>);
inline void _1a3c84163_integratedToStr(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53a1273_IntegratedToStrExprModel>);
inline void _1a3d3b979_free(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53a1927_FreeExprModel>);
inline void _1ce587ce3_backendEmit(_1a3e43520_exprOptimizer*, jule::Ptr<_1a53a163b_BackendEmitExprModel>);
inline void _1b56a3884_do(_1a3e43520_exprOptimizer*);
struct _1a3e43520_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1a3e43520_exprOptimizer(void) = default;

	inline bool operator==(_1a3e43520_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1a3e43520_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a4dacbc5_Optimizer> static__1a5ca4093_New(jule::Ptr<_1a4ce7615_IR>*);
inline void _1a5cb2513_optimizeGlobal(_1a4dacbc5_Optimizer*, jule::Ptr<_1a5418939_Var>*);
inline void _1a5ce15ca_optimizeFunction(_1a4dacbc5_Optimizer*, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a5d00dae_optimizeStruct(_1a4dacbc5_Optimizer*, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a5d090b5_optimizeGlobals(_1a4dacbc5_Optimizer*, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d18d0b_optimizeFunctions(_1a4dacbc5_Optimizer*, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d1a549_optimizeStructs(_1a4dacbc5_Optimizer*, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5cb5aaa_optimizePackage(_1a4dacbc5_Optimizer*, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5ce4413_Optimize(_1a4dacbc5_Optimizer*);
struct _1a4dacbc5_Optimizer {
	jule::Ptr<_1a4ce7615_IR> _field_ir;
	

	_1a4dacbc5_Optimizer(void) = default;

	inline bool operator==(_1a4dacbc5_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1a4dacbc5_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1a5d9bcc3_Reset(void);
inline void static__1a5d9d06b_Print(jule::Str, jule::Str);
struct _1a5d9cd7e_AnsiEscape {
	

	_1a5d9cd7e_AnsiEscape(void) = default;

	inline bool operator==(_1a5d9cd7e_AnsiEscape _other) { return true; }

	inline bool operator!=(_1a5d9cd7e_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1a5d9e600_LogFlat(_1ceb4952a_Log*);
inline void static__1a5d9e80e_LogError(_1ceb4952a_Log*);
inline void static__1a5d9ea1d_Log(_1ceb4952a_Log*);
inline void static__1a5d9ec2c_PrintLogs(jule::Slice<_1ceb4952a_Log>*);
struct _1a5d9e39c_Logger {
	

	_1a5d9e39c_Logger(void) = default;

	inline bool operator==(_1a5d9e39c_Logger _other) { return true; }

	inline bool operator!=(_1a5d9e39c_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1a6633504_Unix(_1a663314c_AbsTime*);
struct _1a663314c_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1a663314c_AbsTime(void) = default;

	inline bool operator==(_1a663314c_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a663314c_AbsTime _other) { return !this->operator==(_other); }


};
inline _1a66337e0_Time static__1a6633b86_Unix(jule::U64);
inline _1a66337e0_Time static__1a6633d84_Now(void);
inline jule::U64 _1a66342d5_Unix(_1a66337e0_Time*);
inline jule::U64 _1a6634549_Day(_1a66337e0_Time*);
inline jule::U64 _1a66347ad_Month(_1a66337e0_Time*);
inline jule::U64 _1a6634a22_Year(_1a66337e0_Time*);
inline jule::U64 _1a6634c86_Second(_1a66337e0_Time*);
inline jule::U64 _1a6634eea_Minute(_1a66337e0_Time*);
inline jule::U64 _1a663525e_Hour(_1a66337e0_Time*);
inline _1a663314c_AbsTime _1a66354c3_Abs(_1a66337e0_Time*);
struct _1a66337e0_Time {
	jule::U64 _field_sec = 0;
	

	_1a66337e0_Time(void) = default;

	inline bool operator==(_1a66337e0_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a66337e0_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1ced54ea5_scopeCoder> static__1cec72db2_new(jule::Ptr<_1a663a60a_ObjectCoder>*);
inline void _1a8c6c2cd_iterHead(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c5c8c_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1ceced15c_rangeIndexIter(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c5c8c_RangeIter>*);
inline void _1cecee207_rangeHashmapIter(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c5c8c_RangeIter>*);
inline void _1a573127e_ifCase(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c44d8_If>);
inline void _1a5740007_conditional(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c4b48_Conditional>);
inline void _1a5742823_infIter(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c4e34_InfIter>);
inline void _1cec861b1_whileIter(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c53a7_WhileIter>);
inline void _1cec86a0d_rangeIter(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c5c8c_RangeIter>);
inline void _1ceceb7ed_cont(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c6188_ContSt>);
inline void _1ced14a69_label(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c682b_Label>);
inline void _1ced1a278_gotoSt(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c6b17_GotoSt>);
inline void _1ced40e08_postfix(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c6ebe_Postfix>);
inline void _1ced41e09_assign(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c7442_Assign>);
inline void _1a5726b59_mapLookupAssign(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c77e9_MultiAssign>*);
inline void _1cec4e72e_multiAssignTup(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c77e9_MultiAssign>*);
inline void _1ced01a34_multiAssignFn(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c77e9_MultiAssign>*);
inline void _1ced11390_multiAssign(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c77e9_MultiAssign>);
inline jule::Fn<void(void)> _1a5729b6d_matchExpr(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c7d38_Match>);
inline void _1a573a695_case(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c7d38_Match>, jule::Ptr<_1a53c8883_Case>);
inline void _1cec752e3_matchSt(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c7d38_Match>);
inline void _1cecd5441_fallSt(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c8e38_FallSt>);
inline void _1ced08a5d_breakSt(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c6540_BreakSt>);
inline void _1a574aa29_setResult(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c92ac_RetSt>);
inline void _1cec639b8_retSt(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c92ac_RetSt>);
inline void _1cec7b140_var(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a5418939_Var>);
inline void _1ced5ae12_st(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Any);
inline void _1a5729024_scopeStmts(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c40dc_Scope>*);
inline void _1a5737e34_scope(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53c40dc_Scope>);
inline void _1cececd3d_funcScope(jule::Ptr<_1ced54ea5_scopeCoder>, jule::Ptr<_1a53a717a_FnIns>);
struct _1ced54ea5_scopeCoder {
	jule::Ptr<_1a663a60a_ObjectCoder> _field_oc;
	

	_1ced54ea5_scopeCoder(void) = default;

	inline bool operator==(_1ced54ea5_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ced54ea5_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1cec7eb5a_exprCoder> static__1ced52964_new(jule::Ptr<_1a663a60a_ObjectCoder>*);
inline void _1ced52a96_string(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5389ec6_Const>*);
inline void _1cec8e87e_boolean(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Bool);
inline void _1cec8e9b1_nilLit(jule::Ptr<_1cec7eb5a_exprCoder>);
inline jule::Bool _1ced1c852_ftoaSpecialCases(jule::Ptr<_1cec7eb5a_exprCoder>, jule::F64*);
inline void _1ced1c984_float32(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5389ec6_Const>*);
inline void _1ced1cab6_float64(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5389ec6_Const>*);
inline void _1a57260a9_constant(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5389ec6_Const>);
inline void _1a57261db_divByZeroBinary(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1ceee8973_Token>*, jule::Ptr<_1a5395ce5_OperandExprModel>*, jule::Ptr<_1a5395ce5_OperandExprModel>*);
inline void _1a572631d_unsafeBinary(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53962ac_BinopExprModel>);
inline void _1a5726450_binary(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53962ac_BinopExprModel>);
inline void _1a5726e34_var(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5418939_Var>);
inline void _1a5727066_structureIns(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a487d575_StructIns>);
inline void _1a5727198_unary(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5396664_UnaryExprModel>);
inline void _1a57272ca_structureLit(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5396e17_StructLitExprModel>);
inline void _1a572740c_allocStructure(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5397225_AllocStructLitExprModel>);
inline void _1a572753e_possibleRefExpr(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Any);
inline void _1a5727671_casting(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5397775_CastingExprModel>);
inline void _1a572794b_models(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Slice<jule::Any>);
inline void _1a5727a7d_args(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398127_FnCallExprModel>*);
inline void _1a5727bb0_modelForCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Any);
inline void _1a5727ce2_pushCallInf(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398127_FnCallExprModel>*);
inline jule::Bool _1a5763844_isWrapped(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398127_FnCallExprModel>*);
inline void _1a5763976_pureFuncCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398127_FnCallExprModel>*);
inline void _1a5763aa8_coFuncCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398127_FnCallExprModel>*);
inline void _1a5763bda_writeUseExpr(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a717a_FnIns>*, jule::Ptr<_1a5466305_Data>);
inline void _1a62be2d3_funcCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398127_FnCallExprModel>);
inline void _1a62c023a_slice(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53984ce_SliceExprModel>);
inline void _1a62c03b1_indexing(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398952_IndexingExprModel>);
inline void _1a62c0625_unsafeIndexing(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1b567d5a6_UnsafeIndexingExprModel>);
inline void _1a62c089a_anonFunc(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5398d09_AnonFnExprModel>);
inline void _1a62c0b20_mapExpr(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5399634_MapExprModel>);
inline void _1a62c0d95_slicing(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5399b73_SlicingExprModel>);
inline void _1a62c111a_traitSub(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539a1b2_TraitSubIdentExprModel>);
inline void _1a62c1390_structureSub(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539a998_StructSubIdentExprModel>);
inline void _1a62c1615_commonIdent(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539b4e3_CommonIdentExprModel>);
inline void _1a62c188a_commonSub(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539ba54_CommonSubIdentExprModel>);
inline void _1a62c1b10_array(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539b207_ArrayExprModel>);
inline void _1a62c1d85_funcInsCommon(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a717a_FnIns>);
inline void _1a62c210a_funcIns(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a717a_FnIns>);
inline void _1a62c2380_tuple(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539bd51_TupleExprModel>);
inline void _1a62c2605_newCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel>);
inline void _1a62c287a_outCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539c22a_BuiltinOutCallExprModel>);
inline void _1a62c2b00_outlnCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel>);
inline void _1a62c2d75_panicCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539d209_BuiltinPanicCallExprModel>);
inline void _1a62c30ea_assertCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel>);
inline void _1a62c3370_errorCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel>);
inline void _1a62c35e5_copyCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a01a6_BuiltinCopyCallExprModel>);
inline void _1a62c386a_lenCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539e370_BuiltinLenCallExprModel>);
inline void _1a62c3ae0_capCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539e68e_BuiltinCapCallExprModel>);
inline void _1a62c3d65_deleteCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel>);
inline void _1a62c40da_makeCallSlice(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>*);
inline void _1a62c4360_makeCallStr(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>*);
inline void _1a62c45d5_makeCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>);
inline void _1a62c485a_pushToSlice(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a3c3d914_PushToSliceExprModel>);
inline void _1a62c4ad0_appendCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539e051_BuiltinAppendCallExprModel>);
inline void _1a62c4d55_cloneCall(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539c934_BuiltinCloneCallExprModel>);
inline void _1a62c50ca_sizeof(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a088d_SizeofExprModel>);
inline void _1a62c5350_alignof(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a0b79_AlignofExprModel>);
inline jule::Str _1a62c565d_runeLit(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a0e65_RuneExprModel>);
inline void _1a62c58d3_structureStatic(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a539ad3e_StructStaticIdentExprModel>);
inline void _1a62c5b58_integratedToStr(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a1273_IntegratedToStrExprModel>);
inline void _1a62c5dcd_backendEmit(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a163b_BackendEmitExprModel>);
inline void _1a62c6153_free(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a53a1927_FreeExprModel>);
inline void _1a62c63c8_mutSlicing(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1b56cd727_MutSlicingExprModel>);
inline void _1a62c664d_strInsertBegin(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1b56cd914_StrInsertBeginExprModel>);
inline void _1a62c68c3_model(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Any);
inline void _1a62c6b48_initExpr(jule::Ptr<_1cec7eb5a_exprCoder>, jule::Ptr<_1a5492287_TypeKind>);
struct _1cec7eb5a_exprCoder {
	jule::Ptr<_1a663a60a_ObjectCoder> _field_oc;
	

	_1cec7eb5a_exprCoder(void) = default;

	inline bool operator==(_1cec7eb5a_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1cec7eb5a_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a62c9497_deriveCoder> static__1a62c9871_new(jule::Ptr<_1a663a60a_ObjectCoder>);
inline jule::Str _1a62c9b7e_cloneFuncDecl(_1a62c9497_deriveCoder*, jule::Ptr<_1a487d19b_Struct>*);
inline jule::Str _1a62c9e8c_cloneFuncDef(_1a62c9497_deriveCoder*, jule::Ptr<_1a487d19b_Struct>*);
struct _1a62c9497_deriveCoder {
	jule::Ptr<_1a663a60a_ObjectCoder> _field_oc;
	

	_1a62c9497_deriveCoder(void) = default;

	inline bool operator==(_1a62c9497_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a62c9497_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a62cadb1_TestCoder> static__1a62cb334_New(jule::Ptr<_1a663a60a_ObjectCoder>*);
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a62cb598_findTestingPackage(jule::Ptr<_1a62cadb1_TestCoder>);
inline void _1a62cb81d_appendTest(jule::Ptr<_1a62cadb1_TestCoder>, jule::Ptr<_1a53a717a_FnIns>);
inline void _1a62cba93_appendPackageTests(jule::Ptr<_1a62cadb1_TestCoder>, jule::Ptr<_1a53e574b_Package>*);
inline jule::Bool _1a62cbd07_readyTestingPackage(jule::Ptr<_1a62cadb1_TestCoder>);
inline void _1a62cbed3_callTmReset(jule::Ptr<_1a62cadb1_TestCoder>);
inline void _1a62cc1ae_callTmFailed(jule::Ptr<_1a62cadb1_TestCoder>);
inline void _1a62cc38a_callTmSkipped(jule::Ptr<_1a62cadb1_TestCoder>);
inline void _1a62cc566_Serialize(jule::Ptr<_1a62cadb1_TestCoder>);
struct _1a62cadb1_TestCoder {
	jule::Ptr<_1a487d575_StructIns> _field_t;
	jule::Ptr<_1a53a44c9_Fn> _field_tmReset;
	jule::Ptr<_1a53a44c9_Fn> _field_tmFailed;
	jule::Ptr<_1a53a44c9_Fn> _field_tmSkipped;
	jule::Ptr<_1a663a60a_ObjectCoder> _field_oc;
	

	_1a62cadb1_TestCoder(void) = default;

	inline bool operator==(_1a62cadb1_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a62cadb1_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1a62cd9c9_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1a62cddb4_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1a62ce15b_func(jule::Ptr<_1a53a44c9_Fn>*);
inline jule::Str static__1a62ce403_funcIns(jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Str static__1a62ce69a_traitDecl(jule::Ptr<_1a53b63cb_Trait>);
inline jule::Str static__1a62ce942_param(jule::Ptr<_1a53a2b8c_Param>*);
inline jule::Str static__1a62cebd9_structure(jule::Ptr<_1a487d19b_Struct>*);
inline jule::Str static__1a62cee81_structureIns(jule::Ptr<_1a487d575_StructIns>*);
inline jule::Str static__1a62d0228_field(jule::Ptr<_1a4852208_Field>*);
inline jule::Str static__1a62d04c0_var(jule::Ptr<_1a5418939_Var>);
inline jule::Str static__1a62d0767_iterBegin(jule::Uintptr);
inline jule::Str static__1a62d0a0e_iterEnd(jule::Uintptr);
inline jule::Str static__1a62d0ca6_iterNext(jule::Uintptr);
inline jule::Str static__1a62d104d_label(jule::Str*);
inline jule::Str static__1a62d12e5_matchEnd(jule::Uintptr);
inline jule::Str static__1a62d158c_caseBegin(jule::Uintptr);
struct _1a62cd512_identCoder {
	

	_1a62cd512_identCoder(void) = default;

	inline bool operator==(_1a62cd512_identCoder _other) { return true; }

	inline bool operator!=(_1a62cd512_identCoder _other) { return !this->operator==(_other); }


};
struct _1a65cc1b2_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1a65cc1b2_SerializationInfo(void) = default;

	inline bool operator==(_1a65cc1b2_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a65cc1b2_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a62d62b7_traitHash {
	jule::Ptr<_1a53b63cb_Trait> _field_t;
	jule::Ptr<_1a487d575_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1a62d62b7_traitHash(void) = default;

	inline bool operator==(_1a62d62b7_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a62d62b7_traitHash _other) { return !this->operator==(_other); }


};
inline jule::Str _1a6641446_Str(_1a664115a_customType*);
inline jule::Bool _1a6641754_Equal(jule::Ptr<_1a664115a_customType>, jule::Ptr<_1a5492287_TypeKind>);
struct _1a664115a_customType {
	jule::Str _field_kind;
	

	_1a664115a_customType(void) = default;

	inline bool operator==(_1a664115a_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a664115a_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6641b0b_typeCoder> static__1a664214a_new(jule::Ptr<_1a663a60a_ObjectCoder>*);
inline jule::Str _1a6642458_toType(_1a6641b0b_typeCoder*, jule::Str);
inline jule::Str _1a6642766_prim(_1a6641b0b_typeCoder*, jule::Ptr<_1a5496ed4_Prim>);
inline jule::Str _1a6642a74_tuple(_1a6641b0b_typeCoder*, jule::Ptr<_1a549bc53_Tuple>);
inline jule::Str _1a6642d82_asSptr(_1a6641b0b_typeCoder*, jule::Str);
inline jule::Str _1a6643190_asPtr(_1a6641b0b_typeCoder*, jule::Str);
inline jule::Str _1a664349d_sptr(_1a6641b0b_typeCoder*, jule::Ptr<_1a549a768_Sptr>);
inline jule::Str _1a66437ab_ptr(_1a6641b0b_typeCoder*, jule::Ptr<_1a549dccc_Ptr>);
inline jule::Str _1a6643ab9_enumDecl(_1a6641b0b_typeCoder*, jule::Ptr<_1a53b8521_Enum>);
inline jule::Str _1a6643dc7_typeEnumDecl(_1a6641b0b_typeCoder*, jule::Ptr<_1a53b9b1b_TypeEnum>);
inline jule::Str _1a66441d5_asSlice(_1a6641b0b_typeCoder*, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Str _1a66444e3_slice(_1a6641b0b_typeCoder*, jule::Ptr<_1a549b1c5_Slc>);
inline jule::Str _1a6644801_mapType(_1a6641b0b_typeCoder*, jule::Ptr<_1a549c77b_Map>);
inline jule::Str _1a6644b0e_traitIdent(_1a6641b0b_typeCoder*, jule::Str);
inline jule::Str _1a6644e1c_traitDecl(_1a6641b0b_typeCoder*, jule::Ptr<_1a53b63cb_Trait>);
inline jule::Str _1a664522a_structure(_1a6641b0b_typeCoder*, jule::Ptr<_1a487d19b_Struct>);
inline jule::Str _1a6645538_structureIns(_1a6641b0b_typeCoder*, jule::Ptr<_1a487d575_StructIns>);
inline jule::Str _1a6645846_array(_1a6641b0b_typeCoder*, jule::Ptr<_1a549d370_Arr>);
inline jule::Str _1a6645e62_paramIns(_1a6641b0b_typeCoder*, jule::Ptr<_1a53a62ab_ParamIns>*);
inline void _1a664658e_funcInsResult(_1a6641b0b_typeCoder*, jule::Str*, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Str _1a664689c_anonFunc(_1a6641b0b_typeCoder*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Str _1a6646baa_func(_1a6641b0b_typeCoder*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Str _1a6646eb8_kind(_1a6641b0b_typeCoder*, jule::Ptr<_1a5492287_TypeKind>);
struct _1a6641b0b_typeCoder {
	jule::Ptr<_1a663a60a_ObjectCoder> _field_oc;
	jule::Ptr<_1a66493e9_resultCoder> _field_rc;
	

	_1a6641b0b_typeCoder(void) = default;

	inline bool operator==(_1a6641b0b_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a6641b0b_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a66493e9_resultCoder> static__1a6649905_new(jule::Ptr<_1a6641b0b_typeCoder>*);
inline void _1a6649c24_ptr(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a549dccc_Ptr>);
inline void _1a664a043_sptr(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a549a768_Sptr>);
inline void _1a664a362_mapType(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a549c77b_Map>);
inline void _1a664a681_slice(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a549b1c5_Slc>);
inline void _1a664a9a0_arr(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a549d370_Arr>);
inline void _1a664acbe_func(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a53a717a_FnIns>);
inline void _1a664b0dd_tup(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a549bc53_Tuple>);
inline void _1a664b40c_codeMut(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a664b72b_codeMut1(_1a66493e9_resultCoder*, jule::Str*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Str _1a664ba06_code(_1a66493e9_resultCoder*, jule::Ptr<_1a5492287_TypeKind>*);
struct _1a66493e9_resultCoder {
	jule::Ptr<_1a6641b0b_typeCoder> _field_tc;
	

	_1a66493e9_resultCoder(void) = default;

	inline bool operator==(_1a66493e9_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a66493e9_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1a9111672_Name(_1a9111298_Flag*);
inline jule::Str _1a91117a4_What(_1a9111298_Flag*);
inline void _1a91118d6_Reset(_1a9111298_Flag*);
inline jule::I32 _1a9111a29_Short(_1a9111298_Flag*);
struct _1a9111298_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1a9111298_Flag(void) = default;

	inline bool operator==(_1a9111298_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a9111298_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a9114a82_Name(_1a9114ee4_Flag*);
inline jule::Str _1a91152d0_What(_1a9114ee4_Flag*);
inline void _1a9115412_Reset(_1a9114ee4_Flag*);
inline jule::I32 _1a9115544_Short(_1a9114ee4_Flag*);
struct _1a9114ee4_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1a9114ee4_Flag(void) = default;

	inline bool operator==(_1a9114ee4_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a9114ee4_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a9118349_Name(_1a91187ab_Flag*);
inline jule::Str _1a9118a97_What(_1a91187ab_Flag*);
inline void _1a9118bc9_Reset(_1a91187ab_Flag*);
inline jule::I32 _1a9118d0b_Short(_1a91187ab_Flag*);
struct _1a91187ab_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1a91187ab_Flag(void) = default;

	inline bool operator==(_1a91187ab_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a91187ab_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a911bb55_Name(_1a911c0b7_Flag*);
inline jule::Str _1a911c3a3_What(_1a911c0b7_Flag*);
inline void _1a911c4d5_Reset(_1a911c0b7_Flag*);
inline jule::I32 _1a911c617_Short(_1a911c0b7_Flag*);
struct _1a911c0b7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1a911c0b7_Flag(void) = default;

	inline bool operator==(_1a911c0b7_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a911c0b7_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1a912041c_Name(_1a912087e_Flag*);
inline jule::Str _1a9120b6a_What(_1a912087e_Flag*);
inline void _1a9120c9c_Reset(_1a912087e_Flag*);
inline jule::I32 _1a9120dce_Short(_1a912087e_Flag*);
struct _1a912087e_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1a912087e_Flag(void) = default;

	inline bool operator==(_1a912087e_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a912087e_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1a6699ba8_FlagSet> static__1a6699e94_New(void);
inline jule::Trait<_1a6698239_CommonFlag> _1a669a428_FindFlag(_1a6699ba8_FlagSet*, jule::Str);
inline jule::Trait<_1a6698239_CommonFlag> _1a669a736_FindFlagShort(_1a6699ba8_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1a6698239_CommonFlag>> _1a669a99a_Flags(_1a6699ba8_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a669aca8_Parse(_1a6699ba8_FlagSet*, jule::Slice<jule::Str>);
inline void _1a669ae84_Reset(_1a6699ba8_FlagSet*);
inline jule::Ptr<_1a912087e_Flag> _1a91911a2_addFlagCommon(_1a6699ba8_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1a911c0b7_Flag> _1a91999e6_addFlagCommon(_1a6699ba8_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1a918e139_AddVar(_1a6699ba8_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1a91979b1_AddVar(_1a6699ba8_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1a6699ba8_FlagSet {
	jule::Slice<jule::Trait<_1a6698239_CommonFlag>> _field_flags;
	

	_1a6699ba8_FlagSet(void) = default;


};
inline jule::Ptr<_1cebd5440_Cmd> static__1cebd5891_New(jule::Str);
inline jule::VoidExceptional _1cebd5a6c_Spawn(_1cebd5440_Cmd*);
inline jule::VoidExceptional _1cebd5c48_Kill(_1cebd5440_Cmd*);
inline jule::Exceptional<jule::I64> _1cebd5eac_Wait(_1cebd5440_Cmd*);
inline jule::VoidExceptional _1cec1dd6e_spawn(_1cebd5440_Cmd*);
inline jule::VoidExceptional _1cec1e04a_kill(_1cebd5440_Cmd*);
inline jule::Exceptional<jule::I64> _1cec1e2ae_wait(_1cebd5440_Cmd*);
struct _1cebd5440_Cmd {
	_1cec1d203_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_1cebd5440_Cmd(void) = default;


};
inline __jule_tuple_x_1a4ce7615_IR__jule_tuple_s_1ceb4952a_Log static__1a4ce95d4_Build(jule::Str, jule::I64);
inline void _1a4ce7802_appendStructs(_1a4ce7615_IR*, jule::Ptr<_1a53e574b_Package>*, jule::Slice<jule::Ptr<_1a487d19b_Struct>>*);
inline jule::Slice<jule::Ptr<_1a487d19b_Struct>> _1a4ce6a43_GetAllStructures(_1a4ce7615_IR*);
inline void _1a4d7c579_appendGlobals(_1a4ce7615_IR*, jule::Ptr<_1a53e574b_Package>*, jule::Slice<jule::Ptr<_1a5418939_Var>>*);
inline jule::Slice<jule::Ptr<_1a5418939_Var>> _1a4d7c6ab_GetAllGlobals(_1a4ce7615_IR*);
inline void _1a4d7c7dd_Order(_1a4ce7615_IR*);
struct _1a4ce7615_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1a53e574b_Package> _field_Main;
	jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>> _field_Used;
	_1a4d7d547_OrderedDefines _field_Ordered;
	

	_1a4ce7615_IR(void) = default;


};
inline jule::Ptr<_1a5d48159_ObjectDeadCode> static__1a5d48632_new(jule::Ptr<_1a4ce7615_IR>*);
inline jule::Bool _1a88d6420_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53b63cb_Trait>*);
inline jule::Bool _1a88db15b_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Bool _1a88e3c13_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a487d575_StructIns>*);
inline jule::Bool _1a88ee559_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a5418939_Var>*);
inline void _1a88d6772_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53b63cb_Trait>);
inline void _1a88dbc50_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53a717a_FnIns>);
inline void _1a88e2eed_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a487d575_StructIns>);
inline void _1a88ee8ab_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a5418939_Var>);
inline void _1a5d7a80c_setReferencesAsLive(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53aa0e5_ReferenceStack>*);
inline void _1a5d7aa82_inits(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d7ad07_collectLivePackage(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d7aed3_collectLive(jule::Ptr<_1a5d48159_ObjectDeadCode>);
inline void _1a5d7b258_removeDeadGlobals(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a5418939_Var>>*);
inline void _1a5d7b4cd_removeDeadFns(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a53a44c9_Fn>>*);
inline void _1a5d7b753_removeDeadStructs(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a487d19b_Struct>>*);
inline void _1a5d7b9c8_removeDeadTraits(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Slice<jule::Ptr<_1a53b63cb_Trait>>*);
inline void _1a5d7bc4d_removeDeadsFile(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a54614cb_SymbolTable>*);
inline void _1a5d7bec3_removeDeadsPackage(jule::Ptr<_1a5d48159_ObjectDeadCode>, jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d7c19e_removeDeads(jule::Ptr<_1a5d48159_ObjectDeadCode>);
inline void _1a5d7c37a_elimanate(jule::Ptr<_1a5d48159_ObjectDeadCode>);
struct _1a5d48159_ObjectDeadCode {
	_1a5d47ce6_liveTable _field_live;
	jule::Ptr<_1a4ce7615_IR> _field_ir;
	

	_1a5d48159_ObjectDeadCode(void) = default;


};
inline jule::Str _1a484cd5d_Str(_1a487d575_StructIns*);
inline jule::Bool _1a4853dca_Equal(jule::Ptr<_1a487d575_StructIns>, jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a4855030_Same(_1a487d575_StructIns*, jule::Ptr<_1a487d575_StructIns>);
inline jule::Ptr<_1a53a44c9_Fn> _1a4857384_FindMethod(_1a487d575_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d388_FieldIns> _1a48586a4_FindField(_1a487d575_StructIns*, jule::Str);
inline jule::Ptr<_1a5418939_Var> _1a483a620_FindStatic(_1a487d575_StructIns*, jule::Str);
struct _1a487d575_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1a487d19b_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1a5490a5a_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1a487d388_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1a5418939_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1a53aa0e5_ReferenceStack> _field_Refers;
	_1a485984d_Operators _field_Operators;
	

	_1a487d575_StructIns(void) = default;


};
inline jule::Ptr<_1a663a60a_ObjectCoder> static__1a62d57a0_New(jule::Ptr<_1a4ce7615_IR>*, _1a65cc1b2_SerializationInfo);
inline void _1a6305b88_write(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Str);
inline void _1a661126d_addIndent(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a661178a_doneIndent(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a6614cdd_indent(jule::Ptr<_1a663a60a_ObjectCoder>);
inline jule::I64 _1a661acc2_findAnyType(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::I64 _1a630a286_pushAnyType(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a63094b6_pushResultIns(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a6613737_pushResult(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53a44c9_Fn>*);
inline jule::I64 _1a62d6020_findTypeOffset(_1a663a60a_ObjectCoder*, jule::Ptr<_1a53b63cb_Trait>, jule::Ptr<_1a5492287_TypeKind>);
inline void _1a663ac04_locInfo(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1ceee8973_Token>*);
inline void _1a663ad36_head(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663ae68_links(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663b09a_prepareStructure(_1a663a60a_ObjectCoder*, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a663b1cc_prepareStructures(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663b30e_iterPackages(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>);
inline void _1a663b441_buildTraitMap(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663b573_traitDecls(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663b6a5_structurePlainDecl(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a663b7d7_structurePlainDecls(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663b919_fieldDecl(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d388_FieldIns>*);
inline void _1a663ba4b_structureDestructor(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663bb7d_structureDeriveDefsDecls(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663bcb0_structureOperatorEq(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Str*, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663bde2_structureOperatorNotEq(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Str*, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663c024_structureOperator(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Str*, jule::Ptr<_1a53a717a_FnIns>*, jule::Str);
inline void _1a663c156_structureOperators(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663c288_structureInsDecl(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663c3ba_structureDecl(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a663c4ec_structureDecls(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663c62e_paramsDecls(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>*);
inline void _1a663c761_funcHead(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53a717a_FnIns>*, jule::Bool);
inline void _1a663c893_funcDecl(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53a44c9_Fn>*, jule::Bool);
inline void _1a663c9c5_funcDecls(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663cb07_traitDataTypes(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663cc39_paramIns(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53a62ab_ParamIns>*);
inline void _1a663cd6b_paramsIns(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>*);
inline void _1a663ce9d_varInitExpr(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a5418939_Var>*, jule::Fn<void(void)>);
inline void _1a663d0d0_var(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a5418939_Var>);
inline void _1a663d212_func(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53a44c9_Fn>*);
inline void _1a663d344_traitWrappers(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663d476_traitDatas(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663d5a8_globals(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663d6da_decls(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663d81c_structureMethods(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663d94e_structureDeriveDefs(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663da81_structureOstream(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663dc4b_structureIns(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d575_StructIns>*);
inline void _1a663dec1_structure(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a487d19b_Struct>*);
inline void _1a663e19c_structures(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663e378_funcs(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663e5ed_pushInit(jule::Ptr<_1a663a60a_ObjectCoder>, jule::Ptr<_1a53e574b_Package>*);
inline void _1a663e7c9_initCaller(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663e9a5_end(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663eb81_serializeHead(jule::Ptr<_1a663a60a_ObjectCoder>);
inline void _1a663ed5c_Serialize(jule::Ptr<_1a663a60a_ObjectCoder>);
struct _1a663a60a_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1a4ce7615_IR> _field_ir;
	_1a65cc1b2_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a62d62b7_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _field_anyTypeMap;
	jule::Ptr<_1cec7eb5a_exprCoder> _field_ec;
	jule::Ptr<_1ced54ea5_scopeCoder> _field_sc;
	jule::Ptr<_1a6641b0b_typeCoder> _field_tc;
	jule::Ptr<_1a62c9497_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1a663a60a_ObjectCoder(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1a9133ba0_parseInteger(_1a669c381_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1a913bc74_parseInteger(_1a669c381_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1a669cb78_getData(_1a669c381_argParser*);
inline jule::VoidExceptional _1a669cdba_processFlag(_1a669c381_argParser*, jule::Trait<_1a6698239_CommonFlag>*);
inline jule::VoidExceptional _1a669d140_singleDash(_1a669c381_argParser*, jule::Str*);
inline jule::VoidExceptional _1a669d3b5_doubleDash(_1a669c381_argParser*, jule::Str*);
inline jule::VoidExceptional _1a669d591_tryArg(_1a669c381_argParser*);
inline jule::VoidExceptional _1a669d76c_parse(_1a669c381_argParser*);
struct _1a669c381_argParser {
	_1a6699ba8_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1a669c381_argParser(void) = default;


};
inline void _1e8552ce9_Free(void*);
inline jule::Str _1e8567528_BytePtrToStr(jule::U8*);
inline jule::I64 _1e779e772_GetLastErrno(void);
inline jule::I64 _1e8585bd9_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1e858602a_Stat(jule::U8*, struct stat*);
inline jule::I64 _1e8586415_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1e8586756_Getcwd(jule::U8*, jule::U64);
inline DIR* _1e8586c2e_Opendir(jule::U8*);
inline struct dirent* _1e8586ec6_Readdir(DIR*);
inline jule::I64 _1e858726d_Closedir(DIR*);
inline jule::I64 _1e8587aed_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _1e8587d95_Rmdir(jule::U8*);
inline jule::I64 _1e858813c_Unlink(jule::U8*);
inline jule::I64 _1e8598834_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1e8598c1e_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1e8599093_Close(jule::I64);
inline jule::I64 _1e859947d_Write(jule::I64, void*, jule::U64);
inline void _1e859968c_Exit(jule::I64);
inline jule::Slice<jule::U8> _1e77de4b5_Stobs(jule::Str*);
inline void _1e77bd2b8_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline jule::I64 _1e8652c1d_getLastOsError(void);
inline jule::Slice<jule::Str> _1e8653c41_Args(void);
inline jule::Exceptional<jule::Str> _1e86541b4_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1e8654a77_getwd(void);
inline jule::Bool _1ce96d21c_IsLetter(jule::I32);
inline jule::Bool _1ce9d5be1_is16(jule::Slice<_1ce9d412e_Range16>, jule::U16);
inline jule::Bool _1ce9d6032_is32(jule::Slice<_1ce9d45a2_Range32>, jule::U32);
inline jule::Bool _1ce9d67c4_isExcludingLatin(jule::Ptr<_1ce9d4a25_RangeTable>, jule::I32);
inline jule::Bool _1ce9d6a6b_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1cea9dc65_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1cea9e084_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _1cea9e32b_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1ceaa00c9_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1ceaa041a_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1ceaa0959_RuneCountStr(jule::Str);
inline jule::Bool _1ceaa0c01_RuneStart(jule::U8);
inline jule::I64 _1ceacd602_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1ceacd778_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1ceabcd3e_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _1ceabd180_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1ceaa53cb_Repeat(jule::Str, jule::I64);
inline jule::Bool _1ceaa8786_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1ceaa4a18_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1ceabd2e5_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1ceabd59d_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1ceabd988_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1ceabe2c4_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1ceabe615_FindLast(jule::Str, jule::Str);
inline jule::I64 _1ceac08ad_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _1ceac11e9_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1ceac200d_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1ceac2739_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1ceac2a7a_Contains(jule::Str, jule::Str);
inline jule::Bool _1ceac354d_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1ceac388e_Count(jule::Str, jule::Str);
inline jule::Str _1ceac3d23_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1ceac0d86_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1ceac4dce_TrimLeft(jule::Str, jule::Str);
inline void _1ceac5187_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1ceac5819_Trim(jule::Str, jule::Str);
inline jule::Str _1ceac5b5a_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1e86b13db_Clean(jule::Str);
inline jule::Str _1e86d0c24_FromSlash(jule::Str);
inline jule::Str _1e86d32ba_Join(jule::Slice<jule::Str>);
inline jule::Str _1e86d4783_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1e869c9e3_Abs(jule::Str);
inline jule::Str _1e86b8a86_Base(jule::Str);
inline jule::Str _1e86d6d29_Dir(jule::Str);
inline jule::Str _1e8692059_VolumeName(jule::Str);
inline jule::Bool _1ceac5e9b_IsPathSep(jule::U8);
inline jule::Bool _1ceac60cd_IsAbs(jule::Str);
inline jule::I64 _1ceac6210_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1ceac6342_abs(jule::Str);
inline jule::Str _1ceac6474_join(jule::Slice<jule::Str>);
inline jule::I64 _1e77c2cb2_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1cebd6d48_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _1cec1ace4_Itoa(jule::I64);
inline jule::Str _1cec1b0d0_Utoa(jule::U64);
inline jule::Slice<char*> _1cec1d599_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _1cec1d8da_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1cec1dae9_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _1cec1e9a7_processErrorFromCode(jule::I64);
inline jule::I64 _1cec1ebe9_getLastProcessError(void);
inline void _1cec2049c_Exit(jule::I64);
inline jule::Str _1cec2069a_Executable(void);
inline jule::Bool _1ceb3c452_IsStdHeaderPath(jule::Str);
inline jule::Bool _1ceb3c672_IsValidHeaderExt(jule::Str);
inline jule::Bool _1ceb3c919_IsValidCppExt(jule::Str);
inline jule::Str _1ceb4996a_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ceb49c56_argToStr(jule::Any);
inline jule::I64 _1ceb49eed_findNextFmt(jule::Str);
inline jule::Str _1ceb4a383_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1ceb4b40b_IsTopDirective(jule::Str);
inline jule::Bool _1ceb4c83b_IsWindows(jule::Str);
inline jule::Bool _1ceb4cae4_IsDarwin(jule::Str);
inline jule::Bool _1ceb4cd8b_IsLinux(jule::Str);
inline jule::Bool _1ceb4d1aa_IsI386(jule::Str);
inline jule::Bool _1ceb4d452_IsAmd64(jule::Str);
inline jule::Bool _1ceb4d6e9_IsArm64(jule::Str);
inline jule::Bool _1ceb4d991_IsUnix(jule::Str);
inline jule::Bool _1ceb4dd15_Is32Bit(jule::Str);
inline jule::Bool _1ceb4e0ac_Is64Bit(jule::Str);
inline void _1cebb16a2_init(void);
inline jule::Bool _1ceee917c_IsUnaryOp(jule::Str);
inline jule::Bool _1ceee9468_IsBinOp(jule::Str);
inline jule::Bool _1ceee9a2e_IsStr(jule::Str);
inline jule::Bool _1ceee9cc6_IsRawStr(jule::Str);
inline jule::Bool _1ceeea06d_IsRune(jule::Str);
inline jule::Bool _1ceeea689_IsBool(jule::Str);
inline jule::Bool _1ceeea931_IsFloat(jule::Str);
inline jule::Bool _1ceeeabc8_IsNum(jule::Str);
inline jule::Bool _1ceeeb217_IsIgnoreIdent(jule::Str);
inline jule::Bool _1ceeeb4ae_IsAnonIdent(jule::Str);
inline jule::Bool _1ceeeb9ed_IsSpace(jule::I32);
inline jule::Bool _1ceeebe4e_IsLetter(jule::I32);
inline jule::Bool _1ceeec48d_IsDecimal(jule::U8);
inline jule::Bool _1ceeec735_IsBinary(jule::U8);
inline jule::Bool _1ceeec9cc_IsOctal(jule::U8);
inline jule::Bool _1ceeecc74_IsHex(jule::U8);
inline jule::Bool _1ceeed01b_IsAssign(jule::U64);
inline jule::Bool _1ceeed2b3_IsPostfixOp(jule::Str);
inline jule::Bool _1ceeed55a_IsAssignOp(jule::Str);
inline jule::Ptr<_1ceeedd0d_File> _1d000033c_NewFileSet(jule::Str);
inline _1ceb4952a_Log _1d0001ad0_makeErr(jule::I64, jule::I64, jule::Ptr<_1ceeedd0d_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d0001e65_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1d00022a6_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d000263b_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d000297c_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d0002cbd_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d000310e_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d0003560_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d0003807_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1d0003a9e_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1d0003de0_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1d0004231_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1d0004572_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1d00048b3_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1d0004c04_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d0005155_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1d00053ec_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1d000573d_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1d00059d5_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1d0005c9e_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1d0005e58_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1d00061de_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1ceb4952a_Log> _1d000abd8_Lex(jule::Ptr<_1ceeedd0d_File>, jule::I64);
inline jule::I64 _1a533e871_LeadingZeros64(jule::U64);
inline jule::I64 _1a53407a6_TrailingZeros(jule::U64);
inline jule::I64 _1a534119c_TrailingZeros32(jule::U32);
inline jule::I64 _1a5341444_TrailingZeros64(jule::U64);
inline jule::I64 _1a5346a54_Len32(jule::U32);
inline jule::I64 _1a5346ceb_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1a53479ab_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1a534913e_Mul64(jule::U64, jule::U64);
inline jule::U32 _1a52a5551_F32Bits(jule::F32);
inline jule::F32 _1a52a583c_F32FromBits(jule::U32);
inline jule::U64 _1a52a5ad4_F64Bits(jule::F64);
inline jule::F64 _1a52a5e03_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1a52a83de_Frexp(jule::F64);
inline jule::F64 _1a534d363_NaN(void);
inline jule::Bool _1a534d495_IsNaN(jule::F64);
inline jule::F64 _1a534d5c7_Inf(jule::I64);
inline jule::Bool _1a534d709_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1a534d83b_normalize(jule::F64);
inline jule::F64 _1a534e70a_Log(jule::F64);
inline jule::F64 _1a534ed26_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1a5353bc6_Modf(jule::F64);
inline jule::F64 _1a5354116_Log2(jule::F64);
inline jule::Str _1a482d1e5_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a482585d_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1a4dd4b31_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a5034d6e_floatInfo*);
inline jule::Slice<jule::U8> _1a4e487bb_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1a4e378cb_decimalSlice, jule::I64, jule::U8);
inline void _1a500c891_roundShortest(_1a537ecac_decimal*, jule::U64, jule::I64, _1a5034d6e_floatInfo*);
inline jule::Slice<jule::U8> _1a5035d92_fmtE(jule::Slice<jule::U8>, jule::Bool, _1a4e378cb_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1a50b661a_fmtF(jule::Slice<jule::U8>, jule::Bool, _1a4e378cb_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1a50d89c2_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1a5034d6e_floatInfo*);
inline jule::Slice<jule::U8> _1a5038b64_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1a5034d6e_floatInfo*);
inline jule::I64 _1a4811be0_min(jule::I64, jule::I64);
inline jule::I64 _1a4e6a07e_max(jule::I64, jule::I64);
inline jule::U8 _1a4e10431_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1a47ebb42_ConvError _1a4e46e18_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1a4e4704a_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1a5045bd7_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1a47ee0a6_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1a47ee1d8_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1a537b380_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a537b4b2_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a537b5e4_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1a537c12d_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1a537c260_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1a47ebb42_ConvError _1a537c392_atofHex(jule::Str, _1a5034d6e_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a47ebb42_ConvError _1a537c5d4_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError _1a537c716_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError _1a537c848_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1a537c97a_ParseFloat(jule::Str, jule::I64);
inline void _1a537cd98_ryuFtoaFixed32(_1a4e378cb_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1a537ceca_ryuFtoaFixed64(_1a4e378cb_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1a537d32c_formatDecimal(_1a4e378cb_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1a537d45e_ryuFtoaShortest(_1a4e378cb_decimalSlice*, jule::U64, jule::I64, _1a5034d6e_floatInfo*);
inline jule::I64 _1a537d591_mulByLog2Log10(jule::I64);
inline jule::I64 _1a537d6c3_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a537d805_computeBounds(jule::U64, jule::I64, _1a5034d6e_floatInfo*);
inline void _1a537da47_ryuDigits(_1a4e378cb_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1a537db79_ryuDigits32(_1a4e378cb_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a537dcab_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a537dddd_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1a537e020_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1a537e152_divmod1e9(jule::U64);
inline void _1a5380818_trim(_1a537ecac_decimal*);
inline void _1a538094a_rightShift(_1a537ecac_decimal*, jule::U64);
inline jule::Bool _1a5380ac1_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1a5380d46_leftShift(_1a537ecac_decimal*, jule::U64);
inline jule::Bool _1a5381187_shouldRoundUp(_1a537ecac_decimal*, jule::I64);
inline jule::Str _1a53827a4_FmtUint(jule::U64, jule::I64);
inline jule::Str _1a5382b39_FmtInt(jule::I64, jule::I64);
inline jule::Str _1a5382dd1_Itoa(jule::I64);
inline jule::Str _1a5383200_small(jule::I64);
inline jule::Bool _1a5383497_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1a53839c5_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1a47aea5b_RealKindOf(jule::Str);
inline jule::I64 _1a47d2056_BitsizeOf(jule::Str);
inline jule::Str _1a4709687_IntFromBits(jule::I64);
inline jule::Str _1a47d24b8_UintFromBits(jule::I64);
inline jule::Str _1a4791ea0_FloatFromBits(jule::I64);
inline jule::Bool _1a46e1240_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1a4785180_BitsizeOfFloat(jule::F64);
inline jule::I64 _1a472da85_BitsizeOfInt(jule::I64);
inline jule::I64 _1a472dbb7_BitsizeOfUint(jule::U64);
inline void _1a4790de4_UpdateTarget(void);
inline void _1a4791026_init(void);
inline jule::F64 _1a5386368_Min(jule::Str);
inline jule::F64 _1a538649a_Max(jule::Str);
inline jule::Bool _1a53867a8_IsI8Compatible(jule::Str);
inline jule::Bool _1a53868da_IsI16Compatible(jule::Str);
inline jule::Bool _1a5386a1c_IsI32Compatible(jule::Str);
inline jule::Bool _1a5386b4e_IsI64Compatible(jule::Str);
inline jule::Bool _1a5386c81_IsU8Compatible(jule::Str);
inline jule::Bool _1a5386db3_IsU16Compatible(jule::Str);
inline jule::Bool _1a5386ee5_IsU32Compatible(jule::Str);
inline jule::Bool _1a5387127_IsU64Compatible(jule::Str);
inline jule::Bool _1a5387259_IsF32Compatible(jule::Str);
inline jule::Bool _1a538738b_IsF64Compatible(jule::Str);
inline jule::Bool _1a53874bd_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1a5387600_IsI16Greater(jule::Str);
inline jule::Bool _1a5387732_IsI32Greater(jule::Str);
inline jule::Bool _1a5387864_IsI64Greater(jule::Str);
inline jule::Bool _1a5387996_IsU16Greater(jule::Str);
inline jule::Bool _1a5387d09_IsU32Greater(jule::Str);
inline jule::Bool _1a5387e3b_IsU64Greater(jule::Str);
inline jule::Bool _1a538806d_IsF32Greater(jule::Str);
inline jule::Bool _1a53881a0_IsF64Greater(jule::Str);
inline jule::Bool _1a53882d2_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1a5388d71_IsSigInt(jule::Str);
inline jule::Bool _1a538915c_IsUnsigInt(jule::Str);
inline jule::Bool _1a5389404_IsInt(jule::Str);
inline jule::Bool _1a5389723_IsFloat(jule::Str);
inline jule::Bool _1a53899ba_IsNum(jule::Str);
inline jule::Bool _1a5389c62_IsSigNum(jule::Str);
inline void _1a53936e9_lshiftUnsig(_1a5389ec6_Const*, _1a5389ec6_Const*);
inline void _1a53939e6_rshiftUnsig(_1a5389ec6_Const*, _1a5389ec6_Const*);
inline jule::Bool _1a5431e80_IsAscii(jule::I32);
inline jule::I32 _1a5432106_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1a544de9c_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1a544e299_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1a544e541_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1a544e84e_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1a544eb90_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1a48c5600_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1a48c6502_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1a48c6c0b_FmtByDefault(jule::Str*, jule::Any*);
inline void _1a48c7415_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline void _1a49088ca_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>*);
inline jule::Str _1a4912917_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1a4a899a1_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a53a928c_parameterUsesGenerics(jule::Ptr<_1a53a62ab_ParamIns>*, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>*);
inline jule::Ptr<_1a5496665_TypeSymbol> _1a53ab7ab_buildType(jule::Ptr<_1a48619a9_TypeDecl>);
inline jule::Ptr<_1a546737d_Value> _1a53aba97_buildExpr(jule::Ptr<_1a4865eca_Expr>);
inline jule::Ptr<_1a5491594_TypeAlias> _1a53abd3e_buildTypeAlias(jule::Ptr<_1a4877c78_TypeAliasDecl>);
inline jule::Ptr<_1a4852208_Field> _1a53ac15d_buildField(jule::Ptr<_1a487b41e_FieldDecl>);
inline jule::Slice<jule::Ptr<_1a4852208_Field>> _1a53ac405_buildFields(jule::Slice<jule::Ptr<_1a487b41e_FieldDecl>>*);
inline jule::Ptr<_1a487d19b_Struct> _1a53ac69c_buildStruct(jule::Ptr<_1a487bbc2_StructDecl>);
inline jule::Ptr<_1a53a2b8c_Param> _1a53ac944_buildParam(jule::Ptr<_1a4872118_ParamDecl>);
inline jule::Slice<jule::Ptr<_1a53a2b8c_Param>> _1a53accb8_buildParams(jule::Slice<jule::Ptr<_1a4872118_ParamDecl>>*);
inline jule::Ptr<_1a53a24b6_RetType> _1a53ad060_buildRetType(jule::Ptr<_1a4864abc_RetTypeDecl>);
inline jule::Ptr<_1a53a44c9_Fn> _1a53ad307_buildFn(jule::Ptr<_1a4873438_FnDecl>);
inline jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _1a53ad59e_buildMethods(jule::Slice<jule::Ptr<_1a4873438_FnDecl>>*);
inline jule::Ptr<_1a53b63cb_Trait> _1a53ad846_buildTrait(jule::Ptr<_1a487c2cc_TraitDecl>);
inline jule::Ptr<_1a53b7a2b_EnumItem> _1a53adadd_buildEnumItem(jule::Ptr<_1a48795d7_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>> _1a53add85_buildEnumItems(jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>>*);
inline jule::Ptr<_1a53b8521_Enum> _1a53ae12c_buildEnum(jule::Ptr<_1a487a110_EnumDecl>);
inline jule::Ptr<_1a53b9555_TypeEnumItem> _1a53ae57d_buildTypeEnumItem(jule::Ptr<_1a487ab16_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>> _1a53ae825_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>>*);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53aeabc_buildTypeEnum(jule::Ptr<_1a487b221_TypeEnumDecl>);
inline jule::Ptr<_1a5418939_Var> _1a53aed64_buildVar(jule::Ptr<_1a4874417_VarDecl>);
inline jule::Slice<jule::Ptr<_1a5418939_Var>> _1a53b010b_buildVars(jule::Slice<jule::Ptr<_1a4874417_VarDecl>>);
inline jule::Ptr<_1a53be082_Impl> _1a53b03a3_buildImpl(jule::Ptr<_1a487c8d7_Impl>);
inline jule::Bool _1a53bd427_matchConstraint(jule::Str*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a53bd713_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53c111c_newScopeCheckerBase(jule::Ptr<_1a53ea93d_Sema>*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53c14a2_newScopeChecker(jule::Ptr<_1a53ea93d_Sema>*, jule::Ptr<_1a53a717a_FnIns>);
inline jule::Ptr<_1a53c98b7_scopeLabel> _1a53c17e3_findLabelParent(jule::Str, jule::Ptr<_1a53cab4e_scopeChecker>);
inline jule::Bool _1a53c1b78_modelIsGotoScope(jule::Any, jule::Ptr<_1a53c40dc_Scope>*);
inline jule::Bool _1a53c1eb9_stmtIsGotoScope(jule::Any*, jule::Ptr<_1a53c40dc_Scope>*);
inline jule::I64 _1a53c230a_countMatchType(jule::Ptr<_1a53c7d38_Match>*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Slice<jule::Ptr<_1a5466305_Data>> _1a53c25a2_getDatasFromTupleData(jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a53c2ddd_checkMut(jule::Ptr<_1a53ea93d_Sema>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a53c3372_checkAssign(jule::Ptr<_1a53ea93d_Sema>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a53c3619_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1a53c38b1_isValidStForNextSt(jule::Any*);
inline jule::Bool _1a53c3b58_stmtIsDef(jule::Any*);
inline jule::Ptr<_1a5418939_Var> _1a53e0009_findVarInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a5491594_TypeAlias> _1a53e0438_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a487d19b_Struct> _1a53e0823_findStructInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53a44c9_Fn> _1a53e0c85_findFnInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1a53b63cb_Trait> _1a53e1093_findTraitInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1a53b8521_Enum> _1a53e13d4_findEnumInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53e1725_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str);
inline jule::Any _1a53e1c20_defByIdentPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1a53e7d25_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1a53e8b06_isValidModelForRef(jule::Any*);
inline _1ceb4952a_Log _1a53e9024_compilerErr(jule::Ptr<_1ceee8973_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a53e9365_impIsLookupable(jule::Ptr<_1a53e27e2_ImportInfo>*, jule::Str);
inline void _1a53e9662_appendRetVars(jule::Slice<jule::Ptr<_1a5418939_Var>>*, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a53e991a_appendParamVars(jule::Slice<jule::Ptr<_1a5418939_Var>>*, jule::Ptr<_1a53a717a_FnIns>*);
inline void _1a53e9be5_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Ptr<_1a54614cb_SymbolTable> _1a53ea047_findFile(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>*, jule::Ptr<_1ceeedd0d_File>*);
inline void _1a53ea4a9_pushSugggestion(_1ceb4952a_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1a543239d_traitHasReferenceReceiver(jule::Ptr<_1a53b63cb_Trait>*);
inline jule::Bool _1a54324d0_floatAssignable(jule::Str, jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a544dc16_sigAssignable(jule::Str, jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a544dd48_unsigAssignable(jule::Str, jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a544ede3_intAssignable(jule::Str, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5492287_TypeKind> _1a5460552_lenKind(void);
inline jule::Ptr<_1a3c1d0ec_Directive> _1a548b935_findDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Str);
inline jule::Any _1a548bcba_findBuiltinsImport(jule::Str, jule::Ptr<_1a53e27e2_ImportInfo>);
inline void _1a548bec9_fitBitsize(jule::Ptr<_1a5466305_Data>*);
inline void _1a548c2c6_makeStructLitAlloc(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5396e17_StructLitExprModel>*);
inline jule::Ptr<_1a5418939_Var> _1a548c617_buildErrorVar(jule::Ptr<_1a53c40dc_Scope>*, jule::Ptr<_1a4869eac_FnCallExpr>*);
inline jule::Any _1a548c958_findBuiltinsSema(jule::Str, jule::Ptr<_1a53ea93d_Sema>);
inline jule::Bool _1a548cc00_isOkForShifting(jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a548d0a7_isInstancedStruct(jule::Ptr<_1a487d575_StructIns>);
inline jule::Bool _1a548d41a_isPtrArithmeticCompatible(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline void _1a548d65c_applyCastKindModel(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a548d915_applyCastKind(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Ptr<_1a5466305_Data> _1a548db13_buildVoidData(void);
inline jule::Str _1a548ddcc_checkDataForIntegerIndexing(jule::Ptr<_1a5466305_Data>*);
inline void _1a548e196_applyCastModelByEnum(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a53b8521_Enum>);
inline void _1a548e44e_castConstByType(jule::Str*, jule::Ptr<_1a5466305_Data>*);
inline void _1a548e95a_updateModelToGenericIns(jule::Any*, jule::Ptr<_1a53a717a_FnIns>*);
inline jule::Bool _1a548eb9c_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1a48626be_SubIdentTypeDecl>*);
inline jule::Bool _1a54a8e91_kindUsesGenerics(jule::Ptr<_1a5492287_TypeKind>*, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>*);
inline jule::Bool _1a54a9326_hasDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Str);
inline jule::Bool _1a54a95bd_canGetPtr(jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a54a98dc_isValidForSptrType(jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a54a9b84_isValidForRef(jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Bool _1a54a9e4d_isBuiltinStrConvertable(jule::Ptr<_1a5492287_TypeKind>*);
inline jule::Str _1a54aa1c3_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a5496ed4_Prim> _1a54aa57a_buildPrimType(jule::Str);
inline jule::Ptr<_1a487d19b_Struct> _1a54aa822_getStructFromKind(jule::Ptr<_1a5492287_TypeKind>);
inline jule::Bool _1a54aaab9_isPrim(jule::Str);
inline void _1a54aad72_applyImplicitCast(jule::Ptr<_1a5492287_TypeKind>*, jule::Ptr<_1a5466305_Data>*);
inline __jule_tuple_x_1a54614cb_SymbolTable__jule_tuple_s_1ceb4952a_Log _1a54adddb_buildSymbols(jule::Ptr<_1a3c1be0e_Ast>*, jule::Trait<_1a53deb74_Importer>*, jule::Ptr<_1a53b0903_symbolBuilder>);
inline __jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log _1a54ae31a_analyzePackage(jule::Slice<jule::Ptr<_1a3c1be0e_Ast>>*, jule::Trait<_1a53deb74_Importer>*, jule::I64*);
inline __jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log _1a54ae705_AnalyzePackage(jule::Slice<jule::Ptr<_1a3c1be0e_Ast>>, jule::Trait<_1a53deb74_Importer>, jule::I64);
inline jule::Ptr<_1a53a717a_FnIns> _1a4c1d937_findBuiltinFn(jule::Str);
inline jule::Ptr<_1a5491594_TypeAlias> _1a4c3d0d8_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1a4c8c236_findBuiltinDef(jule::Str);
inline jule::Any _1a4c96a48_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1a48ba76b_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1a48bc30b_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1a48bd0a9_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1a5466305_Data> _1a4956a6b_builtinCallerCommonPlain(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a4a701d4_builtinCallerCommon(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a4bbb1dc_builtinCallerCommonMut(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a4c1d22d_builtinCallerError(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*);
inline jule::Ptr<_1a5466305_Data> _1a4c6442d_builtinCallerOut(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a519067d_builtinCallerOutln(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a51d8660_builtinCallerNew(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a51d8990_builtinCallerPanic(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52368bc_builtinCallerMake(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a521d343_builtinCallerAppend(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bd5d0_callerCopySlice(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bd712_callerCopyStr(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bd844_builtinCallerCopy(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bd976_callerLenSlice(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bdaa8_callerLenMap(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bdbda_callerLenArr(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bdd1c_callerLenStr(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bde4e_builtinCallerLen(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52be081_callerCapSlice(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52be1b3_callerCapStr(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52be2e5_builtinCallerCap(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52be427_callerDeleteMap(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52be559_builtinCallerDelete(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52be68b_builtinCallerClone(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1e85b3c7d_builtinCallerAssert(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bec41_builtinCallerStdMemSizeOf(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52bed73_builtinCallerStdMemAlignOf(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52beea5_builtinCallerStdMemFree(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52c00d7_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52c0219_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52c034b_builtinCallerStdDebugOut(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Ptr<_1a5466305_Data> _1a52c047d_builtinCallerStdDebugOutln(jule::Ptr<_1a5467d73_Eval>*, jule::Ptr<_1a4869eac_FnCallExpr>*, jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1b5a61e2e_FindModuleFile(jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>*);
inline jule::Str _1b5a620c7_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1ceb4952a_Log> _1b5a6236e_CheckModuleFile(jule::Str);
inline jule::Ptr<_1a4d47d80_FileInfo> _1a4d4849b_ParseFile(jule::Ptr<_1ceeedd0d_File>);
inline __jule_tuple_x_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log _1a4d48a2e_parseFileset(jule::Ptr<_1ceeedd0d_File>);
inline jule::Ptr<_1a4871942_ScopeTree> _1a4d4948b_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1a4d49744_isSt(jule::Ptr<_1ceee8973_Token>, jule::Ptr<_1ceee8973_Token>);
inline jule::Bool _1a4d49a85_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1a4d49e1a_nextStPos(jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::I64);
inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_bool _1a4d4a25b_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _1a4d4a8ee_splitStmts(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Bool _1a4d620db_isTypeOp(jule::Str*);
inline jule::Bool _1a4d623c7_isTypeRange(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Slice<jule::Ptr<_1ceee8973_Token>> _1a4d6266e_getBlockExpr(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token _1a4d62a04_splitDelim(jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::U64);
inline jule::I64 _1a4d62c9b_findLowestPrecOp(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Ptr<_1a4867b8b_IdentExpr> _1a4d63043_buildIdentExpr(jule::Ptr<_1ceee8973_Token>*);
inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_int _1a4d632da_getRangeExprTokens(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Bool _1a4d64044_checkAssignTokens(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline _1ceb4952a_Log _1a4d65265_makeErr(jule::I64, jule::I64, jule::Ptr<_1ceeedd0d_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1ceee8973_Token>> _1a4d6573d_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token _1a4d659d5_rangeLast(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline __jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log _1a4d65dc0_partsKind(jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log _1a4d662aa_parts(jule::Slice<jule::Ptr<_1ceee8973_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1a4d66552_getCloseKindOfBrace(jule::Str);
inline _1ceb4952a_Log _1a4d6693c_compilerErr(jule::Ptr<_1ceee8973_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1a4d66d6b_pushSuggestion(_1ceb4952a_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1a4d67113_tokstoa(jule::Slice<jule::Ptr<_1ceee8973_Token>>*);
inline jule::Bool _1a4d77178_isPub(jule::Str*);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d77a4c_buildVoidType(void);
inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d77c5b_buildPrimType(jule::Ptr<_1ceee8973_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1b5a4ed0c_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1b5a4ee3e_checkArch(jule::Str);
inline jule::Bool _1b5a50071_isPassFileAnnotation(jule::Str);
inline void _1b5a50e51_setOsVars(jule::Slice<jule::Str>*);
inline void _1b5a511a4_setArchVars(jule::Slice<jule::Str>*);
inline void _1b5a5145c_initVars(jule::Slice<jule::Str>*, _1b5a50b43_CompileInfo*);
inline jule::Slice<jule::U8> _1a4d22981_readBuff(jule::Str);
inline _1ceb4952a_Log _1a4d2bc65_flatCompilerErr(jule::Str);
inline void _1a4d7c920_pushPasses(jule::Ptr<_1a53e574b_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1a4d7ca96_getAllUniquePasses(jule::Ptr<_1a53e574b_Package>*, jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>>);
inline _1b5a50b43_CompileInfo _1a4d7cc94_buildCompileInfo(void);
inline void _1a5d7c644_EliminateDefines(jule::Ptr<_1a4ce7615_IR>*);
inline jule::Ptr<_1a3c1d0ec_Directive> _1a5d7c9c9_findDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Str);
inline jule::Bool _1a5d7cd1a_hasDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Str);
inline void _1a5d81967_eliminateDeadCodeOfScope(jule::Ptr<_1a53c40dc_Scope>);
inline void _1a5d81bed_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a53a44c9_Fn>>*);
inline void _1a5d81e40_eliminateFunctionsScopePackage(jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d821d7_eliminateScopePackage(jule::Ptr<_1a53e574b_Package>*);
inline void _1a5d823e6_EliminateScopes(jule::Ptr<_1a4ce7615_IR>*);
inline jule::Bool _1b55c5982_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1b55d7455_isConstantValidConditionalCase(jule::Ptr<_1a53c44d8_If>*);
inline jule::Bool _1b55dc38e_isUnreachableExpr(jule::Any*);
inline jule::Bool _1b564e896_isConstantValidMatchCase(jule::Ptr<_1a53c8883_Case>*);
inline jule::Bool _1b566ae34_isUnreachableConditionalCase(jule::Ptr<_1a53c44d8_If>*);
inline jule::Bool _1b56b3e16_isUnreachableMatchCase(jule::Ptr<_1a53c8883_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1a3c3d64a_checkForBitShiftOpt(jule::Ptr<_1a5395ce5_OperandExprModel>*, jule::Ptr<_1a5395ce5_OperandExprModel>*);
inline void _1a3c7e515_PushOptLevel(jule::I64);
inline void _1a5d14620_detectEnabled(void);
inline void _1a5da0656_Throw(jule::Str);
inline jule::U64 _1a663577b_unix(void);
inline jule::U64 _1a6635a89_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1a6635e1e_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1a5734e64_isCopyOptimizable(jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a575ba7e_isIterCopyOptimizable(jule::Ptr<_1a5466305_Data>*, jule::Ptr<_1a5418939_Var>*);
inline jule::Str _1a62c6e9a_decomposeCommonEsq(jule::U8);
inline jule::Str _1a62c7286_sbtoa(jule::U8);
inline jule::Str _1a62c752d_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1a62c784c_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1a62c7b5a_ftoa(jule::F64, jule::I64);
inline jule::Str _1a62c7e02_itoa(jule::I64);
inline jule::Str _1a62c8199_utoa(jule::U64);
inline jule::Bool _1a62c8551_isForwarded(jule::Ptr<_1a53c40dc_Scope>*);
inline jule::Bool _1a62c881a_isBuiltinCallHasDebuginf(jule::Ptr<_1a5398127_FnCallExprModel>*);
inline jule::Bool _1a62c8a4b_isExprComesFromBind(jule::Ptr<_1a5466305_Data>*);
inline jule::Bool _1a62c8ce3_isAny(jule::Ptr<_1a5492287_TypeKind>*);
inline void _1a66401c0_iterFiles(jule::Ptr<_1a53e574b_Package>*, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>);
inline jule::Str _1a66404ab_concatAllParts(jule::Slice<jule::Ptr<_1ceee8973_Token>>);
inline jule::Ptr<_1a3c1d0ec_Directive> _1a664d3dc_findDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Str);
inline jule::Bool _1a664d772_hasDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>*, jule::Str);
inline jule::Bool _1a664da19_shouldInitialized(jule::Ptr<_1a5492287_TypeKind>*);
inline void _1ceb2b980_printErrorMessage(jule::Str);
inline void _1ceb20600_help(jule::Slice<jule::Str>*);
inline void _1ceb20732_version(jule::Slice<jule::Str>*);
inline void _1ceb184e9_toolDistos(void);
inline void _1ceb1862b_toolDistarch(void);
inline void _1ceb2d344_tool(jule::Slice<jule::Str>*);
inline void _1ceb2d476_julenv(jule::Slice<jule::Str>*);
inline void _1ceb3933e_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1ceb3c0bc_processCommand(jule::Slice<jule::Str>*);
inline void _1ceb3c1ee_showInfo(void);
void entry_point(void);
inline void _1a666d5c7_init(void);
inline jule::Ptr<_1e85b3ec0_File> _1a6671bb3_openOutput(jule::Str*);
inline void _1a667cd01_clearObjects(void);
inline void _1a666b806_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a668c816_isCppSourceFile(jule::Str);
inline void _1a6691908_pushCompCmdClang(jule::Str*);
inline void _1a6669abd_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1a666ea4b_genCompileCmd(jule::Str, jule::Ptr<_1a4ce7615_IR>*);
inline jule::Str _1a6669150_getCompilePath(void);
inline void _1a6678b21_applyTargetIndependentOptimizations(jule::Ptr<_1a4ce7615_IR>*);
inline void _1a6668a78_checkCompilerFlag(void);
inline void _1a666c85c_checkTargetArch(jule::Str);
inline void _1a666c98e_checkTargetOs(jule::Str);
inline void _1a669d98c_checkTargetFlag(jule::Str*);
inline void _1a669dabe_checkOptFlag(jule::Str*);
inline void _1a669de32_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a669e064_checkFlags(jule::Slice<jule::Str>*);
inline void _1a669e196_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1a4ce7615_IR> _1a669e2c8_buildIr(jule::Slice<jule::Str>*);
inline void _1a669e40a_compileCommand(jule::Slice<jule::Str>*);


struct _1a53deb74_ImporterMptrData {
	void(*_1a53dda85_SetModPath)(jule::Trait<_1a53deb74_Importer>, jule::Str);
	jule::Str(*_1a53ddcd8_GetModPath)(jule::Trait<_1a53deb74_Importer>);
	jule::Str(*_1a53de0e6_ModById)(jule::Trait<_1a53deb74_Importer>, jule::I64);
	jule::Ptr<_1a53e27e2_ImportInfo>(*_1a53de404_GetImport)(jule::Trait<_1a53deb74_Importer>, jule::Str);
	__jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log(*_1a53de7ab_ImportPackage)(jule::Trait<_1a53deb74_Importer>, jule::Str, jule::Bool);
	void(*_1a53dea31_Imported)(jule::Trait<_1a53deb74_Importer>, jule::Ptr<_1a53e27e2_ImportInfo>);
};

struct _1a5491d58_KindMptrData {
	jule::Str(*_1a5491907_Str)(jule::Trait<_1a5491d58_Kind>);
	jule::Bool(*_1a5491c15_Equal)(jule::Trait<_1a5491d58_Kind>, jule::Ptr<_1a5492287_TypeKind>);
};

struct _1a54ad209_LookupMptrData {
	jule::Ptr<_1a53e27e2_ImportInfo>(*_1a54ab3b1_FindPackage)(jule::Trait<_1a54ad209_Lookup>, jule::Str);
	jule::Ptr<_1a53e27e2_ImportInfo>(*_1a54ab6be_SelectPackage)(jule::Trait<_1a54ad209_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>);
	jule::Ptr<_1a5418939_Var>(*_1a54aba76_FindVar)(jule::Trait<_1a54ad209_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a5491594_TypeAlias>(*_1a54abe2d_FindTypeAlias)(jule::Trait<_1a54ad209_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a487d19b_Struct>(*_1a54ac2d5_FindStruct)(jule::Trait<_1a54ad209_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a53a44c9_Fn>(*_1a54ac68c_FindFn)(jule::Trait<_1a54ad209_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1a53b63cb_Trait>(*_1a54ac99a_FindTrait)(jule::Trait<_1a54ad209_Lookup>, jule::Str);
	jule::Ptr<_1a53b8521_Enum>(*_1a54acca8_FindEnum)(jule::Trait<_1a54ad209_Lookup>, jule::Str);
	jule::Ptr<_1a53b9b1b_TypeEnum>(*_1a54ad0b6_FindTypeEnum)(jule::Trait<_1a54ad209_Lookup>, jule::Str);
};

struct _1a6698239_CommonFlagMptrData {
	jule::Str(*_1a666855b_Name)(jule::Trait<_1a6698239_CommonFlag>);
	jule::I32(*_1a666868d_Short)(jule::Trait<_1a6698239_CommonFlag>);
	jule::Str(*_1a66687c0_What)(jule::Trait<_1a6698239_CommonFlag>);
	void(*_1a6668946_Reset)(jule::Trait<_1a6698239_CommonFlag>);
};



inline void _1a53dda85_SetModPath_0(jule::Trait<_1a53deb74_Importer> _self_, jule::Str _1729_path) {
	_1a4d2de76_SetModPath(_self_.safe_ptr<_1a4d35e6c_JuleImporter>(), _1729_path);
}
inline jule::Str _1a53ddcd8_GetModPath_0(jule::Trait<_1a53deb74_Importer> _self_) {
	return _1a4d3131e_GetModPath(_self_.safe_ptr<_1a4d35e6c_JuleImporter>());
}
inline jule::Str _1a53de0e6_ModById_0(jule::Trait<_1a53deb74_Importer> _self_, jule::I64 _2522_id) {
	return _1a4d0d582_ModById(_self_.safe_ptr<_1a4d35e6c_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53de404_GetImport_0(jule::Trait<_1a53deb74_Importer> _self_, jule::Str _3128_path) {
	return _1a4d7b820_GetImport(_self_.safe_ptr<_1a4d35e6c_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log _1a53de7ab_ImportPackage_0(jule::Trait<_1a53deb74_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1a4d7bbc7_ImportPackage(_self_.safe_ptr<_1a4d35e6c_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1a53dea31_Imported_0(jule::Trait<_1a53deb74_Importer> _self_, jule::Ptr<_1a53e27e2_ImportInfo> _4131__0) {
	_1a4d7be4c_Imported(_self_.safe_ptr<_1a4d35e6c_JuleImporter>(), _4131__0);
}
inline jule::Str _1a5491907_Str_0(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a484cd5d_Str(_self_.safe_ptr<_1a487d575_StructIns>());
}
inline jule::Bool _1a5491c15_Equal_0(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a4853dca_Equal(_self_.data.as<_1a487d575_StructIns>(), _5621_other);
}
inline jule::Str _1a5491907_Str_1(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a53a74aa_Str(_self_.safe_ptr<_1a53a717a_FnIns>());
}
inline jule::Bool _1a5491c15_Equal_1(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a53a77b8_Equal(_self_.data.as<_1a53a717a_FnIns>(), _5621_other);
}
inline jule::Str _1a5491907_Str_2(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a53b67c7_Str(_self_.safe_ptr<_1a53b63cb_Trait>());
}
inline jule::Bool _1a5491c15_Equal_2(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a53b6ad5_Equal(_self_.data.as<_1a53b63cb_Trait>(), _5621_other);
}
inline jule::Str _1a5491907_Str_3(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a53b8884_Str(_self_.safe_ptr<_1a53b8521_Enum>());
}
inline jule::Bool _1a5491c15_Equal_3(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a53b8b92_Equal(_self_.data.as<_1a53b8521_Enum>(), _5621_other);
}
inline jule::Str _1a5491907_Str_4(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a53b9e4b_Str(_self_.safe_ptr<_1a53b9b1b_TypeEnum>());
}
inline jule::Bool _1a5491c15_Equal_4(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a53ba259_Equal(_self_.data.as<_1a53b9b1b_TypeEnum>(), _5621_other);
}
inline jule::Str _1a5491907_Str_5(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a5492683_Str(_self_.safe_ptr<_1a5492287_TypeKind>());
}
inline jule::Bool _1a5491c15_Equal_5(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a5492991_Equal(_self_.data.as<_1a5492287_TypeKind>(), _5621_other);
}
inline jule::Str _1a5491907_Str_6(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a5497347_Str(_self_.safe_ptr<_1a5496ed4_Prim>());
}
inline jule::Bool _1a5491c15_Equal_6(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a5497655_Equal(_self_.data.as<_1a5496ed4_Prim>(), _5621_other);
}
inline jule::Str _1a5491907_Str_7(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a549aacb_Str(_self_.safe_ptr<_1a549a768_Sptr>());
}
inline jule::Bool _1a5491c15_Equal_7(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a549add9_Equal(_self_.data.as<_1a549a768_Sptr>(), _5621_other);
}
inline jule::Str _1a5491907_Str_8(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a549b6d1_Str(_self_.safe_ptr<_1a549b1c5_Slc>());
}
inline jule::Bool _1a5491c15_Equal_8(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a549b9de_Equal(_self_.data.as<_1a549b1c5_Slc>(), _5621_other);
}
inline jule::Str _1a5491907_Str_9(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a549c0b6_Str(_self_.safe_ptr<_1a549bc53_Tuple>());
}
inline jule::Bool _1a5491c15_Equal_9(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a549c3c4_Equal(_self_.data.as<_1a549bc53_Tuple>(), _5621_other);
}
inline jule::Str _1a5491907_Str_10(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a549cade_Str(_self_.safe_ptr<_1a549c77b_Map>());
}
inline jule::Bool _1a5491c15_Equal_10(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a549cdec_Equal(_self_.data.as<_1a549c77b_Map>(), _5621_other);
}
inline jule::Str _1a5491907_Str_11(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a549d6d3_Str(_self_.safe_ptr<_1a549d370_Arr>());
}
inline jule::Bool _1a5491c15_Equal_11(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a549d9e1_Equal(_self_.data.as<_1a549d370_Arr>(), _5621_other);
}
inline jule::Str _1a5491907_Str_12(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a549e140_Str(_self_.safe_ptr<_1a549dccc_Ptr>());
}
inline jule::Bool _1a5491c15_Equal_12(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a549e44d_Equal(_self_.data.as<_1a549dccc_Ptr>(), _5621_other);
}
inline jule::Str _1a5491907_Str_13(jule::Trait<_1a5491d58_Kind> _self_) {
	return _1a6641446_Str(_self_.safe_ptr<_1a664115a_customType>());
}
inline jule::Bool _1a5491c15_Equal_13(jule::Trait<_1a5491d58_Kind> _self_, jule::Ptr<_1a5492287_TypeKind> _5621_other) {
	return _1a6641754_Equal(_self_.data.as<_1a664115a_customType>(), _5621_other);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab3b1_FindPackage_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _930_ident) {
	return _1a53cb0d3_FindPackage(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _930_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab6be_SelectPackage_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _1332_selector) {
	return _1a53cb3e1_SelectPackage(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _1332_selector);
}
inline jule::Ptr<_1a5418939_Var> _1a54aba76_FindVar_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a53cb798_FindVar(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a5491594_TypeAlias> _1a54abe2d_FindTypeAlias_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a53cbb50_FindTypeAlias(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a487d19b_Struct> _1a54ac2d5_FindStruct_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a53cc007_FindStruct(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a53a44c9_Fn> _1a54ac68c_FindFn_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a53cc3ae_FindFn(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a53b63cb_Trait> _1a54ac99a_FindTrait_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3328_ident) {
	return _1a53cc6bc_FindTrait(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _3328_ident);
}
inline jule::Ptr<_1a53b8521_Enum> _1a54acca8_FindEnum_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3727_ident) {
	return _1a53cc9ca_FindEnum(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _3727_ident);
}
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54ad0b6_FindTypeEnum_0(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _4131_ident) {
	return _1a53cccd8_FindTypeEnum(_self_.safe_ptr<_1a53cab4e_scopeChecker>(), _4131_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab3b1_FindPackage_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _930_ident) {
	return _1a53e2d0e_FindPackage(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _930_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab6be_SelectPackage_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _1332_selector) {
	return _1a53e311c_SelectPackage(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _1332_selector);
}
inline jule::Ptr<_1a5418939_Var> _1a54aba76_FindVar_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a53e34c4_FindVar(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a5491594_TypeAlias> _1a54abe2d_FindTypeAlias_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a53e387b_FindTypeAlias(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a487d19b_Struct> _1a54ac2d5_FindStruct_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a53e3c33_FindStruct(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a53a44c9_Fn> _1a54ac68c_FindFn_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a53e40da_FindFn(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a53b63cb_Trait> _1a54ac99a_FindTrait_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3328_ident) {
	return _1a53e43e8_FindTrait(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _3328_ident);
}
inline jule::Ptr<_1a53b8521_Enum> _1a54acca8_FindEnum_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3727_ident) {
	return _1a53e4706_FindEnum(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _3727_ident);
}
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54ad0b6_FindTypeEnum_1(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _4131_ident) {
	return _1a53e4a14_FindTypeEnum(_self_.safe_ptr<_1a53e27e2_ImportInfo>(), _4131_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab3b1_FindPackage_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _930_ident) {
	return _1a53e5c24_FindPackage(_self_.safe_ptr<_1a53e574b_Package>(), _930_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab6be_SelectPackage_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _1332_selector) {
	return _1a53e6032_SelectPackage(_self_.safe_ptr<_1a53e574b_Package>(), _1332_selector);
}
inline jule::Ptr<_1a5418939_Var> _1a54aba76_FindVar_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a53e63d9_FindVar(_self_.safe_ptr<_1a53e574b_Package>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a5491594_TypeAlias> _1a54abe2d_FindTypeAlias_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a53e6791_FindTypeAlias(_self_.safe_ptr<_1a53e574b_Package>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a487d19b_Struct> _1a54ac2d5_FindStruct_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a53e6b48_FindStruct(_self_.safe_ptr<_1a53e574b_Package>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a53a44c9_Fn> _1a54ac68c_FindFn_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a53e7000_FindFn(_self_.safe_ptr<_1a53e574b_Package>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a53b63cb_Trait> _1a54ac99a_FindTrait_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3328_ident) {
	return _1a53e730d_FindTrait(_self_.safe_ptr<_1a53e574b_Package>(), _3328_ident);
}
inline jule::Ptr<_1a53b8521_Enum> _1a54acca8_FindEnum_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3727_ident) {
	return _1a53e761b_FindEnum(_self_.safe_ptr<_1a53e574b_Package>(), _3727_ident);
}
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54ad0b6_FindTypeEnum_2(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _4131_ident) {
	return _1a53e7929_FindTypeEnum(_self_.safe_ptr<_1a53e574b_Package>(), _4131_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab3b1_FindPackage_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _930_ident) {
	return _1a53eae5a_FindPackage(_self_.safe_ptr<_1a53ea93d_Sema>(), _930_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab6be_SelectPackage_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _1332_selector) {
	return _1a53eb268_SelectPackage(_self_.safe_ptr<_1a53ea93d_Sema>(), _1332_selector);
}
inline jule::Ptr<_1a5418939_Var> _1a54aba76_FindVar_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a53eb620_FindVar(_self_.safe_ptr<_1a53ea93d_Sema>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a5491594_TypeAlias> _1a54abe2d_FindTypeAlias_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a53eb9c7_FindTypeAlias(_self_.safe_ptr<_1a53ea93d_Sema>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a487d19b_Struct> _1a54ac2d5_FindStruct_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a53ebd7e_FindStruct(_self_.safe_ptr<_1a53ea93d_Sema>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a53a44c9_Fn> _1a54ac68c_FindFn_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a53ec236_FindFn(_self_.safe_ptr<_1a53ea93d_Sema>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a53b63cb_Trait> _1a54ac99a_FindTrait_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3328_ident) {
	return _1a53ec544_FindTrait(_self_.safe_ptr<_1a53ea93d_Sema>(), _3328_ident);
}
inline jule::Ptr<_1a53b8521_Enum> _1a54acca8_FindEnum_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3727_ident) {
	return _1a53ec852_FindEnum(_self_.safe_ptr<_1a53ea93d_Sema>(), _3727_ident);
}
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54ad0b6_FindTypeEnum_3(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _4131_ident) {
	return _1a53ecb60_FindTypeEnum(_self_.safe_ptr<_1a53ea93d_Sema>(), _4131_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab3b1_FindPackage_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _930_ident) {
	return _1a54619e8_FindPackage(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _930_ident);
}
inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54ab6be_SelectPackage_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _1332_selector) {
	return _1a5461d06_SelectPackage(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _1332_selector);
}
inline jule::Ptr<_1a5418939_Var> _1a54aba76_FindVar_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _1726_ident, jule::Bool _1738_cpp_linked) {
	return _1a54621ad_FindVar(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _1726_ident, _1738_cpp_linked);
}
inline jule::Ptr<_1a5491594_TypeAlias> _1a54abe2d_FindTypeAlias_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2132_ident, jule::Bool _2144_cpp_linked) {
	return _1a5462565_FindTypeAlias(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _2132_ident, _2144_cpp_linked);
}
inline jule::Ptr<_1a487d19b_Struct> _1a54ac2d5_FindStruct_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2529_ident, jule::Bool _2541_cpp_linked) {
	return _1a546291c_FindStruct(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _2529_ident, _2541_cpp_linked);
}
inline jule::Ptr<_1a53a44c9_Fn> _1a54ac68c_FindFn_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _2925_ident, jule::Bool _2937_cpp_linked) {
	return _1a5462cc4_FindFn(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _2925_ident, _2937_cpp_linked);
}
inline jule::Ptr<_1a53b63cb_Trait> _1a54ac99a_FindTrait_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3328_ident) {
	return _1a54630d2_FindTrait(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _3328_ident);
}
inline jule::Ptr<_1a53b8521_Enum> _1a54acca8_FindEnum_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _3727_ident) {
	return _1a54633e0_FindEnum(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _3727_ident);
}
inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54ad0b6_FindTypeEnum_4(jule::Trait<_1a54ad209_Lookup> _self_, jule::Str _4131_ident) {
	return _1a54636ed_FindTypeEnum(_self_.safe_ptr<_1a54614cb_SymbolTable>(), _4131_ident);
}
inline jule::Str _1a666855b_Name_0(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9111672_Name(_self_.safe_ptr<_1a9111298_Flag>());
}
inline jule::I32 _1a666868d_Short_0(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9111a29_Short(_self_.safe_ptr<_1a9111298_Flag>());
}
inline jule::Str _1a66687c0_What_0(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a91117a4_What(_self_.safe_ptr<_1a9111298_Flag>());
}
inline void _1a6668946_Reset_0(jule::Trait<_1a6698239_CommonFlag> _self_) {
	_1a91118d6_Reset(_self_.safe_ptr<_1a9111298_Flag>());
}
inline jule::Str _1a666855b_Name_1(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9114a82_Name(_self_.safe_ptr<_1a9114ee4_Flag>());
}
inline jule::I32 _1a666868d_Short_1(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9115544_Short(_self_.safe_ptr<_1a9114ee4_Flag>());
}
inline jule::Str _1a66687c0_What_1(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a91152d0_What(_self_.safe_ptr<_1a9114ee4_Flag>());
}
inline void _1a6668946_Reset_1(jule::Trait<_1a6698239_CommonFlag> _self_) {
	_1a9115412_Reset(_self_.safe_ptr<_1a9114ee4_Flag>());
}
inline jule::Str _1a666855b_Name_2(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9118349_Name(_self_.safe_ptr<_1a91187ab_Flag>());
}
inline jule::I32 _1a666868d_Short_2(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9118d0b_Short(_self_.safe_ptr<_1a91187ab_Flag>());
}
inline jule::Str _1a66687c0_What_2(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9118a97_What(_self_.safe_ptr<_1a91187ab_Flag>());
}
inline void _1a6668946_Reset_2(jule::Trait<_1a6698239_CommonFlag> _self_) {
	_1a9118bc9_Reset(_self_.safe_ptr<_1a91187ab_Flag>());
}
inline jule::Str _1a666855b_Name_3(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a911bb55_Name(_self_.safe_ptr<_1a911c0b7_Flag>());
}
inline jule::I32 _1a666868d_Short_3(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a911c617_Short(_self_.safe_ptr<_1a911c0b7_Flag>());
}
inline jule::Str _1a66687c0_What_3(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a911c3a3_What(_self_.safe_ptr<_1a911c0b7_Flag>());
}
inline void _1a6668946_Reset_3(jule::Trait<_1a6698239_CommonFlag> _self_) {
	_1a911c4d5_Reset(_self_.safe_ptr<_1a911c0b7_Flag>());
}
inline jule::Str _1a666855b_Name_4(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a912041c_Name(_self_.safe_ptr<_1a912087e_Flag>());
}
inline jule::I32 _1a666868d_Short_4(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9120dce_Short(_self_.safe_ptr<_1a912087e_Flag>());
}
inline jule::Str _1a66687c0_What_4(jule::Trait<_1a6698239_CommonFlag> _self_) {
	return _1a9120b6a_What(_self_.safe_ptr<_1a912087e_Flag>());
}
inline void _1a6668946_Reset_4(jule::Trait<_1a6698239_CommonFlag> _self_) {
	_1a9120c9c_Reset(_self_.safe_ptr<_1a912087e_Flag>());
}


static _1a53deb74_ImporterMptrData _1a53deb74_Importer_mptr_data[] = {
	{
		._1a53dda85_SetModPath=_1a53dda85_SetModPath_0,
		._1a53ddcd8_GetModPath=_1a53ddcd8_GetModPath_0,
		._1a53de0e6_ModById=_1a53de0e6_ModById_0,
		._1a53de404_GetImport=_1a53de404_GetImport_0,
		._1a53de7ab_ImportPackage=_1a53de7ab_ImportPackage_0,
		._1a53dea31_Imported=_1a53dea31_Imported_0,
	},
};
static _1a5491d58_KindMptrData _1a5491d58_Kind_mptr_data[] = {
	{
		._1a5491907_Str=_1a5491907_Str_0,
		._1a5491c15_Equal=_1a5491c15_Equal_0,
	},
	{
		._1a5491907_Str=_1a5491907_Str_1,
		._1a5491c15_Equal=_1a5491c15_Equal_1,
	},
	{
		._1a5491907_Str=_1a5491907_Str_2,
		._1a5491c15_Equal=_1a5491c15_Equal_2,
	},
	{
		._1a5491907_Str=_1a5491907_Str_3,
		._1a5491c15_Equal=_1a5491c15_Equal_3,
	},
	{
		._1a5491907_Str=_1a5491907_Str_4,
		._1a5491c15_Equal=_1a5491c15_Equal_4,
	},
	{
		._1a5491907_Str=_1a5491907_Str_5,
		._1a5491c15_Equal=_1a5491c15_Equal_5,
	},
	{
		._1a5491907_Str=_1a5491907_Str_6,
		._1a5491c15_Equal=_1a5491c15_Equal_6,
	},
	{
		._1a5491907_Str=_1a5491907_Str_7,
		._1a5491c15_Equal=_1a5491c15_Equal_7,
	},
	{
		._1a5491907_Str=_1a5491907_Str_8,
		._1a5491c15_Equal=_1a5491c15_Equal_8,
	},
	{
		._1a5491907_Str=_1a5491907_Str_9,
		._1a5491c15_Equal=_1a5491c15_Equal_9,
	},
	{
		._1a5491907_Str=_1a5491907_Str_10,
		._1a5491c15_Equal=_1a5491c15_Equal_10,
	},
	{
		._1a5491907_Str=_1a5491907_Str_11,
		._1a5491c15_Equal=_1a5491c15_Equal_11,
	},
	{
		._1a5491907_Str=_1a5491907_Str_12,
		._1a5491c15_Equal=_1a5491c15_Equal_12,
	},
	{
		._1a5491907_Str=_1a5491907_Str_13,
		._1a5491c15_Equal=_1a5491c15_Equal_13,
	},
};
static _1a54ad209_LookupMptrData _1a54ad209_Lookup_mptr_data[] = {
	{
		._1a54ab3b1_FindPackage=_1a54ab3b1_FindPackage_0,
		._1a54ab6be_SelectPackage=_1a54ab6be_SelectPackage_0,
		._1a54aba76_FindVar=_1a54aba76_FindVar_0,
		._1a54abe2d_FindTypeAlias=_1a54abe2d_FindTypeAlias_0,
		._1a54ac2d5_FindStruct=_1a54ac2d5_FindStruct_0,
		._1a54ac68c_FindFn=_1a54ac68c_FindFn_0,
		._1a54ac99a_FindTrait=_1a54ac99a_FindTrait_0,
		._1a54acca8_FindEnum=_1a54acca8_FindEnum_0,
		._1a54ad0b6_FindTypeEnum=_1a54ad0b6_FindTypeEnum_0,
	},
	{
		._1a54ab3b1_FindPackage=_1a54ab3b1_FindPackage_1,
		._1a54ab6be_SelectPackage=_1a54ab6be_SelectPackage_1,
		._1a54aba76_FindVar=_1a54aba76_FindVar_1,
		._1a54abe2d_FindTypeAlias=_1a54abe2d_FindTypeAlias_1,
		._1a54ac2d5_FindStruct=_1a54ac2d5_FindStruct_1,
		._1a54ac68c_FindFn=_1a54ac68c_FindFn_1,
		._1a54ac99a_FindTrait=_1a54ac99a_FindTrait_1,
		._1a54acca8_FindEnum=_1a54acca8_FindEnum_1,
		._1a54ad0b6_FindTypeEnum=_1a54ad0b6_FindTypeEnum_1,
	},
	{
		._1a54ab3b1_FindPackage=_1a54ab3b1_FindPackage_2,
		._1a54ab6be_SelectPackage=_1a54ab6be_SelectPackage_2,
		._1a54aba76_FindVar=_1a54aba76_FindVar_2,
		._1a54abe2d_FindTypeAlias=_1a54abe2d_FindTypeAlias_2,
		._1a54ac2d5_FindStruct=_1a54ac2d5_FindStruct_2,
		._1a54ac68c_FindFn=_1a54ac68c_FindFn_2,
		._1a54ac99a_FindTrait=_1a54ac99a_FindTrait_2,
		._1a54acca8_FindEnum=_1a54acca8_FindEnum_2,
		._1a54ad0b6_FindTypeEnum=_1a54ad0b6_FindTypeEnum_2,
	},
	{
		._1a54ab3b1_FindPackage=_1a54ab3b1_FindPackage_3,
		._1a54ab6be_SelectPackage=_1a54ab6be_SelectPackage_3,
		._1a54aba76_FindVar=_1a54aba76_FindVar_3,
		._1a54abe2d_FindTypeAlias=_1a54abe2d_FindTypeAlias_3,
		._1a54ac2d5_FindStruct=_1a54ac2d5_FindStruct_3,
		._1a54ac68c_FindFn=_1a54ac68c_FindFn_3,
		._1a54ac99a_FindTrait=_1a54ac99a_FindTrait_3,
		._1a54acca8_FindEnum=_1a54acca8_FindEnum_3,
		._1a54ad0b6_FindTypeEnum=_1a54ad0b6_FindTypeEnum_3,
	},
	{
		._1a54ab3b1_FindPackage=_1a54ab3b1_FindPackage_4,
		._1a54ab6be_SelectPackage=_1a54ab6be_SelectPackage_4,
		._1a54aba76_FindVar=_1a54aba76_FindVar_4,
		._1a54abe2d_FindTypeAlias=_1a54abe2d_FindTypeAlias_4,
		._1a54ac2d5_FindStruct=_1a54ac2d5_FindStruct_4,
		._1a54ac68c_FindFn=_1a54ac68c_FindFn_4,
		._1a54ac99a_FindTrait=_1a54ac99a_FindTrait_4,
		._1a54acca8_FindEnum=_1a54acca8_FindEnum_4,
		._1a54ad0b6_FindTypeEnum=_1a54ad0b6_FindTypeEnum_4,
	},
};
static _1a6698239_CommonFlagMptrData _1a6698239_CommonFlag_mptr_data[] = {
	{
		._1a666855b_Name=_1a666855b_Name_0,
		._1a666868d_Short=_1a666868d_Short_0,
		._1a66687c0_What=_1a66687c0_What_0,
		._1a6668946_Reset=_1a6668946_Reset_0,
	},
	{
		._1a666855b_Name=_1a666855b_Name_1,
		._1a666868d_Short=_1a666868d_Short_1,
		._1a66687c0_What=_1a66687c0_What_1,
		._1a6668946_Reset=_1a6668946_Reset_1,
	},
	{
		._1a666855b_Name=_1a666855b_Name_2,
		._1a666868d_Short=_1a666868d_Short_2,
		._1a66687c0_What=_1a66687c0_What_2,
		._1a6668946_Reset=_1a6668946_Reset_2,
	},
	{
		._1a666855b_Name=_1a666855b_Name_3,
		._1a666868d_Short=_1a666868d_Short_3,
		._1a66687c0_What=_1a66687c0_What_3,
		._1a6668946_Reset=_1a6668946_Reset_3,
	},
	{
		._1a666855b_Name=_1a666855b_Name_4,
		._1a666868d_Short=_1a666868d_Short_4,
		._1a66687c0_What=_1a66687c0_What_4,
		._1a6668946_Reset=_1a6668946_Reset_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I32*>(alloc) == *static_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U64*>(alloc) == *static_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Bool*>(alloc) == *static_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F64*>(alloc) == *static_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a717a_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1a53a717a_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5418939_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1a5418939_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487d575_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1a487d575_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53b63cb_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1a53b63cb_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487c8d7_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1a487c8d7_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4877c78_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1a4877c78_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487bbc2_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1a487bbc2_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4873438_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1a4873438_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487c2cc_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1a487c2cc_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4874417_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1a4874417_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487a110_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1a487a110_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487b221_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1a487b221_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4862070_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1a4862070_IdentTypeDecl> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c682b_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1a53c682b_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c40dc_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1a53c40dc_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a0591_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5466305_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1a5466305_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a163b_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1a53a163b_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539e051_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1a539e051_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539c934_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1a539c934_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539c22a_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1a539c22a_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539c615_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539d209_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1a539d209_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539d6b0_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a01a6_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1a53a01a6_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539ed43_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a1927_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1a53a1927_FreeExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5398127_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1a5398127_FnCallExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c4b48_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1a53c4b48_Conditional> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c4e34_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1a53c4e34_InfIter> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4875704_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1a4875704_WhileKind> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c53a7_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1a53c53a7_WhileIter> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4876095_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1a4876095_RangeKind> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c5c8c_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1a53c5c8c_RangeIter> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c6188_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1a53c6188_ContSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c6b17_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1a53c6b17_GotoSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c6ebe_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1a53c6ebe_Postfix> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c7442_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1a53c7442_Assign> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5398952_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1a5398952_IndexingExprModel> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c77e9_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1a53c77e9_MultiAssign> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5389ec6_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1a5389ec6_Const> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c7d38_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1a53c7d38_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c8e38_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1a53c8e38_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c6540_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1a53c6540_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53c92ac_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1a53c92ac_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4871942_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1a4871942_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4865eca_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1a4865eca_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48775a2_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1a48775a2_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4874e2e_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1a4874e2e_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4876804_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1a4876804_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486e159_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1a486e159_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486e511_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1a486e511_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4870446_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1a4870446_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48788c2_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1a48788c2_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486e7ec_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1a486e7ec_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487644c_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1a487644c_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48747be_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1a48747be_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486686b_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1a486686b_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a44c9_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1a53a44c9_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a487d19b_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1a487d19b_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5491594_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1a5491594_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53b8521_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1a53b8521_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53b9b1b_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1a53b9b1b_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539a1b2_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1a539a1b2_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539a998_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1a539a998_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539b4e3_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1a539b4e3_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539ba54_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1a539ba54_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5396664_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1a5396664_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type75_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type75_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=__jule_any_type75_eq, .to_str=__jule_any_type75_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type75 && __jule_any_type75_eq(any.data.alloc, (void*)&other); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4863eb7_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1a4863eb7_ArrTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486325d_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1a486325d_SlcTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4863835_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1a4863835_PtrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4862d62_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1a4862d62_SptrTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4864715_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1a4864715_MapTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4863549_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1a4863549_TupleTypeDecl> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486874c_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1a486874c_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53984ce_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1a53984ce_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486a93b_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1a486a93b_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486bdd2_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1a486bdd2_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4867b8b_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1a4867b8b_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4866b57_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1a4866b57_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539bd51_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1a539bd51_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a0e65_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1a53a0e65_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5492287_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1a5492287_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539b207_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1a539b207_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486942e_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1a486942e_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48626be_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1a48626be_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4868395_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1a4868395_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48619a9_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1a48619a9_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4868eab_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1a4868eab_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4862a76_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1a4862a76_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5399b73_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1a5399b73_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type99_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type99_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=__jule_any_type99_eq, .to_str=__jule_any_type99_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type99 && __jule_any_type99_eq(any.data.alloc, (void*)&other); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5397775_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1a5397775_CastingExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486c5b9_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1a486c5b9_SliceExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5396e17_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1a5396e17_StructLitExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539ad3e_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1a539ad3e_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5399634_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1a5399634_MapExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5398d09_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1a5398d09_AnonFnExprModel> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48662b6_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1a48662b6_RangeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486700e_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1a486700e_LitExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4867718_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1a4867718_UnsafeExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486ce38_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1a486ce38_IndexingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486d543_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1a486d543_SlicingExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4868b04_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1a4868b04_CastExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486b189_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1a486b189_StructLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a4869eac_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1a4869eac_FnCallExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a486b60c_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1a486b60c_BraceLit> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a48698a2_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1a48698a2_BinopExpr> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type116_eq(void *alloc, void *other) noexcept { return *static_cast<jule::Str*>(alloc) == *static_cast<jule::Str*>(other); }
jule::Str __jule_any_type116_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=__jule_any_type116_eq, .to_str=__jule_any_type116_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type116 && __jule_any_type116_eq(any.data.alloc, (void*)&other); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53962ac_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1a53962ac_BinopExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a5397225_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1a5397225_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539cd1e_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539db66_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1a539db66_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539e370_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1a539e370_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a539e68e_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1a539e68e_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a088d_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1a53a088d_SizeofExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a0b79_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1a53a0b79_AlignofExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a53a1273_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1a53a1273_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b56cd727_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1b56cd727_MutSlicingExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b56cd914_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1b56cd914_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1a3c3d914_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1a3c3d914_PushToSliceExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b5667150_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1b5667150_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b567d5a6_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1b567d5a6_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U8*>(alloc) == *static_cast<jule::U8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I64*>(alloc) == *static_cast<jule::I64*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *static_cast<jule::F32*>(alloc) == *static_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I8*>(alloc) == *static_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *static_cast<jule::I16*>(alloc) == *static_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
void __jule_any_type138_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U16*>(alloc) == *static_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_any_type138_dealloc, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
void __jule_any_type139_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *static_cast<jule::U32*>(alloc) == *static_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_any_type139_dealloc, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
jule::Str _1a6669392_OutDir = jule::Str("dist", 4);
jule::Str _1a66696a0_OutName = jule::Str("ir.cpp", 6);
jule::Str _1a6669804_Out = jule::Str();
jule::Str _1e770e979_Compiler = jule::Str();
jule::Str _1e7710caa_CompilerPath = jule::Str();
jule::Str _1e7710eca_CppStd = jule::Str("cpp17", 5);
jule::Bool _1e77111ea_Shadowing = false;
jule::Bool _1e771144d_Transpilation = false;
jule::Bool _1e7711717_Test = false;
jule::Bool _1e77119d1_RC = true;
jule::Bool _1e7711daa_Safety = true;
jule::Bool _1e7712174_Production = false;
jule::Ptr<_1ce9d4a25_RangeTable> _1ce970263__L = jule::new_ptr<_1ce9d4a25_RangeTable>(_1ce9d4a25_RangeTable{._field_R16=jule::Slice<_1ce9d412e_Range16>::make({_1ce9d412e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1ce9d412e_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1ce9d412e_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1ce9d412e_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1ce9d412e_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1ce9d412e_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1ce9d412e_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1ce9d412e_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1ce9d412e_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1ce9d412e_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1ce9d412e_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1ce9d412e_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1ce9d412e_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1ce9d412e_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1ce9d412e_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1ce9d412e_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1ce9d412e_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1ce9d412e_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1ce9d412e_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1ce9d412e_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1ce9d412e_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1ce9d412e_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1ce9d412e_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1ce9d412e_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1ce9d412e_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1ce9d412e_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1ce9d412e_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1ce9d412e_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1ce9d412e_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1ce9d412e_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1ce9d412e_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1ce9d412e_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1ce9d412e_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1ce9d412e_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1ce9d412e_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1ce9d412e_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1ce9d412e_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1ce9d412e_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1ce9d412e_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1ce9d412e_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1ce9d412e_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1ce9d412e_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1ce9d45a2_Range32>::make({_1ce9d45a2_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1ce9d45a2_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1ce9d45a2_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1ce9d45a2_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1ce9d45a2_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1ce9d45a2_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1ce9d45a2_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1ce9d45a2_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1ce9d45a2_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1ce9d45a2_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1ce9d45a2_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1ce9d45a2_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1ce9d45a2_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1ce9d45a2_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1ce9d45a2_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1ce9d45a2_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1ce9d45a2_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1ce9d45a2_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1ce9d45a2_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1ce9d45a2_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1ce9d45a2_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1ce9d45a2_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1ce9d45a2_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1ce9d45a2_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1ce9d4a25_RangeTable> _1ce971253__LU = jule::new_ptr<_1ce9d4a25_RangeTable>(_1ce9d4a25_RangeTable{._field_R16=jule::Slice<_1ce9d412e_Range16>::make({_1ce9d412e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1ce9d412e_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1ce9d412e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1ce9d412e_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1ce9d412e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1ce9d412e_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1ce9d412e_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1ce9d412e_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1ce9d412e_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1ce9d412e_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1ce9d412e_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1ce9d412e_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1ce9d45a2_Range32>::make({_1ce9d45a2_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1ce9d45a2_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1ce9d45a2_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1ce9d45a2_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1ce9d45a2_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1ce9d45a2_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::Str,4> _1e772b7dc_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1ceb3a708_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1ceb3c353_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1ceb54898_PathStdlib = jule::Str();
jule::Str _1cebaec22_PathExec = jule::Str();
jule::Str _1cebb085a_PathWd = jule::Str();
jule::Str _1cebb0d11_PathApi = jule::Str();
jule::Array<jule::I32,5> _1cee47e11_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _1cee48131_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _1cee48384_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _1ceee2e78_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _1ceee3275_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_1d0000d65_kindPair,47> _1d0001294_keywords = jule::Array<_1d0000d65_kindPair,47>({_1d0000d65_kindPair{._field_kind=jule::Str("i8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("i16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("i32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("i64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("u8", 2), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("u16", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("u32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("u64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("f32", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("f64", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("uint", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("int", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("uintptr", 7), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("bool", 4), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("str", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("any", 3), ._field_id=static_cast<jule::U64>(1LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(6LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(6LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(9LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(4LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(10LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(12LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(13LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(14LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(15LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(16LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(17LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(19LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(21LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(23LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(24LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(25LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(26LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(27LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(28LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(29LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(31LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(32LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(33LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(35LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(37LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(39LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(40LLU)}});
jule::Array<_1d0000d65_kindPair,39> _1d00015d5_basicOps = jule::Array<_1d0000d65_kindPair,39>({_1d0000d65_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(11LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(20LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(7LLU)},_1d0000d65_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(38LLU)}});
jule::Array<jule::U8,32> _1a533ee7b__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1a5340542__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1a5034d6e_floatInfo _1a48102c6_f32info = _1a5034d6e_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1a5034d6e_floatInfo _1a4810738_f64info = _1a5034d6e_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1a5036ed6_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1a50e347c_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1a537bbcc_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1a537bdec_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1a537d22d_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1a537e8a0_leftCheat> _1a537ebad_leftCheats = jule::Slice<_1a537e8a0_leftCheat>::make({_1a537e8a0_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1a537e8a0_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1a537e8a0_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1a537e8a0_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1a537e8a0_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1a537e8a0_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1a537e8a0_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1a537e8a0_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1a537e8a0_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1a537e8a0_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1a537e8a0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1a537e8a0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1a537e8a0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1a537e8a0_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1a537e8a0_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1a537e8a0_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1a537e8a0_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1a537e8a0_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1a537e8a0_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1a537e8a0_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1a537e8a0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1a537e8a0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1a537e8a0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1a537e8a0_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1a537e8a0_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1a537e8a0_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1a537e8a0_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1a537e8a0_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1a537e8a0_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1a537e8a0_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1a537e8a0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1a537e8a0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1a537e8a0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1a537e8a0_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1a537e8a0_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1a537e8a0_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1a537e8a0_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1a537e8a0_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1a537e8a0_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1a537e8a0_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1a537e8a0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1a537e8a0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1a537e8a0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1a537e8a0_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1a537e8a0_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1a537e8a0_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1a537e8a0_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1a537e8a0_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1a537e8a0_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1a537e8a0_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1a537e8a0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1a537e8a0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1a537e8a0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1a537e8a0_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1a537e8a0_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1a537e8a0_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1a537e8a0_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1a537e8a0_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1a537e8a0_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1a537e8a0_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1a537e8a0_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1a4791c19_BitSize = 0LL;
jule::Str _1a4709dd5_SysInt = jule::Str();
jule::Str _1a4799eca_SysUint = jule::Str();
jule::Slice<jule::Str> _1a53bb887_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Bool _1ce297a47_Copy = false;
jule::Bool _1ce59423e_Deadcode = false;
jule::Bool _1ce602005_Append = false;
jule::Bool _1b567b9e4_Math = false;
jule::Bool _1b567bb59_Access = false;
jule::Bool _1b56a492e_Inline = false;
jule::Bool _1a3c3edee_Ptr = false;
jule::Bool _1a3c40064_Cond = false;
jule::Bool _1a5c86251_exprEnabled = false;
jule::Bool _1a5c86dbc_scopeEnabled = false;
jule::Array<jule::U64,12> _1a66326ce_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ced532e4_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1ce9d4a25_RangeTable> _1ce97d958_Upper = _1ce971253__LU;
jule::Array<jule::U8,256> _1ce9cd48b__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1cea9cb43_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_1cea9d1c6_acceptRange,16> _1cea9d4d4_acceptRanges = jule::Array<_1cea9d1c6_acceptRange,16>({_1cea9d1c6_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1cea9d1c6_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1cea9d1c6_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1cea9d1c6_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1cea9d1c6_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Array<jule::Str,2>,5> _1ceb2b210_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1cebd4593_Os = jule::Str("darwin", 6);
jule::Str _1ceb55e82_Arch = jule::Str("arm64", 5);
jule::Ptr<_1ce9d4a25_RangeTable> _1ce977402_Letter = _1ce970263__L;





std::ostream &operator<<(std::ostream &_Stream, _1ce9d412e_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ce9d45a2_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ce9d4a25_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cea9d1c6_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1e869847d_index(_1e8691d6c_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _1e869acaa_append(_1e8691d6c_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1e869c5d6_string(_1e8691d6c_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1e8691d6c_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e78a8925_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>> static__1e8603bad_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1e78a8925_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _1e8586c2e_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>>(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _1e8586ec6_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1a68172dc;
			};
			jule::Str _2517_name = _1e8567528_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_1e85b4388_Status> _2621_stat = ({
				auto except = static__1e77deb25_Of(_1e86d32ba_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>>(except.error);
				} jule::Ptr<_1e85b4388_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_1e78a8925_DirEntry>(_1e78a8925_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1a68172dc:;
	}
	_iter_end_1a68172dc:;;
	_1e858726d_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1e862d6ee_Create(jule::Str _3922_path) {
	if ((_1e8587aed_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1e8608564_Remove(jule::Str _5122_path) {
	if ((_1e8587d95_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e77bb151_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1e85b3ec0_File>> static__1e78ee042_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _1e8586415_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e85b3ec0_File>>(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_1e85b3ec0_File>>(jule::Any(), static__1e77e1d03_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__1e78a667b_Remove(jule::Str _3022_path) {
	if ((_1e858813c_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e77a209e_Write(_1e85b3ec0_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1e859947d_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _1e77bbd33_Read(_1e85b3ec0_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1e8598c1e_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_1e85b3ec0_File> static__1e77e1d03_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_1e85b3ec0_File>(_1e85b3ec0_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_1e85b3ec0_File>> static__1e78a5e1c_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_1e85b3ec0_File>>(jule::Any(), ({
		auto except = static__1e78ee042_Open(_5622_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_1e85b3ec0_File>>(except.error);
		} jule::Ptr<_1e85b3ec0_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1e78a64d3_Read(jule::Str _6820_path) {
	jule::Ptr<_1e85b4388_Status> _6913_s = ({
		auto except = static__1e77deb25_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e85b4388_Status>(nullptr);});
	});;
	if ((!(_1e85b4575_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_1e85b46a7_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_1e85b3ec0_File> _7917_f = ({
		auto except = static__1e78ee042_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1e85b3ec0_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _1e77bde67_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_1e85b46a7_Size(_6913_s.ptr())), static_cast<jule::I64>(_1e85b46a7_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _1e77bbd33_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__1e78a6ed9_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_1e85b3ec0_File> _9317_f = ({
		auto except = static__1e78ee042_Open(_9221_path, static_cast<jule::I64>(1537LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1e85b3ec0_File>(nullptr);});
	});;
	({
		auto except = _1e77a209e_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1e77bde67_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1e77bc3e9_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I64 _9947_perm) {
	({
		auto except = static__1e78a6ed9_Write(_9924_path, _1e77de4b5_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1e78a578a_Seek(_1e85b3ec0_File* _self_, jule::I64 _11123_offset, jule::I64 _11136_origin) {
	jule::I64 _11213_pos = _1e8598834_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I64>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I64> _1e77a0b08_WriteStr(_1e85b3ec0_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _1e77a209e_Write(_self_, _1e77de4b5_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _1e77bde67_Close(_1e85b3ec0_File* _self_) {
	if ((_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1e85b3ec0_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1e85b4388_Status>> static__1e77deb25_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1e85b4388_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _1e858602a_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1e85b4388_Status>>(jule::Any(_1e77c2cb2_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_1e85b4388_Status> _2017_stat = jule::new_ptr<_1e85b4388_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1e85b4388_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _1e77decbd_IsDir(_1e85b4388_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1e85b4575_IsReg(_1e85b4388_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1e85b46a7_Size(_1e85b4388_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e85b4388_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cec1d203_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ceb4952a_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1ceee8d2a_Prec(_1ceee8973_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(7LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a6e932c5:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a6e9333b:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a6e92bdc:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a6e92c64:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a6e92cdb:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a6e929de:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a6e91e50:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ceee8973_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ceeee21a_IsOk(_1ceeedd0d_File* _self_) {
	({
		auto except = static__1e77deb25_Of((*(_self_))._field_Path);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} jule::Ptr<_1e85b4388_Status>(nullptr);});
	});
	return true;;
}



inline void _1ceeee490_Fill(_1ceeedd0d_File* _self_, jule::Slice<jule::U8> _2327_data) {
	(*(_self_))._field_Data=_2327_data;
}



inline jule::Str _1ceeee704_Dir(_1ceeedd0d_File* _self_) {
	return _1e86d6d29_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1ceeee968_Name(_1ceeedd0d_File* _self_) {
	return _1e86b8a86_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _1ceeeebcc_Addr(_1ceeedd0d_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _1ceeeeeda_GetRow(_1ceeedd0d_File* _self_, jule::I64 _4421_row) {
	jule::I64 _4517_n = 0LL;;
	jule::I64 _4617_lineStart = 0LL;;
	jule::I64 _4717_i = 0LL;;
	for (; (_4717_i < (*(_self_))._field_Data.len()); (_4717_i)++) {
		{
			if (((*(_self_))._field_Data[_4717_i] != '\n')) {
				goto _iter_next_1a6e97d35;
			};
			(_4517_n)++;
			if ((_4517_n == _4421_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4617_lineStart, _4717_i));;
			};
			_4617_lineStart=static_cast<jule::I64>((_4717_i + 1LL));
		}
	_iter_next_1a6e97d35:;
	}
	_iter_end_1a6e97d35:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1ceeedd0d_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0000d65_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1d0006e6a_pushErr(_1d00068c6_lex* _self_, jule::Str _45826_fmt, jule::Slice<jule::Any> _45839_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1d0001ad0_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _45826_fmt, _45839_args));;
}



inline void _1d0007289_pushErrTok(_1d00068c6_lex* _self_, jule::Ptr<_1ceee8973_Token>* _46330_token, jule::Str _46345_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1d0001ad0_makeErr((*(_46330_token)).get()._field_Row, (*(_46330_token)).get()._field_Column, &((*(_self_))._field_file), _46345_fmt, jule::Slice<jule::Any>()));;
}



inline void _1d0007465_lex(_1d00068c6_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1d0009467_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1ceee8973_Token> _47321_token = _1d000a7dc_token(_self_);;
			if ((_47321_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_47321_token);;
			};
		}
	_iter_next_1a6ecb4ea:;
	}
	_iter_end_1a6ecb4ea:;;
}



inline jule::Str _1d0007773_id(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _48222_ln) {
	if (((*(_48222_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _48614_r = 0;;
	jule::I64 _48621_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_48222_ln)));
		_48614_r = __jule_assign_result.__jule_result_arg0;
		_48621_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_48614_r != '_') && (!(_1ceeebe4e_IsLetter(_48614_r))))) {
		return jule::Str();;
	};
	while ((_48621_i < (*(_48222_ln)).len())) {
		{
			jule::I32 _49218_pr = 0;;
			jule::I64 _49222_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_48222_ln)).slice(_48621_i));
				_49218_pr = __jule_assign_result.__jule_result_arg0;
				_49222_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_49218_pr != '_') && (!(_1ceeec48d_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_49218_pr)))))) && (!(_1ceeebe4e_IsLetter(_49218_pr))))) {
				(*(_self_))._field_pos+=_48621_i;
				return static_cast<jule::Str>((*(_48222_ln)).slice(0LL, _48621_i));;
			};
			_48621_i+=_49222_n;
		}
	_iter_next_1a6ece784:;
	}
	_iter_end_1a6ece784:;;
	(*(_self_))._field_pos+=(*(_48222_ln)).len();
	return static_cast<jule::Str>((*(_48222_ln)));;
}



inline jule::Slice<jule::U8> _1d00079d7_resume(_1d00068c6_lex* _self_) {
	jule::I64 _50717_i = (*(_self_))._field_pos;;
	for (; (_50717_i < (*(_self_))._field_file.get()._field_Data.len()); (_50717_i)++) {
		{
			jule::I32 _50917_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_50717_i]);;
			if (_1ceeeb9ed_IsSpace(_50917_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50917_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a6ed41b2:;
						{
							_1d0009467_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a6ed3b95:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a6ece6eb:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a6ed3a74:;
				};
				goto _iter_next_1a6ed23ad;
			};
			jule::I64 _52421_j = _50717_i;;
			for (; (_52421_j < (*(_self_))._field_file.get()._field_Data.len()); (_52421_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_52421_j] == '\n')) {
						goto _iter_end_1a6ed2e91;
					};
				}
			_iter_next_1a6ed2e91:;
			}
			_iter_end_1a6ed2e91:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_50717_i, _52421_j);;
		}
	_iter_next_1a6ed23ad:;
	}
	_iter_end_1a6ed23ad:;;
	return nullptr;;
}



inline void _1d0007c5c_lexLineComment(_1d00068c6_lex* _self_, jule::Ptr<_1ceee8973_Token>* _53538_token) {
	jule::I64 _53613_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53917_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53917_r == '\n') || (_53917_r == '\r'))) {
				goto _iter_end_1a6ed688a;
			};
		}
	_iter_next_1a6ed688a:;
	}
	_iter_end_1a6ed688a:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_53538_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
		(*(_53538_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53613_start, (*(_self_))._field_pos));
	};
}



inline void _1d0007ed2_lexRangeComment(_1d00068c6_lex* _self_, jule::Ptr<_1ceee8973_Token>* _55039_token) {
	jule::I64 _55113_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _55417_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_55417_r == '\r')) {
				goto _iter_next_1a6ed9b8a;
			};
			if ((_55417_r == '\n')) {
				_1d0009467_newLine(_self_);
				goto _iter_next_1a6ed9b8a;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_55417_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_55039_token)).get()._field_Id=static_cast<jule::U64>(18LLU);
					(*(_55039_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_55113_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a6ed9b8a:;
	}
	_iter_end_1a6ed9b8a:;;
	_1d0006e6a_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1d00082e0_num(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _57823_txt) {
	jule::Str __jule_func_result;
	if (((*(_57823_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1d00053ec_hexNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1d0005155_octalNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1d0003a9e_binaryNum(_57823_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_1d0003807_commonNum(_57823_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1d00085ed_escapeSeq(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _60029_txt) {
	jule::Str _60117_seq = jule::Str();;
	if (((*(_60029_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_60029_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a6ee4931:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_60029_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a6ee4865:;
			{
				_60117_seq=_1d00059d5_bigUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a6ee459b:;
			{
				_60117_seq=_1d0005c9e_littleUnicodePointEscape(_60029_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a6ee4612:;
			{
				_60117_seq=_1d0005e58_hexByteEscape(_60029_txt);
			}
		}
		else {
			_case_begin_1a6ee3d3c:;
			{
				_60117_seq=_1d00061de_byteEscape(_60029_txt);
			}
		}
		_match_end_1a6ee447a:;
	};
	_julec_label_end:;
	if (_60117_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1d0006e6a_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_60117_seq.len();
	return _60117_seq;;
}



inline jule::Str _1d00089a5_getRune(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _63027_txt, jule::Bool _63040_raw) {
	if (((!(_63040_raw)) && ((*(_63027_txt))[0LL] == '\\'))) {
		return _1d00085ed_escapeSeq(_self_, _63027_txt);;
	};
	jule::I32 _63414_r = 0;;
	jule::I64 _63417_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_63027_txt)));
		_63414_r = __jule_assign_result.__jule_result_arg0;
		_63417_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_63417_n;
	return static_cast<jule::Str>(_63414_r);;
}



inline jule::Str _1d0008cb3_lexRune(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _63927_txt) {
	jule::Str _64017_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _64217_n = 0LL;;
	jule::I64 _64317_i = 1LL;;
	for (; (_64317_i < (*(_63927_txt)).len()); (_64317_i)++) {
		{
			if (((*(_63927_txt))[_64317_i] == '\r')) {
				goto _iter_next_1a6eea8d2;
			};
			if (((*(_63927_txt))[_64317_i] == '\n')) {
				_1d0006e6a_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1d0009467_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _65517_part = (*(_63927_txt)).slice(_64317_i);;
			jule::Str _65617_r = _1d00089a5_getRune(_self_, &(_65517_part), false);;
			_64017_run+=_65617_r;
			(*(_self_))._field_column+=_1ceaa0959_RuneCountStr(_65617_r);
			if ((_65617_r == jule::Str("'", 1))) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a6eea8d2;
			};
			if ((_65617_r.len() > 1LL)) {
				_64317_i+=(_65617_r.len() - 1LL);
			};
			(_64217_n)++;
		}
	_iter_next_1a6eea8d2:;
	}
	_iter_end_1a6eea8d2:;;
	if ((_64217_n == 0LL)) {
		_1d0006e6a_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_64217_n > 1LL)) {
		_1d0006e6a_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _64017_run;;
}



inline jule::Str _1d0009027_lexStr(_1d00068c6_lex* _self_) {
	jule::Str _67917_s = jule::Str();;
	jule::U8 _68013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _68213_raw = (_68013_mark == '`');;
	_67917_s+=static_cast<jule::Str>(_68013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _68717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_68717_ch == '\r')) {
				goto _iter_next_1a7002147;
			};
			if ((_68717_ch == '\n')) {
				_1d0009467_newLine(_self_);
				if ((!(_68213_raw))) {
					_1d0006e6a_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _70017_r = _1d00089a5_getRune(_self_, &(_69921_part), _68213_raw);;
			_67917_s+=_70017_r;
			(*(_self_))._field_column+=_1ceaa0959_RuneCountStr(_70017_r);
			if ((_68717_ch == _68013_mark)) {
				goto _iter_end_1a7002147;
			};
		}
	_iter_next_1a7002147:;
	}
	_iter_end_1a7002147:;;
	return _67917_s;;
}



inline jule::Bool _1d000928b_isFirstTokenOfLine(_1d00068c6_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _1d0009467_newLine(_1d00068c6_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1d0009962_isOp(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _72024_txt, jule::Str _72037_kind, jule::U64 _72048_id, jule::Ptr<_1ceee8973_Token>* _72066_t) {
	if ((!(_1d0001e65_bytesHasPrefix(_72024_txt, _72037_kind)))) {
		return false;;
	};
	(*(_72066_t)).get()._field_Kind=_72037_kind;
	(*(_72066_t)).get()._field_Id=_72048_id;
	(*(_self_))._field_pos+=_72037_kind.len();
	return true;;
}



inline jule::Bool _1d0009d19_lexBasicOps(_1d00068c6_lex* _self_, jule::Slice<jule::U8> _73030_txt, jule::Ptr<_1ceee8973_Token>* _73048_tok) {
	{
		auto expr = &(_1d00015d5_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a700844a:;
		if (it != expr_end) {
			_1d0000d65_kindPair *_73116_pair = it;
			{
				if (_1d0009962_isOp(_self_, &(_73030_txt), (*(_73116_pair))._field_kind, (*(_73116_pair))._field_id, _73048_tok)) {
					return true;;
				};
			}
			_iter_next_1a700844a:;
			++it;
			goto _iter_begin_1a700844a;
		}
		_iter_end_1a700844a:;
	};
	return false;;
}



inline jule::Bool _1d000a1c1_lexId(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _74025_txt, jule::Ptr<_1ceee8973_Token>* _74043_t) {
	jule::Str _74113_lex = _1d0007773_id(_self_, _74025_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74043_t)).get()._field_Kind=_74113_lex;
	(*(_74043_t)).get()._field_Id=static_cast<jule::U64>(2LLU);
	return true;;
}



inline jule::Bool _1d000a578_lexNum(_1d00068c6_lex* _self_, jule::Slice<jule::U8>* _75026_txt, jule::Ptr<_1ceee8973_Token>* _75044_t) {
	jule::Str _75113_lex = _1d00082e0_num(_self_, _75026_txt);;
	if (_75113_lex.empty()) {
		return false;;
	};
	(*(_75044_t)).get()._field_Kind=_75113_lex;
	(*(_75044_t)).get()._field_Id=static_cast<jule::U64>(6LLU);
	return true;;
}



inline jule::Ptr<_1ceee8973_Token> _1d000a7dc_token(_1d00068c6_lex* _self_) {
	jule::Ptr<_1ceee8973_Token> _76217_t = jule::new_ptr<_1ceee8973_Token>(_1ceee8973_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _76713_txt = _1d00079d7_resume(_self_);;
	if ((_76713_txt == nullptr)) {
		return _76217_t;;
	};
	_76217_t.get()._field_Column=(*(_self_))._field_column;
	_76217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1d000a578_lexNum(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1a700e473:;
			{
				goto _match_end_1a700d86d;
			}
		}
		else if ((_76713_txt[0LL] == '\'')) {
			_case_begin_1a700ebd2:;
			{
				_76217_t.get()._field_Kind=_1d0008cb3_lexRune(_self_, &(_76713_txt));
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (((_76713_txt[0LL] == '\"') || (_76713_txt[0LL] == '`'))) {
			_case_begin_1a700ec48:;
			{
				_76217_t.get()._field_Kind=_1d0009027_lexStr(_self_);
				_76217_t.get()._field_Id=static_cast<jule::U64>(6LLU);
				return _76217_t;;
			}
		}
		else if (_1d0001e65_bytesHasPrefix(&(_76713_txt), jule::Str("//", 2))) {
			_case_begin_1a700ee79:;
			{
				_1d0007c5c_lexLineComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_1d0001e65_bytesHasPrefix(&(_76713_txt), jule::Str("/*", 2))) {
			_case_begin_1a700eee0:;
			{
				_1d0007ed2_lexRangeComment(_self_, &(_76217_t));
				return _76217_t;;
			}
		}
		else if (_1d0009962_isOp(_self_, &(_76713_txt), jule::Str("(", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1d0009962_isOp(_self_, &(_76713_txt), jule::Str(")", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1d0009962_isOp(_self_, &(_76713_txt), jule::Str("{", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1d0009962_isOp(_self_, &(_76713_txt), jule::Str("}", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1d0009962_isOp(_self_, &(_76713_txt), jule::Str("[", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1d0009962_isOp(_self_, &(_76713_txt), jule::Str("]", 1), static_cast<jule::U64>(3LLU), &(_76217_t)) || _1d0009d19_lexBasicOps(_self_, _76713_txt, &(_76217_t))) {
			_case_begin_1a7010056:;
			{
				goto _match_end_1a700d86d;
			}
		}
		else if (_1d000a1c1_lexId(_self_, &(_76713_txt), &(_76217_t))) {
			_case_begin_1a700d939:;
			{
				{
					auto expr = &(_1d0001294_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7015600:;
					if (it != expr_end) {
						_1d0000d65_kindPair *_80520_pair = it;
						{
							if (((*(_80520_pair))._field_kind == _76217_t.get()._field_Kind)) {
								_76217_t.get()._field_Id=(*(_80520_pair))._field_id;
								goto _iter_end_1a7015600;
							};
						}
						_iter_next_1a7015600:;
						++it;
						goto _iter_begin_1a7015600;
					}
					_iter_end_1a7015600:;
				};
			}
		}
		else {
			_case_begin_1a700d8c3:;
			{
				jule::I32 _81218_r = 0;;
				jule::I64 _81221_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune(_76713_txt);
					_81218_r = __jule_assign_result.__jule_result_arg0;
					_81221_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1d0006e6a_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_81218_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_81221_sz;
				return _76217_t;;
			}
		}
		_match_end_1a700d86d:;
	};
	(*(_self_))._field_column+=_1ceaa0959_RuneCountStr(_76217_t.get()._field_Kind);
	return _76217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d00068c6_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3c1be0e_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3c1cc01_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3c1d0ec_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48619a9_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a48623d3_IsPrim(_1a4862070_IdentTypeDecl* _self_) {
	return ((*(_self_))._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4862070_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48626be_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4862a76_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4862d62_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486325d_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4863549_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4863b87_IsUnsafe(_1a4863835_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4863835_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4864391_AutoSized(_1a4863eb7_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4863eb7_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4864715_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4864abc_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4865eca_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48662b6_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486686b_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4866b57_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4867361_IsNil(_1a486700e_LitExpr* _self_) {
	return ((*(_self_))._field_Value == jule::Str("nil", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486700e_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4867718_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4867edd_IsSelf(_1a4867b8b_IdentExpr* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4867b8b_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4868395_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486874c_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4868b04_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4868eab_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486942e_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48698a2_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a486a320_Unhandled(_1a4869eac_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1a486a584_Ignored(_1a4869eac_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4869eac_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a486ac8d_IsTargeted(_1a486a93b_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486a93b_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486b189_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a486b95e_IsEmpty(_1a486b60c_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486b60c_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486bdd2_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a486c8e9_IsEmpty(_1a486c5b9_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486c5b9_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486ce38_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486d543_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486d82e_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486dca2_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486e159_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486e511_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486e7ec_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a486ee07_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4870446_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4871337_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4871942_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a487247b_IsSelf(_1a4872118_ParamDecl* _self_) {
	return (((*(_self_))._field_Ident == jule::Str("&self", 5)) || ((*(_self_))._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1a48726e0_IsRef(_1a4872118_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4872118_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a487378a_IsAnon(_1a4873438_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("<anonymous>", 11));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4873438_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4874417_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48747be_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4875281_IsInf(_1a4874e2e_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4874e2e_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4875a56_IsWhileNext(_1a4875704_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4875704_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4876095_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487644c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4876804_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4876c77_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487712e_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48775a2_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4877c78_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48781eb_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48788c2_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4879164_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a4879939_AutoExpr(_1a48795d7_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a48795d7_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a487a693_DefaultTyped(_1a487a110_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487a110_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487ab16_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487b221_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487b41e_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487bbc2_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487c2cc_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a487cc4a_IsTraitImpl(_1a487c8d7_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a487ceae_IsStructImpl(_1a487c8d7_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487c8d7_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5034d6e_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4e378cb_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a537e8a0_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a537b847_set(_1a537ecac_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1a76765bd:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1a7676645:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1a7676458:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1a767879b:;
					{
						goto _iter_next_1a7678070;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1a7678823:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a7678070;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1a767889a:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a7678070;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a7678070;
					}
				}
				_match_end_1a767867a:;
			};
			goto _iter_end_1a7678070;
		}
	_iter_next_1a7678070:;
	}
	_iter_end_1a7678070:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1a4e10431_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1a7680ebd;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1a7680ebd:;
		}
		_iter_end_1a7680ebd:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a537b979_floatBits(_1a537ecac_decimal* _self_, _1a5034d6e_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a50e347c_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1a50e347c_powtab[(*(_self_))._field_dp];
			};
			_1a53800cb_shift(_self_, static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1a7687865:;
	}
	_iter_end_1a7687865:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a50e347c_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1a50e347c_powtab[(-((*(_self_))._field_dp))];
			};
			_1a53800cb_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1a7688899:;
	}
	_iter_end_1a7688899:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I64 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1a53800cb_shift(_self_, static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1a53800cb_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1a53805a4_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a537ee99_assign(_1a537ecac_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1a7695d4b:;
	}
	_iter_end_1a7695d4b:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a76967b9:;
	}
	_iter_end_1a76967b9:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a5380818_trim(_self_);
}



inline void _1a53800cb_shift(_1a537ecac_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a7698898:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1a7698920:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1a5380d46_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1a7699679:;
				}
				_iter_end_1a7699679:;;
				_1a5380d46_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1a7698997:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1a538094a_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1a76995e1:;
				}
				_iter_end_1a76995e1:;;
				_1a538094a_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1a7698777:;
	};
}



inline void _1a538020d_roundDown(_1a537ecac_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1a5380818_trim(_self_);
}



inline void _1a5380340_roundUp(_1a537ecac_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1a769d2b5:;
	}
	_iter_end_1a769d2b5:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a5380472_round(_1a537ecac_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a5381187_shouldRoundUp(_self_, _41124_nd)) {
		_1a5380340_roundUp(_self_, _41124_nd);
	} else {
		_1a538020d_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1a53805a4_roundedInteger(_1a537ecac_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1a76a0e33:;
	}
	_iter_end_1a76a0e33:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1a76a2b27:;
	}
	_iter_end_1a76a2b27:;;
	if (_1a5381187_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a537ecac_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5389ec6_Const> static__1a538a449_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1a5389ec6_Const>(_1a5389ec6_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1a5389ec6_Const> static__1a538a6e1_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1a5389ec6_Const>(_1a5389ec6_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1a5389ec6_Const> static__1a538a988_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1a5389ec6_Const>(_1a5389ec6_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1a5389ec6_Const> static__1a538ac30_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1a5389ec6_Const>(_1a5389ec6_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1a5389ec6_Const> static__1a538aec7_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1a5389ec6_Const>(_1a5389ec6_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1a5389ec6_Const> static__1a538b1c5_NewNil(void) {
	return jule::new_ptr<_1a5389ec6_Const>(_1a5389ec6_Const{._field_data=nullptr});;
}



inline jule::I64 _1a538b7be_ReadI64(_1a5389ec6_Const* _self_) {
	if ((!(_1a538db67_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1a538ba33_ReadU64(_1a5389ec6_Const* _self_) {
	if ((!(_1a538ddcb_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1a538bc97_ReadBool(_1a5389ec6_Const* _self_) {
	if ((!(_1a538e140_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1a538c00b_ReadStr(_1a5389ec6_Const* _self_) {
	if ((!(_1a538e3a4_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1a538c270_ReadF64(_1a5389ec6_Const* _self_) {
	if ((!(_1a538e618_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1a538c4d4_AsI64(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7729bb0:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7729c26:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a772962c:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1a772953e:;
			{
				return 0LL;;
			}
		}
		_match_end_1a77294d9:;
	};
}



inline jule::U64 _1a538c748_AsU64(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a772b5da:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a772b651:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a772b156:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1a7729d03:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a7729c9d:;
	};
}



inline jule::F64 _1a538c9ac_AsF64(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a772d015:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a772d07b:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a772ca81:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1a772b72d:;
			{
				return 0LL;;
			}
		}
		_match_end_1a772b6c8:;
	};
}



inline void _1a538cc32_SetI64(_1a5389ec6_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1a538cea7_SetU64(_1a5389ec6_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1a538d22c_SetBool(_1a5389ec6_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1a538d4a2_SetStr(_1a5389ec6_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1a538d727_SetF64(_1a5389ec6_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1a538d903_SetNil(_1a5389ec6_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1a538db67_IsI64(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7731931:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7731ba6:;
			{
				return false;;
			}
		}
		_match_end_1a7731b51:;
	};
}



inline jule::Bool _1a538ddcb_IsU64(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7732558:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7731dc6:;
			{
				return false;;
			}
		}
		_match_end_1a7731c83:;
	};
}



inline jule::Bool _1a538e140_IsBool(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a77327de:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7732ea4:;
			{
				return false;;
			}
		}
		_match_end_1a7732e4e:;
	};
}



inline jule::Bool _1a538e3a4_IsStr(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a77332a1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7733966:;
			{
				return false;;
			}
		}
		_match_end_1a7733911:;
	};
}



inline jule::Bool _1a538e618_IsF64(_1a5389ec6_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7733c63:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7734428:;
			{
				return false;;
			}
		}
		_match_end_1a77343c3:;
	};
}



inline jule::Bool _1a538e87c_IsNil(_1a5389ec6_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1a538eb8a_AreSameTypes(_1a5389ec6_Const* _self_, _1a5389ec6_Const _21327_x) {
	{
		
		if ((_1a538db67_IsI64(_self_) == _1a538db67_IsI64(&_21327_x))) {
			_case_begin_1a7735ec9:;
			{
				return true;;
			}
		}
		else if ((_1a538ddcb_IsU64(_self_) == _1a538ddcb_IsU64(&_21327_x))) {
			_case_begin_1a77357d1:;
			{
				return true;;
			}
		}
		else if ((_1a538e618_IsF64(_self_) == _1a538e618_IsF64(&_21327_x))) {
			_case_begin_1a7735858:;
			{
				return true;;
			}
		}
		else if ((_1a538e140_IsBool(_self_) == _1a538e140_IsBool(&_21327_x))) {
			_case_begin_1a77358d0:;
			{
				return true;;
			}
		}
		else if ((_1a538e3a4_IsStr(_self_) == _1a538e3a4_IsStr(&_21327_x))) {
			_case_begin_1a7735957:;
			{
				return true;;
			}
		}
		else if ((_1a538e87c_IsNil(_self_) == _1a538e87c_IsNil(&_21327_x))) {
			_case_begin_1a7735baa:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7735759:;
			{
				return false;;
			}
		}
		_match_end_1a773568d:;
	};
}



inline jule::Bool _1a538ee98_And(_1a5389ec6_Const* _self_, _1a5389ec6_Const _23818_x) {
	{
		
		if ((_1a538e140_IsBool(_self_) && _1a538e140_IsBool(&_23818_x))) {
			_case_begin_1a77391ca:;
			{
				return (_1a538bc97_ReadBool(_self_) && _1a538bc97_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1a77389d2:;
			{
				return false;;
			}
		}
		_match_end_1a77387d4:;
	};
}



inline jule::Bool _1a53902a6_Or(_1a5389ec6_Const* _self_, _1a5389ec6_Const _24917_x) {
	{
		
		if ((_1a538e140_IsBool(_self_) && _1a538e140_IsBool(&_24917_x))) {
			_case_begin_1a773a53e:;
			{
				return (_1a538bc97_ReadBool(_self_) || _1a538bc97_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1a7739d8a:;
			{
				return false;;
			}
		}
		_match_end_1a773950a:;
	};
}



inline jule::Bool _1a53905b4_Eq(_1a5389ec6_Const* _self_, _1a5389ec6_Const _26017_x) {
	{
		
		if (_1a538e87c_IsNil(_self_)) {
			_case_begin_1a773b919:;
			{
				return _1a538e87c_IsNil(&_26017_x);;
			}
		}
		else if (_1a538e140_IsBool(_self_)) {
			_case_begin_1a773b276:;
			{
				return (_1a538e140_IsBool(&_26017_x) && (_1a538bc97_ReadBool(_self_) == _1a538bc97_ReadBool(&_26017_x)));;
			}
		}
		else if (_1a538e3a4_IsStr(_self_)) {
			_case_begin_1a773b2dc:;
			{
				return (_1a538e3a4_IsStr(&_26017_x) && (_1a538c00b_ReadStr(_self_) == _1a538c00b_ReadStr(&_26017_x)));;
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a773b364:;
			{
				return (_1a538b7be_ReadI64(_self_) == _1a538c4d4_AsI64(&_26017_x));;
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a773b3db:;
			{
				return (_1a538ba33_ReadU64(_self_) == _1a538c748_AsU64(&_26017_x));;
			}
		}
		else if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a773b61c:;
			{
				return (_1a538c270_ReadF64(_self_) == _1a538c9ac_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1a773b210:;
			{
				return false;;
			}
		}
		_match_end_1a773a85d:;
	};
}



inline jule::Bool _1a53908c2_Lt(_1a5389ec6_Const* _self_, _1a5389ec6_Const _28717_x) {
	{
		
		if (_1a538e3a4_IsStr(_self_)) {
			_case_begin_1a774070e:;
			{
				return (_1a538e3a4_IsStr(&_28717_x) && (_1a538c00b_ReadStr(_self_) < _1a538c00b_ReadStr(&_28717_x)));;
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a77400c1:;
			{
				return (_1a538b7be_ReadI64(_self_) < _1a538c4d4_AsI64(&_28717_x));;
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7740137:;
			{
				return (_1a538ba33_ReadU64(_self_) < _1a538c748_AsU64(&_28717_x));;
			}
		}
		else if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a774019d:;
			{
				return (_1a538c270_ReadF64(_self_) < _1a538c9ac_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1a773bc49:;
			{
				return false;;
			}
		}
		_match_end_1a773bb7d:;
	};
}



inline jule::Bool _1a5390bd0_LtEq(_1a5389ec6_Const* _self_, _1a5389ec6_Const _31019_x) {
	{
		
		if (_1a538e3a4_IsStr(_self_)) {
			_case_begin_1a7743514:;
			{
				return (_1a538e3a4_IsStr(&_31019_x) && (_1a538c00b_ReadStr(_self_) <= _1a538c00b_ReadStr(&_31019_x)));;
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a7742dc6:;
			{
				return (_1a538b7be_ReadI64(_self_) <= _1a538c4d4_AsI64(&_31019_x));;
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7742e3c:;
			{
				return (_1a538ba33_ReadU64(_self_) <= _1a538c748_AsU64(&_31019_x));;
			}
		}
		else if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a7742ea3:;
			{
				return (_1a538c270_ReadF64(_self_) <= _1a538c9ac_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1a7740984:;
			{
				return false;;
			}
		}
		_match_end_1a77408b8:;
	};
}



inline jule::Bool _1a5390edd_Gt(_1a5389ec6_Const* _self_, _1a5389ec6_Const _33317_x) {
	{
		
		if (_1a538e3a4_IsStr(_self_)) {
			_case_begin_1a7746319:;
			{
				return (_1a538e3a4_IsStr(&_33317_x) && (_1a538c00b_ReadStr(_self_) > _1a538c00b_ReadStr(&_33317_x)));;
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a7745bcb:;
			{
				return (_1a538b7be_ReadI64(_self_) > _1a538c4d4_AsI64(&_33317_x));;
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7745c42:;
			{
				return (_1a538ba33_ReadU64(_self_) > _1a538c748_AsU64(&_33317_x));;
			}
		}
		else if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a7745ca8:;
			{
				return (_1a538c270_ReadF64(_self_) > _1a538c9ac_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1a7743789:;
			{
				return false;;
			}
		}
		_match_end_1a77436bd:;
	};
}



inline jule::Bool _1a53912eb_GtEq(_1a5389ec6_Const* _self_, _1a5389ec6_Const _35619_x) {
	{
		
		if (_1a538e3a4_IsStr(_self_)) {
			_case_begin_1a774911e:;
			{
				return (_1a538e3a4_IsStr(&_35619_x) && (_1a538c00b_ReadStr(_self_) >= _1a538c00b_ReadStr(&_35619_x)));;
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a77489d1:;
			{
				return (_1a538b7be_ReadI64(_self_) >= _1a538c4d4_AsI64(&_35619_x));;
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7748a47:;
			{
				return (_1a538ba33_ReadU64(_self_) >= _1a538c748_AsU64(&_35619_x));;
			}
		}
		else if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a7748aad:;
			{
				return (_1a538c270_ReadF64(_self_) >= _1a538c9ac_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1a774658e:;
			{
				return false;;
			}
		}
		_match_end_1a77464c3:;
	};
}



inline jule::Bool _1a5391609_Add(_1a5389ec6_Const* _self_, _1a5389ec6_Const _37722_x) {
	{
		
		if (_1a538e3a4_IsStr(_self_)) {
			_case_begin_1a774be24:;
			{
				if ((!(_1a538e3a4_IsStr(&_37722_x)))) {
					return false;;
				};
				_1a538d4a2_SetStr(_self_, (_1a538c00b_ReadStr(_self_) + _1a538c00b_ReadStr(&_37722_x)));
			}
		}
		else if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a774b7d6:;
			{
				_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c270_ReadF64(_self_) + _1a538c9ac_AsF64(&_37722_x))));
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a774b84c:;
			{
				if (_1a538e618_IsF64(&_37722_x)) {
					_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c9ac_AsF64(_self_) + _1a538c270_ReadF64(&_37722_x))));
				} else {
					_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_1a538b7be_ReadI64(_self_) + _1a538c4d4_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a774b8b3:;
			{
				if (_1a538e618_IsF64(&_37722_x)) {
					_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c9ac_AsF64(_self_) + _1a538c270_ReadF64(&_37722_x))));
				} else {
					_1a538cea7_SetU64(_self_, static_cast<jule::U64>((_1a538ba33_ReadU64(_self_) + _1a538c748_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1a7749394:;
			{
				return false;;
			}
		}
		_match_end_1a77492c8:;
	};
	return true;;
}



inline jule::Bool _1a5391917_Sub(_1a5389ec6_Const* _self_, _1a5389ec6_Const _40622_x) {
	{
		
		if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a7752358:;
			{
				_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c270_ReadF64(_self_) - _1a538c9ac_AsF64(&_40622_x))));
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a7751b82:;
			{
				if (_1a538e618_IsF64(&_40622_x)) {
					_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c9ac_AsF64(_self_) - _1a538c270_ReadF64(&_40622_x))));
				} else {
					_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_1a538b7be_ReadI64(_self_) - _1a538c4d4_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7751be8:;
			{
				if (_1a538e618_IsF64(&_40622_x)) {
					_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c9ac_AsF64(_self_) - _1a538c270_ReadF64(&_40622_x))));
				} else {
					_1a538cea7_SetU64(_self_, static_cast<jule::U64>((_1a538ba33_ReadU64(_self_) - _1a538c748_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1a7751b1b:;
			{
				return false;;
			}
		}
		_match_end_1a7751368:;
	};
	return true;;
}



inline jule::Bool _1a5391c25_Mul(_1a5389ec6_Const* _self_, _1a5389ec6_Const _43022_x) {
	{
		
		if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a77567e1:;
			{
				_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c270_ReadF64(_self_) * _1a538c9ac_AsF64(&_43022_x))));
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a775611a:;
			{
				if (_1a538e618_IsF64(&_43022_x)) {
					_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c9ac_AsF64(_self_) * _1a538c270_ReadF64(&_43022_x))));
				} else {
					_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_1a538b7be_ReadI64(_self_) * _1a538c4d4_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7756181:;
			{
				if (_1a538e618_IsF64(&_43022_x)) {
					_1a538d727_SetF64(_self_, static_cast<jule::F64>((_1a538c9ac_AsF64(_self_) * _1a538c270_ReadF64(&_43022_x))));
				} else {
					_1a538cea7_SetU64(_self_, static_cast<jule::U64>((_1a538ba33_ReadU64(_self_) * _1a538c748_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1a77560a4:;
			{
				return false;;
			}
		}
		_match_end_1a77556ad:;
	};
	return true;;
}



inline jule::Bool _1a5392033_Div(_1a5389ec6_Const* _self_, _1a5389ec6_Const _45822_x) {
	{
		
		if (_1a538e618_IsF64(_self_)) {
			_case_begin_1a775ac79:;
			{
				jule::F64 _46117_l = _1a538c9ac_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1a538d727_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a538c270_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a775a5a3:;
			{
				jule::F64 _46717_l = _1a538c9ac_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1a538d727_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a538c9ac_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a775a619:;
			{
				jule::F64 _47317_l = _1a538c9ac_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1a538d727_SetF64(_self_, static_cast<jule::F64>(jule::div(_1a538c9ac_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1a775a53c:;
			{
				return false;;
			}
		}
		_match_end_1a7759b46:;
	};
	return true;;
}



inline jule::Bool _1a5392341_Mod(_1a5389ec6_Const* _self_, _1a5389ec6_Const _48722_x) {
	{
		
		if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a776505d:;
			{
				jule::I64 _49017_l = _1a538c4d4_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1a538cc32_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1a538b7be_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7764898:;
			{
				jule::U64 _49617_l = _1a538c748_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1a538cea7_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1a538ba33_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1a7764832:;
			{
				return false;;
			}
		}
		_match_end_1a77647aa:;
	};
	return true;;
}



inline jule::Bool _1a539264e_BitwiseAnd(_1a5389ec6_Const* _self_, _1a5389ec6_Const _50929_x) {
	{
		
		if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a7768182:;
			{
				_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_1a538b7be_ReadI64(_self_) & _1a538c4d4_AsI64(&_50929_x))));
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a77679bc:;
			{
				_1a538cea7_SetU64(_self_, static_cast<jule::U64>((_1a538ba33_ReadU64(_self_) & _1a538c748_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1a7767956:;
			{
				return false;;
			}
		}
		_match_end_1a77678ce:;
	};
	return true;;
}



inline jule::Bool _1a539295c_BitwiseOr(_1a5389ec6_Const* _self_, _1a5389ec6_Const _52328_x) {
	{
		
		if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a776a20b:;
			{
				_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_1a538b7be_ReadI64(_self_) | _1a538c4d4_AsI64(&_52328_x))));
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a7769a46:;
			{
				_1a538cea7_SetU64(_self_, static_cast<jule::U64>((_1a538ba33_ReadU64(_self_) | _1a538c748_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1a77699d0:;
			{
				return false;;
			}
		}
		_match_end_1a7769914:;
	};
	return true;;
}



inline jule::Bool _1a5392c6a_Xor(_1a5389ec6_Const* _self_, _1a5389ec6_Const _53722_x) {
	{
		
		if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a776c285:;
			{
				_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_1a538b7be_ReadI64(_self_) ^ _1a538c4d4_AsI64(&_53722_x))));
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a776bac0:;
			{
				_1a538cea7_SetU64(_self_, static_cast<jule::U64>((_1a538ba33_ReadU64(_self_) ^ _1a538c748_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1a776ba59:;
			{
				return false;;
			}
		}
		_match_end_1a776b98d:;
	};
	return true;;
}



inline jule::Bool _1a5393078_Lshift(_1a5389ec6_Const* _self_, _1a5389ec6_Const _55125_x) {
	{
		
		if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a776e30e:;
			{
				jule::I64 _55417_l = _1a538c4d4_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1a538c748_AsU64(&_55125_x);;
					_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1a53936e9_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a776db49:;
			{
				_1a53936e9_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1a776dad3:;
			{
				return false;;
			}
		}
		_match_end_1a776da17:;
	};
	return true;;
}



inline jule::Bool _1a5393386_Rshift(_1a5389ec6_Const* _self_, _1a5389ec6_Const _57125_x) {
	{
		
		if (_1a538db67_IsI64(_self_)) {
			_case_begin_1a7771b6e:;
			{
				jule::I64 _57417_l = _1a538c4d4_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1a538c748_AsU64(&_57125_x);;
					_1a538cc32_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1a53939e6_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1a538ddcb_IsU64(_self_)) {
			_case_begin_1a77714a9:;
			{
				_1a53939e6_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1a7771443:;
			{
				return false;;
			}
		}
		_match_end_1a7771377:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5389ec6_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a487d388_FieldIns> _1a3c25610_instance(jule::Ptr<_1a4852208_Field> _self_) {
	return jule::new_ptr<_1a487d388_FieldIns>(_1a487d388_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4852208_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a485984d_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a487d575_StructIns> _1a483994e_instance(jule::Ptr<_1a487d19b_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1a487d575_StructIns> _9917_ins = jule::new_ptr<_1a487d575_StructIns>(_1a487d575_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1a487d388_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1a5418939_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1a53aa37b_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79a2cb2:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1a5418939_Var>((*(_10621_s))));;
			}
			_iter_next_1a79a2cb2:;
			++it;
			goto _iter_begin_1a79a2cb2;
		}
		_iter_end_1a79a2cb2:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6863107:;
		if (it != expr_end) {
			jule::Ptr<_1a4852208_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1a3c25610_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1a5493909_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1a6863107:;
			++it;
			goto _iter_begin_1a6863107;
		}
		_iter_end_1a6863107:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1a53a44c9_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a777c44e:;
			if (it != expr_end) {
				jule::Ptr<_1a53a44c9_Fn> _12125_f = *it;
				{
					jule::Ptr<_1a53a44c9_Fn> _12225_fins = jule::new_ptr<_1a53a44c9_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1a777c44e:;
				++it;
				goto _iter_begin_1a777c44e;
			}
			_iter_end_1a777c44e:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1a487d575_StructIns> _1a483d722_appendInstance(_1a487d19b_Struct* _self_, jule::Ptr<_1a487d575_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a777e7d6:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _13921_ains = *it;
			{
				if (_1a4855030_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1a777e7d6:;
			++it;
			goto _iter_begin_1a777e7d6;
		}
		_iter_end_1a777e7d6:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a483e47b_FindMethod(_1a487d19b_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7780be4:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1a7780be4:;
			++it;
			goto _iter_begin_1a7780be4;
		}
		_iter_end_1a7780be4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5418939_Var> _1a48425d3_FindStatic(_1a487d19b_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7781db0:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1a7781db0:;
			++it;
			goto _iter_begin_1a7781db0;
		}
		_iter_end_1a7781db0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4852208_Field> _1a4841a33_FindField(_1a487d19b_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7782c90:;
		if (it != expr_end) {
			jule::Ptr<_1a4852208_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1a7782c90:;
			++it;
			goto _iter_begin_1a7782c90;
		}
		_iter_end_1a7782c90:;
	};
	return nullptr;;
}



inline jule::Bool _1a4843e0e_IsImplements(_1a487d19b_Struct* _self_, jule::Ptr<_1a53b63cb_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7783b70:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1a7783b70:;
			++it;
			goto _iter_begin_1a7783b70;
		}
		_iter_end_1a7783b70:;
	};
	return false;;
}



inline jule::Bool _1a484320a_IsDerives(_1a487d19b_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77841d1:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> *_19416_d = it;
			{
				if (((*(_19416_d)).get()._field_Tag.get()._field_Kind == jule::Str("derive", 6))) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1a77841d1:;
			++it;
			goto _iter_begin_1a77841d1;
		}
		_iter_end_1a77841d1:;
	};
	return false;;
}



inline jule::Bool _1a48471cb_IsUses(_1a487d19b_Struct* _self_, jule::Ptr<_1a487d19b_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7786865:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1a77870b3:;
				}
				_iter_end_1a77870b3:;;
			}
			_iter_next_1a7786865:;
			++it;
			goto _iter_begin_1a7786865;
		}
		_iter_end_1a7786865:;
	};
	return false;;
}



inline jule::Bool _1a4847891_HasRefAccessible(_1a487d19b_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a778727d:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1a53a352d_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1a778727d:;
			++it;
			goto _iter_begin_1a778727d;
		}
		_iter_end_1a778727d:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487d19b_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487d388_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5395ce5_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53962ac_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5396664_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5396a60_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5396e17_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5397225_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5397775_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5398127_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53984ce_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5398952_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5398d09_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53991b1_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5399634_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5399b73_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539a1b2_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539a998_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539ad3e_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539b207_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539b4e3_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539ba54_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539bd51_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539c22a_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539c615_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539c934_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539cd1e_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539d209_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539d6b0_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539db66_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539e051_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539e370_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539e68e_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a539ed43_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a01a6_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a0591_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a088d_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a0b79_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a0e65_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a1273_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a163b_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a1927_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a24b6_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53a62ab_ParamIns> _1a53a3055_instance(jule::Ptr<_1a53a2b8c_Param> _self_) {
	return jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1a53a32b9_IsSelf(_1a53a2b8c_Param* _self_) {
	return (((*(_self_))._field_Ident == jule::Str("&self", 5)) || ((*(_self_))._field_Ident == jule::Str("self", 4)));;
}



inline jule::Bool _1a53a352d_IsRef(_1a53a2b8c_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a2b8c_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a53a493b_IsVoid(_1a53a44c9_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1a53a4ba0_IsMethod(_1a53a44c9_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1a53a4e14_IsEntryPoint(_1a53a44c9_Fn* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("main", 4));;
}



inline jule::Bool _1a53a5178_IsInit(_1a53a44c9_Fn* _self_) {
	return ((*(_self_))._field_Ident == jule::Str("init", 4));;
}



inline jule::Bool _1a53a53dc_IsAnon(_1a53a44c9_Fn* _self_) {
	return _1ceeeb4ae_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1a53a5651_AnyVar(_1a53a44c9_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1a53a717a_FnIns> _1a53a58b5_instanceForce(jule::Ptr<_1a53a44c9_Fn> _self_) {
	jule::Ptr<_1a53a717a_FnIns> _10017_ins = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1a53c40dc_Scope>(), ._field_Refers=static__1a53aa37b_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a779aa33:;
		if (it != expr_end) {
			jule::Ptr<_1a53a2b8c_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1a53a3055_instance(_10721_p));;
			}
			_iter_next_1a779aa33:;
			++it;
			goto _iter_begin_1a779aa33;
		}
		_iter_end_1a779aa33:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1a53a717a_FnIns> _1a53a5b29_instance(jule::Ptr<_1a53a44c9_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1a53a58b5_instanceForce(_self_);;
}



inline jule::Ptr<_1a53a717a_FnIns> _1a53a5e04_appendInstance(_1a53a44c9_Fn* _self_, jule::Ptr<_1a53a717a_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a779ed23:;
		if (it != expr_end) {
			jule::Ptr<_1a53a717a_FnIns> _14421_ains = *it;
			{
				if (_1a53a8a83_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1a779ed23:;
			++it;
			goto _iter_begin_1a779ed23;
		}
		_iter_end_1a779ed23:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a44c9_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a53a6685_Str(_1a53a62ab_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		_16617_s+=jule::Str("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		_16617_s+=jule::Str("&_:", 3);
	};
	if (_1a53a32b9_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1a53a352d_IsRef((*(_self_))._field_Decl.ptr())) {
			_16617_s+=jule::Str("&", 1);
		};
		_16617_s+=jule::Str("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		_16617_s+=jule::Str("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1a5492683_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a62ab_ParamIns _Src) {
	_Stream << _1a53a6685_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a53a74aa_Str(_1a53a717a_FnIns* _self_) {
	;
	return _1a53a8d91_GetKindStr(_self_, false);;
}



inline jule::Bool _1a53a77b8_Equal(jule::Ptr<_1a53a717a_FnIns> _self_, jule::Ptr<_1a5492287_TypeKind> _21721_other) {
	jule::Ptr<_1a53a717a_FnIns> _21813_f = _1a549580c_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1a53a7c2a_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1a53a7c2a_EqualFn(jule::Ptr<_1a53a717a_FnIns> _self_, jule::Ptr<_1a53a717a_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1a53a493b_IsVoid(_self_.get()._field_Decl.ptr()) != _1a53a493b_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1a53a62ab_ParamIns>,jule::Ptr<_1a53a62ab_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1a53a62ab_ParamIns>,jule::Ptr<_1a53a62ab_ParamIns>)>([=](jule::Ptr<_1a53a62ab_ParamIns> _23830_p1, jule::Ptr<_1a53a62ab_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1a53a32b9_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1a53a32b9_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1a53a352d_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1a53a352d_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1a5492991_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1a77ad0a6:;
	}
	_iter_end_1a77ad0a6:;;
	if ((!(_1a53a493b_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1a5492991_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1a53a8038_equalTrait(jule::Ptr<_1a53a717a_FnIns> _self_, jule::Ptr<_1a53a717a_FnIns>* _28727_other) {
	if ((!(_1a53a7c2a_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _1a53a829c_Types(_1a53a717a_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a77b14e9:;
			{
				return nullptr;;
			}
		}
		else if ((_1a54962ad_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a77b1560:;
			{
				return jule::Slice<jule::Ptr<_1a5492287_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1a77b1483:;
			{
				return _1a54962ad_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1a77b13b7:;
	};
}



inline jule::Bool _1a53a8511_IsBuiltin(_1a53a717a_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1a53a8775_IsAnon(_1a53a717a_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1a53a53dc_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1a53a8a83_Same(_1a53a717a_FnIns* _self_, jule::Ptr<_1a53a717a_FnIns> _32419_f) {
	if ((((*(_self_))._field_Decl != _32419_f.get()._field_Decl) || (_32419_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77b4ca0:;
		if (it != expr_end) {
			jule::I64 _32913_i = it - expr->begin();
			jule::Ptr<_1a5490a5a_InsGeneric> *_32916_g = it;
			{
				if ((!(_1a5492991_Equal((*(_32916_g)).get()._field_Kind, _32419_f.get()._field_Generics[_32913_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1a77b4ca0:;
			++it;
			_32913_i++;
			goto _iter_begin_1a77b4ca0;
		}
		_iter_end_1a77b4ca0:;
	};
	return true;;
}



inline jule::Str _1a53a8d91_GetKindStr(_1a53a717a_FnIns* _self_, jule::Bool _34025_ident) {
	jule::Str _34117_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		_34117_s+=jule::Str("unsafe ", 7);
	};
	_34117_s+=jule::Str("fn", 2);
	if ((_34025_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34117_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	_34117_s+=jule::Str("(", 1);
	jule::I64 _35413_n = (*(_self_))._field_Params.len();;
	if ((_35413_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a77b8a2e:;
			if (it != expr_end) {
				jule::Ptr<_1a53a62ab_ParamIns> *_35620_p = it;
				{
					_34117_s+=_1a53a6685_Str((*(_35620_p)).ptr());
					_34117_s+=jule::Str(",", 1);
				}
				_iter_next_1a77b8a2e:;
				++it;
				goto _iter_begin_1a77b8a2e;
			}
			_iter_end_1a77b8a2e:;
		};
		(_34117_s).mut_slice(0LL, (_34117_s.len() - 1LL));;
	};
	_34117_s+=jule::Str(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		_34117_s+=jule::Str("!", 1);
	};
	if ((!(_1a53a493b_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_34117_s+=jule::Str(":", 1);
		_34117_s+=_1a5492683_Str((*(_self_))._field_Result.ptr());
	};
	return _34117_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53a717a_FnIns _Src) {
	_Stream << _1a53a74aa_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a53aa0e5_ReferenceStack> static__1a53aa37b_new(void) {
	return jule::new_ptr<_1a53aa0e5_ReferenceStack>(_1a53aa0e5_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1a53aa711_Len(_1a53aa0e5_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1a53aaa1e_At(_1a53aa0e5_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1a53aac94_Push(_1a53aa0e5_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1a7eb32b1_Exist(_1a53aa0e5_ReferenceStack* _self_, jule::Ptr<_1a53a717a_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eb45c0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a7eb45c0:;
			++it;
			goto _iter_begin_1a7eb45c0;
		}
		_iter_end_1a7eb45c0:;
	};
	return false;;
}

inline jule::Bool _1a7ec6ca8_Exist(_1a53aa0e5_ReferenceStack* _self_, jule::Ptr<_1a5418939_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ec8073:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a7ec8073:;
			++it;
			goto _iter_begin_1a7ec8073;
		}
		_iter_end_1a7ec8073:;
	};
	return false;;
}

inline jule::Bool _1a8066991_Exist(_1a53aa0e5_ReferenceStack* _self_, jule::Ptr<_1a487d575_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8067ca0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a8067ca0:;
			++it;
			goto _iter_begin_1a8067ca0;
		}
		_iter_end_1a8067ca0:;
	};
	return false;;
}

inline jule::Bool _1a82d139d_Exist(_1a53aa0e5_ReferenceStack* _self_, jule::Ptr<_1a53b63cb_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82d25d0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a82d25d0:;
			++it;
			goto _iter_begin_1a82d25d0;
		}
		_iter_end_1a82d25d0:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53aa0e5_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53ab459_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53b0903_symbolBuilder> _1a53b0da9_getRoot(jule::Ptr<_1a53b0903_symbolBuilder> _self_) {
	jule::Ptr<_1a53b0903_symbolBuilder> _31617_root = _self_;;
	while ((_31617_root.get()._field_owner != nullptr)) {
		{
			_31617_root=_31617_root.get()._field_owner;
		}
	_iter_next_1a77d112e:;
	}
	_iter_end_1a77d112e:;;
	return _31617_root;;
}



inline void _1a53b1272_pushErr(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1ceee8973_Token>* _32327_token, jule::Str _32342_fmt, jule::Slice<jule::Any> _32355_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1a53e9024_compilerErr(_32327_token, true, _32342_fmt, _32355_args));;
}



inline void _1a53b163a_pushErrText(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1ceee8973_Token>* _32731_token, jule::Str _32746_fmt, jule::Slice<jule::Any> _32759_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1a53e9024_compilerErr(_32731_token, false, _32746_fmt, _32759_args));;
}



inline void _1a53b1959_pushSuggestion(_1a53b0903_symbolBuilder* _self_, jule::Str _33233_fmt, jule::Slice<jule::Any> _33246_args) {
	{
		_1a53ea4a9_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _33233_fmt, _33246_args);
	};
}



inline jule::Bool _1a53b1d11_checkCppUseDeclPath(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a4879164_UseDecl>* _33639_decl, jule::Str _33655_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _33713_ext = _1e86d4783_Ext(_33655_path);;
	if (((!(_1ceb3c672_IsValidHeaderExt(_33713_ext))) && (!(_1ceb3c919_IsValidCppExt(_33713_ext))))) {
		_1a53b1272_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_33713_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1e85b4388_Status> _34413_info = ({
		auto except = static__1e77deb25_Of(_33655_path);
		(except.ok()) ? (except.result) : ({{
			_1a53b1272_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1e85b4388_Status>(nullptr);});
	});;
	if (_1e77decbd_IsDir(_34413_info.ptr())) {
		_1a53b1272_pushErr(_self_, &((*(_33639_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_33639_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b20db_buildCppHeaderImport(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a4879164_UseDecl>* _35644_decl) {
	jule::Str _35717_path = (*(_35644_decl)).get()._field_LinkPath;;
	if ((!(_1ceb3c452_IsStdHeaderPath((*(_35644_decl)).get()._field_LinkPath)))) {
		_35717_path=_1e86d32ba_Join(jule::Slice<jule::Str>::make({_1ceeee704_Dir((*(_35644_decl)).get()._field_Token.get()._field_File.ptr()),(*(_35644_decl)).get()._field_LinkPath}));
		jule::Bool _36121_ok = _1a53b1d11_checkCppUseDeclPath(_self_, _35644_decl, _35717_path);;
		if ((!(_36121_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e869c9e3_Abs(_35717_path);
			_35717_path = __jule_assign_result.__jule_result_arg0;
			_36121_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_36121_ok))) {
			_1a53b1272_pushErr(_self_, &((*(_35644_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_35644_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1a53e27e2_ImportInfo>(_1a53e27e2_ImportInfo{._field_Token=(*(_35644_decl)).get()._field_Token, ._field_Path=_35717_path, ._field_LinkPath=(*(_35644_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_CppLinked=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b23e9_buildStdImport(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a4879164_UseDecl>* _38438_decl) {
	jule::Str _38517_path = (*(_38438_decl)).get()._field_LinkPath.slice(5LL);;
	_38517_path=_1ceac3d23_Replace(_38517_path, jule::Str("::", 2), static_cast<jule::Str>(47LL), -1LL);
	_38517_path=_1e86d32ba_Join(jule::Slice<jule::Str>::make({_1ceb54898_PathStdlib,_38517_path}));
	jule::Bool _38820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e869c9e3_Abs(_38517_path);
		_38517_path = __jule_assign_result.__jule_result_arg0;
		_38820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38820_ok))) {
		_1a53b1272_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e85b4388_Status> _39513_info = ({
		auto except = static__1e77deb25_Of(_38517_path);
		(except.ok()) ? (except.result) : ({{
			_1a53b1272_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_1e85b4388_Status>(nullptr);});
	});;
	if ((!(_1e77decbd_IsDir(_39513_info.ptr())))) {
		_1a53b1272_pushErr(_self_, &((*(_38438_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_38438_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _40513_i = (_1ceabe615_FindLast((*(_38438_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _40613_ident = (*(_38438_decl)).get()._field_LinkPath.slice(_40513_i);;
	return jule::new_ptr<_1a53e27e2_ImportInfo>(_1a53e27e2_ImportInfo{._field_Token=(*(_38438_decl)).get()._field_Token, ._field_Path=_38517_path, ._field_LinkPath=(*(_38438_decl)).get()._field_LinkPath, ._field_Ident=_40613_ident, ._field_Alias=(*(_38438_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=true, ._field_ImportAll=(*(_38438_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1a53e574b_Package>(_1a53e574b_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b2707_buildIdentImport(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a4879164_UseDecl>* _42341_decl) {
	jule::Str _42413_modPath = _1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53ddcd8_GetModPath(_self_.get()._field_importer);;
	if ((_42413_modPath.len() == 0LL)) {
		_1a53b1272_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1a53b1959_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _43117_path = (*(_42341_decl)).get()._field_LinkPath;;
	_43117_path=_1ceac3d23_Replace(_43117_path, jule::Str("::", 2), static_cast<jule::Str>(47LL), -1LL);
	_43117_path=_1e86d32ba_Join(jule::Slice<jule::Str>::make({_42413_modPath,_43117_path}));
	jule::Bool _43520_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e869c9e3_Abs(_43117_path);
		_43117_path = __jule_assign_result.__jule_result_arg0;
		_43520_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_43520_ok))) {
		_1a53b1272_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e85b4388_Status> _44213_info = ({
		auto except = static__1e77deb25_Of(_43117_path);
		(except.ok()) ? (except.result) : ({{
			_1a53b1272_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_1e85b4388_Status>(nullptr);});
	});;
	if ((!(_1e77decbd_IsDir(_44213_info.ptr())))) {
		_1a53b1272_pushErr(_self_.ptr(), &((*(_42341_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_42341_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _45213_i = (_1ceabe615_FindLast((*(_42341_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _45313_ident = (*(_42341_decl)).get()._field_LinkPath.slice(_45213_i);;
	return jule::new_ptr<_1a53e27e2_ImportInfo>(_1a53e27e2_ImportInfo{._field_Token=(*(_42341_decl)).get()._field_Token, ._field_Path=_43117_path, ._field_LinkPath=(*(_42341_decl)).get()._field_LinkPath, ._field_Ident=_45313_ident, ._field_Alias=(*(_42341_decl)).get()._field_Alias, ._field_CppLinked=false, ._field_Std=false, ._field_ImportAll=(*(_42341_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1a53e574b_Package>(_1a53e574b_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b2a15_buildImport(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a4879164_UseDecl>* _47036_decl) {
	{
		
		if ((*(_47036_decl)).get()._field_CppLinked) {
			_case_begin_1a77e890a:;
			{
				return _1a53b20db_buildCppHeaderImport(_self_.ptr(), _47036_decl);;
			}
		}
		else if ((*(_47036_decl)).get()._field_Std) {
			_case_begin_1a77e8b4c:;
			{
				return _1a53b23e9_buildStdImport(_self_.ptr(), _47036_decl);;
			}
		}
		else {
			_case_begin_1a77e8212:;
			{
				return _1a53b2707_buildIdentImport(_self_, _47036_decl);;
			}
		}
		_match_end_1a77e8146:;
	};
}



inline jule::Bool _1a53b2d23_checkDuplicateUseDecl(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _48141_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a53e27e2_ImportInfo> _48313_lpkg = _1a5461d06_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>([=](jule::Ptr<_1a53e27e2_ImportInfo> _48348_spkg) mutable -> jule::Bool {
		return ((*(_48141_pkg)).get()._field_Path == _48348_spkg.get()._field_Path);;
	}));;
	if ((_48313_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1a53b1272_pushErr(_self_, &((*(_48141_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_48141_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1a53b1959_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1a53b3142_implImportSelections(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _49544_imp, jule::Ptr<_1a4879164_UseDecl>* _49567_decl) {
	(*(_49544_imp)).get()._field_Selected=(*(_49567_decl)).get()._field_Selected;
	{
		auto expr = &((*(_49544_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77ec4d0:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> _49716_item = *it;
			{
				{
					auto expr = &((*(_49544_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a77ecc1c:;
					if (it != expr_end) {
						jule::Ptr<_1ceee8973_Token> _49820_citem = *it;
						{
							if ((_49716_item == _49820_citem)) {
								goto _iter_end_1a77ecc1c;
							} else if ((_49716_item.get()._field_Kind == _49820_citem.get()._field_Kind)) {
								_1a53b1272_pushErr(_self_, &(_49716_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_49716_item.get()._field_Kind, &__jule_any_type5)}));
								_1a53b1959_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1a77ecc1c;
							};
						}
						_iter_next_1a77ecc1c:;
						++it;
						goto _iter_begin_1a77ecc1c;
					}
					_iter_end_1a77ecc1c:;
				};
			}
			_iter_next_1a77ec4d0:;
			++it;
			goto _iter_begin_1a77ec4d0;
		}
		_iter_end_1a77ec4d0:;
	};
}



inline jule::Str _1a53b3450_getAsLinkPath(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Str _51037_path) {
	if (_1ceaa4a18_HasPrefix(_51037_path, _1ceb54898_PathStdlib)) {
		(_51037_path).mut_slice(_1ceb54898_PathStdlib.len());;
		return (jule::Str("std", 3) + _1ceac3d23_Replace(_51037_path, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL));;
	};
	jule::Str _51614_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e869c9e3_Abs(_1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53ddcd8_GetModPath(_self_.get()._field_importer));
		_51614_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51037_path).mut_slice(_51614_root.len());;
	if ((_51037_path[0LL] == 47LLU)) {
		(_51037_path).mut_slice(1LL);;
	};
	return _1ceac3d23_Replace(_51037_path, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL);;
}



inline void _1a53b3818_pushCycleError(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a53b0903_symbolBuilder>* _52435_sb, jule::Str _52455_path, jule::Str* _52471_message) {
	;
	jule::Str _52613_refersTo = _1ceb4996a_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1a53b3450_getAsLinkPath(_self_, _1ceeee704_Dir((*(_52435_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1a53b3450_getAsLinkPath(_self_, _52455_path), &__jule_any_type5)}));;
	((*(_52471_message))).buffer.insert(0, (((_1ceaa53cb_Repeat(jule::Str(" ", 1), 4LL) + _52613_refersTo) + jule::Str("\n", 1))));;
}



inline void _1a53b3bd1_pushCrossCycleError(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a53b0903_symbolBuilder>* _53340_target, jule::Ptr<_1a53e27e2_ImportInfo>* _53365_imp, jule::Ptr<_1ceee8973_Token>* _53384_errorToken) {
	jule::Str _53417_message = jule::Str();;
	_1a53b3818_pushCycleError(_self_, &(_self_), (*(_53365_imp)).get()._field_Path, &(_53417_message));
	jule::Ptr<_1a53b0903_symbolBuilder> _53817_owner = _self_.get()._field_owner;;
	jule::Ptr<_1a53b0903_symbolBuilder> _53917_old = _self_;;
	while ((_53817_owner.get()._field_owner != nullptr)) {
		{
			_1a53b3818_pushCycleError(_self_, &(_53917_old.get()._field_owner), _1ceeee704_Dir(_53917_old.get()._field_table.get()._field_File.ptr()), &(_53417_message));
			if ((_53817_owner.get()._field_owner == (*(_53340_target)))) {
				_1a53b3818_pushCycleError(_self_, _53340_target, _1ceeee704_Dir(_53817_owner.get()._field_table.get()._field_File.ptr()), &(_53417_message));
				goto _iter_end_1a79a0694;
			};
			_53917_old=_53817_owner;
			_53817_owner=_53817_owner.get()._field_owner;
		}
	_iter_next_1a79a0694:;
	}
	_iter_end_1a79a0694:;;
	_1a53b1272_pushErr(_self_.ptr(), _53384_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_53417_message, &__jule_any_type5)}));
}



inline jule::Bool _1a53b4088_checkImportCycles(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a53e27e2_ImportInfo> _55637_imp, jule::Ptr<_1a4879164_UseDecl>* _55656_decl) {
	if ((_55637_imp.get()._field_Path == _1ceeee704_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1a53b1272_pushErr(_self_.ptr(), &((*(_55656_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1a53b3450_getAsLinkPath(_self_, _55637_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1ceeee704_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1a53b3bd1_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1a53b0903_symbolBuilder> _57117_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_1ceeee704_Dir(_57117_owner.get()._field_table.get()._field_File.ptr()) == _55637_imp.get()._field_Path)) {
		_1a53b3bd1_pushCrossCycleError(_self_, &(_57117_owner), &(_55637_imp), &((*(_55656_decl)).get()._field_Token));
		return false;;
	};
	if ((_57117_owner.get()._field_owner != nullptr)) {
		_57117_owner=_57117_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1a53b4473_checkPackageAccessibility(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a4879164_UseDecl>* _59245_decl, jule::Str* _59262_mod, jule::Str* _59273_path) {
	if (((_1a53deb74_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1a53ddcd8_GetModPath((*(_self_))._field_importer) != (*(_59262_mod))) && _1ceac2a7a_Contains((*(_59273_path)), jule::Str("internal", 8)))) {
		_1a53b1272_pushErr(_self_, &((*(_59245_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a53b483b_importPackage(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _59838_imp, jule::Ptr<_1a4879164_UseDecl>* _59861_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_59838_imp)).get()._field_CppLinked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53e27e2_ImportInfo> _60317_port = _1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53de404_GetImport(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path);;
	if ((_60317_port != nullptr)) {
		(*(_59838_imp)).get()._field_Package=_60317_port.get()._field_Package;
		(*(_59838_imp)).get()._field_Duplicate=true;
		jule::Str _60817_oldMod = _1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53ddcd8_GetModPath(_self_.get()._field_importer);;
		_1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53dda85_SetModPath(_self_.get()._field_importer, _1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53de0e6_ModById(_self_.get()._field_importer, (*(_59838_imp)).get()._field_ModId));
		_1a53b4473_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_60817_oldMod), &(_60317_port.get()._field_Path));
		_1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53dda85_SetModPath(_self_.get()._field_importer, _60817_oldMod);
	} else {
		if ((!(_1a53b4088_checkImportCycles(_self_, (*(_59838_imp)), _59861_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _61717_oldMod = _1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53ddcd8_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53dda85_SetModPath(_self_.get()._field_importer, _61717_oldMod);
		});;
		if ((*(_59838_imp)).get()._field_Std) {
			_1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53dda85_SetModPath(_self_.get()._field_importer, _1ceb54898_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1a3c1be0e_Ast>> _62222_asts;;
		jule::Slice<_1ceb4952a_Log> _62232_errors;;
		({
			__jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53de7ab_ImportPackage(_self_.get()._field_importer, (*(_59838_imp)).get()._field_Path, (!((*(_59838_imp)).get()._field_Std)));
			_62222_asts = __jule_assign_result.__jule_result_arg0;
			_62232_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_62232_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1a53b4473_checkPackageAccessibility(_self_.ptr(), _59861_decl, &(_61717_oldMod), &((*(_59838_imp)).get()._field_Path));
		{
			auto expr = &(_62222_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a79b2dd2:;
			if (it != expr_end) {
				jule::Ptr<_1a3c1be0e_Ast> _63025_ast = *it;
				{
					jule::Ptr<_1a54614cb_SymbolTable> _63125_table = nullptr;;
					({
						__jule_tuple_x_1a54614cb_SymbolTable__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a54adddb_buildSymbols(&(_63025_ast), &(_self_.get()._field_importer), _self_);
						_63125_table = __jule_assign_result.__jule_result_arg0;
						_62232_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_62232_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_62232_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_59838_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_59838_imp)).get()._field_Package.get()._field_Files,1);(*(_59838_imp)).get()._field_Package.get()._field_Files.__push(_63125_table);;
				}
				_iter_next_1a79b2dd2:;
				++it;
				goto _iter_begin_1a79b2dd2;
			}
			_iter_end_1a79b2dd2:;
		};
	};
	_1a53b3142_implImportSelections(_self_.ptr(), _59838_imp, _59861_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53b4b49_importUseDecl(jule::Ptr<_1a53b0903_symbolBuilder> _self_, jule::Ptr<_1a4879164_UseDecl>* _64538_decl) {
	jule::Ptr<_1a53e27e2_ImportInfo> _64617_imp = _1a53b2a15_buildImport(_self_, _64538_decl);;
	if ((_64617_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _65217_ok = _1a53b2d23_checkDuplicateUseDecl(_self_.ptr(), &(_64617_imp));;
	if ((!(_65217_ok))) {
		return nullptr;;
	};
	_65217_ok=_1a53b483b_importPackage(_self_, &(_64617_imp), _64538_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_64617_imp);;
	if (_65217_ok) {
		_1a53deb74_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1a53dea31_Imported(_self_.get()._field_importer, _64617_imp);
		return _64617_imp;;
	};
	return nullptr;;
}



inline void _1a53b4d25_importUseDecls(jule::Ptr<_1a53b0903_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79b7612:;
		if (it != expr_end) {
			jule::Ptr<_1a4879164_UseDecl> _66721_decl = *it;
			{
				_1a53b4b49_importUseDecl(_self_, &(_66721_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a79b7612;
				};
			}
			_iter_next_1a79b7612:;
			++it;
			goto _iter_begin_1a79b7612;
		}
		_iter_end_1a79b7612:;
	};
}



inline void _1a53b509a_appendNode(_1a53b0903_symbolBuilder* _self_, _1a3c1cc01_Node* _67634_node) {
	{
		auto &_match_expr{ (*(_67634_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a79b813a:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_1a53b03a3_buildImpl((*(_67634_node))._field_Data.cast_ptr<_1a487c8d7_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a79b9009:;
			{
				jule::Ptr<_1a5491594_TypeAlias> _68121_ta = _1a53abd3e_buildTypeAlias((*(_67634_node))._field_Data.cast_ptr<_1a4877c78_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_68121_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a79b9070:;
			{
				jule::Ptr<_1a487d19b_Struct> _68421_srct = _1a53ac69c_buildStruct((*(_67634_node))._field_Data.cast_ptr<_1a487bbc2_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_68421_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a79b90d6:;
			{
				jule::Ptr<_1a53a44c9_Fn> _68721_f = _1a53ad307_buildFn((*(_67634_node))._field_Data.cast_ptr<_1a4873438_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_68721_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a79b9823:;
			{
				jule::Ptr<_1a53b63cb_Trait> _69021_t = _1a53ad846_buildTrait((*(_67634_node))._field_Data.cast_ptr<_1a487c2cc_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69021_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a79b9889:;
			{
				jule::Ptr<_1a5418939_Var> _69321_v = _1a53aed64_buildVar((*(_67634_node))._field_Data.cast_ptr<_1a4874417_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_69321_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a79b9900:;
			{
				jule::Ptr<_1a53b8521_Enum> _69621_e = _1a53ae12c_buildEnum((*(_67634_node))._field_Data.cast_ptr<_1a487a110_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_69621_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a79b9966:;
			{
				jule::Ptr<_1a53b9b1b_TypeEnum> _69921_e = _1a53aeabc_buildTypeEnum((*(_67634_node))._field_Data.cast_ptr<_1a487b221_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_69921_e);;
			}
		}
		else {
			_case_begin_1a79b8de9:;
			{
				_1a53b1272_pushErr(_self_, &((*(_67634_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a79b8d94:;
	};
}



inline void _1a53b5276_appendNodes(_1a53b0903_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79c1d03:;
		if (it != expr_end) {
			_1a3c1cc01_Node _70721_node = *it;
			{
				_1a53b509a_appendNode(_self_, &(_70721_node));
			}
			_iter_next_1a79c1d03:;
			++it;
			goto _iter_begin_1a79c1d03;
		}
		_iter_end_1a79c1d03:;
	};
}



inline void _1a53b54eb_pushDirectivePass(_1a53b0903_symbolBuilder* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _71241_d) {
	if (((*(_71241_d)).get()._field_Args.len() == 0LL)) {
		_1a53b1272_pushErr(_self_, &((*(_71241_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_71241_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1ceee8973_Token> _71717_arg = (*(_71241_d)).get()._field_Args[1LL];;
		_1a53b1272_pushErr(_self_, &(_71717_arg), jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ceee8973_Token> _72113_arg = (*(_71241_d)).get()._field_Args[0LL];;
	if ((_72113_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a53b1272_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_72113_arg.get()._field_Kind[0LL] != '\"')) {
		_1a53b1272_pushErr(_self_, &(_72113_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_1a53ab459_Pass{._field_Token=(*(_71241_d)).get()._field_Tag, ._field_Text=_72113_arg.get()._field_Kind.slice(1LL, (_72113_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1a53b56c7_appendTopDirectives(_1a53b0903_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79c560e:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _73921_d = *it;
			{
				{
					auto &_match_expr{ _73921_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a79c8832:;
						{
							_1a53b54eb_pushDirectivePass(_self_, &(_73921_d));
						}
					}
					_match_end_1a79c87aa:;
				};
			}
			_iter_next_1a79c560e:;
			++it;
			goto _iter_begin_1a79c560e;
		}
		_iter_end_1a79c560e:;
	};
}



inline void _1a53b58a3_build(jule::Ptr<_1a53b0903_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1a54614cb_SymbolTable>(_1a54614cb_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1a53b56c7_appendTopDirectives(_self_.ptr());
	_1a53b4d25_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1a53b5276_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a53b0903_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a53b67c7_Str(_1a53b63cb_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a53b6ad5_Equal(jule::Ptr<_1a53b63cb_Trait> _self_, jule::Ptr<_1a5492287_TypeKind> _2521_other) {
	jule::Ptr<_1a53b63cb_Trait> _2613_trt = _1a5495cd5_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _1a53b6e48_IsBuiltin(_1a53b63cb_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53b7256_FindMethod(_1a53b63cb_Trait* _self_, jule::Str _3929_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79cc56c:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1a79cc56c:;
			++it;
			goto _iter_begin_1a79cc56c;
		}
		_iter_end_1a79cc56c:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53b63cb_Trait _Src) {
	_Stream << _1a53b67c7_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a53b7e16_AutoExpr(_1a53b7a2b_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53b7a2b_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a53b8884_Str(_1a53b8521_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a53b8b92_Equal(jule::Ptr<_1a53b8521_Enum> _self_, jule::Ptr<_1a5492287_TypeKind> _3821_other) {
	jule::Ptr<_1a53b8521_Enum> _3913_enm = _1a5494d5b_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1a53b7a2b_EnumItem> _1a53b90d2_FindItem(_1a53b8521_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79cebbd:;
		if (it != expr_end) {
			jule::Ptr<_1a53b7a2b_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1a79cebbd:;
			++it;
			goto _iter_begin_1a79cebbd;
		}
		_iter_end_1a79cebbd:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53b8521_Enum _Src) {
	_Stream << _1a53b8884_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53b9555_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a53b9e4b_Str(_1a53b9b1b_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1a53ba259_Equal(jule::Ptr<_1a53b9b1b_TypeEnum> _self_, jule::Ptr<_1a5492287_TypeKind> _8021_other) {
	jule::Ptr<_1a53b9b1b_TypeEnum> _8113_tenm = _1a54950c0_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1a53b9555_TypeEnumItem> _1a53ba655_FindItem(_1a53b9b1b_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79d1c8b:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9555_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1a79d1c8b:;
			++it;
			goto _iter_begin_1a79d1c8b;
		}
		_iter_end_1a79d1c8b:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53b9b1b_TypeEnum _Src) {
	_Stream << _1a53b9e4b_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1a53ea93d_Sema>*,jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*)> _1a53bc57a_readyFn(jule::Ptr<_1a53bc14b_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1a53ea93d_Sema>*,jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*)>([=](jule::Ptr<_1a53ea93d_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a79de00c:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1a486dca2_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1a5490a5a_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1a79de00c;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1a5492287_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a79e0ecb:;
						if (it != expr_end) {
							jule::Ptr<_1a48619a9_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1a5492287_TypeKind> _7229_kind = _1a5402c42_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1a54ad209_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type19) {
											_case_begin_1a79e31cb:;
											{
												jule::Ptr<_1a4862070_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1a4862070_IdentTypeDecl>(&__jule_any_type19);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1a53bd713_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(_7637_itd.get()._field_Ident), 6)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1a79e3176:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1a79e0ecb:;
							++it;
							goto _iter_begin_1a79e0ecb;
						}
						_iter_end_1a79e0ecb:;
					};
				}
				_iter_next_1a79de00c:;
				++it;
				_6418_i++;
				goto _iter_begin_1a79de00c;
			}
			_iter_end_1a79de00c:;
		};
		return true;;
	});;
}



inline jule::Bool _1a53bc7de_readyFi(jule::Ptr<_1a53bc14b_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1a540731d_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1a53bc57a_readyFn(_self_)));;
}



inline jule::Bool _1a53bca53_readySi(jule::Ptr<_1a53bc14b_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1a53bc57a_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1a53bccb7_ready(jule::Ptr<_1a53bc14b_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1a53bc7de_readyFi(_self_);;
	};
	return _1a53bca53_readySi(_self_);;
}



inline jule::Bool _1a53bd02b_check(jule::Ptr<_1a53bc14b_constraintChecker> _self_) {
	if ((!(_1a53bccb7_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79e9db4:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1a5490a5a_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1a79e9db4;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a79ea9db:;
					if (it != expr_end) {
						jule::Ptr<_1a5492287_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1a5496ed4_Prim> _12425_prim = _1a549461e_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1a5497ac8_IsConstraint(_12425_prim.ptr()))) {
								if (_1a53bd427_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1a79e9db4;
								};
								goto _iter_next_1a79ea9db;
							};
							if (_1a5492991_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1a79e9db4;
							};
						}
						_iter_next_1a79ea9db:;
						++it;
						goto _iter_begin_1a79ea9db;
					}
					_iter_end_1a79ea9db:;
				};
				_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1a79e9db4:;
			++it;
			_11914_i++;
			goto _iter_begin_1a79e9db4;
		}
		_iter_end_1a79e9db4:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53bc14b_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a53be47d_IsTraitImpl(_1a53be082_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1a53be6e2_IsStructImpl(_1a53be082_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53be082_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c40dc_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c44d8_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c47c4_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c4b48_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c4e34_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a53c574d_IsWhileNext(_1a53c53a7_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c53a7_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c5c8c_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c6188_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c6540_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c682b_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c6b17_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c6ebe_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c7442_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c77e9_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a53c8344_IsGenericTypeMatch(_1a53c7d38_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c7d38_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a53c8b4c_isDefault(_1a53c8883_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c8883_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c8e38_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c92ac_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c98b7_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53c9d3a_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53cb0d3_FindPackage(_1a53cab4e_scopeChecker* _self_, jule::Str _45430_ident) {
	return _1a53eae5a_FindPackage((*(_self_))._field_s.ptr(), _45430_ident);;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53cb3e1_SelectPackage(_1a53cab4e_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _46432_selector) {
	return _1a53eb268_SelectPackage((*(_self_))._field_s.ptr(), _46432_selector);;
}



inline jule::Ptr<_1a5418939_Var> _1a53cb798_FindVar(_1a53cab4e_scopeChecker* _self_, jule::Str _47526_ident, jule::Bool _47538_cpp_linked) {
	;
	jule::Ptr<_1a5418939_Var> _47817_v = _1a5463c70_findVar((*(_self_))._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);;
	if ((_47817_v != nullptr)) {
		return _47817_v;;
	};
	jule::Ptr<_1a53cab4e_scopeChecker> _48317_parent = (*(_self_))._field_parent;;
	while ((_48317_parent != nullptr)) {
		{
			_47817_v=_1a5463c70_findVar(_48317_parent.get()._field_table.ptr(), _47526_ident, _47538_cpp_linked, true);
			if ((_47817_v != nullptr)) {
				return _47817_v;;
			};
			_48317_parent=_48317_parent.get()._field_parent;
		}
	_iter_next_1a7a247e5:;
	}
	_iter_end_1a7a247e5:;;
	return _1a53eb620_FindVar((*(_self_))._field_s.ptr(), _47526_ident, _47538_cpp_linked);;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a53cbb50_FindTypeAlias(_1a53cab4e_scopeChecker* _self_, jule::Str _50232_ident, jule::Bool _50244_cppLinked) {
	;
	jule::Ptr<_1a5491594_TypeAlias> _50517_ta = _1a54641c1_findTypeAlias((*(_self_))._field_table.ptr(), _50232_ident, _50244_cppLinked, true);;
	if ((_50517_ta != nullptr)) {
		return _50517_ta;;
	};
	jule::Ptr<_1a53cab4e_scopeChecker> _51017_parent = (*(_self_))._field_parent;;
	while ((_51017_parent != nullptr)) {
		{
			_50517_ta=_1a54641c1_findTypeAlias(_51017_parent.get()._field_table.ptr(), _50232_ident, _50244_cppLinked, true);
			if ((_50517_ta != nullptr)) {
				return _50517_ta;;
			};
			_51017_parent=_51017_parent.get()._field_parent;
		}
	_iter_next_1a7a2c2ae:;
	}
	_iter_end_1a7a2c2ae:;;
	return _1a53eb9c7_FindTypeAlias((*(_self_))._field_s.ptr(), _50232_ident, _50244_cppLinked);;
}



inline jule::Ptr<_1a487d19b_Struct> _1a53cc007_FindStruct(_1a53cab4e_scopeChecker* _self_, jule::Str _52729_ident, jule::Bool _52741_cppLinked) {
	return _1a53ebd7e_FindStruct((*(_self_))._field_s.ptr(), _52729_ident, _52741_cppLinked);;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53cc3ae_FindFn(_1a53cab4e_scopeChecker* _self_, jule::Str _53625_ident, jule::Bool _53637_cppLinked) {
	return _1a53ec236_FindFn((*(_self_))._field_s.ptr(), _53625_ident, _53637_cppLinked);;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a53cc6bc_FindTrait(_1a53cab4e_scopeChecker* _self_, jule::Str _54528_ident) {
	return _1a53ec544_FindTrait((*(_self_))._field_s.ptr(), _54528_ident);;
}



inline jule::Ptr<_1a53b8521_Enum> _1a53cc9ca_FindEnum(_1a53cab4e_scopeChecker* _self_, jule::Str _55427_ident) {
	return _1a53ec852_FindEnum((*(_self_))._field_s.ptr(), _55427_ident);;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53cccd8_FindTypeEnum(_1a53cab4e_scopeChecker* _self_, jule::Str _56331_ident) {
	return _1a53ecb60_FindTypeEnum((*(_self_))._field_s.ptr(), _56331_ident);;
}



inline jule::Bool _1a53cd118_isUnsafe(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	jule::Ptr<_1a53cab4e_scopeChecker> _57117_scope = _self_;;
	_julec_label_iter:;
	if (_57117_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_57117_scope.get()._field_parent != nullptr)) {
		_57117_scope=_57117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1a53cd37c_isRoot(_1a53cab4e_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1a53cd558_stop(_1a53cab4e_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1a53cd7bc_stopped(_1a53cab4e_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1a53cda31_isDeferred(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	jule::Ptr<_1a53cab4e_scopeChecker> _60417_scope = _self_;;
	_julec_label_iter:;
	if (_60417_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_60417_scope.get()._field_parent != nullptr)) {
		_60417_scope=_60417_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53cdc95_getRoot(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	jule::Ptr<_1a53cab4e_scopeChecker> _62217_root = _self_;;
	while (((_62217_root.get()._field_parent != nullptr) && (_62217_root.get()._field_owner == nullptr))) {
		{
			_62217_root=_62217_root.get()._field_parent;
		}
	_iter_next_1a7a36708:;
	}
	_iter_end_1a7a36708:;;
	return _62217_root;;
}



inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53ce009_getHardRoot(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	jule::Ptr<_1a53cab4e_scopeChecker> _63217_root = _self_;;
	while ((_63217_root.get()._field_parent != nullptr)) {
		{
			_63217_root=_63217_root.get()._field_parent;
		}
	_iter_next_1a7a37929:;
	}
	_iter_end_1a7a37929:;;
	return _63217_root;;
}



inline jule::Ptr<_1a53c682b_Label> _1a53ce317_findLabel(_1a53cab4e_scopeChecker* _self_, jule::Str _64228_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a38463:;
		if (it != expr_end) {
			jule::Any _64321_st = *it;
			{
				{
					auto &_match_expr{ _64321_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1a7a38e7a:;
						{
							jule::Ptr<_1a53c682b_Label> _64625_label = _64321_st.cast_ptr<_1a53c682b_Label>(&__jule_any_type20);;
							if ((_64625_label.get()._field_Ident == _64228_ident)) {
								return _64625_label;;
							};
						}
					}
					_match_end_1a7a38d7b:;
				};
			}
			_iter_next_1a7a38463:;
			++it;
			goto _iter_begin_1a7a38463;
		}
		_iter_end_1a7a38463:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53c98b7_scopeLabel> _1a53ce625_findLabelScope(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Str _65834_ident) {
	jule::Ptr<_1a53c98b7_scopeLabel> _65917_label = _1a53ce933_findLabelAll(_self_.ptr(), _65834_ident);;
	if (((_65917_label != nullptr) && (_65917_label.get()._field_scope == _self_))) {
		return _65917_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53c98b7_scopeLabel> _1a53ce933_findLabelAll(_1a53cab4e_scopeChecker* _self_, jule::Str _67031_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a3b1ad:;
		if (it != expr_end) {
			jule::Ptr<_1a53c98b7_scopeLabel> _67121_lbl = *it;
			{
				if ((_67121_lbl.get()._field_label.get()._field_Ident == _67031_ident)) {
					return _67121_lbl;;
				};
			}
			_iter_next_1a7a3b1ad:;
			++it;
			goto _iter_begin_1a7a3b1ad;
		}
		_iter_end_1a7a3b1ad:;
	};
	return nullptr;;
}



inline jule::Bool _1a53cecda_isDuplicatedIdent(_1a53cab4e_scopeChecker* _self_, jule::Uintptr _68236_itself, jule::Str _68253_ident) {
	jule::Ptr<_1a5418939_Var> _68313_v = _1a53cb798_FindVar(_self_, _68253_ident, false);;
	if (((_68313_v != nullptr) && (static_cast<jule::Uintptr>(_68313_v) != _68236_itself))) {
		if ((_68313_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1a53eceb2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1a5491594_TypeAlias> _69113_ta = _1a53cbb50_FindTypeAlias(_self_, _68253_ident, false);;
	if (((_69113_ta != nullptr) && (static_cast<jule::Uintptr>(_69113_ta) != _68236_itself))) {
		if ((_69113_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_69113_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1a53eceb2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1a53d0060_checkVarDecl(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4874417_VarDecl> _70236_decl) {
	jule::Ptr<_1a5418939_Var> _70317_v = _1a53aed64_buildVar(_70236_decl);;
	_70317_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_70317_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_70317_v, &__jule_any_type8));;
	});;
	if (_1a53cecda_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_70317_v)), _70317_v.get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _70317_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_70317_v.get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a53cd558_stop(_self_.ptr());
		return;;
	};
	_1a540cc91_checkVarDecl(_self_.get()._field_s, &(_70317_v), jule::Trait<_1a54ad209_Lookup>(_self_, 0));
	if (((!(_1a5419066_IsTypeInferred(_70317_v.ptr()))) && ((_70317_v.get()._field_Kind == nullptr) || (_70317_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1a54113d2_checkTypeVar(_self_.get()._field_s, &(_70317_v), jule::Trait<_1a54ad209_Lookup>(_self_, 0));
}



inline void _1a53d02d5_checkTypeAliasDecl(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4877c78_TypeAliasDecl> _72642_decl) {
	jule::Ptr<_1a5491594_TypeAlias> _72717_ta = _1a53abd3e_buildTypeAlias(_72642_decl);;
	if (_1a53cecda_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72717_ta)), _72717_ta.get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _72717_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72717_ta.get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1a53cd558_stop(_self_.ptr());
		return;;
	};
	_1a5408ad3_checkTypeAliasDecl(_self_.get()._field_s, &(_72717_ta), jule::Trait<_1a54ad209_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_72717_ta);;
	if ((_72717_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1a53cd558_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1a53c40dc_Scope> _1a53d0549_getChild(_1a53cab4e_scopeChecker* _self_) {
	return jule::new_ptr<_1a53c40dc_Scope>(_1a53c40dc_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1a53d0912_checkChildSsc(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4871942_ScopeTree>* _75038_tree, jule::Ptr<_1a53c40dc_Scope>* _75061_s, jule::Ptr<_1a53cab4e_scopeChecker>* _75077_ssc) {
	(*(_75077_ssc)).get()._field_parent=_self_;
	_1a53da950_check((*(_75077_ssc)), _75038_tree, _75061_s);
}



inline jule::Ptr<_1a53c40dc_Scope> _1a53d0cb9_checkChildSc(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4871942_ScopeTree>* _75537_tree, jule::Ptr<_1a53cab4e_scopeChecker>* _75560_ssc) {
	jule::Ptr<_1a53c40dc_Scope> _75617_s = _1a53d0549_getChild(_self_.ptr());;
	_1a53d0912_checkChildSsc(_self_, _75537_tree, &(_75617_s), _75560_ssc);
	return _75617_s;;
}



inline jule::Ptr<_1a53c40dc_Scope> _1a53d10c7_checkChild(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4871942_ScopeTree>* _76135_tree) {
	jule::Ptr<_1a53cab4e_scopeChecker> _76217_ssc = _1a53dabb4_newChildChecker(_self_);;
	return _1a53d0cb9_checkChildSc(_self_, _76135_tree, &(_76217_ssc));;
}



inline void _1a53d134c_checkAnonScope(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4871942_ScopeTree> _76638_tree) {
	jule::Ptr<_1a53c40dc_Scope> _76717_s = _1a53d10c7_checkChild(_self_, &(_76638_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_76717_s, &__jule_any_type21));;
}



inline void _1a53d166b_processErrorCall(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel>* _77141_m, jule::Ptr<_1ceee8973_Token> _77172_err) {
	if (_1a53cda31_isDeferred(_self_)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a53cab4e_scopeChecker> _77617_root = _1a53cdc95_getRoot(_self_);;
	if ((!(_77617_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _77172_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77141_m)).get()._field_Func=_77617_root.get()._field_owner;
}



inline void _1a53d18e1_checkExpr(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4865eca_Expr> _78433_expr) {
	jule::Ptr<_1a5467d73_Eval> _78517_eval = _1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0));;
	_78517_eval.get()._field_ignored=true;
	jule::Ptr<_1a5466305_Data> _78717_d = _1a5483795_evalExpr(_78517_eval, _78433_expr);;
	if ((_78717_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78717_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a7a51beb:;
			{
				jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel> _79421_m = _78717_d.get()._field_Model.cast_ptr<_1a53a0591_BuiltinErrorCallExprModel>(&__jule_any_type22);;
				_1a53d166b_processErrorCall(_self_, &(_79421_m), _78433_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34) {
			_case_begin_1a7a51e0a:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_78717_d, &__jule_any_type23));;
			}
		}
		else {
			_case_begin_1a7a51d50:;
			{
				_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _78433_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7a51b63:;
	};
}



inline jule::Ptr<_1a53c44d8_If> _1a53d1bee_checkIf(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4876c77_If> _81431_i) {
	jule::Ptr<_1a53c40dc_Scope> _81517_s = _1a53d10c7_checkChild(_self_, &(_81431_i.get()._field_Scope));;
	jule::Ptr<_1a5466305_Data> _81717_d = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _81431_i.get()._field_Expr);;
	if ((_81717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5496ed4_Prim> _82217_prim = _1a549461e_Prim(_81717_d.get()._field_Kind.ptr());;
	if (((_82217_prim == nullptr) || (!(_1a5499ea4_IsBool(_82217_prim.ptr()))))) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _81431_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a53c44d8_If>(_1a53c44d8_If{._field_Expr=_81717_d.get()._field_Model, ._field_Scope=_81517_s});;
}



inline jule::Ptr<_1a53c47c4_Else> _1a53d200c_checkElse(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a487712e_Else> _83433_e) {
	return jule::new_ptr<_1a53c47c4_Else>(_1a53c47c4_Else{._field_Scope=_1a53d10c7_checkChild(_self_, &(_83433_e.get()._field_Scope))});;
}



inline void _1a53d2282_checkConditional(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a48775a2_Conditional> _84040_conditional) {
	jule::Ptr<_1a53c4b48_Conditional> _84117_c = jule::new_ptr<_1a53c4b48_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_84117_c, &__jule_any_type35));;
	_84117_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1a53c44d8_If>>::alloc(0LL, (_84040_conditional.get()._field_Tail.len() + 1LL));
	_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1a53d1bee_checkIf(_self_, _84040_conditional.get()._field_Head));;
	{
		auto expr = &(_84040_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a5b299:;
		if (it != expr_end) {
			jule::Ptr<_1a4876c77_If> _84721_elif = *it;
			{
				_84117_c.get()._field_Elifs = jule::alloc_for_append(_84117_c.get()._field_Elifs,1);_84117_c.get()._field_Elifs.__push(_1a53d1bee_checkIf(_self_, _84721_elif));;
			}
			_iter_next_1a7a5b299:;
			++it;
			goto _iter_begin_1a7a5b299;
		}
		_iter_end_1a7a5b299:;
	};
	if ((_84040_conditional.get()._field_Default != nullptr)) {
		_84117_c.get()._field_Default=_1a53d200c_checkElse(_self_, _84040_conditional.get()._field_Default);
	};
}



inline void _1a53d26e4_checkIterScopeSsc(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Uintptr _85637_it, jule::Ptr<_1a4871942_ScopeTree> _85654_tree, jule::Ptr<_1a53c40dc_Scope>* _85677_s, jule::Ptr<_1a53cab4e_scopeChecker> _85692_ssc) {
	_85692_ssc.get()._field_it=_85637_it;
	_1a53d0912_checkChildSsc(_self_, &(_85654_tree), _85677_s, &(_85692_ssc));
}



inline jule::Ptr<_1a53c40dc_Scope> _1a53d2b45_checkIterScopeSc(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Uintptr _86136_it, jule::Ptr<_1a4871942_ScopeTree> _86153_tree, jule::Ptr<_1a53cab4e_scopeChecker> _86175_ssc) {
	jule::Ptr<_1a53c40dc_Scope> _86217_scope = _1a53d0549_getChild(_self_.ptr());;
	_1a53d26e4_checkIterScopeSsc(_self_, _86136_it, _86153_tree, &(_86217_scope), _86175_ssc);
	return _86217_scope;;
}



inline jule::Ptr<_1a53c40dc_Scope> _1a53d2eec_checkIterScope(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Uintptr _86734_it, jule::Ptr<_1a4871942_ScopeTree>* _86752_tree) {
	jule::Ptr<_1a53cab4e_scopeChecker> _86817_ssc = _1a53dabb4_newChildChecker(_self_);;
	return _1a53d2b45_checkIterScopeSc(_self_, _86734_it, (*(_86752_tree)), _86817_ssc);;
}



inline void _1a53d3272_checkInfIter(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4874e2e_Iter>* _87237_it) {
	jule::Ptr<_1a53c4e34_InfIter> _87317_kind = jule::new_ptr<_1a53c4e34_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87317_kind, &__jule_any_type36));;
	_87317_kind.get()._field_Scope=_1a53d2eec_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87317_kind)), &((*(_87237_it)).get()._field_Scope));
}



inline void _1a53d34e7_checkWhileIter(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4874e2e_Iter>* _87839_it) {
	jule::Ptr<_1a4875704_WhileKind> _87917_wh = (*(_87839_it)).get()._field_Kind.cast_ptr<_1a4875704_WhileKind>(&__jule_any_type37);;
	if (((_87917_wh.get()._field_Expr == nullptr) && (_87917_wh.get()._field_Next == nullptr))) {
		_1a53d3272_checkInfIter(_self_, _87839_it);
		return;;
	};
	jule::Ptr<_1a53c53a7_WhileIter> _88517_kind = jule::new_ptr<_1a53c53a7_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_88517_kind, &__jule_any_type38));;
	_88517_kind.get()._field_Scope=_1a53d2eec_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88517_kind)), &((*(_87839_it)).get()._field_Scope));
	if ((_87917_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1a5466305_Data> _89021_d = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _87917_wh.get()._field_Expr);;
		if ((_89021_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1a5496ed4_Prim> _89517_prim = _1a549461e_Prim(_89021_d.get()._field_Kind.ptr());;
		if ((_89517_prim == nullptr)) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1a5499ea4_IsBool(_89517_prim.ptr())))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_87839_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88517_kind.get()._field_Expr=_89021_d.get()._field_Model;
	};
	if (_1a4875a56_IsWhileNext(_87917_wh.ptr())) {
		if ((!(_1a53c3619_isValidAstStForNextSt(&(_87917_wh.get()._field_Next))))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91517_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1a53d96eb_checkNode(_self_, &(_87917_wh.get()._field_Next));
		if ((_91517_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91825_st = _self_.get()._field_scope.get()._field_Stmts[_91517_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91517_n);
			if ((!(_1a53c38b1_isValidStForNextSt(&(_91825_st))))) {
				_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _87917_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88517_kind.get()._field_Next=_91825_st;
		};
	};
}



inline void _1a53d376c_checkRangeIter(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4874e2e_Iter>* _92839_it) {
	jule::Ptr<_1a4876095_RangeKind> _92917_rang = (*(_92839_it)).get()._field_Kind.cast_ptr<_1a4876095_RangeKind>(&__jule_any_type39);;
	jule::Ptr<_1a5466305_Data> _93117_d = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _92917_rang.get()._field_Expr);;
	if ((_93117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1a53c5c8c_RangeIter> _93617_kind = jule::new_ptr<_1a53c5c8c_RangeIter>(_1a53c5c8c_RangeIter{._field_Expr=_93117_d, });;
	_1a545c582_rangeChecker _94017_rc = _1a545c582_rangeChecker{._field_sc=_self_, ._field_rang=_92917_rang, ._field_Kind=_93617_kind, ._field_d=_93117_d};;
	jule::Bool _94613_ok = _1a545de46_check(&_94017_rc);;
	if ((!(_94613_ok))) {
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_93617_kind, &__jule_any_type40));;
	jule::Ptr<_1a53cab4e_scopeChecker> _95317_ssc = _1a53dabb4_newChildChecker(_self_);;
	jule::Ptr<_1a53c40dc_Scope> _95417_scope = _1a53d0549_getChild(_self_.ptr());;
	if ((_93617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1a53eceb2_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a53cecda_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyA.get()._field_Ident))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyA.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyA);;
	};
	if ((_93617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1a53eceb2_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1a53cecda_isDuplicatedIdent(_self_.ptr(), 0LLU, _93617_kind.get()._field_KeyB.get()._field_Ident))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _93617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_93617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_93617_kind.get()._field_KeyB.get()._field_Scope=_95417_scope;
		_95317_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_95317_ssc.get()._field_table.get()._field_Vars,1);_95317_ssc.get()._field_table.get()._field_Vars.__push(_93617_kind.get()._field_KeyB);;
	};
	_1a53d26e4_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_93617_kind)), (*(_92839_it)).get()._field_Scope, &(_95417_scope), _95317_ssc);
	_93617_kind.get()._field_Scope=_95417_scope;
}



inline void _1a53d39e2_checkIter(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4874e2e_Iter> _97833_it) {
	if (_1a4875281_IsInf(_97833_it.ptr())) {
		_1a53d3272_checkInfIter(_self_, &(_97833_it));
		return;;
	};
	{
		auto &_match_expr{ _97833_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a7a761e8:;
			{
				_1a53d34e7_checkWhileIter(_self_, &(_97833_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a7a76d75:;
			{
				_1a53d376c_checkRangeIter(_self_, &(_97833_it));
			}
		}
		else {
			_case_begin_1a7a760c7:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a7a76072:;
	};
}



inline jule::Bool _1a53d3d00_checkValidContLabel(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Uintptr _99439_it) {
	jule::Ptr<_1a53cab4e_scopeChecker> _99517_scope = _self_;;
	_julec_label_iter:;
	if ((_99517_scope.get()._field_it == _99439_it)) {
		return true;;
	};
	if ((_99517_scope.get()._field_parent != nullptr)) {
		_99517_scope=_99517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1a53d410d_checkValidBreakLabel(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Uintptr _101040_ptr) {
	jule::Ptr<_1a53cab4e_scopeChecker> _101117_scope = _self_;;
	_julec_label_iter:;
	if ((_101117_scope.get()._field_it == _101040_ptr)) {
		return true;;
	};
	if ((_101117_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _101917_mtch = static_cast<jule::Uintptr>(((_1a53c8883_Case*)(_101117_scope.get()._field_cse))->_field_Owner);;
		if ((_101917_mtch == _101040_ptr)) {
			return true;;
		};
	};
	if ((_101117_scope.get()._field_parent != nullptr)) {
		_101117_scope=_101117_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1a53c6188_ContSt> _1a53d441b_checkContValidScope(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4876804_ContSt> _103339_c) {
	if (_1a53cda31_isDeferred(_self_)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_103339_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1a53c6188_ContSt>();;
	};
	jule::Ptr<_1a53cab4e_scopeChecker> _104317_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_104317_scope.get()._field_it == 0LLU) && (_104317_scope.get()._field_parent != nullptr)) && (_104317_scope.get()._field_owner == nullptr))) {
			_case_begin_1a7a7de7b:;
			{
				_104317_scope=_104317_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_104317_scope.get()._field_it != 0LLU)) {
			_case_begin_1a7a7e003:;
			{
				return jule::new_ptr<_1a53c6188_ContSt>(_1a53c6188_ContSt{._field_It=_104317_scope.get()._field_it});;
			}
		}
		_match_end_1a7a7ddc1:;
	};
	_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _103339_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a53d4691_checkCont(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4876804_ContSt> _105729_c) {
	jule::Ptr<_1a53c6188_ContSt> _105817_cont = _1a53d441b_checkContValidScope(_self_, _105729_c);;
	if ((_105817_cont == nullptr)) {
		return;;
	};
	if ((_105729_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1a53c98b7_scopeLabel> _106421_label = _1a53c17e3_findLabelParent(_105729_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_106421_label == nullptr)) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_106421_label.get()._field_used=true;
		if (((_106421_label.get()._field_pos + 1LL) >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _107717_i = (_106421_label.get()._field_pos + 1LL);;
		if ((_107717_i >= _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _108125_st = _106421_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_107717_i];;
			{
				auto &_match_expr{ _108125_st };
				
				if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1a7a85b97:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36)));
					}
				}
				else if (_match_expr.type == &__jule_any_type40) {
					_case_begin_1a7a8754a:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1a53c5c8c_RangeIter>(&__jule_any_type40)));
					}
				}
				else if (_match_expr.type == &__jule_any_type38) {
					_case_begin_1a7a875b1:;
					{
						_105817_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_108125_st.cast_ptr<_1a53c53a7_WhileIter>(&__jule_any_type38)));
					}
				}
				else {
					_case_begin_1a7a873c4:;
					{
						_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1a7a8736e:;
			};
		};
	};
	if ((_105817_cont.get()._field_It != 0LLU)) {
		if ((!(_1a53d3d00_checkValidContLabel(_self_, _105817_cont.get()._field_It)))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _105729_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_105729_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_105817_cont, &__jule_any_type41));;
}



inline void _1a53d4916_checkLabel(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a486e159_LabelSt> _110434_l) {
	if ((_1a53ce317_findLabel(_self_.ptr(), _110434_l.get()._field_Ident) != nullptr)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _110434_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_110434_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1a53c682b_Label> _111017_label = jule::new_ptr<_1a53c682b_Label>(_1a53c682b_Label{._field_Ident=_110434_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_111017_label, &__jule_any_type20));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a53c98b7_scopeLabel>>::make({jule::new_ptr<_1a53c98b7_scopeLabel>(_1a53c98b7_scopeLabel{._field_token=_110434_l.get()._field_Token, ._field_label=_111017_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1a53d4b8b_pushGoto(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a486e511_GotoSt> _112332_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1a53c6b17_GotoSt>(_1a53c6b17_GotoSt{._field_Ident=_112332_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type42));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a53c9d3a_scopeGoto>>::make({jule::new_ptr<_1a53c9d3a_scopeGoto>(_1a53c9d3a_scopeGoto{._field_gt=_112332_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1a53d4e11_checkPostfix(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4870446_AssignSt> _113536_a) {
	if ((_113536_a.get()._field_Left.len() > 1LL)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4865eca_Expr> _114117_expr = _113536_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1a5466305_Data> _114217_d = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _114117_expr);;
	if ((_114217_d == nullptr)) {
		return;;
	};
	_1a53c3372_checkAssign(&(_self_.get()._field_s), &(_114217_d), nullptr, _113536_a.get()._field_Setter);
	if ((_1a5494ae7_Ptr(_114217_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a549dccc_Ptr> _115021_ptr = _1a5494ae7_Ptr(_114217_d.get()._field_Kind.ptr());;
		if (_1a549e7a0_IsUnsafe(_115021_ptr.ptr())) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1a549461e_Prim(_114217_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a53899ba_IsNum(_1a549461e_Prim(_114217_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _113536_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_113536_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str(_114217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1a53c6ebe_Postfix>(_1a53c6ebe_Postfix{._field_Expr=_114217_d.get()._field_Model, ._field_Op=_113536_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type43));;
}



inline jule::Bool _1a53d521e_isNewAssignIdent(_1a53cab4e_scopeChecker* _self_, jule::Str _116835_ident) {
	if ((_1ceeeb217_IsIgnoreIdent(_116835_ident) || _116835_ident.empty())) {
		return false;;
	};
	return (_1a5464578_defByIdent((*(_self_))._field_table.ptr(), _116835_ident, false) == nullptr);;
}



inline jule::Bool _1a53d5670_checkStructureAssignOp(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a487d575_StructIns>* _117547_s, jule::Ptr<_1a4870446_AssignSt>* _117567_a, jule::Ptr<_1a5466305_Data>* _117586_r) {
	jule::Ptr<_1a53a717a_FnIns> _117817_overload = nullptr;;
	{
		auto &_match_expr{ (*(_117567_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1a7a99282:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1a7a9a5e6:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1a7a9a65c:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1a7a9a6c3:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1a7a996c2:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1a7a99738:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1a7a9979e:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1a7a99815:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1a7a9a8b0:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1a7a9a926:;
			{
				_117817_overload=(*(_117547_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a7a9965b:;
			{
				_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a484cd5d_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1a7a990b7:;
	};
	if ((_117817_overload == nullptr)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_117567_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_117567_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1a484cd5d_Str((*(_117547_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1a53a62ab_ParamIns> _121017_p = _117817_overload.get()._field_Params[1LL];;
	return _1a54054d6_checkAssignType(_self_.get()._field_s, _121017_p.get()._field_Decl.get()._field_Reference, &(_121017_p.get()._field_Kind), _117586_r, (*(_117567_a)).get()._field_Setter);;
}



inline void _1a53d58e5_checkSingleAssign(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4870446_AssignSt>* _121442_a) {
	jule::Ptr<_1a5466305_Data> _121517_l = nullptr;;
	if ((!(_1ceeeb217_IsIgnoreIdent((*(_121442_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1a4865eca_Expr> _121821_expr = (*(_121442_a)).get()._field_Left[0LL].get()._field_Expr;;
		_121517_l=_1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _121821_expr);
		if ((_121517_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a5467d73_Eval> _122517_eval = nullptr;;
	if ((_121517_l != nullptr)) {
		_122517_eval=_1a5404bcd_evalp(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0), _121517_l.get()._field_Kind);
	} else {
		_122517_eval=_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0));
	};
	_122517_eval.get()._field_unsafety=_1a53cd118_isUnsafe(_self_);
	jule::Ptr<_1a5466305_Data> _123217_r = _1a5483795_evalExpr(_122517_eval, (*(_121442_a)).get()._field_Right);;
	if ((_123217_r == nullptr)) {
		return;;
	};
	if ((_121517_l == nullptr)) {
		if (_1a5493431_Void(_123217_r.get()._field_Kind.ptr())) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_123217_r, &__jule_any_type23));;
		return;;
	};
	if ((!(_1a53c3372_checkAssign(&(_self_.get()._field_s), &(_121517_l), _123217_r, (*(_121442_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1a54962ad_Tup(_123217_r.get()._field_Kind.ptr()) != nullptr)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_121442_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5395ce5_OperandExprModel> _125417_lm = jule::new_ptr<_1a5395ce5_OperandExprModel>(_1a5395ce5_OperandExprModel{._field_Kind=_121517_l.get()._field_Kind, ._field_Model=_121517_l.get()._field_Model});;
	jule::Ptr<_1a5395ce5_OperandExprModel> _125817_rm = jule::new_ptr<_1a5395ce5_OperandExprModel>(_1a5395ce5_OperandExprModel{._field_Kind=_123217_r.get()._field_Kind, ._field_Model=_123217_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1a53c7442_Assign>(_1a53c7442_Assign{._field_L=_125417_lm, ._field_R=_125817_rm, ._field_Op=(*(_121442_a)).get()._field_Setter}), &__jule_any_type44));;
	if (((*(_121442_a)).get()._field_Setter.get()._field_Kind != jule::Str("=", 1))) {
		jule::Ptr<_1a487d575_StructIns> _126521_strct = _1a5495a71_Struct(_121517_l.get()._field_Kind.ptr());;
		if ((_126521_strct != nullptr)) {
			_1a53d5670_checkStructureAssignOp(_self_, &(_126521_strct), _121442_a, &(_123217_r));
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind=(*(_121442_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_121442_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1a54859a6_binaryEval _127221_solver = static__1a54863be_new(_122517_eval, (*(_121442_a)).get()._field_Setter);;
		_123217_r=_1a548b22b_solveExplicit(&_127221_solver, &(_121517_l), &(_123217_r));
		if ((_123217_r == nullptr)) {
			return;;
		};
		(*(_121442_a)).get()._field_Setter.get()._field_Kind+=jule::Str("=", 1);
		return;;
	};
	_1a5451be7_assignTypeChecker _128117_checker = _1a5451be7_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_121517_l.get()._field_Kind, ._field_d=_123217_r, ._field_errorToken=(*(_121442_a)).get()._field_Setter};;
	if (_1a5452d6e_check(&_128117_checker)) {
		_125817_rm.get()._field_Model=_123217_r.get()._field_Model;
		_125417_lm.get()._field_Model=_121517_l.get()._field_Model;
	};
}



inline void _1a53d5e23_processEndPartOfMultiAssign(_1a53cab4e_scopeChecker* _self_, jule::Ptr<_1a53c77e9_MultiAssign>* _129351_st, jule::Ptr<_1a4870446_AssignSt>* _129414_a, jule::Ptr<_1a486ee07_AssignLeft>* _129433_lexpr, jule::Ptr<_1a5466305_Data>* _129458_l, jule::Ptr<_1a5466305_Data>* _129473_r) {
	if (((!((*(_129433_lexpr)).get()._field_Reference)) && _1ceeeb217_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident))) {
		if (_1a5493431_Void((*(_129473_r)).get()._field_Kind.ptr())) {
			_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_129414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_129414_a)).get()._field_Declarative && ((*(_129433_lexpr)).get()._field_Reference || _1a53d521e_isNewAssignIdent(_self_, (*(_129433_lexpr)).get()._field_Ident)))) {
		if (_1a53cecda_isDuplicatedIdent(_self_, 0LLU, (*(_129433_lexpr)).get()._field_Ident)) {
			_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1a53ed91e_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1a53cd558_stop(_self_);
			return;;
		};
		if (_1ceeeb217_IsIgnoreIdent((*(_129433_lexpr)).get()._field_Ident)) {
			_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a5418939_Var> _131521_v = jule::new_ptr<_1a5418939_Var>(_1a5418939_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_129433_lexpr)).get()._field_Token, ._field_Ident=(*(_129433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_129433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_129433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Expr=(*(_129414_a)).get()._field_Right, ._field_Data=(*(_129473_r))}), });;
		_1a54110b3_checkVar((*(_self_))._field_s, &(_131521_v));
		_131521_v.get()._field_Value=nullptr;
		(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push(jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_131521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_131521_v.get()._field_Mutable, ._field_Reference=_131521_v.get()._field_Reference, ._field_Lvalue=(!(_131521_v.get()._field_Constant)), ._field_Model=jule::Any(_131521_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_131521_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_131521_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_129433_lexpr)).get()._field_Mutable || (*(_129433_lexpr)).get()._field_Reference)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_129433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_129433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1a53c3372_checkAssign(&((*(_self_))._field_s), _129458_l, (*(_129473_r)), (*(_129414_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1a54083eb_checkValidityForInitExpr((*(_self_))._field_s, (*(_129458_l)).get()._field_Mutable, false, &((*(_129458_l)).get()._field_Kind), _129473_r, &((*(_129414_a)).get()._field_Setter));
	_1a5451be7_assignTypeChecker _135817_checker = _1a5451be7_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_129458_l)).get()._field_Kind, ._field_d=(*(_129473_r)), ._field_errorToken=(*(_129414_a)).get()._field_Setter};;
	_1a5452d6e_check(&_135817_checker);
	(*(_129351_st)).get()._field_L = jule::alloc_for_append((*(_129351_st)).get()._field_L,1);(*(_129351_st)).get()._field_L.__push((*(_129458_l)));;
}



inline void _1a53d61a9_checkMultiAssign(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4870446_AssignSt>* _136841_a) {
	jule::Ptr<_1a5466305_Data> _136917_rd = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), (*(_136841_a)).get()._field_Right);;
	if ((_136917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a5466305_Data>> _137317_right = _1a53c25a2_getDatasFromTupleData(&(_136917_rd));;
	if ((_137317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _137317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1a7abb1b6:;
				{
					jule::Ptr<_1a5398952_IndexingExprModel> _137725_iem = _137317_right[0LL].get()._field_Model.cast_ptr<_1a5398952_IndexingExprModel>(&__jule_any_type45);;
					if ((_1a5496049_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_137317_right=jule::Slice<jule::Ptr<_1a5466305_Data>>::make({jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_1a5496049_Map(_137725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), })});
					};
				}
			}
			_match_end_1a7abb161:;
		};
	};
	{
		
		if (((*(_136841_a)).get()._field_Left.len() > _137317_right.len())) {
			_case_begin_1a7abb4e6:;
			{
				_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_136841_a)).get()._field_Left.len() < _137317_right.len())) {
			_case_begin_1a7abb55c:;
			{
				_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_136841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a7abd394:;
	};
	jule::Ptr<_1a53c77e9_MultiAssign> _139617_st = jule::new_ptr<_1a53c77e9_MultiAssign>(_1a53c77e9_MultiAssign{._field_R=_136917_rd.get()._field_Model});;
	{
		auto expr = &((*(_136841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ac06c6:;
		if (it != expr_end) {
			jule::I64 _139913_i = it - expr->begin();
			{
				jule::Ptr<_1a486ee07_AssignLeft> _140021_lexpr = (*(_136841_a)).get()._field_Left[_139913_i];;
				jule::Ptr<_1a5466305_Data> _140121_l = nullptr;;
				if (((!(_1ceeeb217_IsIgnoreIdent(_140021_lexpr.get()._field_Ident))) && ((!((*(_136841_a)).get()._field_Declarative)) || (!(_1a53d521e_isNewAssignIdent(_self_.ptr(), _140021_lexpr.get()._field_Ident)))))) {
					_140121_l=_1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _140021_lexpr.get()._field_Expr);
					if ((_140121_l == nullptr)) {
						goto _iter_next_1a7ac06c6;
					};
				};
				jule::Ptr<_1a5466305_Data> _140921_r = _137317_right[_139913_i];;
				_1a53d5e23_processEndPartOfMultiAssign(_self_.ptr(), &(_139617_st), _136841_a, &(_140021_lexpr), &(_140121_l), &(_140921_r));
			}
			_iter_next_1a7ac06c6:;
			++it;
			_139913_i++;
			goto _iter_begin_1a7ac06c6;
		}
		_iter_end_1a7ac06c6:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_139617_st, &__jule_any_type46));;
}



inline void _1a53d642e_checkAssignSt(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4870446_AssignSt> _141537_a) {
	{
		
		if (_1ceeed2b3_IsPostfixOp(_141537_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1a7ac4752:;
			{
				_1a53d4e11_checkPostfix(_self_, _141537_a);
			}
		}
		else if (((_141537_a.get()._field_Left.len() == 1LL) && (!(_141537_a.get()._field_Declarative)))) {
			_case_begin_1a7ac4455:;
			{
				_1a53d58e5_checkSingleAssign(_self_, &(_141537_a));
			}
		}
		else {
			_case_begin_1a7ac3d6c:;
			{
				_1a53d61a9_checkMultiAssign(_self_, &(_141537_a));
			}
		}
		_match_end_1a7ac3ca1:;
	};
}



inline jule::Ptr<_1a53c40dc_Scope> _1a53d67d6_checkCaseScope(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a53c8883_Case>* _142635_c, jule::Ptr<_1a4871942_ScopeTree>* _142650_tree) {
	jule::Ptr<_1a53cab4e_scopeChecker> _142717_ssc = _1a53dabb4_newChildChecker(_self_);;
	_142717_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142635_c))));
	return _1a53d0cb9_checkChildSc(_self_, _142650_tree, &(_142717_ssc));;
}



inline jule::Ptr<_1a53c8883_Case> _1a53d6cd1_checkCase(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a53c7d38_Match> _143233_m, jule::I64 _143244_i, jule::Ptr<_1a48781eb_Case> _143256_c, jule::Ptr<_1a5466305_Data> _143275_expr) {
	jule::Ptr<_1a53c8883_Case> _143317_case = _143233_m.get()._field_Cases[_143244_i];;
	_143317_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1a5466305_Data>>::alloc(0LL, _143256_c.get()._field_Exprs.len());
	jule::Bool _143517_genericMatched = false;;
	jule::Ptr<_1a5467d73_Eval> _143617_eval = _1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0));;
	{
		auto expr = &(_143256_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ac9218:;
		if (it != expr_end) {
			jule::Ptr<_1a4865eca_Expr> _143721_e = *it;
			{
				jule::Ptr<_1a5466305_Data> _143821_d = _1a5483179_evalExprKind(_143617_eval, _143721_e.get()._field_Kind);;
				if ((_143821_d == nullptr)) {
					goto _iter_next_1a7ac9218;
				};
				if (_143233_m.get()._field_TypeMatch) {
					_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
					if ((_1a53c230a_countMatchType(&(_143233_m), &(_143821_d.get()._field_Kind)) > 1LL)) {
						_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_143821_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_143275_expr.get()._field_Kind.get()._field_Generic) {
						_143517_genericMatched=(_143517_genericMatched || _1a5492991_Equal(_143275_expr.get()._field_Kind, _143821_d.get()._field_Kind));
					} else {
						if ((_1a54950c0_TypeEnum(_143275_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1a5405937_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
						} else {
							jule::Ptr<_1a53b63cb_Trait> _145329_trt = _1a5495cd5_Trait(_143275_expr.get()._field_Kind.ptr());;
							if ((_145329_trt != nullptr)) {
								_1a5405937_checkTypeCompatibility(_self_.get()._field_s, &(_143275_expr.get()._field_Kind), &(_143821_d.get()._field_Kind), &(_143721_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1a7ac9218;
				};
				if (_143821_d.get()._field_Decl) {
					_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _143721_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1a7ac9218;
				};
				_143317_case.get()._field_Exprs = jule::alloc_for_append(_143317_case.get()._field_Exprs,1);_143317_case.get()._field_Exprs.__push(_143821_d);;
				_1a5451be7_assignTypeChecker _147121_checker = _1a5451be7_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_143275_expr.get()._field_Kind, ._field_d=_143821_d, ._field_errorToken=_143721_e.get()._field_Token};;
				_1a5452d6e_check(&_147121_checker);
			}
			_iter_next_1a7ac9218:;
			++it;
			goto _iter_begin_1a7ac9218;
		}
		_iter_end_1a7ac9218:;
	};
	if ((((!(_143233_m.get()._field_TypeMatch)) || (!(_143275_expr.get()._field_Kind.get()._field_Generic))) || _143517_genericMatched)) {
		_143317_case.get()._field_Scope=_1a53d67d6_checkCaseScope(_self_, &(_143317_case), &(_143256_c.get()._field_Scope));
	};
	return _143317_case;;
}



inline void _1a53d7199_checkCases(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a48788c2_MatchCase>* _148535_m, jule::Ptr<_1a53c7d38_Match> _148554_rm, jule::Ptr<_1a5466305_Data> _148570_expr) {
	_148554_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1a53c8883_Case>>::alloc(0LL, (*(_148535_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ad262d:;
		if (it != expr_end) {
			jule::I64 _148713_i = it - expr->begin();
			{
				jule::Ptr<_1a53c8883_Case> _148821_case = jule::new_ptr<_1a53c8883_Case>(_1a53c8883_Case{._field_Owner=_148554_rm, });;
				if ((_148713_i > 0LL)) {
					_148554_rm.get()._field_Cases[(_148713_i - 1LL)].get()._field_Next=_148821_case;
				};
				_148554_rm.get()._field_Cases = jule::alloc_for_append(_148554_rm.get()._field_Cases,1);_148554_rm.get()._field_Cases.__push(_148821_case);;
			}
			_iter_next_1a7ad262d:;
			++it;
			_148713_i++;
			goto _iter_begin_1a7ad262d;
		}
		_iter_end_1a7ad262d:;
	};
	if (((_148554_rm.get()._field_Default != nullptr) && ((*(_148535_m)).get()._field_Cases.len() > 0LL))) {
		_148554_rm.get()._field_Cases[(_148554_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_148554_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_148535_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ad5ae8:;
		if (it != expr_end) {
			jule::I64 _150114_i = it - expr->begin();
			jule::Ptr<_1a48781eb_Case> _150121_c = *it;
			{
				_1a53d6cd1_checkCase(_self_, _148554_rm, _150114_i, _150121_c, _148570_expr);
			}
			_iter_next_1a7ad5ae8:;
			++it;
			_150114_i++;
			goto _iter_begin_1a7ad5ae8;
		}
		_iter_end_1a7ad5ae8:;
	};
}



inline jule::Ptr<_1a53c8883_Case> _1a53d7551_checkDefault(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a53c7d38_Match> _150636_m, jule::Ptr<_1a487712e_Else> _150651_d) {
	jule::Ptr<_1a53c8883_Case> _150717_def = jule::new_ptr<_1a53c8883_Case>(_1a53c8883_Case{._field_Owner=_150636_m, });;
	_150717_def.get()._field_Scope=_1a53d67d6_checkCaseScope(_self_, &(_150717_def), &(_150651_d.get()._field_Scope));
	return _150717_def;;
}



inline void _1a53d77c6_checkComptimePanic(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a53c40dc_Scope>* _151439_s) {
	if (((*(_151439_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _151913_stmt = (*(_151439_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _151913_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a7ad8cb6:;
			{
				jule::Ptr<_1a5466305_Data> _152217_d = _151913_stmt.cast_ptr<_1a5466305_Data>(&__jule_any_type23);;
				{
					auto &_match_expr{ _152217_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type29) {
						_case_begin_1a7ad9a97:;
						{
							jule::Ptr<_1a539d209_BuiltinPanicCallExprModel> _152521_m = _152217_d.get()._field_Model.cast_ptr<_1a539d209_BuiltinPanicCallExprModel>(&__jule_any_type29);;
							{
								auto &_match_expr{ _152521_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type47) {
									_case_begin_1a7adaa32:;
									{
										jule::Ptr<_1a5389ec6_Const> _152825_c = _152521_m.get()._field_Expr.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
										if (_1a538e3a4_IsStr(_152825_c.ptr())) {
											jule::Ptr<_1a53cab4e_scopeChecker> _153033_root = _1a53ce009_getHardRoot(_self_);;
											_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _153033_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1a538c00b_ReadStr(_152825_c.ptr()), &__jule_any_type5)}));
										};
									}
								}
								_match_end_1a7ada823:;
							};
						}
					}
					_match_end_1a7ad969b:;
				};
			}
		}
		_match_end_1a7ad8c61:;
	};
}



inline void _1a53d7ae5_pushTypeMatch(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a53c7d38_Match> _153837_tm, jule::Ptr<_1a48788c2_MatchCase>* _153854_m) {
	if (_153837_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic) {
		{
			auto expr = &(_153837_tm.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7ad9ec6:;
			if (it != expr_end) {
				jule::Ptr<_1a53c8883_Case> _154225_c = *it;
				{
					if ((_154225_c.get()._field_Scope != nullptr)) {
						_1a53d77c6_checkComptimePanic(_self_, &(_154225_c.get()._field_Scope));
						_153837_tm.get()._field_Default=_154225_c;
						_153837_tm.get()._field_Cases=nullptr;
						goto _julec_label_push;
					};
				}
				_iter_next_1a7ad9ec6:;
				++it;
				goto _iter_begin_1a7ad9ec6;
			}
			_iter_end_1a7ad9ec6:;
		};
		if (((*(_153854_m)).get()._field_Default != nullptr)) {
			_153837_tm.get()._field_Cases=nullptr;
			_153837_tm.get()._field_Default=_1a53d7551_checkDefault(_self_, _153837_tm, (*(_153854_m)).get()._field_Default);
			if ((_153837_tm.get()._field_Default != nullptr)) {
				_1a53d77c6_checkComptimePanic(_self_, &(_153837_tm.get()._field_Default.get()._field_Scope));
			};
		};
	};
	_julec_label_push:;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_153837_tm, &__jule_any_type48));;
}



inline void _1a53d7d6a_checkTypeMatch(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a48788c2_MatchCase>* _156239_m) {
	jule::Ptr<_1a5466305_Data> _156317_d = _1a5483487_eval(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), (*(_156239_m)).get()._field_Expr);;
	if ((_156317_d == nullptr)) {
		return;;
	};
	if (((!(_156317_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1a549461e_Prim(_156317_d.get()._field_Kind.ptr()) != nullptr) && _1a549a47c_IsAny(_1a549461e_Prim(_156317_d.get()._field_Kind.ptr()).ptr())) || (_1a5495cd5_Trait(_156317_d.get()._field_Kind.ptr()) != nullptr)) || (_1a54950c0_TypeEnum(_156317_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_156239_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a53c7d38_Match> _157417_tm = jule::new_ptr<_1a53c7d38_Match>(_1a53c7d38_Match{._field_Expr=_156317_d, ._field_TypeMatch=true, });;
	if (((!(_157417_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_156239_m)).get()._field_Default != nullptr))) {
		_157417_tm.get()._field_Default=_1a53d7551_checkDefault(_self_, _157417_tm, (*(_156239_m)).get()._field_Default);
	};
	_1a53d7199_checkCases(_self_, _156239_m, _157417_tm, _156317_d);
	_1a53d7ae5_pushTypeMatch(_self_, _157417_tm, _156239_m);
}



inline void _1a53d80e0_checkCommonMatch(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a48788c2_MatchCase>* _158741_m) {
	jule::Ptr<_1a5466305_Data> _158817_d = nullptr;;
	if (((*(_158741_m)).get()._field_Expr == nullptr)) {
		_158817_d=jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Constant=static__1a538a988_NewBool(true)});
		_158817_d.get()._field_Model=jule::Any(_158817_d.get()._field_Constant, &__jule_any_type47);
	} else {
		_158817_d=_1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), (*(_158741_m)).get()._field_Expr);
		if ((_158817_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1a53c7d38_Match> _160217_mc = jule::new_ptr<_1a53c7d38_Match>(_1a53c7d38_Match{._field_Expr=_158817_d, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_160217_mc, &__jule_any_type48));;
	if (((*(_158741_m)).get()._field_Default != nullptr)) {
		_160217_mc.get()._field_Default=_1a53d7551_checkDefault(_self_, _160217_mc, (*(_158741_m)).get()._field_Default);
	};
	_1a53d7199_checkCases(_self_, _158741_m, _160217_mc, _158817_d);
}



inline void _1a53d8365_checkMatch(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a48788c2_MatchCase> _161434_m) {
	if (_161434_m.get()._field_TypeMatch) {
		_1a53d7d6a_checkTypeMatch(_self_, &(_161434_m));
		return;;
	};
	_1a53d80e0_checkCommonMatch(_self_, &(_161434_m));
}



inline void _1a53d85da_checkFall(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a486e7ec_FallSt> _162229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1a53cda31_isDeferred(_self_))) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1a53c8883_Case* _163017_case = ((_1a53c8883_Case*)(_self_.get()._field_cse));;
	if ((_163017_case->_field_Next == nullptr)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _162229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1a53c8e38_FallSt>(_1a53c8e38_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_163017_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_1a53c6540_BreakSt> _1a53d88e8_checkBreakWithLabel(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a487644c_BreakSt> _164239_b) {
	jule::Ptr<_1a53c6540_BreakSt> _164317_brk = _1a53d8c06_checkPlainBreak(_self_, _164239_b);;
	if ((_164317_brk == nullptr)) {
		return nullptr;;
	};
	_164317_brk.get()._field_It=0LLU;
	_164317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1a53c98b7_scopeLabel> _165317_label = _1a53c17e3_findLabelParent(_164239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_165317_label == nullptr)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_165317_label.get()._field_used=true;
	if (((_165317_label.get()._field_pos + 1LL) >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _166613_i = (_165317_label.get()._field_pos + 1LL);;
	if ((_166613_i >= _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _167021_st = _165317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_166613_i];;
		{
			auto &_match_expr{ _167021_st };
			
			if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1a7b04d9d:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36)));
				}
			}
			else if (_match_expr.type == &__jule_any_type40) {
				_case_begin_1a7b069c6:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1a53c5c8c_RangeIter>(&__jule_any_type40)));
				}
			}
			else if (_match_expr.type == &__jule_any_type38) {
				_case_begin_1a7b06a3c:;
				{
					_164317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1a53c53a7_WhileIter>(&__jule_any_type38)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1a7b06ab4:;
				{
					_164317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_167021_st.cast_ptr<_1a53c7d38_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1a7b06850:;
				{
					_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1a7b067ea:;
		};
	};
	if ((_164317_brk.get()._field_It != 0LLU)) {
		if ((!(_1a53d410d_checkValidBreakLabel(_self_, _164317_brk.get()._field_It)))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_164317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1a53d410d_checkValidBreakLabel(_self_, _164317_brk.get()._field_Mtch)))) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _164239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_164239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _164317_brk;;
}



inline jule::Ptr<_1a53c6540_BreakSt> _1a53d8c06_checkPlainBreak(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a487644c_BreakSt> _170035_b) {
	if (_1a53cda31_isDeferred(_self_)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a53cab4e_scopeChecker> _170617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_170617_scope.get()._field_it == 0LLU) && (_170617_scope.get()._field_cse == 0LLU)) && (_170617_scope.get()._field_parent != nullptr)) && (_170617_scope.get()._field_owner == nullptr))) {
			_case_begin_1a7b0caba:;
			{
				_170617_scope=_170617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_170617_scope.get()._field_it != 0LLU)) {
			_case_begin_1a7b0cb42:;
			{
				return jule::new_ptr<_1a53c6540_BreakSt>(_1a53c6540_BreakSt{._field_It=_170617_scope.get()._field_it, });;
			}
		}
		else if ((_170617_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a7b0cbb9:;
			{
				return jule::new_ptr<_1a53c6540_BreakSt>(_1a53c6540_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1a53c8883_Case*)(_170617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1a7b0c9ee:;
	};
	_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _170035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1a53d8e7b_checkBreak(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a487644c_BreakSt> _172230_b) {
	if ((_172230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1a53c6540_BreakSt> _172421_brk = _1a53d88e8_checkBreakWithLabel(_self_, _172230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_1a53c6540_BreakSt> _172917_brk = _1a53d8c06_checkPlainBreak(_self_, _172230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_172917_brk, &__jule_any_type50));;
}



inline void _1a53d9201_checkRet(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a48747be_RetSt> _173332_r) {
	if (_1a53cda31_isDeferred(_self_)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _173332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a53c92ac_RetSt> _173817_rt = jule::new_ptr<_1a53c92ac_RetSt>(_1a53c92ac_RetSt{._field_Func=_1a53cdc95_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_173817_rt, &__jule_any_type51));;
	jule::Ptr<_1a545e61c_retTypeChecker> _174317_rtc = jule::new_ptr<_1a545e61c_retTypeChecker>(_1a545e61c_retTypeChecker{._field_sc=_self_, ._field_f=_173817_rt.get()._field_Func, ._field_errorToken=_173332_r.get()._field_Token, });;
	jule::Bool _174813_ok = _1a5460321_check(_174317_rtc.ptr(), &(_173332_r.get()._field_Expr));;
	if ((!(_174813_ok))) {
		return;;
	};
	if ((_173332_r.get()._field_Expr != nullptr)) {
		_173817_rt.get()._field_Expr=_174317_rtc.get()._field_model;
	};
}



inline void _1a53d9476_checkUseExpr(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a486686b_UseExpr> _175832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1a53cda31_isDeferred(_self_)) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _175832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1a53d96eb_checkNode(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Any* _177434_node) {
	{
		auto &_match_expr{ (*(_177434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a7b19e29:;
			{
				_1a53d134c_checkAnonScope(_self_, (*(_177434_node)).cast_ptr<_1a4871942_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a7b19841:;
			{
				_1a53d0060_checkVarDecl(_self_, (*(_177434_node)).cast_ptr<_1a4874417_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a7b19c3c:;
			{
				_1a53d02d5_checkTypeAliasDecl(_self_, (*(_177434_node)).cast_ptr<_1a4877c78_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a7b1a05b:;
			{
				_1a53d18e1_checkExpr(_self_, (*(_177434_node)).cast_ptr<_1a4865eca_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a7b1a0c2:;
			{
				_1a53d2282_checkConditional(_self_, (*(_177434_node)).cast_ptr<_1a48775a2_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a7b1a27b:;
			{
				_1a53d39e2_checkIter(_self_, (*(_177434_node)).cast_ptr<_1a4874e2e_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a7b1a2e2:;
			{
				_1a53d4691_checkCont(_self_, (*(_177434_node)).cast_ptr<_1a4876804_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a7b1a358:;
			{
				_1a53d4916_checkLabel(_self_, (*(_177434_node)).cast_ptr<_1a486e159_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a7b1a3be:;
			{
				_1a53d4b8b_pushGoto(_self_, (*(_177434_node)).cast_ptr<_1a486e511_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a7b1a435:;
			{
				_1a53d642e_checkAssignSt(_self_, (*(_177434_node)).cast_ptr<_1a4870446_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a7b1a49b:;
			{
				_1a53d8365_checkMatch(_self_, (*(_177434_node)).cast_ptr<_1a48788c2_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a7b1a512:;
			{
				_1a53d85da_checkFall(_self_, (*(_177434_node)).cast_ptr<_1a486e7ec_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a7b1a578:;
			{
				_1a53d8e7b_checkBreak(_self_, (*(_177434_node)).cast_ptr<_1a487644c_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a7b1a5de:;
			{
				_1a53d9201_checkRet(_self_, (*(_177434_node)).cast_ptr<_1a48747be_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a7b1a655:;
			{
				_1a53d9476_checkUseExpr(_self_, (*(_177434_node)).cast_ptr<_1a486686b_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1a7b199b7:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a7b198da:;
	};
}



inline void _1a53d98c7_checkResult(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	_1a4871337_Stmt _181217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _181217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a7b23a26:;
			{
				jule::Ptr<_1a486686b_UseExpr> _181521_ue = _181217_stmt._field_Data.cast_ptr<_1a486686b_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1a5466305_Data> _181621_d = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _181521_ue.get()._field_Expr);;
				if ((_181621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_181621_d, &__jule_any_type23));;
				jule::Ptr<_1a545e61c_retTypeChecker> _182121_rtc = jule::new_ptr<_1a545e61c_retTypeChecker>(_1a545e61c_retTypeChecker{._field_sc=_self_, ._field_types=_1a53a829c_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_181521_ue.get()._field_Expr.get()._field_Token, });;
				_1a5460321_check(_182121_rtc.ptr(), &(_181521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a7b23251:;
			{
				jule::Ptr<_1a4865eca_Expr> _182821_expr = _181217_stmt._field_Data.cast_ptr<_1a4865eca_Expr>(&__jule_any_type53);;
				jule::Ptr<_1a5466305_Data> _182921_d = _1a5483795_evalExpr(_1a5404edb_eval(_self_.get()._field_s, jule::Trait<_1a54ad209_Lookup>(_self_, 0)), _182821_expr);;
				if ((_182921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _182921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a7b28454:;
						{
							jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel> _183525_m = _182921_d.get()._field_Model.cast_ptr<_1a53a0591_BuiltinErrorCallExprModel>(&__jule_any_type22);;
							_1a53d166b_processErrorCall(_self_, &(_183525_m), _182821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_182921_d, &__jule_any_type23));;
						}
					}
					else {
						_case_begin_1a7b28047:;
						{
							return;;
						}
					}
					_match_end_1a7b27d38:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1a7b232b7:;
			{
				_1a53d96eb_checkNode(_self_, &(_181217_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a7b231da:;
			{
				_1a53d96eb_checkNode(_self_, &(_181217_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a7b23064:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1a53d9aa3_checkTree(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _185717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_185717_n)--;
	};
	for (; (_self_.get()._field_i < _185717_n); (_self_.get()._field_i)++) {
		{
			_1a4871337_Stmt _186521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1a53d96eb_checkNode(_self_, &(_186521_stmt._field_Data));
			if (_1a53cd7bc_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1a7b2aa0b:;
	}
	_iter_end_1a7b2aa0b:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1a53d98c7_checkResult(_self_);
	};
}



inline void _1a53d9dc2_checkGoto(_1a53cab4e_scopeChecker* _self_, jule::Ptr<_1a53c9d3a_scopeGoto>* _187633_gt, jule::Ptr<_1a53c98b7_scopeLabel>* _187654_label) {
	jule::Ptr<_1a53cab4e_scopeChecker> _187717_gtsc = (*(_187633_gt)).get()._field_scope;;
	while (((_187717_gtsc.get()._field_childIndex - 1LL) > (*(_187654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_187717_gtsc=_187717_gtsc.get()._field_parent;
		}
	_iter_next_1a7b2e0e7:;
	}
	_iter_end_1a7b2e0e7:;;
	jule::I64 _188217_n = 0LL;;
	if ((_187717_gtsc.get()._field_scope == (*(_187654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_187633_gt)).get()._field_pos > (*(_187654_label)).get()._field_pos)) {
			return;;
		};
		_188217_n=(*(_187633_gt)).get()._field_pos;
	};
	jule::I64 _189517_i = ((*(_187654_label)).get()._field_pos - 1LL);;
	if ((_188217_n == 0LL)) {
		{
			auto expr = &((*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7b31627:;
			if (it != expr_end) {
				jule::I64 _189817_j = it - expr->begin();
				jule::Any _189820_stmt = *it;
				{
					if (_1a53c1eb9_stmtIsGotoScope(&(_189820_stmt), &(_187717_gtsc.get()._field_scope))) {
						_188217_n=_189817_j;
						goto _iter_end_1a7b31627;
					};
				}
				_iter_next_1a7b31627:;
				++it;
				_189817_j++;
				goto _iter_begin_1a7b31627;
			}
			_iter_end_1a7b31627:;
		};
	};
	for (; (_189517_i >= _188217_n); (_189517_i)--) {
		{
			jule::Any _190821_stmt = (*(_187654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_189517_i];;
			if (_1a53c3b58_stmtIsDef(&(_190821_stmt))) {
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_187633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_187633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1a7b32518:;
	}
	_iter_end_1a7b32518:;;
}



inline void _1a53da09d_checkGotos(_1a53cab4e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b31e63:;
		if (it != expr_end) {
			jule::Ptr<_1a53c9d3a_scopeGoto> _191721_gt = *it;
			{
				jule::Ptr<_1a53c98b7_scopeLabel> _191821_label = _1a53ce933_findLabelAll(_self_, _191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_191821_label == nullptr)) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _191721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_191721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1a7b31e63;
				};
				_191821_label.get()._field_used=true;
				_1a53d9dc2_checkGoto(_self_, &(_191721_gt), &(_191821_label));
			}
			_iter_next_1a7b31e63:;
			++it;
			goto _iter_begin_1a7b31e63;
		}
		_iter_end_1a7b31e63:;
	};
}



inline void _1a53da279_checkLabels(_1a53cab4e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b3660a:;
		if (it != expr_end) {
			jule::Ptr<_1a53c98b7_scopeLabel> _193016_l = *it;
			{
				if ((!(_193016_l.get()._field_used))) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _193016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a7b3660a:;
			++it;
			goto _iter_begin_1a7b3660a;
		}
		_iter_end_1a7b3660a:;
	};
}



inline void _1a53da455_checkVars(_1a53cab4e_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b36a39:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _193816_v = *it;
			{
				if (((((!(_193816_v.get()._field_Used)) && (!(_1ceeeb217_IsIgnoreIdent(_193816_v.get()._field_Ident)))) && (!(_1ceeeb4ae_IsAnonIdent(_193816_v.get()._field_Ident)))) && (_193816_v.get()._field_Ident != jule::Str("self", 4)))) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _193816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_193816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a7b36a39:;
			++it;
			goto _iter_begin_1a7b36a39;
		}
		_iter_end_1a7b36a39:;
	};
}



inline void _1a53da631_checkAliases(_1a53cab4e_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b39a5e:;
		if (it != expr_end) {
			jule::Ptr<_1a5491594_TypeAlias> _194616_a = *it;
			{
				if ((((!(_194616_a.get()._field_Used)) && (!(_1ceeeb217_IsIgnoreIdent(_194616_a.get()._field_Ident)))) && (!(_1ceeeb4ae_IsAnonIdent(_194616_a.get()._field_Ident))))) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _194616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_194616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a7b39a5e:;
			++it;
			goto _iter_begin_1a7b39a5e;
		}
		_iter_end_1a7b39a5e:;
	};
}



inline void _1a53da950_check(jule::Ptr<_1a53cab4e_scopeChecker> _self_, jule::Ptr<_1a4871942_ScopeTree>* _195430_tree, jule::Ptr<_1a53c40dc_Scope>* _195453_s) {
	(*(_195453_s)).get()._field_Deferred=(*(_195430_tree)).get()._field_Deferred;
	(*(_195453_s)).get()._field_Unsafety=(*(_195430_tree)).get()._field_Unsafety;
	jule::I64 _195813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_195430_tree));
	_self_.get()._field_scope=(*(_195453_s));
	_1a53d9aa3_checkTree(_self_);
	if ((_195813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1a53da455_checkVars(_self_.ptr());
		_1a53da631_checkAliases(_self_.ptr());
		if (_1a53cd37c_isRoot(_self_.ptr())) {
			_1a53da09d_checkGotos(_self_.ptr());
			_1a53da279_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53dabb4_newChildChecker(jule::Ptr<_1a53cab4e_scopeChecker> _self_) {
	jule::Ptr<_1a53cab4e_scopeChecker> _197817_base = _1a53c111c_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_197817_base.get()._field_parent=_self_;
	_197817_base.get()._field_labels=_self_.get()._field_labels;
	_197817_base.get()._field_gotos=_self_.get()._field_gotos;
	_197817_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _197817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53cab4e_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1a53dbba4_checkCdef(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a7b40bb9:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a53a44c9_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					goto _match_end_1a7b40dea;
				};
				goto _case_begin_1a7b40e50;
			}
		}
		else {
			_case_begin_1a7b40e50:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b40dea:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a53dbe29_checkTypedef(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7b433b4:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					goto _match_end_1a7b435d4;
				};
				goto _case_begin_1a7b43639;
			}
		}
		else {
			_case_begin_1a7b43639:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b435d4:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a53dc19e_checkDerive(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7b45ad1:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					goto _match_end_1a7b45d01;
				};
				goto _case_begin_1a7b45d56;
			}
		}
		else {
			_case_begin_1a7b45d56:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7b45d01:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a7b49651:;
		}
		else {
			_case_begin_1a7b469e4:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b49288:;
	};
}



inline void _1a53dc424_checkNamespace(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7b49585:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66).get()._field_CppLinked))) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a7b4ab5d:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a53a44c9_Fn>(&__jule_any_type65).get()._field_CppLinked))) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7b4abc4:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1a5418939_Var>(&__jule_any_type8).get()._field_CppLinked))) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1a7b4aaa3:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b4aa4d:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ceee8973_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7b53e74:;
			{
				if ((_1a548b935_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1a3c1d0ec_Directive> _11625_typedef = jule::new_ptr<_1a3c1d0ec_Directive>(_1a3c1d0ec_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1a7b53a23:;
	};
}



inline void _1a53dc699_checkDeprecated(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7b5411c:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66).get()._field_CppLinked) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a7b561c9:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a53a44c9_Fn>(&__jule_any_type65).get()._field_CppLinked) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7b56240:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1a5418939_Var>(&__jule_any_type8).get()._field_CppLinked) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1a7b55a8b:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b558e3:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ceee8973_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(6LLU))) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1a53dc91e_checkTest(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a7b5d720:;
			{
				jule::Ptr<_1a53a44c9_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1a53a44c9_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_CppLinked)) && (!(_1a53a5178_IsInit(_16717_f.ptr())))) && (!(_1a53a4e14_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1a7b5e028;
				};
				if (_1a53a4ba0_IsMethod(_16717_f.ptr())) {
					_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1a7b5e028;
				};
				goto _case_begin_1a7b5e16b;
			}
		}
		else {
			_case_begin_1a7b5e16b:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b5e028:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a53dcb94_checkDirective(_1a53db764_directiveChecker* _self_, jule::Ptr<_1a3c1d0ec_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a7b62e50:;
			{
				_1a53dbba4_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a7b62eb6:;
			{
				_1a53dbe29_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a7b6302c:;
			{
				_1a53dc19e_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a7b63093:;
			{
				_1a53dc424_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a7b63b76:;
			{
				_1a53dc699_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a7b63bdc:;
			{
				_1a53dc91e_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a7b63c53:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1a7b62dd9:;
			{
				_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a7b62d84:;
	};
}



inline void _1a53dcd70_check(_1a53db764_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b662b6:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _20821_d = *it;
			{
				_1a53dcb94_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1a7b662b6:;
			++it;
			goto _iter_begin_1a7b662b6;
		}
		_iter_end_1a7b662b6:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a53db764_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e2d0e_FindPackage(_1a53e27e2_ImportInfo* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e311c_SelectPackage(_1a53e27e2_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1a5418939_Var> _1a53e34c4_FindVar(_1a53e27e2_ImportInfo* _self_, jule::Str _19226_ident, jule::Bool ) {
	if ((!(_1a53e4daa_isLookupable(_self_, _19226_ident)))) {
		return nullptr;;
	};
	return _1a53e0009_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _19226_ident, false);;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a53e387b_FindTypeAlias(_1a53e27e2_ImportInfo* _self_, jule::Str _20432_ident, jule::Bool ) {
	if ((!(_1a53e4daa_isLookupable(_self_, _20432_ident)))) {
		return nullptr;;
	};
	return _1a53e0438_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20432_ident, false);;
}



inline jule::Ptr<_1a487d19b_Struct> _1a53e3c33_FindStruct(_1a53e27e2_ImportInfo* _self_, jule::Str _21629_ident, jule::Bool ) {
	if ((!(_1a53e4daa_isLookupable(_self_, _21629_ident)))) {
		return nullptr;;
	};
	return _1a53e0823_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21629_ident, false);;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53e40da_FindFn(_1a53e27e2_ImportInfo* _self_, jule::Str _22825_ident, jule::Bool ) {
	if ((!(_1a53e4daa_isLookupable(_self_, _22825_ident)))) {
		return nullptr;;
	};
	return _1a53e0c85_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22825_ident, false);;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a53e43e8_FindTrait(_1a53e27e2_ImportInfo* _self_, jule::Str _23928_ident) {
	if ((!(_1a53e4daa_isLookupable(_self_, _23928_ident)))) {
		return nullptr;;
	};
	return _1a53e1093_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23928_ident);;
}



inline jule::Ptr<_1a53b8521_Enum> _1a53e4706_FindEnum(_1a53e27e2_ImportInfo* _self_, jule::Str _25027_ident) {
	if ((!(_1a53e4daa_isLookupable(_self_, _25027_ident)))) {
		return nullptr;;
	};
	return _1a53e13d4_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25027_ident);;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53e4a14_FindTypeEnum(_1a53e27e2_ImportInfo* _self_, jule::Str _26131_ident) {
	if ((!(_1a53e4daa_isLookupable(_self_, _26131_ident)))) {
		return nullptr;;
	};
	return _1a53e1725_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _26131_ident);;
}



inline jule::Bool _1a53e4daa_isLookupable(_1a53e27e2_ImportInfo* _self_, jule::Str _27027_ident) {
	if ((*(_self_))._field_CppLinked) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1a53e51b8_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1a53e51b8_existIdent(_self_, _27027_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1a53e51b8_existIdent(_1a53e27e2_ImportInfo* _self_, jule::Str _29025_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b7b584:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_29116_sident = it;
			{
				if (((*(_29116_sident)).get()._field_Kind == _29025_ident)) {
					return true;;
				};
			}
			_iter_next_1a7b7b584:;
			++it;
			goto _iter_begin_1a7b7b584;
		}
		_iter_end_1a7b7b584:;
	};
	return false;;
}



inline jule::Bool _1a53e544e_isAccessibleViaSelection(_1a53e27e2_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1a53e51b8_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53e27e2_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e5c24_FindPackage(_1a53e574b_Package* _self_, jule::Str ) {
	return nullptr;;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53e6032_SelectPackage(_1a53e574b_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1a5418939_Var> _1a53e63d9_FindVar(_1a53e574b_Package* _self_, jule::Str _32026_ident, jule::Bool _32038_cpp_linked) {
	return _1a53e0009_findVarInPackage(&((*(_self_))._field_Files), _32026_ident, _32038_cpp_linked);;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a53e6791_FindTypeAlias(_1a53e574b_Package* _self_, jule::Str _32632_ident, jule::Bool _32644_cpp_linked) {
	return _1a53e0438_findTypeAliasInPackage(&((*(_self_))._field_Files), _32632_ident, _32644_cpp_linked);;
}



inline jule::Ptr<_1a487d19b_Struct> _1a53e6b48_FindStruct(_1a53e574b_Package* _self_, jule::Str _33229_ident, jule::Bool _33241_cpp_linked) {
	return _1a53e0823_findStructInPackage(&((*(_self_))._field_Files), _33229_ident, _33241_cpp_linked);;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53e7000_FindFn(_1a53e574b_Package* _self_, jule::Str _33825_ident, jule::Bool _33837_cpp_linked) {
	return _1a53e0c85_findFnInPackage(&((*(_self_))._field_Files), _33825_ident, _33837_cpp_linked);;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a53e730d_FindTrait(_1a53e574b_Package* _self_, jule::Str _34428_ident) {
	return _1a53e1093_findTraitInPackage(&((*(_self_))._field_Files), _34428_ident);;
}



inline jule::Ptr<_1a53b8521_Enum> _1a53e761b_FindEnum(_1a53e574b_Package* _self_, jule::Str _35027_ident) {
	return _1a53e13d4_findEnumInPackage(&((*(_self_))._field_Files), _35027_ident);;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53e7929_FindTypeEnum(_1a53e574b_Package* _self_, jule::Str _35631_ident) {
	return _1a53e1725_findTypeEnumInPackage(&((*(_self_))._field_Files), _35631_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a53e574b_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53eae5a_FindPackage(_1a53ea93d_Sema* _self_, jule::Str _22330_ident) {
	return _1a54619e8_FindPackage((*(_self_))._field_file.ptr(), _22330_ident);;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a53eb268_SelectPackage(_1a53ea93d_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _23332_selector) {
	return _1a5461d06_SelectPackage((*(_self_))._field_file.ptr(), _23332_selector);;
}



inline jule::Ptr<_1a5418939_Var> _1a53eb620_FindVar(_1a53ea93d_Sema* _self_, jule::Str _24326_ident, jule::Bool _24338_cpp_linked) {
	jule::Ptr<_1a5418939_Var> _24517_v = _1a53e0009_findVarInPackage(&((*(_self_))._field_files), _24326_ident, _24338_cpp_linked);;
	if ((_24517_v != nullptr)) {
		return _24517_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ba4090:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _25121_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_25121_imp), _24326_ident)))) {
					goto _iter_next_1a7ba4090;
				};
				_24517_v=_1a53e34c4_FindVar(_25121_imp.ptr(), _24326_ident, _24338_cpp_linked);
				if (((_24517_v != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _24517_v.get()._field_Public, _24517_v.get()._field_Token))) {
					return _24517_v;;
				};
			}
			_iter_next_1a7ba4090:;
			++it;
			goto _iter_begin_1a7ba4090;
		}
		_iter_end_1a7ba4090:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a53eb9c7_FindTypeAlias(_1a53ea93d_Sema* _self_, jule::Str _27032_ident, jule::Bool _27044_cpp_linked) {
	jule::Ptr<_1a5491594_TypeAlias> _27217_ta = _1a53e0438_findTypeAliasInPackage(&((*(_self_))._field_files), _27032_ident, _27044_cpp_linked);;
	if ((_27217_ta != nullptr)) {
		return _27217_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ba6823:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _27821_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_27821_imp), _27032_ident)))) {
					goto _iter_next_1a7ba6823;
				};
				_27217_ta=_1a53e387b_FindTypeAlias(_27821_imp.ptr(), _27032_ident, _27044_cpp_linked);
				if (((_27217_ta != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _27217_ta.get()._field_Public, _27217_ta.get()._field_Token))) {
					return _27217_ta;;
				};
			}
			_iter_next_1a7ba6823:;
			++it;
			goto _iter_begin_1a7ba6823;
		}
		_iter_end_1a7ba6823:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a487d19b_Struct> _1a53ebd7e_FindStruct(_1a53ea93d_Sema* _self_, jule::Str _29729_ident, jule::Bool _29741_cppLinked) {
	jule::Ptr<_1a487d19b_Struct> _29917_s = _1a53e0823_findStructInPackage(&((*(_self_))._field_files), _29729_ident, _29741_cppLinked);;
	if ((_29917_s != nullptr)) {
		return _29917_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ba90a6:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _30421_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_30421_imp), _29729_ident)))) {
					goto _iter_next_1a7ba90a6;
				};
				_29917_s=_1a53e3c33_FindStruct(_30421_imp.ptr(), _29729_ident, _29741_cppLinked);
				if (((_29917_s != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _29917_s.get()._field_Public, _29917_s.get()._field_Token))) {
					return _29917_s;;
				};
			}
			_iter_next_1a7ba90a6:;
			++it;
			goto _iter_begin_1a7ba90a6;
		}
		_iter_end_1a7ba90a6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53ec236_FindFn(_1a53ea93d_Sema* _self_, jule::Str _32225_ident, jule::Bool _32237_cpp_linked) {
	jule::Ptr<_1a53a44c9_Fn> _32417_f = _1a53e0c85_findFnInPackage(&((*(_self_))._field_files), _32225_ident, _32237_cpp_linked);;
	if ((_32417_f != nullptr)) {
		return _32417_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bab839:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_33021_imp), _32225_ident)))) {
					goto _iter_next_1a7bab839;
				};
				_32417_f=_1a53e40da_FindFn(_33021_imp.ptr(), _32225_ident, _32237_cpp_linked);
				if (((_32417_f != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _32417_f.get()._field_Public, _32417_f.get()._field_Token))) {
					return _32417_f;;
				};
			}
			_iter_next_1a7bab839:;
			++it;
			goto _iter_begin_1a7bab839;
		}
		_iter_end_1a7bab839:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a53ec544_FindTrait(_1a53ea93d_Sema* _self_, jule::Str _34928_ident) {
	jule::Ptr<_1a53b63cb_Trait> _35117_t = _1a53e1093_findTraitInPackage(&((*(_self_))._field_files), _34928_ident);;
	if ((_35117_t != nullptr)) {
		return _35117_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bae232:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _35721_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_35721_imp), _34928_ident)))) {
					goto _iter_next_1a7bae232;
				};
				_35117_t=_1a53e43e8_FindTrait(_35721_imp.ptr(), _34928_ident);
				if (((_35117_t != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _35117_t.get()._field_Public, _35117_t.get()._field_Token))) {
					return _35117_t;;
				};
			}
			_iter_next_1a7bae232:;
			++it;
			goto _iter_begin_1a7bae232;
		}
		_iter_end_1a7bae232:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b8521_Enum> _1a53ec852_FindEnum(_1a53ea93d_Sema* _self_, jule::Str _37627_ident) {
	jule::Ptr<_1a53b8521_Enum> _37817_e = _1a53e13d4_findEnumInPackage(&((*(_self_))._field_files), _37627_ident);;
	if ((_37817_e != nullptr)) {
		return _37817_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bb1762:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _38421_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_38421_imp), _37627_ident)))) {
					goto _iter_next_1a7bb1762;
				};
				_37817_e=_1a53e4706_FindEnum(_38421_imp.ptr(), _37627_ident);
				if (((_37817_e != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _37817_e.get()._field_Public, _37817_e.get()._field_Token))) {
					return _37817_e;;
				};
			}
			_iter_next_1a7bb1762:;
			++it;
			goto _iter_begin_1a7bb1762;
		}
		_iter_end_1a7bb1762:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53ecb60_FindTypeEnum(_1a53ea93d_Sema* _self_, jule::Str _40331_ident) {
	jule::Ptr<_1a53b9b1b_TypeEnum> _40517_e = _1a53e1725_findTypeEnumInPackage(&((*(_self_))._field_files), _40331_ident);;
	if ((_40517_e != nullptr)) {
		return _40517_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bb3c92:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _41121_imp = *it;
			{
				if ((!(_1a53e9365_impIsLookupable(&(_41121_imp), _40331_ident)))) {
					goto _iter_next_1a7bb3c92;
				};
				_40517_e=_1a53e4a14_FindTypeEnum(_41121_imp.ptr(), _40331_ident);
				if (((_40517_e != nullptr) && _1a53edcc6_isAccessibleDefine(_self_, _40517_e.get()._field_Public, _40517_e.get()._field_Token))) {
					return _40517_e;;
				};
			}
			_iter_next_1a7bb3c92:;
			++it;
			goto _iter_begin_1a7bb3c92;
		}
		_iter_end_1a7bb3c92:;
	};
	return nullptr;;
}



inline jule::Bool _1a53eceb2_isFlag(_1a53ea93d_Sema* _self_, jule::I64 _42721_flags) {
	return (((*(_self_))._field_flags & _42721_flags) == _42721_flags);;
}



inline void _1a53ed237_setCurrentFile(_1a53ea93d_Sema* _self_, jule::Ptr<_1a54614cb_SymbolTable> _42937_f) {
	(*(_self_))._field_file=_42937_f;
}



inline void _1a53ed600_pushErr(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token> _43126_token, jule::Str _43141_fmt, jule::Slice<jule::Any> _43154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1a53e9024_compilerErr(&(_43126_token), true, _43141_fmt, _43154_args));;
}



inline void _1a53ed91e_pushSugggestion(_1a53ea93d_Sema* _self_, jule::Str _43634_fmt, jule::Slice<jule::Any> _43647_args) {
	{
		_1a53ea4a9_pushSugggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _43634_fmt, _43647_args);
	};
}



inline jule::Bool _1a53edcc6_isAccessibleDefine(_1a53ea93d_Sema* _self_, jule::Bool _44133_public, jule::Ptr<_1ceee8973_Token> _44147_token) {
	return ((_44133_public || (_44147_token.get()._field_File == nullptr)) || (_1ceeee704_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1ceeee704_Dir(_44147_token.get()._field_File.ptr())));;
}



inline jule::Bool _1a53ee227_isDuplicatedIdent(_1a53ea93d_Sema* _self_, jule::Uintptr _44832_itself, jule::Str _44849_ident, jule::Bool _44861_cpp_linked) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bba0d9:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> *_44916_f = it;
			{
				if (_1a54649c9_isDuplicatedIdent((*(_44916_f)).ptr(), _44832_itself, _44849_ident, _44861_cpp_linked)) {
					return true;;
				};
				{
					auto expr = &((*(_44916_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7bbae42:;
					if (it != expr_end) {
						jule::Ptr<_1a53e27e2_ImportInfo> *_45420_imp = it;
						{
							{
								auto expr = &((*(_45420_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7bbb717:;
								if (it != expr_end) {
									jule::Ptr<_1ceee8973_Token> *_45524_selected = it;
									{
										if (((*(_45524_selected)).get()._field_Kind == _44849_ident)) {
											return true;;
										};
									}
									_iter_next_1a7bbb717:;
									++it;
									goto _iter_begin_1a7bbb717;
								}
								_iter_end_1a7bbb717:;
							};
						}
						_iter_next_1a7bbae42:;
						++it;
						goto _iter_begin_1a7bbae42;
					}
					_iter_end_1a7bbae42:;
				};
			}
			_iter_next_1a7bba0d9:;
			++it;
			goto _iter_begin_1a7bba0d9;
		}
		_iter_end_1a7bba0d9:;
	};
	return false;;
}



inline void _1a53ee546_checkDirectives(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _46540_d, jule::Any _46566_o) {
	_1a53db764_directiveChecker _46617_dc = _1a53db764_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>>)((&((*(_46540_d)))))), ._field_o=_46566_o};;
	_1a53dcd70_check(&_46617_dc);
}



inline jule::Bool _1a53ee997_checkGenericQuantity(_1a53ea93d_Sema* _self_, jule::I64 _47439_required, jule::I64 _47454_given, jule::Ptr<_1ceee8973_Token> _47466_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_47439_required == 0LL) && (_47454_given > 0LL))) {
			_case_begin_1a7bbe3da:;
			{
				_1a53ed600_pushErr(_self_, _47466_token, jule::Str("define not has generics", 23), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_47439_required > 0LL) && (_47454_given == 0LL))) {
			_case_begin_1a7bbdc03:;
			{
				_1a53ed600_pushErr(_self_, _47466_token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required < _47454_given)) {
			_case_begin_1a7bbdc69:;
			{
				_1a53ed600_pushErr(_self_, _47466_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_47439_required > _47454_given)) {
			_case_begin_1a7bbdce1:;
			{
				_1a53ed600_pushErr(_self_, _47466_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7bbdb8c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a7bbdac1:;
	};
}



inline jule::Bool _1a53eed71_isDuplicatedImportSelection(_1a53ea93d_Sema* _self_, jule::Uintptr _49342_itself, jule::Str _49359_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bc06c7:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> *_49416_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_49416_imp))) == _49342_itself)) {
					goto _iter_end_1a7bc06c7;
				};
				if (_1a53e51b8_existIdent((*(_49416_imp)).ptr(), _49359_ident)) {
					return true;;
				};
			}
			_iter_next_1a7bc06c7:;
			++it;
			goto _iter_begin_1a7bc06c7;
		}
		_iter_end_1a7bc06c7:;
	};
	return false;;
}



inline jule::Any _1a5400239_getImportDef(_1a53ea93d_Sema* _self_, jule::Str _50627_ident, jule::Ptr<_1a53e27e2_ImportInfo>* _50644_imp) {
	if ((_1a48bd0a9_findPackageBuiltinDef((*(_50644_imp)).get()._field_LinkPath, _50627_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_50644_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bc371e:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _51021_f = *it;
			{
				;
				jule::Any _51321_def = _1a5464578_defByIdent(_51021_f.ptr(), _50627_ident, false);;
				if ((_51321_def != nullptr)) {
					return _51321_def;;
				};
			}
			_iter_next_1a7bc371e:;
			++it;
			goto _iter_begin_1a7bc371e;
		}
		_iter_end_1a7bc371e:;
	};
	return nullptr;;
}



inline jule::Bool _1a7bca1a4_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a5418939_Var>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7bce0ed_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a5491594_TypeAlias>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7bd2db0_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a487d19b_Struct>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7bd718e_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a53b63cb_Trait>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7bdae62_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a53b8521_Enum>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7bded56_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a53b9b1b_TypeEnum>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a7be3ae6_checkImportSelection(_1a53ea93d_Sema* _self_, jule::Ptr<_1ceee8973_Token>* _52143_ident, jule::Ptr<_1a53a44c9_Fn>* _52159_s) {
	if ((!(_1a53edcc6_isAccessibleDefine(_self_, (*(_52159_s)).get()._field_Public, (*(_52159_s)).get()._field_Token)))) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_52143_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1a53e1c20_defByIdentPackage(&((*(_self_))._field_files), &((*(_52159_s)).get()._field_Ident), false) != nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_52143_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_52159_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1a5400921_checkImportSelectedSelections(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _53553_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_53553_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bc5a51:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> _53716_ident = *it;
			{
				if ((_53716_ident.get()._field_Kind == jule::Str("self", 4))) {
					goto _iter_next_1a7bc5a51;
				};
				if (_1a53eed71_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_53553_imp)))), _53716_ident.get()._field_Kind)) {
					_1a53ed600_pushErr(_self_, _53716_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
					_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a7bc5a51;
				};
				jule::Any _54921_def = _1a5400239_getImportDef(_self_, _53716_ident.get()._field_Kind, _53553_imp);;
				{
					auto &_match_expr{ _54921_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1a7bc8c63:;
						{
							goto _iter_next_1a7bc5a51;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a7bc6249:;
						{
							jule::Ptr<_1a5418939_Var> _55525_v = _54921_def.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
							__jule_func_result=(_1a7bca1a4_checkImportSelection(_self_, &(_53716_ident), &(_55525_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1a7bc83b1:;
						{
							jule::Ptr<_1a5491594_TypeAlias> _55825_ta = _54921_def.cast_ptr<_1a5491594_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1a7bce0ed_checkImportSelection(_self_, &(_53716_ident), &(_55825_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a7bc8427:;
						{
							jule::Ptr<_1a487d19b_Struct> _56125_s = _54921_def.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1a7bd2db0_checkImportSelection(_self_, &(_53716_ident), &(_56125_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1a7bc8e72:;
						{
							jule::Ptr<_1a53b63cb_Trait> _56425_t = _54921_def.cast_ptr<_1a53b63cb_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1a7bd718e_checkImportSelection(_self_, &(_53716_ident), &(_56425_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1a7bc8ed8:;
						{
							jule::Ptr<_1a53b8521_Enum> _56725_e = _54921_def.cast_ptr<_1a53b8521_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1a7bdae62_checkImportSelection(_self_, &(_53716_ident), &(_56725_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1a7bc904e:;
						{
							jule::Ptr<_1a53b9b1b_TypeEnum> _57025_e = _54921_def.cast_ptr<_1a53b9b1b_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1a7bded56_checkImportSelection(_self_, &(_53716_ident), &(_57025_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a7bc90b5:;
						{
							jule::Ptr<_1a53a44c9_Fn> _57325_f = _54921_def.cast_ptr<_1a53a44c9_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1a7be3ae6_checkImportSelection(_self_, &(_53716_ident), &(_57325_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1a7bc81a2:;
						{
							_1a53ed600_pushErr(_self_, _53716_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_53716_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1a7bc5a51;
						}
					}
					_match_end_1a7bc814c:;
				};
			}
			_iter_next_1a7bc5a51:;
			++it;
			goto _iter_begin_1a7bc5a51;
		}
		_iter_end_1a7bc5a51:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a7be803a_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a5418939_Var>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7be9c0c:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7bca1a4_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7be9c0c:;
			++it;
			goto _iter_begin_1a7be9c0c;
		}
		_iter_end_1a7be9c0c:;
	};
	return _58517_ok;;
}

inline jule::Bool _1a7beb58d_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bec924:;
		if (it != expr_end) {
			jule::Ptr<_1a5491594_TypeAlias> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7bce0ed_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7bec924:;
			++it;
			goto _iter_begin_1a7bec924;
		}
		_iter_end_1a7bec924:;
	};
	return _58517_ok;;
}

inline jule::Bool _1a7bebb65_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a487d19b_Struct>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c0062a:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7bd2db0_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7c0062a:;
			++it;
			goto _iter_begin_1a7c0062a;
		}
		_iter_end_1a7c0062a:;
	};
	return _58517_ok;;
}

inline jule::Bool _1a7c01eab_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a53a44c9_Fn>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c03353:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7be3ae6_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7c03353:;
			++it;
			goto _iter_begin_1a7c03353;
		}
		_iter_end_1a7c03353:;
	};
	return _58517_ok;;
}

inline jule::Bool _1a7c02594_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a53b63cb_Trait>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c06015:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7bd718e_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7c06015:;
			++it;
			goto _iter_begin_1a7c06015;
		}
		_iter_end_1a7c06015:;
	};
	return _58517_ok;;
}

inline jule::Bool _1a7c05256_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a53b8521_Enum>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c08bc7:;
		if (it != expr_end) {
			jule::Ptr<_1a53b8521_Enum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7bdae62_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7c08bc7:;
			++it;
			goto _iter_begin_1a7c08bc7;
		}
		_iter_end_1a7c08bc7:;
	};
	return _58517_ok;;
}

inline jule::Bool _1a7c07e18_checkImportsAllSelectionsFromCollection(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a53b9b1b_TypeEnum>>* _58462_s, jule::Ptr<_1ceee8973_Token>* _58471_et) {
	jule::Bool _58517_ok = true;;
	{
		auto expr = _58462_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c0b922:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9b1b_TypeEnum> *_58616_d = it;
			{
				if ((*(_58616_d)).get()._field_Public) {
					_58517_ok=(_1a7bded56_checkImportSelection(_self_, _58471_et, _58616_d) && _58517_ok);
				};
			}
			_iter_next_1a7c0b922:;
			++it;
			goto _iter_begin_1a7c0b922;
		}
		_iter_end_1a7c0b922:;
	};
	return _58517_ok;;
}



inline jule::Bool _1a540114c_checkImportAllSelections(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _59444_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_59444_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7bc92d5:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> *_59616_file = it;
			{
				__jule_func_result=(_1a7be803a_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Vars), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7beb58d_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeAliases), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7bebb65_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Structs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7c01eab_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Funcs), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7c02594_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Traits), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7c05256_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_Enums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a7c07e18_checkImportsAllSelectionsFromCollection(_self_, &((*(_59616_file)).get()._field_TypeEnums), &((*(_59444_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1a7bc92d5:;
			++it;
			goto _iter_begin_1a7bc92d5;
		}
		_iter_end_1a7bc92d5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a540146b_checkImportSelections(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _60845_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_60845_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1a5400921_checkImportSelectedSelections(_self_, _60845_imp);
		return __jule_func_result;;
	} else if ((*(_60845_imp)).get()._field_ImportAll) {
		__jule_func_result = _1a540114c_checkImportAllSelections(_self_, _60845_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5401779_isUseAliasDuplication(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _61741_imp) {
	if (((*(_61741_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c0e31a:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _62221_imp2 = *it;
			{
				if ((_62221_imp2 == (*(_61741_imp)))) {
					goto _iter_end_1a7c0e31a;
				};
				if ((_62221_imp2.get()._field_Alias == (*(_61741_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_62221_imp2.get()._field_Ident == _62221_imp2.get()._field_LinkPath) && (_62221_imp2.get()._field_Ident == (*(_61741_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1a7c0e31a:;
			++it;
			goto _iter_begin_1a7c0e31a;
		}
		_iter_end_1a7c0e31a:;
	};
	return false;;
}



inline jule::Bool _1a5401a87_checkImport(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53e27e2_ImportInfo>* _63735_imp) {
	if (((*(_63735_imp)).get()._field_CppLinked || ((*(_63735_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1a5401779_isUseAliasDuplication(_self_, _63735_imp)) {
		_1a53ed600_pushErr(_self_, (*(_63735_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_63735_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_63735_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1a53ea93d_Sema> _64821_sema = jule::new_ptr<_1a53ea93d_Sema>(_1a53ea93d_Sema{._field_flags=(*(_self_))._field_flags});;
		_1a541588c_check(_64821_sema, &((*(_63735_imp)).get()._field_Package.get()._field_Files));
		if ((_64821_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_64821_sema.get()._field_errors);
			_64821_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1a540146b_checkImportSelections(_self_, _63735_imp);;
}



inline void _1a5401c63_checkImports(_1a53ea93d_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c12c03:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _66221_file = *it;
			{
				_1a53ed237_setCurrentFile(_self_, _66221_file);
				{
					auto expr = &(_66221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c157b6:;
					if (it != expr_end) {
						jule::Ptr<_1a53e27e2_ImportInfo> _66425_imp = *it;
						{
							jule::Bool _66521_ok = _1a5401a87_checkImport(_self_, &(_66425_imp));;
							if ((!(_66521_ok))) {
								return;;
							};
						}
						_iter_next_1a7c157b6:;
						++it;
						goto _iter_begin_1a7c157b6;
					}
					_iter_end_1a7c157b6:;
				};
			}
			_iter_next_1a7c12c03:;
			++it;
			goto _iter_begin_1a7c12c03;
		}
		_iter_end_1a7c12c03:;
	};
}



inline void _1a5401e3e_implFileImpls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c152cc:;
		if (it != expr_end) {
			jule::Ptr<_1a53be082_Impl> _67521_imp = *it;
			{
				_1a540c972_implImpl(_self_, &(_67521_imp));
			}
			_iter_next_1a7c152cc:;
			++it;
			goto _iter_begin_1a7c152cc;
		}
		_iter_end_1a7c152cc:;
	};
}



inline void _1a540211a_implImpls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c1728a:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _68121_file = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _68121_file);
				_1a5401e3e_implFileImpls(_self_);
			}
			_iter_next_1a7c1728a:;
			++it;
			goto _iter_begin_1a7c1728a;
		}
		_iter_end_1a7c1728a:;
	};
}



inline void _1a54022e6_checkEnums(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c18302:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _68821_file = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _68821_file);
				_1a540a09b_checkEnumDecls(_self_);
			}
			_iter_next_1a7c18302:;
			++it;
			goto _iter_begin_1a7c18302;
		}
		_iter_end_1a7c18302:;
	};
}



inline _1a54a0b03_typeChecker _1a5402747_typeChecker(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Trait<_1a54ad209_Lookup> _69435_l, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _69450_generics, jule::Ptr<_1a549ec23_referencer> _69513_referencer) {
	_1a54a0b03_typeChecker _69617_tc = _1a54a0b03_typeChecker{._field_s=_self_, ._field_rootLookup=_69435_l, ._field_lookup=_69435_l, ._field_referencer=_69513_referencer, ._field_useGenerics=_69450_generics, };;
	{
		auto &_match_expr{ _69435_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7c19c4e:;
			{
				jule::Ptr<_1a53cab4e_scopeChecker> _70521_hard = _1a53ce009_getHardRoot(_69435_l.cast_ptr<_1a53cab4e_scopeChecker>(0));;
				_69617_tc._field_refers=_70521_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1a7c19b61:;
	};
	if (((_69513_referencer != nullptr) && (_69513_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _69513_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1a7c1b0e6:;
				{
					_69617_tc._field_ownerAlias=_69513_referencer.get()._field_owner.cast_ptr<_1a5491594_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1a7c1b091:;
		};
	};
	return _69617_tc;;
}



inline jule::Ptr<_1a5492287_TypeKind> _1a5402c42_buildTypeWithRefers(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a48619a9_TypeDecl>* _72144_t, jule::Trait<_1a54ad209_Lookup> _72167_l, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _72213_generics, jule::Ptr<_1a549ec23_referencer> _72241_referencer) {
	return ({ auto _wrap_copy = _1a5402747_typeChecker(_self_, _72167_l, _72213_generics, _72241_referencer); _1a54a7d6e_checkDecl(&_wrap_copy, _72144_t); });;
}



inline jule::Bool _1a540323c_checkTypeWithRefers(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5496665_TypeSymbol>* _72844_t, jule::Trait<_1a54ad209_Lookup> _72864_l, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _72913_generics, jule::Ptr<_1a549ec23_referencer> _72941_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1a5496a1c_checked((*(_72844_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_72844_t)).get()._field_Kind=_1a5402c42_buildTypeWithRefers(_self_, &((*(_72844_t)).get()._field_Decl), _72864_l, _72913_generics, _72941_referencer);
	__jule_func_result = _1a5496a1c_checked((*(_72844_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1a53bc14b_constraintChecker> _1a54034a1_constraintChecker(jule::Ptr<_1a53ea93d_Sema> _self_) {
	return jule::new_ptr<_1a53bc14b_constraintChecker>(_1a53bc14b_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1a5403858_checkType(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5496665_TypeSymbol>* _74334_t, jule::Trait<_1a54ad209_Lookup> _74354_l) {
	return _1a540323c_checkTypeWithRefers(_self_, _74334_t, _74354_l, nullptr, nullptr);;
}



inline jule::Ptr<_1a5492287_TypeKind> _1a5403ca9_buildTypeWithGenerics(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a48619a9_TypeDecl>* _74946_t, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _75013_generics, jule::Ptr<_1a53aa0e5_ReferenceStack> _75041_refers) {
	jule::Ptr<_1a54a0b03_typeChecker> _75117_tc = jule::new_ptr<_1a54a0b03_typeChecker>(_1a54a0b03_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_refers=_75041_refers, ._field_useGenerics=_75013_generics, });;
	return _1a54a7d6e_checkDecl(_75117_tc.ptr(), _74946_t);;
}



inline jule::Ptr<_1a5492287_TypeKind> _1a54040b7_buildType(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a48619a9_TypeDecl>* _76234_t) {
	return _1a5403ca9_buildTypeWithGenerics(_self_, _76234_t, nullptr, nullptr);;
}



inline jule::Ptr<_1a5492287_TypeKind> _1a54043c5_selectType(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a48619a9_TypeDecl>* _76735_t) {
	jule::Ptr<_1a54a0b03_typeChecker> _76817_tc = jule::new_ptr<_1a54a0b03_typeChecker>(_1a54a0b03_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1a54a7d6e_checkDecl(_76817_tc.ptr(), _76735_t);;
}



inline jule::Ptr<_1a5467d73_Eval> _1a5404826_evalpd(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Trait<_1a54ad209_Lookup> _77930_l, jule::Ptr<_1a5492287_TypeKind> _77945_p, jule::Ptr<_1a5418939_Var> _77963_owner) {
	jule::Ptr<_1a5467d73_Eval> _78017_e = jule::new_ptr<_1a5467d73_Eval>(_1a5467d73_Eval{._field_s=_self_, ._field_lookup=_77930_l, ._field_owner=_77963_owner, });;
	{
		auto &_match_expr{ _77930_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7c24286:;
			{
				_78017_e.get()._field_unsafety=_1a53cd118_isUnsafe(_77930_l.cast_ptr<_1a53cab4e_scopeChecker>(0));
			}
		}
		_match_end_1a7c24220:;
	};
	_78017_e.get()._field_prefix=_77945_p;
	return _78017_e;;
}



inline jule::Ptr<_1a5467d73_Eval> _1a5404bcd_evalp(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Trait<_1a54ad209_Lookup> _79429_l, jule::Ptr<_1a5492287_TypeKind> _79444_p) {
	return _1a5404826_evalpd(_self_, _79429_l, _79444_p, nullptr);;
}



inline jule::Ptr<_1a5467d73_Eval> _1a5404edb_eval(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Trait<_1a54ad209_Lookup> _79928_l) {
	return _1a5404bcd_evalp(_self_, _79928_l, nullptr);;
}



inline jule::Bool _1a54054d6_checkAssignType(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Bool _80335_destIsRef, jule::Ptr<_1a5492287_TypeKind>* _80357_dest, jule::Ptr<_1a5466305_Data>* _80414_d, jule::Ptr<_1ceee8973_Token> _80428_errorToken) {
	if ((*(_80414_d)).get()._field_Decl) {
		_1a53ed600_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_80335_destIsRef) {
		if ((!(_1a5492991_Equal((*(_80357_dest)), (*(_80414_d)).get()._field_Kind)))) {
			_1a53ed600_pushErr(_self_.ptr(), _80428_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_80357_dest)).ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_80414_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1a5451be7_assignTypeChecker> _81521_atc = jule::new_ptr<_1a5451be7_assignTypeChecker>(_1a5451be7_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_80357_dest)), ._field_d=(*(_80414_d)), ._field_errorToken=_80428_errorToken});;
		jule::Bool _82117_ok = _1a5452d6e_check(_81521_atc.ptr());;
		if ((!(_82117_ok))) {
			return false;;
		};
	};
	if (((!(_1a5466bb8_IsConst((*(_80414_d)).ptr()))) || (_1a549461e_Prim((*(_80357_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _83117_kind = _1a549461e_Prim((*(_80357_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1a5388d71_IsSigInt(_83117_kind)) {
			_case_begin_1a7c2a7a9:;
			{
				_1a538cc32_SetI64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1a538915c_IsUnsigInt(_83117_kind)) {
			_case_begin_1a7c2a831:;
			{
				_1a538cea7_SetU64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1a5389723_IsFloat(_83117_kind)) {
			_case_begin_1a7c2a8a8:;
			{
				_1a538d727_SetF64((*(_80414_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1a538c9ac_AsF64((*(_80414_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1a7c2a6dd:;
	};
	return true;;
}



inline jule::Bool _1a5405937_checkTypeCompatibility(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5492287_TypeKind>* _84547_dest, jule::Ptr<_1a5492287_TypeKind>* _84614_src, jule::Ptr<_1ceee8973_Token>* _84635_errorToken) {
	if (((*(_84614_src)) == nullptr)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1a54962ad_Tup((*(_84614_src)).ptr()) != nullptr)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1a54500be_typeCompatibilityChecker _86017_tcc = _1a54500be_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_84547_dest)), ._field_src=(*(_84614_src)), ._field_errorToken=(*(_84635_errorToken))};;
	if (_1a54516a8_check(&_86017_tcc)) {
		return true;;
	};
	_1a53ed600_pushErr(_self_.ptr(), (*(_84635_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_84547_dest)).ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_84614_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1a5492287_TypeKind> _1a5405daa_buildNonGenericTypeKind(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a48619a9_TypeDecl>* _88148_ast, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>* _88214_generics, jule::Slice<jule::Ptr<_1a5492287_TypeKind>>* _88250_ignored) {
	jule::Ptr<_1a54a0b03_typeChecker> _88317_tc = jule::new_ptr<_1a54a0b03_typeChecker>(_1a54a0b03_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_88214_generics)), ._field_ignoredGenerics=(&((*(_88250_ignored)))), });;
	return _1a54a7d6e_checkDecl(_88317_tc.ptr(), _88148_ast);;
}



inline jule::Bool _1a5406295_buildFnNonGenericTypeKinds(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a717a_FnIns>* _89351_f, jule::Slice<jule::Ptr<_1a5492287_TypeKind>>* _89367_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _89517_generics = nullptr;;
	if (_1a53a4ba0_IsMethod((*(_89351_f)).get()._field_Decl.ptr())) {
		_89517_generics=jule::append((*(_89351_f)).get()._field_Decl.get()._field_Generics,(*(_89351_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_89517_generics=(*(_89351_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_89351_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c344d8:;
		if (it != expr_end) {
			jule::Ptr<_1a53a62ab_ParamIns> _90221_p = *it;
			{
				if ((!(_1a53a32b9_IsSelf(_90221_p.get()._field_Decl.ptr())))) {
					_90221_p.get()._field_Kind=_1a5405daa_buildNonGenericTypeKind(_self_, &(_90221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
					__jule_func_result=(__jule_func_result && (_90221_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1a7c344d8:;
			++it;
			goto _iter_begin_1a7c344d8;
		}
		_iter_end_1a7c344d8:;
	};
	if ((!(_1a53a493b_IsVoid((*(_89351_f)).get()._field_Decl.ptr())))) {
		(*(_89351_f)).get()._field_Result=_1a5405daa_buildNonGenericTypeKind(_self_, &((*(_89351_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_89517_generics), _89367_ignored);
		__jule_func_result=(__jule_func_result && ((*(_89351_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a53a717a_FnIns> _1a54065b4_getTraitCheckFnKind(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a44c9_Fn>* _91544_f) {
	if (((*(_91544_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_91544_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1a53a717a_FnIns> _91917_ins = _1a53a58b5_instanceForce((*(_91544_f)));;
	jule::Ptr<_1a54a0b03_typeChecker> _92117_tc = jule::new_ptr<_1a54a0b03_typeChecker>(_1a54a0b03_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1a54ad209_Lookup>(_self_, 3), });;
	{
		auto expr = &(_91917_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c38c07:;
		if (it != expr_end) {
			jule::Ptr<_1a53a62ab_ParamIns> _92621_p = *it;
			{
				if ((!(_1a53a32b9_IsSelf(_92621_p.get()._field_Decl.ptr())))) {
					_92621_p.get()._field_Kind=_1a54a7d6e_checkDecl(_92117_tc.ptr(), &(_92621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1a7c38c07:;
			++it;
			goto _iter_begin_1a7c38c07;
		}
		_iter_end_1a7c38c07:;
	};
	if ((!(_1a53a493b_IsVoid((*(_91544_f)).ptr())))) {
		_91917_ins.get()._field_Result=_1a54a7d6e_checkDecl(_92117_tc.ptr(), &((*(_91544_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _91917_ins;;
}



inline jule::Bool _1a5406a15_checkConstraintsFn(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a717a_FnIns>* _93843_f, jule::Ptr<_1ceee8973_Token>* _93859_et, jule::Ptr<_1a53a717a_FnIns> _93875_exist) {
	jule::Ptr<_1a53bc14b_constraintChecker> _93917_cc = _1a54034a1_constraintChecker(_self_);;
	_93917_cc.get()._field_et=(*(_93859_et));
	_93917_cc.get()._field_fi=(*(_93843_f));
	if ((_93875_exist != nullptr)) {
		{
			auto expr = &(_93875_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7c3c007:;
			if (it != expr_end) {
				jule::I64 _94318_i = it - expr->begin();
				jule::Ptr<_1a5490a5a_InsGeneric> _94325_g = *it;
				{
					(*(_93843_f)).get()._field_Generics[_94318_i].get()._field_Constraint=_94325_g.get()._field_Constraint;
				}
				_iter_next_1a7c3c007:;
				++it;
				_94318_i++;
				goto _iter_begin_1a7c3c007;
			}
			_iter_end_1a7c3c007:;
		};
	} else {
		_93917_cc.get()._field_uniq=true;
	};
	return _1a53bd02b_check(_93917_cc);;
}



inline jule::Bool _1a5406e66_checkConstraintsStruct(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _95247_s, jule::Ptr<_1ceee8973_Token>* _95267_et, jule::Ptr<_1a487d575_StructIns> _95283_exist) {
	jule::Ptr<_1a53bc14b_constraintChecker> _95317_cc = _1a54034a1_constraintChecker(_self_);;
	_95317_cc.get()._field_et=(*(_95267_et));
	_95317_cc.get()._field_si=(*(_95247_s));
	if ((_95283_exist != nullptr)) {
		{
			auto expr = &(_95283_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7c3e966:;
			if (it != expr_end) {
				jule::I64 _95718_i = it - expr->begin();
				jule::Ptr<_1a5490a5a_InsGeneric> _95725_g = *it;
				{
					(*(_95247_s)).get()._field_Generics[_95718_i].get()._field_Constraint=_95725_g.get()._field_Constraint;
				}
				_iter_next_1a7c3e966:;
				++it;
				_95718_i++;
				goto _iter_begin_1a7c3e966;
			}
			_iter_end_1a7c3e966:;
		};
	} else {
		_95317_cc.get()._field_uniq=true;
	};
	return _1a53bd02b_check(_95317_cc);;
}



inline jule::Bool _1a540731d_fnEnvironment(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a717a_FnIns>* _96938_f, jule::Fn<jule::Bool(jule::Ptr<_1a53ea93d_Sema>*,jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*)> _96949_algo) {
	jule::Ptr<_1a53ea93d_Sema> _97017_sema = (*(_96938_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1a54614cb_SymbolTable> _97117_old = (*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a53ed237_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97117_old);
	});;
	jule::Ptr<_1a54614cb_SymbolTable> _97317_file = _1a53ea047_findFile(&((*(_96938_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_96938_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_97317_file != nullptr)) {
		_1a53ed237_setCurrentFile((*(_96938_f)).get()._field_Decl.get()._field_sema.ptr(), _97317_file);
	};
	jule::I64 _97817_size = (*(_96938_f)).get()._field_Generics.len();;
	if ((((*(_96938_f)).get()._field_Decl != nullptr) && ((*(_96938_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_97817_size+=(*(_96938_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _98317_generics = jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>::alloc(0LL, _97817_size);;
	_1a53e9be5_appendGenericTypeAliases(&(_98317_generics), _96938_f);
	jule::Bool _98613_ok = _96949_algo(&(_97017_sema), &(_98317_generics));;
	if ((_97017_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_97017_sema.get()._field_errors);
		_97017_sema.get()._field_errors=nullptr;
	};
	return _98613_ok;;
}



inline void _1a5407593_checkFnParamKind(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a62ab_ParamIns>* _99641_p) {
	(*(_99641_p)).get()._field_Kind.get()._field_Variadic=(*(_99641_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_99641_p)).get()._field_Decl.get()._field_Reference && (!(_1a54a9b84_isValidForRef(&((*(_99641_p)).get()._field_Kind)))))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_99641_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_99641_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1a54078a1_reloadFnInsTypes(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a717a_FnIns> _100340_f) {
	if ((_1a53a8511_IsBuiltin(_100340_f.ptr()) || _1a53a8775_IsAnon(_100340_f.ptr()))) {
		return true;;
	};
	return _1a540731d_fnEnvironment(_self_, &(_100340_f), jule::Fn<jule::Bool(jule::Ptr<_1a53ea93d_Sema>*,jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>*)>([=](jule::Ptr<_1a53ea93d_Sema>* _100743_sema, jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>* _100761_generics) mutable -> jule::Bool {
		jule::Bool _100821_ok = true;;
		{
			auto expr = &(_100340_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7c4a7eb:;
			if (it != expr_end) {
				jule::Ptr<_1a53a62ab_ParamIns> _100925_p = *it;
				{
					if (_1a53a32b9_IsSelf(_100925_p.get()._field_Decl.ptr())) {
						if (_1a53a352d_IsRef(_100925_p.get()._field_Decl.ptr())) {
							_100925_p.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549a768_Sptr>(_1a549a768_Sptr{._field_Elem=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_100340_f.get()._field_Owner, 0)})}), 7)});
						} else {
							_100925_p.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_100340_f.get()._field_Owner, 0)});
						};
					} else {
						_100925_p.get()._field_Kind=_1a5403ca9_buildTypeWithGenerics((*(_100743_sema)), &(_100925_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
						if ((_100925_p.get()._field_Kind != nullptr)) {
							_1a5407593_checkFnParamKind(_self_, &(_100925_p));
						} else {
							_100821_ok=false;
						};
					};
				}
				_iter_next_1a7c4a7eb:;
				++it;
				goto _iter_begin_1a7c4a7eb;
			}
			_iter_end_1a7c4a7eb:;
		};
		if ((!(_1a53a493b_IsVoid(_100340_f.get()._field_Decl.ptr())))) {
			_100340_f.get()._field_Result=_1a5403ca9_buildTypeWithGenerics((*(_100743_sema)), &(_100340_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_100761_generics)), _100340_f.get()._field_Refers);
			_100821_ok=((_100340_f.get()._field_Result != nullptr) && _100821_ok);
		};
		return _100821_ok;;
	}));;
}



inline jule::Bool _1a5407d24_checkRefValidityForInitExpr(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Bool _103947_leftMut, jule::Ptr<_1a5466305_Data>* _103967_d, jule::Ptr<_1ceee8973_Token>* _103982_errorToken) {
	{
		auto &_match_expr{ (*(_103967_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7c50da6:;
			{
				goto _match_end_1a7c501e6;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a7c50e1c:;
			{
				jule::Ptr<_1a539a1b2_TraitSubIdentExprModel> _104421_model = (*(_103967_d)).get()._field_Model.cast_ptr<_1a539a1b2_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1a53e8b06_isValidModelForRef(&(_104421_model.get()._field_Expr))))) {
					_1a53ed600_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_104421_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a7c50bec:;
			{
				jule::Ptr<_1a539a998_StructSubIdentExprModel> _105021_model = (*(_103967_d)).get()._field_Model.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1a53e8b06_isValidModelForRef(&(_105021_model.get()._field_Expr.get()._field_Model))))) {
					_1a53ed600_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_105021_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1a7c50c63:;
			{
				_1a53ed600_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a7c50cc9:;
			{
				jule::Ptr<_1a5396664_UnaryExprModel> _106021_unary = (*(_103967_d)).get()._field_Model.cast_ptr<_1a5396664_UnaryExprModel>(&__jule_any_type74);;
				if ((_106021_unary.get()._field_Op.get()._field_Kind == jule::Str("*", 1))) {
					if ((!(_1a53e8b06_isValidModelForRef(&((*(_103967_d)).get()._field_Model))))) {
						_1a53ed600_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1a7c501e6;
				};
				goto _case_begin_1a7c5038e;
			}
		}
		else {
			_case_begin_1a7c5038e:;
			{
				_1a53ed600_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a7c501e6:;
	};
	if ((_103947_leftMut && (!((*(_103967_d)).get()._field_Mutable)))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_103982_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1a54083eb_checkValidityForInitExpr(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Bool _108044_leftMut, jule::Bool _108059_leftRef, jule::Ptr<_1a5492287_TypeKind>* _108110_leftKind, jule::Ptr<_1a5466305_Data>* _108136_d, jule::Ptr<_1ceee8973_Token>* _108151_errorToken) {
	if (((_108044_leftMut && (!((*(_108136_d)).get()._field_Mutable))) && _1a5493909_Mutable((*(_108136_d)).get()._field_Kind.ptr()))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_108151_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_108136_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_108059_leftRef) {
		if ((!(_1a5407d24_checkRefValidityForInitExpr(_self_, _108044_leftMut, _108136_d, _108151_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1a5451be7_assignTypeChecker> _109117_atc = jule::new_ptr<_1a5451be7_assignTypeChecker>(_1a5451be7_assignTypeChecker{._field_s=_self_, ._field_d=(*(_108136_d)), ._field_errorToken=(*(_108151_errorToken))});;
	return _1a54523bd_checkValidity(_109117_atc.ptr());;
}



inline jule::Bool _1a54087b4_checkTypeAliasDeclKind(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5491594_TypeAlias>* _109947_ta, jule::Trait<_1a54ad209_Lookup> _109967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a54614cb_SymbolTable> _110017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a53ed237_setCurrentFile(_self_.ptr(), _110017_old);
	});;
	if (((*(_109947_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1a54614cb_SymbolTable> _110521_file = _1a53ea047_findFile(&(_self_.get()._field_files), &((*(_109947_ta)).get()._field_Token.get()._field_File));;
		if ((_110521_file != nullptr)) {
			_1a53ed237_setCurrentFile(_self_.ptr(), _110521_file);
		};
	};
	__jule_func_result=_1a540323c_checkTypeWithRefers(_self_, &((*(_109947_ta)).get()._field_Kind), _109967_l, nullptr, jule::new_ptr<_1a549ec23_referencer>(_1a549ec23_referencer{._field_ident=(*(_109947_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_109947_ta)), &__jule_any_type67), ._field_refs=(&((*(_109947_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1a5495334_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1a5495334_Arr((*(_109947_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_109947_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1a5408ad3_checkTypeAliasDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5491594_TypeAlias>* _112243_ta, jule::Trait<_1a54ad209_Lookup> _112263_l) {
	if (_1ceeeb217_IsIgnoreIdent((*(_112243_ta)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_112243_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a54087b4_checkTypeAliasDeclKind(_self_, _112243_ta, _112263_l);
}



inline void _1a5408d58_checkTypeAliasDeclDup(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5491594_TypeAlias>* _113046_ta) {
	if (_1ceeeb217_IsIgnoreIdent((*(_113046_ta)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_113046_ta)))), (*(_113046_ta)).get()._field_Ident, (*(_113046_ta)).get()._field_CppLinked)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_113046_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_113046_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a54087b4_checkTypeAliasDeclKind(_self_, _113046_ta, jule::Trait<_1a54ad209_Lookup>(_self_, 3));
}



inline jule::Bool _1a54090bc_checkTypeAliasDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c62637:;
		if (it != expr_end) {
			jule::Ptr<_1a5491594_TypeAlias> _114321_ta = *it;
			{
				_1a5408d58_checkTypeAliasDeclDup(_self_, &(_114321_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7c62637:;
			++it;
			goto _iter_begin_1a7c62637;
		}
		_iter_end_1a7c62637:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a7c73082_checkEnumItemsDup(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c74319:;
		if (it != expr_end) {
			jule::Ptr<_1a53b7a2b_EnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1a7c74319;
				} else if (_1ceeeb217_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_1a53ed600_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7c75095:;
						if (it != expr_end) {
							jule::Ptr<_1a53b7a2b_EnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1a7c75095;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_1a53ed600_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a7c75095;
								};
							}
							_iter_next_1a7c75095:;
							++it;
							goto _iter_begin_1a7c75095;
						}
						_iter_end_1a7c75095:;
					};
				};
			}
			_iter_next_1a7c74319:;
			++it;
			goto _iter_begin_1a7c74319;
		}
		_iter_end_1a7c74319:;
	};
}

inline void _1a7c7d378_checkEnumItemsDup(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>> _115439_items) {
	{
		auto expr = &(_115439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c7e5bb:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9555_TypeEnumItem> *_115516_item = it;
			{
				if ((*(_115516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1a7c7e5bb;
				} else if (_1ceeeb217_IsIgnoreIdent((*(_115516_item)).get()._field_Ident)) {
					_1a53ed600_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_115439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7c80347:;
						if (it != expr_end) {
							jule::Ptr<_1a53b9555_TypeEnumItem> *_116124_citem = it;
							{
								if (((*(_115516_item)) == (*(_116124_citem)))) {
									goto _iter_end_1a7c80347;
								} else if (((*(_115516_item)).get()._field_Ident == (*(_116124_citem)).get()._field_Ident)) {
									_1a53ed600_pushErr(_self_, (*(_115516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115516_item)).get()._field_Ident, &__jule_any_type5)}));
									_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1a7c80347;
								};
							}
							_iter_next_1a7c80347:;
							++it;
							goto _iter_begin_1a7c80347;
						}
						_iter_end_1a7c80347:;
					};
				};
			}
			_iter_next_1a7c7e5bb:;
			++it;
			goto _iter_begin_1a7c7e5bb;
		}
		_iter_end_1a7c7e5bb:;
	};
}



inline void _1a54095b7_checkEnumItemsStr(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53b8521_Enum>* _117442_e) {
	jule::Ptr<_1a5467d73_Eval> _117517_eval = _1a5404edb_eval(_self_, jule::Trait<_1a54ad209_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_117442_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c64172:;
		if (it != expr_end) {
			jule::Ptr<_1a53b7a2b_EnumItem> _117621_item = *it;
			{
				if (_1a53b7e16_AutoExpr(_117621_item.ptr())) {
					_117621_item.get()._field_Value=jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Data=jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Constant=static__1a538ac30_NewStr(_117621_item.get()._field_Ident)})});
					_117621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_117621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_1a5466305_Data> _118525_d = _1a5483795_evalExpr(_117517_eval, _117621_item.get()._field_Value.get()._field_Expr);;
					if ((_118525_d == nullptr)) {
						goto _iter_next_1a7c64172;
					};
					if ((!(_1a5466bb8_IsConst(_118525_d.ptr())))) {
						_1a53ed600_pushErr(_self_.ptr(), _117621_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a54054d6_checkAssignType(_self_, false, &((*(_117442_e)).get()._field_Kind.get()._field_Kind), &(_118525_d), _117621_item.get()._field_Token);
					_117621_item.get()._field_Value.get()._field_Data=_118525_d;
				};
			}
			_iter_next_1a7c64172:;
			++it;
			goto _iter_begin_1a7c64172;
		}
		_iter_end_1a7c64172:;
	};
}



inline void _1a540983c_checkEnumItemsInt(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53b8521_Enum>* _120042_e) {
	jule::Ptr<_1a5496ed4_Prim> _120113_prim = _1a549461e_Prim((*(_120042_e)).get()._field_Kind.get()._field_Kind.ptr());;
	jule::U64 _120217_max = static_cast<jule::U64>(_1a538649a_Max(_1a5497347_Str(_120113_prim.ptr())));;
	jule::Ptr<_1a5467d73_Eval> _120317_eval = _1a5404edb_eval(_self_, jule::Trait<_1a54ad209_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c69375:;
		if (it != expr_end) {
			jule::I64 _120414_i = it - expr->begin();
			jule::Ptr<_1a53b7a2b_EnumItem> _120421_item = *it;
			{
				if ((_120217_max == 0LLU)) {
					_1a53ed600_pushErr(_self_.ptr(), _120421_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(_120217_max)--;
				};
				if (_1a53b7e16_AutoExpr(_120421_item.ptr())) {
					_120421_item.get()._field_Value=jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Data=jule::new_ptr<_1a5466305_Data>()});
					{
						
						if (_1a5388d71_IsSigInt(_1a5497347_Str(_120113_prim.ptr()))) {
							_case_begin_1a7c6b685:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i))))));
							}
						}
						else {
							_case_begin_1a7c6b322:;
							{
								_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant=static__1a538a6e1_NewU64(static_cast<jule::U64>((_120217_max - (_120217_max - static_cast<jule::U64>(_120414_i)))));
							}
						}
						_match_end_1a7c6b2bc:;
					};
					_120421_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120421_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type47);
				} else {
					jule::Ptr<_1a5466305_Data> _122225_d = _1a5483795_evalExpr(_120317_eval, _120421_item.get()._field_Value.get()._field_Expr);;
					if ((_122225_d == nullptr)) {
						goto _iter_next_1a7c69375;
					};
					if ((!(_1a5466bb8_IsConst(_122225_d.ptr())))) {
						_1a53ed600_pushErr(_self_.ptr(), _120421_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1a54054d6_checkAssignType(_self_, false, &((*(_120042_e)).get()._field_Kind.get()._field_Kind), &(_122225_d), _120421_item.get()._field_Token);
					_120421_item.get()._field_Value.get()._field_Data=_122225_d;
				};
			}
			_iter_next_1a7c69375:;
			++it;
			_120414_i++;
			goto _iter_begin_1a7c69375;
		}
		_iter_end_1a7c69375:;
	};
}



inline void _1a5409ab2_checkEnumDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53b8521_Enum>* _123538_e) {
	if (_1ceeeb217_IsIgnoreIdent((*(_123538_e)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_123538_e)))), (*(_123538_e)).get()._field_Ident, false)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_123538_e)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_123538_e)).get()._field_Items.len() == 0LL)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_123538_e)).get()._field_Ident, &__jule_any_type5)}));
	};
	_1a7c73082_checkEnumItemsDup(_self_.ptr(), (*(_123538_e)).get()._field_Items);
	if (((*(_123538_e)).get()._field_Kind != nullptr)) {
		if ((!(_1a5403858_checkType(_self_, &((*(_123538_e)).get()._field_Kind), jule::Trait<_1a54ad209_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_123538_e)).get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)})});
	};
	jule::Ptr<_1a5496ed4_Prim> _126217_t = _1a549461e_Prim((*(_123538_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_126217_t == nullptr)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1a549a218_IsStr(_126217_t.ptr())) {
			_case_begin_1a7c7930d:;
			{
				_1a54095b7_checkEnumItemsStr(_self_, _123538_e);
			}
		}
		else if (_1a5389404_IsInt(_1a5497347_Str(_126217_t.ptr()))) {
			_case_begin_1a7c79011:;
			{
				_1a540983c_checkEnumItemsInt(_self_, _123538_e);
			}
		}
		else {
			_case_begin_1a7c7853d:;
			{
				_1a53ed600_pushErr(_self_.ptr(), (*(_123538_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7c784d8:;
	};
}



inline void _1a5409d37_checkTypeEnumDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53b9b1b_TypeEnum>* _127942_e) {
	if (_1ceeeb217_IsIgnoreIdent((*(_127942_e)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_127942_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_127942_e)))), (*(_127942_e)).get()._field_Ident, false)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_127942_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_127942_e)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_127942_e)).get()._field_Items.len() == 0LL)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_127942_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_127942_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1a7c7d378_checkEnumItemsDup(_self_.ptr(), (*(_127942_e)).get()._field_Items);
	{
		auto expr = &((*(_127942_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c7a9e6:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9555_TypeEnumItem> _129321_item = *it;
			{
				if ((_129321_item.get()._field_Kind == nullptr)) {
					_1a53ed600_pushErr(_self_.ptr(), _129321_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1a7c7a9e6;
				};
				jule::Bool _129817_ok = _1a5403858_checkType(_self_, &(_129321_item.get()._field_Kind), jule::Trait<_1a54ad209_Lookup>(_self_, 3));;
				if ((!(_129817_ok))) {
					goto _iter_next_1a7c7a9e6;
				};
				jule::Ptr<_1a5496ed4_Prim> _130217_p = _1a549461e_Prim(_129321_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_130217_p != nullptr) && _1a549a47c_IsAny(_130217_p.ptr()))) {
					_1a53ed600_pushErr(_self_.ptr(), _129321_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a7c7a9e6:;
			++it;
			goto _iter_begin_1a7c7a9e6;
		}
		_iter_end_1a7c7a9e6:;
	};
	if (((*(_127942_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1a53b9555_TypeEnumItem> _130821_item = (*(_127942_e)).get()._field_Items[0LL];;
		_1a5492287_TypeKind _130917_tk = _1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>((*(_127942_e)), 4)};;
		if (((_130821_item.get()._field_Kind.get()._field_Kind != nullptr) && _1a5492991_Equal(_130821_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1a5492287_TypeKind>)((&(_130917_tk))))))) {
			_1a53ed600_pushErr(_self_.ptr(), _130821_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1a53b9e4b_Str((*(_127942_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1a540a09b_checkEnumDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c875b3:;
		if (it != expr_end) {
			jule::Ptr<_1a53b8521_Enum> _132021_e = *it;
			{
				_1a5409ab2_checkEnumDecl(_self_, &(_132021_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7c875b3:;
			++it;
			goto _iter_begin_1a7c875b3;
		}
		_iter_end_1a7c875b3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a540a310_checkTypeEnumDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c889d2:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9b1b_TypeEnum> _133221_e = *it;
			{
				_1a5409d37_checkTypeEnumDecl(_self_, &(_133221_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7c889d2:;
			++it;
			goto _iter_begin_1a7c889d2;
		}
		_iter_end_1a7c889d2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a540a61d_checkDeclGenerics(_1a53ea93d_Sema* _self_, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>* _134237_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134237_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c8a0bb:;
		if (it != expr_end) {
			jule::I64 _134413_i = it - expr->begin();
			jule::Ptr<_1a486dca2_GenericDecl> *_134416_g = it;
			{
				if (_1ceeeb217_IsIgnoreIdent((*(_134416_g)).get()._field_Ident)) {
					_1a53ed600_pushErr(_self_, (*(_134416_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a7c8a0bb;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _134237_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c8b7e8:;
					if (it != expr_end) {
						jule::I64 _135317_j = it - expr->begin();
						jule::Ptr<_1a486dca2_GenericDecl> *_135320_ct = it;
						{
							{
								
								if ((_135317_j >= _134413_i)) {
									_case_begin_1a7c8c71c:;
									{
										goto _iter_end_1a7c8b7e8;
									}
								}
								else if (((*(_134416_g)).get()._field_Ident == (*(_135320_ct)).get()._field_Ident)) {
									_case_begin_1a7c8c794:;
									{
										_1a53ed600_pushErr(_self_, (*(_134416_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_134416_g)).get()._field_Ident, &__jule_any_type5)}));
										_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1a7c8b7e8;
									}
								}
								_match_end_1a7c8c60c:;
							};
						}
						_iter_next_1a7c8b7e8:;
						++it;
						_135317_j++;
						goto _iter_begin_1a7c8b7e8;
					}
					_iter_end_1a7c8b7e8:;
				};
			}
			_iter_next_1a7c8a0bb:;
			++it;
			_134413_i++;
			goto _iter_begin_1a7c8a0bb;
		}
		_iter_end_1a7c8a0bb:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a540a92b_checkFnDeclParamsDup(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53a44c9_Fn>* _136940_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_136940_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c8ea2c:;
		if (it != expr_end) {
			jule::I64 _137213_i = it - expr->begin();
			jule::Ptr<_1a53a2b8c_Param> *_137216_p = it;
			{
				{
					auto expr = &((*(_136940_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c906a9:;
					if (it != expr_end) {
						jule::Ptr<_1a486dca2_GenericDecl> *_137420_g = it;
						{
							if (((*(_137216_p)).get()._field_Ident == (*(_137420_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1a53ed600_pushErr(_self_, (*(_137216_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_137216_p)).get()._field_Ident, &__jule_any_type5)}));
								_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1a7c8ea2c;
							};
						}
						_iter_next_1a7c906a9:;
						++it;
						goto _iter_begin_1a7c906a9;
					}
					_iter_end_1a7c906a9:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_136940_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c9119e:;
					if (it != expr_end) {
						jule::I64 _138417_j = it - expr->begin();
						jule::Ptr<_1a53a2b8c_Param> *_138420_jp = it;
						{
							{
								
								if ((_138417_j >= _137213_i)) {
									_case_begin_1a7c92cc7:;
									{
										goto _iter_end_1a7c9119e;
									}
								}
								else if (_1ceeeb217_IsIgnoreIdent((*(_137216_p)).get()._field_Ident) || _1ceeeb217_IsIgnoreIdent((*(_138420_jp)).get()._field_Ident) || _1ceeeb4ae_IsAnonIdent((*(_137216_p)).get()._field_Ident) || _1ceeeb4ae_IsAnonIdent((*(_138420_jp)).get()._field_Ident)) {
									_case_begin_1a7c92d4e:;
									{
										goto _iter_end_1a7c9119e;
									}
								}
								else if (((*(_137216_p)).get()._field_Ident == (*(_138420_jp)).get()._field_Ident)) {
									_case_begin_1a7c92dc6:;
									{
										__jule_func_result=false;
										_1a53ed600_pushErr(_self_, (*(_137216_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_137216_p)).get()._field_Ident, &__jule_any_type5)}));
										_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1a7c8ea2c;
									}
								}
								_match_end_1a7c92ba6:;
							};
						}
						_iter_next_1a7c9119e:;
						++it;
						_138417_j++;
						goto _iter_begin_1a7c9119e;
					}
					_iter_end_1a7c9119e:;
				};
			}
			_iter_next_1a7c8ea2c:;
			++it;
			_137213_i++;
			goto _iter_begin_1a7c8ea2c;
		}
		_iter_end_1a7c8ea2c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a540ac39_checkFnDeclResultDup(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53a44c9_Fn>* _140640_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1a53a493b_IsVoid((*(_140640_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_140640_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7c95d30:;
		if (it != expr_end) {
			jule::I64 _141313_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> *_141316_v = it;
			{
				if ((_1ceeeb217_IsIgnoreIdent((*(_141316_v)).get()._field_Kind) || _1ceeeb4ae_IsAnonIdent((*(_141316_v)).get()._field_Kind))) {
					goto _iter_next_1a7c95d30;
				};
				{
					auto expr = &((*(_140640_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c97370:;
					if (it != expr_end) {
						jule::Ptr<_1a486dca2_GenericDecl> *_141820_g = it;
						{
							if (((*(_141316_v)).get()._field_Kind == (*(_141820_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a7c97370:;
						++it;
						goto _iter_begin_1a7c97370;
					}
					_iter_end_1a7c97370:;
				};
				{
					auto expr = &((*(_140640_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c98580:;
					if (it != expr_end) {
						jule::Ptr<_1a53a2b8c_Param> *_142420_p = it;
						{
							if (((*(_141316_v)).get()._field_Kind == (*(_142420_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1a7c98580:;
						++it;
						goto _iter_begin_1a7c98580;
					}
					_iter_end_1a7c98580:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_140640_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7c99790:;
					if (it != expr_end) {
						jule::I64 _143217_j = it - expr->begin();
						jule::Ptr<_1ceee8973_Token> *_143220_jv = it;
						{
							{
								
								if ((_143217_j >= _141313_i)) {
									_case_begin_1a7c9a494:;
									{
										goto _iter_end_1a7c99790;
									}
								}
								else if (((*(_143220_jv)).get()._field_Kind == (*(_141316_v)).get()._field_Kind)) {
									_case_begin_1a7c9a51b:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1a7c9a384:;
							};
						}
						_iter_next_1a7c99790:;
						++it;
						_143217_j++;
						goto _iter_begin_1a7c99790;
					}
					_iter_end_1a7c99790:;
				};
				goto _iter_next_1a7c95d30;
				_julec_label_exist:;
				_1a53ed600_pushErr(_self_, (*(_141316_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141316_v)).get()._field_Kind, &__jule_any_type5)}));
				_1a53ed91e_pushSugggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1a7c95d30:;
			++it;
			_141313_i++;
			goto _iter_begin_1a7c95d30;
		}
		_iter_end_1a7c95d30:;
	};
	return __jule_func_result;;
}



inline void _1a540aeae_checkFnDeclPrototype(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a44c9_Fn>* _145345_f) {
	if (((*(_145345_f)).get()._field_Exceptional && (*(_145345_f)).get()._field_CppLinked)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_145345_f)).get()._field_Token, jule::Str("cpp-linked defines cannot be exceptional", 40), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_145345_f)).get()._field_Exceptional) {
		if (_1a53a4e14_IsEntryPoint((*(_145345_f)).ptr())) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_145345_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1a53a5178_IsInit((*(_145345_f)).ptr())) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_145345_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1a540a61d_checkDeclGenerics(_self_.ptr(), &((*(_145345_f)).get()._field_Generics))))) {
			_case_begin_1a7c9d5eb:;
		}
		else if ((!(_1a540a92b_checkFnDeclParamsDup(_self_.ptr(), _145345_f)))) {
			_case_begin_1a7c9d662:;
		}
		else if ((!(_1a540ac39_checkFnDeclResultDup(_self_.ptr(), _145345_f)))) {
			_case_begin_1a7c9e993:;
		}
		_match_end_1a7c9d4db:;
	};
}



inline void _1a540b234_checkTraitDeclMethod(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a44c9_Fn>* _147445_f) {
	if (_1ceeeb217_IsIgnoreIdent((*(_147445_f)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_147445_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	(*(_147445_f)).get()._field_sema=_self_;
	_1a540aeae_checkFnDeclPrototype(_self_, _147445_f);
	jule::Ptr<_1a53a717a_FnIns> _148117_ins = _1a53a5b29_instance((*(_147445_f)));;
	_1a54078a1_reloadFnInsTypes(_self_, _148117_ins);
	_148117_ins.get()._field_reloaded=true;
	_1a53a5e04_appendInstance((*(_147445_f)).ptr(), &(_148117_ins));
}



inline void _1a540b4a9_checkTraitDeclMethods(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53b63cb_Trait>* _148746_t) {
	{
		auto expr = &((*(_148746_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ca2d3c:;
		if (it != expr_end) {
			jule::I64 _148814_i = it - expr->begin();
			jule::Ptr<_1a53a44c9_Fn> _148821_f = *it;
			{
				_1a540b234_checkTraitDeclMethod(_self_, &(_148821_f));
				(*(_148746_t)).get()._field_Mutable=((*(_148746_t)).get()._field_Mutable || _148821_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_148746_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7ca4cea:;
					if (it != expr_end) {
						jule::I64 _149917_j = it - expr->begin();
						jule::Ptr<_1a53a44c9_Fn> _149920_jf = *it;
						{
							{
								
								if ((_149917_j >= _148814_i)) {
									_case_begin_1a7ca5a76:;
									{
										goto _iter_end_1a7ca4cea;
									}
								}
								else if ((_148821_f.get()._field_Ident == _149920_jf.get()._field_Ident)) {
									_case_begin_1a7ca5aed:;
									{
										_1a53ed600_pushErr(_self_.ptr(), _148821_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_148821_f.get()._field_Ident, &__jule_any_type5)}));
										_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1a7ca4cea;
									}
								}
								_match_end_1a7ca5966:;
							};
						}
						_iter_next_1a7ca4cea:;
						++it;
						_149917_j++;
						goto _iter_begin_1a7ca4cea;
					}
					_iter_end_1a7ca4cea:;
				};
			}
			_iter_next_1a7ca2d3c:;
			++it;
			_148814_i++;
			goto _iter_begin_1a7ca2d3c;
		}
		_iter_end_1a7ca2d3c:;
	};
}



inline void _1a540b72e_checkTraitDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53b63cb_Trait>* _151839_t) {
	if (_1ceeeb217_IsIgnoreIdent((*(_151839_t)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_151839_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_151839_t)))), (*(_151839_t)).get()._field_Ident, false)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_151839_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_151839_t)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a540b4a9_checkTraitDeclMethods(_self_, _151839_t);
}



inline jule::Bool _1a540b993_checkTraitDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ca9904:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> _153121_t = *it;
			{
				_1a540b72e_checkTraitDecl(_self_, &(_153121_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7ca9904:;
			++it;
			goto _iter_begin_1a7ca9904;
		}
		_iter_end_1a7ca9904:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a540bd4a_checkTraitImplMethods(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53b63cb_Trait>* _154145_base, jule::Ptr<_1a53be082_Impl>* _154160_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_154160_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cab3a6:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> *_154316_f = it;
			{
				if ((_1a53b7256_FindMethod((*(_154145_base)).ptr(), (*(_154316_f)).get()._field_Ident) == nullptr)) {
					_1a53ed600_pushErr(_self_, (*(_154316_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_154145_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_154316_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a7cab3a6:;
			++it;
			goto _iter_begin_1a7cab3a6;
		}
		_iter_end_1a7cab3a6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a540c202_implToStruct(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _155237_dest, jule::Ptr<_1a53be082_Impl>* _155257_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_155257_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cad5ea:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _155621_f = *it;
			{
				if (((_1a483e47b_FindMethod((*(_155237_dest)).ptr(), _155621_f.get()._field_Ident, _155621_f.get()._field_Statically) != nullptr) || (_1a4841a33_FindField((*(_155237_dest)).ptr(), _155621_f.get()._field_Ident) != nullptr))) {
					_1a53ed600_pushErr(_self_.ptr(), _155621_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_155237_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_155621_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1a7cad5ea;
				};
				if ((((*(_155237_dest)).get()._field_Generics.len() > 0LL) && (_155621_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_155621_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7cb0b08:;
						if (it != expr_end) {
							jule::Ptr<_1a486dca2_GenericDecl> _156424_fg = *it;
							{
								{
									auto expr = &((*(_155237_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a7cb13de:;
									if (it != expr_end) {
										jule::Ptr<_1a486dca2_GenericDecl> _156528_dg = *it;
										{
											if ((_156424_fg.get()._field_Ident == _156528_dg.get()._field_Ident)) {
												_1a53ed600_pushErr(_self_.ptr(), _156424_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1a7cb13de:;
										++it;
										goto _iter_begin_1a7cb13de;
									}
									_iter_end_1a7cb13de:;
								};
							}
							_iter_next_1a7cb0b08:;
							++it;
							goto _iter_begin_1a7cb0b08;
						}
						_iter_end_1a7cb0b08:;
					};
				};
				_1a53ee546_checkDirectives(_self_, &(_155621_f.get()._field_Directives), jule::Any(_155621_f, &__jule_any_type65));
				_155621_f.get()._field_sema=_self_;
				_155621_f.get()._field_Owner=(*(_155237_dest));
				(*(_155237_dest)).get()._field_Methods = jule::alloc_for_append((*(_155237_dest)).get()._field_Methods,1);(*(_155237_dest)).get()._field_Methods.__push(_155621_f);;
			}
			_iter_next_1a7cad5ea:;
			++it;
			goto _iter_begin_1a7cad5ea;
		}
		_iter_end_1a7cad5ea:;
	};
	{
		auto expr = &((*(_155257_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cb3b61:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _158121_v = *it;
			{
				;
				if (((_1a483e47b_FindMethod((*(_155237_dest)).ptr(), _158121_v.get()._field_Ident, true) != nullptr) || (_1a48425d3_FindStatic((*(_155237_dest)).ptr(), _158121_v.get()._field_Ident) != nullptr))) {
					_1a53ed600_pushErr(_self_.ptr(), _158121_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_155237_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_158121_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1a7cb3b61;
				};
				(*(_155237_dest)).get()._field_Statics = jule::alloc_for_append((*(_155237_dest)).get()._field_Statics,1);(*(_155237_dest)).get()._field_Statics.__push(_158121_v);;
			}
			_iter_next_1a7cb3b61:;
			++it;
			goto _iter_begin_1a7cb3b61;
		}
		_iter_end_1a7cb3b61:;
	};
	return __jule_func_result;;
}



inline void _1a540c477_implTrait(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53be082_Impl>* _159434_decl) {
	jule::Ptr<_1a5492287_TypeKind> _159517_base_t = _1a54043c5_selectType(_self_, &((*(_159434_decl)).get()._field_Base));;
	if ((_159517_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1a53b63cb_Trait> _159917_base = _1a5495cd5_Trait(_159517_base_t.ptr());;
	if ((_159917_base == nullptr)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_159434_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_159517_base_t.ptr()), &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5492287_TypeKind> _160617_destT = _1a54043c5_selectType(_self_, &((*(_159434_decl)).get()._field_Dest));;
	if ((_160617_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a487d575_StructIns> _161017_destS = _1a5495a71_Struct(_160617_destT.ptr());;
	if ((_161017_destS == nullptr)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_159434_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_160617_destT.ptr()), &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a487d19b_Struct> _161717_dest = _161017_destS.get()._field_Decl;;
	if ((_1ceeee704_Dir(_161717_dest.get()._field_Token.get()._field_File.ptr()) != _1ceeee704_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_159434_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_159917_base.get()._field_Implemented = jule::alloc_for_append(_159917_base.get()._field_Implemented,1);_159917_base.get()._field_Implemented.__push(_161717_dest);;
	_161717_dest.get()._field_Implements = jule::alloc_for_append(_161717_dest.get()._field_Implements,1);_161717_dest.get()._field_Implements.__push(_159917_base);;
	if (((*(_159434_decl)).get()._field_Statics.len() > 0LL)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_159434_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1a540bd4a_checkTraitImplMethods(_self_.ptr(), &(_159917_base), _159434_decl)))) {
			_case_begin_1a7cbcc36:;
			{
				return;;
			}
		}
		else if ((!(_1a540c202_implToStruct(_self_, &(_161717_dest), _159434_decl)))) {
			_case_begin_1a7cbccad:;
			{
				return;;
			}
		}
		_match_end_1a7cbb174:;
	};
}



inline void _1a540c6ec_implStruct(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53be082_Impl>* _163935_decl) {
	jule::Ptr<_1a5492287_TypeKind> _164017_destT = _1a54043c5_selectType(_self_, &((*(_163935_decl)).get()._field_Dest));;
	if ((_164017_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1a487d575_StructIns> _164417_destS = _1a5495a71_Struct(_164017_destT.ptr());;
	if ((_164417_destS == nullptr)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_163935_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_164017_destT.ptr()), &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a487d19b_Struct> _165117_dest = _164417_destS.get()._field_Decl;;
	if ((_1ceeee704_Dir(_165117_dest.get()._field_Token.get()._field_File.ptr()) != _1ceeee704_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_163935_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1a540c202_implToStruct(_self_, &(_165117_dest), _163935_decl)))) {
			_case_begin_1a7cc2422:;
			{
				return;;
			}
		}
		_match_end_1a7cbec7c:;
	};
}



inline void _1a540c972_implImpl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53be082_Impl>* _166433_decl) {
	{
		
		if (_1a53be47d_IsTraitImpl((*(_166433_decl)).ptr())) {
			_case_begin_1a7cc3016:;
			{
				_1a540c477_implTrait(_self_, _166433_decl);
			}
		}
		else if (_1a53be6e2_IsStructImpl((*(_166433_decl)).ptr())) {
			_case_begin_1a7cc308d:;
			{
				_1a540c6ec_implStruct(_self_, _166433_decl);
			}
		}
		_match_end_1a7cc2e06:;
	};
}



inline void _1a540cc91_checkVarDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5418939_Var>* _167537_decl, jule::Trait<_1a54ad209_Lookup> _167553_l) {
	if (_1ceeeb217_IsIgnoreIdent((*(_167537_decl)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_167537_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1a5419066_IsTypeInferred((*(_167537_decl)).ptr())) {
		if ((!(_1a5418d02_IsInitialized((*(_167537_decl)).ptr())))) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_167537_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1a5403858_checkType(_self_, &((*(_167537_decl)).get()._field_Kind), _167553_l);
	};
	if (((*(_167537_decl)).get()._field_Constant && (*(_167537_decl)).get()._field_Reference)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_167537_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1a5418d02_IsInitialized((*(_167537_decl)).ptr())))) {
		if ((*(_167537_decl)).get()._field_Constant) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_167537_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_167537_decl)).get()._field_Statically) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_167537_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_167537_decl)).get()._field_Reference) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_167537_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1a540d016_checkGlobalVarDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5418939_Var>* _170743_decl) {
	if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_170743_decl)))), (*(_170743_decl)).get()._field_Ident, (*(_170743_decl)).get()._field_CppLinked)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_170743_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_170743_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_170743_decl)).get()._field_CppLinked && (*(_170743_decl)).get()._field_Constant)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_170743_decl)).get()._field_Token, jule::Str("cpp linked variables cannot be constant", 39), jule::Slice<jule::Any>());
	};
	if ((((!((*(_170743_decl)).get()._field_CppLinked)) && (!((*(_170743_decl)).get()._field_Constant))) && (!((*(_170743_decl)).get()._field_Statically)))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_170743_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1a53ee546_checkDirectives(_self_, &((*(_170743_decl)).get()._field_Directives), jule::Any((*(_170743_decl)), &__jule_any_type8));
	_1a540cc91_checkVarDecl(_self_, _170743_decl, jule::Trait<_1a54ad209_Lookup>(_self_, 3));
}



inline jule::Bool _1a540d27a_checkGlobalDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ccc570:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _172521_decl = *it;
			{
				_1a540d016_checkGlobalVarDecl(_self_, &(_172521_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7ccc570:;
			++it;
			goto _iter_begin_1a7ccc570;
		}
		_iter_end_1a7ccc570:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a540d632_checkStructTraitImpl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _173545_strct, jule::Ptr<_1a53b63cb_Trait>* _173566_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_173566_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ccdcbe:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _173621_tf = *it;
			{
				jule::Bool _173721_exist = false;;
				jule::Ptr<_1a53a44c9_Fn> _173821_sf = _1a483e47b_FindMethod((*(_173545_strct)).ptr(), _173621_tf.get()._field_Ident, _173621_tf.get()._field_Statically);;
				jule::Ptr<_1a53a717a_FnIns> _173917_tfK = _1a54065b4_getTraitCheckFnKind(_self_, &(_173621_tf));;
				if ((_173821_sf != nullptr)) {
					jule::Ptr<_1a53a717a_FnIns> _174125_sfK = _1a54065b4_getTraitCheckFnKind(_self_, &(_173821_sf));;
					_173721_exist=(((_173917_tfK.get()._field_Decl.get()._field_Public == _174125_sfK.get()._field_Decl.get()._field_Public) && (_173917_tfK.get()._field_Decl.get()._field_Ident == _174125_sfK.get()._field_Decl.get()._field_Ident)) && _1a53a8038_equalTrait(_173917_tfK, &(_174125_sfK)));
				};
				if (_173721_exist) {
					jule::Ptr<_1a3c1d0ec_Directive> _174721_d = _1a548b935_findDirective(&(_173821_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_174721_d != nullptr)) {
						_1a53ed600_pushErr(_self_.ptr(), _174721_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					jule::Str _175425_s = _1a53a8d91_GetKindStr(_173917_tfK.ptr(), true);;
					if (_173621_tf.get()._field_Public) {
						(_175425_s).buffer.insert(0, (jule::Str()));;
					};
					_1a53ed600_pushErr(_self_.ptr(), (*(_173545_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_173566_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_175425_s, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a7ccdcbe:;
			++it;
			goto _iter_begin_1a7ccdcbe;
		}
		_iter_end_1a7ccdcbe:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a540d940_checkStructImpls(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _176541_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_176541_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cd5523:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> _176721_trt = *it;
			{
				__jule_func_result=(_1a540d632_checkStructTraitImpl(_self_, _176541_s, &(_176721_trt)) && __jule_func_result);
			}
			_iter_next_1a7cd5523:;
			++it;
			goto _iter_begin_1a7cd5523;
		}
		_iter_end_1a7cd5523:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a540dc4d_checkStructFields(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _177342_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_177342_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cd6887:;
		if (it != expr_end) {
			jule::Ptr<_1a4852208_Field> _177521_f = *it;
			{
				_177521_f.get()._field_Owner=(*(_177342_st));
				{
					auto expr = &((*(_177342_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7cd73d2:;
					if (it != expr_end) {
						jule::Ptr<_1a4852208_Field> _177720_cf = *it;
						{
							if ((_177521_f == _177720_cf)) {
								goto _iter_end_1a7cd73d2;
							} else if ((_177521_f.get()._field_Ident == _177720_cf.get()._field_Ident)) {
								_1a53ed600_pushErr(_self_.ptr(), _177521_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_177521_f.get()._field_Ident, &__jule_any_type5)}));
								_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a7cd73d2:;
						++it;
						goto _iter_begin_1a7cd73d2;
					}
					_iter_end_1a7cd73d2:;
				};
			}
			_iter_next_1a7cd6887:;
			++it;
			goto _iter_begin_1a7cd6887;
		}
		_iter_end_1a7cd6887:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1a540dec3_checkStructDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _179040_s) {
	if (_1ceeeb217_IsIgnoreIdent((*(_179040_s)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_179040_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_179040_s)))), (*(_179040_s)).get()._field_Ident, (*(_179040_s)).get()._field_CppLinked)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_179040_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_179040_s)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1a53ee546_checkDirectives(_self_, &((*(_179040_s)).get()._field_Directives), jule::Any((*(_179040_s)), &__jule_any_type66));
	{
		
		if ((!(_1a540a61d_checkDeclGenerics(_self_.ptr(), &((*(_179040_s)).get()._field_Generics))))) {
			_case_begin_1a7cd924c:;
		}
		else if ((!(_1a540dc4d_checkStructFields(_self_, _179040_s)))) {
			_case_begin_1a7cdb073:;
		}
		else if ((!(_1a540d940_checkStructImpls(_self_, _179040_s)))) {
			_case_begin_1a7cdb0ea:;
		}
		_match_end_1a7cdae63:;
	};
}



inline jule::Bool _1a540e237_checkStructDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ce219a:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _180921_s = *it;
			{
				_1a540dec3_checkStructDecl(_self_, &(_180921_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7ce219a:;
			++it;
			goto _iter_begin_1a7ce219a;
		}
		_iter_end_1a7ce219a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a540e4ac_checkFnDecl(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a44c9_Fn>* _181936_f) {
	if (_1ceeeb217_IsIgnoreIdent((*(_181936_f)).get()._field_Ident)) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_181936_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1a53ee546_checkDirectives(_self_, &((*(_181936_f)).get()._field_Directives), jule::Any((*(_181936_f)), &__jule_any_type65));
	(*(_181936_f)).get()._field_sema=_self_;
	_1a540aeae_checkFnDeclPrototype(_self_, _181936_f);
	if (_1a53ee227_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_181936_f)))), (*(_181936_f)).get()._field_Ident, (*(_181936_f)).get()._field_CppLinked)) {
		if (((*(_181936_f)).get()._field_Ident == jule::Str("init", 4))) {
			jule::Ptr<_1a53a44c9_Fn> _183121_init = _1a53ec236_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_183121_init != nullptr)) {
				return;;
			};
		};
		_1a53ed600_pushErr(_self_.ptr(), (*(_181936_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_181936_f)).get()._field_Ident, &__jule_any_type5)}));
		_1a53ed91e_pushSugggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a540e721_checkFnDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ce6e80:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _184321_f = *it;
			{
				_1a540e4ac_checkFnDecl(_self_, &(_184321_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7ce6e80:;
			++it;
			goto _iter_begin_1a7ce6e80;
		}
		_iter_end_1a7ce6e80:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a540ead9_pushCycleError(_1a53ea93d_Sema* _self_, jule::Ptr<_1a487d19b_Struct>* _185330_st1, jule::Ptr<_1a487d19b_Struct>* _185345_st2, jule::Str* _185364_message) {
	;
	jule::Str _185513_refers_to = _1ceb4996a_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_185330_st1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_185345_st2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_185364_message))).buffer.insert(0, (((_1ceaa53cb_Repeat(jule::Str(" ", 1), 4LL) + _185513_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a541003a_checkCrossCycle(_1a53ea93d_Sema* _self_, jule::Ptr<_1a487d19b_Struct>* _185931_st1, jule::Ptr<_1a487d19b_Struct>* _185946_st2, jule::Str* _185965_message) {
	{
		auto expr = &((*(_185946_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7cea1b4:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> *_186016_u = it;
			{
				if (((*(_186016_u)) == (*(_185931_st1)))) {
					_1a540ead9_pushCycleError(_self_, _185946_st2, _186016_u, _185965_message);
					return false;;
				};
				if ((!(_1a541003a_checkCrossCycle(_self_, _185931_st1, _186016_u, _185965_message)))) {
					_1a540ead9_pushCycleError(_self_, _185946_st2, _186016_u, _185965_message);
					return false;;
				};
			}
			_iter_next_1a7cea1b4:;
			++it;
			goto _iter_begin_1a7cea1b4;
		}
		_iter_end_1a7cea1b4:;
	};
	return true;;
}



inline jule::Bool _1a54104ad_checkStructDeriveIllegalCycles(_1a53ea93d_Sema* _self_, jule::Str _187449_derive, jule::Ptr<_1a487d19b_Struct>* _187463_st1, jule::Ptr<_1a5492287_TypeKind>* _187482_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a487d19b_Struct> _187517_st2 = _1a54aa822_getStructFromKind((*(_187482_k)));;
	if ((_187517_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_187463_st1)) == _187517_st2)) {
		_1a53ed600_pushErr(_self_, (*(_187463_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_187449_derive, &__jule_any_type5),jule::Any((*(_187463_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _188717_message = jule::Str();;
	if ((!(_1a541003a_checkCrossCycle(_self_, _187463_st1, &(_187517_st2), &(_188717_message))))) {
		jule::Str _188921_errMsg = _188717_message;;
		_188717_message=jule::Str();
		_1a540ead9_pushCycleError(_self_, _187463_st1, &(_187517_st2), &(_188717_message));
		_188921_errMsg+=_188717_message;
		_1a53ed600_pushErr(_self_, (*(_187463_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_187449_derive, &__jule_any_type5),jule::Any(_188921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a54107ee_checkStructInsDeriveClone(_1a53ea93d_Sema* _self_, jule::Ptr<_1a487d575_StructIns> _189948_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1a484320a_IsDerives(_189948_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_189948_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d009a0:;
		if (it != expr_end) {
			jule::Ptr<_1a487d388_FieldIns> _190321_f = *it;
			{
				if ((_190321_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1a7d009a0;
				};
				if ((!(_1a5494146_SupportsCloning(_190321_f.get()._field_Kind.ptr())))) {
					_1a53ed600_pushErr(_self_, _189948_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_190321_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1a54104ad_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_189948_st.get()._field_Decl), &(_190321_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7d009a0:;
			++it;
			goto _iter_begin_1a7d009a0;
		}
		_iter_end_1a7d009a0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a54109db_checkPackageDecls(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d03530:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _192121_f = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _192121_f);
				if ((!(_1a540a310_checkTypeEnumDecls(_self_)))) {
					return;;
				};
				if ((!(_1a54090bc_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a7d03530:;
			++it;
			goto _iter_begin_1a7d03530;
		}
		_iter_end_1a7d03530:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d037d8:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _193121_f = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _193121_f);
				if ((!(_1a540b993_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a7d037d8:;
			++it;
			goto _iter_begin_1a7d037d8;
		}
		_iter_end_1a7d037d8:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d04795:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _193821_f = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _193821_f);
				if ((!(_1a540d27a_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a7d04795:;
			++it;
			goto _iter_begin_1a7d04795;
		}
		_iter_end_1a7d04795:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d060d2:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _194521_f = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _194521_f);
				{
					
					if ((!(_1a540e721_checkFnDecls(_self_)))) {
						_case_begin_1a7d06c81:;
					}
					else if ((!(_1a540e237_checkStructDecls(_self_)))) {
						_case_begin_1a7d06ce7:;
					}
					else {
						_case_begin_1a7d06c1a:;
						{
							goto _iter_next_1a7d060d2;
						}
					}
					_match_end_1a7d06ba4:;
				};
				return;;
			}
			_iter_next_1a7d060d2:;
			++it;
			goto _iter_begin_1a7d060d2;
		}
		_iter_end_1a7d060d2:;
	};
}



inline void _1a5410d2c_checkDataForTypeInference(_1a53ea93d_Sema* _self_, jule::Ptr<_1a5466305_Data>* _195745_d, jule::Ptr<_1ceee8973_Token>* _195756_err_token) {
	{
		
		if (_1a54666e0_IsNil((*(_195745_d)).ptr())) {
			_case_begin_1a7d07c1b:;
			{
				_1a53ed600_pushErr(_self_, (*(_195756_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1a5466954_IsVoid((*(_195745_d)).ptr())) {
			_case_begin_1a7d07c93:;
			{
				_1a53ed600_pushErr(_self_, (*(_195756_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_195745_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a7d07d1a:;
			{
				_1a53ed600_pushErr(_self_, (*(_195756_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7d07aea:;
	};
}



inline void _1a54110b3_checkVar(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5418939_Var>* _196833_v) {
	if ((*(_196833_v)).get()._field_CppLinked) {
		return;;
	};
	if (_1a5419066_IsTypeInferred((*(_196833_v)).ptr())) {
		(*(_196833_v)).get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=(*(_196833_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1a5410d2c_checkDataForTypeInference(_self_.ptr(), &((*(_196833_v)).get()._field_Value.get()._field_Data), &((*(_196833_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1a54083eb_checkValidityForInitExpr(_self_, (*(_196833_v)).get()._field_Mutable, (*(_196833_v)).get()._field_Reference, &((*(_196833_v)).get()._field_Kind.get()._field_Kind), &((*(_196833_v)).get()._field_Value.get()._field_Data), &((*(_196833_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1a549d370_Arr> _198521_arr = _1a5495334_Arr((*(_196833_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_198521_arr != nullptr)) {
			if (_198521_arr.get()._field_Auto) {
				jule::Ptr<_1a549d370_Arr> _198825_dataArr = _1a5495334_Arr((*(_196833_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_198825_dataArr != nullptr)) {
					_198521_arr.get()._field_N=_198825_dataArr.get()._field_N;
				};
			};
		};
		if (_1a54054d6_checkAssignType(_self_, (*(_196833_v)).get()._field_Reference, &((*(_196833_v)).get()._field_Kind.get()._field_Kind), &((*(_196833_v)).get()._field_Value.get()._field_Data), (*(_196833_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1a54083eb_checkValidityForInitExpr(_self_, (*(_196833_v)).get()._field_Mutable, (*(_196833_v)).get()._field_Reference, &((*(_196833_v)).get()._field_Kind.get()._field_Kind), &((*(_196833_v)).get()._field_Value.get()._field_Data), &((*(_196833_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_196833_v)).get()._field_Reference && (!(_1a54a9b84_isValidForRef(&((*(_196833_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1a53ed600_pushErr(_self_.ptr(), (*(_196833_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_196833_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_196833_v)).get()._field_Constant) {
		if ((!(_1a5466bb8_IsConst((*(_196833_v)).get()._field_Value.get()._field_Data.ptr())))) {
			_1a53ed600_pushErr(_self_.ptr(), (*(_196833_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*(_196833_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1a54962ad_Tup((*(_196833_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_196833_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1a54113d2_checkTypeVar(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a5418939_Var>* _202337_decl, jule::Trait<_1a54ad209_Lookup> _202353_l) {
	if (((*(_202337_decl)).get()._field_CppLinked || (!(_1a5418d02_IsInitialized((*(_202337_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a5467d73_Eval> _202817_eval = nullptr;;
	if (((*(_202337_decl)).get()._field_Kind != nullptr)) {
		_202817_eval=_1a5404826_evalpd(_self_, _202353_l, (*(_202337_decl)).get()._field_Kind.get()._field_Kind, (*(_202337_decl)));
	} else {
		_202817_eval=_1a5404826_evalpd(_self_, _202353_l, nullptr, (*(_202337_decl)));
	};
	_202817_eval.get()._field_immutable=(!((*(_202337_decl)).get()._field_Mutable));
	(*(_202337_decl)).get()._field_Value.get()._field_Data=_1a5483795_evalExpr(_202817_eval, (*(_202337_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_202337_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1a54110b3_checkVar(_self_, _202337_decl);
}



inline void _1a54115ad_checkGlobalTypes(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d16a0a:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _204421_decl = *it;
			{
				if (((_1a5418d02_IsInitialized(_204421_decl.ptr()) && (_204421_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1a5419066_IsTypeInferred(_204421_decl.ptr()) && (_204421_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1a54113d2_checkTypeVar(_self_, &(_204421_decl), jule::Trait<_1a54ad209_Lookup>(_self_, 3));
				};
			}
			_iter_next_1a7d16a0a:;
			++it;
			goto _iter_begin_1a7d16a0a;
		}
		_iter_end_1a7d16a0a:;
	};
}



inline jule::Ptr<_1a53a717a_FnIns> _1a5411965_readyToCheckFn(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _205539_s, jule::Ptr<_1a53a44c9_Fn>* _205559_f) {
	jule::Ptr<_1a53a717a_FnIns> _205617_ins = _1a53a5b29_instance((*(_205559_f)));;
	if (((*(_205559_f)).get()._field_Instances.len() != 0LL)) {
		return _205617_ins;;
	};
	_205617_ins.get()._field_Owner=(*(_205539_s));
	_1a53a5e04_appendInstance((*(_205559_f)).ptr(), &(_205617_ins));
	_205617_ins.get()._field_reloaded=true;
	if (_1a54078a1_reloadFnInsTypes(_self_, _205617_ins)) {
		return _205617_ins;;
	};
	return nullptr;;
}



inline void _1a5411c84_checkTypeMethod(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _206940_s, jule::Ptr<_1a53a44c9_Fn>* _206960_f) {
	if (((*(_206960_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1a53a717a_FnIns> _207417_ins = (*(_206960_f)).get()._field_Instances[0LL];;
	if ((_207417_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1a541445c_checkFnIns(_self_, &(_207417_ins));
}



inline jule::Ptr<_1a53a717a_FnIns> _1a54121d5_checkStructInsOp(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _208241_s, jule::Ptr<_1a53a44c9_Fn>* _208261_f, jule::Fn<jule::Bool(jule::Ptr<_1a53a44c9_Fn>)> _208269_p) {
	if (((((*(_208261_f)) == nullptr) || ((*(_208261_f)).get()._field_Generics.len() > 0LL)) || (!(_208269_p((*(_208261_f))))))) {
		return nullptr;;
	};
	return (*(_208261_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1a541258c_checkStructEnv(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _209239_s, jule::Ptr<_1ceee8973_Token> _209258_errorToken) {
	jule::Bool __jule_func_result = false;
	_1a54a0b03_typeChecker _209317_tc = _1a54a0b03_typeChecker{._field_s=(*(_209239_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1a54ad209_Lookup>((*(_209239_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1a54ad209_Lookup>((*(_209239_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1a549ec23_referencer>(_1a549ec23_referencer{._field_ident=(*(_209239_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_209239_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_209239_s)).get()._field_Refers, };;
	if (((*(_209239_s)).get()._field_Generics.len() > 0LL)) {
		_209317_tc._field_useGenerics=jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>::alloc(0LL, (*(_209239_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_209239_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7d2064b:;
			if (it != expr_end) {
				jule::I64 _210618_i = it - expr->begin();
				jule::Ptr<_1a5490a5a_InsGeneric> _210625_g = *it;
				{
					jule::Ptr<_1a486dca2_GenericDecl> _210725_decl = (*(_209239_s)).get()._field_Decl.get()._field_Generics[_210618_i];;
					_209317_tc._field_useGenerics = jule::alloc_for_append(_209317_tc._field_useGenerics,1);_209317_tc._field_useGenerics.__push(jule::new_ptr<_1a5491594_TypeAlias>(_1a5491594_TypeAlias{._field_Token=_210725_decl.get()._field_Token, ._field_Ident=_210725_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_210625_g.get()._field_Kind}), }));;
				}
				_iter_next_1a7d2064b:;
				++it;
				_210618_i++;
				goto _iter_begin_1a7d2064b;
			}
			_iter_end_1a7d2064b:;
		};
	};
	jule::Ptr<_1a54614cb_SymbolTable> _211617_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1a53ed237_setCurrentFile(_self_.ptr(), _211617_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_209239_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1a54614cb_SymbolTable> _212021_file = _1a53ea047_findFile(&(_self_.get()._field_files), &((*(_209239_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_212021_file != nullptr)) {
			_1a53ed237_setCurrentFile(_self_.ptr(), _212021_file);
		};
	};
	if (((*(_209239_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1a53bc14b_constraintChecker> _212721_cc = _1a54034a1_constraintChecker(_self_);;
		_212721_cc.get()._field_et=_209258_errorToken;
		_212721_cc.get()._field_si=(*(_209239_s));
		_212721_cc.get()._field_genericsA=_209317_tc._field_useGenerics;
		_212721_cc.get()._field_uniq=true;
		if ((!(_1a53bd02b_check(_212721_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_209239_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _214021_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_209317_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_209239_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7d2771e:;
			if (it != expr_end) {
				jule::Ptr<_1a5418939_Var> _214225_v = *it;
				{
					_1a540cc91_checkVarDecl(_self_, &(_214225_v), jule::Trait<_1a54ad209_Lookup>(_self_, 3));
					_1a54113d2_checkTypeVar(_self_, &(_214225_v), jule::Trait<_1a54ad209_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _214021_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a7d2771e:;
				++it;
				goto _iter_begin_1a7d2771e;
			}
			_iter_end_1a7d2771e:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_209317_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1a5467d73_Eval> _215317_eval = _1a5404edb_eval(_self_, jule::Trait<_1a54ad209_Lookup>(_self_, 3));;
	(*(_209239_s)).get()._field_Comparable=(!((*(_209239_s)).get()._field_Decl.get()._field_CppLinked));
	{
		auto expr = &((*(_209239_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d2a26b:;
		if (it != expr_end) {
			jule::Ptr<_1a487d388_FieldIns> _215521_f = *it;
			{
				jule::Ptr<_1a5492287_TypeKind> _215621_kind = _1a54a7d6e_checkDecl(&_209317_tc, &(_215521_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_215621_kind != nullptr) && __jule_func_result);
				if ((_215621_kind == nullptr)) {
					if (((_self_ != (*(_209239_s)).get()._field_Decl.get()._field_sema) && ((*(_209239_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_209239_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_209239_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1a7d2a26b;
				};
				_215521_f.get()._field_Kind=_215621_kind;
				(*(_209239_s)).get()._field_Mutable=((*(_209239_s)).get()._field_Mutable || ((!(_215521_f.get()._field_Decl.get()._field_Mutable)) && _1a5493909_Mutable(_215521_f.get()._field_Kind.ptr())));
				(*(_209239_s)).get()._field_Comparable=((*(_209239_s)).get()._field_Comparable && _1a5493695_Comparable(_215521_f.get()._field_Kind.ptr()));
				_1a54107ee_checkStructInsDeriveClone(_self_.ptr(), (*(_209239_s)));
				if ((_215521_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1a7d2a26b;
				};
				_215317_eval.get()._field_prefix=_215521_f.get()._field_Kind;
				_215317_eval.get()._field_field=_215521_f;
				_215521_f.get()._field_Default=_1a5483795_evalExpr(_215317_eval, _215521_f.get()._field_Decl.get()._field_Default);
				if ((_215521_f.get()._field_Default == nullptr)) {
					goto _iter_next_1a7d2a26b;
				};
				;
				_1a54054d6_checkAssignType(_self_, false, &(_215521_f.get()._field_Kind), &(_215521_f.get()._field_Default), _215521_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1a7d2a26b:;
			++it;
			goto _iter_begin_1a7d2a26b;
		}
		_iter_end_1a7d2a26b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a5412944_precheckStructIns(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _219042_s, jule::Ptr<_1ceee8973_Token> _219061_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1a541258c_checkStructEnv(_self_, _219042_s, _219061_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_219042_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d32608:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _219521_f = *it;
			{
				if ((_219521_f.get()._field_Generics.len() == 0LL)) {
					if ((_1a5411965_readyToCheckFn(_self_, _219042_s, &(_219521_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a7d32608:;
			++it;
			goto _iter_begin_1a7d32608;
		}
		_iter_end_1a7d32608:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a5412bb9_checkStructIns(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns>* _220539_s) {
	{
		auto expr = &((*(_220539_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d33e56:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _220621_f = *it;
			{
				_1a5411c84_checkTypeMethod(_self_, _220539_s, &(_220621_f));
			}
			_iter_next_1a7d33e56:;
			++it;
			goto _iter_begin_1a7d33e56;
		}
		_iter_end_1a7d33e56:;
	};
}



inline void _1a5412e3e_checkTypeStruct(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _221140_s) {
	if ((*(_221140_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_221140_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_221140_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d357a4:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _222421_ins = *it;
			{
				_1a5412bb9_checkStructIns(_self_, &(_222421_ins));
			}
			_iter_next_1a7d357a4:;
			++it;
			goto _iter_begin_1a7d357a4;
		}
		_iter_end_1a7d357a4:;
	};
}



inline void _1a541311a_checkStructTypes(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d36365:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _223021_s = *it;
			{
				_1a5412e3e_checkTypeStruct(_self_, &(_223021_s));
			}
			_iter_next_1a7d36365:;
			++it;
			goto _iter_begin_1a7d36365;
		}
		_iter_end_1a7d36365:;
	};
}



inline void _1a54133b2_checkStructInsOperators(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d575_StructIns> _223547_s) {
	{
		auto expr = &(_223547_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d371ac:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _223621_m = *it;
			{
				{
					auto &_match_expr{ _223621_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1a7d37e16:;
						{
							_223547_s.get()._field_Operators._field_Eq=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541a6d8_Eq);
							_223547_s.get()._field_Comparable=(_223547_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1a7d37e7c:;
						{
							_223547_s.get()._field_Operators._field_Gt=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541a980_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1a7d37ee3:;
						{
							_223547_s.get()._field_Operators._field_GtEq=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541ac27_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1a7d3806a:;
						{
							_223547_s.get()._field_Operators._field_Lt=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541aebe_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1a7d380e2:;
						{
							_223547_s.get()._field_Operators._field_LtEq=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541b266_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1a7d38169:;
						{
							_223547_s.get()._field_Operators._field_Shl=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541b84e_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1a7d381e1:;
						{
							_223547_s.get()._field_Operators._field_Shr=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541bae6_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1a7d38268:;
						{
							_223547_s.get()._field_Operators._field_Add=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541bd8d_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1a7d382e0:;
						{
							_223547_s.get()._field_Operators._field_Sub=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541c135_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1a7d38367:;
						{
							_223547_s.get()._field_Operators._field_Div=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541c3cc_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1a7d383de:;
						{
							_223547_s.get()._field_Operators._field_Mul=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541c674_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1a7d38466:;
						{
							_223547_s.get()._field_Operators._field_Mod=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541c91b_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1a7d384dd:;
						{
							_223547_s.get()._field_Operators._field_BitAnd=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541cbb3_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1a7d38565:;
						{
							_223547_s.get()._field_Operators._field_BitOr=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541ce5a_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1a7d385dc:;
						{
							_223547_s.get()._field_Operators._field_BitXor=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541d202_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1a7d38664:;
						{
							_223547_s.get()._field_Operators._field_Neg=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541d7da_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1a7d386db:;
						{
							_223547_s.get()._field_Operators._field_Pos=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541da82_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1a7d38763:;
						{
							_223547_s.get()._field_Operators._field_BitNot=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541dd29_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1a7d387da:;
						{
							_223547_s.get()._field_Operators._field_AddAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541e412_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1a7d38862:;
						{
							_223547_s.get()._field_Operators._field_SubAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541e6a9_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1a7d388d9:;
						{
							_223547_s.get()._field_Operators._field_DivAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541e951_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1a7d38961:;
						{
							_223547_s.get()._field_Operators._field_MulAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541ebe8_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1a7d389d8:;
						{
							_223547_s.get()._field_Operators._field_ModAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a541ee90_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1a7d38a60:;
						{
							_223547_s.get()._field_Operators._field_ShlAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a5420237_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1a7d38ad7:;
						{
							_223547_s.get()._field_Operators._field_ShrAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a54204ce_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1a7d38b5e:;
						{
							_223547_s.get()._field_Operators._field_BitOrAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a5420776_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1a7d38bd6:;
						{
							_223547_s.get()._field_Operators._field_BitAndAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a5420a1d_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1a7d38c5d:;
						{
							_223547_s.get()._field_Operators._field_BitXorAssign=_1a54121d5_checkStructInsOp(_self_, &(_223547_s), &(_223621_m), static__1a5420cb5_BitXorAssign);
						}
					}
					_match_end_1a7d379e8:;
				};
			}
			_iter_next_1a7d371ac:;
			++it;
			goto _iter_begin_1a7d371ac;
		}
		_iter_end_1a7d371ac:;
	};
}



inline void _1a5413648_precheckStructType(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a487d19b_Struct>* _229943_s) {
	if ((*(_229943_s)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_229943_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_229943_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a487d575_StructIns> _231021_ins = _1a483994e_instance((*(_229943_s)));;
		_231021_ins.get()._field_Checked=true;
		_1a483d722_appendInstance((*(_229943_s)).ptr(), &(_231021_ins));
		_1a5412944_precheckStructIns(_self_, &(_231021_ins), nullptr);
	};
	_1a54133b2_checkStructInsOperators(_self_, (*(_229943_s)).get()._field_Instances[0LL]);
}



inline void _1a5413824_precheckStructTypes(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d4b27b:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _232021_s = *it;
			{
				_1a5413648_precheckStructType(_self_, &(_232021_s));
			}
			_iter_next_1a7d4b27b:;
			++it;
			goto _iter_begin_1a7d4b27b;
		}
		_iter_end_1a7d4b27b:;
	};
}



inline void _1a5413a99_checkRets(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53a717a_FnIns>* _232533_f) {
	if (_1a53a493b_IsVoid((*(_232533_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1a5415c44_missingRetChecker _232913_mrc = static__1a541610c_new();;
	jule::Bool _233013_ok = _1a541711e_check(&_232913_mrc, (*(_232533_f)).get()._field_Scope);;
	if ((!(_233013_ok))) {
		_1a53ed600_pushErr(_self_, (*(_232533_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1a5413db8_checkFnInsSc(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53a717a_FnIns>* _233636_f, jule::Ptr<_1a53cab4e_scopeChecker>* _233652_sc) {
	_1a53e9662_appendRetVars(&((*(_233652_sc)).get()._field_table.get()._field_Vars), _233636_f);
	_1a53e991a_appendParamVars(&((*(_233652_sc)).get()._field_table.get()._field_Vars), _233636_f);
	_1a53e9be5_appendGenericTypeAliases(&((*(_233652_sc)).get()._field_table.get()._field_TypeAliases), _233636_f);
	_1a53da950_check((*(_233652_sc)), &((*(_233636_f)).get()._field_Decl.get()._field_Scope), &((*(_233636_f)).get()._field_Scope));
	if ((!(_1a53cd7bc_stopped((*(_233652_sc)).ptr())))) {
		_1a5413a99_checkRets(_self_, _233636_f);
	};
}



inline void _1a54141d7_checkFnInsCaller(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a717a_FnIns>* _234941_f, jule::Ptr<_1ceee8973_Token> _234956_caller) {
	if ((*(_234941_f)).get()._field_Decl.get()._field_CppLinked) {
		return;;
	};
	jule::Ptr<_1a54614cb_SymbolTable> _235417_old = (*(_234941_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1a53ed237_setCurrentFile((*(_234941_f)).get()._field_Decl.get()._field_sema.ptr(), _235417_old);
	});;
	jule::Ptr<_1a54614cb_SymbolTable> _235617_file = _1a53ea047_findFile(&((*(_234941_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_234941_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_235617_file != nullptr)) {
		_1a53ed237_setCurrentFile((*(_234941_f)).get()._field_Decl.get()._field_sema.ptr(), _235617_file);
	};
	jule::Ptr<_1a53cab4e_scopeChecker> _236117_sc = _1a53c14a2_newScopeChecker(&((*(_234941_f)).get()._field_Decl.get()._field_sema), (*(_234941_f)));;
	_236117_sc.get()._field_calledFrom=_234956_caller;
	_1a5413db8_checkFnInsSc(_self_.ptr(), _234941_f, &(_236117_sc));
	if (((*(_234941_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_234941_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_234941_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1a541445c_checkFnIns(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a717a_FnIns>* _237135_f) {
	_1a54141d7_checkFnInsCaller(_self_, _237135_f, nullptr);
}



inline void _1a54146d2_checkTypeFn(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a44c9_Fn>* _237536_f) {
	if ((*(_237536_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_237536_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_237536_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d5674d:;
		if (it != expr_end) {
			jule::Ptr<_1a53a717a_FnIns> _238521_ins = *it;
			{
				_1a541445c_checkFnIns(_self_, &(_238521_ins));
			}
			_iter_next_1a7d5674d:;
			++it;
			goto _iter_begin_1a7d5674d;
		}
		_iter_end_1a7d5674d:;
	};
}



inline void _1a5414957_checkTestFn(_1a53ea93d_Sema* _self_, jule::Ptr<_1a53a717a_FnIns>* _239035_f) {
	if ((*(_239035_f)).get()._field_Decl.get()._field_Public) {
		_1a53ed600_pushErr(_self_, (*(_239035_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_, jule::Str("remove \"pub\" modifier", 21), jule::Slice<jule::Any>());
		return;;
	};
	if ((((*(_239035_f)).get()._field_Params.len() != 1LL) || ((*(_239035_f)).get()._field_Result != nullptr))) {
		_1a53ed600_pushErr(_self_, (*(_239035_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a549a768_Sptr> _240317_sptr = _1a5494883_Sptr((*(_239035_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_240317_sptr == nullptr)) {
		_1a53ed600_pushErr(_self_, (*(_239035_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a487d575_StructIns> _241013_s = _1a5495a71_Struct(_240317_sptr.get()._field_Elem.ptr());;
	if (((_241013_s == nullptr) || (!(_1a53e7d25_isStdPackage(_241013_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1a53ed600_pushErr(_self_, (*(_239035_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1a53ed91e_pushSugggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1a5414bcc_precheckTypeFn(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Ptr<_1a53a44c9_Fn>* _241839_f) {
	if ((*(_241839_f)).get()._field_CppLinked) {
		return;;
	};
	if (((*(_241839_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_241839_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1a53a717a_FnIns> _242921_ins = _1a53a58b5_instanceForce((*(_241839_f)));;
		(*(_241839_f)).get()._field_Instances = jule::alloc_for_append((*(_241839_f)).get()._field_Instances,1);(*(_241839_f)).get()._field_Instances.__push(_242921_ins);;
		_1a54078a1_reloadFnInsTypes(_self_, _242921_ins);
		_242921_ins.get()._field_reloaded=true;
		if (_1a54a9326_hasDirective(&((*(_241839_f)).get()._field_Directives), jule::Str("test", 4))) {
			_1a5414957_checkTestFn(_self_.ptr(), &(_242921_ins));
		};
	};
}



inline void _1a5414da8_precheckFnTypes(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d608ab:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> _244221_decl = *it;
			{
				{
					auto expr = &(_244221_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7d61219:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _244325_m = *it;
						{
							_1a5414bcc_precheckTypeFn(_self_, &(_244325_m));
						}
						_iter_next_1a7d61219:;
						++it;
						goto _iter_begin_1a7d61219;
					}
					_iter_end_1a7d61219:;
				};
			}
			_iter_next_1a7d608ab:;
			++it;
			goto _iter_begin_1a7d608ab;
		}
		_iter_end_1a7d608ab:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d60dd9:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _244721_decl = *it;
			{
				_1a5414bcc_precheckTypeFn(_self_, &(_244721_decl));
			}
			_iter_next_1a7d60dd9:;
			++it;
			goto _iter_begin_1a7d60dd9;
		}
		_iter_end_1a7d60dd9:;
	};
}



inline void _1a5415084_checkFnTypes(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d624e5:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _245421_decl = *it;
			{
				_1a54146d2_checkTypeFn(_self_, &(_245421_decl));
			}
			_iter_next_1a7d624e5:;
			++it;
			goto _iter_begin_1a7d624e5;
		}
		_iter_end_1a7d624e5:;
	};
}



inline void _1a5415260_checkPackageTypes(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d6320a:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _246221_f = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _246221_f);
				_1a54115ad_checkGlobalTypes(_self_);
				_1a5414da8_precheckFnTypes(_self_);
				_1a5413824_precheckStructTypes(_self_);
			}
			_iter_next_1a7d6320a:;
			++it;
			goto _iter_begin_1a7d6320a;
		}
		_iter_end_1a7d6320a:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d649d1:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _247321_f = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _247321_f);
				_1a5415084_checkFnTypes(_self_);
				_1a541311a_checkStructTypes(_self_);
			}
			_iter_next_1a7d649d1:;
			++it;
			goto _iter_begin_1a7d649d1;
		}
		_iter_end_1a7d649d1:;
	};
}



inline void _1a541543b_setFileSemaFields(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d650b9:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _248121_f = *it;
			{
				_248121_f.get()._field_sema=_self_;
			}
			_iter_next_1a7d650b9:;
			++it;
			goto _iter_begin_1a7d650b9;
		}
		_iter_end_1a7d650b9:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d660a9:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _248421_st = *it;
			{
				_248421_st.get()._field_sema=_self_;
			}
			_iter_next_1a7d660a9:;
			++it;
			goto _iter_begin_1a7d660a9;
		}
		_iter_end_1a7d660a9:;
	};
}



inline void _1a5415617_setSemaFields(jule::Ptr<_1a53ea93d_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d66ae3:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _249021_file = *it;
			{
				_1a53ed237_setCurrentFile(_self_.ptr(), _249021_file);
				_1a541543b_setFileSemaFields(_self_);
			}
			_iter_next_1a7d66ae3:;
			++it;
			goto _iter_begin_1a7d66ae3;
		}
		_iter_end_1a7d66ae3:;
	};
}



inline void _1a541588c_check(jule::Ptr<_1a53ea93d_Sema> _self_, jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _249630_files) {
	_self_.get()._field_files=(*(_249630_files));
	_1a5401c63_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5415617_setSemaFields(_self_);
	_1a54022e6_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a540211a_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a54109db_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1a5415260_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a53ea93d_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline _1a5415c44_missingRetChecker static__1a541610c_new(void) {
	return _1a5415c44_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1a54163d7_checkConditional(_1a5415c44_missingRetChecker* _self_, jule::Ptr<_1a53c4b48_Conditional> _253935_c) {
	{
		auto expr = &(_253935_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d6b3bc:;
		if (it != expr_end) {
			jule::Ptr<_1a53c44d8_If> _254021_elif = *it;
			{
				if ((_254021_elif == nullptr)) {
					return false;;
				};
				if ((!(_1a5416d11_checkScope(_self_, _254021_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a7d6b3bc:;
			++it;
			goto _iter_begin_1a7d6b3bc;
		}
		_iter_end_1a7d6b3bc:;
	};
	return ((_253935_c.get()._field_Default != nullptr) && _1a5416d11_checkScope(_self_, _253935_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1a54166e5_checkMatch(_1a5415c44_missingRetChecker* _self_, jule::Ptr<_1a53c7d38_Match> _255129_m) {
	{
		auto expr = &(_255129_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d6d0b1:;
		if (it != expr_end) {
			jule::Ptr<_1a53c8883_Case> _255221_c = *it;
			{
				if ((_255221_c == nullptr)) {
					return false;;
				};
				jule::I64 _255617_n = (*(_self_))._field_breaked.len();;
				jule::Bool _255717_ok = _1a5416d11_checkScope(_self_, _255221_c.get()._field_Scope);;
				{
					
					if ((_255617_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a7d6ec0b:;
						{
							return false;;
						}
					}
					else if ((!(_255717_ok))) {
						_case_begin_1a7d6ec72:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a7d6ece9;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a7d6ece9:;
						{
							(*(_self_))._field_falled=false;
							if ((_255221_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a7d6d0b1;
						}
					}
					_match_end_1a7d6eba6:;
				};
			}
			_iter_next_1a7d6d0b1:;
			++it;
			goto _iter_begin_1a7d6d0b1;
		}
		_iter_end_1a7d6d0b1:;
	};
	return ((_255129_m.get()._field_Default != nullptr) && _1a5416d11_checkScope(_self_, _255129_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1a5416a03_checkInfIter(_1a5415c44_missingRetChecker* _self_, jule::Ptr<_1a53c4e34_InfIter> _257731_it) {
	jule::I64 _257813_n = (*(_self_))._field_breaked.len();;
	if (_1a5416d11_checkScope(_self_, _257731_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _257813_n);
		return true;;
	};
	if ((_257813_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _258417_itaddr = static_cast<jule::Uintptr>(_257731_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_257813_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a7d73a23:;
			if (it != expr_end) {
				jule::Uintptr _258520_addr = *it;
				{
					if ((_258417_itaddr == _258520_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _257813_n);
						return false;;
					};
				}
				_iter_next_1a7d73a23:;
				++it;
				goto _iter_begin_1a7d73a23;
			}
			_iter_end_1a7d73a23:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _257813_n);
	};
	return true;;
}



inline jule::Bool _1a5416d11_checkScope(_1a5415c44_missingRetChecker* _self_, jule::Ptr<_1a53c40dc_Scope> _259629_s) {
	if ((_259629_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_259629_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d755d5:;
		if (it != expr_end) {
			jule::Any _260021_st = *it;
			{
				{
					auto &_match_expr{ _260021_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1a7d75d22:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1a7d75dbb:;
						{
							jule::Uintptr _260621_addr = _260021_st.cast_ptr<_1a53c6540_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_260621_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_260621_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1a7d75e32:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1a7d75e98:;
						{
							if (_1a5416a03_checkInfIter(_self_, _260021_st.cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1a7d7600e:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a7d76075:;
						{
							if (_1a5416d11_checkScope(_self_, _260021_st.cast_ptr<_1a53c40dc_Scope>(&__jule_any_type21))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a7d760db:;
						{
							{
								auto &_match_expr{ _260021_st.cast_ptr<_1a5466305_Data>(&__jule_any_type23).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1a7d79a18:;
									{
										return true;;
									}
								}
								_match_end_1a7d79760:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a7d76163:;
						{
							if (_1a54163d7_checkConditional(_self_, _260021_st.cast_ptr<_1a53c4b48_Conditional>(&__jule_any_type35))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a7d761da:;
						{
							if (_1a54166e5_checkMatch(_self_, _260021_st.cast_ptr<_1a53c7d38_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1a7d75b79:;
				};
			}
			_iter_next_1a7d755d5:;
			++it;
			goto _iter_begin_1a7d755d5;
		}
		_iter_end_1a7d755d5:;
	};
	return false;;
}



inline jule::Bool _1a541711e_check(_1a5415c44_missingRetChecker* _self_, jule::Ptr<_1a53c40dc_Scope> _264224_s) {
	return _1a5416d11_checkScope(_self_, _264224_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5415c44_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5417905_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a5418d02_IsInitialized(_1a5418939_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1a5419066_IsTypeInferred(_1a5418939_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1a54192ca_untypedConstant(_1a5418939_Var* _self_) {
	return (_1a5419066_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5418939_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a5419d58_Dispose(jule::Ptr<_1a53a44c9_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && (_1023_f.get()._field_Ident == jule::Str("Dispose", 7))) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1a53a493b_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1a53a352d_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1a541a100_Str(jule::Ptr<_1a53a44c9_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (_2419_f.get()._field_Ident != jule::Str("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1a53a493b_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1a53a352d_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a53a717a_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1a5496ed4_Prim> _3913_prim = _1a549461e_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1a549a218_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1a541a441_logical(jule::Ptr<_1a53a44c9_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1a53a493b_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1a53a352d_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a53a717a_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1a5496ed4_Prim> _6413_prim = _1a549461e_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1a5499ea4_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1a5495a71_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1a541a6d8_Eq(jule::Ptr<_1a53a44c9_Fn> _7218_f) {
	return static__1a541a441_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1a541a980_Gt(jule::Ptr<_1a53a44c9_Fn> _7718_f) {
	return static__1a541a441_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1a541ac27_GtEq(jule::Ptr<_1a53a44c9_Fn> _8220_f) {
	return static__1a541a441_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1a541aebe_Lt(jule::Ptr<_1a53a44c9_Fn> _8718_f) {
	return static__1a541a441_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1a541b266_LtEq(jule::Ptr<_1a53a44c9_Fn> _9220_f) {
	return static__1a541a441_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1a541b5a7_result(jule::Ptr<_1a53a44c9_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1a53a493b_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1a53a352d_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1a53a717a_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1a5495a71_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1a541b84e_Shl(jule::Ptr<_1a53a44c9_Fn> _11819_f) {
	return static__1a541b5a7_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1a541bae6_Shr(jule::Ptr<_1a53a44c9_Fn> _12319_f) {
	return static__1a541b5a7_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1a541bd8d_Add(jule::Ptr<_1a53a44c9_Fn> _12819_f) {
	return static__1a541b5a7_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1a541c135_Sub(jule::Ptr<_1a53a44c9_Fn> _13319_f) {
	return static__1a541b5a7_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1a541c3cc_Div(jule::Ptr<_1a53a44c9_Fn> _13819_f) {
	return static__1a541b5a7_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1a541c674_Mul(jule::Ptr<_1a53a44c9_Fn> _14319_f) {
	return static__1a541b5a7_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1a541c91b_Mod(jule::Ptr<_1a53a44c9_Fn> _14819_f) {
	return static__1a541b5a7_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1a541cbb3_BitAnd(jule::Ptr<_1a53a44c9_Fn> _15322_f) {
	return static__1a541b5a7_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1a541ce5a_BitOr(jule::Ptr<_1a53a44c9_Fn> _15821_f) {
	return static__1a541b5a7_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1a541d202_BitXor(jule::Ptr<_1a53a44c9_Fn> _16322_f) {
	return static__1a541b5a7_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1a541d543_unary(jule::Ptr<_1a53a44c9_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1a53a493b_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1a53a352d_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1a53a717a_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1a5495a71_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1a541d7da_Neg(jule::Ptr<_1a53a44c9_Fn> _18719_f) {
	return static__1a541d543_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1a541da82_Pos(jule::Ptr<_1a53a44c9_Fn> _19219_f) {
	return static__1a541d543_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1a541dd29_BitNot(jule::Ptr<_1a53a44c9_Fn> _19722_f) {
	return static__1a541d543_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1a541e16a_assign(jule::Ptr<_1a53a44c9_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1a53a493b_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1a53a352d_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1a541e412_AddAssign(jule::Ptr<_1a53a44c9_Fn> _22125_f) {
	return static__1a541e16a_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1a541e6a9_SubAssign(jule::Ptr<_1a53a44c9_Fn> _22625_f) {
	return static__1a541e16a_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1a541e951_DivAssign(jule::Ptr<_1a53a44c9_Fn> _23125_f) {
	return static__1a541e16a_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1a541ebe8_MulAssign(jule::Ptr<_1a53a44c9_Fn> _23625_f) {
	return static__1a541e16a_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1a541ee90_ModAssign(jule::Ptr<_1a53a44c9_Fn> _24125_f) {
	return static__1a541e16a_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1a5420237_ShlAssign(jule::Ptr<_1a53a44c9_Fn> _24625_f) {
	return static__1a541e16a_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1a54204ce_ShrAssign(jule::Ptr<_1a53a44c9_Fn> _25125_f) {
	return static__1a541e16a_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1a5420776_BitOrAssign(jule::Ptr<_1a53a44c9_Fn> _25627_f) {
	return static__1a541e16a_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1a5420a1d_BitAndAssign(jule::Ptr<_1a53a44c9_Fn> _26128_f) {
	return static__1a541e16a_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1a5420cb5_BitXorAssign(jule::Ptr<_1a53a44c9_Fn> _26628_f) {
	return static__1a541e16a_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a54196d7_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1a54505db_pushErr(_1a54500be_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1a5450850_checkTrait(_1a54500be_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a54931bc_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53b63cb_Trait> _12513_trt = _1a5495cd5_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1a5494883_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a7db2963:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1a5494883_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1a5495a71_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a7db22d1;
			}
		}
		else if ((_1a5495a71_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a7db22d1:;
			{
				jule::Ptr<_1a487d575_StructIns> _13617_s = _1a5495a71_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1a4843e0e_IsImplements(_13617_s.get()._field_Decl.ptr(), _12513_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1a543239d_traitHasReferenceReceiver(&(_12513_trt)))) {
					_1a54505db_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a5495cd5_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a7db2347:;
			{
				__jule_func_result = (_12513_trt == _1a5495cd5_Trait((*(_self_))._field_src.ptr()));
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7db226a:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a7db2204:;
	};
}



inline jule::Bool _1a5450ab4_checkPtr(_1a54500be_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a54931bc_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a549dccc_Ptr> _15617_dest = _1a5494ae7_Ptr((*(_self_))._field_dest.ptr());;
	if (_1a549e7a0_IsUnsafe(_15617_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1a5492991_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a5450d28_checkPrim(_1a54500be_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1a5496ed4_Prim> _16517_prim = _1a549461e_Prim((*(_self_))._field_dest.ptr());;
		if (((_16517_prim != nullptr) && _1a549a47c_IsAny(_16517_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1a5492991_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1a54511d0_typeEnum(_1a54500be_typeCompatibilityChecker* _self_, jule::Ptr<_1a53b9b1b_TypeEnum>* _17328_e, jule::Ptr<_1a5492287_TypeKind>* _17347_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_17328_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7db97a0:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9555_TypeEnumItem> _17421_item = *it;
			{
				if (_1a5492991_Equal(_17421_item.get()._field_Kind.get()._field_Kind, (*(_17347_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1a53b9b1b_TypeEnum> _17821_ke = _1a54950c0_TypeEnum(_17421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_17821_ke == nullptr)) {
					goto _iter_next_1a7db97a0;
				};
				if (_1a54511d0_typeEnum(_self_, &(_17821_ke), _17347_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7db97a0:;
			++it;
			goto _iter_begin_1a7db97a0;
		}
		_iter_end_1a7db97a0:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5451444_checkTypeEnum(_1a54500be_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1a5492991_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53b9b1b_TypeEnum> _19317_e = _1a54950c0_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1a54511d0_typeEnum(_self_, &(_19317_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1a54516a8_check(_1a54500be_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1a5494ae7_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1a5450ab4_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1a5493b6d_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1a54931bc_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1a549461e_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a7dbe387:;
			{
				__jule_func_result = _1a5450d28_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a54950c0_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a7dbe772:;
			{
				__jule_func_result = _1a5451444_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1a5495cd5_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a7dbe7d8:;
			{
				__jule_func_result = _1a5450850_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7dbd793:;
			{
				__jule_func_result = _1a5492991_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a7dbd485:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a54500be_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1a5452159_pushErr(_1a5451be7_assignTypeChecker* _self_, jule::Str _22926_fmt, jule::Slice<jule::Any> _22939_args) {
	_1a53ed600_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _22926_fmt, _22939_args);
}



inline jule::Bool _1a54523bd_checkValidity(_1a5451be7_assignTypeChecker* _self_) {
	jule::Bool _23417_valid = true;;
	{
		
		if ((_1a549580c_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7dc2368:;
			{
				jule::Ptr<_1a53a717a_FnIns> _23717_f = _1a549580c_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1a53a8511_IsBuiltin(_23717_f.ptr())) {
						_case_begin_1a7dc38db:;
						{
							_1a5452159_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (_23717_f.get()._field_Decl.get()._field_CppLinked) {
						_case_begin_1a7dc3963:;
						{
							_1a5452159_pushErr(_self_, jule::Str("cpp-linked functions cannot use as anonymous function", 53), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((!(_23717_f.get()._field_Decl.get()._field_Statically)) && _1a53a4ba0_IsMethod(_23717_f.get()._field_Decl.ptr()))) {
						_case_begin_1a7dc39da:;
						{
							_1a5452159_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					else if (((_23717_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_23717_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1a7dc3a62:;
						{
							_1a5452159_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1a53ed91e_pushSugggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_23417_valid=false;
						}
					}
					_match_end_1a7dc380e:;
				};
			}
		}
		else if ((_1a54962ad_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7dc23e0:;
			{
				_1a5452159_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_23417_valid=false;
			}
		}
		_match_end_1a7dc22ad:;
	};
	return _23417_valid;;
}



inline jule::Bool _1a5452632_checkConst(_1a5451be7_assignTypeChecker* _self_) {
	if (((((!(_1a5466bb8_IsConst((*(_self_))._field_d.ptr()))) || (_1a549461e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1a53899ba_IsNum(_1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type47_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _27413_kind = _1a549461e_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1a5389723_IsFloat(_27413_kind)) {
			_case_begin_1a7dcaeba:;
			{
				if ((!(_1a54324d0_floatAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_1a5452159_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else if (_1a5389404_IsInt(_27413_kind)) {
			_case_begin_1a7dca849:;
			{
				if ((!(_1a544ede3_intAssignable(_27413_kind, &((*(_self_))._field_d))))) {
					_1a5452159_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_27413_kind;
			}
		}
		else {
			_case_begin_1a7dca7d3:;
			{
				return false;;
			}
		}
		_match_end_1a7dca76c:;
	};
	return true;;
}



inline jule::Bool _1a5452896_isPrim(_1a5451be7_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1a5492e58_CppLinked((*(_self_))._field_dest.ptr()) || _1a5492e58_CppLinked((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1a549461e_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1a5452b0a_checkCompatibility(_1a5451be7_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a7dd0013:;
			{
				return false;;
			}
		}
		else if ((!(_1a54523bd_checkValidity(_self_)))) {
			_case_begin_1a7dd008a:;
			{
				return false;;
			}
		}
		else if (_1a5452632_checkConst(_self_)) {
			_case_begin_1a7dd0112:;
			{
				return true;;
			}
		}
		else if ((_1a5494d5b_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7dd0189:;
			{
				jule::Ptr<_1a5492287_TypeKind> _31821_dkind = (*(_self_))._field_dest;;
				if ((_1a5494d5b_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_31821_dkind=_1a5494d5b_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1a549461e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a7dcedc0;
				};
				if (_1a53874bd_TypesAreCompatible(_1a549461e_Prim(_1a5494d5b_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1a549461e_Prim(_31821_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1a5452896_isPrim(_self_)) {
			_case_begin_1a7dd0211:;
			{
				jule::Ptr<_1a5496ed4_Prim> _32817_dest = _1a549461e_Prim((*(_self_))._field_dest.ptr());;
				if (_1a549a47c_IsAny(_32817_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1a5496ed4_Prim> _33221_src = _1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1a53874bd_TypesAreCompatible(_32817_dest.get()._field_Kind, _33221_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1a7dcedc0:;
	};
	return _1a5405937_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1a5452d6e_check(_1a5451be7_assignTypeChecker* _self_) {
	jule::Bool _34113_ok = _1a5452b0a_checkCompatibility(_self_);;
	if ((_34113_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1a54aad72_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _34113_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5451be7_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a7de7954_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a7de903d:;
			{
				jule::Ptr<_1a5492287_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1a7de9d52:;
						{
							_36421_elem=_1a5495334_Arr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a7de98bd:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4863eb7_ArrTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1a5454d2c_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1a7de8e83:;
	};
	return false;;
}

inline jule::Bool _1a7de7cc8_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a7dec4d6:;
			{
				jule::Ptr<_1a5492287_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1a7ded383:;
						{
							_36421_elem=_1a5495598_Slc((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a7decd66:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a486325d_SlcTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1a5454d2c_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1a7dec42b:;
	};
	return false;;
}

inline jule::Bool _1a7de749d_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a7e0097e:;
			{
				jule::Ptr<_1a5492287_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1a7e01892:;
						{
							_36421_elem=_1a5494ae7_Ptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a7e0130e:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4863835_PtrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1a5454d2c_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1a7e008c4:;
	};
	return false;;
}

inline jule::Bool _1a7deee78_annotateConstraintElem(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _36149_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a7e03b08:;
			{
				jule::Ptr<_1a5492287_TypeKind> _36421_elem = nullptr;;
				{
					
{
						_case_begin_1a7e04a93:;
						{
							_36421_elem=_1a5494883_Sptr((*(_36149_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a7e04488:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4862d62_SptrTypeDecl>(&__jule_any_type79).get()._field_Elem;
				return _1a5454d2c_annotateConstraint(_self_, &(_36421_elem));;
			}
		}
		_match_end_1a7e03a4d:;
	};
	return false;;
}



inline jule::Bool _1a54540b2_annotateConstraintMap(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _38145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a7dd7944:;
			{
				jule::Ptr<_1a549c77b_Map> _38421_m = _1a5496049_Map((*(_38145_k)).ptr());;
				jule::Ptr<_1a4864715_MapTypeDecl> _38521_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4864715_MapTypeDecl>(&__jule_any_type80);;
				(*(_self_))._field_c=_38521_m2.get()._field_Key;
				if ((!(_1a5454d2c_annotateConstraint(_self_, &(_38421_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_38521_m2.get()._field_Val;
				__jule_func_result = _1a5454d2c_annotateConstraint(_self_, &(_38421_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a7dd78bc:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a54543c0_annotateConstraintTup(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _39645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a7dda0c8:;
			{
				jule::Ptr<_1a4863549_TupleTypeDecl> _39921_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4863549_TupleTypeDecl>(&__jule_any_type81);;
				jule::Ptr<_1a549bc53_Tuple> _40021_tup2 = _1a54962ad_Tup((*(_39645_k)).ptr());;
				{
					auto expr = &(_40021_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7ddb4a3:;
					if (it != expr_end) {
						jule::Ptr<_1a5492287_TypeKind> _40125_t2 = *it;
						{
							{
								auto expr = &(_39921_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7ddbc67:;
								if (it != expr_end) {
									jule::Ptr<_1a48619a9_TypeDecl> _40229_t = *it;
									{
										(*(_self_))._field_c=_40229_t;
										if (_1a5454d2c_annotateConstraint(_self_, &(_40125_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a7ddbc67:;
									++it;
									goto _iter_begin_1a7ddbc67;
								}
								_iter_end_1a7ddbc67:;
							};
						}
						_iter_next_1a7ddb4a3:;
						++it;
						goto _iter_begin_1a7ddb4a3;
					}
					_iter_end_1a7ddb4a3:;
				};
			}
		}
		_match_end_1a7dd7db7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a54546cd_annotateConstraintFn(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _41344_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a7ddb97b:;
			{
				jule::Ptr<_1a4873438_FnDecl> _41621_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4873438_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1a53a717a_FnIns> _41721_f = _1a549580c_Fn((*(_41344_k)).ptr());;
				{
					auto expr = &(_41721_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7dddd8a:;
					if (it != expr_end) {
						jule::I64 _41818_i = it - expr->begin();
						jule::Ptr<_1a53a62ab_ParamIns> _41825_fp = *it;
						{
							(*(_self_))._field_c=_41621_pf.get()._field_Params[_41818_i].get()._field_Kind;
							if (_1a5454d2c_annotateConstraint(_self_, &(_41825_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a7dddd8a:;
						++it;
						_41818_i++;
						goto _iter_begin_1a7dddd8a;
					}
					_iter_end_1a7dddd8a:;
				};
				if ((_41621_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_41621_pf.get()._field_Result.get()._field_Kind;
					if (_1a5454d2c_annotateConstraint(_self_, &(_41721_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a7dda44c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a5454a0d_annotateConstraintIdent(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _43447_k) {
	jule::Ptr<_1a4862070_IdentTypeDecl> _43517_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1a4862070_IdentTypeDecl>(&__jule_any_type19);;
	jule::Ptr<_1a487d575_StructIns> _43617_s = _1a5495a71_Struct((*(_43447_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7de17d8:;
		if (it != expr_end) {
			jule::I64 _43713_i = it - expr->begin();
			jule::Ptr<_1a486dca2_GenericDecl> _43716_g = *it;
			{
				if ((_43716_g.get()._field_Ident == _43517_ident.get()._field_Ident)) {
					jule::Ptr<_1a5490a5a_InsGeneric> _43925_fg = (*(_self_))._field_f.get()._field_Generics[_43713_i];;
					if ((_43925_fg != nullptr)) {
						return false;;
					};
					_1a545514b_pushGeneric(_self_, _43447_k, _43713_i);
					return true;;
				};
				if ((_43617_s == nullptr)) {
					goto _iter_next_1a7de17d8;
				};
				jule::Ptr<_1a48619a9_TypeDecl> _44921_c = (*(_self_))._field_c;;
				{
					auto expr = &(_43517_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7de3ad7:;
					if (it != expr_end) {
						jule::Ptr<_1a48619a9_TypeDecl> _45025_ig = *it;
						{
							(*(_self_))._field_c=_45025_ig;
							{
								auto expr = &(_43617_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7de5149:;
								if (it != expr_end) {
									jule::Ptr<_1a5490a5a_InsGeneric> _45229_sg = *it;
									{
										if (_1a5454d2c_annotateConstraint(_self_, &(_45229_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1a7de5149:;
									++it;
									goto _iter_begin_1a7de5149;
								}
								_iter_end_1a7de5149:;
							};
						}
						_iter_next_1a7de3ad7:;
						++it;
						goto _iter_begin_1a7de3ad7;
					}
					_iter_end_1a7de3ad7:;
				};
				(*(_self_))._field_c=_44921_c;
			}
			_iter_next_1a7de17d8:;
			++it;
			_43713_i++;
			goto _iter_begin_1a7de17d8;
		}
		_iter_end_1a7de17d8:;
	};
	return false;;
}



inline jule::Bool _1a5454d2c_annotateConstraint(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _46342_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a7de54ce:;
			{
				return _1a5454a0d_annotateConstraintIdent(_self_, _46342_k);;
			}
		}
		_match_end_1a7de4c3c:;
	};
	{
		
		if ((_1a5495334_Arr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de2751:;
			{
				return _1a7de7954_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1a5495598_Slc((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de69db:;
			{
				return _1a7de7cc8_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1a5494ae7_Ptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de6a52:;
			{
				return _1a7de749d_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1a5494883_Sptr((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de6b51:;
			{
				return _1a7deee78_annotateConstraintElem(_self_, _46342_k);;
			}
		}
		else if ((_1a5496049_Map((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de6bb7:;
			{
				return _1a54540b2_annotateConstraintMap(_self_, _46342_k);;
			}
		}
		else if ((_1a549580c_Fn((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de6117:;
			{
				return _1a54546cd_annotateConstraintFn(_self_, _46342_k);;
			}
		}
		else if ((_1a54962ad_Tup((*(_46342_k)).ptr()) != nullptr)) {
			_case_begin_1a7de617d:;
			{
				return _1a54543c0_annotateConstraintTup(_self_, _46342_k);;
			}
		}
		else {
			_case_begin_1a7de6920:;
			{
				return false;;
			}
		}
		_match_end_1a7de68ba:;
	};
}



inline void _1a545514b_pushGeneric(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _48835_k, jule::I64 _48849_i) {
	(*(_self_))._field_f.get()._field_Generics[_48849_i]=jule::new_ptr<_1a5490a5a_InsGeneric>(_1a5490a5a_InsGeneric{._field_Kind=(*(_48835_k)), });
	jule::Ptr<_1a486dca2_GenericDecl> _49017_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_48849_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e07447:;
		if (it != expr_end) {
			jule::Ptr<_1a5492287_TypeKind> _49121_ignored = *it;
			{
				if ((_49017_gd.get()._field_Ident == _1a5492683_Str(_49121_ignored.ptr()))) {
					_49121_ignored.get()._field_Kind=(*(_48835_k)).get()._field_Kind;
				};
			}
			_iter_next_1a7e07447:;
			++it;
			goto _iter_begin_1a7e07447;
		}
		_iter_end_1a7e07447:;
	};
	if (((_49017_gd.get()._field_Constraint == nullptr) || (_49017_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_49017_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1a5454d2c_annotateConstraint(_self_, _48835_k);
}



inline jule::Bool _1a5455459_annotatePrim(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _50343_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1a5457280_annotateAny(_self_, _50343_k);
	return __jule_func_result;;
}



inline jule::Bool _1a5455767_annotateArr(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _50742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a549d370_Arr> _50817_parr = _1a5495334_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50817_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a549d370_Arr> _51217_arr = _1a5495334_Arr((*(_50742_k)).ptr());;
	(*(_self_))._field_k=(&(_50817_parr.get()._field_Elem));
	__jule_func_result = _1a545758d_annotateKind(_self_, &(_51217_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5455a75_annotateSlc(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _51742_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a549b1c5_Slc> _51817_pslc = _1a5495598_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51817_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a549b1c5_Slc> _52217_slc = _1a5495598_Slc((*(_51742_k)).ptr());;
	(*(_self_))._field_k=(&(_51817_pslc.get()._field_Elem));
	__jule_func_result = _1a545758d_annotateKind(_self_, &(_52217_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5455e2c_checkMapKey(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _52741_k, jule::Ptr<_1a5492287_TypeKind>* _52761_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5492287_TypeKind>* _52817_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52741_k;
	__jule_func_result=_1a545758d_annotateKind(_self_, _52761_ck);
	(*(_self_))._field_k=_52817_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a545623a_annotateMap(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _53542_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a549c77b_Map> _53617_pmap = _1a5496049_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53617_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a549c77b_Map> _54017_m = _1a5496049_Map((*(_53542_k)).ptr());;
	__jule_func_result = (_1a5455e2c_checkMapKey(_self_, (&(_53617_pmap.get()._field_Key)), &(_54017_m.get()._field_Key)) && _1a5455e2c_checkMapKey(_self_, (&(_53617_pmap.get()._field_Val)), &(_54017_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1a5456548_annotateFn(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _54541_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a53a717a_FnIns> _54617_pf = _1a549580c_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54617_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53a717a_FnIns> _55017_f = _1a549580c_Fn((*(_54541_k)).ptr());;
	{
		
		if ((_54617_pf.get()._field_Params.len() != _55017_f.get()._field_Params.len())) {
			_case_begin_1a7806088:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1a53a493b_IsVoid(_54617_pf.get()._field_Decl.ptr()) != _1a53a493b_IsVoid(_55017_f.get()._field_Decl.ptr()))) {
			_case_begin_1a7806110:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a7806011:;
	};
	__jule_func_result=true;
	jule::Ptr<_1a5492287_TypeKind>* _55917_old = (*(_self_))._field_k;;
	{
		auto expr = &(_55017_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7807881:;
		if (it != expr_end) {
			jule::I64 _56014_i = it - expr->begin();
			jule::Ptr<_1a53a62ab_ParamIns> _56021_fp = *it;
			{
				(*(_self_))._field_k=(&(_54617_pf.get()._field_Params[_56014_i].get()._field_Kind));
				__jule_func_result=(_1a545758d_annotateKind(_self_, &(_56021_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1a7807881:;
			++it;
			_56014_i++;
			goto _iter_begin_1a7807881;
		}
		_iter_end_1a7807881:;
	};
	if ((!(_1a53a493b_IsVoid(_54617_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_54617_pf.get()._field_Result));
		__jule_func_result=(_1a545758d_annotateKind(_self_, &(_55017_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55917_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5456856_annotatePtr(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _57442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a549dccc_Ptr> _57517_pptr = _1a5494ae7_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57517_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a549dccc_Ptr> _57917_ptr = _1a5494ae7_Ptr((*(_57442_k)).ptr());;
	(*(_self_))._field_k=(&(_57517_pptr.get()._field_Elem));
	__jule_func_result = _1a545758d_annotateKind(_self_, &(_57917_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5456b64_annotateSptr(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _58443_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a549a768_Sptr> _58517_ssptr = _1a5494883_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58517_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a549a768_Sptr> _58917_sptr = _1a5494883_Sptr((*(_58443_k)).ptr());;
	(*(_self_))._field_k=(&(_58517_ssptr.get()._field_Elem));
	__jule_func_result = _1a545758d_annotateKind(_self_, &(_58917_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1a5456e72_annotateStruct(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _59445_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a487d575_StructIns> _59517_s = _1a5495a71_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59517_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a487d575_StructIns> _59917_s2 = _1a5495a71_Struct((*(_59445_k)).ptr());;
	if ((_59517_s.get()._field_Generics.len() != _59917_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_59517_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7810229:;
		if (it != expr_end) {
			jule::I64 _60314_i = it - expr->begin();
			jule::Ptr<_1a5490a5a_InsGeneric> _60321_g = *it;
			{
				jule::Ptr<_1a5490a5a_InsGeneric> _60421_g2 = _59917_s2.get()._field_Generics[_60314_i];;
				if (_1a5492991_Equal(_60321_g.get()._field_Kind, _60421_g2.get()._field_Kind)) {
					goto _iter_next_1a7810229;
				};
				(*(_self_))._field_k=(&(_60321_g.get()._field_Kind));
				if ((!(_1a545758d_annotateKind(_self_, &(_60421_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a7810229:;
			++it;
			_60314_i++;
			goto _iter_begin_1a7810229;
		}
		_iter_end_1a7810229:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a5457280_annotateAny(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _61642_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _61713_kind = _1a5492683_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7813271:;
		if (it != expr_end) {
			jule::I64 _61813_i = it - expr->begin();
			jule::Ptr<_1a486dca2_GenericDecl> _61816_g = *it;
			{
				if ((_61713_kind != _61816_g.get()._field_Ident)) {
					goto _iter_next_1a7813271;
				};
				jule::Ptr<_1a5490a5a_InsGeneric> _62217_t = (*(_self_))._field_f.get()._field_Generics[_61813_i];;
				{
					
					if ((_62217_t == nullptr) || (_62217_t.get()._field_Kind == nullptr)) {
						_case_begin_1a7814c56:;
						{
							_1a545514b_pushGeneric(_self_, _61642_k, _61813_i);
						}
					}
					else if ((!(_1a5492991_Equal(_62217_t.get()._field_Kind, (*(_61642_k)))))) {
						_case_begin_1a7814cbc:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1a7814b13:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_61642_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1a7813271:;
			++it;
			_61813_i++;
			goto _iter_begin_1a7813271;
		}
		_iter_end_1a7813271:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a545758d_annotateKind(_1a54536cc_dynamicTypeAnnotation* _self_, jule::Ptr<_1a5492287_TypeKind>* _63743_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1a5457280_annotateAny(_self_, _63743_k)) {
			_case_begin_1a7817264:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1a549461e_Prim((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a78172ca:;
			{
				__jule_func_result = _1a5455459_annotatePrim(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5495334_Arr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a7817341:;
			{
				__jule_func_result = _1a5455767_annotateArr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5495598_Slc((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a78173a7:;
			{
				__jule_func_result = _1a5455a75_annotateSlc(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5496049_Map((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a781762c:;
			{
				__jule_func_result = _1a545623a_annotateMap(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a549580c_Fn((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a7817693:;
			{
				__jule_func_result = _1a5456548_annotateFn(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5494ae7_Ptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a7817709:;
			{
				__jule_func_result = _1a5456856_annotatePtr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5494883_Sptr((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a7817770:;
			{
				__jule_func_result = _1a5456b64_annotateSptr(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else if ((_1a5495a71_Struct((*(_63743_k)).ptr()) != nullptr)) {
			_case_begin_1a78179c3:;
			{
				__jule_func_result = _1a5456e72_annotateStruct(_self_, _63743_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a78171ed:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a7817198:;
	};
}



inline jule::Bool _1a5457802_annotate(_1a54536cc_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1a545758d_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a54536cc_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a54585e4_pushErrToken(_1a5458094_fnCallArgChecker* _self_, jule::Ptr<_1ceee8973_Token> _68231_token, jule::Str _68246_fmt, jule::Slice<jule::Any> _68259_args) {
	_1a53ed600_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _68231_token, _68246_fmt, _68259_args);
}



inline void _1a5458913_pushErr(_1a5458094_fnCallArgChecker* _self_, jule::Str _68626_fmt, jule::Slice<jule::Any> _68639_args) {
	_1a54585e4_pushErrToken(_self_, (*(_self_))._field_errorToken, _68626_fmt, _68639_args);
}



inline jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>> _1a5458b77_getParams(_1a5458094_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1a53a32b9_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1a5458e85_checkCounts(_1a5458094_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>* _69931_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _70017_n = (*(_69931_params)).len();;
	if (((_70017_n > 0LL) && _1a53a32b9_IsSelf((*(_69931_params))[0LL].get()._field_Decl.ptr()))) {
		(_70017_n)--;
	};
	jule::I64 _70517_diff = (_70017_n - (*(_self_))._field_args.len());;
	{
		
		if ((_70517_diff == 0LL)) {
			_case_begin_1a7823292:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70017_n > 0LL) && (*(_69931_params))[(_70017_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1a7823319:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70517_diff < 0LL) || (_70517_diff > (*(_69931_params)).len()))) {
			_case_begin_1a7823391:;
			{
				_1a5458913_pushErr(_self_, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a782321a:;
	};
	jule::Str _71617_idents = jule::Str();;
	for (; (_70517_diff > 0LL); (_70517_diff)--) {
		{
			_71617_idents+=(jule::Str(", ", 2) + (*(_69931_params))[(_70017_n - _70517_diff)].get()._field_Decl.get()._field_Ident);
		}
	_iter_next_1a7824d21:;
	}
	_iter_end_1a7824d21:;;
	(_71617_idents).mut_slice(2LL);;
	_1a5458913_pushErr(_self_, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_71617_idents, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1a54593d6_checkArg(_1a5458094_fnCallArgChecker* _self_, jule::Ptr<_1a53a62ab_ParamIns>* _72632_p, jule::Ptr<_1a5466305_Data>* _72651_arg, jule::Ptr<_1ceee8973_Token>* _72668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1a53a928c_parameterUsesGenerics(_72632_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_72632_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1a54536cc_dynamicTypeAnnotation _73025_dta = _1a54536cc_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72632_p)), ._field_a=(*(_72651_arg)), ._field_errorToken=(*(_72668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1a5457802_annotate(&_73025_dta);
		};
		if ((!(__jule_func_result))) {
			_1a54585e4_pushErrToken(_self_, (*(_72668_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1a54083eb_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_72632_p)).get()._field_Decl.get()._field_Mutable, (*(_72632_p)).get()._field_Decl.get()._field_Reference, &((*(_72632_p)).get()._field_Kind), _72651_arg, _72668_errorToken)) {
		_1a54054d6_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_72632_p)).get()._field_Decl.get()._field_Reference, &((*(_72632_p)).get()._field_Kind), _72651_arg, (*(_72668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a545978d_push(_1a5458094_fnCallArgChecker* _self_, jule::Ptr<_1a53a62ab_ParamIns>* _75428_p, jule::Ptr<_1a4865eca_Expr> _75446_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a5492287_TypeKind> _75517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _75613_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_75428_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_75428_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_75428_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1a5466305_Data> _76417_d = _1a5483179_evalExprKind((*(_self_))._field_e, _75446_arg.get()._field_Kind);;
	(*(_self_))._field_e.get()._field_prefix=_75517_old;
	(*(_self_))._field_e.get()._field_immutable=_75613_oldImmut;
	if ((_76417_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a54593d6_checkArg(_self_, _75428_p, &(_76417_d), &(_75446_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_76417_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1a5459b45_pushVariadic(_1a5458094_fnCallArgChecker* _self_, jule::Ptr<_1a53a62ab_ParamIns>* _77836_p, jule::I64 _77854_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78017_variadiced = false;;
	jule::Bool _78113_more = ((_77854_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1a53984ce_SliceExprModel> _78217_model = jule::new_ptr<_1a53984ce_SliceExprModel>(_1a53984ce_SliceExprModel{._field_ElemKind=(*(_77836_p)).get()._field_Kind, });;
	jule::Ptr<_1a5492287_TypeKind> _78617_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _79113_variadic = (*(_77836_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_77836_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_77836_p)).get()._field_Kind.get()._field_Variadic=_79113_variadic;
	});;
	for (; (_77854_i < (*(_self_))._field_args.len()); (_77854_i)++) {
		{
			jule::Ptr<_1a4865eca_Expr> _79821_arg = (*(_self_))._field_args[_77854_i];;
			{
				auto &_match_expr{ _79821_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_1a7832e72:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549b1c5_Slc>(_1a549b1c5_Slc{._field_Elem=(*(_77836_p)).get()._field_Kind}), 8)});
					}
				}
				else {
					_case_begin_1a7833758:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_77836_p)).get()._field_Kind;
					}
				}
				_match_end_1a7833703:;
			};
			jule::Ptr<_1a5466305_Data> _81121_d = _1a5483487_eval((*(_self_))._field_e, _79821_arg);;
			if ((_81121_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a78323d3;
			};
			if (_81121_d.get()._field_Kind.get()._field_Variadic) {
				_78017_variadiced=true;
				(*(_77836_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1a54593d6_checkArg(_self_, _77836_p, &(_81121_d), &(_79821_arg.get()._field_Token)));
				{
					auto &_match_expr{ _81121_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1a7835936:;
						{
							_78217_model=_81121_d.get()._field_Model.cast_ptr<_1a53984ce_SliceExprModel>(&__jule_any_type83);
							_78217_model.get()._field_ElemKind=(*(_77836_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1a78366b2:;
						{
							_78217_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_81121_d.get()._field_Model);;
						}
					}
					_match_end_1a78367a0:;
				};
				(_77854_i)++;
				goto _iter_end_1a78323d3;
			};
			__jule_func_result=(__jule_func_result && _1a54593d6_checkArg(_self_, _77836_p, &(_81121_d), &(_79821_arg.get()._field_Token)));
			_78217_model.get()._field_Elems = jule::alloc_for_append(_78217_model.get()._field_Elems,1);_78217_model.get()._field_Elems.__push(_81121_d.get()._field_Model);;
		}
	_iter_next_1a78323d3:;
	}
	_iter_end_1a78323d3:;;
	(*(_self_))._field_e.get()._field_prefix=_78617_old;
	if ((_78017_variadiced && _78113_more)) {
		_1a54585e4_pushErrToken(_self_, (*(_self_))._field_args[_77854_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78217_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_78217_model, &__jule_any_type83));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a5459e53_checkArgs(_1a5458094_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>* _85433_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _85513_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _85917_i = 0LL;;
	if ((((*(_85433_params)).len() > 0LL) && _1a53a32b9_IsSelf((*(_85433_params))[0LL].get()._field_Decl.ptr()))) {
		(_85917_i)++;
	};
	_julec_label_iter:;
	while ((_85917_i < (*(_85433_params)).len())) {
		{
			jule::Ptr<_1a53a62ab_ParamIns> _86621_p = (*(_85433_params))[_85917_i];;
			{
				
				if (_86621_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1a783ca4d:;
					{
						__jule_func_result=(_1a5459b45_pushVariadic(_self_, &(_86621_p), _85917_i) && __jule_func_result);
						goto _iter_end_1a783b101;
					}
				}
				else if (((*(_self_))._field_args.len() <= _85917_i)) {
					_case_begin_1a783c278:;
					{
						__jule_func_result=false;
						goto _iter_end_1a783b101;
					}
				}
				else {
					_case_begin_1a783c6a7:;
					{
						__jule_func_result=(_1a545978d_push(_self_, &(_86621_p), (*(_self_))._field_args[_85917_i]) && __jule_func_result);
					}
				}
				_match_end_1a783c641:;
			};
			(_85917_i)++;
		}
	_iter_next_1a783b101:;
	}
	_iter_end_1a783b101:;;
	(*(_self_))._field_e.get()._field_arg=_85513_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a545a1d9_checkDynamicTypeAnnotation(_1a5458094_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a783e9c8:;
		if (it != expr_end) {
			jule::Ptr<_1a5490a5a_InsGeneric> _88616_g = *it;
			{
				if ((_88616_g == nullptr)) {
					_1a5458913_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a783e9c8:;
			++it;
			goto _iter_begin_1a783e9c8;
		}
		_iter_end_1a783e9c8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1a545a45e_check(_1a5458094_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>> _89617_params = _1a5458b77_getParams(_self_);;
	__jule_func_result=_1a5458e85_checkCounts(_self_, &(_89617_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1a5459e53_checkArgs(_self_, &(_89617_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1a545a1d9_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5458094_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1a545aea9_pushErr(_1a545a99d_structLitChecker* _self_, jule::Ptr<_1ceee8973_Token> _91726_token, jule::Str _91741_fmt, jule::Slice<jule::Any> _91754_args) {
	_1a546837e_pushErr((*(_self_))._field_e.ptr(), _91726_token, _91741_fmt, _91754_args);
}



inline void _1a545b2c8_pushSugggestion(_1a545a99d_structLitChecker* _self_, jule::Str _92234_fmt, jule::Slice<jule::Any> _92247_args) {
	_1a546869d_pushSugggestion((*(_self_))._field_e.ptr(), _92234_fmt, _92247_args);
}



inline void _1a545b691_pushMatch(_1a545a99d_structLitChecker* _self_, jule::Ptr<_1a487d388_FieldIns>* _92633_f, jule::Ptr<_1a5466305_Data>* _92652_d, jule::Ptr<_1ceee8973_Token>* _92667_errorToken) {
	;
	if (_1a54083eb_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_92633_f)).get()._field_Kind), _92652_d, _92667_errorToken)) {
		_1a54054d6_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_92633_f)).get()._field_Kind), _92652_d, (*(_92667_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_1a5396a60_StructArgExprModel>(_1a5396a60_StructArgExprModel{._field_Field=(*(_92633_f)), ._field_Expr=(*(_92652_d)).get()._field_Model}));;
}



inline void _1a545b9b0_checkPair(_1a545a99d_structLitChecker* _self_, jule::Ptr<_1a486a93b_FieldExprPair>* _93933_pair, jule::Slice<jule::Ptr<_1a4865eca_Expr>>* _93960_exprs) {
	jule::Ptr<_1a487d388_FieldIns> _94117_f = _1a48586a4_FindField((*(_self_))._field_s.ptr(), (*(_93933_pair)).get()._field_Field.get()._field_Kind);;
	if ((_94117_f == nullptr)) {
		_1a545aea9_pushErr(_self_, (*(_93933_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_93933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _94117_f.get()._field_Decl.get()._field_Public, _94117_f.get()._field_Decl.get()._field_Token)))) {
		_1a545aea9_pushErr(_self_, (*(_93933_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_93933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1a545b2c8_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _93960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a78491b9:;
		if (it != expr_end) {
			jule::Ptr<_1a4865eca_Expr> _95321_expr = *it;
			{
				{
					auto &_match_expr{ _95321_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a7849a38:;
						{
							jule::Ptr<_1a486a93b_FieldExprPair> _95625_dpair = _95321_expr.get()._field_Kind.cast_ptr<_1a486a93b_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_93933_pair)) == _95625_dpair)) {
									_case_begin_1a784a9d4:;
									{
										goto _iter_end_1a78491b9;
									}
								}
								else if (((*(_93933_pair)).get()._field_Field.get()._field_Kind == _95625_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1a784aa5b:;
									{
										_1a545aea9_pushErr(_self_, (*(_93933_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_93933_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1a78491b9;
									}
								}
								_match_end_1a784a929:;
							};
						}
					}
					_match_end_1a784987e:;
				};
			}
			_iter_next_1a78491b9:;
			++it;
			goto _iter_begin_1a78491b9;
		}
		_iter_end_1a78491b9:;
	};
	jule::Ptr<_1a5492287_TypeKind> _96717_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_96717_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_94117_f.get()._field_Kind;
	jule::Ptr<_1a5466305_Data> _97117_d = _1a5483179_evalExprKind((*(_self_))._field_e, (*(_93933_pair)).get()._field_Expr.get()._field_Kind);;
	if ((_97117_d == nullptr)) {
		return;;
	};
	_1a545b691_pushMatch(_self_, &(_94117_f), &(_97117_d), &((*(_93933_pair)).get()._field_Field));
}



inline jule::Bool _1a545bcbd_readyExprs(_1a545a99d_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a4865eca_Expr>>* _97834_exprs) {
	jule::Bool _97917_ok = true;;
	{
		auto expr = _97834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a784e268:;
		if (it != expr_end) {
			jule::I64 _98014_i = it - expr->begin();
			jule::Ptr<_1a4865eca_Expr> _98021_expr = *it;
			{
				{
					auto &_match_expr{ _98021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1a784eeb1:;
						{
							jule::Ptr<_1a486bdd2_KeyValPair> _98325_pair = _98021_expr.get()._field_Kind.cast_ptr<_1a486bdd2_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _98325_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_1a78519eb:;
									{
										goto _match_end_1a7850c5e;
									}
								}
								else {
									_case_begin_1a7850ed4:;
									{
										_1a545aea9_pushErr(_self_, _98325_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_97917_ok=false;
										goto _iter_next_1a784e268;
									}
								}
								_match_end_1a7850c5e:;
							};
							(*(_97834_exprs))[_98014_i].get()._field_Kind=jule::Any(jule::new_ptr<_1a486a93b_FieldExprPair>(_1a486a93b_FieldExprPair{._field_Field=_98325_pair.get()._field_Key.get()._field_Token, ._field_Expr=_98325_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_1a784ed07:;
				};
			}
			_iter_next_1a784e268:;
			++it;
			_98014_i++;
			goto _iter_begin_1a784e268;
		}
		_iter_end_1a784e268:;
	};
	return _97917_ok;;
}



inline void _1a545c043_check(_1a545a99d_structLitChecker* _self_, jule::Slice<jule::Ptr<_1a4865eca_Expr>>* _100229_exprs) {
	if (((*(_100229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1a545bcbd_readyExprs(_self_, _100229_exprs)))) {
		return;;
	};
	jule::Bool _100917_paired = false;;
	{
		auto expr = _100229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a784ec4c:;
		if (it != expr_end) {
			jule::I64 _101014_i = it - expr->begin();
			jule::Ptr<_1a4865eca_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ _101021_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a78586b2:;
						{
							jule::Ptr<_1a486a93b_FieldExprPair> _101325_pair = _101021_expr.get()._field_Kind.cast_ptr<_1a486a93b_FieldExprPair>(&__jule_any_type84);;
							if (((_101014_i > 0LL) && (!(_100917_paired)))) {
								_1a545aea9_pushErr(_self_, _101325_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_100917_paired=true;
							_1a545b9b0_checkPair(_self_, &(_101325_pair), _100229_exprs);
						}
					}
					else {
						_case_begin_1a785402b:;
						{
							if (_100917_paired) {
								_1a545aea9_pushErr(_self_, _101021_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_101014_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1a545aea9_pushErr(_self_, _101021_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
								goto _iter_next_1a784ec4c;
							};
							jule::Ptr<_1a487d388_FieldIns> _102825_field = (*(_self_))._field_s.get()._field_Fields[_101014_i];;
							if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _102825_field.get()._field_Decl.get()._field_Public, _102825_field.get()._field_Decl.get()._field_Token)))) {
								_1a545aea9_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1a545b2c8_pushSugggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1a5492287_TypeKind> _103625_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_103625_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_102825_field.get()._field_Kind;
							jule::Ptr<_1a5466305_Data> _104025_d = _1a5483179_evalExprKind((*(_self_))._field_e, _101021_expr.get()._field_Kind);;
							if ((_104025_d == nullptr)) {
								goto _iter_next_1a784ec4c;
							};
							_1a545b691_pushMatch(_self_, &(_102825_field), &(_104025_d), &(_101021_expr.get()._field_Token));
						}
					}
					_match_end_1a7853da5:;
				};
			}
			_iter_next_1a784ec4c:;
			++it;
			_101014_i++;
			goto _iter_begin_1a784ec4c;
		}
		_iter_end_1a784ec4c:;
	};
	if ((!(_100917_paired))) {
		jule::I64 _105117_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _105221_diff = (_105117_n - (*(_100229_exprs)).len());;
		{
			
			if ((_105221_diff <= 0LL)) {
				_case_begin_1a785b572:;
				{
					return;;
				}
			}
			_match_end_1a785b451:;
		};
		jule::Str _105821_idents = jule::Str();;
		for (; (_105221_diff > 0LL); (_105221_diff)--) {
			{
				_105821_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_105117_n - _105221_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1a785be68:;
		}
		_iter_end_1a785be68:;;
		(_105821_idents).mut_slice(2LL);;
		_1a545aea9_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_105821_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a545a99d_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5418939_Var> _1a545ca27_buildVar(_1a545c582_rangeChecker* _self_, jule::Ptr<_1a4874417_VarDecl>* _107728_decl) {
	jule::Ptr<_1a5418939_Var> _107817_v = _1a53aed64_buildVar((*(_107728_decl)));;
	return _107817_v;;
}



inline void _1a545cc03_setSizeKey(_1a545c582_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1ceeeb217_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1a545ca27_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)})});
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7860950:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1a5417905_IterRelation>(_1a5417905_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1a78608ea:;
	};
}



inline void _1a545d0bb_checkRangeExprValidity(_1a545c582_rangeChecker* _self_, jule::Ptr<_1a5466305_Data>* _110846_d, jule::Ptr<_1a5418939_Var>* _110857_key, jule::Ptr<_1a5492287_TypeKind>* _110873_k) {
	jule::Bool _110917__mut = (*(_110857_key)).get()._field_Mutable;;
	if ((_110917__mut && (!(_1a5493909_Mutable((*(_110873_k)).ptr()))))) {
		_110917__mut=false;
	};
	_1a54083eb_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _110917__mut, (*(_110857_key)).get()._field_Reference, &((*(_110857_key)).get()._field_Kind.get()._field_Kind), _110846_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1a545d297_checkSlice(_1a545c582_rangeChecker* _self_) {
	_1a545cc03_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ceeeb217_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a549b1c5_Slc> _112717_slc = _1a5495598_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1a545ca27_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_112717_slc.get()._field_Elem});
	_1a545d0bb_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_112717_slc.get()._field_Elem));
}



inline void _1a545d473_checkArray(_1a545c582_rangeChecker* _self_) {
	_1a545cc03_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ceeeb217_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a549d370_Arr> _114017_arr = _1a5495334_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1a545ca27_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_114017_arr.get()._field_Elem});
	_1a545d0bb_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_114017_arr.get()._field_Elem));
}



inline void _1a545d64e_checkMapKeyA(_1a545c582_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1ceeeb217_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a549c77b_Map> _115217_m = _1a5496049_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1a545ca27_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_115217_m.get()._field_Key});
	jule::Ptr<_1a5466305_Data> _115617_d = jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d)));;
	_115617_d.get()._field_Kind=_115217_m.get()._field_Key;
	_1a545d0bb_checkRangeExprValidity(_self_, &(_115617_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_115217_m.get()._field_Key));
}



inline void _1a545d82a_checkMapKeyB(_1a545c582_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ceeeb217_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1a549c77b_Map> _116717_m = _1a5496049_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1a545ca27_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_116717_m.get()._field_Val});
	jule::Ptr<_1a5466305_Data> _117117_d = jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d)));;
	_117117_d.get()._field_Kind=_116717_m.get()._field_Val;
	_1a545d0bb_checkRangeExprValidity(_self_, &(_117117_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116717_m.get()._field_Val));
}



inline void _1a545da06_checkMap(_1a545c582_rangeChecker* _self_) {
	_1a545d64e_checkMapKeyA(_self_);
	_1a545d82a_checkMapKeyB(_self_);
}



inline void _1a545dbd2_checkStr(_1a545c582_rangeChecker* _self_) {
	_1a545cc03_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1ceeeb217_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1a545ca27_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u8", 2)), 6)})});
}



inline jule::Bool _1a545de46_check(_1a545c582_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a7e15477:;
		}
		else if ((_1a5495598_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7e14d6c:;
			{
				_1a545d297_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1a5495334_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7e14dd3:;
			{
				_1a545d473_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1a5496049_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7e14e49:;
			{
				_1a545da06_checkMap(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a7e14d06:;
			{
				jule::Ptr<_1a5496ed4_Prim> _120917_prim = _1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_120917_prim != nullptr) && _1a549a218_IsStr(_120917_prim.ptr()))) {
					_1a545dbd2_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a7e14c3a:;
	};
	_1a53ed600_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a545c582_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1a545eab2_prepareTypes(_1a545e61c_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1a53a829c_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1a545ed37_prepareExprs(_1a545e61c_retTypeChecker* _self_, jule::Ptr<_1a4865eca_Expr>* _123736_e) {
	if (((*(_123736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_123736_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a7e1a49e:;
			{
				(*(_self_))._field_exprs=(*(_123736_e)).get()._field_Kind.cast_ptr<_1a4866b57_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_1a7e1a69c:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_123736_e)));;
			}
		}
		_match_end_1a7e1a2d4:;
	};
}



inline void _1a5460013_checkExprs(_1a545e61c_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a5466305_Data>> _125317_datas = jule::Slice<jule::Ptr<_1a5466305_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e1c11b:;
		if (it != expr_end) {
			jule::I64 _125414_i = it - expr->begin();
			jule::Ptr<_1a4865eca_Expr> _125421_expr = *it;
			{
				if ((_125414_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a7e1c11b;
				};
				jule::Ptr<_1a5492287_TypeKind> _125921_t = (*(_self_))._field_types[_125414_i];;
				jule::Ptr<_1a5466305_Data> _126121_d = _1a5483795_evalExpr(_1a5404bcd_evalp((*(_self_))._field_sc.get()._field_s, jule::Trait<_1a54ad209_Lookup>((*(_self_))._field_sc, 0), _125921_t), _125421_expr);;
				if ((_126121_d == nullptr)) {
					goto _iter_next_1a7e1c11b;
				};
				_125317_datas = jule::alloc_for_append(_125317_datas,1);_125317_datas.__push(_126121_d);;
				if (((!(_126121_d.get()._field_Mutable)) && _1a5493909_Mutable(_126121_d.get()._field_Kind.ptr()))) {
					_1a53ed600_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1a5451be7_assignTypeChecker _127321_ac = _1a5451be7_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_125921_t, ._field_d=_126121_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1a5452d6e_check(&_127321_ac);
			}
			_iter_next_1a7e1c11b:;
			++it;
			_125414_i++;
			goto _iter_begin_1a7e1c11b;
		}
		_iter_end_1a7e1c11b:;
	};
	if ((_125317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1a539bd51_TupleExprModel>(_1a539bd51_TupleExprModel{._field_Datas=_125317_datas}), &__jule_any_type88);
	} else if ((_125317_datas.len() == 1LL)) {
		(*(_self_))._field_model=_125317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1a5460321_check(_1a545e61c_retTypeChecker* _self_, jule::Ptr<_1a4865eca_Expr>* _129229_e) {
	_1a545eab2_prepareTypes(_self_);
	_1a545ed37_prepareExprs(_self_, _129229_e);
	jule::I64 _129613_n = (*(_self_))._field_exprs.len();;
	if (((_129613_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1a53a5651_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1a53ed600_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_129613_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1a53a493b_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1a53ed600_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_129613_n > (*(_self_))._field_types.len())) {
		_1a53ed600_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_129613_n < (*(_self_))._field_types.len())) {
		_1a53ed600_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1a5460013_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a545e61c_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a54619e8_FindPackage(_1a54614cb_SymbolTable* _self_, jule::Str _2630_ident) {
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e28336:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _2721_pkg = *it;
			{
				if ((_2721_pkg.get()._field_Ident == _2630_ident)) {
					return _2721_pkg;;
				};
			}
			_iter_next_1a7e28336:;
			++it;
			goto _iter_begin_1a7e28336;
		}
		_iter_end_1a7e28336:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a5461d06_SelectPackage(_1a54614cb_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)> _3832_selector) {
	if ((_3832_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e293ae:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _4221_pkg = *it;
			{
				if (_3832_selector(_4221_pkg)) {
					return _4221_pkg;;
				};
			}
			_iter_next_1a7e293ae:;
			++it;
			goto _iter_begin_1a7e293ae;
		}
		_iter_end_1a7e293ae:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5418939_Var> _1a54621ad_FindVar(_1a54614cb_SymbolTable* _self_, jule::Str _5226_ident, jule::Bool _5238_cppLinked) {
	return _1a5463c70_findVar(_self_, _5226_ident, _5238_cppLinked, false);;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a5462565_FindTypeAlias(_1a54614cb_SymbolTable* _self_, jule::Str _5832_ident, jule::Bool _5844_cppLinked) {
	return _1a54641c1_findTypeAlias(_self_, _5832_ident, _5844_cppLinked, false);;
}



inline jule::Ptr<_1a487d19b_Struct> _1a546291c_FindStruct(_1a54614cb_SymbolTable* _self_, jule::Str _6429_ident, jule::Bool _6441_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e2badc:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _6521_s = *it;
			{
				if (((_6521_s.get()._field_Ident == _6429_ident) && (_6521_s.get()._field_CppLinked == _6441_cppLinked))) {
					return _6521_s;;
				};
			}
			_iter_next_1a7e2badc:;
			++it;
			goto _iter_begin_1a7e2badc;
		}
		_iter_end_1a7e2badc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a5462cc4_FindFn(_1a54614cb_SymbolTable* _self_, jule::Str _7525_ident, jule::Bool _7537_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e2ced9:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _7621_f = *it;
			{
				if (((_7621_f.get()._field_Ident == _7525_ident) && (_7621_f.get()._field_CppLinked == _7537_cppLinked))) {
					return _7621_f;;
				};
			}
			_iter_next_1a7e2ced9:;
			++it;
			goto _iter_begin_1a7e2ced9;
		}
		_iter_end_1a7e2ced9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a54630d2_FindTrait(_1a54614cb_SymbolTable* _self_, jule::Str _8628_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e2e1a5:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> _8721_t = *it;
			{
				if ((_8721_t.get()._field_Ident == _8628_ident)) {
					return _8721_t;;
				};
			}
			_iter_next_1a7e2e1a5:;
			++it;
			goto _iter_begin_1a7e2e1a5;
		}
		_iter_end_1a7e2e1a5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b8521_Enum> _1a54633e0_FindEnum(_1a54614cb_SymbolTable* _self_, jule::Str _9727_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e30085:;
		if (it != expr_end) {
			jule::Ptr<_1a53b8521_Enum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9727_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1a7e30085:;
			++it;
			goto _iter_begin_1a7e30085;
		}
		_iter_end_1a7e30085:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54636ed_FindTypeEnum(_1a54614cb_SymbolTable* _self_, jule::Str _10831_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e30e65:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9b1b_TypeEnum> _10921_e = *it;
			{
				if ((_10921_e.get()._field_Ident == _10831_ident)) {
					return _10921_e;;
				};
			}
			_iter_next_1a7e30e65:;
			++it;
			goto _iter_begin_1a7e30e65;
		}
		_iter_end_1a7e30e65:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5418939_Var> _1a5463c70_findVar(_1a54614cb_SymbolTable* _self_, jule::Str _11926_ident, jule::Bool _11938_cppLinked, jule::Bool _11955_reverse) {
	if (_11955_reverse) {
		jule::I64 _12121_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_12121_i >= 0LL); (_12121_i)--) {
			{
				jule::Ptr<_1a5418939_Var> _12325_v = (*(_self_))._field_Vars[_12121_i];;
				if (((_12325_v.get()._field_Ident == _11926_ident) && (_12325_v.get()._field_CppLinked == _11938_cppLinked))) {
					return _12325_v;;
				};
			}
		_iter_next_1a7e32e34:;
		}
		_iter_end_1a7e32e34:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7e329a0:;
			if (it != expr_end) {
				jule::Ptr<_1a5418939_Var> _12925_v = *it;
				{
					if (((_12925_v.get()._field_Ident == _11926_ident) && (_12925_v.get()._field_CppLinked == _11938_cppLinked))) {
						return _12925_v;;
					};
				}
				_iter_next_1a7e329a0:;
				++it;
				goto _iter_begin_1a7e329a0;
			}
			_iter_end_1a7e329a0:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a54641c1_findTypeAlias(_1a54614cb_SymbolTable* _self_, jule::Str _13832_ident, jule::Bool _13844_cppLinked, jule::Bool _13861_reverse) {
	if (_13861_reverse) {
		jule::I64 _14021_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_14021_i >= 0LL); (_14021_i)--) {
			{
				jule::Ptr<_1a5491594_TypeAlias> _14225_ta = (*(_self_))._field_TypeAliases[_14021_i];;
				if (((_14225_ta.get()._field_Ident == _13832_ident) && (_14225_ta.get()._field_CppLinked == _13844_cppLinked))) {
					return _14225_ta;;
				};
			}
		_iter_next_1a7e36058:;
		}
		_iter_end_1a7e36058:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7e35ac4:;
			if (it != expr_end) {
				jule::Ptr<_1a5491594_TypeAlias> _14825_ta = *it;
				{
					if (((_14825_ta.get()._field_Ident == _13832_ident) && (_14825_ta.get()._field_CppLinked == _13844_cppLinked))) {
						return _14825_ta;;
					};
				}
				_iter_next_1a7e35ac4:;
				++it;
				goto _iter_begin_1a7e35ac4;
			}
			_iter_end_1a7e35ac4:;
		};
	};
	return nullptr;;
}



inline jule::Any _1a5464578_defByIdent(_1a54614cb_SymbolTable* _self_, jule::Str _15929_ident, jule::Bool _15941_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e38313:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _16021_v = *it;
			{
				if (((_16021_v.get()._field_Ident == _15929_ident) && (_16021_v.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16021_v, &__jule_any_type8);;
				};
			}
			_iter_next_1a7e38313:;
			++it;
			goto _iter_begin_1a7e38313;
		}
		_iter_end_1a7e38313:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e37873:;
		if (it != expr_end) {
			jule::Ptr<_1a5491594_TypeAlias> _16621_ta = *it;
			{
				if (((_16621_ta.get()._field_Ident == _15929_ident) && (_16621_ta.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_16621_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1a7e37873:;
			++it;
			goto _iter_begin_1a7e37873;
		}
		_iter_end_1a7e37873:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e391b0:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _17221_s = *it;
			{
				if (((_17221_s.get()._field_Ident == _15929_ident) && (_17221_s.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17221_s, &__jule_any_type66);;
				};
			}
			_iter_next_1a7e391b0:;
			++it;
			goto _iter_begin_1a7e391b0;
		}
		_iter_end_1a7e391b0:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3a898:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _17821_f = *it;
			{
				if (((_17821_f.get()._field_Ident == _15929_ident) && (_17821_f.get()._field_CppLinked == _15941_cppLinked))) {
					return jule::Any(_17821_f, &__jule_any_type65);;
				};
			}
			_iter_next_1a7e3a898:;
			++it;
			goto _iter_begin_1a7e3a898;
		}
		_iter_end_1a7e3a898:;
	};
	if (_15941_cppLinked) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3bd0b:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> _18821_t = *it;
			{
				if ((_18821_t.get()._field_Ident == _15929_ident)) {
					return jule::Any(_18821_t, &__jule_any_type10);;
				};
			}
			_iter_next_1a7e3bd0b:;
			++it;
			goto _iter_begin_1a7e3bd0b;
		}
		_iter_end_1a7e3bd0b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3ca87:;
		if (it != expr_end) {
			jule::Ptr<_1a53b8521_Enum> _19421_e = *it;
			{
				if ((_19421_e.get()._field_Ident == _15929_ident)) {
					return jule::Any(_19421_e, &__jule_any_type68);;
				};
			}
			_iter_next_1a7e3ca87:;
			++it;
			goto _iter_begin_1a7e3ca87;
		}
		_iter_end_1a7e3ca87:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3d439:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9b1b_TypeEnum> _20021_te = *it;
			{
				if ((_20021_te.get()._field_Ident == _15929_ident)) {
					return jule::Any(_20021_te, &__jule_any_type69);;
				};
			}
			_iter_next_1a7e3d439:;
			++it;
			goto _iter_begin_1a7e3d439;
		}
		_iter_end_1a7e3d439:;
	};
	return nullptr;;
}



inline jule::Bool _1a54649c9_isDuplicatedIdent(_1a54614cb_SymbolTable* _self_, jule::Uintptr _21232_itself, jule::Str _21249_ident, jule::Bool _21261_cppLinked) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3e1b5:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> *_21316_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21316_v))) != _21232_itself) && ((*(_21316_v)).get()._field_Ident == _21249_ident)) && ((*(_21316_v)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1a7e3e1b5:;
			++it;
			goto _iter_begin_1a7e3e1b5;
		}
		_iter_end_1a7e3e1b5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3e171:;
		if (it != expr_end) {
			jule::Ptr<_1a5491594_TypeAlias> *_21916_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21916_ta))) != _21232_itself) && ((*(_21916_ta)).get()._field_Ident == _21249_ident)) && ((*(_21916_ta)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1a7e3e171:;
			++it;
			goto _iter_begin_1a7e3e171;
		}
		_iter_end_1a7e3e171:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e40183:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> *_22516_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22516_s))) != _21232_itself) && ((*(_22516_s)).get()._field_Ident == _21249_ident)) && ((*(_22516_s)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1a7e40183:;
			++it;
			goto _iter_begin_1a7e40183;
		}
		_iter_end_1a7e40183:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e417d3:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> *_23116_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_23116_f))) != _21232_itself) && ((*(_23116_f)).get()._field_Ident == _21249_ident)) && ((*(_23116_f)).get()._field_CppLinked == _21261_cppLinked))) {
					return true;;
				};
			}
			_iter_next_1a7e417d3:;
			++it;
			goto _iter_begin_1a7e417d3;
		}
		_iter_end_1a7e417d3:;
	};
	if (_21261_cppLinked) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e43c47:;
		if (it != expr_end) {
			jule::Ptr<_1a53b63cb_Trait> *_24116_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24116_t))) != _21232_itself) && ((*(_24116_t)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1a7e43c47:;
			++it;
			goto _iter_begin_1a7e43c47;
		}
		_iter_end_1a7e43c47:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e4431e:;
		if (it != expr_end) {
			jule::Ptr<_1a53b8521_Enum> *_24716_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24716_e))) != _21232_itself) && ((*(_24716_e)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1a7e4431e:;
			++it;
			goto _iter_begin_1a7e4431e;
		}
		_iter_end_1a7e4431e:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e4551d:;
		if (it != expr_end) {
			jule::Ptr<_1a53b9b1b_TypeEnum> *_25316_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25316_te))) != _21232_itself) && ((*(_25316_te)).get()._field_Ident == _21249_ident))) {
					return true;;
				};
			}
			_iter_next_1a7e4551d:;
			++it;
			goto _iter_begin_1a7e4551d;
		}
		_iter_end_1a7e4551d:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a54614cb_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a54666e0_IsNil(_1a5466305_Data* _self_) {
	return _1a54931bc_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a5466954_IsVoid(_1a5466305_Data* _self_) {
	return _1a5493431_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1a5466bb8_IsConst(_1a5466305_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1a5466ec6_GoodOperand(_1a5466305_Data* _self_, jule::Ptr<_1a5466305_Data>* _10031_other) {
	if ((_1a54950c0_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1a549461e_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1a549a47c_IsAny(_1a549461e_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1a5495cd5_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1a54931bc_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5466305_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a546737d_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1a546837e_pushErr(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1a546869d_pushSugggestion(_1a5467d73_Eval* _self_, jule::Str _13634_fmt, jule::Slice<jule::Any> _13647_args) {
	_1a53ed91e_pushSugggestion((*(_self_))._field_s.ptr(), _13634_fmt, _13647_args);
}



inline void _1a5468879_allowBuiltin(_1a5467d73_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a5468a55_disallowBuiltin(_1a5467d73_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1a5468cb9_isUnsafe(_1a5467d73_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1a546902d_isGlobal(_1a5467d73_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7e79b29:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7e79035:;
			{
				return false;;
			}
		}
		_match_end_1a7e795a7:;
	};
}



inline jule::Bool _1a5469308_applyNumericPrefix(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1a5466bb8_IsConst((*(_16342_d)).ptr())))) || (_1a549461e_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1a5496ed4_Prim> _17013_prim = _1a549461e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1a5389723_IsFloat(_1a5497347_Str(_17013_prim.ptr()))) {
			_case_begin_1a7e7bd18:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>((*((*(_self_))._field_prefix)));
				_1a538d727_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1a538c9ac_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1a5388d71_IsSigInt(_1a5497347_Str(_17013_prim.ptr()))) {
			_case_begin_1a7e7bd7e:;
			{
				if ((!(_1a544dc16_sigAssignable(_1a5497347_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>((*((*(_self_))._field_prefix)));
				_1a538cc32_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1a538915c_IsUnsigInt(_1a5497347_Str(_17013_prim.ptr()))) {
			_case_begin_1a7e7bde5:;
			{
				if ((!(_1a544dd48_unsigAssignable(_1a5497347_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>((*((*(_self_))._field_prefix)));
				_1a538cea7_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1a7e7bae8:;
	};
	return true;;
}



inline jule::Ptr<_1a5466305_Data> _1a546956c_litNil(_1a5467d73_Eval* _self_) {
	jule::Ptr<_1a5389ec6_Const> _20217_constant = static__1a538b1c5_NewNil();;
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type47), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1a5466305_Data> _1a546987a_litStr(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_1ceee9cc6_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1a544de9c_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1a544e299_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1a5389ec6_Const> _21817_constant = static__1a538ac30_NewStr(_21217_s);;
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type47), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1a5466305_Data> _1a5469b88_litBool(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr>* _23023_l) {
	jule::Ptr<_1a5389ec6_Const> _23117_constant = static__1a538a988_NewBool(((*(_23023_l)).get()._field_Value == jule::Str("true", 4)));;
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_23117_constant, &__jule_any_type47), ._field_Constant=_23117_constant});;
}



inline jule::Ptr<_1a5466305_Data> _1a5469e96_litRune(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr>* _24223_l) {
	;
	;
	jule::Str _24713_lt = (*(_24223_l)).get()._field_Value.slice(1LL, ((*(_24223_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24813_r = _1a5432106_ToRune(static_cast<jule::Slice<jule::U8>>(_24713_lt));;
	jule::Ptr<_1a5466305_Data> _24917_data = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Constant=static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24813_r)))});;
	jule::Bool _25313_isAscii = _1a5431e80_IsAscii(_24813_r);;
	if (_25313_isAscii) {
		_24917_data.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u8", 2)), 6)});
	} else {
		_24917_data.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i32", 3)), 6)});
	};
	_24917_data.get()._field_Mutable=true;
	_24917_data.get()._field_Model=jule::Any(jule::new_ptr<_1a53a0e65_RuneExprModel>(_1a53a0e65_RuneExprModel{._field_Code=_24813_r}), &__jule_any_type89);
	_24917_data.get()._field_IsRune=true;
	_24917_data.get()._field_untyped=true;
	return _24917_data;;
}



inline jule::Ptr<_1a5466305_Data> _1a546a2a4_litFloat(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr>* _27124_l) {
	;
	jule::F64 _27313_f = ({
		auto except = _1a537c97a_ParseFloat((*(_27124_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1a5389ec6_Const> _27417_constant = static__1a538aec7_NewF64(_27313_f);;
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_untyped=true, ._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Mutable=true, ._field_Model=jule::Any(_27417_constant, &__jule_any_type47), ._field_Constant=_27417_constant});;
}



inline jule::Ptr<_1a5466305_Data> _1a546a5b2_litInt(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr>* _28626_l) {
	;
	jule::Str _28917_lit = (*(_28626_l)).get()._field_Value;;
	jule::I64 _29017_base = 0LL;;
	{
		
		if (_1ceaa4a18_HasPrefix(_28917_lit, jule::Str("0x", 2))) {
			_case_begin_1a7e8d5aa:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=16LLU;
			}
		}
		else if (_1ceaa4a18_HasPrefix(_28917_lit, jule::Str("0b", 2))) {
			_case_begin_1a7e8d621:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=2LLU;
			}
		}
		else if (_1ceaa4a18_HasPrefix(_28917_lit, jule::Str("0o", 2))) {
			_case_begin_1a7e8d2be:;
			{
				(_28917_lit).mut_slice(2LL);;
				_29017_base=8LLU;
			}
		}
		else if (((_28917_lit[0LL] == '0') && (_28917_lit.len() > 1LL))) {
			_case_begin_1a7e8d335:;
			{
				(_28917_lit).mut_slice(1LL);;
				_29017_base=8LLU;
			}
		}
		else {
			_case_begin_1a7e8d258:;
			{
				_29017_base=10LLU;
			}
		}
		_match_end_1a7e8d1e2:;
	};
	jule::Ptr<_1a5466305_Data> _31017_d = jule::new_ptr<_1a5466305_Data>();;
	jule::Bool _31217_ok = true;;
	jule::I64 _31313_sig = ({
		auto except = _1a5045bd7_ParseInt(_28917_lit, _29017_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_31217_ok=false;

			0LL;
		});
	});;
	if (_31217_ok) {
		_31017_d.get()._field_Constant=static__1a538a449_NewI64(_31313_sig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)});
	} else {
		jule::U64 _32317_unsig = ({
			auto except = _1a4e4704a_ParseUint(_28917_lit, _29017_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1a546837e_pushErr(_self_, (*(_28626_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1a546869d_pushSugggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_31017_d.get()._field_Constant=static__1a538a6e1_NewU64(_32317_unsig);
		_31017_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("uint", 4)), 6)});
	};
	_31017_d.get()._field_Model=jule::Any(_31017_d.get()._field_Constant, &__jule_any_type47);
	if ((!(_1a5469308_applyNumericPrefix(_self_, &(_31017_d))))) {
		_1a548bec9_fitBitsize(&(_31017_d));
	};
	_31017_d.get()._field_Mutable=true;
	_31017_d.get()._field_untyped=true;
	return _31017_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a546a8c0_litNum(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr>* _34626_l) {
	{
		
		if (_1ceeea931_IsFloat((*(_34626_l)).get()._field_Value)) {
			_case_begin_1a7e965c4:;
			{
				return _1a546a2a4_litFloat(_self_, _34626_l);;
			}
		}
		else {
			_case_begin_1a7e95dcb:;
			{
				return _1a546a5b2_litInt(_self_, _34626_l);;
			}
		}
		_match_end_1a7e95d10:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a546abcd_evalLit(_1a5467d73_Eval* _self_, jule::Ptr<_1a486700e_LitExpr> _35526_lit) {
	{
		
		if (_1a4867361_IsNil(_35526_lit.ptr())) {
			_case_begin_1a7e976d5:;
			{
				return _1a546956c_litNil(_self_);;
			}
		}
		else if (_1ceee9a2e_IsStr(_35526_lit.get()._field_Value)) {
			_case_begin_1a7e9710d:;
			{
				return _1a546987a_litStr(_self_, &(_35526_lit));;
			}
		}
		else if (_1ceeea689_IsBool(_35526_lit.get()._field_Value)) {
			_case_begin_1a7e97185:;
			{
				return _1a5469b88_litBool(_self_, &(_35526_lit));;
			}
		}
		else if (_1ceeea06d_IsRune(_35526_lit.get()._field_Value)) {
			_case_begin_1a7e9720c:;
			{
				return _1a5469e96_litRune(_self_, &(_35526_lit));;
			}
		}
		else if (_1ceeeabc8_IsNum(_35526_lit.get()._field_Value)) {
			_case_begin_1a7e9740a:;
			{
				return _1a546a8c0_litNum(_self_, &(_35526_lit));;
			}
		}
		else {
			_case_begin_1a7e96b24:;
			{
				return nullptr;;
			}
		}
		_match_end_1a7e96a58:;
	};
}



inline jule::Any _1a546aedb_findBuiltins(_1a5467d73_Eval* _self_, jule::Str _37231_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1a7e9950b:;
			{
				jule::Any _37521_def = _1a548bcba_findBuiltinsImport(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1a53e27e2_ImportInfo>(1));;
				if ((_37521_def != nullptr)) {
					return _37521_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7e9997e:;
			{
				jule::Any _38021_def = _1a548c958_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1a53ea93d_Sema>(3));;
				if ((_38021_def != nullptr)) {
					return _38021_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7e999e5:;
			{
				jule::Any _38521_def = _1a548c958_findBuiltinsSema(_37231_ident, (*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0).get()._field_s);;
				if ((_38521_def != nullptr)) {
					return _38521_def;;
				};
			}
		}
		_match_end_1a7e994a6:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1a4c8c236_findBuiltinDef(_37231_ident);;
}



inline jule::Any _1a546b393_getDef(_1a5467d73_Eval* _self_, jule::Str _39625_ident, jule::Bool _39637_cppLinked) {
	jule::Ptr<_1a5418939_Var> _40117_v = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54aba76_FindVar((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40117_v != nullptr)) {
		return jule::Any(_40117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1a5491594_TypeAlias> _40617_ta = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54abe2d_FindTypeAlias((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_40617_ta != nullptr)) {
		return jule::Any(_40617_ta, &__jule_any_type67);;
	};
	if ((!(_39637_cppLinked))) {
		jule::Ptr<_1a53b8521_Enum> _41221_enm = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54acca8_FindEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41221_enm != nullptr)) {
			return jule::Any(_41221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1a53b9b1b_TypeEnum> _41721_tenm = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ad0b6_FindTypeEnum((*(_self_))._field_lookup, _39625_ident);;
		if ((_41721_tenm != nullptr)) {
			return jule::Any(_41721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1a53a44c9_Fn> _42317_f = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ac68c_FindFn((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42317_f != nullptr)) {
		return jule::Any(_42317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1a487d19b_Struct> _42817_s = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ac2d5_FindStruct((*(_self_))._field_lookup, _39625_ident, _39637_cppLinked);;
	if ((_42817_s != nullptr)) {
		return jule::Any(_42817_s, &__jule_any_type66);;
	};
	return _1a546aedb_findBuiltins(_self_, _39625_ident);;
}



inline void _1a7eb0b4e_pushReference(_1a5467d73_Eval* _self_, jule::Ptr<_1a53a717a_FnIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7eb5390:;
			{
				jule::Ptr<_1a53cab4e_scopeChecker> _43921_sc = _1a53ce009_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0));;
				if ((!(_1a7eb32b1_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1a53aac94_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1a7eb2007:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1a7eb32b1_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1a53aac94_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1a7eb1ea2:;
	};
}

inline void _1a7ec46ce_pushReference(_1a5467d73_Eval* _self_, jule::Ptr<_1a5418939_Var>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7ec8bde:;
			{
				jule::Ptr<_1a53cab4e_scopeChecker> _43921_sc = _1a53ce009_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0));;
				if ((!(_1a7ec6ca8_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1a53aac94_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1a7ec59ee:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1a7ec6ca8_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1a53aac94_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1a7ec5999:;
	};
}

inline void _1a80642c9_pushReference(_1a5467d73_Eval* _self_, jule::Ptr<_1a487d575_StructIns>* _43640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8065462:;
			{
				jule::Ptr<_1a53cab4e_scopeChecker> _43921_sc = _1a53ce009_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0));;
				if ((!(_1a8066991_Exist(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_43640_ref)))))) {
					_1a53aac94_Push(_43921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1a80656d7:;
			{
				if ((((*(_self_))._field_owner != nullptr) && (!(_1a8066991_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_43640_ref))))))) {
					_1a53aac94_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_43640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1a8065682:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a546b926__evalEnum(_1a5467d73_Eval* _self_, jule::Ptr<_1a53b8521_Enum> _45028_enm) {
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_45028_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a5466305_Data> _1a546bccd_evalEnum(_1a5467d73_Eval* _self_, jule::Ptr<_1a53b8521_Enum> _45931_enm, jule::Ptr<_1ceee8973_Token> _45943_errorToken) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _45931_enm.get()._field_Public, _45931_enm.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _45943_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_45931_enm.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a546b926__evalEnum(_self_, _45931_enm);;
}



inline jule::Ptr<_1a5466305_Data> _1a546c0db__evalTypeEnum(_1a5467d73_Eval* _self_, jule::Ptr<_1a53b9b1b_TypeEnum> _46832_enm) {
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_46832_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1a5466305_Data> _1a546c493_evalTypeEnum(_1a5467d73_Eval* _self_, jule::Ptr<_1a53b9b1b_TypeEnum> _47735_enm, jule::Ptr<_1ceee8973_Token> _47751_errorToken) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _47735_enm.get()._field_Public, _47735_enm.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _47751_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_47735_enm.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1a546c0db__evalTypeEnum(_self_, _47735_enm);;
}



inline jule::Ptr<_1a5466305_Data> _1a546c7a1__evalStruct(_1a5467d73_Eval* _self_, jule::Ptr<_1a487d575_StructIns> _48630_s) {
	jule::Ptr<_1a5466305_Data> _48717_d = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_48630_s, 0)}), ._field_Model=jule::Any(_48630_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_48630_s.get()._field_Decl != nullptr) && _48630_s.get()._field_Decl.get()._field_CppLinked)) {
		_48717_d.get()._field_Kind.get()._field_CppIdent=_48630_s.get()._field_Decl.get()._field_Ident;
	};
	return _48717_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a546cb58_evalStruct(_1a5467d73_Eval* _self_, jule::Ptr<_1a487d575_StructIns> _50033_s, jule::Ptr<_1ceee8973_Token> _50048_errorToken) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _50033_s.get()._field_Decl.get()._field_Public, _50033_s.get()._field_Decl.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _50048_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_50033_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a546d285_checkDeprecated(_self_, &(_50033_s.get()._field_Decl.get()._field_Directives), _50048_errorToken);
	return _1a546c7a1__evalStruct(_self_, _50033_s);;
}



inline jule::Ptr<_1a5466305_Data> _1a546ce66_evalFnIns(_1a5467d73_Eval* _self_, jule::Ptr<_1a53a717a_FnIns> _51028_f) {
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_51028_f, 1)}), ._field_Model=jule::Any(_51028_f, &__jule_any_type7), });;
}



inline void _1a546d285_checkDeprecated(_1a5467d73_Eval* _self_, jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _51939_directives, jule::Ptr<_1ceee8973_Token> _51970_tok) {
	if (_1a5468cb9_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1a3c1d0ec_Directive> _52413_d = _1a548b935_findDirective(_51939_directives, jule::Str("deprecated", 10));;
	if ((_52413_d != nullptr)) {
		if ((_52413_d.get()._field_Args.len() == 0LL)) {
			_1a546837e_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1a546837e_pushErr(_self_, _51970_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_52413_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1a546869d_pushSugggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a5466305_Data> _1a546d63c_evalFn(_1a5467d73_Eval* _self_, jule::Ptr<_1a53a44c9_Fn> _53529_f, jule::Ptr<_1ceee8973_Token> _53537_errorToken) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _53529_f.get()._field_Public, _53529_f.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _53537_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_53529_f.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a546d285_checkDeprecated(_self_, &(_53529_f.get()._field_Directives), _53537_errorToken);
	jule::Ptr<_1a53a717a_FnIns> _54417_ins = _1a53a5b29_instance(_53529_f);;
	_1a7eb0b4e_pushReference(_self_, &(_54417_ins));
	return _1a546ce66_evalFnIns(_self_, _54417_ins);;
}



inline void _1a546da05_pushIllegalCycleError(_1a5467d73_Eval* _self_, jule::Ptr<_1a5418939_Var>* _54941_v1, jule::Ptr<_1a5418939_Var>* _54952_v2, jule::Str* _54967_message) {
	;
	jule::Str _55113_refers_to = _1ceb4996a_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_54941_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_54952_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_54967_message))).buffer.insert(0, (((_1ceaa53cb_Repeat(jule::Str(" ", 1), 4LL) + _55113_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a546ddac_checkCrossCycle(_1a5467d73_Eval* _self_, jule::Ptr<_1a5418939_Var>* _55535_v, jule::Str* _55549_message) {
	{
		auto expr = &((*(_55535_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eb8283:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> *_55616_d = it;
			{
				if (((*(_55616_d)) == (*(_self_))._field_owner)) {
					_1a546da05_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
				if ((!(_1a546ddac_checkCrossCycle(_self_, _55616_d, _55549_message)))) {
					_1a546da05_pushIllegalCycleError(_self_, _55535_v, _55616_d, _55549_message);
					return false;;
				};
			}
			_iter_next_1a7eb8283:;
			++it;
			goto _iter_begin_1a7eb8283;
		}
		_iter_end_1a7eb8283:;
	};
	return true;;
}



inline jule::Bool _1a546e264_checkIllegalCycles(_1a5467d73_Eval* _self_, jule::Ptr<_1a5418939_Var>* _57442_v, jule::Ptr<_1ceee8973_Token> _57451_decl_token) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_owner == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_57442_v)))) {
		_1a546837e_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _58617_message = jule::Str();;
	if ((!(_1a546ddac_checkCrossCycle(_self_, _57442_v, &(_58617_message))))) {
		jule::Str _58921_errMsg = _58617_message;;
		_58617_message=jule::Str();
		_1a546da05_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _57442_v, &(_58617_message));
		_58921_errMsg+=_58617_message;
		_1a546837e_pushErr(_self_, _57451_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_58921_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_57442_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a5466305_Data> _1a546e61b_evalVar(_1a5467d73_Eval* _self_, jule::Ptr<_1a5418939_Var> _60130_v, jule::Ptr<_1ceee8973_Token> _60139_errorToken) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _60130_v.get()._field_Public, _60130_v.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _60139_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a546d285_checkDeprecated(_self_, &(_60130_v.get()._field_Directives), _60139_errorToken);
	_60130_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7ec05ba:;
			{
				jule::Bool _61517_ok = _1a546e264_checkIllegalCycles(_self_, &(_60130_v), _60139_errorToken);;
				if ((!(_61517_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7ec0675:;
			{
				if (((!(_60130_v.get()._field_Reference)) || _1a5468cb9_isUnsafe(_self_))) {
					goto _match_end_1a7ec0565;
				};
				jule::Ptr<_1a53cab4e_scopeChecker> _62321_s = (*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0);;
				while (((_62321_s.get()._field_owner == nullptr) && (_62321_s.get()._field_parent != nullptr))) {
					{
						_62321_s=_62321_s.get()._field_parent;
					}
				_iter_next_1a7ec2655:;
				}
				_iter_end_1a7ec2655:;;
				if ((((_62321_s.get()._field_owner != nullptr) && _62321_s.get()._field_owner.get()._field_Anon) && (_60130_v.get()._field_Scope != _62321_s.get()._field_owner.get()._field_Scope))) {
					_1a546837e_pushErr(_self_, _60139_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_60130_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1a7ec0565:;
	};
	if ((_60130_v.get()._field_Scope == nullptr)) {
		_1a7ec46ce_pushReference(_self_, &(_60130_v));
	};
	if (((!(_60130_v.get()._field_CppLinked)) && ((_60130_v.get()._field_Value == nullptr) || (_60130_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_60130_v.get()._field_Constant) {
			_1a54113d2_checkTypeVar((*(_self_))._field_s, &(_60130_v), jule::Trait<_1a54ad209_Lookup>((*(_self_))._field_s, 3));
			if ((_60130_v.get()._field_Value.get()._field_Data == nullptr)) {
				return nullptr;;
			};
		};
	};
	if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_60130_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1a54113d2_checkTypeVar((*(_self_))._field_s, &(_60130_v), (*(_self_))._field_lookup);
		if (((_60130_v.get()._field_Kind == nullptr) || (_60130_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1a5466305_Data> _66617_d = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_60130_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_60130_v.get()._field_Mutable, ._field_Reference=_60130_v.get()._field_Reference, ._field_Lvalue=(!(_60130_v.get()._field_Constant)), ._field_Model=jule::Any(_60130_v, &__jule_any_type8), });;
	if ((((!(_60130_v.get()._field_CppLinked)) && _1a5418d02_IsInitialized(_60130_v.ptr())) && (_60130_v.get()._field_Value.get()._field_Data != nullptr))) {
		_66617_d.get()._field_IsRune=_60130_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_60130_v.get()._field_Constant && (_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_66617_d.get()._field_Constant=jule::new_ptr<_1a5389ec6_Const>((*(_60130_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_66617_d.get()._field_Model=jule::Any(_66617_d.get()._field_Constant, &__jule_any_type47);
		if (_1a54192ca_untypedConstant(_60130_v.ptr())) {
			_1a5469308_applyNumericPrefix(_self_, &(_66617_d));
			_66617_d.get()._field_untyped=true;
		};
	};
	return _66617_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a546e9c3_evalTypeAlias(_1a5467d73_Eval* _self_, jule::Ptr<_1a5491594_TypeAlias> _69036_ta, jule::Ptr<_1ceee8973_Token> _69052_errorToken) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _69036_ta.get()._field_Public, _69036_ta.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _69052_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_69036_ta.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_69036_ta.get()._field_Used=true;
	jule::Trait<_1a5491d58_Kind> _69917_kind = _69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1a5466305_Data> _70017_d = nullptr;;
	{
		auto &_match_expr{ _69917_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a7ed5800:;
			{
				_70017_d=_1a546c7a1__evalStruct(_self_, _69917_kind.cast_ptr<_1a487d575_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a7ed43d1:;
			{
				_70017_d=_1a546b926__evalEnum(_self_, _69917_kind.cast_ptr<_1a53b8521_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a7ed4447:;
			{
				_70017_d=_1a546c0db__evalTypeEnum(_self_, _69917_kind.cast_ptr<_1a53b9b1b_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1a7ed42b0:;
			{
				_70017_d=jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_69036_ta.get()._field_CppLinked) {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Ident;
				} else {
					_70017_d.get()._field_Kind.get()._field_CppIdent=_69036_ta.get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
				};
				_70017_d.get()._field_Model=jule::Any(_70017_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_1a7ed425a:;
	};
	_70017_d.get()._field_Kind.get()._field_Generic=_69036_ta.get()._field_Generic;
	return _70017_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a546ed7a_evalDef(_1a5467d73_Eval* _self_, jule::Any _72630_def, jule::Ptr<_1ceee8973_Token> _72640_ident) {
	{
		auto &_match_expr{ _72630_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7ed8083:;
			{
				return _1a546e61b_evalVar(_self_, _72630_def.cast_ptr<_1a5418939_Var>(&__jule_any_type8), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1a7ed80e9:;
			{
				return _1a546bccd_evalEnum(_self_, _72630_def.cast_ptr<_1a53b8521_Enum>(&__jule_any_type68), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1a7ed8160:;
			{
				return _1a546c493_evalTypeEnum(_self_, _72630_def.cast_ptr<_1a53b9b1b_TypeEnum>(&__jule_any_type69), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a7ed81d7:;
			{
				return _1a546cb58_evalStruct(_self_, _1a483994e_instance(_72630_def.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66)), _72640_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a7ed824d:;
			{
				jule::Ptr<_1a53a44c9_Fn> _73721_f = _72630_def.cast_ptr<_1a53a44c9_Fn>(&__jule_any_type65);;
				if ((_73721_f.get()._field_Ident != jule::Str("init", 4))) {
					return _1a546d63c_evalFn(_self_, _73721_f, _72640_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a7ed82b4:;
			{
				return _1a546ce66_evalFnIns(_self_, _72630_def.cast_ptr<_1a53a717a_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a7ed833b:;
			{
				return _1a546e9c3_evalTypeAlias(_self_, _72630_def.cast_ptr<_1a5491594_TypeAlias>(&__jule_any_type67), _72640_ident);;
			}
		}
		_match_end_1a7ed7e95:;
	};
	_1a546837e_pushErr(_self_, _72640_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_72640_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a5466305_Data> _1a5470188_evalIdent(_1a5467d73_Eval* _self_, jule::Ptr<_1a4867b8b_IdentExpr> _75028_ident) {
	jule::Any _75117_def = _1a546b393_getDef(_self_, _75028_ident.get()._field_Ident, _75028_ident.get()._field_CppLinked);;
	return _1a546ed7a_evalDef(_self_, _75117_def, _75028_ident.get()._field_Token);;
}



inline jule::Ptr<_1a5466305_Data> _1a5470496_evalUnary(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4868395_UnaryExpr> _75533_u) {
	_1a5483c18_unaryEval _75617_unary = static__1a54841be_new(_self_);;
	return _1a5485467_eval(&_75617_unary, _75533_u);;
}



inline jule::Ptr<_1a5466305_Data> _1a54707a4_evalVariadic(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486874c_VariadicExpr> _76036_v) {
	if ((_76036_v.get()._field_Expr == nullptr)) {
		_1a546837e_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5492287_TypeKind> _76617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_76617_prefix;
	});;
	jule::Ptr<_1a5466305_Data> _77017_d = _1a5483179_evalExprKind(_self_, _76036_v.get()._field_Expr.get()._field_Kind);;
	if ((_77017_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a54943aa_Variadicable(_77017_d.get()._field_Kind.ptr())))) {
		_1a546837e_pushErr(_self_.ptr(), _76036_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_77017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a549b1c5_Slc> _78013_slc = _1a5495598_Slc(_77017_d.get()._field_Kind.ptr());;
	_77017_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_CppIdent=_78013_slc.get()._field_Elem.get()._field_CppIdent, ._field_Generic=_78013_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_78013_slc.get()._field_Elem.get()._field_Kind});
	return _77017_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a5470ab2_evalUnsafe(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4867718_UnsafeExpr> _79034_u) {
	jule::Bool _79113_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1a5466305_Data> _79317_d = _1a5483179_evalExprKind(_self_, _79034_u.get()._field_Expr.get()._field_Kind);;
	_self_.get()._field_unsafety=_79113_unsafety;
	return _79317_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a5470dc0_evalArr(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486c5b9_SliceExpr> _79831_s) {
	jule::Ptr<_1a549d370_Arr> _80017_pt = _1a5495334_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1a549d370_Arr> _80217_arr = jule::new_ptr<_1a549d370_Arr>(_1a549d370_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_80017_pt.get()._field_Elem});;
	jule::Bool _80817_filled = false;;
	if ((_79831_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _79831_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1a7ee6d72:;
				{
					if ((_79831_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1a486874c_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_1a7ee6d1c;
					};
					if (_80017_pt.get()._field_Auto) {
						_1a546837e_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_80817_filled=true;
					_79831_s.get()._field_Exprs=_79831_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1a7ee6d1c:;
		};
	};
	_80217_arr.get()._field_N=static_cast<jule::I64>(_79831_s.get()._field_Exprs.len());
	if ((!(_80017_pt.get()._field_Auto))) {
		if ((_80217_arr.get()._field_N > _80017_pt.get()._field_N)) {
			_1a546837e_pushErr(_self_.ptr(), _79831_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_80217_arr.get()._field_N < _80017_pt.get()._field_N)) {
			_80217_arr.get()._field_N=_80017_pt.get()._field_N;
		};
	};
	jule::Ptr<_1a539b207_ArrayExprModel> _83717_model = jule::new_ptr<_1a539b207_ArrayExprModel>(_1a539b207_ArrayExprModel{._field_Kind=_80217_arr, });;
	if (_80817_filled) {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_83717_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _79831_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1a5492287_TypeKind> _84617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_80217_arr.get()._field_Elem;
	{
		auto expr = &(_79831_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eeb8c1:;
		if (it != expr_end) {
			jule::Ptr<_1a4865eca_Expr> _84821_elem = *it;
			{
				jule::Ptr<_1a5466305_Data> _84921_d = _1a5483179_evalExprKind(_self_, _84821_elem.get()._field_Kind);;
				if ((_84921_d == nullptr)) {
					goto _iter_next_1a7eeb8c1;
				};
				_1a54054d6_checkAssignType(_self_.get()._field_s, false, &(_80217_arr.get()._field_Elem), &(_84921_d), _79831_s.get()._field_Token);
				_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(_84921_d.get()._field_Model);;
			}
			_iter_next_1a7eeb8c1:;
			++it;
			goto _iter_begin_1a7eeb8c1;
		}
		_iter_end_1a7eeb8c1:;
	};
	_self_.get()._field_prefix=_84617_prefix;
	if (_80817_filled) {
		_83717_model.get()._field_Elems = jule::alloc_for_append(_83717_model.get()._field_Elems,1);_83717_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_80217_arr, 11)}), ._field_Mutable=true, ._field_Model=jule::Any(_83717_model, &__jule_any_type91), });;
}



inline jule::Ptr<_1a5466305_Data> _1a5471321_evalExpSlc(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486c5b9_SliceExpr> _87334_s, jule::Ptr<_1a5492287_TypeKind> _87353_t, jule::Any _87371_first) {
	jule::Ptr<_1a549b1c5_Slc> _87417_slc = jule::new_ptr<_1a549b1c5_Slc>(_1a549b1c5_Slc{._field_Elem=_87353_t});;
	jule::I64 _87817_i = 0LL;;
	jule::Ptr<_1a53984ce_SliceExprModel> _87917_model = jule::new_ptr<_1a53984ce_SliceExprModel>(_1a53984ce_SliceExprModel{._field_ElemKind=_87353_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _87334_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_87371_first != nullptr)) {
		_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_87371_first);;
		_87817_i=1LL;
	};
	jule::Ptr<_1a5492287_TypeKind> _88817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_87417_slc.get()._field_Elem;
	{
		auto expr = _87334_s.get()._field_Exprs.slice(_87817_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a80025ec:;
		if (it != expr_end) {
			jule::Ptr<_1a4865eca_Expr> _89021_elem = *it;
			{
				jule::Ptr<_1a5466305_Data> _89121_d = _1a5483179_evalExprKind(_self_, _89021_elem.get()._field_Kind);;
				if ((_89121_d == nullptr)) {
					goto _iter_next_1a80025ec;
				};
				_1a54054d6_checkAssignType(_self_.get()._field_s, false, &(_87417_slc.get()._field_Elem), &(_89121_d), _87334_s.get()._field_Token);
				_87917_model.get()._field_Elems = jule::alloc_for_append(_87917_model.get()._field_Elems,1);_87917_model.get()._field_Elems.__push(_89121_d.get()._field_Model);;
			}
			_iter_next_1a80025ec:;
			++it;
			goto _iter_begin_1a80025ec;
		}
		_iter_end_1a80025ec:;
	};
	_self_.get()._field_prefix=_88817_prefix;
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_87417_slc, 8)}), ._field_Mutable=true, ._field_Model=jule::Any(_87917_model, &__jule_any_type83), });;
}



inline jule::Ptr<_1a5466305_Data> _1a547162e_evalSliceExpr(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486c5b9_SliceExpr> _90937_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1a5495334_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a8005237:;
				{
					return _1a5470dc0_evalArr(_self_, _90937_s);;
				}
			}
			else if ((_1a5495598_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a80052ae:;
				{
					jule::Ptr<_1a549b1c5_Slc> _91525_pt = _1a5495598_Slc(_self_.get()._field_prefix.ptr());;
					return _1a5471321_evalExpSlc(_self_, _90937_s, _91525_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1a8005127:;
		};
	};
	jule::Ptr<_1a5492287_TypeKind> _92017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_90937_s.get()._field_Exprs.len() == 0LL)) {
		_1a546837e_pushErr(_self_.ptr(), _90937_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _92817_firstElem = _1a5483179_evalExprKind(_self_, _90937_s.get()._field_Exprs[0LL].get()._field_Kind);;
	if ((_92817_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _93317_d = _1a5471321_evalExpSlc(_self_, _90937_s, _92817_firstElem.get()._field_Kind, _92817_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_92017_prefix;
	return _93317_d;;
}



inline void _1a5471970_checkIntegerIndexingByData(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _93950_d, jule::Ptr<_1ceee8973_Token> _93960_token) {
	jule::Str _94013_err_key = _1a548ddcc_checkDataForIntegerIndexing(_93950_d);;
	{
		auto &_match_expr{ _94013_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a800a1a4:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a800a68d:;
			{
				_1a546837e_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_93950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1a800a528:;
			{
				_1a546837e_pushErr(_self_, _93960_token, _94013_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a800a44b:;
	};
}



inline void _1a5471d49_indexingPtr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _95135_d, jule::Ptr<_1a5466305_Data>* _95150_index, jule::Ptr<_1a486ce38_IndexingExpr>* _95165_i) {
	_1a5471970_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	jule::Ptr<_1a549dccc_Ptr> _95417_ptr = _1a5494ae7_Ptr((*(_95135_d)).get()._field_Kind.ptr());;
	{
		
		if (_1a549e7a0_IsUnsafe(_95417_ptr.ptr())) {
			_case_begin_1a800cd22:;
			{
				_1a546837e_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1a5468cb9_isUnsafe(_self_)))) {
			_case_begin_1a800cd88:;
			{
				_1a546837e_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a800cc01:;
	};
	(*(_95135_d)).get()._field_Kind=_95417_ptr.get()._field_Elem;
}



inline void _1a5472212_indexingArr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _96635_d, jule::Ptr<_1a5466305_Data>* _96650_index, jule::Ptr<_1a486ce38_IndexingExpr>* _96665_i) {
	jule::Ptr<_1a549d370_Arr> _96717_arr = _1a5495334_Arr((*(_96635_d)).get()._field_Kind.ptr());;
	(*(_96635_d)).get()._field_Kind=_96717_arr.get()._field_Elem;
	_1a5471970_checkIntegerIndexingByData(_self_, _96650_index, (*(_96665_i)).get()._field_Token);
	if ((_1a5466bb8_IsConst((*(_96650_index)).ptr()) && (_1a538c9ac_AsF64((*(_96650_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_96717_arr.get()._field_N)))) {
		_1a546837e_pushErr(_self_, (*(_96665_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a54725ca_indexingSlc(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _97535_d, jule::Ptr<_1a5466305_Data>* _97550_index, jule::Ptr<_1a486ce38_IndexingExpr>* _97565_i) {
	jule::Ptr<_1a549b1c5_Slc> _97617_slc = _1a5495598_Slc((*(_97535_d)).get()._field_Kind.ptr());;
	(*(_97535_d)).get()._field_Kind=_97617_slc.get()._field_Elem;
	_1a5471970_checkIntegerIndexingByData(_self_, _97550_index, (*(_97565_i)).get()._field_Token);
	if ((!(_1a5466bb8_IsConst((*(_97550_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_97535_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a8013553:;
			{
				jule::Ptr<_1a53984ce_SliceExprModel> _98621_m = (*(_97535_d)).get()._field_Model.cast_ptr<_1a53984ce_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _98717_indx = _1a538c9ac_AsF64((*(_97550_index)).get()._field_Constant.ptr());;
				if ((_98717_indx >= static_cast<jule::F64>(_98621_m.get()._field_Elems.len()))) {
					_1a546837e_pushErr(_self_, (*(_97565_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_97535_d)).get()._field_Model=_98621_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_98717_indx))];
					(*(_97535_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1a80134ba:;
	};
}



inline void _1a5472993_indexingMap(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _99735_d, jule::Ptr<_1a5466305_Data>* _99750_index, jule::Ptr<_1a486ce38_IndexingExpr>* _99769_i) {
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1a549c77b_Map> _100117_m = _1a5496049_Map((*(_99735_d)).get()._field_Kind.ptr());;
	_1a5451be7_assignTypeChecker _100217_atc = _1a5451be7_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_100117_m.get()._field_Key, ._field_d=(*(_99750_index)), ._field_errorToken=(*(_99769_i)).get()._field_Token};;
	_1a5452d6e_check(&_100217_atc);
	(*(_99735_d)).get()._field_Kind=_100117_m.get()._field_Val;
}



inline void _1a5472d5b_indexingStr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _101235_d, jule::Ptr<_1a5466305_Data>* _101250_index, jule::Ptr<_1a486ce38_IndexingExpr>* _101265_i) {
	;
	(*(_101235_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u8", 2)), 6)});
	if (((*(_101250_index)) == nullptr)) {
		return;;
	};
	_1a5471970_checkIntegerIndexingByData(_self_, _101250_index, (*(_101265_i)).get()._field_Token);
	if ((!(_1a5466bb8_IsConst((*(_101250_index)).ptr())))) {
		(*(_101235_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1a5466bb8_IsConst((*(_101235_d)).ptr())) {
		jule::Ptr<_1ceee8973_Token> _102817_errorToken = (*(_101265_i)).get()._field_Token;;
		jule::I64 _102917_j = _1a538c4d4_AsI64((*(_101250_index)).get()._field_Constant.ptr());;
		jule::Str _103017_s = _1a538c00b_ReadStr((*(_101235_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_102917_j) >= _103017_s.len())) {
			_1a546837e_pushErr(_self_, _102817_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1a538cea7_SetU64((*(_101235_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_103017_s[_102917_j])));
		};
	};
}



inline void _1a5473224_toIndexing(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _103934_d, jule::Ptr<_1a5466305_Data>* _103949_index, jule::Ptr<_1a486ce38_IndexingExpr>* _103968_i) {
	{
		
		if ((_1a5494ae7_Ptr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a801ceb9:;
			{
				_1a5471d49_indexingPtr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1a5495334_Arr((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a801d041:;
			{
				_1a5472212_indexingArr(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1a5495598_Slc((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a801d0b8:;
			{
				_1a54725ca_indexingSlc(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1a5496049_Map((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a801d140:;
			{
				_1a5472993_indexingMap(_self_, _103934_d, _103949_index, _103968_i);
				return;;
			}
		}
		else if ((_1a549461e_Prim((*(_103934_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a801d1b7:;
			{
				jule::Ptr<_1a5496ed4_Prim> _105417_prim = _1a549461e_Prim((*(_103934_d)).get()._field_Kind.ptr());;
				{
					
					if (_1a549a218_IsStr(_105417_prim.ptr())) {
						_case_begin_1a8021ebd:;
						{
							_1a5472d5b_indexingStr(_self_, _103934_d, _103949_index, _103968_i);
							return;;
						}
					}
					_match_end_1a8021e24:;
				};
			}
		}
		_match_end_1a801cd76:;
	};
	_1a546837e_pushErr(_self_, (*(_103968_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_103934_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1a5473697_pushGenericsFromExprSubIdent(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486942e_SubIdentExpr>* _106453_sexpr, jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>* _106514_generics, jule::Ptr<_1a4865eca_Expr>* _106542_expr) {
	jule::Ptr<_1a48626be_SubIdentTypeDecl> _106617_t = jule::new_ptr<_1a48626be_SubIdentTypeDecl>();;
	if ((!(_1a548eb9c_pushSubIdentFromExpr(jule::Any((*(_106453_sexpr)), &__jule_any_type92), &(_106617_t))))) {
		_1a546837e_pushErr(_self_.ptr(), (*(_106542_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_106514_generics)) = jule::alloc_for_append((*(_106514_generics)),1);(*(_106514_generics)).__push(jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Kind=jule::Any(_106617_t, &__jule_any_type93)}));;
	return true;;
}



inline jule::Bool _1a5473a60_pushGenericsFromData(jule::Ptr<_1a5467d73_Eval> _self_, jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>* _107545_generics, jule::Ptr<_1a4865eca_Expr>* _107573_expr) {
	{
		auto &_match_expr{ (*(_107573_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a8025cd5:;
			{
				jule::Ptr<_1a4868395_UnaryExpr> _107821_u = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1a4868395_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _107821_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1a80264bc:;
						{
							jule::Ptr<_1a4863835_PtrTypeDecl> _108125_kind = jule::new_ptr<_1a4863835_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _108225__generics = jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, 1LL);;
							_1a5473a60_pushGenericsFromData(_self_, &(_108225__generics), &(_107821_u.get()._field_Expr));
							_108125_kind.get()._field_Elem=_108225__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_108125_kind, &__jule_any_type78)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1a8027611:;
						{
							jule::Ptr<_1a4862d62_SptrTypeDecl> _109025_kind = jule::new_ptr<_1a4862d62_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _109125__generics = jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, 1LL);;
							_1a5473a60_pushGenericsFromData(_self_, &(_109125__generics), &(_107821_u.get()._field_Expr));
							_109025_kind.get()._field_Elem=_109125__generics[0LL];
							(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=(*(_107573_expr)).get()._field_Token, ._field_Kind=jule::Any(_109025_kind, &__jule_any_type79)}));;
						}
					}
					else {
						_case_begin_1a8026bb5:;
						{
							_1a546837e_pushErr(_self_.ptr(), _107821_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a8026940:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a8025d4b:;
			{
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push((*(_107573_expr)).get()._field_Kind.cast_ptr<_1a48619a9_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a8025b2b:;
			{
				jule::Ptr<_1a486942e_SubIdentExpr> _110521_sexpr = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1a486942e_SubIdentExpr>(&__jule_any_type92);;
				return _1a5473697_pushGenericsFromExprSubIdent(_self_, &(_110521_sexpr), _107545_generics, _107573_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a8025b92:;
			{
				jule::Ptr<_1a4867b8b_IdentExpr> _110821_ident = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1a4867b8b_IdentExpr>(&__jule_any_type86);;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_110821_ident.get()._field_Token, ._field_Ident=_110821_ident.get()._field_Ident, ._field_CppLinked=_110821_ident.get()._field_CppLinked, }), &__jule_any_type19)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a8025c08:;
			{
				{
					auto expr = &((*(_107573_expr)).get()._field_Kind.cast_ptr<_1a4866b57_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a802c869:;
					if (it != expr_end) {
						jule::Ptr<_1a4865eca_Expr> _111725_texpr = *it;
						{
							if ((!(_1a5473a60_pushGenericsFromData(_self_, _107545_generics, &(_111725_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a802c869:;
						++it;
						goto _iter_begin_1a802c869;
					}
					_iter_end_1a802c869:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a80252ac:;
			{
				jule::Ptr<_1a4868eab_NsSelectionExpr> _112321_ns = (*(_107573_expr)).get()._field_Kind.cast_ptr<_1a4868eab_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_1a4862070_IdentTypeDecl> _112421_decl = jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_112321_ns.get()._field_Ident, ._field_Ident=_112321_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_107545_generics)) = jule::alloc_for_append((*(_107545_generics)),1);(*(_107545_generics)).__push(jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a4862a76_NamespaceTypeDecl>(_1a4862a76_NamespaceTypeDecl{._field_Idents=_112321_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_112421_decl.get()._field_Token, ._field_Kind=jule::Any(_112421_decl, &__jule_any_type19)})}), &__jule_any_type97)}));;
			}
		}
		else {
			_case_begin_1a8025235:;
			{
				_1a546837e_pushErr(_self_.ptr(), (*(_107573_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a80251d0:;
	};
	return true;;
}



inline void _1a5473da1_evalIdentDeclFromIndexing(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a5466305_Data>* _114550_d, jule::Ptr<_1a486ce38_IndexingExpr>* _114565_i) {
	jule::Ptr<_1a487d575_StructIns> _114617_s = _1a5495a71_Struct((*(_114550_d)).get()._field_Kind.ptr());;
	if ((_114617_s == nullptr)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Expr.get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_114550_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_114550_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a4862070_IdentTypeDecl> _115317_decl = nullptr;;
	{
		auto &_match_expr{ (*(_114565_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a8032a4a:;
			{
				jule::Ptr<_1a4867b8b_IdentExpr> _115621_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1a4867b8b_IdentExpr>(&__jule_any_type86);;
				_115317_decl=jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_115621_expr.get()._field_Token, ._field_Ident=_115621_expr.get()._field_Ident, ._field_CppLinked=_115621_expr.get()._field_CppLinked, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a8033ab2:;
			{
				jule::Ptr<_1a4868eab_NsSelectionExpr> _116321_expr = (*(_114565_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1a4868eab_NsSelectionExpr>(&__jule_any_type96);;
				_115317_decl=jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_116321_expr.get()._field_Ident, ._field_Ident=_116321_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1a8032e46:;
			{
				_1a546837e_pushErr(_self_.ptr(), (*(_114565_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_114550_d))=nullptr;
				return;;
			}
		}
		_match_end_1a8032de1:;
	};
	if ((!(_1a5473a60_pushGenericsFromData(_self_, &(_115317_decl.get()._field_Generics), &((*(_114565_i)).get()._field_Index))))) {
		(*(_114550_d))=nullptr;
		return;;
	};
	_114617_s=({ auto _wrap_copy = _1a547a10a_typeChecker(_self_.ptr()); _1a54a4981_fromStruct(&_wrap_copy, &(_115317_decl), &(_114617_s.get()._field_Decl)); });
	if ((_114617_s == nullptr)) {
		(*(_114550_d))=nullptr;
		return;;
	};
	(*(_114550_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1a5491d58_Kind>(_114617_s, 0);
}



inline jule::Bool _1a5474313_checkGenericFn(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a53a717a_FnIns>* _118839_f, jule::Ptr<_1ceee8973_Token>* _118855_et, jule::Any* _118872_model) {
	jule::Bool _118913_ok = _1a54078a1_reloadFnInsTypes(_self_.get()._field_s, (*(_118839_f)));;
	(*(_118839_f)).get()._field_reloaded=true;
	if ((!(_118913_ok))) {
		return false;;
	};
	jule::Ptr<_1a53a717a_FnIns> _119417_existInstance = _1a53a5e04_appendInstance((*(_118839_f)).get()._field_Decl.ptr(), _118839_f);;
	if ((!(_1a5406a15_checkConstraintsFn(_self_.get()._field_s, _118839_f, _118855_et, _119417_existInstance)))) {
		return false;;
	};
	if ((_119417_existInstance != nullptr)) {
		(*(_118839_f))=_119417_existInstance;
		_1a548e95a_updateModelToGenericIns(_118872_model, &(_119417_existInstance));
	} else {
		_1a54141d7_checkFnInsCaller(_self_.get()._field_s, _118839_f, (*(_118855_et)));
	};
	return true;;
}



inline void _1a5474654_evalFnGenericFromIndexing(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a5466305_Data>* _121350_d, jule::Ptr<_1a486ce38_IndexingExpr>* _121365_i) {
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _121417_generics = jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1a5473a60_pushGenericsFromData(_self_, &(_121417_generics), &((*(_121365_i)).get()._field_Index))))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a53a717a_FnIns> _122017_f = _1a549580c_Fn((*(_121350_d)).get()._field_Kind.ptr());;
	jule::I64 _122117_genericsLen = 0LL;;
	if ((_122017_f.get()._field_Decl != nullptr)) {
		_122117_genericsLen=static_cast<jule::I64>(_122017_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1a53ee997_checkGenericQuantity(_self_.get()._field_s.ptr(), _122117_genericsLen, static_cast<jule::I64>(_121417_generics.len()), (*(_121365_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_121350_d))=nullptr;
		return;;
	};
	_122017_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a5490a5a_InsGeneric>>::alloc(0LL, _122017_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_121417_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a803ce51:;
		if (it != expr_end) {
			jule::Ptr<_1a48619a9_TypeDecl> _123221_g = *it;
			{
				jule::Ptr<_1a5466305_Data> _123321_k = _1a547a418_evalType(_self_.ptr(), _123221_g);;
				if ((_123321_k == nullptr)) {
					(*(_121350_d))=nullptr;
					return;;
				};
				_122017_f.get()._field_Generics = jule::alloc_for_append(_122017_f.get()._field_Generics,1);_122017_f.get()._field_Generics.__push(jule::new_ptr<_1a5490a5a_InsGeneric>(_1a5490a5a_InsGeneric{._field_Kind=_123321_k.get()._field_Kind, }));;
			}
			_iter_next_1a803ce51:;
			++it;
			goto _iter_begin_1a803ce51;
		}
		_iter_end_1a803ce51:;
	};
	if (_1a53a8511_IsBuiltin(_122017_f.ptr())) {
		return;;
	};
	if (_1a5474313_checkGenericFn(_self_, &(_122017_f), &((*(_121365_i)).get()._field_Expr.get()._field_Token), &((*(_121350_d)).get()._field_Model))) {
		(*(_121350_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1a5491d58_Kind>(_122017_f, 1);
	} else {
		(*(_121350_d))=nullptr;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5474973_evalIndexing(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486ce38_IndexingExpr> _125236_i) {
	jule::Ptr<_1a5492287_TypeKind> _125317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_125317_prefix;
	});;
	jule::Ptr<_1a5466305_Data> _125717_d = _1a5483179_evalExprKind(_self_, _125236_i.get()._field_Expr.get()._field_Kind);;
	if ((_125717_d == nullptr)) {
		return nullptr;;
	};
	if (_125717_d.get()._field_Decl) {
		_1a5473da1_evalIdentDeclFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	if ((_1a549580c_Fn(_125717_d.get()._field_Kind.ptr()) != nullptr)) {
		_1a5474654_evalFnGenericFromIndexing(_self_, &(_125717_d), &(_125236_i));
		return _125717_d;;
	};
	_1a5466305_Data _127317_old_d = (*(_125717_d));;
	jule::Ptr<_1a5466305_Data> _127517_index = _1a5483179_evalExprKind(_self_, _125236_i.get()._field_Index.get()._field_Kind);;
	if ((_127517_index == nullptr)) {
		return nullptr;;
	};
	_125717_d.get()._field_Decl=false;
	_1a5473224_toIndexing(_self_.ptr(), &(_125717_d), &(_127517_index), &(_125236_i));
	if (_1a5466bb8_IsConst(_125717_d.ptr())) {
		_125717_d.get()._field_Decl=false;
		_125717_d.get()._field_Model=jule::Any(_125717_d.get()._field_Constant, &__jule_any_type47);
	} else if (_125717_d.get()._field_Decl) {
		_125717_d.get()._field_Decl=false;
	} else {
		_125717_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5398952_IndexingExprModel>(_1a5398952_IndexingExprModel{._field_Token=_125236_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1a5466305_Data>(_127317_old_d), ._field_Index=_127517_index}), &__jule_any_type45);
	};
	return _125717_d;;
}



inline __jule_tuple_x_1a5466305_Data__jule_tuple_x_1a5466305_Data _1a5474c81_evalSlicingExprs(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486d543_SlicingExpr>* _130641_s) {
	__jule_tuple_x_1a5466305_Data__jule_tuple_x_1a5466305_Data __jule_func_result;
	jule::Ptr<_1a5492287_TypeKind> _130717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_130717_prefix;
	});;
	jule::Ptr<_1a5466305_Data> _131117_l = nullptr;;
	jule::Ptr<_1a5466305_Data> _131217_r = nullptr;;
	if (((*(_130641_s)).get()._field_Start != nullptr)) {
		_131117_l=_1a5483179_evalExprKind(_self_, (*(_130641_s)).get()._field_Start.get()._field_Kind);
		if ((_131117_l != nullptr)) {
			_1a5471970_checkIntegerIndexingByData(_self_.ptr(), &(_131117_l), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_131117_l=jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Constant=static__1a538a449_NewI64(0LL)});
		_131117_l.get()._field_Model=jule::Any(_131117_l.get()._field_Constant, &__jule_any_type47);
	};
	if (((*(_130641_s)).get()._field_To != nullptr)) {
		_131217_r=_1a5483179_evalExprKind(_self_, (*(_130641_s)).get()._field_To.get()._field_Kind);
		if ((_131217_r != nullptr)) {
			_1a5471970_checkIntegerIndexingByData(_self_.ptr(), &(_131217_r), (*(_130641_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _131117_l;
	__jule_func_result.__jule_result_arg1 = _131217_r;
	return __jule_func_result;;
}



inline void _1a5475006_slicingArr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _134130_d) {
	jule::Ptr<_1a5492287_TypeKind> _134217_elemType = _1a5495334_Arr((*(_134130_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_134130_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549b1c5_Slc>(_1a549b1c5_Slc{._field_Elem=_134217_elemType}), 8)});
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=((*(_134130_d)).get()._field_Mutable || (!(_1a5493909_Mutable(_134217_elemType.ptr()))));
}



inline void _1a54753be_slicingStr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _135630_d, jule::Ptr<_1a5466305_Data>* _135641_l, jule::Ptr<_1a5466305_Data>* _135652_r) {
	(*(_135630_d)).get()._field_Lvalue=false;
	(*(_135630_d)).get()._field_Mutable=true;
	if ((!(_1a5466bb8_IsConst((*(_135630_d)).ptr())))) {
		return;;
	};
	if ((((*(_135641_l)) == nullptr) || ((*(_135652_r)) == nullptr))) {
		(*(_135630_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1a5466bb8_IsConst((*(_135641_l)).ptr()) && _1a5466bb8_IsConst((*(_135652_r)).ptr()))) {
		jule::I64 _136917_left = _1a538c4d4_AsI64((*(_135641_l)).get()._field_Constant.ptr());;
		if ((_136917_left < 0LL)) {
			return;;
		};
		jule::Str _137417_s = _1a538c00b_ReadStr((*(_135630_d)).get()._field_Constant.ptr());;
		jule::I64 _137521_right = 0LL;;
		if (((*(_135652_r)) == nullptr)) {
			_137521_right=static_cast<jule::I64>(static_cast<jule::I64>(_137417_s.len()));
		} else {
			_137521_right=static_cast<jule::I64>(_1a538c4d4_AsI64((*(_135652_r)).get()._field_Constant.ptr()));
		};
		if ((_136917_left > _137521_right)) {
			return;;
		};
		_1a538d4a2_SetStr((*(_135630_d)).get()._field_Constant.ptr(), _137417_s.slice(_136917_left, _137521_right));
		(*(_135630_d)).get()._field_Decl=true;
	} else {
		(*(_135630_d)).get()._field_Constant=nullptr;
	};
}



inline void _1a5475831_checkSlicing(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data>* _139236_d, jule::Ptr<_1a5466305_Data>* _139247_l, jule::Ptr<_1a5466305_Data>* _139258_r, jule::Ptr<_1a486d543_SlicingExpr>* _139269_s) {
	{
		
		if ((_1a5495334_Arr((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a805464e:;
			{
				_1a5475006_slicingArr(_self_, _139236_d);
				return;;
			}
		}
		else if ((_1a5495598_Slc((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a80546c6:;
			{
				return;;
			}
		}
		else if ((_1a549461e_Prim((*(_139236_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a805474d:;
			{
				jule::Ptr<_1a5496ed4_Prim> _140017_prim = _1a549461e_Prim((*(_139236_d)).get()._field_Kind.ptr());;
				{
					
					if (_1a549a218_IsStr(_140017_prim.ptr())) {
						_case_begin_1a8056b3a:;
						{
							_1a54753be_slicingStr(_self_, _139236_d, _139247_l, _139258_r);
							return;;
						}
					}
					_match_end_1a8056a91:;
				};
			}
		}
		_match_end_1a805452d:;
	};
	_1a546837e_pushErr(_self_, (*(_139269_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_139236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1a5466305_Data> _1a5475b3e_evalSlicing(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486d543_SlicingExpr> _141135_s) {
	jule::Ptr<_1a5466305_Data> _141217_d = _1a5483179_evalExprKind(_self_, _141135_s.get()._field_Expr.get()._field_Kind);;
	if ((_141217_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _141718_l;;
	jule::Ptr<_1a5466305_Data> _141725_r;;
	({
		__jule_tuple_x_1a5466305_Data__jule_tuple_x_1a5466305_Data __jule_assign_result = _1a5474c81_evalSlicingExprs(_self_, &(_141135_s));
		_141718_l = __jule_assign_result.__jule_result_arg0;
		_141725_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141718_l == nullptr)) {
		return _141217_d;;
	};
	_141217_d.get()._field_Decl=false;
	_1a5475831_checkSlicing(_self_.ptr(), &(_141217_d), &(_141718_l), &(_141725_r), &(_141135_s));
	if (_1a5466bb8_IsConst(_141217_d.ptr())) {
		_141217_d.get()._field_Decl=false;
		_141217_d.get()._field_Model=jule::Any(_141217_d.get()._field_Constant, &__jule_any_type47);
	} else if (_141217_d.get()._field_Decl) {
		_141217_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1a5399b73_SlicingExprModel> _143521_model = jule::new_ptr<_1a5399b73_SlicingExprModel>(_1a5399b73_SlicingExprModel{._field_Token=_141135_s.get()._field_Token, ._field_Expr=_141217_d.get()._field_Model, ._field_Left=_141718_l.get()._field_Model, });;
		if ((_141725_r != nullptr)) {
			_143521_model.get()._field_Right=_141725_r.get()._field_Model;
		};
		_141217_d.get()._field_Model=jule::Any(_143521_model, &__jule_any_type98);
	};
	return _141217_d;;
}



inline void _1a5476007_castPtr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _144830_t, jule::Ptr<_1a5466305_Data> _144848_d, jule::Ptr<_1ceee8973_Token> _144858_errorToken) {
	_144848_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a549a768_Sptr> _145013_sptr = _1a5494883_Sptr(_144848_d.get()._field_Kind.ptr());;
	if ((_145013_sptr != nullptr)) {
		if ((!(_1a5492991_Equal(_1a5494ae7_Ptr(_144830_t.ptr()).get()._field_Elem, _145013_sptr.get()._field_Elem)))) {
			_1a546837e_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_144830_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1a5468cb9_isUnsafe(_self_)))) {
		_1a546837e_pushErr(_self_, _144858_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a5496ed4_Prim> _146313_prim = _1a549461e_Prim(_144848_d.get()._field_Kind.ptr());;
	if (((_1a5494ae7_Ptr(_144848_d.get()._field_Kind.ptr()) == nullptr) && ((_146313_prim == nullptr) || (!(_1a5389404_IsInt(_1a5497347_Str(_146313_prim.ptr()))))))) {
		_1a546837e_pushErr(_self_, _144858_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_144848_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_144830_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1a54763c0_castStruct(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _146933_t, jule::Ptr<_1a5466305_Data> _146951_d, jule::Ptr<_1ceee8973_Token> _146961_errorToken) {
	_146951_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a53b63cb_Trait> _147117_tr = _1a5495cd5_Trait(_146951_d.get()._field_Kind.ptr());;
	if ((_147117_tr == nullptr)) {
		_1a546837e_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_146933_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1a487d575_StructIns> _147717_s = _1a5495a71_Struct(_146933_t.ptr());;
	_1a80642c9_pushReference(_self_, &(_147717_s));
	if ((!(_1a4843e0e_IsImplements(_147717_s.get()._field_Decl.ptr(), _147117_tr)))) {
		_1a546837e_pushErr(_self_, _146961_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_146951_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_146933_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1a5476788_castRef(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _148530_t, jule::Ptr<_1a5466305_Data> _148548_d, jule::Ptr<_1ceee8973_Token> _148558_errorToken) {
	_148548_d.get()._field_Constant=nullptr;
	jule::Ptr<_1a549a768_Sptr> _148717_sptr = _1a5494883_Sptr(_148530_t.ptr());;
	jule::Ptr<_1a549dccc_Ptr> _148917_ptr = _1a5494ae7_Ptr(_148548_d.get()._field_Kind.ptr());;
	if (((_148917_ptr != nullptr) && _1a5492991_Equal(_148717_sptr.get()._field_Elem, _148917_ptr.get()._field_Elem))) {
		if ((!(_1a5468cb9_isUnsafe(_self_)))) {
			_1a546837e_pushErr(_self_, _148558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1a5495a71_Struct(_148717_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1a54763c0_castStruct(_self_, _148717_sptr.get()._field_Elem, _148548_d, _148558_errorToken);
		return;;
	};
	_1a546837e_pushErr(_self_, _148558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_148548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_148530_t.ptr()), &__jule_any_type5)}));
}



inline void _1a5476b51_castSlc(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _150730_t, jule::Ptr<_1a5466305_Data> _150748_d, jule::Ptr<_1ceee8973_Token> _150758_errorToken) {
	_150748_d.get()._field_Constant=nullptr;
	if ((_1a5494d5b_Enum(_150748_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1a549461e_Prim(_1a5494d5b_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a549a218_IsStr(_1a549461e_Prim(_1a5494d5b_Enum(_150748_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1a546837e_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_150730_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1a549461e_Prim(_150748_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a549a218_IsStr(_1a549461e_Prim(_150748_d.get()._field_Kind.ptr()).ptr()))))) {
		_1a546837e_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_150730_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_150730_t=_1a5495598_Slc(_150730_t.ptr()).get()._field_Elem;
	jule::Ptr<_1a5496ed4_Prim> _152013_prim = _1a549461e_Prim(_150730_t.ptr());;
	if (((_152013_prim == nullptr) || ((!(_1a54987dd_IsU8(_152013_prim.ptr()))) && (!(_1a5498315_IsI32(_152013_prim.ptr())))))) {
		_1a546837e_pushErr(_self_, _150758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_150748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_150730_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1a5476e70_castStr(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _152630_d, jule::Ptr<_1ceee8973_Token> _152640_errorToken) {
	_152630_d.get()._field_Constant=nullptr;
	if ((_1a5494d5b_Enum(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a53b8521_Enum> _152921_e = _1a5494d5b_Enum(_152630_d.get()._field_Kind.ptr());;
		if (((_1a549461e_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1a549a218_IsStr(_1a549461e_Prim(_152921_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1a549461e_Prim(_152630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5496ed4_Prim> _153617_prim = _1a549461e_Prim(_152630_d.get()._field_Kind.ptr());;
		if (((!(_1a54987dd_IsU8(_153617_prim.ptr()))) && (!(_1a5498315_IsI32(_153617_prim.ptr()))))) {
			_1a546837e_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1a5492683_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1a5495598_Slc(_152630_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a546837e_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1a5492683_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1a5492287_TypeKind> _154817_t = _1a5495598_Slc(_152630_d.get()._field_Kind.ptr()).get()._field_Elem;;
	jule::Ptr<_1a5496ed4_Prim> _154913_prim = _1a549461e_Prim(_154817_t.ptr());;
	if (((_154913_prim == nullptr) || ((!(_1a54987dd_IsU8(_154913_prim.ptr()))) && (!(_1a5498315_IsI32(_154913_prim.ptr())))))) {
		_1a546837e_pushErr(_self_, _152640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1a5492683_Str(_152630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline void _1a5477338_castInt(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _155530_t, jule::Ptr<_1a5466305_Data> _155548_d, jule::Ptr<_1ceee8973_Token> _155558_errorToken) {
	if (_1a5466bb8_IsConst(_155548_d.ptr())) {
		jule::Ptr<_1a5496ed4_Prim> _155717_prim = _1a549461e_Prim(_155530_t.ptr());;
		{
			
			if (_1a5388d71_IsSigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1a807d821:;
				{
					_1a538cc32_SetI64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a538915c_IsUnsigInt(_155717_prim.get()._field_Kind)) {
				_case_begin_1a807d898:;
				{
					_1a538cea7_SetU64(_155548_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64(_155548_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a807d766:;
		};
	} else {
		_155548_d.get()._field_Constant=nullptr;
	};
	if ((_1a5494d5b_Enum(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a53b8521_Enum> _156917_e = _1a5494d5b_Enum(_155548_d.get()._field_Kind.ptr());;
		if (_1a53899ba_IsNum(_1a5492683_Str(_156917_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1a5494883_Sptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5496ed4_Prim> _157617_prim = _1a549461e_Prim(_155530_t.ptr());;
		if ((!(_1a5499c40_IsUintptr(_157617_prim.ptr())))) {
			_1a546837e_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_155530_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1a5494ae7_Ptr(_155548_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5496ed4_Prim> _158317_prim = _1a549461e_Prim(_155530_t.ptr());;
		if (_1a5499c40_IsUintptr(_158317_prim.ptr())) {
		} else if ((!(_1a5468cb9_isUnsafe(_self_)))) {
			_1a546837e_pushErr(_self_, _155558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1a5496ed4_Prim> _159213_prim = _1a549461e_Prim(_155548_d.get()._field_Kind.ptr());;
	if (((_159213_prim != nullptr) && _1a53899ba_IsNum(_1a5497347_Str(_159213_prim.ptr())))) {
		return;;
	};
	_1a546837e_pushErr(_self_, _155558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_155548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_155530_t.ptr()), &__jule_any_type5)}));
}



inline void _1a5477701_castNum(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _160030_t, jule::Ptr<_1a5466305_Data> _160048_d, jule::Ptr<_1ceee8973_Token> _160058_errorToken) {
	if (_1a5466bb8_IsConst(_160048_d.ptr())) {
		jule::Ptr<_1a5496ed4_Prim> _160217_prim = _1a549461e_Prim(_160030_t.ptr());;
		{
			
			if (_1a5389723_IsFloat(_160217_prim.get()._field_Kind)) {
				_case_begin_1a8087264:;
				{
					_1a538d727_SetF64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1a538c9ac_AsF64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a5388d71_IsSigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1a80872db:;
				{
					_1a538cc32_SetI64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1a538915c_IsUnsigInt(_160217_prim.get()._field_Kind)) {
				_case_begin_1a8087363:;
				{
					_1a538cea7_SetU64(_160048_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64(_160048_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a8087198:;
		};
	} else {
		_160048_d.get()._field_Constant=nullptr;
	};
	if ((_1a5494d5b_Enum(_160048_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a53b8521_Enum> _161617_e = _1a5494d5b_Enum(_160048_d.get()._field_Kind.ptr());;
		if (_1a53899ba_IsNum(_1a5492683_Str(_161617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a5496ed4_Prim> _162213_prim = _1a549461e_Prim(_160048_d.get()._field_Kind.ptr());;
	if (((_162213_prim != nullptr) && _1a53899ba_IsNum(_1a5497347_Str(_162213_prim.ptr())))) {
		return;;
	};
	_1a546837e_pushErr(_self_, _160058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_160048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_160030_t.ptr()), &__jule_any_type5)}));
}



inline void _1a5477ab9_castPrim(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _163031_t, jule::Ptr<_1a5466305_Data> _163049_d, jule::Ptr<_1ceee8973_Token> _163059_errorToken) {
	jule::Ptr<_1a5496ed4_Prim> _163113_prim = _1a549461e_Prim(_163031_t.ptr());;
	{
		
		if (_1a549a47c_IsAny(_163113_prim.ptr())) {
			_case_begin_1a808cb82:;
			{
				_163049_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1a549a218_IsStr(_163113_prim.ptr())) {
			_case_begin_1a808d1e3:;
			{
				_1a5476e70_castStr(_self_, _163049_d, _163059_errorToken);
			}
		}
		else if (_1a5389404_IsInt(_1a5497347_Str(_163113_prim.ptr()))) {
			_case_begin_1a808d259:;
			{
				_1a5477338_castInt(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else if (_1a53899ba_IsNum(_1a5497347_Str(_163113_prim.ptr()))) {
			_case_begin_1a808d2d1:;
			{
				_1a5477701_castNum(_self_, _163031_t, _163049_d, _163059_errorToken);
			}
		}
		else {
			_case_begin_1a808d17c:;
			{
				_1a546837e_pushErr(_self_, _163059_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_163031_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1a808d116:;
	};
}



inline void _1a5477dd8_castConstant(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind>* _164736_t, jule::Ptr<_1a5466305_Data>* _164755_d) {
	if ((((*(_164755_d)) == nullptr) || (!(_1a5466bb8_IsConst((*(_164755_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1a5496ed4_Prim> _165113_prim = _1a549461e_Prim((*(_164736_t)).ptr());;
	_1a548e44e_castConstByType(&(_165113_prim.get()._field_Kind), _164755_d);
	(*(_164755_d)).get()._field_Model=jule::Any((*(_164755_d)).get()._field_Constant, &__jule_any_type47);
}



inline void _1a54782a1_castTypeEnum(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind>* _165636_t, jule::Ptr<_1a5466305_Data>* _165655_d, jule::Ptr<_1ceee8973_Token>* _165670_errorToken) {
	jule::I64 _165713_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1a5405937_checkTypeCompatibility((*(_self_))._field_s, &((*(_165655_d)).get()._field_Kind), _165636_t, _165670_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _165713_n);
		_1a546837e_pushErr(_self_, (*(_165670_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_165655_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_165636_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_165655_d)).get()._field_Constant=nullptr;
}



inline void _1a5478669_castTypeEnumT(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind>* _166537_t, jule::Ptr<_1a5466305_Data>* _166556_d, jule::Ptr<_1ceee8973_Token>* _166571_errorToken) {
	jule::I64 _166613_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1a5405937_checkTypeCompatibility((*(_self_))._field_s, _166537_t, &((*(_166556_d)).get()._field_Kind), _166571_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _166613_n);
		_1a546837e_pushErr(_self_, (*(_166571_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_166556_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_166537_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_166556_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1a5466305_Data> _1a5478aba_evalCastByTypeNData(_1a5467d73_Eval* _self_, jule::Ptr<_1a5492287_TypeKind> _167442_t, jule::Ptr<_1a5466305_Data> _167460_d, jule::Ptr<_1ceee8973_Token> _167474_errorToken) {
	if (((_167460_d != nullptr) && _167460_d.get()._field_Decl)) {
		_1a546837e_pushErr(_self_, _167474_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1a54666e0_IsNil(_167460_d.ptr())) {
			_case_begin_1a8099375:;
			{
				if ((!(_1a5493b6d_NilCompatible(_167442_t.ptr())))) {
					_1a546837e_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1a5492683_Str(_167442_t.ptr()), &__jule_any_type5)}));
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1a549461e_Prim(_167460_d.get()._field_Kind.ptr()) != nullptr) && _1a549a47c_IsAny(_1a549461e_Prim(_167460_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a8098a17:;
			{
				if ((_1a5494d5b_Enum(_167442_t.ptr()) != nullptr)) {
					_1a546837e_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1a546869d_pushSugggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1a54950c0_TypeEnum(_167442_t.ptr()) != nullptr)) {
					_1a546837e_pushErr(_self_, _167474_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_167460_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1a54950c0_TypeEnum(_167460_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8098792:;
			{
				_1a54782a1_castTypeEnum(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1a54950c0_TypeEnum(_167442_t.ptr()) != nullptr)) {
			_case_begin_1a8098808:;
			{
				_1a5478669_castTypeEnumT(_self_, &(_167442_t), &(_167460_d), &(_167474_errorToken));
			}
		}
		else if ((_1a5494ae7_Ptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1a809886e:;
			{
				_1a5476007_castPtr(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1a5494883_Sptr(_167442_t.ptr()) != nullptr)) {
			_case_begin_1a80994b8:;
			{
				_1a5476788_castRef(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1a5495598_Slc(_167442_t.ptr()) != nullptr)) {
			_case_begin_1a809952e:;
			{
				_1a5476b51_castSlc(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1a5495a71_Struct(_167442_t.ptr()) != nullptr)) {
			_case_begin_1a8099595:;
			{
				_1a54763c0_castStruct(_self_, _167442_t, _167460_d, _167474_errorToken);
			}
		}
		else if ((_1a549461e_Prim(_167442_t.ptr()) != nullptr)) {
			_case_begin_1a809961c:;
			{
				_1a5477ab9_castPrim(_self_, _167442_t, _167460_d, _167474_errorToken);
				_1a5477dd8_castConstant(_self_, &(_167442_t), &(_167460_d));
			}
		}
		else {
			_case_begin_1a8098671:;
			{
				_1a546837e_pushErr(_self_, _167474_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_167442_t.ptr()), &__jule_any_type5)}));
				_167460_d=nullptr;
			}
		}
		_match_end_1a809861b:;
	};
	if ((_167460_d == nullptr)) {
		return nullptr;;
	};
	_167460_d.get()._field_Mutable=(_167460_d.get()._field_Mutable || ((!(_1a5493909_Mutable(_167460_d.get()._field_Kind.ptr()))) && _1a5493909_Mutable(_167442_t.ptr())));
	_167460_d.get()._field_Lvalue=false;
	_167460_d.get()._field_Decl=false;
	if (((_1a5494d5b_Enum(_167460_d.get()._field_Kind.ptr()) == nullptr) || (!(_1a5492991_Equal(_1a5494d5b_Enum(_167460_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _167442_t))))) {
		_1a548d915_applyCastKind(&(_167460_d), &(_167442_t));
		_167460_d.get()._field_Model.cast_ptr<_1a5397775_CastingExprModel>(&__jule_any_type100).get()._field_Token=_167474_errorToken;
	} else {
		_167460_d.get()._field_Kind=_167442_t;
	};
	_167460_d.get()._field_untyped=false;
	if (_1a5466bb8_IsConst(_167460_d.ptr())) {
		_167460_d.get()._field_Constant.get()._field_Kind=_1a549461e_Prim(_167442_t.ptr()).get()._field_Kind;
	};
	return _167460_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a547901b_evalCastT(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a5492287_TypeKind>* _173934_t, jule::Ptr<_1a4865eca_Expr>* _173953_e, jule::Ptr<_1ceee8973_Token>* _173968_et) {
	jule::Ptr<_1a5492287_TypeKind> _174017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_174017_prefix;
	});;
	if ((_1a5495598_Slc((*(_173934_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_173953_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1a80abd38:;
				{
					_self_.get()._field_prefix=(*(_173934_t));
				}
			}
			_match_end_1a80abc8e:;
		};
	};
	jule::Ptr<_1a5466305_Data> _174917_d = _1a5483179_evalExprKind(_self_, (*(_173953_e)).get()._field_Kind);;
	if (((_174917_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _174917_d;;
	};
	return _1a5478aba_evalCastByTypeNData(_self_.ptr(), (*(_173934_t)), _174917_d, (*(_173968_et)));;
}



inline jule::Ptr<_1a5466305_Data> _1a5479329_evalCast(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4868b04_CastExpr> _175632_c) {
	jule::Ptr<_1a5496665_TypeSymbol> _175717_t = _1a53ab7ab_buildType(_175632_c.get()._field_Kind);;
	jule::Bool _175813_ok = _1a5403858_checkType(_self_.get()._field_s, &(_175717_t), _self_.get()._field_lookup);;
	if ((!(_175813_ok))) {
		return nullptr;;
	};
	return _1a547901b_evalCastT(_self_, &(_175717_t.get()._field_Kind), &(_175632_c.get()._field_Expr), &(_175632_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1a5466305_Data> _1a5479637_evalNsSelection(_1a5467d73_Eval* _self_, jule::Ptr<_1a4868eab_NsSelectionExpr> _176534_s) {
	jule::Str _176613_path = _1a54aa1c3_buildLinkPathByTokens(&(_176534_s.get()._field_Ns));;
	jule::Ptr<_1a53e27e2_ImportInfo> _176717_imp = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ab6be_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>([=](jule::Ptr<_1a53e27e2_ImportInfo> _176752_imp) mutable -> jule::Bool {
		if (((_176534_s.get()._field_Ns.len() == 1LL) && (_176752_imp.get()._field_Alias == _176613_path))) {
			return true;;
		};
		return ((_176752_imp.get()._field_LinkPath == _176613_path) && _1a53e544e_isAccessibleViaSelection(_176752_imp.ptr()));;
	}));;
	if ((_176717_imp == nullptr)) {
		_1a546837e_pushErr(_self_, _176534_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_176613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1a54ad209_Lookup> _177917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1a54ad209_Lookup>(_176717_imp, 1);
	;
	_1a5468a55_disallowBuiltin(_self_);
	jule::Any _178417_def = _1a546b393_getDef(_self_, _176534_s.get()._field_Ident.get()._field_Kind, false);;
	_1a5468879_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_177917_lookup;
	jule::Ptr<_1a5466305_Data> _178717_d = _1a546ed7a_evalDef(_self_, _178417_def, _176534_s.get()._field_Ident);;
	return _178717_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a5479a88_evalStructLitExplicit(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a487d575_StructIns> _179145_s, jule::Slice<jule::Ptr<_1a4865eca_Expr>> _179213_exprs, jule::Ptr<_1ceee8973_Token> _179233_errorToken) {
	jule::Bool _179313_ok = _1a53ee997_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_179145_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_179145_s.get()._field_Generics.len()), _179233_errorToken);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _179145_s.get()._field_Decl))) {
		_1a546837e_pushErr(_self_.ptr(), _179233_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_179145_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1a80642c9_pushReference(_self_.ptr(), &(_179145_s));
	_1a546d285_checkDeprecated(_self_.ptr(), &(_179145_s.get()._field_Decl.get()._field_Directives), _179233_errorToken);
	_1a545a99d_structLitChecker _180617_slc = _1a545a99d_structLitChecker{._field_e=_self_, ._field_errorToken=_179233_errorToken, ._field_s=_179145_s, };;
	_1a545c043_check(&_180617_slc, &(_179213_exprs));
	jule::Ptr<_1a5466305_Data> _181317_d = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_179145_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1a5396e17_StructLitExprModel>(_1a5396e17_StructLitExprModel{._field_Strct=_179145_s, ._field_Args=_180617_slc._field_args}), &__jule_any_type102), });;
	if (_179145_s.get()._field_Decl.get()._field_CppLinked) {
		_181317_d.get()._field_Kind.get()._field_CppIdent=_179145_s.get()._field_Decl.get()._field_Ident;
	};
	return _181317_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a5479d96_evalStructLit(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486b189_StructLit> _182937_lit) {
	jule::Ptr<_1a5496665_TypeSymbol> _183017_t = _1a53ab7ab_buildType(_182937_lit.get()._field_Kind);;
	jule::Bool _183113_ok = _1a5403858_checkType(_self_.get()._field_s, &(_183017_t), _self_.get()._field_lookup);;
	if ((!(_183113_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a487d575_StructIns> _183617_s = _1a5495a71_Struct(_183017_t.get()._field_Kind.ptr());;
	if ((_183617_s == nullptr)) {
		if ((_1a5494883_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
			_183617_s=_1a5495a71_Struct(_1a5494883_Sptr(_183017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_183617_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1a546837e_pushErr(_self_.ptr(), _182937_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1a5466305_Data> _184917_d = _1a5479a88_evalStructLitExplicit(_self_, _183617_s, _182937_lit.get()._field_Exprs, _182937_lit.get()._field_Kind.get()._field_Token);;
	if ((_1a5494883_Sptr(_183017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1a5396e17_StructLitExprModel> _185121_model = _184917_d.get()._field_Model.cast_ptr<_1a5396e17_StructLitExprModel>(&__jule_any_type102);;
		_1a548c2c6_makeStructLitAlloc(&(_184917_d), &(_185121_model));
	};
	return _184917_d;;
}



inline _1a54a0b03_typeChecker _1a547a10a_typeChecker(_1a5467d73_Eval* _self_) {
	return _1a5402747_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1a5466305_Data> _1a547a418_evalType(_1a5467d73_Eval* _self_, jule::Ptr<_1a48619a9_TypeDecl> _186131_t) {
	jule::Ptr<_1a5496665_TypeSymbol> _186217_tk = _1a53ab7ab_buildType(_186131_t);;
	jule::Bool _186313_ok = _1a5403858_checkType((*(_self_))._field_s, &(_186217_tk), (*(_self_))._field_lookup);;
	if ((!(_186313_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_186217_tk.get()._field_Kind, ._field_Model=jule::Any(_186217_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _1a547a737_callTypeFn(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4869eac_FnCallExpr>* _187435_fc, jule::Ptr<_1a5466305_Data>* _187457_d) {
	if (((*(_187435_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_187435_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	} else if ((*(_187435_fc)).get()._field_IsCo) {
		_1a546837e_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	} else if (((*(_187435_fc)).get()._field_Exception != nullptr)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_187435_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_187457_d))=nullptr;
		return;;
	};
	if (((*(_187435_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1a4865eca_Expr> _189021_arg = (*(_187435_fc)).get()._field_Args[0LL];;
		(*(_187457_d))=_1a547901b_evalCastT(_self_, &((*(_187457_d)).get()._field_Kind), &(_189021_arg), &(_189021_arg.get()._field_Token));
		return;;
	};
	if (((*(_187457_d)) != nullptr)) {
		(*(_187457_d)).get()._field_Decl=false;
	};
}



inline void _1a547aa56_callBuiltinFn(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4869eac_FnCallExpr>* _190038_fc, jule::Ptr<_1a5466305_Data>* _190060_d) {
	(*(_190060_d))=_1a549580c_Fn((*(_190060_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _190038_fc, _190060_d);
	if (((*(_190060_d)) == nullptr)) {
		return;;
	};
	(*(_190060_d)).get()._field_Mutable=true;
}



inline void _1a547ad97_checkFnOfConcurrentCall(_1a5467d73_Eval* _self_, jule::Ptr<_1a53a717a_FnIns>* _190843_f, jule::Ptr<_1ceee8973_Token> _190854_errorToken) {
	if (_1a5468cb9_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_190843_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a80cb396:;
		if (it != expr_end) {
			jule::Ptr<_1a53a62ab_ParamIns> *_191216_p = it;
			{
				if (_1a53a32b9_IsSelf((*(_191216_p)).get()._field_Decl.ptr())) {
					if ((!(_1a53a352d_IsRef((*(_191216_p)).get()._field_Decl.ptr())))) {
						_1a546837e_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1a546869d_pushSugggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_191216_p)).get()._field_Decl.get()._field_Reference) {
					_1a546837e_pushErr(_self_, _190854_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1a546869d_pushSugggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a80cb396:;
			++it;
			goto _iter_begin_1a80cb396;
		}
		_iter_end_1a80cb396:;
	};
}



inline void _1a547b293_processExceptionalHandler(_1a5467d73_Eval* _self_, jule::Ptr<_1a53a717a_FnIns>* _192749_f, jule::Ptr<_1a4869eac_FnCallExpr>* _192765_fc, jule::Ptr<_1a5466305_Data>* _192787_d) {
	jule::Bool _192813_resultNeeded = ((!(_1a53a493b_IsVoid((*(_192749_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1a53cab4e_scopeChecker> _192917_csc = nullptr;;
	jule::Ptr<_1a53c40dc_Scope> _193017_ch = nullptr;;
	jule::Ptr<_1a5398127_FnCallExprModel> _193217_model = (*(_192787_d)).get()._field_Model.cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34);;
	jule::Ptr<_1a53cab4e_scopeChecker> _193617_sc = (*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0);;
	_192917_csc=_1a53dabb4_newChildChecker(_193617_sc);
	if (_192813_resultNeeded) {
		_192917_csc.get()._field_result=(*(_192749_f));
	};
	_193017_ch=_1a53d0549_getChild(_193617_sc.ptr());
	(*(_192765_fc)).get()._field_Exception.get()._field_Parent=_193617_sc.get()._field_tree;
	_192917_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_192917_csc.get()._field_table.get()._field_Vars,1);_192917_csc.get()._field_table.get()._field_Vars.__push(_1a548c617_buildErrorVar(&(_193017_ch), _192765_fc));;
	_1a53d0912_checkChildSsc(_193617_sc, &((*(_192765_fc)).get()._field_Exception), &(_193017_ch), &(_192917_csc));
	_193217_model.get()._field_Assigned=_192813_resultNeeded;
	_193217_model.get()._field_Except=_193017_ch;
	if ((_192813_resultNeeded && (_192917_csc.get()._field_result != nullptr))) {
		_1a546837e_pushErr(_self_, (*(_192765_fc)).get()._field_Token, jule::Str("assignments requires expression", 31), jule::Slice<jule::Any>());
	};
}



inline void _1a547b5c3_callFn(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4869eac_FnCallExpr>* _195431_fc, jule::Ptr<_1a5466305_Data>* _195453_d) {
	jule::Ptr<_1a53a717a_FnIns> _195517_f = _1a549580c_Fn((*(_195453_d)).get()._field_Kind.ptr());;
	if (_1a53a8511_IsBuiltin(_195517_f.ptr())) {
		_1a547aa56_callBuiltinFn(_self_, _195431_fc, _195453_d);
		return;;
	};
	if ((_1a546902d_isGlobal(_self_.ptr()) && _195517_f.get()._field_Decl.get()._field_Exceptional)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1a546869d_pushSugggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((!(_1a53a4ba0_IsMethod(_195517_f.get()._field_Decl.ptr()))) && _1a54a9326_hasDirective(&(_195517_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1a546837e_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_195453_d))=nullptr;
		return;;
	};
	if (((((!((*(_195453_d)).get()._field_Mutable)) && _1a53a4ba0_IsMethod(_195517_f.get()._field_Decl.ptr())) && (!(_195517_f.get()._field_Decl.get()._field_Statically))) && _195517_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1a5468cb9_isUnsafe(_self_.ptr()))) && _195517_f.get()._field_Decl.get()._field_Unsafety)) {
		_1a546837e_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _197917_dynamicAnnotation = (((_195517_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_195517_f.get()._field_Generics.len() == 0LL)) && (_195517_f.get()._field_Params.len() > 0LL));;
	if (_197917_dynamicAnnotation) {
		_195517_f.get()._field_Generics=jule::Slice<jule::Ptr<_1a5490a5a_InsGeneric>>::alloc(_195517_f.get()._field_Decl.get()._field_Generics.len(), _195517_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_195517_f.get()._field_Generics.len() != _195517_f.get()._field_Decl.get()._field_Generics.len())) {
		_1a53ee997_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_195517_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_195517_f.get()._field_Generics.len()), (*(_195431_fc)).get()._field_Token);
		(*(_195453_d))=nullptr;
		return;;
	};
	jule::Ptr<_1a53ea93d_Sema> _198817_old = _self_.get()._field_s;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_195517_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_198817_old != _self_.get()._field_s)) {
			_198817_old.get()._field_errors=jule::append(_198817_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_198817_old;
	});;
	_1a5458094_fnCallArgChecker _200117_fcac = _1a5458094_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_195431_fc)).get()._field_Args, ._field_errorToken=(*(_195431_fc)).get()._field_Token, ._field_dynamicAnnotation=_197917_dynamicAnnotation, };;
	if ((!(_197917_dynamicAnnotation))) {
		if ((!(_195517_f.get()._field_reloaded))) {
			jule::Bool _201021_ok = _1a54078a1_reloadFnInsTypes(_self_.get()._field_s, _195517_f);;
			_195517_f.get()._field_reloaded=true;
			if ((!(_201021_ok))) {
				(*(_195453_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1a53a717a_FnIns> _201721_existInstance = _1a53a5e04_appendInstance(_195517_f.get()._field_Decl.ptr(), &(_195517_f));;
		if ((_201721_existInstance != nullptr)) {
			_195517_f=_201721_existInstance;
		};
	} else if ((!(_1a5406295_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_195517_f), &(_200117_fcac._field_ignored))))) {
		(*(_195453_d))=nullptr;
		return;;
	};
	_200117_fcac._field_f=_195517_f;
	jule::Bool _202817_ok = false;;
	if ((_195517_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1a53ea93d_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1a53ea93d_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_202817_ok=_1a545a45e_check(&_200117_fcac);
		({
			jule::Ptr<_1a53ea93d_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1a53ea93d_Sema> _1___jule_assign_arg = _198817_old;
			_198817_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_202817_ok=_1a545a45e_check(&_200117_fcac);
	};
	if (_197917_dynamicAnnotation) {
		if ((!(_202817_ok))) {
			(*(_195453_d))=nullptr;
			return;;
		};
		if ((!(_1a5474313_checkGenericFn(_self_, &(_195517_f), &((*(_195431_fc)).get()._field_Token), &((*(_195453_d)).get()._field_Model))))) {
			(*(_195453_d))=nullptr;
			return;;
		};
	};
	jule::Any _204817_callModel = (*(_195453_d)).get()._field_Model;;
	if (_1a53a493b_IsVoid(_195517_f.get()._field_Decl.ptr())) {
		(*(_195453_d))=_1a548db13_buildVoidData();
	} else {
		(*(_195453_d)).get()._field_Kind=_195517_f.get()._field_Result;
		(*(_195453_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1a5398127_FnCallExprModel> _205717_model = jule::new_ptr<_1a5398127_FnCallExprModel>(_1a5398127_FnCallExprModel{._field_Token=(*(_195431_fc)).get()._field_Token, ._field_Func=_195517_f, ._field_IsCo=(*(_195431_fc)).get()._field_IsCo, ._field_Expr=_204817_callModel, ._field_Args=_200117_fcac._field_argModels, });;
	(*(_195453_d)).get()._field_Model=jule::Any(_205717_model, &__jule_any_type34);
	(*(_195453_d)).get()._field_Mutable=true;
	if (_195517_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_195431_fc)).get()._field_IsCo) {
			_1a53ed600_pushErr(_self_.get()._field_s.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1a53ed91e_pushSugggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1a486a320_Unhandled((*(_195431_fc)).ptr())) {
				_case_begin_1a80e8a89:;
				{
					_1a546837e_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1a546869d_pushSugggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1a486a584_Ignored((*(_195431_fc)).ptr())) {
				_case_begin_1a80e8627:;
				{
					goto _match_end_1a80e7703;
				}
			}
			else {
				_case_begin_1a80e7769:;
				{
					_1a547b293_processExceptionalHandler(_self_.ptr(), &(_195517_f), _195431_fc, _195453_d);
				}
			}
			_match_end_1a80e7703:;
		};
	} else if ((!(_1a486a320_Unhandled((*(_195431_fc)).ptr())))) {
		_1a546837e_pushErr(_self_.ptr(), (*(_195431_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_195431_fc)).get()._field_IsCo) {
		_1a547ad97_checkFnOfConcurrentCall(_self_.ptr(), &(_205717_model.get()._field_Func), (*(_195431_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547b8d1_evalFnCall(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4869eac_FnCallExpr> _209234_fc) {
	jule::Ptr<_1a5492287_TypeKind> _209317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_209317_prefix;
	});;
	{
		auto &_match_expr{ _209234_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a80eb5c5:;
			{
				if ((_209234_fc.get()._field_Expr.get()._field_Token.get()._field_Kind == jule::Str("error", 5))) {
					return _1a4c1d22d_builtinCallerError(&(_self_), &(_209234_fc));;
				};
			}
		}
		_match_end_1a80eb570:;
	};
	jule::Ptr<_1a5466305_Data> _210617_d = _1a5483179_evalExprKind(_self_, _209234_fc.get()._field_Expr.get()._field_Kind);;
	if ((_210617_d == nullptr)) {
		return nullptr;;
	};
	if (_210617_d.get()._field_Decl) {
		_1a547a737_callTypeFn(_self_, &(_209234_fc), &(_210617_d));
		return _210617_d;;
	};
	if ((_1a549580c_Fn(_210617_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a546837e_pushErr(_self_.ptr(), _209234_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1a547b5c3_callFn(_self_, &(_209234_fc), &(_210617_d));
	return _210617_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a547bc88_evalEnumStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1a53b8521_Enum> _212537_enm, jule::Ptr<_1ceee8973_Token> _212549_ident) {
	jule::Ptr<_1a5466305_Data> _212617_d = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_212537_enm, 3)}), });;
	jule::Ptr<_1a53b7a2b_EnumItem> _213217_item = _1a53b90d2_FindItem(_212537_enm.ptr(), _212549_ident.get()._field_Kind);;
	if ((_213217_item == nullptr)) {
		_1a546837e_pushErr(_self_, _212549_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_212537_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_212549_ident.get()._field_Kind, &__jule_any_type5)}));
	} else {
		_212617_d.get()._field_Constant=jule::new_ptr<_1a5389ec6_Const>((*(_213217_item.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_212617_d.get()._field_Model=jule::Any(_212617_d.get()._field_Constant, &__jule_any_type47);
		_1a548e196_applyCastModelByEnum(&(_212617_d), _212537_enm);
	};
	return _212617_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a547c140_evalTypeEnumStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1a53b9b1b_TypeEnum> _214441_enm, jule::Ptr<_1ceee8973_Token> _214457_ident) {
	jule::Ptr<_1a53b9555_TypeEnumItem> _214517_item = _1a53ba655_FindItem(_214441_enm.ptr(), _214457_ident.get()._field_Kind);;
	if ((_214517_item == nullptr)) {
		_1a546837e_pushErr(_self_, _214457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_214441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_214457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1a5494d5b_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8104424:;
			{
				return _1a546b926__evalEnum(_self_, _1a5494d5b_Enum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1a54950c0_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8104ab7:;
			{
				return _1a546c0db__evalTypeEnum(_self_, _1a54950c0_TypeEnum(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1a5495a71_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8103e4b:;
			{
				return _1a546c7a1__evalStruct(_self_, _1a5495a71_Struct(_214517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1a8103c81:;
			{
				jule::Ptr<_1a5466305_Data> _215821_d = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_214517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_215821_d.get()._field_Model=jule::Any(_215821_d.get()._field_Kind, &__jule_any_type90);
				return _215821_d;;
			}
		}
		_match_end_1a8103c2b:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547c4e7_evalStructStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1a487d575_StructIns> _216739_s, jule::Ptr<_1ceee8973_Token> _216754_ident) {
	jule::Ptr<_1a5466305_Data> _216817_d = jule::new_ptr<_1a5466305_Data>();;
	;
	jule::Ptr<_1a53a44c9_Fn> _217217_method = _1a4857384_FindMethod(_216739_s.ptr(), _216754_ident.get()._field_Kind, true);;
	if ((_217217_method != nullptr)) {
		if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _217217_method.get()._field_Public, _217217_method.get()._field_Token)))) {
			_1a546837e_pushErr(_self_, _216754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
			_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a53a717a_FnIns> _217921_ins = _1a53a5b29_instance(_217217_method);;
		_217921_ins.get()._field_Owner=_216739_s;
		_1a7eb0b4e_pushReference(_self_, &(_217921_ins));
		_216817_d.get()._field_Model=jule::Any(jule::new_ptr<_1a539ad3e_StructStaticIdentExprModel>(_1a539ad3e_StructStaticIdentExprModel{._field_Structure=_216739_s, ._field_Expr=_216817_d.get()._field_Model, ._field_Method=_217921_ins}), &__jule_any_type103);
		_216817_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_217921_ins, 1)});
		return _216817_d;;
	};
	jule::Ptr<_1a5418939_Var> _219317_sttc = _1a483a620_FindStatic(_216739_s.ptr(), _216754_ident.get()._field_Kind);;
	if ((_219317_sttc != nullptr)) {
		return _1a546e61b_evalVar(_self_, _219317_sttc, _216754_ident);;
	};
	_1a546837e_pushErr(_self_, _216754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_216754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a5466305_Data> _1a547c948_evalTraitSubIdent(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _220240_d, jule::Ptr<_1a53b63cb_Trait> _220254_trt, jule::Ptr<_1ceee8973_Token> _220271_ident) {
	jule::Ptr<_1a53a44c9_Fn> _220317_f = _1a53b7256_FindMethod(_220254_trt.ptr(), _220271_ident.get()._field_Kind);;
	if ((_220317_f == nullptr)) {
		_1a546837e_pushErr(_self_, _220271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_220271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a53a5b29_instance(_220317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1a539a1b2_TraitSubIdentExprModel>(_1a539a1b2_TraitSubIdentExprModel{._field_Token=_220271_ident, ._field_Expr=_220240_d.get()._field_Model, ._field_Method=_220317_f, ._field_Trt=_220254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1a5466305_Data> _1a547ce43_evalStructSubIdent(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _222141_d, jule::Ptr<_1a487d575_StructIns> _222155_s, jule::Ptr<_1a486942e_SubIdentExpr> _222174_si, jule::Bool _222193_ref) {
	jule::Ptr<_1a487d388_FieldIns> _222217_f = _1a48586a4_FindField(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind);;
	if ((_222217_f != nullptr)) {
		if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_f.get()._field_Decl.get()._field_Public, _222217_f.get()._field_Decl.get()._field_Token)))) {
			_1a546837e_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_222217_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1a539a998_StructSubIdentExprModel> _222921_model = jule::new_ptr<_1a539a998_StructSubIdentExprModel>(_1a539a998_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=jule::new_ptr<_1a5466305_Data>((*(_222141_d))), ._field_Field=_222217_f, ._field_Owner=_222155_s});;
		_222141_d.get()._field_Model=jule::Any(_222921_model, &__jule_any_type71);
		_222141_d.get()._field_Kind=_222217_f.get()._field_Kind;
		_222141_d.get()._field_Lvalue=true;
		if ((_222217_f.get()._field_Decl.get()._field_Mutable && (!(_222141_d.get()._field_Mutable)))) {
			{
				auto &_match_expr{ (*(_self_))._field_lookup };
				
				if (_match_expr.type_is(true, 0)) {
					_case_begin_1a8114e18:;
					{
						jule::Ptr<_1a53cab4e_scopeChecker> _224325_scope = _1a53cdc95_getRoot((*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0));;
						_222141_d.get()._field_Mutable=((_224325_scope.get()._field_owner != nullptr) && (_224325_scope.get()._field_owner.get()._field_Owner == _222155_s));
					}
				}
				_match_end_1a8114db3:;
			};
		};
		return _222141_d;;
	};
	;
	jule::Ptr<_1a53a44c9_Fn> _225217_m = _1a4857384_FindMethod(_222155_s.ptr(), _222174_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_225217_m == nullptr)) {
		_1a546837e_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_222155_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_222174_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), _225217_m.get()._field_Public, _225217_m.get()._field_Token)))) {
		_1a546837e_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_225217_m.get()._field_Ident, &__jule_any_type5)}));
		_1a546869d_pushSugggestion(_self_, jule::Str("make public with \"pub\" keyword to access", 40), jule::Slice<jule::Any>());
	};
	if ((_1a53a352d_IsRef(_225217_m.get()._field_Params[0LL].ptr()) && (!(_222193_ref)))) {
		_1a546837e_pushErr(_self_, _222174_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1a546d285_checkDeprecated(_self_, &(_225217_m.get()._field_Directives), _222174_si.get()._field_Ident);
	jule::Ptr<_1a53a717a_FnIns> _226817_ins = _1a53a5b29_instance(_225217_m);;
	_226817_ins.get()._field_Owner=_222155_s;
	_1a7eb0b4e_pushReference(_self_, &(_226817_ins));
	jule::Ptr<_1a5466305_Data> _227117_model = jule::new_ptr<_1a5466305_Data>((*(_222141_d)));;
	_222141_d.get()._field_Model=jule::Any(jule::new_ptr<_1a539a998_StructSubIdentExprModel>(_1a539a998_StructSubIdentExprModel{._field_Token=_222174_si.get()._field_Ident, ._field_Expr=_227117_model, ._field_Method=_226817_ins, ._field_Owner=_222155_s}), &__jule_any_type71);
	_222141_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_226817_ins, 1)});
	return _222141_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a547d2ea_evalSliceSubIdent(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _228240_d, jule::Ptr<_1ceee8973_Token> _228254_ident) {
	{
		auto &_match_expr{ _228254_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a811d00e:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>::make({jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a4bbb1dc_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_228240_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1a539ba54_CommonSubIdentExprModel>(_1a539ba54_CommonSubIdentExprModel{._field_ExprKind=_228240_d.get()._field_Kind, ._field_Expr=_228240_d.get()._field_Model, ._field_Token=_228254_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1a811d2d9:;
			{
				_1a546837e_pushErr(_self_, _228254_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_228240_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_228254_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a811d097:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547d6a2_evalArraySubIdent(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _231940_d, jule::Ptr<_1ceee8973_Token> _231954_ident) {
	{
		auto &_match_expr{ _231954_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a811e54e:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>::make({jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)})}),jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)})})}), ._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a4bbb1dc_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231940_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1a539ba54_CommonSubIdentExprModel>(_1a539ba54_CommonSubIdentExprModel{._field_ExprKind=_231940_d.get()._field_Kind, ._field_Expr=_231940_d.get()._field_Model, ._field_Token=_231954_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1a81215b7:;
			{
				_1a546837e_pushErr(_self_, _231954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_231940_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231954_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a812151d:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547d9b0_evalIntTypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _235636_ident) {
	;
	{
		auto &_match_expr{ _235636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8125852:;
			{
				jule::Ptr<_1a5389ec6_Const> _236021_c = static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a538649a_Max(jule::Str("int", 3)))));;
				_236021_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236021_c, &__jule_any_type47), ._field_Constant=_236021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a81258b8:;
			{
				jule::Ptr<_1a5389ec6_Const> _236821_c = static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a5386368_Min(jule::Str("int", 3)))));;
				_236821_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_Model=jule::Any(_236821_c, &__jule_any_type47), ._field_Constant=_236821_c});;
			}
		}
		else {
			_case_begin_1a8124b09:;
			{
				_1a546837e_pushErr(_self_, _235636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_235636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8124961:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547dcbd_evalUintTypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _238137_ident) {
	;
	{
		auto &_match_expr{ _238137_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8125973:;
			{
				jule::Ptr<_1a5389ec6_Const> _238521_c = static__1a538a6e1_NewU64(static_cast<jule::U64>(static_cast<jule::U64>(_1a538649a_Max(jule::Str("uint", 4)))));;
				_238521_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("uint", 4)), 6)}), ._field_Model=jule::Any(_238521_c, &__jule_any_type47), ._field_Constant=_238521_c});;
			}
		}
		else {
			_case_begin_1a8128778:;
			{
				_1a546837e_pushErr(_self_, _238137_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_238137_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81285d0:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547e0cb_evalI8TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _239835_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _239835_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a812a9ab:;
			{
				jule::Ptr<_1a5389ec6_Const> _240421_c = static__1a538a449_NewI64(127LL);;
				_240421_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_240421_c, &__jule_any_type47), ._field_Constant=_240421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a812c518:;
			{
				jule::Ptr<_1a5389ec6_Const> _241221_c = static__1a538a449_NewI64(-128LL);;
				_241221_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i8", 2)), 6)}), ._field_Model=jule::Any(_241221_c, &__jule_any_type47), ._field_Constant=_241221_c});;
			}
		}
		else {
			_case_begin_1a812b759:;
			{
				_1a546837e_pushErr(_self_, _239835_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_239835_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a812a46c:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547e3d9_evalI16TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _242536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _242536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8131462:;
			{
				jule::Ptr<_1a5389ec6_Const> _243121_c = static__1a538a449_NewI64(32767LL);;
				_243121_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243121_c, &__jule_any_type47), ._field_Constant=_243121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a81314c8:;
			{
				jule::Ptr<_1a5389ec6_Const> _243921_c = static__1a538a449_NewI64(-32768LL);;
				_243921_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i16", 3)), 6)}), ._field_Model=jule::Any(_243921_c, &__jule_any_type47), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_1a81307a2:;
			{
				_1a546837e_pushErr(_self_, _242536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_242536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81306a3:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547e6e7_evalI32TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _245236_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a81353ab:;
			{
				jule::Ptr<_1a5389ec6_Const> _245821_c = static__1a538a449_NewI64(2147483647LL);;
				_245821_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_245821_c, &__jule_any_type47), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8135422:;
			{
				jule::Ptr<_1a5389ec6_Const> _246621_c = static__1a538a449_NewI64(-2147483648LL);;
				_246621_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i32", 3)), 6)}), ._field_Model=jule::Any(_246621_c, &__jule_any_type47), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_1a81346eb:;
			{
				_1a546837e_pushErr(_self_, _245236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_245236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81345ec:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547ea05_evalI64TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8139305:;
			{
				jule::Ptr<_1a5389ec6_Const> _248521_c = static__1a538a449_NewI64(jule::MAX_I64);;
				_248521_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_248521_c, &__jule_any_type47), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a813936b:;
			{
				jule::Ptr<_1a5389ec6_Const> _249321_c = static__1a538a449_NewI64(jule::MIN_I64);;
				_249321_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i64", 3)), 6)}), ._field_Model=jule::Any(_249321_c, &__jule_any_type47), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_1a8138645:;
			{
				_1a546837e_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8138546:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a547ed13_evalU8TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _250635_ident) {
	;
	;
	{
		auto &_match_expr{ _250635_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a813c44b:;
			{
				jule::Ptr<_1a5389ec6_Const> _251121_c = static__1a538a6e1_NewU64(255LLU);;
				_251121_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u8", 2)), 6)}), ._field_Model=jule::Any(_251121_c, &__jule_any_type47), ._field_Constant=_251121_c});;
			}
		}
		else {
			_case_begin_1a813bcca:;
			{
				_1a546837e_pushErr(_self_, _250635_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_250635_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a813c01c:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5480121_evalU16TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _252436_ident) {
	;
	;
	{
		auto &_match_expr{ _252436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a813edcc:;
			{
				jule::Ptr<_1a5389ec6_Const> _252921_c = static__1a538a6e1_NewU64(65535LLU);;
				_252921_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u16", 3)), 6)}), ._field_Model=jule::Any(_252921_c, &__jule_any_type47), ._field_Constant=_252921_c});;
			}
		}
		else {
			_case_begin_1a813e75b:;
			{
				_1a546837e_pushErr(_self_, _252436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_252436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a813e99d:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a548042e_evalU32TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _254236_ident) {
	;
	;
	{
		auto &_match_expr{ _254236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a814285d:;
			{
				jule::Ptr<_1a5389ec6_Const> _254721_c = static__1a538a6e1_NewU64(4294967295LLU);;
				_254721_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u32", 3)), 6)}), ._field_Model=jule::Any(_254721_c, &__jule_any_type47), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1a81421dc:;
			{
				_1a546837e_pushErr(_self_, _254236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_254236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a814242e:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a548073c_evalU64TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _256036_ident) {
	;
	;
	{
		auto &_match_expr{ _256036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a81452de:;
			{
				jule::Ptr<_1a5389ec6_Const> _256521_c = static__1a538a6e1_NewU64(jule::MAX_U64);;
				_256521_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u64", 3)), 6)}), ._field_Model=jule::Any(_256521_c, &__jule_any_type47), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1a8144b6d:;
			{
				_1a546837e_pushErr(_self_, _256036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_256036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8144db0:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5480a4a_evalF32TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _257836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8147d80:;
			{
				jule::Ptr<_1a5389ec6_Const> _258521_c = static__1a538aec7_NewF64(340282346638528860000000000000000000000.0);;
				_258521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_258521_c, &__jule_any_type47), ._field_Constant=_258521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8148d81:;
			{
				jule::Ptr<_1a5389ec6_Const> _259321_c = static__1a538aec7_NewF64(-340282346638528860000000000000000000000.0);;
				_259321_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_259321_c, &__jule_any_type47), ._field_Constant=_259321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a8148de7:;
			{
				jule::Ptr<_1a5389ec6_Const> _260121_c = static__1a538aec7_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_260121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f32", 3)), 6)}), ._field_Model=jule::Any(_260121_c, &__jule_any_type47), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1a8148116:;
			{
				_1a546837e_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type99),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81480b1:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5480d58_evalF64TypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1ceee8973_Token> _261436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a814d1e8:;
			{
				jule::Ptr<_1a5389ec6_Const> _262121_c = static__1a538aec7_NewF64(jule::MAX_F64);;
				_262121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262121_c, &__jule_any_type47), ._field_Constant=_262121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a814e1e9:;
			{
				jule::Ptr<_1a5389ec6_Const> _262921_c = static__1a538aec7_NewF64(jule::MIN_F64);;
				_262921_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_262921_c, &__jule_any_type47), ._field_Constant=_262921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a814e260:;
			{
				jule::Ptr<_1a5389ec6_Const> _263721_c = static__1a538aec7_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_263721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("f64", 3)), 6)}), ._field_Model=jule::Any(_263721_c, &__jule_any_type47), ._field_Constant=_263721_c});;
			}
		}
		else {
			_case_begin_1a814d47e:;
			{
				_1a546837e_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type99),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a814d429:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5481210_evalPrimStatic(_1a5467d73_Eval* _self_, jule::Str _265033_kind, jule::Ptr<_1ceee8973_Token> _265044_ident) {
	{
		auto &_match_expr{ _265033_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a8152142:;
			{
				return _1a547d9b0_evalIntTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a8153583:;
			{
				return _1a547dcbd_evalUintTypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a81535e9:;
			{
				return _1a547e0cb_evalI8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a81529e4:;
			{
				return _1a547e3d9_evalI16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a8152a5a:;
			{
				return _1a547e6e7_evalI32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a8152ac1:;
			{
				return _1a547ea05_evalI64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a8152b37:;
			{
				return _1a547ed13_evalU8TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a8153660:;
			{
				return _1a5480121_evalU16TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a81536c6:;
			{
				return _1a548042e_evalU32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a815373c:;
			{
				return _1a548073c_evalU64TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a81537a3:;
			{
				return _1a5480a4a_evalF32TypeStatic(_self_, _265044_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a8153819:;
			{
				return _1a5480d58_evalF64TypeStatic(_self_, _265044_ident);;
			}
		}
		else {
			_case_begin_1a814e42a:;
			{
				_1a546837e_pushErr(_self_, _265044_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_265033_kind, &__jule_any_type5),jule::Any(_265044_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a814e3c5:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a54815b7_evalTypeStatic(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _268237_d, jule::Ptr<_1a486942e_SubIdentExpr> _268251_si) {
	{
		
		if ((_1a549461e_Prim(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8158885:;
			{
				return _1a5481210_evalPrimStatic(_self_, _1a5497347_Str(_1a549461e_Prim(_268237_d.get()._field_Kind.ptr()).ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1a5494d5b_Enum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a81588eb:;
			{
				return _1a547bc88_evalEnumStatic(_self_, _1a5494d5b_Enum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1a54950c0_TypeEnum(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a815870e:;
			{
				return _1a547c140_evalTypeEnumStatic(_self_, _1a54950c0_TypeEnum(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else if ((_1a5495a71_Struct(_268237_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8158775:;
			{
				return _1a547c4e7_evalStructStatic(_self_, _1a5495a71_Struct(_268237_d.get()._field_Kind.ptr()), _268251_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1a81578ea:;
			{
				_1a546837e_pushErr(_self_, _268251_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_268237_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8157851:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a548196e_evalObjSubIdent(_1a5467d73_Eval* _self_, jule::Ptr<_1a5466305_Data> _269838_d, jule::Ptr<_1a486942e_SubIdentExpr> _269852_si) {
	if (_1ceeeb217_IsIgnoreIdent(_269852_si.get()._field_Ident.get()._field_Kind)) {
		_1a546837e_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5492287_TypeKind> _270417_kind = _269838_d.get()._field_Kind;;
	{
		
		if ((_1a5494ae7_Ptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a815d3a1:;
			{
				jule::Ptr<_1a549dccc_Ptr> _270717_ptr = _1a5494ae7_Ptr(_269838_d.get()._field_Kind.ptr());;
				if (_1a549e7a0_IsUnsafe(_270717_ptr.ptr())) {
					goto _match_end_1a815d280;
				};
				if (((!(_269852_si.get()._field_IsSelf)) && (!(_1a5468cb9_isUnsafe(_self_))))) {
					_1a546837e_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_270417_kind=_1a5494ae7_Ptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1a5494883_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a815d417:;
			{
				_270417_kind=_1a5494883_Sptr(_269838_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1a815d280:;
	};
	{
		
		if ((_1a5495cd5_Trait(_269838_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8160c66:;
			{
				return _1a547c948_evalTraitSubIdent(_self_, _269838_d, _1a5495cd5_Trait(_269838_d.get()._field_Kind.ptr()), _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1a5495a71_Struct(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1a8160cdd:;
			{
				jule::Ptr<_1a487d575_StructIns> _272317_s = _1a5495a71_Struct(_270417_kind.ptr());;
				if (_1a548d0a7_isInstancedStruct(_272317_s)) {
					jule::Bool _272525_usedReferenceElem = (_1a5494883_Sptr(_269838_d.get()._field_Kind.ptr()) != nullptr);;
					return _1a547ce43_evalStructSubIdent(_self_, _269838_d, _1a5495a71_Struct(_270417_kind.ptr()), _269852_si, _272525_usedReferenceElem);;
				};
			}
		}
		else if ((_1a5495598_Slc(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1a8160d65:;
			{
				return _1a547d2ea_evalSliceSubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		else if ((_1a5495334_Arr(_270417_kind.ptr()) != nullptr)) {
			_case_begin_1a8160ddc:;
			{
				return _1a547d6a2_evalArraySubIdent(_self_, _269838_d, _269852_si.get()._field_Ident);;
			}
		}
		_match_end_1a8160b89:;
	};
	_1a546837e_pushErr(_self_, _269852_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_269838_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1a5466305_Data> _1a5481c7c_evalSubIdent(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486942e_SubIdentExpr> _273736_si) {
	jule::Ptr<_1a5492287_TypeKind> _273817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_273817_prefix;
	});;
	jule::Ptr<_1a5466305_Data> _274217_d = _1a5483179_evalExprKind(_self_, _273736_si.get()._field_Expr.get()._field_Kind);;
	if ((_274217_d == nullptr)) {
		return nullptr;;
	};
	if (_274217_d.get()._field_Decl) {
		return _1a54815b7_evalTypeStatic(_self_.ptr(), _274217_d, _273736_si);;
	};
	return _1a548196e_evalObjSubIdent(_self_.ptr(), _274217_d, _273736_si);;
}



inline jule::Ptr<_1a5466305_Data> _1a548208a_evalTuple(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4866b57_TupleExpr> _275433_tup) {
	jule::Ptr<_1a549bc53_Tuple> _275517_tupT = jule::new_ptr<_1a549bc53_Tuple>();;
	_275517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1a5492287_TypeKind>>::alloc(0LL, _275433_tup.get()._field_Expr.len());
	jule::Ptr<_1a539bd51_TupleExprModel> _275817_model = jule::new_ptr<_1a539bd51_TupleExprModel>(_1a539bd51_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1a5466305_Data>>::alloc(0LL, _275433_tup.get()._field_Expr.len())});;
	jule::Bool _276217_ok = true;;
	{
		auto expr = &(_275433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8169b3d:;
		if (it != expr_end) {
			jule::Ptr<_1a4865eca_Expr> _276321_expr = *it;
			{
				jule::Ptr<_1a5466305_Data> _276421_d = _1a5483179_evalExprKind(_self_, _276321_expr.get()._field_Kind);;
				if ((_276421_d == nullptr)) {
					_276217_ok=false;
					goto _iter_next_1a8169b3d;
				};
				_275517_tupT.get()._field_Types = jule::alloc_for_append(_275517_tupT.get()._field_Types,1);_275517_tupT.get()._field_Types.__push(_276421_d.get()._field_Kind);;
				_275817_model.get()._field_Datas = jule::alloc_for_append(_275817_model.get()._field_Datas,1);_275817_model.get()._field_Datas.__push(_276421_d);;
			}
			_iter_next_1a8169b3d:;
			++it;
			goto _iter_begin_1a8169b3d;
		}
		_iter_end_1a8169b3d:;
	};
	if ((!(_276217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_275517_tupT, 9)}), ._field_Model=jule::Any(_275817_model, &__jule_any_type88), });;
}



inline jule::Ptr<_1a5466305_Data> _1a5482442_evalMap(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a549c77b_Map> _278331_m, jule::Ptr<_1a486b60c_BraceLit> _278344_lit) {
	jule::Ptr<_1a5399634_MapExprModel> _278417_model = jule::new_ptr<_1a5399634_MapExprModel>(_1a5399634_MapExprModel{._field_KeyKind=_278331_m.get()._field_Key, ._field_ValKind=_278331_m.get()._field_Val, });;
	{
		auto expr = &(_278344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a816cbc9:;
		if (it != expr_end) {
			jule::Ptr<_1a4865eca_Expr> _278921_expr = *it;
			{
				{
					auto &_match_expr{ _278921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1a816d3e4:;
						{
							goto _match_end_1a816d48d;
						}
					}
					else {
						_case_begin_1a816d625:;
						{
							_1a546837e_pushErr(_self_.ptr(), _278344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a816d48d:;
				};
				jule::Ptr<_1a486bdd2_KeyValPair> _279921_pair = _278921_expr.get()._field_Kind.cast_ptr<_1a486bdd2_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_1a5466305_Data> _280121_key = _1a5483179_evalExprKind(_self_, _279921_pair.get()._field_Key.get()._field_Kind);;
				if ((_280121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1a5466305_Data> _280621_val = _1a5483179_evalExprKind(_self_, _279921_pair.get()._field_Val.get()._field_Kind);;
				if ((_280621_val == nullptr)) {
					return nullptr;;
				};
				_1a54054d6_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Key), &(_280121_key), _279921_pair.get()._field_Colon);
				_1a54054d6_checkAssignType(_self_.get()._field_s, false, &(_278331_m.get()._field_Val), &(_280621_val), _279921_pair.get()._field_Colon);
				_278417_model.get()._field_Entries = jule::alloc_for_append(_278417_model.get()._field_Entries,1);_278417_model.get()._field_Entries.__push(jule::new_ptr<_1a53991b1_KeyValPairExprModel>(_1a53991b1_KeyValPairExprModel{._field_Key=_280121_key.get()._field_Model, ._field_Val=_280621_val.get()._field_Model}));;
			}
			_iter_next_1a816cbc9:;
			++it;
			goto _iter_begin_1a816cbc9;
		}
		_iter_end_1a816cbc9:;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_278331_m, 10)}), ._field_Mutable=true, ._field_Model=jule::Any(_278417_model, &__jule_any_type104), });;
}



inline jule::Ptr<_1a5466305_Data> _1a5482750_evalBraceLit(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a486b60c_BraceLit> _282736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1a8172e76:;
			{
				_1a546837e_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5496049_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a817374b:;
			{
				return _1a5482442_evalMap(_self_, _1a5496049_Map(_self_.get()._field_prefix.ptr()), _282736_lit);;
			}
		}
		else if ((_1a5495a71_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a81737b2:;
			{
				return _1a5479a88_evalStructLitExplicit(_self_, _1a5495a71_Struct(_self_.get()._field_prefix.ptr()), _282736_lit.get()._field_Exprs, _282736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1a8172abe:;
			{
				_1a546837e_pushErr(_self_.ptr(), _282736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8172a03:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5482a5d_evalAnonFn(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4873438_FnDecl> _284234_decl) {
	_1a54a0b03_typeChecker _284317_tc = _1a54a0b03_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1a53a717a_FnIns> _284817_ins = _1a54a7445_buildFn(&_284317_tc, _284234_decl);;
	if ((_284817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8177310:;
			{
				jule::Ptr<_1a53cab4e_scopeChecker> _285421_sc = _self_.get()._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0);;
				jule::Ptr<_1a53cab4e_scopeChecker> _285521_scc = _1a53dabb4_newChildChecker(_285421_sc);;
				_285521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a53c98b7_scopeLabel>>>(nullptr);
				_285521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a53c9d3a_scopeGoto>>>(nullptr);
				_285521_scc.get()._field_owner=nullptr;
				_285521_scc.get()._field_childIndex=0LL;
				_285521_scc.get()._field_it=0LLU;
				_285521_scc.get()._field_cse=0LLU;
				_285521_scc.get()._field_owner=_284817_ins;
				_1a5413db8_checkFnInsSc(_self_.get()._field_s.ptr(), &(_284817_ins), &(_285521_scc));
			}
		}
		else {
			_case_begin_1a81771ab:;
			{
				_1a541445c_checkFnIns(_self_.get()._field_s, &(_284817_ins));
			}
		}
		_match_end_1a8177156:;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_284817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1a5398d09_AnonFnExprModel>(_1a5398d09_AnonFnExprModel{._field_Func=_284817_ins, ._field_Global=_1a546902d_isGlobal(_self_.ptr())}), &__jule_any_type105), });;
}



inline jule::Ptr<_1a5466305_Data> _1a5482d6b_evalBinop(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a48698a2_BinopExpr> _287733_op) {
	_1a54859a6_binaryEval _287817_bs = static__1a548607d_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1a5496ed4_Prim> _288117_prim = _1a549461e_Prim(_self_.get()._field_prefix.ptr());;
		if (((_288117_prim == nullptr) || (!(_1a53899ba_IsNum(_1a5497347_Str(_288117_prim.ptr())))))) {
			jule::Ptr<_1a5492287_TypeKind> _288325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_288325_prefix;
			});;
			return _1a548b539_eval(&_287817_bs, &(_287733_op));;
		};
	};
	return _1a548b539_eval(&_287817_bs, &(_287733_op));;
}



inline jule::Ptr<_1a5466305_Data> _1a5483179_evalExprKind(jule::Ptr<_1a5467d73_Eval> _self_, jule::Any _289236_kind) {
	{
		auto &_match_expr{ _289236_kind };
		
		if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a817b6aa:;
			{
				jule::Ptr<_1a48662b6_RangeExpr> _289521_e = _289236_kind.cast_ptr<_1a48662b6_RangeExpr>(&__jule_any_type106);;
				return _1a5483179_evalExprKind(_self_, _289521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a817e49e:;
			{
				return _1a546abcd_evalLit(_self_.ptr(), _289236_kind.cast_ptr<_1a486700e_LitExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a817e515:;
			{
				return _1a5470188_evalIdent(_self_.ptr(), _289236_kind.cast_ptr<_1a4867b8b_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a817e02b:;
			{
				return _1a5470496_evalUnary(_self_, _289236_kind.cast_ptr<_1a4868395_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a817e092:;
			{
				return _1a54707a4_evalVariadic(_self_, _289236_kind.cast_ptr<_1a486874c_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a817e119:;
			{
				return _1a5470ab2_evalUnsafe(_self_, _289236_kind.cast_ptr<_1a4867718_UnsafeExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a817e191:;
			{
				return _1a547162e_evalSliceExpr(_self_, _289236_kind.cast_ptr<_1a486c5b9_SliceExpr>(&__jule_any_type101));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a817e58c:;
			{
				return _1a5474973_evalIndexing(_self_, _289236_kind.cast_ptr<_1a486ce38_IndexingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a817e614:;
			{
				return _1a5475b3e_evalSlicing(_self_, _289236_kind.cast_ptr<_1a486d543_SlicingExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a817e68b:;
			{
				return _1a5479329_evalCast(_self_, _289236_kind.cast_ptr<_1a4868b04_CastExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a817e713:;
			{
				return _1a5479637_evalNsSelection(_self_.ptr(), _289236_kind.cast_ptr<_1a4868eab_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a817e78a:;
			{
				return _1a5479d96_evalStructLit(_self_, _289236_kind.cast_ptr<_1a486b189_StructLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a817e812:;
			{
				return _1a547a418_evalType(_self_.ptr(), _289236_kind.cast_ptr<_1a48619a9_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a817e889:;
			{
				return _1a547b8d1_evalFnCall(_self_, _289236_kind.cast_ptr<_1a4869eac_FnCallExpr>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a817e911:;
			{
				return _1a5481c7c_evalSubIdent(_self_, _289236_kind.cast_ptr<_1a486942e_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a817e988:;
			{
				return _1a548208a_evalTuple(_self_, _289236_kind.cast_ptr<_1a4866b57_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a817ea10:;
			{
				return _1a5482750_evalBraceLit(_self_, _289236_kind.cast_ptr<_1a486b60c_BraceLit>(&__jule_any_type114));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a817ea87:;
			{
				return _1a5482a5d_evalAnonFn(_self_, _289236_kind.cast_ptr<_1a4873438_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a817eb0e:;
			{
				return _1a5482d6b_evalBinop(_self_, _289236_kind.cast_ptr<_1a48698a2_BinopExpr>(&__jule_any_type115));;
			}
		}
		else {
			_case_begin_1a817ddc7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a817dcd9:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5483487_eval(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4865eca_Expr> _294028_expr) {
	jule::Ptr<_1a5466305_Data> _294117_d = _1a5483179_evalExprKind(_self_, _294028_expr.get()._field_Kind);;
	if (((_294117_d == nullptr) || (_294117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1a549580c_Fn(_294117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8189157:;
			{
				jule::Ptr<_1a53a717a_FnIns> _294821_f = _1a549580c_Fn(_294117_d.get()._field_Kind.ptr());;
				if (_1a53a8511_IsBuiltin(_294821_f.ptr())) {
					goto _match_end_1a8189025;
				};
				if ((_294821_f.get()._field_Generics.len() != _294821_f.get()._field_Decl.get()._field_Generics.len())) {
					_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("define has generics", 19), jule::Slice<jule::Any>());
				};
				if (((!(_294821_f.get()._field_Decl.get()._field_Statically)) && _1a53a4ba0_IsMethod(_294821_f.get()._field_Decl.ptr()))) {
					_1a53ed600_pushErr(_self_.get()._field_s.ptr(), _294028_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1a8189025:;
	};
	return _294117_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a5483795_evalExpr(jule::Ptr<_1a5467d73_Eval> _self_, jule::Ptr<_1a4865eca_Expr> _296632_expr) {
	jule::Ptr<_1a5466305_Data> _296717_d = _1a5483487_eval(_self_, _296632_expr);;
	{
		
		if ((_296717_d == nullptr)) {
			_case_begin_1a818cb2d:;
			{
				return nullptr;;
			}
		}
		else if (_296717_d.get()._field_Decl) {
			_case_begin_1a818cba5:;
			{
				_1a546837e_pushErr(_self_.ptr(), _296632_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a818ca62:;
			{
				return _296717_d;;
			}
		}
		_match_end_1a818c9eb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a5467d73_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1a5483c18_unaryEval static__1a54841be_new(jule::Ptr<_1a5467d73_Eval> _298723_e) {
	return _1a5483c18_unaryEval{._field_e=_298723_e, };;
}



inline void _1a548439a_minus(_1a5483c18_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a818e657:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a818e327:;
			{
				if ((!(_1a53899ba_IsNum(_1a5492683_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a5495a71_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a818e38d:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a818e2b1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a818e17e:;
	};
	if (_1a5466bb8_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a538e618_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8192bbb:;
				{
					_1a538d727_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1a538c270_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a538db67_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8192c43:;
				{
					_1a538cc32_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a538b7be_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a538ddcb_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8192cba:;
				{
					_1a538cc32_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1a538c4d4_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a8192acd:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a5484576_plus(_1a5483c18_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a8197099:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8196c69:;
			{
				if ((!(_1a53899ba_IsNum(_1a5492683_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a5495a71_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8196cd0:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8196c03:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8196b37:;
	};
	if (_1a5466bb8_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a538e618_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a819a60d:;
				{
					_1a538d727_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1a538c270_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a538db67_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a819a685:;
				{
					_1a538cc32_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a538b7be_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a538ddcb_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a819a70c:;
				{
					_1a538cc32_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1a538c4d4_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a819a520:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a5484752_caret(_1a5483c18_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a819e9db:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a819e6ab:;
			{
				if ((!(_1a5389404_IsInt(_1a5492683_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1a5495a71_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a819e722:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a819e645:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a819e579:;
	};
	if (_1a5466bb8_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a538db67_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a81a303e:;
				{
					_1a538cc32_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1a538b7be_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1a538ddcb_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a81a30b6:;
				{
					_1a538cea7_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1a538ba33_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1a81a2e62:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a548492d_excl(_1a5483c18_unaryEval* _self_) {
	jule::Ptr<_1a5496ed4_Prim> _310613_t = _1a549461e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_310613_t == nullptr) || (!(_1a5499ea4_IsBool(_310613_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1a5466bb8_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1a538e140_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a81a775d:;
				{
					_1a538d22c_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1a538bc97_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1a81a765e:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1a5484b09_star(_1a5483c18_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1a5494ae7_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a81aa60c:;
			{
				if ((!(_1a5468cb9_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1a549dccc_Ptr> _313821_t = _1a5494ae7_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1a549e7a0_IsUnsafe(_313821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_313821_t.get()._field_Elem;
			}
		}
		else if ((_1a5494883_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a81aa2cc:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1a5494883_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1a81aa266:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a81aa200:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1a5484cd5_amper(_1a5483c18_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a81aee3b:;
			{
				jule::Ptr<_1a5396e17_StructLitExprModel> _315821_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1a5396e17_StructLitExprModel>(&__jule_any_type102);;
				_1a548c2c6_makeStructLitAlloc(&((*(_self_))._field_d), &(_315821_lit));
			}
		}
		else {
			_case_begin_1a81ae831:;
			{
				{
					
					if (_1a54a95bd_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a81b047a:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549dccc_Ptr>(_1a549dccc_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 12)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1a81aedc5:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1a81aed09:;
				};
			}
		}
		_match_end_1a81ae7a9:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1a5484eb1_typeDecl(_1a5483c18_unaryEval* _self_) {
	_1a54a0b03_typeChecker _318217_tc = _1a54a0b03_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a81b34d3:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54a5cd4_buildPtrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 12)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a81b5aac:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54a56b8_buildSptrFromType(&_318217_tc, &((*(_self_))._field_d.get()._field_Kind)), 7)});
			}
		}
		else {
			_case_begin_1a81b447e:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a81b4429:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1a548518c_evalData(_1a5483c18_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1a81b7e11:;
			{
				jule::Ptr<_1a5492287_TypeKind> _320521_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1a5483179_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
				(*(_self_))._field_e.get()._field_prefix=_320521_prefix;
			}
		}
		else {
			_case_begin_1a81b79d2:;
			{
				(*(_self_))._field_d=_1a5483179_evalExprKind((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr.get()._field_Kind);
			}
		}
		_match_end_1a81b797c:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5485467_eval(_1a5483c18_unaryEval* _self_, jule::Ptr<_1a4868395_UnaryExpr> _321427_u) {
	(*(_self_))._field_u=_321427_u;
	_1a548518c_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1a5484eb1_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1a5492287_TypeKind> _322513_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a81bc09c:;
			{
				_1a548439a_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a81bba91:;
			{
				_1a5484576_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a81bbb07:;
			{
				_1a5484752_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a81bbb6d:;
			{
				_1a548492d_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a81bbbd4:;
			{
				_1a5484b09_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a81bc245:;
			{
				_1a5484cd5_amper(_self_);
			}
		}
		else {
			_case_begin_1a81bba2a:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a81bb761:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a81bc2bc:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str(_322513_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1a5466bb8_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a81be05a:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type47);
			}
		}
		_match_end_1a81be005:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5483c18_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1a54859a6_binaryEval static__1a548607d_newPlain(jule::Ptr<_1a5467d73_Eval> _326328_e) {
	return _1a54859a6_binaryEval{._field_e=_326328_e, };;
}



inline _1a54859a6_binaryEval static__1a54863be_new(jule::Ptr<_1a5467d73_Eval> _326923_e, jule::Ptr<_1ceee8973_Token> _326937_op) {
	return _1a54859a6_binaryEval{._field_e=_326923_e, ._field_op=_326937_op};;
}



inline jule::Bool _1a5486633_checkTypeCompatibility(_1a54859a6_binaryEval* _self_) {
	return _1a5405937_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1a54868ca_checkStructCommonOperatorCompatibility(_1a54859a6_binaryEval* _self_) {
	jule::Ptr<_1a53a717a_FnIns> _328317_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a81c31d5:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a81c48ac:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a81c4923:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a81c369c:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a81c3713:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a81c3779:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a81c37e0:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a81c49bc:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a81c4a33:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a81c4a99:;
			{
				_328317_overload=_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a81c3636:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1a81c35ae:;
	};
	if ((_328317_overload == nullptr)) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1a53a62ab_ParamIns> _331517_p = _328317_overload.get()._field_Params[1LL];;
	return _1a54054d6_checkAssignType((*(_self_))._field_e.get()._field_s, _331517_p.get()._field_Decl.get()._field_Reference, &(_331517_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1a5466305_Data> _1a5486b72_evalNil(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5493b6d_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type116),jule::Any(_1a5492683_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81cd432:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a81cd5a8:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type116)}));
				return nullptr;;
			}
		}
		_match_end_1a81cd542:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5486dd6_evalEnum(_1a54859a6_binaryEval* _self_) {
	jule::Ptr<_1a53b8521_Enum> _334017_enm = _1a5494d5b_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81d081e:;
			{
				jule::Ptr<_1a5492287_TypeKind> _334421_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1a5494d5b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_334421_rkind=_1a5494d5b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1a5405937_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_334017_enm.get()._field_Kind.get()._field_Kind), &(_334421_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1a81d07b9:;
	};
	if (((_1a5494d5b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_334017_enm != _1a5494d5b_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a81d016a:;
			{
				if ((!(_1a53899ba_IsNum(_1a5492683_Str(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a81d5923:;
			{
				if (((_1a549461e_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1a5389404_IsInt(_1a5497347_Str(_1a549461e_Prim(_334017_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a81d4a21:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_334017_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81d4933:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a548714a_evalTypeEnum(_1a54859a6_binaryEval* _self_) {
	jule::Ptr<_1a53b9b1b_TypeEnum> _339117_enm = _1a54950c0_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81da906:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a81d5a44:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a53b9e4b_Str(_339117_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81da120:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a54873ae_evalSptr(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81dc463:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a81dbaa0:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81dba4a:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5487623_evalPtr(_1a54859a6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1a81dd6c8:;
			{
				if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1a81e03bc:;
			{
				if ((_1a5494ae7_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1a549e7a0_IsUnsafe(_1a5494ae7_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1a548d41a_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a81ddbc3:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81de267:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5487887_evalArr(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81e52e5:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a81e53c2:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81e0c6e:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5487aeb_evalSlc(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81e7429:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a81e6a66:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81e6a11:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5487d60_evalFn(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81e7748:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a81e8b9a:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a81e8b45:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a54880c4_evalStruct(_1a54859a6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a81ead34:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a81ead9a:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a81eb4b6:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a81eb52c:;
			{
				if ((_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a81eb593:;
			{
				if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1a81eb362:;
	};
	if ((!(_1a54868ca_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1a5466305_Data> _1a5488338_evalTrait(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a82053b0:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a82054d1:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8205206:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a548859c_evalAny(_1a54859a6_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1a82071b4:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a8206b31:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1a82056e0:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5488811_evalBool(_1a54859a6_binaryEval* _self_) {
	if ((!(_1a5486633_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1a8208e63:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a82085a0:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a820854a:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5488a75_evalStr(_1a54859a6_binaryEval* _self_) {
	jule::Str _363317_rk = _1a5492683_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_363317_rk != jule::Str("str", 3))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_363317_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a820c3d9:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a820d033:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		else {
			_case_begin_1a820a9d1:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type99)}));
				return nullptr;;
			}
		}
		_match_end_1a820c021:;
	};
}



inline void _1a5488c51_setTypeToGreater(_1a54859a6_binaryEval* _self_) {
	jule::Ptr<_1a5496ed4_Prim> _366013_lp = _1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1a5496ed4_Prim> _366113_rp = _1a549461e_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1a5466bb8_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1a5466bb8_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_366113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1a5466bb8_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_366013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1a5466bb8_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_366113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1a53882d2_IsGreater(_366113_rp.get()._field_Kind, _366013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1a5466bb8_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_366113_rp.get()._field_Kind;
		};
	};
}



inline void _1a5488e93_checkModData(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a5466305_Data>* _369336_d) {
	if ((!(_1a5466bb8_IsConst((*(_369336_d)).ptr())))) {
		if (((_1a549461e_Prim((*(_369336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1a5389404_IsInt(_1a549461e_Prim((*(_369336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1a544dc16_sigAssignable(jule::Str("i64", 3), _369336_d)) {
			_case_begin_1a821c51a:;
			{
				_1a538cc32_SetI64((*(_369336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64((*(_369336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1a544dd48_unsigAssignable(jule::Str("u64", 3), _369336_d)) {
			_case_begin_1a821c1eb:;
			{
				_1a538cea7_SetU64((*(_369336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64((*(_369336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1a821c185:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a821aae0:;
	};
}



inline void _1a548916e_mod(_1a54859a6_binaryEval* _self_) {
	_1a5488e93_checkModData(_self_, &((*(_self_))._field_l));
	_1a5488e93_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1a5489526_numbersAreCompatibile(_1a54859a6_binaryEval* _self_, jule::Str* _371537_lk, jule::Str* _371547_rk) {
	if ((!(_1a53899ba_IsNum((*(_371547_rk)))))) {
		return false;;
	};
	if ((_1a5466bb8_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if (((*(_371537_lk)) == jule::Str("f32", 3))) {
		if ((_1a5466bb8_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return ((*(_371547_rk)) == jule::Str("f32", 3));;
	};
	if (((*(_371537_lk)) == jule::Str("f64", 3))) {
		if ((_1a5466bb8_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return ((*(_371547_rk)) == jule::Str("f64", 3));;
	};
	if ((_1a5466bb8_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_371537_lk)) == (*(_371547_rk)));;
}



inline jule::Ptr<_1a5466305_Data> _1a548978a_evalFloat(_1a54859a6_binaryEval* _self_) {
	jule::Str _374113_lk = _1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _374213_rk = _1a549461e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1a5489526_numbersAreCompatibile(_self_, &(_374113_lk), &(_374213_rk))))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a822539c:;
			{
				if (((!(_1a5466bb8_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a544ede3_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1a5466bb8_IsConst((*(_self_))._field_r.ptr()))) || (!(_1a544ede3_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1a538cc32_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1a538cea7_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1a548cc00_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a82247b9:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8229ca8:;
			{
				_1a5488c51_setTypeToGreater(_self_);
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1a8229c53:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1a82245bb:;
			{
				_1a5488c51_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a822bd10:;
			{
				if ((!(_1a5389404_IsInt(_374213_rk)))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_374113_lk, &__jule_any_type5),jule::Any(_374213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1a548916e_mod(_self_);
				_1a5488c51_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a822abcc:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a822a76a:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a54899ee_evalInt(_1a54859a6_binaryEval* _self_) {
	jule::Str _380713_lk = _1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _380813_rk = _1a549461e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1a822c2e9:;
			{
				if (((!(_1a5389404_IsInt(_380713_lk))) || (!(_1a5389404_IsInt(_380813_rk))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380713_lk, &__jule_any_type5),jule::Any(_380813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1a548cc00_isOkForShifting(&((*(_self_))._field_r))))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a822ee12:;
	};
	if ((!(_1a5489526_numbersAreCompatibile(_self_, &(_380713_lk), &(_380813_rk))))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_380713_lk, &__jule_any_type5),jule::Any(_380813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1a8232ce4:;
			{
				return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("bool", 4)), 6)}), });;
			}
		}
		_match_end_1a8232c5b:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1a8230044:;
			{
				_1a5488c51_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8234c4c:;
			{
				_1a548916e_mod(_self_);
				_1a5488c51_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8233ab4:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a82339c6:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a5489c63_evalPrim(_1a54859a6_binaryEval* _self_) {
	jule::Ptr<_1a5496ed4_Prim> _386613_prim = _1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1a5499ea4_IsBool(_386613_prim.ptr())) {
			_case_begin_1a8236c3d:;
			{
				return _1a5488811_evalBool(_self_);;
			}
		}
		else if (_1a549a218_IsStr(_386613_prim.ptr())) {
			_case_begin_1a8236cb5:;
			{
				return _1a5488a75_evalStr(_self_);;
			}
		}
		_match_end_1a8236b83:;
	};
	if ((_1a549461e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5497347_Str(_386613_prim.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1a5389723_IsFloat(_386613_prim.get()._field_Kind)) {
			_case_begin_1a823949e:;
			{
				return _1a548978a_evalFloat(_self_);;
			}
		}
		else if (_1a5389404_IsInt(_386613_prim.get()._field_Kind)) {
			_case_begin_1a8238d72:;
			{
				return _1a54899ee_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a8238d0b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8237348:;
	};
}



inline void _1a5489e3e_checkSpecialCases(_1a54859a6_binaryEval* _self_) {
	if (((!(_1a5493695_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1a54931bc_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1a5493695_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1a54931bc_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1a5466305_Data> _1a548a1a3_evalOp(_1a54859a6_binaryEval* _self_) {
	_1a5489e3e_checkSpecialCases(_self_);
	{
		
		if (_1a5493431_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a823cb23:;
			{
				_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (((_1a549461e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1a549a47c_IsAny(_1a549461e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a823d7a0:;
			{
				({
					jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a823d816;
			}
		}
		else if (((_1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1a549a47c_IsAny(_1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a823d816:;
			{
				return _1a548859c_evalAny(_self_);;
			}
		}
		else if ((_1a54950c0_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823d20b:;
			{
				({
					jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a823d283;
			}
		}
		else if ((_1a54950c0_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823d283:;
			{
				return _1a548714a_evalTypeEnum(_self_);;
			}
		}
		else if (_1a54931bc_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a823d30a:;
			{
				return _1a5486b72_evalNil(_self_);;
			}
		}
		else if ((_1a5494d5b_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823d382:;
			{
				({
					jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a823d88d;
			}
		}
		else if ((_1a5494d5b_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823d88d:;
			{
				return _1a5486dd6_evalEnum(_self_);;
			}
		}
		else if ((_1a5494883_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823d915:;
			{
				({
					jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a823d98c;
			}
		}
		else if ((_1a5494883_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823d98c:;
			{
				return _1a54873ae_evalSptr(_self_);;
			}
		}
		else if ((_1a5494ae7_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823da14:;
			{
				({
					jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a823da8b;
			}
		}
		else if ((_1a5494ae7_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823da8b:;
			{
				return _1a5487623_evalPtr(_self_);;
			}
		}
		else if ((_1a5495334_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823db13:;
			{
				return _1a5487887_evalArr(_self_);;
			}
		}
		else if ((_1a5495598_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823db8a:;
			{
				return _1a5487aeb_evalSlc(_self_);;
			}
		}
		else if ((_1a549580c_Fn((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823dc12:;
			{
				return _1a5487d60_evalFn(_self_);;
			}
		}
		else if ((_1a5495cd5_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823dc89:;
			{
				({
					jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a823dd11;
			}
		}
		else if ((_1a5495cd5_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823dd11:;
			{
				return _1a5488338_evalTrait(_self_);;
			}
		}
		else if ((_1a5495a71_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823dd88:;
			{
				return _1a54880c4_evalStruct(_self_);;
			}
		}
		else if ((_1a549461e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a823de10:;
			{
				return _1a5489c63_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a823d184:;
			{
				return nullptr;;
			}
		}
		_match_end_1a823d11d:;
	};
}



inline void _1a548a428_evalConst(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a5466305_Data>* _395033_d) {
	{
		
		if (((*(_395033_d)) == nullptr)) {
			_case_begin_1a824d00c:;
			{
				return;;
			}
		}
		else if ((!(_1a5466bb8_IsConst((*(_self_))._field_l.ptr()))) || (!(_1a5466bb8_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a824d073:;
			{
				(*(_395033_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1a824c87a:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a824e591:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a53905b4_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a824e607:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool((!(_1a53905b4_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1a824e66d:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a53902a6_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a824e6d4:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a538ee98_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1a824e74a:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a5390edd_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1a824e7b1:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a53908c2_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1a824e827:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a53912eb_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1a824e88d:;
			{
				(*(_395033_d)).get()._field_Constant=static__1a538a988_NewBool(_1a5390bd0_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1a824e904:;
			{
				_1a5391609_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1a824e96a:;
			{
				_1a5391917_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a824e9d1:;
			{
				_1a5391c25_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a824ea47:;
			{
				jule::Bool _398717_ok = _1a5392033_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_398717_ok)) && (_1a538c9ac_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1a5496ed4_Prim> _399221_prim = _1a549461e_Prim((*(_395033_d)).get()._field_Kind.ptr());;
				{
					
					if (_1a5388d71_IsSigInt(_399221_prim.get()._field_Kind)) {
						_case_begin_1a825b081:;
						{
							_1a538cc32_SetI64((*(_395033_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64((*(_395033_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1a538915c_IsUnsigInt(_399221_prim.get()._field_Kind)) {
						_case_begin_1a825b108:;
						{
							_1a538cea7_SetU64((*(_395033_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64((*(_395033_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1a825aec6:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a824eabe:;
			{
				jule::Bool _400017_ok = _1a5392341_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_400017_ok)) && (_1a538c9ac_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1a824eb46:;
			{
				_1a539295c_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a824ebbd:;
			{
				_1a539264e_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a824ec45:;
			{
				_1a5392c6a_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1a824ecbc:;
			{
				_1a5393078_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1a824ed44:;
			{
				_1a5393386_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_395033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1a824dd54:;
	};
	(*(_395033_d)).get()._field_Model=jule::Any((*(_395033_d)).get()._field_Constant, &__jule_any_type47);
	_1a548e196_applyCastModelByEnum(_395033_d, _1a5494d5b_Enum((*(_395033_d)).get()._field_Kind.ptr()));
}



inline void _1a548a69d_checkData(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a5466305_Data>* _402533_d) {
	jule::Ptr<_1a53a717a_FnIns> _402613_f = _1a549580c_Fn((*(_402533_d)).get()._field_Kind.ptr());;
	if ((((_402613_f != nullptr) && (_402613_f.get()._field_Decl != nullptr)) && _1a53a4ba0_IsMethod(_402613_f.get()._field_Decl.ptr()))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1a548a879_checkDatas(_1a54859a6_binaryEval* _self_) {
	_1a548a69d_checkData(_self_, &((*(_self_))._field_l));
	_1a548a69d_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1a548aaee_setModel(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a5466305_Data>* _403732_d) {
	if (_1a5466bb8_IsConst((*(_403732_d)).ptr())) {
		if ((_1a5466bb8_IsConst((*(_self_))._field_l.ptr()) && _1a5466bb8_IsConst((*(_self_))._field_r.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1a5466305_Data> _404518_l;;
	jule::Ptr<_1a5466305_Data> _404525_r;;
	({
		jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_404518_l = ___jule_assign_arg;
		_404525_r = _1___jule_assign_arg;
	});
	if ((!(_1a5466ec6_GoodOperand(_404518_l.ptr(), &(_404525_r))))) {
		({
			jule::Ptr<_1a5466305_Data> ___jule_assign_arg = _404525_r;
			jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = _404518_l;
			_404518_l = ___jule_assign_arg;
			_404525_r = _1___jule_assign_arg;
		});
	};
	(*(_403732_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a53962ac_BinopExprModel>(_1a53962ac_BinopExprModel{._field_Left=jule::new_ptr<_1a5395ce5_OperandExprModel>(_1a5395ce5_OperandExprModel{._field_Kind=_404518_l.get()._field_Kind, ._field_Model=_404518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1a5395ce5_OperandExprModel>(_1a5395ce5_OperandExprModel{._field_Kind=_404525_r.get()._field_Kind, ._field_Model=_404525_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type117);
}



inline void _1a548ad74_postEval(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a5466305_Data>* _406332_d) {
	(*(_406332_d)).get()._field_Lvalue=false;
	_1a548aaee_setModel(_self_, _406332_d);
}



inline jule::Ptr<_1a5466305_Data> _1a548b22b_solveExplicit(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a5466305_Data>* _406837_l, jule::Ptr<_1a5466305_Data>* _406852_r) {
	({
		jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_406837_l));
		jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_406852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a548a879_checkDatas(_self_);
	jule::Ptr<_1a5466305_Data> _407317_d = _1a548a1a3_evalOp(_self_);;
	({
		jule::Ptr<_1a5466305_Data> ___jule_assign_arg = (*(_406837_l));
		jule::Ptr<_1a5466305_Data> _1___jule_assign_arg = (*(_406852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1a548a428_evalConst(_self_, &(_407317_d));
	if ((_407317_d != nullptr)) {
		_407317_d.get()._field_Mutable=true;
		_1a548ad74_postEval(_self_, &(_407317_d));
	};
	return _407317_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a548b539_eval(_1a54859a6_binaryEval* _self_, jule::Ptr<_1a48698a2_BinopExpr>* _408828_op) {
	if (((*(_408828_op)).get()._field_Op.get()._field_Kind == jule::Str("=", 1))) {
		_1a546837e_pushErr((*(_self_))._field_e.ptr(), (*(_408828_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1a546869d_pushSugggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _409517_l = _1a5483179_evalExprKind((*(_self_))._field_e, (*(_408828_op)).get()._field_Left.get()._field_Kind);;
	if (((_409517_l == nullptr) || (_409517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1a5492287_TypeKind> _410017_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_409517_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_410017_prefix;
	});;
	jule::Ptr<_1a5466305_Data> _410317_r = _1a5483179_evalExprKind((*(_self_))._field_e, (*(_408828_op)).get()._field_Right.get()._field_Kind);;
	if (((_410317_r == nullptr) || (_410317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_408828_op)).get()._field_Op;
	jule::Ptr<_1a5466305_Data> _411017_d = _1a548b22b_solveExplicit(_self_, &(_409517_l), &(_410317_r));;
	if ((((_411017_d != nullptr) && _409517_l.get()._field_IsRune) && _410317_r.get()._field_IsRune)) {
		_411017_d.get()._field_IsRune=true;
	};
	return _411017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a54859a6_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5490a5a_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5491594_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "CppLinked:" << _Src._field_CppLinked << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5492683_Str(_1a5492287_TypeKind* _self_) {
	if (_1a54931bc_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		_7417_kind+=jule::Str("...", 3);
	};
	if (_1a5492e58_CppLinked(_self_)) {
		_7417_kind+=jule::Str("cpp.", 4);
		_7417_kind+=(*(_self_))._field_CppIdent;
	} else {
		_7417_kind+=_1a5491d58_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1a5491907_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1a5492991_Equal(jule::Ptr<_1a5492287_TypeKind> _self_, jule::Ptr<_1a5492287_TypeKind> _9021_other) {
	if (_1a54931bc_IsNil(_self_.ptr())) {
		return _1a54931bc_IsNil(_9021_other.ptr());;
	};
	if (_1a5492e58_CppLinked(_self_.ptr())) {
		return (_1a5492e58_CppLinked(_9021_other.ptr()) && (_self_.get()._field_CppIdent == _9021_other.get()._field_CppIdent));;
	};
	return _1a5491d58_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1a5491c15_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1a5492e58_CppLinked(_1a5492287_TypeKind* _self_) {
	return ((*(_self_))._field_CppIdent.len() != 0LL);;
}



inline jule::Bool _1a54931bc_IsNil(_1a5492287_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1a5493431_Void(_1a5492287_TypeKind* _self_) {
	jule::Ptr<_1a5496ed4_Prim> _11113_prim = _1a549461e_Prim(_self_);;
	return ((_11113_prim != nullptr) && (_11113_prim.get()._field_Kind == jule::Str("void", 4)));;
}



inline jule::Bool _1a5493695_Comparable(_1a5492287_TypeKind* _self_) {
	{
		_1a5492287_TypeKind* _11821__self = (&((*(_self_))));;
		if ((_1a5495a71_Struct(_11821__self) != nullptr)) {
			return _1a5495a71_Struct(_11821__self).get()._field_Comparable;;
		};
		return (((_1a5496049_Map(_11821__self) == nullptr) && (_1a5495598_Slc(_11821__self) == nullptr)) && (_1a549580c_Fn(_11821__self) == nullptr));;
	};
}



inline jule::Bool _1a5493909_Mutable(_1a5492287_TypeKind* _self_) {
	{
		_1a5492287_TypeKind* _12921__self = (&((*(_self_))));;
		if ((_1a5495a71_Struct(_12921__self) != nullptr)) {
			return _1a5495a71_Struct(_12921__self).get()._field_Mutable;;
		};
		if ((_1a5495cd5_Trait(_12921__self) != nullptr)) {
			return _1a5495cd5_Trait(_12921__self).get()._field_Mutable;;
		};
		if ((_1a549461e_Prim(_12921__self) != nullptr)) {
			jule::Ptr<_1a5496ed4_Prim> _13721_p = _1a549461e_Prim(_12921__self);;
			return _1a549a47c_IsAny(_13721_p.ptr());;
		};
		if ((_1a5495334_Arr(_12921__self) != nullptr)) {
			return _1a5493909_Mutable(_1a5495334_Arr(_12921__self).get()._field_Elem.ptr());;
		};
		return (((_1a5495598_Slc(_12921__self) != nullptr) || (_1a5494ae7_Ptr(_12921__self) != nullptr)) || (_1a5494883_Sptr(_12921__self) != nullptr));;
	};
}



inline jule::Bool _1a5493b6d_NilCompatible(_1a5492287_TypeKind* _self_) {
	{
		_1a5492287_TypeKind* _15221__self = (&((*(_self_))));;
		jule::Ptr<_1a5496ed4_Prim> _15417_prim = _1a549461e_Prim(_15221__self);;
		if (((_15417_prim != nullptr) && _1a549a47c_IsAny(_15417_prim.ptr()))) {
			return true;;
		};
		return (((((((_1a54931bc_IsNil(_15221__self) || (_1a549580c_Fn(_15221__self) != nullptr)) || (_1a5494883_Sptr(_15221__self) != nullptr)) || (_1a5494ae7_Ptr(_15221__self) != nullptr)) || (_1a5495cd5_Trait(_15221__self) != nullptr)) || (_1a5495598_Slc(_15221__self) != nullptr)) || (_1a5496049_Map(_15221__self) != nullptr)) || (_1a54950c0_TypeEnum(_15221__self) != nullptr));;
	};
}



inline jule::Bool _1a5493dd2_PerformsRC(_1a5492287_TypeKind* _self_) {
	{
		_1a5492287_TypeKind* _17321__self = (&((*(_self_))));;
		jule::Ptr<_1a5496ed4_Prim> _17417_prim = _1a549461e_Prim(_17321__self);;
		if ((_17417_prim != nullptr)) {
			return _1a549a47c_IsAny(_17417_prim.ptr());;
		};
		return (((_1a5494883_Sptr(_17321__self) != nullptr) || (_1a5495598_Slc(_17321__self) != nullptr)) || (_1a5495cd5_Trait(_17321__self) != nullptr));;
	};
}



inline jule::Bool _1a5494146_SupportsCloning(_1a5492287_TypeKind* _self_) {
	{
		_1a5492287_TypeKind* _18521__self = (&((*(_self_))));;
		{
			
			if ((_1a549461e_Prim(_18521__self) != nullptr)) {
				_case_begin_1a8297ee1:;
				{
					return (!(_1a549a47c_IsAny(_1a549461e_Prim(_18521__self).ptr())));;
				}
			}
			else if ((_1a5494d5b_Enum(_18521__self) != nullptr)) {
				_case_begin_1a829a059:;
				{
					return true;;
				}
			}
			else if ((_1a549580c_Fn(_18521__self) != nullptr)) {
				_case_begin_1a829a0c0:;
				{
					return true;;
				}
			}
			else if ((_1a5494ae7_Ptr(_18521__self) != nullptr)) {
				_case_begin_1a829a136:;
				{
					return true;;
				}
			}
			else if ((_1a5495598_Slc(_18521__self) != nullptr)) {
				_case_begin_1a8299b80:;
				{
					return _1a5494146_SupportsCloning(_1a5495598_Slc(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1a5496049_Map(_18521__self) != nullptr)) {
				_case_begin_1a8299be6:;
				{
					jule::Ptr<_1a549c77b_Map> _19821_m = _1a5496049_Map(_18521__self);;
					return (_1a5494146_SupportsCloning(_19821_m.get()._field_Key.ptr()) && _1a5494146_SupportsCloning(_19821_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1a5495334_Arr(_18521__self) != nullptr)) {
				_case_begin_1a8299c5c:;
				{
					return _1a5494146_SupportsCloning(_1a5495334_Arr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1a5494883_Sptr(_18521__self) != nullptr)) {
				_case_begin_1a8299cc3:;
				{
					return _1a5494146_SupportsCloning(_1a5494883_Sptr(_18521__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1a5495a71_Struct(_18521__self) != nullptr)) {
				_case_begin_1a829a367:;
				{
					jule::Ptr<_1a487d575_StructIns> _20525_s = _1a5495a71_Struct(_18521__self);;
					return (((_20525_s.get()._field_Decl != nullptr) && (!(_20525_s.get()._field_Decl.get()._field_CppLinked))) && _1a484320a_IsDerives(_20525_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1a8299b19:;
				{
					return false;;
				}
			}
			_match_end_1a8299aa3:;
		};
	};
}



inline jule::Bool _1a54943aa_Variadicable(_1a5492287_TypeKind* _self_) {
	{
		_1a5492287_TypeKind* _21821__self = (&((*(_self_))));;
		return (_1a5495598_Slc(_21821__self) != nullptr);;
	};
}



inline jule::Ptr<_1a5496ed4_Prim> _1a549461e_Prim(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1a82982ee:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a5496ed4_Prim>(6);;
			}
		}
		else {
			_case_begin_1a8299443:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82993dd:;
	};
}



inline jule::Ptr<_1a549a768_Sptr> _1a5494883_Sptr(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1a82994cb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a549a768_Sptr>(7);;
			}
		}
		else {
			_case_begin_1a82a2a9a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a2ec9:;
	};
}



inline jule::Ptr<_1a549dccc_Ptr> _1a5494ae7_Ptr(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1a82a2b55:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a549dccc_Ptr>(12);;
			}
		}
		else {
			_case_begin_1a82a376b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a3b9a:;
	};
}



inline jule::Ptr<_1a53b8521_Enum> _1a5494d5b_Enum(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a82a3826:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a53b8521_Enum>(3);;
			}
		}
		else {
			_case_begin_1a82a443c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a486b:;
	};
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54950c0_TypeEnum(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a82a44e7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a53b9b1b_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1a82a510d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a553c:;
	};
}



inline jule::Ptr<_1a549d370_Arr> _1a5495334_Arr(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1a82a51b8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a549d370_Arr>(11);;
			}
		}
		else {
			_case_begin_1a82a5cce:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a620d:;
	};
}



inline jule::Ptr<_1a549b1c5_Slc> _1a5495598_Slc(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1a82a5d89:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a549b1c5_Slc>(8);;
			}
		}
		else {
			_case_begin_1a82a69a0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a6dce:;
	};
}



inline jule::Ptr<_1a53a717a_FnIns> _1a549580c_Fn(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1a82a6a5a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a53a717a_FnIns>(1);;
			}
		}
		else {
			_case_begin_1a82a7671:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a7aa0:;
	};
}



inline jule::Ptr<_1a487d575_StructIns> _1a5495a71_Struct(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a82a772b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a487d575_StructIns>(0);;
			}
		}
		else {
			_case_begin_1a82a8342:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a8771:;
	};
}



inline jule::Ptr<_1a53b63cb_Trait> _1a5495cd5_Trait(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1a82a83ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a53b63cb_Trait>(2);;
			}
		}
		else {
			_case_begin_1a82a9013:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82a9442:;
	};
}



inline jule::Ptr<_1a549c77b_Map> _1a5496049_Map(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1a82a90bd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a549c77b_Map>(10);;
			}
		}
		else {
			_case_begin_1a82a9bd4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82aa113:;
	};
}



inline jule::Ptr<_1a549bc53_Tuple> _1a54962ad_Tup(_1a5492287_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1a82a9c8e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1a549bc53_Tuple>(9);;
			}
		}
		else {
			_case_begin_1a82aa8a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1a82aacd4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a5492287_TypeKind _Src) {
	_Stream << _1a5492683_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1a5496a1c_checked(_1a5496665_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1a5496be8_removeKind(_1a5496665_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5496665_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5497347_Str(_1a5496ed4_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1a5497655_Equal(jule::Ptr<_1a5496ed4_Prim> _self_, jule::Ptr<_1a5492287_TypeKind> _37121_other) {
	jule::Ptr<_1a5496ed4_Prim> _37213_prim = _1a549461e_Prim(_37121_other.ptr());;
	if ((_37213_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _37213_prim.get()._field_Kind);;
}



inline jule::Bool _1a5497ac8_IsConstraint(_1a5496ed4_Prim* _self_) {
	return ((((!(_1a549a218_IsStr(_self_))) && (!(_1a549a47c_IsAny(_self_)))) && (!(_1a5499ea4_IsBool(_self_)))) && (!(_1a53899ba_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1a5497d3c_IsI8(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i8", 2));;
}



inline jule::Bool _1a54980a1_IsI16(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i16", 3));;
}



inline jule::Bool _1a5498315_IsI32(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i32", 3));;
}



inline jule::Bool _1a5498579_IsI64(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("i64", 3));;
}



inline jule::Bool _1a54987dd_IsU8(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u8", 2));;
}



inline jule::Bool _1a5498a52_IsU16(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u16", 3));;
}



inline jule::Bool _1a5498cb6_IsU32(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u32", 3));;
}



inline jule::Bool _1a549902a_IsU64(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("u64", 3));;
}



inline jule::Bool _1a549928e_IsF32(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("f32", 3));;
}



inline jule::Bool _1a5499503_IsF64(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("f64", 3));;
}



inline jule::Bool _1a5499767_IsInt(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("int", 3));;
}



inline jule::Bool _1a54999cb_IsUint(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("uint", 4));;
}



inline jule::Bool _1a5499c40_IsUintptr(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("uintptr", 7));;
}



inline jule::Bool _1a5499ea4_IsBool(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("bool", 4));;
}



inline jule::Bool _1a549a218_IsStr(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("str", 3));;
}



inline jule::Bool _1a549a47c_IsAny(_1a5496ed4_Prim* _self_) {
	return ((*(_self_))._field_Kind == jule::Str("any", 3));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5496ed4_Prim _Src) {
	_Stream << _1a5497347_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a549aacb_Str(_1a549a768_Sptr* _self_) {
	return (jule::Str("&", 1) + _1a5492683_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a549add9_Equal(jule::Ptr<_1a549a768_Sptr> _self_, jule::Ptr<_1a5492287_TypeKind> _44821_other) {
	jule::Ptr<_1a549a768_Sptr> _44913_sptr = _1a5494883_Sptr(_44821_other.ptr());;
	if ((_44913_sptr == nullptr)) {
		return false;;
	};
	return _1a5492991_Equal(_self_.get()._field_Elem, _44913_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549a768_Sptr _Src) {
	_Stream << _1a549aacb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a549b6d1_Str(_1a549b1c5_Slc* _self_) {
	return (jule::Str("[]", 2) + _1a5492683_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a549b9de_Equal(jule::Ptr<_1a549b1c5_Slc> _self_, jule::Ptr<_1a5492287_TypeKind> _46721_other) {
	jule::Ptr<_1a549b1c5_Slc> _46813_slc = _1a5495598_Slc(_46721_other.ptr());;
	if ((_46813_slc == nullptr)) {
		return false;;
	};
	return _1a5492991_Equal(_self_.get()._field_Elem, _46813_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549b1c5_Slc _Src) {
	_Stream << _1a549b6d1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a549c0b6_Str(_1a549bc53_Tuple* _self_) {
	jule::Str _48417_s = jule::Str("(", 1);;
	_48417_s+=_1a5492683_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a82b9c9e:;
		if (it != expr_end) {
			jule::Ptr<_1a5492287_TypeKind> *_48616_t = it;
			{
				_48417_s+=jule::Str(",", 1);
				_48417_s+=_1a5492683_Str((*(_48616_t)).ptr());
			}
			_iter_next_1a82b9c9e:;
			++it;
			goto _iter_begin_1a82b9c9e;
		}
		_iter_end_1a82b9c9e:;
	};
	_48417_s+=jule::Str(")", 1);
	return _48417_s;;
}



inline jule::Bool _1a549c3c4_Equal(jule::Ptr<_1a549bc53_Tuple> _self_, jule::Ptr<_1a5492287_TypeKind> _49521_other) {
	jule::Ptr<_1a549bc53_Tuple> _49613_tup = _1a54962ad_Tup(_49521_other.ptr());;
	if ((_49613_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _49613_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _50317_i = 0LL;;
	for (; (_50317_i < _self_.get()._field_Types.len()); (_50317_i)++) {
		{
			if ((!(_1a5492991_Equal(_self_.get()._field_Types[_50317_i], _49613_tup.get()._field_Types[_50317_i])))) {
				return false;;
			};
		}
	_iter_next_1a82bc7b8:;
	}
	_iter_end_1a82bc7b8:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549bc53_Tuple _Src) {
	_Stream << _1a549c0b6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a549cade_Str(_1a549c77b_Map* _self_) {
	jule::Str _52317_s = jule::Str("[", 1);;
	_52317_s+=_1a5492683_Str((*(_self_))._field_Key.ptr());
	_52317_s+=jule::Str(":", 1);
	_52317_s+=_1a5492683_Str((*(_self_))._field_Val.ptr());
	_52317_s+=jule::Str("]", 1);
	return _52317_s;;
}



inline jule::Bool _1a549cdec_Equal(jule::Ptr<_1a549c77b_Map> _self_, jule::Ptr<_1a5492287_TypeKind> _53221_other) {
	jule::Ptr<_1a549c77b_Map> _53313_m = _1a5496049_Map(_53221_other.ptr());;
	if ((_53313_m == nullptr)) {
		return false;;
	};
	return (_1a5492991_Equal(_self_.get()._field_Key, _53313_m.get()._field_Key) && _1a5492991_Equal(_self_.get()._field_Val, _53313_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549c77b_Map _Src) {
	_Stream << _1a549cade_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a549d6d3_Str(_1a549d370_Arr* _self_) {
	jule::Str _55117_s = jule::Str("[", 1);;
	_55117_s+=_1a5382dd1_Itoa((*(_self_))._field_N);
	_55117_s+=jule::Str("]", 1);
	_55117_s+=_1a5492683_Str((*(_self_))._field_Elem.ptr());
	return _55117_s;;
}



inline jule::Bool _1a549d9e1_Equal(jule::Ptr<_1a549d370_Arr> _self_, jule::Ptr<_1a5492287_TypeKind> _55921_other) {
	jule::Ptr<_1a549d370_Arr> _56013_arr = _1a5495334_Arr(_55921_other.ptr());;
	if ((_56013_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _56013_arr.get()._field_N) && _1a5492991_Equal(_self_.get()._field_Elem, _56013_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549d370_Arr _Src) {
	_Stream << _1a549d6d3_Str(&_Src);
	return _Stream;
}



inline jule::Str _1a549e140_Str(_1a549dccc_Ptr* _self_) {
	if (_1a549e7a0_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1a5492683_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1a549e44d_Equal(jule::Ptr<_1a549dccc_Ptr> _self_, jule::Ptr<_1a5492287_TypeKind> _58321_other) {
	jule::Ptr<_1a549dccc_Ptr> _58413_ptr = _1a5494ae7_Ptr(_58321_other.ptr());;
	if ((_58413_ptr == nullptr)) {
		return false;;
	};
	return _1a5492991_Equal(_self_.get()._field_Elem, _58413_ptr.get()._field_Elem);;
}



inline jule::Bool _1a549e7a0_IsUnsafe(_1a549dccc_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549dccc_Ptr _Src) {
	_Stream << _1a549e140_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a549ec23_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1a54a130c_pushErr(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1ceee8973_Token> _66926_token, jule::Str _66941_fmt, jule::Slice<jule::Any> _66954_args) {
	_1a53ed600_pushErr((*(_self_))._field_s.ptr(), _66926_token, _66941_fmt, _66954_args);
}



inline void _1a54a14d8_allowBuiltin(_1a54a0b03_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1a54a16b4_disallowBuiltin(_1a54a0b03_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Ptr<_1a5496ed4_Prim> _1a54a19c2_buildPrim(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _68129_decl) {
	if ((!(_1a54aaab9_isPrim((*(_68129_decl)).get()._field_Ident)))) {
		_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_68129_decl)).get()._field_Generics.len() > 0LL)) {
		_1a54a130c_pushErr(_self_, (*(_68129_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_68129_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return _1a54aa57a_buildPrimType((*(_68129_decl)).get()._field_Ident);;
}



inline void _1a82cb8b5_pushReference(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a487d575_StructIns>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a8066991_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_1a53aac94_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type9));
}

inline void _1a82ce742_pushReference(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a53b63cb_Trait>* _69540_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a82d139d_Exist((*(_self_))._field_refers.ptr(), (*(_69540_t)))) {
		return;;
	};
	_1a53aac94_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_69540_t)), &__jule_any_type10));
}



inline void _1a54a1ebc_pushReferenceByKind(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a5492287_TypeKind>* _70543_k) {
	{
		
		if ((_1a5495a71_Struct((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_1a82ca573:;
			{
				jule::Ptr<_1a487d575_StructIns> _70821_t = _1a5495a71_Struct((*(_70543_k)).ptr());;
				_1a82cb8b5_pushReference(_self_, &(_70821_t));
			}
		}
		else if ((_1a5495cd5_Trait((*(_70543_k)).ptr()) != nullptr)) {
			_case_begin_1a82ca5ea:;
			{
				jule::Ptr<_1a53b63cb_Trait> _71121_t = _1a5495cd5_Trait((*(_70543_k)).ptr());;
				_1a82ce742_pushReference(_self_, &(_71121_t));
			}
		}
		_match_end_1a82ca463:;
	};
}



inline void _1a54a2385_pushCycleError(_1a54a0b03_typeChecker* _self_, jule::Any _71629_def1, jule::Any _71640_def2, jule::Str* _71656_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _71813_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _71828_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_71828_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1a82d48bd:;
				{
					return (*(_71828_def)).cast_ptr<_1a5491594_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1a82d4934:;
				{
					return (*(_71828_def)).cast_ptr<_1a487d19b_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1a82d4280:;
				{
					return jule::Str();;
				}
			}
			_match_end_1a82d41a3:;
		};
	});;
	jule::Str _72813_def1Ident = _71813_getIdent(&(_71629_def1));;
	jule::Str _72913_def2Ident = _71813_getIdent(&(_71640_def2));;
	jule::Str _73013_refersTo = _1ceb4996a_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_72813_def1Ident, &__jule_any_type5),jule::Any(_72913_def2Ident, &__jule_any_type5)}));;
	((*(_71656_message))).buffer.insert(0, (((_1ceaa53cb_Repeat(jule::Str(" ", 1), 4LL) + _73013_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1a54a273c_checkCrossCycle(_1a54a0b03_typeChecker* _self_, jule::Any _73430_decl, jule::Str* _73446_message) {
	{
		auto &_match_expr{ _73430_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a82d6a35:;
			{
				jule::Ptr<_1a5491594_TypeAlias> _73717_ta = _73430_decl.cast_ptr<_1a5491594_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_73717_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a82d74e7:;
					if (it != expr_end) {
						jule::Any *_73820_d = it;
						{
							{
								
								if (((*(_73820_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1a82d81da:;
									{
										_1a54a2385_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								else if ((!(_1a54a273c_checkCrossCycle(_self_, (*(_73820_d)), _73446_message)))) {
									_case_begin_1a82d8262:;
									{
										_1a54a2385_pushCycleError(_self_, jule::Any(_73717_ta, &__jule_any_type67), (*(_73820_d)), _73446_message);
										return false;;
									}
								}
								_match_end_1a82d80ca:;
							};
						}
						_iter_next_1a82d74e7:;
						++it;
						goto _iter_begin_1a82d74e7;
					}
					_iter_end_1a82d74e7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a82d6a9b:;
			{
				jule::Ptr<_1a487d19b_Struct> _74917_s = _73430_decl.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_74917_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a82d89d2:;
					if (it != expr_end) {
						jule::Ptr<_1a487d19b_Struct> *_75020_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_75020_d))))) {
									_case_begin_1a82da4b7:;
									{
										_1a54a2385_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								else if ((!(_1a54a273c_checkCrossCycle(_self_, jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message)))) {
									_case_begin_1a82da53e:;
									{
										_1a54a2385_pushCycleError(_self_, jule::Any(_74917_s, &__jule_any_type66), jule::Any((*(_75020_d)), &__jule_any_type66), _73446_message);
										return false;;
									}
								}
								_match_end_1a82da3a7:;
							};
						}
						_iter_next_1a82d89d2:;
						++it;
						goto _iter_begin_1a82d89d2;
					}
					_iter_end_1a82d89d2:;
				};
			}
		}
		_match_end_1a82d6947:;
	};
	return true;;
}



inline jule::Bool _1a54a2ae4_checkIllegalCycles(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _76838_ident, jule::Any _76865_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _76865_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a82da176:;
			{
				if (((*(_self_))._field_notPlain || _76865_decl.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66).get()._field_CppLinked)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a82dc3dc:;
			{
				if (_76865_decl.cast_ptr<_1a5491594_TypeAlias>(&__jule_any_type67).get()._field_CppLinked) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a82da022:;
	};
	if ((_76865_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1a54a130c_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _79117_message = jule::Str();;
	if ((!(_1a54a273c_checkCrossCycle(_self_, _76865_decl, &(_79117_message))))) {
		jule::Str _79421_errMsg = _79117_message;;
		_79117_message=jule::Str();
		_1a54a2385_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _76865_decl, &(_79117_message));
		_79421_errMsg+=_79117_message;
		_1a54a130c_pushErr(_self_, (*(_76838_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_79421_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a82de8a6:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_76865_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a82de92d:;
			{
				{
					auto &_match_expr{ _76865_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a82e1a2e:;
						{
							jule::Ptr<_1a487d19b_Struct> _81025_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66);;
							_81025_s.get()._field_Depends = jule::alloc_for_append(_81025_s.get()._field_Depends,1);_81025_s.get()._field_Depends.__push(_76865_decl.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_1a82e1941:;
				};
			}
		}
		_match_end_1a82e1259:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1a5491d58_Kind> _1a54a2e9b_fromTypeAlias(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _81833_decl, jule::Ptr<_1a5491594_TypeAlias>* _81860_ta) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_81860_ta)).get()._field_Public, (*(_81860_ta)).get()._field_Token)))) {
		_1a54a130c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_81860_ta)).get()._field_Used=true;
	if (((*(_81833_decl)).get()._field_Generics.len() > 0LL)) {
		_1a54a130c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a82e5dda:;
			if (it != expr_end) {
				jule::Ptr<_1a5491594_TypeAlias> _83520_bg = *it;
				{
					if (((_83520_bg == (*(_81860_ta))) || (((*(_81860_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1a5492991_Equal((*(_81860_ta)).get()._field_Kind.get()._field_Kind, _83520_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a82e5dda;
					};
				}
				_iter_next_1a82e5dda:;
				++it;
				goto _iter_begin_1a82e5dda;
			}
			_iter_end_1a82e5dda:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a82e6737:;
			if (it != expr_end) {
				jule::Ptr<_1a5491594_TypeAlias> _84620_bg = *it;
				{
					if ((_84620_bg == (*(_81860_ta)))) {
						_1a54a130c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_81860_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a82e8816:;
						if (it != expr_end) {
							jule::Ptr<_1a5491594_TypeAlias> _85124_dg = *it;
							{
								if ((_84620_bg == _85124_dg)) {
									_1a54a130c_pushErr(_self_, (*(_81833_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_81833_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1a82e8816:;
							++it;
							goto _iter_begin_1a82e8816;
						}
						_iter_end_1a82e8816:;
					};
				}
				_iter_next_1a82e6737:;
				++it;
				goto _iter_begin_1a82e6737;
			}
			_iter_end_1a82e6737:;
		};
	};
	jule::Bool _86017_ok = _1a54a2ae4_checkIllegalCycles(_self_, _81833_decl, jule::Any((*(_81860_ta)), &__jule_any_type67));;
	if ((!(_86017_ok))) {
		return nullptr;;
	};
	if (((*(_81860_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_86017_ok=_1a54087b4_checkTypeAliasDeclKind((*(_self_))._field_s, _81860_ta, (*(_self_))._field_lookup);
		if ((!(_86017_ok))) {
			return nullptr;;
		};
	};
	if (((*(_81860_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_81860_ta)));;
	};
	jule::Ptr<_1a5492287_TypeKind> _87917_tk = jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Generic=(*(_81860_ta)).get()._field_Generic, ._field_Kind=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1a54a1ebc_pushReferenceByKind(_self_, &(_87917_tk));
	if ((*(_81860_ta)).get()._field_CppLinked) {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Ident;
	} else {
		_87917_tk.get()._field_CppIdent=(*(_81860_ta)).get()._field_Kind.get()._field_Kind.get()._field_CppIdent;
	};
	return jule::Trait<_1a5491d58_Kind>(_87917_tk, 5);;
}



inline jule::Ptr<_1a53b8521_Enum> _1a54a3353_fromEnum(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _89228_decl, jule::Ptr<_1a53b8521_Enum>* _89255_e) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_89255_e)).get()._field_Public, (*(_89255_e)).get()._field_Token)))) {
		_1a54a130c_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89228_decl)).get()._field_Generics.len() > 0LL)) {
		_1a54a130c_pushErr(_self_, (*(_89228_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_89228_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_89255_e));;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a54a370a_fromTypeEnum(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _90432_decl, jule::Ptr<_1a53b9b1b_TypeEnum>* _90459_e) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_90459_e)).get()._field_Public, (*(_90459_e)).get()._field_Token)))) {
		_1a54a130c_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90432_decl)).get()._field_Generics.len() > 0LL)) {
		_1a54a130c_pushErr(_self_, (*(_90432_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_90432_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_90459_e));;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a54a3ab2_fromTrait(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _91629_decl, jule::Ptr<_1a53b63cb_Trait>* _91656_t) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_91656_t)).get()._field_Public, (*(_91656_t)).get()._field_Token)))) {
		_1a54a130c_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91629_decl)).get()._field_Generics.len() > 0LL)) {
		_1a54a130c_pushErr(_self_, (*(_91629_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_91629_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1a82ce742_pushReference(_self_, _91656_t);
	return (*(_91656_t));;
}



inline jule::Bool _1a54a3e69_checkStructIns(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a487d575_StructIns>* _92938_ins, jule::Ptr<_1ceee8973_Token>* _92960_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_92938_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_92938_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_92938_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1a5412944_precheckStructIns((*(_self_))._field_s, _92938_ins, (*(_92960_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_92938_ins)).get()._field_Generics.len() > 0LL)) {
		_1a54133b2_checkStructInsOperators((*(_self_))._field_s, (*(_92938_ins)));
		_1a5412bb9_checkStructIns((*(_self_))._field_s, _92938_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1a54a4211_appendUsedStructReference(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a487d19b_Struct>* _95049_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8309294:;
			{
				jule::Ptr<_1a487d19b_Struct> _95621_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1a487d19b_Struct>(&__jule_any_type66);;
				if ((!(_1a48471cb_IsUses(_95621_refS.ptr(), (*(_95049_s)))))) {
					_95621_refS.get()._field_Uses = jule::alloc_for_append(_95621_refS.get()._field_Uses,1);_95621_refS.get()._field_Uses.__push((*(_95049_s)));;
				};
			}
		}
		_match_end_1a830923e:;
	};
}



inline jule::Ptr<_1a487d575_StructIns> _1a54a45c9_buildStructInstance(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _96343_decl, jule::Ptr<_1a487d19b_Struct>* _96370_s) {
	jule::Ptr<_1a549ec23_referencer> _96517_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1a5491594_TypeAlias>> _96717_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a830bd68:;
				{
					jule::Ptr<_1a53cab4e_scopeChecker> _97425_sc = (*(_self_))._field_lookup.cast_ptr<_1a53cab4e_scopeChecker>(0);;
					jule::Ptr<_1a53cab4e_scopeChecker> _97525_hard = _1a53ce009_getHardRoot(_97425_sc);;
					if (((_97525_hard.get()._field_owner.get()._field_Owner == nullptr) || (_97525_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_96370_s))))) {
						goto _match_end_1a830bd13;
					};
					jule::I64 _97921_n = (_97525_hard.get()._field_owner.get()._field_Generics.len() + _97525_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_97525_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _97921_n);
				}
			}
			_match_end_1a830bd13:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1a54ad209_Lookup> _98917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1a487d575_StructIns> _99317_ins = _1a483994e_instance((*(_96370_s)));;
	_99317_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1a5490a5a_InsGeneric>>::alloc(0LL, (*(_96343_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_96343_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8311169:;
		if (it != expr_end) {
			jule::Ptr<_1a48619a9_TypeDecl> _99521_g = *it;
			{
				jule::Ptr<_1a5492287_TypeKind> _99621_kind = _1a54a7a61_build(_self_, &(_99521_g.get()._field_Kind));;
				if ((_99621_kind == nullptr)) {
					return nullptr;;
				};
				_99317_ins.get()._field_Generics = jule::alloc_for_append(_99317_ins.get()._field_Generics,1);_99317_ins.get()._field_Generics.__push(jule::new_ptr<_1a5490a5a_InsGeneric>(_1a5490a5a_InsGeneric{._field_Kind=_99621_kind, }));;
			}
			_iter_next_1a8311169:;
			++it;
			goto _iter_begin_1a8311169;
		}
		_iter_end_1a8311169:;
	};
	(*(_self_))._field_lookup=_98917_lookup;
	(*(_self_))._field_bannedGenerics=_96717_bannedGenerics;
	(*(_self_))._field_referencer=_96517_referencer;
	return _99317_ins;;
}



inline jule::Ptr<_1a487d575_StructIns> _1a54a4981_fromStruct(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _101134_decl, jule::Ptr<_1a487d19b_Struct>* _101161_s) {
	if ((!(_1a53edcc6_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_101161_s)).get()._field_Public, (*(_101161_s)).get()._field_Token)))) {
		_1a54a130c_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_101134_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_101134_decl)).get()._field_Generics.len() > 0LL)) {
			_1a54a130c_pushErr(_self_, (*(_101134_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1a487d575_StructIns>(_1a487d575_StructIns{._field_Decl=(*(_101161_s)), });;
	};
	jule::Bool _102917_ok = ((*(_self_))._field_notPlain || _1a54a2ae4_checkIllegalCycles(_self_, _101134_decl, jule::Any((*(_101161_s)), &__jule_any_type66)));;
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	_1a54a4211_appendUsedStructReference(_self_, _101161_s);
	jule::Ptr<_1a487d575_StructIns> _103517_ins = _1a54a45c9_buildStructInstance(_self_, _101134_decl, _101161_s);;
	if ((_103517_ins == nullptr)) {
		return nullptr;;
	};
	_102917_ok=_1a53ee997_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_103517_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_103517_ins.get()._field_Generics.len()), (*(_101134_decl)).get()._field_Token);
	if ((!(_102917_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1a487d575_StructIns> _104517_existInstance = _1a483d722_appendInstance((*(_101161_s)).ptr(), &(_103517_ins));;
	if ((_104517_existInstance != nullptr)) {
		if ((!(_1a5406e66_checkConstraintsStruct((*(_self_))._field_s, &(_103517_ins), &((*(_101134_decl)).get()._field_Token), _104517_existInstance)))) {
			return nullptr;;
		};
		_1a82cb8b5_pushReference(_self_, &(_104517_existInstance));
		return _104517_existInstance;;
	};
	if ((!(_1a54a3e69_checkStructIns(_self_, &(_103517_ins), &((*(_101134_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1a82cb8b5_pushReference(_self_, &(_103517_ins));
	return _103517_ins;;
}



inline jule::Trait<_1a5491d58_Kind> _1a54a4c8e_getDef(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl>* _106930_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a831a4a3:;
		if (it != expr_end) {
			jule::Ptr<_1a486dca2_GenericDecl> _107016_g = *it;
			{
				if ((_107016_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					return jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(_107016_g.get()._field_Ident), 6);;
				};
			}
			_iter_next_1a831a4a3:;
			++it;
			goto _iter_begin_1a831a4a3;
		}
		_iter_end_1a831a4a3:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a831a63a:;
		if (it != expr_end) {
			jule::Ptr<_1a5491594_TypeAlias> _107621_g = *it;
			{
				if ((_107621_g.get()._field_Ident == (*(_106930_decl)).get()._field_Ident)) {
					if (((*(_106930_decl)).get()._field_Generics.len() > 0LL)) {
						_1a54a130c_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("type @ not supports generics", 28), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1a487d575_StructIns> _108225_st = _1a5495a71_Struct(_107621_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_108225_st != nullptr)) {
						jule::Bool _108425_ok = _1a54a2ae4_checkIllegalCycles(_self_, _106930_decl, jule::Any(_108225_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_108425_ok))) {
							return nullptr;;
						};
					};
					return _107621_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1a831a63a:;
			++it;
			goto _iter_begin_1a831a63a;
		}
		_iter_end_1a831a63a:;
	};
	if ((!((*(_106930_decl)).get()._field_CppLinked))) {
		jule::Ptr<_1a53b8521_Enum> _109421_e = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54acca8_FindEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109421_e != nullptr)) {
			return jule::Trait<_1a5491d58_Kind>(_1a54a3353_fromEnum(_self_, _106930_decl, &(_109421_e)), 3);;
		};
		jule::Ptr<_1a53b9b1b_TypeEnum> _109921_te = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ad0b6_FindTypeEnum((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_109921_te != nullptr)) {
			return jule::Trait<_1a5491d58_Kind>(_1a54a370a_fromTypeEnum(_self_, _106930_decl, &(_109921_te)), 4);;
		};
		jule::Ptr<_1a53b63cb_Trait> _110421_t = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ac99a_FindTrait((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident);;
		if ((_110421_t != nullptr)) {
			return jule::Trait<_1a5491d58_Kind>(_1a54a3ab2_fromTrait(_self_, _106930_decl, &(_110421_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1a54a130c_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("cpp-linked definitions are not allowed in this scope", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a487d19b_Struct> _111317_s = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ac2d5_FindStruct((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if ((_111317_s != nullptr)) {
		return jule::Trait<_1a5491d58_Kind>(_1a54a4981_fromStruct(_self_, _106930_decl, &(_111317_s)), 0);;
	};
	jule::Ptr<_1a5491594_TypeAlias> _111817_ta = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54abe2d_FindTypeAlias((*(_self_))._field_lookup, (*(_106930_decl)).get()._field_Ident, (*(_106930_decl)).get()._field_CppLinked);;
	if (((_111817_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_111817_ta=_1a4c3d0d8_findBuiltinTypeAlias((*(_106930_decl)).get()._field_Ident);
	};
	if ((_111817_ta != nullptr)) {
		return _1a54a2e9b_fromTypeAlias(_self_, _106930_decl, &(_111817_ta));;
	};
	_1a54a130c_pushErr(_self_, (*(_106930_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106930_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1a5491d58_Kind> _1a54a509c_buildIdent(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862070_IdentTypeDecl> _113033_decl) {
	{
		
		if (_1a54aaab9_isPrim(_113033_decl.get()._field_Ident)) {
			_case_begin_1a8326190:;
			{
				return jule::Trait<_1a5491d58_Kind>(_1a54a19c2_buildPrim(_self_, &(_113033_decl)), 6);;
			}
		}
		else {
			_case_begin_1a8325997:;
			{
				return _1a54a4c8e_getDef(_self_, &(_113033_decl));;
			}
		}
		_match_end_1a83258cb:;
	};
}



inline jule::Trait<_1a5491d58_Kind> _1a54a53aa_buildSubIdent(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a48626be_SubIdentTypeDecl> _113936_decl) {
	jule::Trait<_1a5491d58_Kind> _114017_ident = _1a54a509c_buildIdent(_self_, _113936_decl.get()._field_Idents[0LL]);;
	if ((_114017_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _114017_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a8327966:;
			{
				goto _match_end_1a8327878;
			}
		}
		else {
			_case_begin_1a8327746:;
			{
				_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8327878:;
	};
	jule::Ptr<_1a53b9b1b_TypeEnum> _115117_t = _114017_ident.cast_ptr<_1a53b9b1b_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1a4862070_IdentTypeDecl>> _115217_idents = _113936_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_115217_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8328d1e:;
		if (it != expr_end) {
			jule::I64 _115313_i = it - expr->begin();
			jule::Ptr<_1a4862070_IdentTypeDecl> _115316_id = *it;
			{
				jule::Ptr<_1a53b9555_TypeEnumItem> _115421_item = _1a53ba655_FindItem(_115117_t.ptr(), _115316_id.get()._field_Ident);;
				if ((_115421_item == nullptr)) {
					_1a54a130c_pushErr(_self_, _115316_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_115117_t.get()._field_Ident, &__jule_any_type5),jule::Any(_115316_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_115217_idents.len() - _115313_i) == 1LL)) {
					_1a54a1ebc_pushReferenceByKind(_self_, &(_115421_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1a5491d58_Kind>(_115421_item.get()._field_Kind.get()._field_Kind, 5);;
				};
				_115117_t=_1a54950c0_TypeEnum(_115421_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_115117_t == nullptr)) {
					_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a8328d1e:;
			++it;
			_115313_i++;
			goto _iter_begin_1a8328d1e;
		}
		_iter_end_1a8328d1e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a549a768_Sptr> _1a54a56b8_buildSptrFromType(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a5492287_TypeKind>* _117341_elem) {
	{
		
		if (((*(_117341_elem)) == nullptr)) {
			_case_begin_1a832ca9d:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5495a71_Struct((*(_117341_elem)).ptr()) != nullptr)) {
			_case_begin_1a832cb25:;
			{
				jule::Ptr<_1a487d575_StructIns> _117917_s = _1a5495a71_Struct((*(_117341_elem)).ptr());;
				if (((_117917_s.get()._field_Decl != nullptr) && _117917_s.get()._field_Decl.get()._field_CppLinked)) {
					_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1a5495334_Arr((*(_117341_elem)).ptr()) != nullptr) && _1a5495334_Arr((*(_117341_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1a832cb9c:;
			{
				_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a832c21d:;
	};
	return jule::new_ptr<_1a549a768_Sptr>(_1a549a768_Sptr{._field_Elem=(*(_117341_elem))});;
}



inline jule::Ptr<_1a549a768_Sptr> _1a54a59c6_buildSptr(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862d62_SptrTypeDecl> _119332_decl) {
	jule::Bool _119413_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_119413_notPlain;
	});;
	jule::Ptr<_1a5492287_TypeKind> _119817_elem = _1a54a7d6e_checkDecl(_self_, &(_119332_decl.get()._field_Elem));;
	return _1a54a56b8_buildSptrFromType(_self_, &(_119817_elem));;
}



inline jule::Ptr<_1a549dccc_Ptr> _1a54a5cd4_buildPtrFromType(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a5492287_TypeKind>* _120240_elem) {
	{
		
		if (((*(_120240_elem)) == nullptr)) {
			_case_begin_1a8332861:;
			{
				return nullptr;;
			}
		}
		else if (((_1a5495334_Arr((*(_120240_elem)).ptr()) != nullptr) && _1a5495334_Arr((*(_120240_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1a83328d8:;
			{
				_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1a549dccc_Ptr>();;
			}
		}
		_match_end_1a8332751:;
	};
	return jule::new_ptr<_1a549dccc_Ptr>(_1a549dccc_Ptr{._field_Elem=(*(_120240_elem))});;
}



inline jule::Ptr<_1a549dccc_Ptr> _1a54a60e2_buildPtr(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4863835_PtrTypeDecl> _121731_decl) {
	jule::Bool _121813_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_121813_notPlain;
	});;
	jule::Ptr<_1a5492287_TypeKind> _122217_elem = nullptr;;
	if ((!(_1a4863b87_IsUnsafe(_121731_decl.ptr())))) {
		_122217_elem=_1a54a7d6e_checkDecl(_self_, &(_121731_decl.get()._field_Elem));
		return _1a54a5cd4_buildPtrFromType(_self_, &(_122217_elem));;
	};
	return jule::new_ptr<_1a549dccc_Ptr>(_1a549dccc_Ptr{._field_Elem=_122217_elem});;
}



inline jule::Ptr<_1a549b1c5_Slc> _1a54a6400_buildSlc(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a486325d_SlcTypeDecl> _123431_decl) {
	jule::Bool _123513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_123513_notPlain;
	});;
	jule::Ptr<_1a5492287_TypeKind> _123917_elem = _1a54a7d6e_checkDecl(_self_, &(_123431_decl.get()._field_Elem));;
	{
		
		if ((_123917_elem == nullptr)) {
			_case_begin_1a8337800:;
			{
				return nullptr;;
			}
		}
		else if (((_1a5495334_Arr(_123917_elem.ptr()) != nullptr) && _1a5495334_Arr(_123917_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a8337877:;
			{
				_1a54a130c_pushErr(_self_, _123431_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8337745:;
	};
	return jule::new_ptr<_1a549b1c5_Slc>(_1a549b1c5_Slc{._field_Elem=_123917_elem});;
}



inline jule::Ptr<_1a549d370_Arr> _1a54a670d_buildArr(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4863eb7_ArrTypeDecl> _125531_decl) {
	jule::Bool _125613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_125613_notPlain;
	});;
	jule::I64 _126017_n = 0LL;;
	if ((!(_1a4864391_AutoSized(_125531_decl.ptr())))) {
		jule::Ptr<_1a5466305_Data> _126321_size = _1a5483795_evalExpr(_1a5404edb_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _125531_decl.get()._field_Size);;
		if ((_126321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1a5466bb8_IsConst(_126321_size.ptr())))) {
			_1a54a130c_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a549461e_Prim(_126321_size.get()._field_Kind.ptr()) == nullptr) || (!(_1a5389404_IsInt(_1a549461e_Prim(_126321_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1a54a130c_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_126017_n=static_cast<jule::I64>(static_cast<jule::I64>(_1a538c4d4_AsI64(_126321_size.get()._field_Constant.ptr())));
		if ((_126017_n < 0LL)) {
			_1a54a130c_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1a4791c19_BitSize != 64LL) && (static_cast<jule::F64>(_126017_n) > _1a538649a_Max(jule::Str("int", 3))))) {
			_1a54a130c_pushErr(_self_, _125531_decl.get()._field_Size.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1a5492287_TypeKind> _128617_elem = _1a54a7d6e_checkDecl(_self_, &(_125531_decl.get()._field_Elem));;
	{
		
		if ((_128617_elem == nullptr)) {
			_case_begin_1a8340c6a:;
			{
				return nullptr;;
			}
		}
		else if (((_1a5495334_Arr(_128617_elem.ptr()) != nullptr) && _1a5495334_Arr(_128617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a8340cd1:;
			{
				_1a54a130c_pushErr(_self_, _125531_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8340a6c:;
	};
	return jule::new_ptr<_1a549d370_Arr>(_1a549d370_Arr{._field_Auto=_1a4864391_AutoSized(_125531_decl.ptr()), ._field_N=_126017_n, ._field_Elem=_128617_elem});;
}



inline jule::Ptr<_1a549c77b_Map> _1a54a6a1b_buildMap(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4864715_MapTypeDecl> _130431_decl) {
	jule::Bool _130513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_130513_notPlain;
	});;
	jule::Ptr<_1a5492287_TypeKind> _130917_key = _1a54a7d6e_checkDecl(_self_, &(_130431_decl.get()._field_Key));;
	if ((_130917_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a5492287_TypeKind> _131417_val = _1a54a7d6e_checkDecl(_self_, &(_130431_decl.get()._field_Val));;
	if ((_131417_val == nullptr)) {
		return nullptr;;
	};
	if ((_1a5494d5b_Enum(_131417_val.ptr()) != nullptr)) {
		_1a54a130c_pushErr(_self_, _130431_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1a549c77b_Map>(_1a549c77b_Map{._field_Key=_130917_key, ._field_Val=_131417_val});;
}



inline jule::Ptr<_1a549bc53_Tuple> _1a54a6d29_buildTuple(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4863549_TupleTypeDecl> _132833_decl) {
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _132917_types = jule::Slice<jule::Ptr<_1a5492287_TypeKind>>::alloc(0LL, _132833_decl.get()._field_Types.len());;
	{
		auto expr = &(_132833_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8346710:;
		if (it != expr_end) {
			jule::Ptr<_1a48619a9_TypeDecl> _133021_t = *it;
			{
				jule::Ptr<_1a5492287_TypeKind> _133121_kind = _1a54a7d6e_checkDecl(_self_, &(_133021_t));;
				if ((_133121_kind == nullptr)) {
					return nullptr;;
				};
				_132917_types = jule::alloc_for_append(_132917_types,1);_132917_types.__push(_133121_kind);;
			}
			_iter_next_1a8346710:;
			++it;
			goto _iter_begin_1a8346710;
		}
		_iter_end_1a8346710:;
	};
	return jule::new_ptr<_1a549bc53_Tuple>(_1a549bc53_Tuple{._field_Types=_132917_types});;
}



inline jule::Bool _1a54a7137_checkFnTypes(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a53a717a_FnIns>* _134136_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_134136_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83480c4:;
		if (it != expr_end) {
			jule::Ptr<_1a53a62ab_ParamIns> _134221_p = *it;
			{
				_134221_p.get()._field_Kind=_1a54a7a61_build(_self_, &(_134221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_134221_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1a5407593_checkFnParamKind((*(_self_))._field_s, &(_134221_p));
			}
			_iter_next_1a83480c4:;
			++it;
			goto _iter_begin_1a83480c4;
		}
		_iter_end_1a83480c4:;
	};
	if ((!(_1a53a493b_IsVoid((*(_134136_f)).get()._field_Decl.ptr())))) {
		(*(_134136_f)).get()._field_Result=_1a54a7a61_build(_self_, &((*(_134136_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_134136_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1a53a717a_FnIns> _1a54a7445_buildFn(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4873438_FnDecl> _135930_decl) {
	if ((_135930_decl.get()._field_Generics.len() > 0LL)) {
		_1a54a130c_pushErr(_self_, _135930_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a53a44c9_Fn> _136517_f = _1a53ad307_buildFn(_135930_decl);;
	jule::I64 _136713_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1a540e4ac_checkFnDecl((*(_self_))._field_s, &(_136517_f));
	if ((_136713_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1a53a717a_FnIns> _137317_ins = _1a53a58b5_instanceForce(_136517_f);;
	_137317_ins.get()._field_Anon=true;
	jule::Bool _137613_ok = _1a54a7137_checkFnTypes(_self_, &(_137317_ins));;
	if ((!(_137613_ok))) {
		return nullptr;;
	};
	return _137317_ins;;
}



inline jule::Trait<_1a5491d58_Kind> _1a54a7753_buildByNamespace(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a4862a76_NamespaceTypeDecl> _138439_decl) {
	jule::Str _138513_path = _1a54aa1c3_buildLinkPathByTokens(&(_138439_decl.get()._field_Idents));;
	jule::Ptr<_1a53e27e2_ImportInfo> _138617_imp = _1a54ad209_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1a54ab6be_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1a53e27e2_ImportInfo>)>([=](jule::Ptr<_1a53e27e2_ImportInfo> _138652_imp) mutable -> jule::Bool {
		if (((_138439_decl.get()._field_Idents.len() == 1LL) && (_138652_imp.get()._field_Alias == _138513_path))) {
			return true;;
		};
		return ((_138652_imp.get()._field_LinkPath == _138513_path) && _1a53e544e_isAccessibleViaSelection(_138652_imp.ptr()));;
	}));;
	if (((_138617_imp == nullptr) || (!(_1a53e4daa_isLookupable(_138617_imp.ptr(), jule::Str("self", 4)))))) {
		_1a54a130c_pushErr(_self_, _138439_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_138513_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1a54a16b4_disallowBuiltin(_self_);
	jule::Trait<_1a54ad209_Lookup> _139917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1a54ad209_Lookup>(_138617_imp, 1);
	jule::Ptr<_1a5492287_TypeKind> _140117_kind = _1a54a7d6e_checkDecl(_self_, &(_138439_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_139917_lookup;
	_1a54a14d8_allowBuiltin(_self_);
	return jule::Trait<_1a5491d58_Kind>(_140117_kind, 5);;
}



inline jule::Ptr<_1a5492287_TypeKind> _1a54a7a61_build(_1a54a0b03_typeChecker* _self_, jule::Any* _140729_declKind) {
	jule::Trait<_1a5491d58_Kind> _140817_kind = nullptr;;
	{
		auto &_match_expr{ (*(_140729_declKind)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a8354ab4:;
			{
				jule::Trait<_1a5491d58_Kind> _141121_t = _1a54a509c_buildIdent(_self_, (*(_140729_declKind)).cast_ptr<_1a4862070_IdentTypeDecl>(&__jule_any_type19));;
				if ((_141121_t != nullptr)) {
					_140817_kind=_141121_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a8355862:;
			{
				jule::Trait<_1a5491d58_Kind> _141621_t = _1a54a53aa_buildSubIdent(_self_, (*(_140729_declKind)).cast_ptr<_1a48626be_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_141621_t != nullptr)) {
					_140817_kind=_141621_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a83558c8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a549a768_Sptr> _142221_t = _1a54a59c6_buildSptr(_self_, (*(_140729_declKind)).cast_ptr<_1a4862d62_SptrTypeDecl>(&__jule_any_type79));;
				if ((_142221_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_142221_t, 7);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a835506a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a549dccc_Ptr> _142821_t = _1a54a60e2_buildPtr(_self_, (*(_140729_declKind)).cast_ptr<_1a4863835_PtrTypeDecl>(&__jule_any_type78));;
				if ((_142821_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_142821_t, 12);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a83550d1:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a549b1c5_Slc> _143421_t = _1a54a6400_buildSlc(_self_, (*(_140729_declKind)).cast_ptr<_1a486325d_SlcTypeDecl>(&__jule_any_type77));;
				if ((_143421_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_143421_t, 8);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a8355147:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a549d370_Arr> _144021_t = _1a54a670d_buildArr(_self_, (*(_140729_declKind)).cast_ptr<_1a4863eb7_ArrTypeDecl>(&__jule_any_type76));;
				if ((_144021_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_144021_t, 11);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a83551ad:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a549c77b_Map> _144621_t = _1a54a6a1b_buildMap(_self_, (*(_140729_declKind)).cast_ptr<_1a4864715_MapTypeDecl>(&__jule_any_type80));;
				if ((_144621_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_144621_t, 10);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1a8355a93:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a549bc53_Tuple> _145221_t = _1a54a6d29_buildTuple(_self_, (*(_140729_declKind)).cast_ptr<_1a4863549_TupleTypeDecl>(&__jule_any_type81));;
				if ((_145221_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_145221_t, 9);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a8355b09:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1a53a717a_FnIns> _145821_t = _1a54a7445_buildFn(_self_, (*(_140729_declKind)).cast_ptr<_1a4873438_FnDecl>(&__jule_any_type14));;
				if ((_145821_t != nullptr)) {
					_140817_kind=jule::Trait<_1a5491d58_Kind>(_145821_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a8355b70:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1a5491d58_Kind> _146421_t = _1a54a7753_buildByNamespace(_self_, (*(_140729_declKind)).cast_ptr<_1a4862a76_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_146421_t != nullptr)) {
					_140817_kind=_146421_t;
				};
			}
		}
		else {
			_case_begin_1a8354e16:;
			{
				_1a54a130c_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8354d28:;
	};
	if ((_140817_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _140817_kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1a8361719:;
			{
				return _140817_kind.cast_ptr<_1a5492287_TypeKind>(5);;
			}
		}
		else {
			_case_begin_1a8356038:;
			{
				jule::Ptr<_1a5492287_TypeKind> _147921_tk = jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=_140817_kind});;
				{
					auto &_match_expr{ _140817_kind };
					
					if (_match_expr.type_is(true, 6)) {
						_case_begin_1a83624b7:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1a5492287_TypeKind>>::make({_147921_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1a836253e:;
						{
							jule::Ptr<_1a487d575_StructIns> _148621_s = _140817_kind.cast_ptr<_1a487d575_StructIns>(0);;
							if (((_148621_s.get()._field_Decl != nullptr) && _148621_s.get()._field_Decl.get()._field_CppLinked)) {
								_147921_tk.get()._field_CppIdent=_148621_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1a83623a7:;
				};
				return _147921_tk;;
			}
		}
		_match_end_1a8355de5:;
	};
}



inline jule::Ptr<_1a5492287_TypeKind> _1a54a7d6e_checkDecl(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a48619a9_TypeDecl>* _149533_decl) {
	jule::Ptr<_1ceee8973_Token> _149717_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_149533_decl)).get()._field_Token;
	jule::Ptr<_1a5492287_TypeKind> _150017_kind = _1a54a7a61_build(_self_, &((*(_149533_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_149717_errorToken;
	return _150017_kind;;
}



inline void _1a54a80e4_check(_1a54a0b03_typeChecker* _self_, jule::Ptr<_1a5496665_TypeSymbol>* _150629_t) {
	if (((*(_150629_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5492287_TypeKind> _151017_kind = _1a54a7d6e_checkDecl(_self_, &((*(_150629_t)).get()._field_Decl));;
	if ((_151017_kind == nullptr)) {
		_1a5496be8_removeKind((*(_150629_t)).ptr());
		return;;
	};
	(*(_150629_t)).get()._field_Kind=_151017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1a54a0b03_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1a54a8754_prim(jule::Str* _152221_ident, jule::Ptr<_1a5496ed4_Prim> _152233_t) {
	return (_152233_t.get()._field_Kind == (*(_152221_ident)));;
}



inline jule::Bool static__1a54a8a95_exist(jule::Str* _152622_ident, jule::Ptr<_1a5492287_TypeKind>* _152639_k) {
	{
		
		if ((_1a549461e_Prim((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a83682ae:;
			{
				return static__1a54a8754_prim(_152622_ident, _1a549461e_Prim((*(_152639_k)).ptr()));;
			}
		}
		else if ((_1a5494883_Sptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a8368325:;
			{
				jule::Ptr<_1a549a768_Sptr> _153121_sptr = _1a5494883_Sptr((*(_152639_k)).ptr());;
				return static__1a54a8a95_exist(_152622_ident, &(_153121_sptr.get()._field_Elem));;
			}
		}
		else if ((_1a5494ae7_Ptr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a836838b:;
			{
				jule::Ptr<_1a549dccc_Ptr> _153421_ptr = _1a5494ae7_Ptr((*(_152639_k)).ptr());;
				return static__1a54a8a95_exist(_152622_ident, &(_153421_ptr.get()._field_Elem));;
			}
		}
		else if ((_1a5495598_Slc((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a8368402:;
			{
				jule::Ptr<_1a549b1c5_Slc> _153721_slc = _1a5495598_Slc((*(_152639_k)).ptr());;
				return static__1a54a8a95_exist(_152622_ident, &(_153721_slc.get()._field_Elem));;
			}
		}
		else if ((_1a5495334_Arr((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a8368688:;
			{
				jule::Ptr<_1a549d370_Arr> _154021_arr = _1a5495334_Arr((*(_152639_k)).ptr());;
				return static__1a54a8a95_exist(_152622_ident, &(_154021_arr.get()._field_Elem));;
			}
		}
		else if ((_1a5496049_Map((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a83686ee:;
			{
				jule::Ptr<_1a549c77b_Map> _154321_m = _1a5496049_Map((*(_152639_k)).ptr());;
				return (static__1a54a8a95_exist(_152622_ident, &(_154321_m.get()._field_Key)) || static__1a54a8a95_exist(_152622_ident, &(_154321_m.get()._field_Val)));;
			}
		}
		else if ((_1a5495a71_Struct((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a8368765:;
			{
				jule::Ptr<_1a487d575_StructIns> _154721_s = _1a5495a71_Struct((*(_152639_k)).ptr());;
				{
					auto expr = &(_154721_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a83745c8:;
					if (it != expr_end) {
						jule::Ptr<_1a5490a5a_InsGeneric> _154825_g = *it;
						{
							if (static__1a54a8a95_exist(_152622_ident, &(_154825_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a83745c8:;
						++it;
						goto _iter_begin_1a83745c8;
					}
					_iter_end_1a83745c8:;
				};
				return false;;
			}
		}
		else if ((_1a549580c_Fn((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a83687cb:;
			{
				jule::Ptr<_1a53a717a_FnIns> _155521_f = _1a549580c_Fn((*(_152639_k)).ptr());;
				{
					auto expr = &(_155521_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8375cc2:;
					if (it != expr_end) {
						jule::Ptr<_1a53a62ab_ParamIns> _155625_p = *it;
						{
							if (_1a53a32b9_IsSelf(_155625_p.get()._field_Decl.ptr())) {
								goto _iter_next_1a8375cc2;
							};
							if (static__1a54a8a95_exist(_152622_ident, &(_155625_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a8375cc2:;
						++it;
						goto _iter_begin_1a8375cc2;
					}
					_iter_end_1a8375cc2:;
				};
				if ((_155521_f.get()._field_Result != nullptr)) {
					return static__1a54a8a95_exist(_152622_ident, &(_155521_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1a54962ad_Tup((*(_152639_k)).ptr()) != nullptr)) {
			_case_begin_1a8368a2e:;
			{
				jule::Ptr<_1a549bc53_Tuple> _156921_tup = _1a54962ad_Tup((*(_152639_k)).ptr());;
				{
					auto expr = &(_156921_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8377e06:;
					if (it != expr_end) {
						jule::Ptr<_1a5492287_TypeKind> _157025_t = *it;
						{
							if (static__1a54a8a95_exist(_152622_ident, &(_157025_t))) {
								return true;;
							};
						}
						_iter_next_1a8377e06:;
						++it;
						goto _iter_begin_1a8377e06;
					}
					_iter_end_1a8377e06:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a8368248:;
			{
				return false;;
			}
		}
		_match_end_1a836817c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a54a8314_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d47d80_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d4a558_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1a4d4b515_stop(_1a4d4ad83_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1a4d4b779_stopped(_1a4d4ad83_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1a4d4b9dd_finished(_1a4d4ad83_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1a4d4bc52_isLastSt(_1a4d4ad83_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1a4d4c071_pushErr(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1ceee8973_Token> _19126_token, jule::Str _19141_fmt) {
	_1a4d67e38_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1a4d4c390_pushSuggestion(_1a4d4ad83_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1a4d68257_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1a4d4c615_insertAsNext(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1a4d4a558_stmt>(_1a4d4a558_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1a4d4a558_stmt> _1a4d4c879_next(_1a4d4ad83_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1a4871942_ScopeTree> _1a4d4cc31_buildScope(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _21034_tokens, jule::Ptr<_1ceee8973_Token> _21056_end) {
	jule::Ptr<_1a4871942_ScopeTree> _21117_s = _1a4d4948b_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1a4d4ad83_scopeParser _21417_ssp = _1a4d4ad83_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1a4d5691b_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1a4874417_VarDecl> _1a4d4d03e_buildVarSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _22134_tokens) {
	jule::Ptr<_1a4874417_VarDecl> _22217_v = _1a4d6a974_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1a48747be_RetSt> _1a4d4d34c_buildRetSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _22733_tokens) {
	jule::Ptr<_1a48747be_RetSt> _22817_st = jule::new_ptr<_1a48747be_RetSt>(_1a48747be_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1a4874e2e_Iter> _1a4d4d65a_buildWhileNextIter(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1a4d4a558_stmt>* _23842_s) {
	jule::Ptr<_1a4874e2e_Iter> _23917_it = jule::new_ptr<_1a4874e2e_Iter>(_1a4874e2e_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1a4875704_WhileKind> _24317_kind = jule::new_ptr<_1a4875704_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1a4d4bc52_isLastSt(_self_)) {
		_1a4d4c071_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1a4d4c879_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _25517_stTokens = _1a4d6266e_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1a4d4a558_stmt> _25721_stmt = jule::new_ptr<_1a4d4a558_stmt>(_1a4d4a558_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1a4d565ec_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _26617_blockTokens = _1a4d6573d_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1a4d4b515_stop(_self_);
		_1a4d4c071_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1a4d4c071_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1a4d4cc31_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type37);
	return _23917_it;;
}



inline jule::Ptr<_1a4875704_WhileKind> _1a4d4d968_buildWhileIterKind(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _28342_tokens) {
	return jule::new_ptr<_1a4875704_WhileKind>(_1a4875704_WhileKind{._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d4dc76_getRangeKindKeysTokens(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _29018_vars;;
	jule::Slice<_1ceb4952a_Log> _29024_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(_28946_toks, static_cast<jule::U64>(8LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1a4874417_VarDecl> _1a4d4e084_buildRangeKindKey(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a4874417_VarDecl> _29917_key = jule::new_ptr<_1a4874417_VarDecl>(_1a4874417_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1a4d4c071_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1a4d4c071_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d4c071_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1a4874417_VarDecl>> _1a4d4e392_buildRangeKindKeys(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1a4874417_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84ec421:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1a4d4e084_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_1a84ec421:;
			++it;
			goto _iter_begin_1a84ec421;
		}
		_iter_end_1a84ec421:;
	};
	return _32117_keys;;
}



inline void _1a4d4e6d3_setupRangeKindKeysPlain(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1a4876095_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _32917_keyTokens = _1a4d4dc76_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1a4d4c071_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1a4874417_VarDecl>> _33617_keys = _1a4d4e392_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1a4d4ea35_setupRangeKindKeysExplicit(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1a4876095_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _34517_rang = _1a4d6573d_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1a4d4c071_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1a4d4e6d3_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1a4d4ed65_setupRangeKindKeys(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1a4876095_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(3LLU))) {
		if (((*(_35264_tokens))[0LL].get()._field_Kind != jule::Str("(", 1))) {
			_1a4d4c071_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1a4d4ea35_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1a4d4e6d3_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1a4876095_RangeKind> _1a4d502b6_buildRangeIterKind(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _36514_exprTokens, jule::Ptr<_1ceee8973_Token>* _36541_inToken) {
	jule::Ptr<_1a4876095_RangeKind> _36617_rng = jule::new_ptr<_1a4876095_RangeKind>(_1a4876095_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1a4d4c071_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1a4d4ed65_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1a4d5066d_buildCommonIterKind(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _38043_tokens, jule::Ptr<_1ceee8973_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8507aad:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a8509197:;
							{
								(_38117_braceN)++;
								goto _iter_next_1a8507aad;
							}
						}
						else {
							_case_begin_1a8508c9b:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1a8508a8c:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1a8507aad;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU)) {
						_case_begin_1a8509241:;
						{
							jule::Slice<jule::Ptr<_1ceee8973_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_1ceee8973_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1a4d502b6_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type39);;
						}
					}
					_match_end_1a8509a05:;
				};
			}
			_iter_next_1a8507aad:;
			++it;
			_38214_i++;
			goto _iter_begin_1a8507aad;
		}
		_iter_end_1a8507aad:;
	};
	return jule::Any(_1a4d4d968_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type37);;
}



inline jule::Ptr<_1a4874e2e_Iter> _1a4d5097b_buildCommonIter(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _40738_tokens) {
	jule::Ptr<_1a4874e2e_Iter> _40817_it = jule::new_ptr<_1a4874e2e_Iter>(_1a4874e2e_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1a4d4b515_stop(_self_);
		_1a4d4c071_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _41817_exprTokens = _1a4d6266e_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1a4d5066d_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _42317_scopeTokens = _1a4d6573d_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1a4d4b515_stop(_self_);
		_1a4d4c071_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1a4d4c071_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1a4d4cc31_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1a4874e2e_Iter> _1a4d50c89_buildIterSt(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1a4d4a558_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1a4d4d65a_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1a4d5097b_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1a487644c_BreakSt> _1a4d51097_buildBreakSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _44436_tokens) {
	jule::Ptr<_1a487644c_BreakSt> _44517_brk = jule::new_ptr<_1a487644c_BreakSt>(_1a487644c_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1a4d4c071_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a4d4c390_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1a4d4c071_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1a4876804_ContSt> _1a4d513a5_buildContSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _46235_tokens) {
	jule::Ptr<_1a4876804_ContSt> _46317_cont = jule::new_ptr<_1a4876804_ContSt>(_1a4876804_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1a4d4c071_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1a4d4c390_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1a4d4c071_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1a4876c77_If> _1a4d516b3_buildIf(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _48031_tokens) {
	jule::Ptr<_1a4876c77_If> _48117_model = jule::new_ptr<_1a4876c77_If>(_1a4876c77_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _48517_exprTokens = _1a4d6266e_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1a4d4c071_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _49217_scopeTokens = _1a4d6573d_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1a4d4b515_stop(_self_);
		_1a4d4c071_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ceee8973_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(17LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1a4d4c071_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1a4d4cc31_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1a487712e_Else> _1a4d519c1_buildElse(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _51333_tokens) {
	jule::Ptr<_1a487712e_Else> _51417_els = jule::new_ptr<_1a487712e_Else>(_1a487712e_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _51917_scopeTokens = _1a4d6573d_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1a4d4c071_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1a4d4b515_stop(_self_);
			_1a4d4c071_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1a4d4c390_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1a4d4c071_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1a4d4cc31_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1a48775a2_Conditional> _1a4d51cce_buildIfElseChain(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _53739_tokens) {
	jule::Ptr<_1a48775a2_Conditional> _53817_chain = jule::new_ptr<_1a48775a2_Conditional>(_1a48775a2_Conditional{._field_Head=_1a4d516b3_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
				goto _iter_end_1a8524932;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1a4876c77_If> _55025_elif = _1a4d516b3_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1a8524932;
			};
			_53817_chain.get()._field_Default=_1a4d519c1_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1a8524932;
		}
	_iter_next_1a8524932:;
	}
	_iter_end_1a8524932:;;
	return _53817_chain;;
}



inline jule::Ptr<_1a4865eca_Expr> _1a4d520dc_buildCoCallSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _56036_tokens) {
	jule::Ptr<_1ceee8973_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1a4865eca_Expr> _56317_e = _1a4d68565_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a85285b2:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1a4869eac_FnCallExpr>(&__jule_any_type113).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a85289d0:;
			{
				_1a4d4c071_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1a85286a0:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1a486e511_GotoSt> _1a4d523ea_buildGotoSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _57635_tokens) {
	jule::Ptr<_1a486e511_GotoSt> _57717_gt = jule::new_ptr<_1a486e511_GotoSt>(_1a486e511_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1a4d4c071_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1a4d4c071_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1ceee8973_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d4c071_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1a486e7ec_FallSt> _1a4d52708_buildFallSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _59635_tokens) {
	jule::Ptr<_1a486e7ec_FallSt> _59717_fll = jule::new_ptr<_1a486e7ec_FallSt>(_1a486e7ec_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1a4d4c071_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1a4877c78_TypeAliasDecl> _1a4d52a16_buildTypeAliasSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _60640_tokens) {
	jule::Ptr<_1a4877c78_TypeAliasDecl> _60717_tad = _1a4d69b60_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1a4d52e78_pushCaseExpr(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _61235_tokens, jule::Ptr<_1ceee8973_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1a4865eca_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1a48619a9_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_1a4865eca_Expr>(_1a4865eca_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type95)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1a4d4c071_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1a4d68565_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a4865eca_Expr>> _1a4d533c9_buildCaseExprs(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _63638_tokens, jule::Ptr<_1ceee8973_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1a4865eca_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8534a52:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1a8536e72:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1a8536a76:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1a8536867:;
					};
					goto _iter_next_1a8534a52;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1a8534a52;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_64121_tok.get()._field_Kind == jule::Str("|", 1)))) {
						_case_begin_1a8537769:;
						{
							jule::Slice<jule::Ptr<_1ceee8973_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1a4d4c071_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1a4d52e78_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_case_begin_1a85377d0:;
						{
							(*(_63661_colon))=_64121_tok;
							_1a4d52e78_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1a85372d5:;
				};
			}
			_iter_next_1a8534a52:;
			++it;
			_64114_i++;
			goto _iter_begin_1a8534a52;
		}
		_iter_end_1a8534a52:;
	};
	_1a4d4c071_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1a4871942_ScopeTree> _1a4d536d7_buildCaseScope(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _68022_next;;
			({
				__jule_tuple_sx_1ceee8973_Token__jule_tuple_bool __jule_assign_result = _1a4d4a25b_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1a853b174;
			};
			jule::Ptr<_1ceee8973_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_68417_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1a853b174;
			};
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1a4871942_ScopeTree> _69021_scope = _1a4d4cc31_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1a853b174:;
	}
	_iter_end_1a853b174:;;
	jule::Ptr<_1ceee8973_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1a4871942_ScopeTree> _69817_scope = _1a4d4cc31_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1a48781eb_Case__jule_tuple_bool _1a4d53a8e_buildCase(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1a48781eb_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a48781eb_Case> _70417_c = jule::new_ptr<_1a48781eb_Case>(_1a48781eb_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_1ceee8973_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1a4d533c9_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1a4d536d7_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1a48781eb_Case__jule_tuple_x_1a487712e_Else _1a4d53e46_buildCases(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1a48781eb_Case__jule_tuple_x_1a487712e_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1a48781eb_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1a487712e_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1ceee8973_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_72321_tok.get()._field_Kind != jule::Str("|", 1)))) {
				_1a4d4c071_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1a8544864;
			};
			jule::Ptr<_1a48781eb_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1a48781eb_Case__jule_tuple_bool __jule_assign_result = _1a4d53a8e_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1a487712e_Else>(_1a487712e_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1a4d4c071_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1a8544864:;
	}
	_iter_end_1a8544864:;;
	if (_72117_defNotLast) {
		_1a4d4c071_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1a48788c2_MatchCase> _1a4d54254_buildMatchCase(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _75237_tokens) {
	jule::Ptr<_1a48788c2_MatchCase> _75317_m = jule::new_ptr<_1a48788c2_MatchCase>(_1a48788c2_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _76317_exprTokens = _1a4d6266e_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1a4d4c071_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _77117_blockToks = _1a4d6573d_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1a4d4b515_stop(_self_);
		_1a4d4c071_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1a4d4c390_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1a4d4c071_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1a48781eb_Case__jule_tuple_x_1a487712e_Else __jule_assign_result = _1a4d53e46_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1a4871942_ScopeTree> _1a4d54562_buildScopeSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_1ceee8973_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1a4d4c071_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1a4d4c071_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1a4d4c071_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _81517_scopeTokens = _1a4d6573d_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1a4d4c071_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1a4d4c071_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1a4871942_ScopeTree> _82217_scope = _1a4d4cc31_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1a486e159_LabelSt> _1a4d54870_buildLabelSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _82836_tokens) {
	jule::Ptr<_1a486e159_LabelSt> _82917_lbl = jule::new_ptr<_1a486e159_LabelSt>(_1a486e159_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1a4d4c615_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1a4871106_StmtData__jule_tuple_bool _1a4d54b7d_buildIdSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _84333_tokens) {
	__jule_tuple__1a4871106_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ceee8973_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a855a76a:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1a4d54870_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a855a715:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a4d63b9d_assignInfo> _1a4d54e8b_buildAssignInfo(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _85739_tokens) {
	jule::Ptr<_1a4d63b9d_assignInfo> _85817_info = jule::new_ptr<_1a4d63b9d_assignInfo>(_1a4d63b9d_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a855beca:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a855d5d6:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1a855d1da:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1a855cecb:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1a855d8c2:;
						{
							goto _iter_next_1a855beca;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1a855d938:;
						{
							goto _iter_next_1a855beca;
						}
					}
					else if ((!(_1ceeed55a_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1a855d9b0:;
						{
							goto _iter_next_1a855beca;
						}
					}
					_match_end_1a855d680:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_1ceeed2b3_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1a855beca;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_1ceeed2b3_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1a4d4c071_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1a855beca;
			}
			_iter_next_1a855beca:;
			++it;
			_86214_i++;
			goto _iter_begin_1a855beca;
		}
		_iter_end_1a855beca:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1a486ee07_AssignLeft> _1a4d55299_buildAssignL(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _90536_tokens) {
	jule::Ptr<_1a486ee07_AssignLeft> _90617_l = jule::new_ptr<_1a486ee07_AssignLeft>(_1a486ee07_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1a486ee07_AssignLeft>> _1a4d555a7_buildAssignLs(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1a486ee07_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85654bc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _91821_part = *it;
			{
				jule::Ptr<_1a486ee07_AssignLeft> _91921_l = _1a4d55299_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1a85654bc:;
			++it;
			goto _iter_begin_1a85654bc;
		}
		_iter_end_1a85654bc:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool _1a4d558b5_buildPlainAssign(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _92640_tokens) {
	__jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a4d63b9d_assignInfo> _92717_info = _1a4d54e8b_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4870446_AssignSt> _93217_assign = jule::new_ptr<_1a4870446_AssignSt>(_1a4870446_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _93618_parts;;
	jule::Slice<_1ceb4952a_Log> _93625_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(8LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1a4d555a7_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1a4d68565_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool _1a4d55bc3_buildDeclAssign(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _95038_tokens) {
	__jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_1ceee8973_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_95617_token.get()._field_Kind != jule::Str("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4870446_AssignSt> _96117_assign = jule::new_ptr<_1a4870446_AssignSt>(_1a4870446_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _96617_rang = _1a4d6573d_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1a4d4c071_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_1ceee8973_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1a4d68565_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _97818_parts;;
	jule::Slice<_1ceb4952a_Log> _97825_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_96617_rang), static_cast<jule::U64>(8LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8571440:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1a4d4c071_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1a8571440;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_98421_part[0LL].get()._field_Kind == jule::Str("&", 1)))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1a4d4c071_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1a8571440;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(3LLU))) && (_98421_part[0LL].get()._field_Kind != jule::Str("(", 1)))) {
					_1a4d4c071_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1a8571440;
				};
				jule::Ptr<_1a486ee07_AssignLeft> _101421_l = _1a4d55299_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1a8571440:;
			++it;
			goto _iter_begin_1a8571440;
		}
		_iter_end_1a8571440:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool _1a4d55ed1_buildAssignSt(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _102337_tokens) {
	__jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1a4d64044_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a85797ab:;
			{
				({
					__jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool __jule_assign_result = _1a4d55bc3_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a857939e:;
			{
				({
					__jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool __jule_assign_result = _1a4d558b5_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a8579349:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1a486686b_UseExpr> _1a4d562de_buildUseExpr(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1a4d4c071_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1a486686b_UseExpr> _104317_ue = jule::new_ptr<_1a486686b_UseExpr>(_1a486686b_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1a4d68565_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1a4d565ec_buildSt(_1a4d4ad83_scopeParser* _self_, jule::Ptr<_1a4d4a558_stmt>* _105131_st) {
	jule::Ptr<_1ceee8973_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1a4871106_StmtData__jule_tuple_bool __jule_assign_result = _1a4d54b7d_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1a4870446_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1a4870446_AssignSt__jule_tuple_bool __jule_assign_result = _1a4d55ed1_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a857e74a:;
			{
				return jule::Any(_1a4d562de_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1a857e89e:;
			{
				return jule::Any(_1a4d4d03e_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1a857e915:;
			{
				return jule::Any(_1a4d4d34c_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1a857e9d1:;
			{
				return jule::Any(_1a4d50c89_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1a857ea47:;
			{
				return jule::Any(_1a4d51097_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(14LLU)) {
			_case_begin_1a857eaad:;
			{
				return jule::Any(_1a4d513a5_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1a857eb24:;
			{
				return jule::Any(_1a4d51cce_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1a857eb8a:;
			{
				return jule::Any(_1a4d520dc_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1a857ec01:;
			{
				return jule::Any(_1a4d523ea_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1a857ec67:;
			{
				return jule::Any(_1a4d52708_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a857eccd:;
			{
				return jule::Any(_1a4d52a16_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1a857ed44:;
			{
				return jule::Any(_1a4d54254_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1a857edaa:;
			{
				return jule::Any(_1a4d54562_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a857ee32:;
			{
				if ((_105217_token.get()._field_Kind == jule::Str("{", 1))) {
					return jule::Any(_1a4d54562_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1a857e607:;
	};
	jule::Ptr<_1a4865eca_Expr> _110117_expr = _1a4d68565_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1a4d4c071_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1a4d5691b_build(_1a4d4ad83_scopeParser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _110929_tokens, jule::Ptr<_1a4871942_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1a4d4a8ee_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1a4d4bc52_isLastSt(_self_))) && (!(_1a4d4b9dd_finished(_self_))))) {
		{
			jule::Ptr<_1a4d4a558_stmt> _111721_st = _1a4d4c879_next(_self_);;
			jule::Any _111821_data = _1a4d565ec_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_1a4871337_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1a4d4b779_stopped(_self_)) {
				goto _iter_end_1a85878c9;
			};
		}
	_iter_next_1a85878c9:;
	}
	_iter_end_1a85878c9:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d4ad83_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1a4d57b3c_pushErr(_1a4d5739a_exprBuilder* _self_, jule::Ptr<_1ceee8973_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1a4d67e38_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1a4d57e5b_pushSuggestion(_1a4d5739a_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1a4d68257_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1a4866b57_TupleExpr> _1a4d58269_buildTuple(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>* _5334_parts) {
	jule::Ptr<_1a4866b57_TupleExpr> _5417_tuple = jule::new_ptr<_1a4866b57_TupleExpr>(_1a4866b57_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1a4865eca_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a787d4b7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1a4d61c89_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_1a787d4b7:;
			++it;
			goto _iter_begin_1a787d4b7;
		}
		_iter_end_1a787d4b7:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1a486700e_LitExpr> _1a4d58577_buildLit(_1a4d5739a_exprBuilder* _self_, jule::Ptr<_1ceee8973_Token> _6327_token) {
	return jule::new_ptr<_1a486700e_LitExpr>(_1a486700e_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d58885_buildPrimitiveType(_1a4d5739a_exprBuilder* _self_, jule::Ptr<_1ceee8973_Token>* _7038_token) {
	return _1a4d77c5b_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1a4d58b93_buildSingle(_1a4d5739a_exprBuilder* _self_, jule::Ptr<_1ceee8973_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1a787ee9c:;
			{
				return jule::Any(_1a4d58577_buildLit(_self_, _7434_token), &__jule_any_type107);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a7880013:;
			{
				if ((_7434_token.get()._field_Kind == jule::Str("...", 3))) {
					return jule::Any(jule::new_ptr<_1a486874c_VariadicExpr>(_1a486874c_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type82);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(27LLU) || _match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1a7880079:;
			{
				return jule::Any(_1a4d63043_buildIdentExpr(&(_7434_token)), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a78800e0:;
			{
				return jule::Any(_1a4d58885_buildPrimitiveType(_self_, &(_7434_token)), &__jule_any_type95);;
			}
		}
		_match_end_1a787ddd0:;
	};
	_1a4d57b3c_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a4867b8b_IdentExpr> _1a4d58ea1_buildCppLinkedIdent(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _9543_tokens) {
	if (((*(_9543_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(30LLU))) {
		return nullptr;;
	} else if (((*(_9543_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(20LLU))) {
		_1a4d57b3c_pushErr(_self_, (*(_9543_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("use dot (.) to access cpp-linked defines", 40), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ceee8973_Token> _10317_token = (*(_9543_tokens))[2LL];;
	if ((_10317_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d57b3c_pushErr(_self_, (*(_9543_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4867b8b_IdentExpr> _10917_expr = _1a4d63043_buildIdentExpr(&(_10317_token));;
	_10917_expr.get()._field_CppLinked=true;
	return _10917_expr;;
}



inline jule::Ptr<_1a4868395_UnaryExpr> _1a4d592ae_buildUnary(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _11433_tokens) {
	jule::Ptr<_1ceee8973_Token> _11517_op = _11433_tokens[0LL];;
	if ((_11433_tokens.len() == 1LL)) {
		_1a4d57b3c_pushErr(_self_, _11517_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1ceee917c_IsUnaryOp(_11517_op.get()._field_Kind)))) {
		_1a4d57b3c_pushErr(_self_, _11517_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11517_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11433_tokens=_11433_tokens.slice(1LL);
	return jule::new_ptr<_1a4868395_UnaryExpr>(_1a4868395_UnaryExpr{._field_Op=_11517_op, ._field_Expr=_1a4d61c89_buildFromTokens(_self_, _11433_tokens)});;
}



inline jule::Ptr<_1a486942e_SubIdentExpr> _1a4d595bc_buildObjSubIdent(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _13539_tokens) {
	jule::I64 _13617_i = (_13539_tokens.len() - 1LL);;
	jule::Ptr<_1ceee8973_Token> _13717_identToken = _13539_tokens[_13617_i];;
	(_13617_i)--;
	_13539_tokens=_13539_tokens.slice(0LL, _13617_i);
	if ((_13539_tokens.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, _13717_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a486942e_SubIdentExpr>(_1a486942e_SubIdentExpr{._field_Expr=_1a4d61c89_buildFromTokens(_self_, _13539_tokens), ._field_Ident=_13717_identToken});;
}



inline jule::Ptr<_1a4868eab_NsSelectionExpr> _1a4d598ca_buildNsSubIdent(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _15039_tokens) {
	jule::Ptr<_1a4868eab_NsSelectionExpr> _15117_ns = jule::new_ptr<_1a4868eab_NsSelectionExpr>();;
	{
		auto expr = _15039_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a788b151:;
		if (it != expr_end) {
			jule::I64 _15214_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _15221_token = *it;
			{
				if (((_15214_i & 1LL) == 0LL)) {
					if ((_15221_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
						_1a4d57b3c_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a4d57e5b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_15117_ns.get()._field_Ns = jule::alloc_for_append(_15117_ns.get()._field_Ns,1);_15117_ns.get()._field_Ns.__push(_15221_token);;
				} else if ((_15221_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4d57b3c_pushErr(_self_, _15221_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a4d57e5b_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a788b151:;
			++it;
			_15214_i++;
			goto _iter_begin_1a788b151;
		}
		_iter_end_1a788b151:;
	};
	_15117_ns.get()._field_Ident=_15117_ns.get()._field_Ns[(_15117_ns.get()._field_Ns.len() - 1LL)];
	_15117_ns.get()._field_Ns=_15117_ns.get()._field_Ns.slice(0LL, (_15117_ns.get()._field_Ns.len() - 1LL));
	return _15117_ns;;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d59bd8_buildType(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _16933_tokens) {
	jule::I64 _17017_i = 0LL;;
	jule::Ptr<_1a48619a9_TypeDecl> _17118_t;;
	jule::Bool _17121_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, _16933_tokens, (&(_17017_i)), false);
		_17118_t = __jule_assign_result.__jule_result_arg0;
		_17121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17121_ok))) {
		_1a4d57b3c_pushErr(_self_, (*(_16933_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17017_i < (*(_16933_tokens)).len())) {
		_1a4d57b3c_pushErr(_self_, (*(_16933_tokens))[_17017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17118_t;;
}



inline jule::Any _1a4d59ee6_buildSubIdent(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _18337_tokens) {
	jule::I64 _18413_i = ((*(_18337_tokens)).len() - 2LL);;
	jule::Ptr<_1ceee8973_Token> _18513_token = (*(_18337_tokens))[_18413_i];;
	{
		auto &_match_expr{ _18513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1a78931be:;
			{
				return jule::Any(_1a4d595bc_buildObjSubIdent(_self_, (*(_18337_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a78936b9:;
			{
				return jule::Any(_1a4d598ca_buildNsSubIdent(_self_, _18337_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a7893730:;
			{
				if ((_18513_token.get()._field_Kind == jule::Str("]", 1))) {
					return jule::Any(_1a4d59bd8_buildType(_self_, _18337_tokens), &__jule_any_type95);;
				};
			}
		}
		_match_end_1a7893554:;
	};
	_1a4d57b3c_pushErr(_self_, _18513_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a486874c_VariadicExpr> _1a4d5a304_buildVariadic(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _20136_tokens) {
	jule::Ptr<_1ceee8973_Token> _20217_token = _20136_tokens[(_20136_tokens.len() - 1LL)];;
	_20136_tokens=_20136_tokens.slice(0LL, (_20136_tokens.len() - 1LL));
	return jule::new_ptr<_1a486874c_VariadicExpr>(_1a486874c_VariadicExpr{._field_Token=_20217_token, ._field_Expr=_1a4d61c89_buildFromTokens(_self_, _20136_tokens)});;
}



inline jule::Any _1a4d5a612_buildOpRight(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _21036_tokens) {
	jule::Ptr<_1ceee8973_Token> _21117_token = (*(_21036_tokens))[((*(_21036_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _21117_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1a7897602:;
			{
				(*(_21036_tokens))=(*(_21036_tokens)).slice(0LL, ((*(_21036_tokens)).len() - 1LL));
				jule::Any _21521_d = _1a4d6166d_build(_self_, _21036_tokens);;
				if ((_21521_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21521_d };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1a7898bb9:;
						{
							_21521_d.cast_ptr<_1a4869eac_FnCallExpr>(&__jule_any_type113).get()._field_Exception=jule::new_ptr<_1a4871942_ScopeTree>(_1a4871942_ScopeTree{._field_Deferred=true, });
							return _21521_d;;
						}
					}
					_match_end_1a7898ceb:;
				};
			}
		}
		_match_end_1a7897448:;
	};
	_1a4d57b3c_pushErr(_self_, _21117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1a48662b6_RangeExpr> _1a4d5a942_buildBetweenParentheses(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _23146_tokens) {
	if ((_23146_tokens.len() == 2LL)) {
		_1a4d57b3c_pushErr(_self_, _23146_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_23146_tokens=_23146_tokens.slice(1LL, (_23146_tokens.len() - 1LL));
	return jule::new_ptr<_1a48662b6_RangeExpr>(_1a48662b6_RangeExpr{._field_Expr=_1a4d61c89_buildFromTokens(_self_, _23146_tokens)});;
}



inline jule::Ptr<_1a4868b04_CastExpr> _1a4d5ac61_tryBuildCast(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _24336_tokens) {
	jule::I64 _24417_rangeN = 0LL;;
	{
		auto expr = _24336_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a789c052:;
		if (it != expr_end) {
			jule::I64 _24513_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _24516_token = *it;
			{
				if ((_24516_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _24516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a789d619:;
							{
								(_24417_rangeN)++;
								goto _iter_next_1a789c052;
							}
						}
						else {
							_case_begin_1a789d21d:;
							{
								(_24417_rangeN)--;
							}
						}
						_match_end_1a789d00e:;
					};
				};
				if ((_24417_rangeN > 0LL)) {
					goto _iter_next_1a789c052;
				} else if (((_24513_i + 1LL) == (*(_24336_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _26421_typeTokens = (*(_24336_tokens)).slice(0LL, (_24513_i + 1LL));;
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _26521_exprTokens = (*(_24336_tokens)).slice((_24513_i + 1LL));;
				if ((_26521_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1ceee8973_Token> _27217_tok = _26521_exprTokens[0LL];;
				if (((_27217_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_27217_tok.get()._field_Kind != jule::Str("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1a4868b04_CastExpr> _27721_cast = jule::new_ptr<_1a4868b04_CastExpr>(_1a4868b04_CastExpr{});;
				if ((_26521_exprTokens.len() == 2LL)) {
					_1a4d57b3c_pushErr(_self_, _26521_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1a4d57e5b_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26421_typeTokens.len() == 2LL)) {
					_1a4d57b3c_pushErr(_self_, _26421_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1a4d57e5b_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26421_typeTokens=_26421_typeTokens.slice(1LL, (_26421_typeTokens.len() - 1LL));
					jule::I64 _29125_typeIndex = 0LL;;
					jule::Ptr<_1a48619a9_TypeDecl> _29226_t;;
					jule::Bool _29229_ok = false;;
					({
						__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &(_26421_typeTokens), (&(_29125_typeIndex)), true);
						_29226_t = __jule_assign_result.__jule_result_arg0;
						_29229_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29229_ok && (_29125_typeIndex < _26421_typeTokens.len()))) {
						_1a4d57b3c_pushErr(_self_, _26421_typeTokens[_29125_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29229_ok))) {
						return _27721_cast;;
					};
					_27721_cast.get()._field_Kind=_29226_t;
					if ((_26521_exprTokens.len() > 2LL)) {
						jule::I64 _30229_j = 0LL;;
						_1a4d6573d_range(&(_30229_j), jule::Str("(", 1), jule::Str(")", 1), &(_26521_exprTokens));
						if ((_30229_j < _26521_exprTokens.len())) {
							return nullptr;;
						};
						_26521_exprTokens=_26521_exprTokens.slice(0LL, _30229_j);
						_27721_cast.get()._field_Expr=_1a4d61c89_buildFromTokens(_self_, _26521_exprTokens);
					};
				};
				return _27721_cast;;
			}
			_iter_next_1a789c052:;
			++it;
			_24513_i++;
			goto _iter_begin_1a789c052;
		}
		_iter_end_1a789c052:;
	};
	return nullptr;;
}



inline void _1a4d5b129_pushArg(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1a4865eca_Expr>>* _31731_args, jule::Slice<jule::Ptr<_1ceee8973_Token>> _31750_tokens, jule::Ptr<_1ceee8973_Token> _31768_err_token) {
	if ((_31750_tokens.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, _31768_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31731_args)) = jule::alloc_for_append((*(_31731_args)),1);(*(_31731_args)).__push(_1a4d61c89_buildFromTokens(_self_, _31750_tokens));;
}



inline jule::Slice<jule::Ptr<_1a4865eca_Expr>> _1a4d5b437_buildArgs(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _32632_tokens) {
	if ((_32632_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _33217_args = nullptr;;
	jule::I64 _33317_last = 0LL;;
	jule::I64 _33417_rangeN = 0LL;;
	_32632_tokens=_32632_tokens.slice(1LL, (_32632_tokens.len() - 1LL));
	{
		auto expr = &(_32632_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a78aab10:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _33616_token = *it;
			{
				if ((_33616_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _33616_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a78ac392:;
							{
								(_33417_rangeN)++;
							}
						}
						else {
							_case_begin_1a78abe96:;
							{
								(_33417_rangeN)--;
							}
						}
						_match_end_1a78abc87:;
					};
				};
				if (((_33417_rangeN > 0LL) || (_33616_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a78aab10;
				};
				_1a4d5b129_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last, _33613_i), _33616_token);
				_33317_last=static_cast<jule::I64>((_33613_i + 1LL));
			}
			_iter_next_1a78aab10:;
			++it;
			_33613_i++;
			goto _iter_begin_1a78aab10;
		}
		_iter_end_1a78aab10:;
	};
	if ((_33317_last < _32632_tokens.len())) {
		if ((_33317_last == 0LL)) {
			if ((_32632_tokens.len() > 0LL)) {
				_1a4d5b129_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[_33317_last]);
			};
		} else {
			_1a4d5b129_pushArg(_self_, &(_33217_args), _32632_tokens.slice(_33317_last), _32632_tokens[(_33317_last - 1LL)]);
		};
	};
	return _33217_args;;
}



inline jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _1a4d5b745_buildCallGenerics(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _36840_tokens) {
	if ((_36840_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36840_tokens=_36840_tokens.slice(1LL, (_36840_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _37418_parts;;
	jule::Slice<_1ceb4952a_Log> _37425_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_36840_tokens), static_cast<jule::U64>(8LLU), true);
		_37418_parts = __jule_assign_result.__jule_result_arg0;
		_37425_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _37517_generics = jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, _37418_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37425_errs);
	{
		auto expr = &(_37418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a78b1b16:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _37721_part = *it;
			{
				if ((_37721_part.len() == 0LL)) {
					goto _iter_next_1a78b1b16;
				};
				jule::I64 _38121_j = 0LL;;
				jule::Ptr<_1a48619a9_TypeDecl> _38222_generic;;
				({
					__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &(_37721_part), (&(_38121_j)), true);
					_38222_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_38121_j < _37721_part.len())) {
					_1a4d57b3c_pushErr(_self_, _37721_part[_38121_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37517_generics = jule::alloc_for_append(_37517_generics,1);_37517_generics.__push(_38222_generic);;
			}
			_iter_next_1a78b1b16:;
			++it;
			goto _iter_begin_1a78b1b16;
		}
		_iter_end_1a78b1b16:;
	};
	return _37517_generics;;
}



inline jule::Ptr<_1a4869eac_FnCallExpr> _1a4d5bb96_buildFnCall(_1a4d5739a_exprBuilder* _self_, jule::Ptr<_1ceee8973_Token>* _39235_token, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _39255_expr, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _39276_args) {
	return jule::new_ptr<_1a4869eac_FnCallExpr>(_1a4869eac_FnCallExpr{._field_Token=(*(_39235_token)), ._field_Expr=_1a4d61c89_buildFromTokens(_self_, (*(_39255_expr))), ._field_Args=_1a4d5b437_buildArgs(_self_, (*(_39276_args))), });;
}



inline jule::Any _1a4d5bea4_buildParenthesesRange(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _40045_tokens) {
	jule::Ptr<_1ceee8973_Token> _40117_token = (*(_40045_tokens))[0LL];;
	{
		auto &_match_expr{ _40117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a78b6137:;
			{
				{
					auto &_match_expr{ _40117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a78b69a6:;
						{
							jule::Ptr<_1a4868b04_CastExpr> _40625_expr = _1a4d5ac61_tryBuildCast(_self_, _40045_tokens);;
							if ((_40625_expr != nullptr)) {
								return jule::Any(_40625_expr, &__jule_any_type111);;
							};
						}
					}
					_match_end_1a78b67db:;
				};
			}
		}
		_match_end_1a78b5e7d:;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _41218_exprTokens;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _41234_args_tokens;;
	({
		__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_assign_result = _1a4d659d5_rangeLast(_40045_tokens);
		_41218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a4d5a942_buildBetweenParentheses(_self_, _41234_args_tokens), &__jule_any_type106);;
	};
	return jule::Any(_1a4d5bb96_buildFnCall(_self_, &(_40117_token), &(_41218_exprTokens), &(_41234_args_tokens)), &__jule_any_type113);;
}



inline jule::Ptr<_1a4867718_UnsafeExpr> _1a4d5c2b2_buildUnsafeExpr(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _42138_tokens) {
	jule::Ptr<_1ceee8973_Token> _42217_token = _42138_tokens[0LL];;
	_42138_tokens=_42138_tokens.slice(1LL);
	jule::I64 _42417_i = 0LL;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _42517_rangeTokens = _1a4d6573d_range(&(_42417_i), jule::Str("{", 1), jule::Str("}", 1), &(_42138_tokens));;
	if ((_42517_rangeTokens.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, _42138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a4867718_UnsafeExpr>(_1a4867718_UnsafeExpr{._field_Token=_42217_token, ._field_Expr=_1a4d61c89_buildFromTokens(_self_, _42517_rangeTokens)});;
}



inline jule::Ptr<_1a4873438_FnDecl> _1a4d5c5c0_buildAnonFn(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _43635_tokens) {
	jule::Ptr<_1a4873438_FnDecl> _43717_f = _1a4d6d999_buildFn((*(_self_))._field_p, _43635_tokens, false, false);;
	if ((!(_1a487378a_IsAnon(_43717_f.ptr())))) {
		_1a4d57b3c_pushErr(_self_, _43717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43717_f;;
}



inline jule::Any _1a4d5c8cd_buildUnsafe(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _44535_tokens) {
	{
		auto &_match_expr{ (*(_44535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a8638b01:;
			{
				return jule::Any(_1a4d5c5c0_buildAnonFn(_self_, _44535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1a86390c9:;
			{
				return jule::Any(_1a4d5c2b2_buildUnsafeExpr(_self_, (*(_44535_tokens))), &__jule_any_type108);;
			}
		}
		_match_end_1a8639052:;
	};
}



inline void _1a4d5cc96_pushRangeLitPart(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _45539_part, jule::Ptr<_1ceee8973_Token> _4569_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>* _45634_parts) {
	if ((_45539_part.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, _4569_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45634_parts)) = jule::alloc_for_append((*(_45634_parts)),1);(*(_45634_parts)).__push(_45539_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d5d0c6_getBraceRangeLitExprParts(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _46648_tokens) {
	if ((_46648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _47217_parts = nullptr;;
	jule::I64 _47417_last = 0LL;;
	jule::I64 _47517_rangeN = 0LL;;
	_46648_tokens=_46648_tokens.slice(1LL, (_46648_tokens.len() - 1LL));
	{
		auto expr = &(_46648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a863d243:;
		if (it != expr_end) {
			jule::I64 _47713_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _47716_token = *it;
			{
				if ((_47716_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _47716_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a863e9c5:;
							{
								(_47517_rangeN)++;
							}
						}
						else {
							_case_begin_1a863e5c9:;
							{
								(_47517_rangeN)--;
							}
						}
						_match_end_1a863e3ba:;
					};
				};
				if (((_47517_rangeN > 0LL) || (_47716_token.get()._field_Id != static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1a863d243;
				};
				_1a4d5cc96_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last, _47713_i), _47716_token, &(_47217_parts));
				_47417_last=static_cast<jule::I64>((_47713_i + 1LL));
			}
			_iter_next_1a863d243:;
			++it;
			_47713_i++;
			goto _iter_begin_1a863d243;
		}
		_iter_end_1a863d243:;
	};
	if ((_47417_last < _46648_tokens.len())) {
		if ((_47417_last == 0LL)) {
			if ((_46648_tokens.len() > 0LL)) {
				_1a4d5cc96_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[_47417_last], &(_47217_parts));
			};
		} else {
			_1a4d5cc96_pushRangeLitPart(_self_, _46648_tokens.slice(_47417_last), _46648_tokens[(_47417_last - 1LL)], &(_47217_parts));
		};
	};
	return _47217_parts;;
}



inline jule::Ptr<_1a486a93b_FieldExprPair> _1a4d5d3e5_buildFieldExprPair(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _50841_tokens) {
	if (((_50841_tokens.len() - 2LL) == 0LL)) {
		_1a4d57b3c_pushErr(_self_, _50841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a486a93b_FieldExprPair> _51317_pair = jule::new_ptr<_1a486a93b_FieldExprPair>(_1a486a93b_FieldExprPair{._field_Field=_50841_tokens[0LL], });;
	_50841_tokens=_50841_tokens.slice(2LL);
	_51317_pair.get()._field_Expr=_1a4d61c89_buildFromTokens(_self_, _50841_tokens);
	return _51317_pair;;
}



inline jule::Ptr<_1a4865eca_Expr> _1a4d5d703_buildStructLitExpr(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _52142_tokens) {
	jule::Ptr<_1ceee8973_Token> _52217_token = (*(_52142_tokens))[0LL];;
	if (((_52217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && ((*(_52142_tokens)).len() > 1LL))) {
		_52217_token=(*(_52142_tokens))[1LL];
		if ((_52217_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
			return jule::new_ptr<_1a4865eca_Expr>(_1a4865eca_Expr{._field_Token=_52217_token, ._field_End=(*(_52142_tokens))[((*(_52142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1a4d5d3e5_buildFieldExprPair(_self_, (*(_52142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1a4d61c89_buildFromTokens(_self_, (*(_52142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1a4865eca_Expr>> _1a4d5da11_buildStructLitExprs(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _53643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _53717_parts = _1a4d5d0c6_getBraceRangeLitExprParts(_self_, (*(_53643_tokens)));;
	if ((_53717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a4865eca_Expr>> _54217_pairs = jule::Slice<jule::Ptr<_1a4865eca_Expr>>::alloc(0LL, _53717_parts.len());;
	{
		auto expr = &(_53717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8647879:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _54321_part = *it;
			{
				_54217_pairs = jule::alloc_for_append(_54217_pairs,1);_54217_pairs.__push(_1a4d5d703_buildStructLitExpr(_self_, &(_54321_part)));;
			}
			_iter_next_1a8647879:;
			++it;
			goto _iter_begin_1a8647879;
		}
		_iter_end_1a8647879:;
	};
	return _54217_pairs;;
}



inline jule::Ptr<_1a486b189_StructLit> _1a4d5dd41_buildTypedStructLiteral(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _54946_tokens) {
	jule::I64 _55017_i = 0LL;;
	jule::Ptr<_1a48619a9_TypeDecl> _55118_t;;
	jule::Bool _55121_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &(_54946_tokens), (&(_55017_i)), true);
		_55118_t = __jule_assign_result.__jule_result_arg0;
		_55121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_55121_ok))) {
		return nullptr;;
	} else if ((_55017_i >= _54946_tokens.len())) {
		_1a4d57b3c_pushErr(_self_, _54946_tokens[_55017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54946_tokens=_54946_tokens.slice(_55017_i);
	jule::Ptr<_1ceee8973_Token> _56013_token = _54946_tokens[0LL];;
	if (((_56013_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_56013_token.get()._field_Kind != jule::Str("{", 1)))) {
		_1a4d57b3c_pushErr(_self_, _56013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a486b189_StructLit>(_1a486b189_StructLit{._field_End=_54946_tokens[(_54946_tokens.len() - 1LL)], ._field_Kind=_55118_t, ._field_Exprs=_1a4d5da11_buildStructLitExprs(_self_, &(_54946_tokens))});;
}



inline jule::Ptr<_1a4865eca_Expr> _1a4d5e160_buildBraceLitPart(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _57341_tokens) {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _57418_l;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _57425_r;;
	({
		__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_assign_result = _1a4d62a04_splitDelim(_57341_tokens, static_cast<jule::U64>(11LLU));
		_57418_l = __jule_assign_result.__jule_result_arg0;
		_57425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57418_l != nullptr)) {
		return jule::new_ptr<_1a4865eca_Expr>(_1a4865eca_Expr{._field_Token=(*(_57341_tokens))[0LL], ._field_End=(*(_57341_tokens))[((*(_57341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1a486bdd2_KeyValPair>(_1a486bdd2_KeyValPair{._field_Key=_1a4d61c89_buildFromTokens(_self_, _57418_l), ._field_Val=_1a4d61c89_buildFromTokens(_self_, _57425_r), ._field_Colon=(*(_57341_tokens))[_57418_l.len()]}), &__jule_any_type85)});;
	};
	return _1a4d61c89_buildFromTokens(_self_, (*(_57341_tokens)));;
}



inline jule::Ptr<_1a486b60c_BraceLit> _1a4d5e46d_buildBraceLit(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _59037_tokens) {
	jule::Ptr<_1a486b60c_BraceLit> _59117_lit = jule::new_ptr<_1a486b60c_BraceLit>(_1a486b60c_BraceLit{._field_Token=(*(_59037_tokens))[0LL], ._field_End=(*(_59037_tokens))[((*(_59037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _59617_parts = _1a4d5d0c6_getBraceRangeLitExprParts(_self_, (*(_59037_tokens)));;
	if ((_59617_parts == nullptr)) {
		return _59117_lit;;
	};
	_59117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1a4865eca_Expr>>::alloc(0LL, _59617_parts.len());
	{
		auto expr = &(_59617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8652213:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _60221_part = *it;
			{
				_59117_lit.get()._field_Exprs = jule::alloc_for_append(_59117_lit.get()._field_Exprs,1);_59117_lit.get()._field_Exprs.__push(_1a4d5e160_buildBraceLitPart(_self_, &(_60221_part)));;
			}
			_iter_next_1a8652213:;
			++it;
			goto _iter_begin_1a8652213;
		}
		_iter_end_1a8652213:;
	};
	return _59117_lit;;
}



inline jule::Any _1a4d5e77b_buildBraceRange(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _60939_tokens) {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _61018_exprTokens;;
	jule::I64 _61030_rangeN = 0;;
	({
		__jule_tuple_sx_1ceee8973_Token__jule_tuple_int __jule_assign_result = _1a4d632da_getRangeExprTokens(_60939_tokens);
		_61018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_61030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_61018_exprTokens.len() == 0LL)) {
			_case_begin_1a8653b3d:;
			{
				return jule::Any(_1a4d5e46d_buildBraceLit(_self_, _60939_tokens), &__jule_any_type114);;
			}
		}
		else if ((_61030_rangeN > 0LL)) {
			_case_begin_1a8653bb5:;
			{
				_1a4d57b3c_pushErr(_self_, (*(_60939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8652ad7:;
	};
	jule::Ptr<_1ceee8973_Token> _62113_elseToken = _61018_exprTokens[(_61018_exprTokens.len() - 1LL)];;
	if ((_61018_exprTokens[(_61018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(17LLU))) {
		_61018_exprTokens=_61018_exprTokens.slice(0LL, (_61018_exprTokens.len() - 1LL));
		jule::Any _62421_d = _1a4d6166d_build(_self_, &(_61018_exprTokens));;
		if ((_62421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62421_d };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_1a8656c2e:;
				{
					(*(_60939_tokens))=(*(_60939_tokens)).slice((_61018_exprTokens.len() + 1LL));
					jule::I64 _63125_i = 0LL;;
					jule::Slice<jule::Ptr<_1ceee8973_Token>> _63225_rangeTokens = _1a4d6573d_range(&(_63125_i), jule::Str("{", 1), jule::Str("}", 1), _60939_tokens);;
					jule::Ptr<_1a4869eac_FnCallExpr> _63325_model = _62421_d.cast_ptr<_1a4869eac_FnCallExpr>(&__jule_any_type113);;
					if (_1a486a584_Ignored(_63325_model.ptr())) {
						_1a4d57b3c_pushErr(_self_, _62113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1a4d57e5b_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63325_model.get()._field_Exception=_1a4d68ea0_buildScope((*(_self_))._field_p, &(_63225_rangeTokens), (*(_60939_tokens))[(_63125_i - 1LL)]);
					return _62421_d;;
				}
			}
			else {
				_case_begin_1a8656e2c:;
				{
					_1a4d57b3c_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1a8656d61:;
		};
	};
	{
		auto &_match_expr{ _61018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a865b816:;
			{
				return _1a4d5c8cd_buildUnsafe(_self_, _60939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a865b87c:;
			{
				return jule::Any(_1a4d5c5c0_buildAnonFn(_self_, _60939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a865b66d:;
			{
				return jule::Any(_1a4d5dd41_buildTypedStructLiteral(_self_, (*(_60939_tokens))), &__jule_any_type112);;
			}
		}
		else {
			_case_begin_1a86591d7:;
			{
				_1a4d57b3c_pushErr(_self_, _61018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a865a9be:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d5ea89_getEnumerableParts(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _66141_tokens) {
	_66141_tokens=_66141_tokens.slice(1LL, (_66141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _66318_parts;;
	jule::Slice<_1ceb4952a_Log> _66325_errors;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_66141_tokens), static_cast<jule::U64>(8LLU), true);
		_66318_parts = __jule_assign_result.__jule_result_arg0;
		_66325_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66325_errors);
	return _66318_parts;;
}



inline jule::Ptr<_1a486c5b9_SliceExpr> _1a4d5ed97_buildSlice(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _66833_tokens) {
	jule::Ptr<_1a486c5b9_SliceExpr> _66917_slc = jule::new_ptr<_1a486c5b9_SliceExpr>(_1a486c5b9_SliceExpr{._field_Token=_66833_tokens[0LL], ._field_End=_66833_tokens[(_66833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _67417_parts = _1a4d5ea89_getEnumerableParts(_self_, _66833_tokens);;
	if ((_67417_parts.len() == 0LL)) {
		return _66917_slc;;
	};
	_66917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1a4865eca_Expr>>::alloc(0LL, _67417_parts.len());
	{
		auto expr = &(_67417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8660d9d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _68021_p = *it;
			{
				if ((_68021_p.len() == 0LL)) {
					goto _iter_next_1a8660d9d;
				};
				_66917_slc.get()._field_Exprs = jule::alloc_for_append(_66917_slc.get()._field_Exprs,1);_66917_slc.get()._field_Exprs.__push(_1a4d61c89_buildFromTokens(_self_, _68021_p));;
			}
			_iter_next_1a8660d9d:;
			++it;
			goto _iter_begin_1a8660d9d;
		}
		_iter_end_1a8660d9d:;
	};
	return _66917_slc;;
}



inline jule::Ptr<_1a486ce38_IndexingExpr> _1a4d602e8_buildIndexing(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _69036_exprTokens, jule::Slice<jule::Ptr<_1ceee8973_Token>> _69113_tokens, jule::Ptr<_1ceee8973_Token> _69135_errorToken) {
	jule::Ptr<_1ceee8973_Token> _69217_end = _69113_tokens[(_69113_tokens.len() - 1LL)];;
	_69113_tokens=_69113_tokens.slice(1LL, (_69113_tokens.len() - 1LL));
	if ((_69113_tokens.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, _69135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4865eca_Expr> _69817_expr = _1a4d61c89_buildFromTokens(_self_, _69036_exprTokens);;
	if ((_69817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4865eca_Expr> _70217_index = _1a4d61c89_buildFromTokens(_self_, _69113_tokens);;
	if ((_70217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a486ce38_IndexingExpr>(_1a486ce38_IndexingExpr{._field_Token=_69135_errorToken, ._field_End=_69217_end, ._field_Expr=_69817_expr, ._field_Index=_70217_index});;
}



inline jule::Ptr<_1a486d543_SlicingExpr> _1a4d6088c_buildSlicing(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _71436_exprTokens, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _71463_start, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _71514_to, jule::Ptr<_1ceee8973_Token>* _71533_errorToken, jule::Ptr<_1ceee8973_Token> _71557_end) {
	jule::Ptr<_1a486d543_SlicingExpr> _71617_slc = jule::new_ptr<_1a486d543_SlicingExpr>(_1a486d543_SlicingExpr{._field_Token=(*(_71533_errorToken)), ._field_End=_71557_end, ._field_Expr=_1a4d61c89_buildFromTokens(_self_, (*(_71436_exprTokens))), });;
	if (((*(_71463_start)).len() > 0LL)) {
		_71617_slc.get()._field_Start=_1a4d61c89_buildFromTokens(_self_, (*(_71463_start)));
	};
	if (((*(_71514_to)).len() > 0LL)) {
		_71617_slc.get()._field_To=_1a4d61c89_buildFromTokens(_self_, (*(_71514_to)));
	};
	return _71617_slc;;
}



inline jule::Any _1a4d60b9a_buildBracketRange(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _73040_tokens) {
	jule::Ptr<_1ceee8973_Token> _73117_errorToken = _73040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _73218_exprTokens;;
	jule::I64 _73230_rangeN = 0;;
	({
		__jule_tuple_sx_1ceee8973_Token__jule_tuple_int __jule_assign_result = _1a4d632da_getRangeExprTokens(&(_73040_tokens));
		_73218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73218_exprTokens.len() == 0LL)) {
		return jule::Any(_1a4d5ed97_buildSlice(_self_, _73040_tokens), &__jule_any_type101);;
	} else if ((_73230_rangeN > 0LL)) {
		_1a4d57b3c_pushErr(_self_, _73117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_73040_tokens=_73040_tokens.slice(_73218_exprTokens.len());
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _74717_splitTokens = _73040_tokens.slice(1LL, (_73040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _74818_start;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _74829_to;;
	({
		__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_assign_result = _1a4d62a04_splitDelim(&(_74717_splitTokens), static_cast<jule::U64>(11LLU));
		_74818_start = __jule_assign_result.__jule_result_arg0;
		_74829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74818_start != nullptr) || (_74829_to != nullptr))) {
		return jule::Any(_1a4d6088c_buildSlicing(_self_, &(_73218_exprTokens), &(_74818_start), &(_74829_to), &(_73117_errorToken), _73040_tokens[(_73040_tokens.len() - 1LL)]), &__jule_any_type110);;
	};
	return jule::Any(_1a4d602e8_buildIndexing(_self_, _73218_exprTokens, _73040_tokens, _73117_errorToken), &__jule_any_type109);;
}



inline jule::Any _1a4d60ea8_buildData(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _75533_tokens) {
	{
		auto _match_expr{ (*(_75533_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a866cb46:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a866cbce:;
			{
				return _1a4d58b93_buildSingle(_self_, (*(_75533_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a866cc45:;
			{
				if (((*(_75533_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(30LLU))) {
					return jule::Any(_1a4d58ea1_buildCppLinkedIdent(_self_, _75533_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_1a866c948:;
	};
	jule::Ptr<_1ceee8973_Token> _76717_token = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
	if (((_76717_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_76717_token.get()._field_Kind == jule::Str("...", 3)))) {
		return jule::Any(_1a4d5a304_buildVariadic(_self_, (*(_75533_tokens))), &__jule_any_type82);;
	};
	_76717_token=(*(_75533_tokens))[0LL];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8670de1:;
			{
				if ((((*(_75533_tokens)).len() > 1LL) && (_76717_token.get()._field_Kind == jule::Str("*", 1)))) {
					_76717_token=(*(_75533_tokens))[1LL];
					if (((_76717_token.get()._field_Id == static_cast<jule::U64>(1LLU)) || (_76717_token.get()._field_Id == static_cast<jule::U64>(34LLU)))) {
						return jule::Any(_1a4d59bd8_buildType(_self_, _75533_tokens), &__jule_any_type95);;
					};
				};
				return jule::Any(_1a4d592ae_buildUnary(_self_, (*(_75533_tokens))), &__jule_any_type94);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8670e68:;
			{
				if (((*(_75533_tokens)).len() < 3LL)) {
					goto _match_end_1a8670d14;
				};
				if (((*(_75533_tokens)).len() > 3LL)) {
					jule::Ptr<_1ceee8973_Token> _78921_t = (*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];;
					if (((_78921_t.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_78921_t.get()._field_Kind == jule::Str(")", 1)))) {
						goto _match_end_1a8670d14;
					};
				};
				jule::Ptr<_1ceee8973_Token> _79517_next = (*(_75533_tokens))[1LL];;
				if (((_79517_next.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_79517_next.get()._field_Kind != jule::Str("]", 1)))) {
					goto _match_end_1a8670d14;
				};
				return jule::Any(_1a4d59bd8_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		_match_end_1a8670d14:;
	};
	_76717_token=(*(_75533_tokens))[((*(_75533_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a8671474:;
			{
				return _1a4d59ee6_buildSubIdent(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a86768ca:;
			{
				return jule::Any(_1a4d59bd8_buildType(_self_, _75533_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8676941:;
			{
				return _1a4d5a612_buildOpRight(_self_, _75533_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a86769a7:;
			{
				{
					auto &_match_expr{ _76717_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a8678206:;
						{
							return _1a4d5bea4_buildParenthesesRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a867827d:;
						{
							return _1a4d5e77b_buildBraceRange(_self_, _75533_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a8678305:;
						{
							return _1a4d60b9a_buildBracketRange(_self_, (*(_75533_tokens)));;
						}
					}
					_match_end_1a8677c0b:;
				};
			}
		}
		_match_end_1a867141e:;
	};
	if ((_76717_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		return jule::Any(_1a4d59bd8_buildType(_self_, _75533_tokens), &__jule_any_type95);;
	};
	_1a4d57b3c_pushErr(_self_, _76717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1a4d61360_buildBinop(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _83134_tokens, jule::I64 _83152_i) {
	jule::Ptr<_1ceee8973_Token> _83217_op = (*(_83134_tokens))[_83152_i];;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _83317_leftTokens = (*(_83134_tokens)).slice(0LL, _83152_i);;
	if ((_1a4d620db_isTypeOp(&(_83217_op.get()._field_Kind)) && _1a4d623c7_isTypeRange(&(_83317_leftTokens)))) {
		return jule::Any(_1a4d59bd8_buildType(_self_, _83134_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _83817_rightTokens = (*(_83134_tokens)).slice((_83152_i + 1LL));;
	if ((_83317_leftTokens.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83817_rightTokens.len() == 0LL)) {
		_1a4d57b3c_pushErr(_self_, (*(_83134_tokens))[_83152_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d57e5b_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1a48698a2_BinopExpr>(_1a48698a2_BinopExpr{._field_Left=_1a4d61c89_buildFromTokens(_self_, _83317_leftTokens), ._field_Right=_1a4d61c89_buildFromTokens(_self_, _83817_rightTokens), ._field_Op=_83217_op}), &__jule_any_type115);;
}



inline jule::Any _1a4d6166d_build(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _85629_tokens) {
	jule::I64 _85713_i = _1a4d62c9b_findLowestPrecOp(_85629_tokens);;
	if ((_85713_i == -1LL)) {
		return _1a4d60ea8_buildData(_self_, _85629_tokens);;
	};
	return _1a4d61360_buildBinop(_self_, _85629_tokens, _85713_i);;
}



inline jule::Any _1a4d6197b_buildKind(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _86433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _86518_parts;;
	jule::Slice<_1ceb4952a_Log> _86525_errors;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(_86433_tokens, static_cast<jule::U64>(8LLU), true);
		_86518_parts = __jule_assign_result.__jule_result_arg0;
		_86525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86525_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86525_errors);
		return nullptr;;
	} else if ((_86518_parts.len() > 1LL)) {
		return jule::Any(_1a4d58269_buildTuple(_self_, &(_86518_parts)), &__jule_any_type87);;
	};
	return _1a4d6166d_build(_self_, _86433_tokens);;
}



inline jule::Ptr<_1a4865eca_Expr> _1a4d61c89_buildFromTokens(_1a4d5739a_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _87538_tokens) {
	if ((_87538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a4865eca_Expr>(_1a4865eca_Expr{._field_Token=_87538_tokens[0LL], ._field_End=_87538_tokens[(_87538_tokens.len() - 1LL)], ._field_Kind=_1a4d6197b_buildKind(_self_, &(_87538_tokens))});;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d5739a_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d63b9d_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1a4d6780b_stop(_1a4d674cb_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1a4d67a70_stopped(_1a4d674cb_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1a4d67e38_pushErr(_1a4d674cb_parser* _self_, jule::Ptr<_1ceee8973_Token> _28126_token, jule::Str _28141_fmt, jule::Slice<jule::Any> _28154_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1a4d6693c_compilerErr(&(_28126_token), &(_28141_fmt), _28154_args));;
}



inline void _1a4d68257_pushSuggestion(_1a4d674cb_parser* _self_, jule::Str _28633_fmt, jule::Slice<jule::Any> _28646_args) {
	{
		_1a4d66d6b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28633_fmt, _28646_args);
	};
}



inline jule::Ptr<_1a4865eca_Expr> _1a4d68565_buildExpr(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _29034_tokens) {
	jule::Ptr<_1a4d5739a_exprBuilder> _29117_ep = jule::new_ptr<_1a4d5739a_exprBuilder>(_1a4d5739a_exprBuilder{._field_p=_self_});;
	jule::Ptr<_1a4865eca_Expr> _29417_expr = _1a4d61c89_buildFromTokens(_29117_ep.ptr(), (*(_29034_tokens)));;
	return _29417_expr;;
}



inline jule::Ptr<_1a3c1d0ec_Directive> _1a4d68873_buildDirective(_1a4d674cb_parser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _29837_tokens) {
	if ((_29837_tokens.len() == 1LL)) {
		_1a4d67e38_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29837_tokens[1LL].get()._field_Column != (_29837_tokens[0LL].get()._field_Column + 1LL))) {
		_1a4d67e38_pushErr(_self_, _29837_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a3c1d0ec_Directive>(_1a3c1d0ec_Directive{._field_Tag=_29837_tokens[1LL], ._field_Args=_29837_tokens.slice(2LL)});;
}



inline void _1a4d68ae8_pushDirective(_1a4d674cb_parser* _self_, jule::Ptr<_1a3c1d0ec_Directive> _31336_d) {
	if ((_31336_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86ab1a1:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _31816_pd = *it;
			{
				if ((_31336_d.get()._field_Tag.get()._field_Kind == _31816_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a86ab1a1:;
			++it;
			goto _iter_begin_1a86ab1a1;
		}
		_iter_end_1a86ab1a1:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31336_d);;
}



inline jule::Ptr<_1a4871942_ScopeTree> _1a4d68ea0_buildScope(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _32635_tokens, jule::Ptr<_1ceee8973_Token> _32657_end) {
	jule::Ptr<_1a4871942_ScopeTree> _32717_s = _1a4d4948b_newScope();;
	_32717_s.get()._field_End=_32657_end;
	_1a4d4ad83_scopeParser _32917_sp = _1a4d4ad83_scopeParser{._field_p=_self_, };;
	_1a4d5691b_build(&_32917_sp, _32635_tokens, &(_32717_s));
	return _32717_s;;
}



inline __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool _1a4d69401__buildType(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _33642_tokens, jule::I64* _33713_i, jule::Bool _33722_err) {
	__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1a4d781e0_typeBuilder _33817_tb = _1a4d781e0_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33642_tokens)), ._field_i=_33713_i, ._field_err=_33722_err};;
	jule::Ptr<_1a48619a9_TypeDecl> _34418_decl;;
	jule::Bool _34424_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d7b48a_build(&_33817_tb);
		_34418_decl = __jule_assign_result.__jule_result_arg0;
		_34424_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34418_decl;
	__jule_func_result.__jule_result_arg1 = _34424_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool _1a4d69852_buildType(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _34941_tokens, jule::I64* _35013_i, jule::Bool _35022_err) {
	__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ceee8973_Token> _35113_token = (*(_34941_tokens))[(*(_35013_i))];;
	jule::Ptr<_1a48619a9_TypeDecl> _35218_t;;
	jule::Bool _35221_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69401__buildType(_self_, _34941_tokens, _35013_i, _35022_err);
		_35218_t = __jule_assign_result.__jule_result_arg0;
		_35221_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_35022_err && (!(_35221_ok)))) {
		_1a4d67e38_pushErr(_self_.ptr(), _35113_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35218_t;
	__jule_func_result.__jule_result_arg1 = _35221_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1a4877c78_TypeAliasDecl> _1a4d69b60_buildTypeAliasDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _35943_tokens) {
	jule::I64 _36017_i = 1LL;;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4877c78_TypeAliasDecl> _36517_tad = jule::new_ptr<_1a4877c78_TypeAliasDecl>(_1a4877c78_TypeAliasDecl{._field_Token=(*(_35943_tokens))[1LL], ._field_Ident=(*(_35943_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1ceee8973_Token> _36917_token = (*(_35943_tokens))[_36017_i];;
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _36917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	_36917_token=(*(_35943_tokens))[_36017_i];
	if ((_36917_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	(_36017_i)++;
	if ((_36017_i >= (*(_35943_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_35943_tokens))[(_36017_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36517_tad;;
	};
	jule::Ptr<_1a48619a9_TypeDecl> _39018_t;;
	jule::Bool _39021_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, _35943_tokens, (&(_36017_i)), true);
		_39018_t = __jule_assign_result.__jule_result_arg0;
		_39021_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36517_tad.get()._field_Kind=_39018_t;
	if ((_39021_ok && (_36017_i < (*(_35943_tokens)).len()))) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_35943_tokens))[_36017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36517_tad.get()._field_Public=_1a4d77178_isPub(&(_36517_tad.get()._field_Ident));
	return _36517_tad;;
}



inline void _1a4d69e7e_buildVarTypeAndExpr(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1a4874417_VarDecl>* _39944_v, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _39962_tokens) {
	jule::I64 _40017_i = 0LL;;
	jule::Ptr<_1ceee8973_Token> _40117_tok = (*(_39962_tokens))[_40017_i];;
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_40017_i)++;
		if (((_40017_i >= (*(_39962_tokens)).len()) || (((*(_39962_tokens))[_40017_i].get()._field_Id == static_cast<jule::U64>(7LLU)) && ((*(_39962_tokens))[_40017_i].get()._field_Kind == jule::Str("=", 1))))) {
			_1a4d67e38_pushErr(_self_.ptr(), _40117_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1a48619a9_TypeDecl> _40922_t;;
		jule::Bool _40925_ok = false;;
		({
			__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, _39962_tokens, (&(_40017_i)), true);
			_40922_t = __jule_assign_result.__jule_result_arg0;
			_40925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40925_ok) {
			(*(_39944_v)).get()._field_Kind=_40922_t;
			if ((_40017_i >= (*(_39962_tokens)).len())) {
				return;;
			};
			_40117_tok=(*(_39962_tokens))[_40017_i];
		};
	};
	if ((_40117_tok.get()._field_Id == static_cast<jule::U64>(7LLU))) {
		if ((_40117_tok.get()._field_Kind != jule::Str("=", 1))) {
			_1a4d67e38_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_1ceee8973_Token>> _42421_exprTokens = (*(_39962_tokens)).slice((_40017_i + 1LL));;
		if ((_42421_exprTokens.len() == 0LL)) {
			_1a4d67e38_pushErr(_self_.ptr(), _40117_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39944_v)).get()._field_Expr=_1a4d68565_buildExpr(_self_, &(_42421_exprTokens));
	} else {
		_1a4d67e38_pushErr(_self_.ptr(), _40117_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a4d6a29d_buildVarCommon(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1a4874417_VarDecl>* _43539_v, jule::Slice<jule::Ptr<_1ceee8973_Token>> _43556_tokens) {
	(*(_43539_v)).get()._field_Token=_43556_tokens[0LL];
	if (((*(_43539_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_43539_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43539_v)).get()._field_Ident=(*(_43539_v)).get()._field_Token.get()._field_Kind;
	(*(_43539_v)).get()._field_Public=_1a4d77178_isPub(&((*(_43539_v)).get()._field_Ident));
	(*(_43539_v)).get()._field_Kind=nullptr;
	if ((_43556_tokens.len() > 1LL)) {
		_43556_tokens=_43556_tokens.slice(1LL);
		_1a4d69e7e_buildVarTypeAndExpr(_self_, _43539_v, &(_43556_tokens));
	};
}



inline void _1a4d6a666_buildVarBegin(_1a4d674cb_parser* _self_, jule::Ptr<_1a4874417_VarDecl>* _45137_v, jule::I64* _45155_i, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _45164_tokens) {
	jule::Ptr<_1ceee8973_Token> _45213_tok = (*(_45164_tokens))[(*(_45155_i))];;
	{
		auto &_match_expr{ _45213_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a86c585d:;
			{
				(*(_45137_v)).get()._field_Statically=true;
				goto _case_begin_1a86c5088;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a86c5088:;
			{
				((*(_45155_i)))++;
				if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
					_1a4d67e38_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_45164_tokens))[(*(_45155_i))].get()._field_Id == static_cast<jule::U64>(35LLU))) {
					(*(_45137_v)).get()._field_Mutable=true;
					((*(_45155_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1a86c50ee:;
			{
				((*(_45155_i)))++;
				(*(_45137_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1a86c4ecd:;
			{
				_1a4d67e38_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a86c4d57:;
	};
	if (((*(_45155_i)) >= (*(_45164_tokens)).len())) {
		_1a4d67e38_pushErr(_self_, _45213_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1a4874417_VarDecl> _1a4d6a974_buildVar(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _48132_tokens) {
	jule::I64 _48217_i = 0LL;;
	jule::Ptr<_1a4874417_VarDecl> _48317_v = jule::new_ptr<_1a4874417_VarDecl>(_1a4874417_VarDecl{._field_Token=_48132_tokens[0LL], });;
	_1a4d6a666_buildVarBegin(_self_.ptr(), &(_48317_v), &(_48217_i), &(_48132_tokens));
	if ((_48217_i >= _48132_tokens.len())) {
		return nullptr;;
	};
	_48132_tokens=_48132_tokens.slice(_48217_i);
	if (((_48132_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_48132_tokens[0LL].get()._field_Kind == jule::Str("&", 1)))) {
		_48317_v.get()._field_Reference=true;
		if ((_48132_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_48132_tokens=_48132_tokens.slice(1LL);
	};
	_1a4d6a29d_buildVarCommon(_self_, &(_48317_v), _48132_tokens);
	return _48317_v;;
}



inline jule::Ptr<_1a486dca2_GenericDecl> _1a4d6ac82_buildGeneric(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _50337_tokens) {
	jule::Ptr<_1a486dca2_GenericDecl> _50417_g = jule::new_ptr<_1a486dca2_GenericDecl>(_1a486dca2_GenericDecl{._field_Token=(*(_50337_tokens))[0LL], });;
	if ((_50417_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _50417_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50417_g.get()._field_Ident=_50417_g.get()._field_Token.get()._field_Kind;
	if (((*(_50337_tokens)).len() > 1LL)) {
		if (((*(_50337_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
			_1a4d67e38_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50337_tokens)).len() == 2LL)) {
			_1a4d67e38_pushErr(_self_.ptr(), (*(_50337_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1ceee8973_Token>> _52121_constraintTokens = (*(_50337_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _52222_parts;;
		jule::Slice<_1ceb4952a_Log> _52229_errors;;
		({
			__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d65dc0_partsKind(&(_52121_constraintTokens), jule::Str("|", 1), true);
			_52222_parts = __jule_assign_result.__jule_result_arg0;
			_52229_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52229_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52229_errors);
			return nullptr;;
		};
		_50417_g.get()._field_Constraint=jule::new_ptr<_1a486d82e_Constraint>(_1a486d82e_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, _52222_parts.len())});
		{
			auto expr = &(_52222_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a86d1a34:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _52825_part = *it;
				{
					jule::I64 _52925_i = 0LL;;
					jule::Ptr<_1a48619a9_TypeDecl> _53026_kind;;
					({
						__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, &(_52825_part), (&(_52925_i)), true);
						_53026_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50417_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50417_g.get()._field_Constraint.get()._field_Mask,1);_50417_g.get()._field_Constraint.get()._field_Mask.__push(_53026_kind);;
					if ((_52925_i < _52825_part.len())) {
						_1a4d67e38_pushErr(_self_.ptr(), _52825_part[_52925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a86d1a34:;
				++it;
				goto _iter_begin_1a86d1a34;
			}
			_iter_end_1a86d1a34:;
		};
	};
	return _50417_g;;
}



inline jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _1a4d6b139_buildGenerics(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _54038_tokens, jule::Ptr<_1ceee8973_Token>* _54057_errorToken) {
	if (((*(_54038_tokens)).len() == 0LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_54057_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _54618_parts;;
	jule::Slice<_1ceb4952a_Log> _54625_errors;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(_54038_tokens, static_cast<jule::U64>(8LLU), true);
		_54618_parts = __jule_assign_result.__jule_result_arg0;
		_54625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54625_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54625_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>> _55217_generics = jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>::alloc(0LL, _54618_parts.len());;
	{
		auto expr = &(_54618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86d66b5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _55321_part = *it;
			{
				_55217_generics = jule::alloc_for_append(_55217_generics,1);_55217_generics.__push(_1a4d6ac82_buildGeneric(_self_, &(_55321_part)));;
			}
			_iter_next_1a86d66b5:;
			++it;
			goto _iter_begin_1a86d66b5;
		}
		_iter_end_1a86d66b5:;
	};
	return _55217_generics;;
}



inline jule::Ptr<_1a4872118_ParamDecl> _1a4d6b447_buildSelfParam(_1a4d674cb_parser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _56037_tokens) {
	if ((_56037_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1a4872118_ParamDecl> _56517_param = jule::new_ptr<_1a4872118_ParamDecl>();;
	jule::I64 _56817_i = 0LL;;
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_56517_param.get()._field_Mutable=true;
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1a4d67e38_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Kind == jule::Str("&", 1))) {
		_56517_param.get()._field_Ident=jule::Str("&", 1);
		(_56817_i)++;
		if ((_56817_i >= _56037_tokens.len())) {
			_1a4d67e38_pushErr(_self_, _56037_tokens[(_56817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_56037_tokens[_56817_i].get()._field_Id == static_cast<jule::U64>(27LLU))) {
		_56517_param.get()._field_Ident+=jule::Str("self", 4);
		_56517_param.get()._field_Token=_56037_tokens[_56817_i];
		(_56817_i)++;
		if ((_56817_i < _56037_tokens.len())) {
			_1a4d67e38_pushErr(_self_, _56037_tokens[_56817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56517_param;;
}



inline void _1a4d6b810_paramTypeBegin(_1a4d674cb_parser* _self_, jule::Ptr<_1a4872118_ParamDecl>* _59938_param, jule::I64* _59962_i, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _59971_tokens) {
	for (; ((*(_59962_i)) < (*(_59971_tokens)).len()); ((*(_59962_i)))++) {
		{
			jule::Ptr<_1ceee8973_Token> _60117_token = (*(_59971_tokens))[(*(_59962_i))];;
			if ((_60117_token.get()._field_Id != static_cast<jule::U64>(7LLU))) {
				return;;
			} else if ((_60117_token.get()._field_Kind != jule::Str("...", 3))) {
				return;;
			};
			if ((*(_59938_param)).get()._field_Variadic) {
				_1a4d67e38_pushErr(_self_, _60117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1a86dd5ac;
			};
			(*(_59938_param)).get()._field_Variadic=true;
		}
	_iter_next_1a86dd5ac:;
	}
	_iter_end_1a86dd5ac:;;
}



inline void _1a4d6bb2e_buildParamType(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1a4872118_ParamDecl>* _61639_param, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _61663_tokens) {
	jule::I64 _61717_i = 0LL;;
	_1a4d6b810_paramTypeBegin(_self_.ptr(), _61639_param, &(_61717_i), _61663_tokens);
	if ((_61717_i >= (*(_61663_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, _61663_tokens, (&(_61717_i)), true);
		(*(_61639_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61717_i < (*(_61663_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_61663_tokens))[_61717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1a4d6be4d_buildParamBody(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1a4872118_ParamDecl>* _62939_param, jule::Slice<jule::Ptr<_1ceee8973_Token>> _62962_tokens) {
	jule::Ptr<_1ceee8973_Token> _63017_tok = _62962_tokens[0LL];;
	if ((_62962_tokens.len() == 1LL)) {
		(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
		return;;
	} else if ((_62962_tokens.len() < 3LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _63017_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62962_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		(*(_62939_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a4d6bb2e_buildParamType(_self_, _62939_param, &(_62962_tokens));
		return;;
	};
	(*(_62939_param)).get()._field_Ident=_63017_tok.get()._field_Kind;
	_62962_tokens=_62962_tokens.slice(2LL);
	_1a4d6bb2e_buildParamType(_self_, _62939_param, &(_62962_tokens));
}



inline jule::Ptr<_1a4872118_ParamDecl> _1a4d6c25b_buildParam(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _64934_tokens) {
	jule::Ptr<_1a4872118_ParamDecl> _65017_param = jule::new_ptr<_1a4872118_ParamDecl>(_1a4872118_ParamDecl{._field_Token=_64934_tokens[0LL], });;
	if ((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_65017_param.get()._field_Mutable=true;
		if ((_64934_tokens.len() == 1LL)) {
			_1a4d67e38_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64934_tokens=_64934_tokens.slice(1LL);
		_65017_param.get()._field_Token=_64934_tokens[0LL];
	};
	if ((_64934_tokens.len() >= 3LL)) {
		if (((_65017_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_65017_param.get()._field_Token.get()._field_Kind == jule::Str("&", 1)))) {
			if ((_64934_tokens.len() == 1LL)) {
				_1a4d67e38_pushErr(_self_.ptr(), _64934_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64934_tokens[1LL].get()._field_Id == static_cast<jule::U64>(2LLU)) && (_64934_tokens[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
				_65017_param.get()._field_Reference=true;
				_64934_tokens=_64934_tokens.slice(1LL);
				_65017_param.get()._field_Token=_64934_tokens[0LL];
			};
		};
	};
	if ((_65017_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_65017_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1a4d6bb2e_buildParamType(_self_, &(_65017_param), &(_64934_tokens));
	} else {
		_1a4d6be4d_buildParamBody(_self_, &(_65017_param), _64934_tokens);
	};
	return _65017_param;;
}



inline void _1a4d6c4d1_checkParams(_1a4d674cb_parser* _self_, jule::Slice<jule::Ptr<_1a4872118_ParamDecl>>* _69235_params) {
	{
		auto expr = _69235_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86ecba4:;
		if (it != expr_end) {
			jule::Ptr<_1a4872118_ParamDecl> _69321_param = *it;
			{
				if ((_1a487247b_IsSelf(_69321_param.ptr()) || (_69321_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1a86ecba4;
				};
				if ((_69321_param.get()._field_Token == nullptr)) {
					_1a4d67e38_pushErr(_self_, _69321_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69321_param.get()._field_Kind=jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_69321_param.get()._field_Token, ._field_Ident=_69321_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type19)});
					_69321_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1a86ecba4:;
			++it;
			goto _iter_begin_1a86ecba4;
		}
		_iter_end_1a86ecba4:;
	};
}



inline jule::Slice<jule::Ptr<_1a4872118_ParamDecl>> _1a4d6c888_buildParams(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _71236_tokens, jule::Bool _71254_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _71318_parts;;
	jule::Slice<_1ceb4952a_Log> _71325_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(_71236_tokens, static_cast<jule::U64>(8LLU), true);
		_71318_parts = __jule_assign_result.__jule_result_arg0;
		_71325_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71325_errs);
	if ((_71318_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a4872118_ParamDecl>> _71917_params = nullptr;;
	if ((_71254_method && (_71318_parts.len() > 0LL))) {
		jule::Ptr<_1a4872118_ParamDecl> _72121_param = _1a4d6b447_buildSelfParam(_self_.ptr(), _71318_parts[0LL]);;
		if (((_72121_param != nullptr) && _1a487247b_IsSelf(_72121_param.ptr()))) {
			_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72121_param);;
			_71318_parts=_71318_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8702307:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _72821_part = *it;
			{
				jule::Ptr<_1a4872118_ParamDecl> _72921_param = _1a4d6c25b_buildParam(_self_, _72821_part);;
				if ((_72921_param != nullptr)) {
					_71917_params = jule::alloc_for_append(_71917_params,1);_71917_params.__push(_72921_param);;
				};
			}
			_iter_next_1a8702307:;
			++it;
			goto _iter_begin_1a8702307;
		}
		_iter_end_1a8702307:;
	};
	_1a4d6c4d1_checkParams(_self_.ptr(), &(_71917_params));
	return _71917_params;;
}



inline __jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool _1a4d6cc40_buildMultiRetType(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _73942_tokens, jule::I64* _73965_i) {
	__jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a4864abc_RetTypeDecl>();
	((*(_73965_i)))++;
	if (((*(_73965_i)) >= (*(_73942_tokens)).len())) {
		((*(_73965_i)))--;
		({
			__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, _73942_tokens, (&((*(_73965_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73965_i)))--;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _74917_rangeTokens = _1a4d6573d_range(_73965_i, jule::Str("(", 1), jule::Str(")", 1), _73942_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _75118_parts;;
	jule::Slice<_1ceb4952a_Log> _75125_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_74917_rangeTokens), static_cast<jule::U64>(8LLU), true);
		_75118_parts = __jule_assign_result.__jule_result_arg0;
		_75125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_75125_errs);
	if ((_75118_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _75717_types = jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, _75118_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1ceee8973_Token>>::alloc(0LL, _75118_parts.len());
	{
		auto expr = &(_75118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87085a5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _75921_part = *it;
			{
				jule::Ptr<_1ceee8973_Token> _76021_token = _75921_part[0LL];;
				jule::I64 _76121_offset = 0LL;;
				if ((_75921_part.len() > 1LL)) {
					_76021_token=_75921_part[1LL];
					if ((_76021_token.get()._field_Id == static_cast<jule::U64>(11LLU))) {
						_76121_offset=2LL;
						if ((_75921_part.len() < 3LL)) {
							_1a4d67e38_pushErr(_self_.ptr(), _76021_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1a87085a5;
						};
					};
				};
				_76021_token=_75921_part[0LL];
				if ((_76121_offset != 2LL)) {
					jule::Ptr<_1ceee8973_Token> _77725_newToken = jule::new_ptr<_1ceee8973_Token>((*(_76021_token)));;
					_77725_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77725_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_76021_token);;
				};
				jule::Ptr<_1a48619a9_TypeDecl> _78422_tk;;
				({
					__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, &(_75921_part), (&(_76121_offset)), true);
					_78422_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_76121_offset < _75921_part.len())) {
					_1a4d67e38_pushErr(_self_.ptr(), _75921_part[_76121_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75717_types = jule::alloc_for_append(_75717_types,1);_75717_types.__push(_78422_tk);;
			}
			_iter_next_1a87085a5:;
			++it;
			goto _iter_begin_1a87085a5;
		}
		_iter_end_1a87085a5:;
	};
	if ((_75717_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=(*(_73942_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1a4863549_TupleTypeDecl>(_1a4863549_TupleTypeDecl{._field_Types=_75717_types}), &__jule_any_type81)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75717_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool _1a4d6d0e7_buildRetType(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _80737_tokens, jule::I64* _80760_i) {
	__jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1a4864abc_RetTypeDecl>();
	if (((*(_80760_i)) >= (*(_80737_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1ceee8973_Token> _81317_token = (*(_80737_tokens))[(*(_80760_i))];;
	{
		auto &_match_expr{ _81317_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8711b85:;
			{
				if ((_81317_token.get()._field_Kind == jule::Str("{", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8711beb:;
			{
				if ((_81317_token.get()._field_Kind == jule::Str("=", 1))) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1a8711c62:;
			{
				if ((((*(_80760_i)) + 1LL) >= (*(_80737_tokens)).len())) {
					_1a4d67e38_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80760_i)))++;
				_81317_token=(*(_80737_tokens))[(*(_80760_i))];
				if ((_81317_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _81317_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1a871458e:;
							{
								({
									__jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a4d6cc40_buildMultiRetType(_self_, _80737_tokens, _80760_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1a8714605:;
							{
								_1a4d67e38_pushErr(_self_.ptr(), _81317_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1a87144d4:;
					};
				};
				({
					__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, _80737_tokens, (&((*(_80760_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1a8711a86:;
	};
	((*(_80760_i)))++;
	_1a4d67e38_pushErr(_self_.ptr(), _81317_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1a4873438_FnDecl> _1a4d6d548_buildFnPrototype(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _85241_tokens, jule::I64* _85264_i, jule::Bool _85272_method) {
	jule::Ptr<_1a4873438_FnDecl> _85317_f = jule::new_ptr<_1a4873438_FnDecl>(_1a4873438_FnDecl{._field_Token=(*(_85241_tokens))[(*(_85264_i))], });;
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		_85317_f.get()._field_Statically=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	if ((_85317_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_85317_f.get()._field_Unsafety=true;
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Token=(*(_85241_tokens))[(*(_85264_i))];
	};
	((*(_85264_i)))++;
	if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ceee8973_Token> _88613_tok = (*(_85241_tokens))[(*(_85264_i))];;
	if ((_88613_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
		((*(_85264_i)))++;
		if (((*(_85264_i)) >= (*(_85241_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), _85317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85317_f.get()._field_Ident=_88613_tok.get()._field_Kind;
	} else {
		_85317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1ceee8973_Token> _89813_errorToken = (*(_85241_tokens))[(*(_85264_i))];;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _89917_genericsTokens = _1a4d6573d_range(_85264_i, jule::Str("[", 1), jule::Str("]", 1), _85241_tokens);;
	if ((_89917_genericsTokens != nullptr)) {
		_85317_f.get()._field_Generics=_1a4d6b139_buildGenerics(_self_, &(_89917_genericsTokens), &(_89813_errorToken));
	};
	if (((*(_85241_tokens))[(*(_85264_i))].get()._field_Kind != jule::Str("(", 1))) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_85241_tokens))[(*(_85264_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _90917_paramsToks = _1a4d6573d_range(_85264_i, jule::Str("(", 1), jule::Str(")", 1), _85241_tokens);;
	if ((_90917_paramsToks.len() > 0LL)) {
		_85317_f.get()._field_Params=_1a4d6c888_buildParams(_self_, &(_90917_paramsToks), _85272_method);
	};
	if (((*(_85264_i)) < (*(_85241_tokens)).len())) {
		jule::Ptr<_1ceee8973_Token> _91517_token = (*(_85241_tokens))[(*(_85264_i))];;
		if (((_91517_token.get()._field_Id == static_cast<jule::U64>(7LLU)) && (_91517_token.get()._field_Kind == jule::Str("!", 1)))) {
			_85317_f.get()._field_Exceptional=true;
			((*(_85264_i)))++;
		};
	};
	_85317_f.get()._field_Public=_1a4d77178_isPub(&(_85317_f.get()._field_Ident));
	({
		__jule_tuple_x_1a4864abc_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1a4d6d0e7_buildRetType(_self_, _85241_tokens, _85264_i);
		_85317_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85317_f;;
}



inline jule::Ptr<_1a4873438_FnDecl> _1a4d6d999_buildFn(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _92932_tokens, jule::Bool _92950_method, jule::Bool _92964_prototype) {
	jule::I64 _93017_i = 0LL;;
	jule::Ptr<_1a4873438_FnDecl> _93117_f = _1a4d6d548_buildFnPrototype(_self_, _92932_tokens, &(_93017_i), _92950_method);;
	if (_92964_prototype) {
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), (*(_92932_tokens))[(_93017_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _93117_f;;
	} else if ((_93117_f == nullptr)) {
		return _93117_f;;
	};
	if ((_93017_i >= (*(_92932_tokens)).len())) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _94717_blockTokens = _1a4d6573d_range(&(_93017_i), jule::Str("{", 1), jule::Str("}", 1), _92932_tokens);;
	if ((_94717_blockTokens != nullptr)) {
		_93117_f.get()._field_Scope=_1a4d68ea0_buildScope(_self_, &(_94717_blockTokens), (*(_92932_tokens))[(_93017_i - 1LL)]);
		_93117_f.get()._field_Scope.get()._field_Unsafety=_93117_f.get()._field_Unsafety;
		if ((_93017_i < (*(_92932_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), (*(_92932_tokens))[_93017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _93117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _93117_f;;
}



inline jule::Slice<jule::Ptr<_1ceee8973_Token>> _1a4d6dca7_getUseDeclSelectors(_1a4d674cb_parser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _96342_tokens) {
	jule::I64 _96417_i = 0LL;;
	_96342_tokens=_1a4d6573d_range(&(_96417_i), jule::Str("{", 1), jule::Str("}", 1), &(_96342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _96618_parts;;
	jule::Slice<_1ceb4952a_Log> _96625_errs;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_96342_tokens), static_cast<jule::U64>(8LLU), true);
		_96618_parts = __jule_assign_result.__jule_result_arg0;
		_96625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96625_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96625_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _97217_selectors = jule::Slice<jule::Ptr<_1ceee8973_Token>>::alloc(0LL, _96618_parts.len());;
	{
		auto expr = &(_96618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a872a495:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _97321_part = *it;
			{
				if ((_97321_part.len() > 1LL)) {
					_1a4d67e38_pushErr(_self_, _97321_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1ceee8973_Token> _97721_tok = _97321_part[0LL];;
				if (((_97721_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) && (_97721_tok.get()._field_Id != static_cast<jule::U64>(27LLU)))) {
					_1a4d67e38_pushErr(_self_, _97721_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1a4d68257_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1a872a495;
				};
				_97217_selectors = jule::alloc_for_append(_97217_selectors,1);_97217_selectors.__push(_97721_tok);;
			}
			_iter_next_1a872a495:;
			++it;
			goto _iter_begin_1a872a495;
		}
		_iter_end_1a872a495:;
	};
	return _97217_selectors;;
}



inline void _1a4d6e0c6_buildCppUseDecl(_1a4d674cb_parser* _self_, jule::Ptr<_1a4879164_UseDecl>* _98839_decl, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _98856_tokens) {
	if (((*(_98856_tokens)).len() > 1LL)) {
		_1a4d67e38_pushErr(_self_, (*(_98856_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ceee8973_Token> _99213_token = (*(_98856_tokens))[0LL];;
	if (((_99213_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || ((_99213_token.get()._field_Kind[0LL] != '`') && (_99213_token.get()._field_Kind[0LL] != '\"')))) {
		_1a4d67e38_pushErr(_self_, _99213_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98839_decl)).get()._field_CppLinked=true;
	(*(_98839_decl)).get()._field_LinkPath=_99213_token.get()._field_Kind.slice(1LL, (_99213_token.get()._field_Kind.len() - 1LL));
}



inline void _1a4d6e3e5_buildStdUseDecl(_1a4d674cb_parser* _self_, jule::Ptr<_1a4879164_UseDecl>* _100139_decl, jule::Slice<jule::Ptr<_1ceee8973_Token>> _100159_tokens) {
	(*(_100139_decl)).get()._field_Std=true;
	jule::Ptr<_1ceee8973_Token> _100417_token = _100159_tokens[0LL];;
	if ((_100159_tokens.len() < 3LL)) {
		_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_100159_tokens=_100159_tokens.slice(2LL);
	_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a8733adb:;
			{
				_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a8733b63:;
			{
				if ((_100417_token.get()._field_Kind != jule::Str("}", 1))) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _102121_selectors = nullptr;;
				({
					__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_assign_result = _1a4d659d5_rangeLast(&(_100159_tokens));
					_100159_tokens = __jule_assign_result.__jule_result_arg0;
					_102121_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_100139_decl)).get()._field_Selected=_1a4d6dca7_getUseDeclSelectors(_self_, _102121_selectors);
				if ((_100159_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a8733bda:;
			{
				if ((_100417_token.get()._field_Kind != jule::Str("*", 1))) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100417_token=_100159_tokens[(_100159_tokens.len() - 1LL)];
				if ((_100417_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100159_tokens=_100159_tokens.slice(0LL, (_100159_tokens.len() - 1LL));
				if ((_100159_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _100417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_100139_decl)).get()._field_Full=true;
			}
		}
		_match_end_1a8733a64:;
	};
	(*(_100139_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1a4d67113_tokstoa(&(_100159_tokens)));
}



inline void _1a4d6e714_buildIdentUseDecl(_1a4d674cb_parser* _self_, jule::Ptr<_1a4879164_UseDecl>* _106341_decl, jule::Slice<jule::Ptr<_1ceee8973_Token>> _106361_tokens) {
	(*(_106341_decl)).get()._field_Std=false;
	jule::Ptr<_1ceee8973_Token> _106617_token = _106361_tokens[(_106361_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1a873d1cd:;
			{
				_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a873d7a5:;
			{
				if ((_106617_token.get()._field_Kind != jule::Str("}", 1))) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _107721_selectors = nullptr;;
				({
					__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_assign_result = _1a4d659d5_rangeLast(&(_106361_tokens));
					_106361_tokens = __jule_assign_result.__jule_result_arg0;
					_107721_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106341_decl)).get()._field_Selected=_1a4d6dca7_getUseDeclSelectors(_self_, _107721_selectors);
				if ((_106361_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a873d94d:;
			{
				if ((_106617_token.get()._field_Kind != jule::Str("*", 1))) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106617_token=_106361_tokens[(_106361_tokens.len() - 1LL)];
				if ((_106617_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106361_tokens=_106361_tokens.slice(0LL, (_106361_tokens.len() - 1LL));
				if ((_106361_tokens.len() == 0LL)) {
					_1a4d67e38_pushErr(_self_, _106617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106341_decl)).get()._field_Full=true;
			}
		}
		_match_end_1a873d750:;
	};
	(*(_106341_decl)).get()._field_LinkPath=_1a4d67113_tokstoa(&(_106361_tokens));
}



inline void _1a4d6ea33_parseUseDecl(_1a4d674cb_parser* _self_, jule::Ptr<_1a4879164_UseDecl>* _112636_decl, jule::Slice<jule::Ptr<_1ceee8973_Token>> _112656_tokens) {
	if ((*(_112636_decl)).get()._field_CppLinked) {
		_1a4d6e0c6_buildCppUseDecl(_self_, _112636_decl, &(_112656_tokens));
		return;;
	};
	jule::Ptr<_1ceee8973_Token> _113217_token = _112656_tokens[0LL];;
	if ((_113217_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112656_tokens.len() > 2LL) && (_112656_tokens[1LL].get()._field_Id == static_cast<jule::U64>(12LLU)))) {
		(*(_112636_decl)).get()._field_Alias=_113217_token.get()._field_Kind;
		if ((_112656_tokens[2LL].get()._field_Id != static_cast<jule::U64>(2LLU))) {
			_1a4d67e38_pushErr(_self_, _113217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1a4d68257_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112656_tokens=_112656_tokens.slice(2LL);
		_113217_token=_112656_tokens[0LL];
	};
	;
	{
		
		if ((_113217_token.get()._field_Kind == jule::Str("std", 3))) {
			_case_begin_1a8749a58:;
			{
				_1a4d6e3e5_buildStdUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		else {
			_case_begin_1a874bb26:;
			{
				_1a4d6e714_buildIdentUseDecl(_self_, _112636_decl, _112656_tokens);
			}
		}
		_match_end_1a874bab0:;
	};
}



inline jule::Ptr<_1a4879164_UseDecl> _1a4d6edda_buildUseDecl(_1a4d674cb_parser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _116035_tokens, jule::Bool _116053_cpp_linked) {
	jule::Ptr<_1a4879164_UseDecl> _116117_decl = jule::new_ptr<_1a4879164_UseDecl>(_1a4879164_UseDecl{._field_Token=_116035_tokens[0LL], ._field_CppLinked=_116053_cpp_linked, });;
	if ((_116035_tokens.len() < 2LL)) {
		_1a4d67e38_pushErr(_self_, _116117_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_116035_tokens=_116035_tokens.slice(1LL);
	_1a4d6ea33_parseUseDecl(_self_, &(_116117_decl), _116035_tokens);
	return _116117_decl;;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d70292_buildTypeEnumItemKind(jule::Ptr<_1a4d674cb_parser> _self_, jule::I64* _117446_i, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _117459_tokens) {
	jule::I64 _117517_braceN = 0LL;;
	jule::I64 _117613_exprStart = (*(_117446_i));;
	for (; ((*(_117446_i)) < (*(_117459_tokens)).len()); ((*(_117446_i)))++) {
		{
			jule::Ptr<_1ceee8973_Token> _117817_t = (*(_117459_tokens))[(*(_117446_i))];;
			if ((_117817_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _117817_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a8751c08:;
						{
							(_117517_braceN)++;
							goto _iter_next_1a8750773;
						}
					}
					else {
						_case_begin_1a875180c:;
						{
							(_117517_braceN)--;
						}
					}
					_match_end_1a87515ed:;
				};
			};
			if ((_117517_braceN > 0LL)) {
				goto _iter_next_1a8750773;
			};
			if (((_117817_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_117446_i)) + 1LL) >= (*(_117459_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _119425_kindTokens = nullptr;;
				if ((_117817_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart, (*(_117446_i)));
				} else {
					_119425_kindTokens=(*(_117459_tokens)).slice(_117613_exprStart);
				};
				jule::I64 _120025_j = 0LL;;
				jule::Ptr<_1a48619a9_TypeDecl> _120126_kind;;
				({
					__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, &(_119425_kindTokens), (&(_120025_j)), true);
					_120126_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_120025_j < _119425_kindTokens.len())) {
					_1a4d67e38_pushErr(_self_.ptr(), _119425_kindTokens[_120025_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _120126_kind;;
			};
		}
	_iter_next_1a8750773:;
	}
	_iter_end_1a8750773:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>> _1a4d705a0_buildTypeEnumItems(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _121143_tokens) {
	jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>> _121217_items = jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121317_i = 0LL;;
	for (; (_121317_i < (*(_121143_tokens)).len()); (_121317_i)++) {
		{
			jule::Ptr<_1ceee8973_Token> _121521_t = (*(_121143_tokens))[_121317_i];;
			jule::Ptr<_1a487ab16_TypeEnumItemDecl> _121621_item = jule::new_ptr<_1a487ab16_TypeEnumItemDecl>();;
			_121621_item.get()._field_Token=_121521_t;
			if (((_121621_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(2LLU)) && (((*(_121143_tokens)).len() - _121317_i) > 2LL))) {
				_121621_item.get()._field_Ident=_121621_item.get()._field_Token.get()._field_Kind;
				_121521_t=(*(_121143_tokens))[(_121317_i + 1LL)];
				if ((_121521_t.get()._field_Id == static_cast<jule::U64>(11LLU))) {
					_121317_i+=2LL;
					if (((_121317_i >= (*(_121143_tokens)).len()) || ((*(_121143_tokens))[_121317_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
						_1a4d67e38_pushErr(_self_.ptr(), _121521_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1a87564d2;
					};
				};
			};
			_121621_item.get()._field_Kind=_1a4d70292_buildTypeEnumItemKind(_self_, &(_121317_i), _121143_tokens);
			_121217_items = jule::alloc_for_append(_121217_items,1);_121217_items.__push(_121621_item);;
		}
	_iter_next_1a87564d2:;
	}
	_iter_end_1a87564d2:;;
	return _121217_items;;
}



inline jule::Ptr<_1a487b221_TypeEnumDecl> _1a4d708ad_buildTypeEnumDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _123542_tokens) {
	jule::I64 _123617_i = 1LL;;
	jule::Ptr<_1a487b221_TypeEnumDecl> _123717_e = jule::new_ptr<_1a487b221_TypeEnumDecl>(_1a487b221_TypeEnumDecl{._field_Token=(*(_123542_tokens))[_123617_i], });;
	if ((_123717_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Ident=_123717_e.get()._field_Token.get()._field_Kind;
	_123617_i+=3LL;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _124717_itemTokens = _1a4d6573d_range(&(_123617_i), jule::Str("{", 1), jule::Str("}", 1), _123542_tokens);;
	if ((_124717_itemTokens == nullptr)) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _123717_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123717_e;;
	} else if ((_123617_i < (*(_123542_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_123542_tokens))[_123617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123717_e.get()._field_Public=_1a4d77178_isPub(&(_123717_e.get()._field_Ident));
	_123717_e.get()._field_End=(*(_123542_tokens))[(_123617_i - 1LL)];
	_123717_e.get()._field_Items=_1a4d705a0_buildTypeEnumItems(_self_, &(_124717_itemTokens));
	return _123717_e;;
}



inline jule::Ptr<_1a4865eca_Expr> _1a4d70c65_buildEnumItemExpr(jule::Ptr<_1a4d674cb_parser> _self_, jule::I64* _126242_i, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _126255_tokens) {
	jule::I64 _126317_braceN = 0LL;;
	jule::I64 _126413_exprStart = (*(_126242_i));;
	for (; ((*(_126242_i)) < (*(_126255_tokens)).len()); ((*(_126242_i)))++) {
		{
			jule::Ptr<_1ceee8973_Token> _126617_t = (*(_126255_tokens))[(*(_126242_i))];;
			if ((_126617_t.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _126617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1a87629d8:;
						{
							(_126317_braceN)++;
							goto _iter_next_1a8761553;
						}
					}
					else {
						_case_begin_1a87625dc:;
						{
							(_126317_braceN)--;
						}
					}
					_match_end_1a87623cd:;
				};
			};
			if ((_126317_braceN > 0LL)) {
				goto _iter_next_1a8761553;
			};
			if (((_126617_t.get()._field_Id == static_cast<jule::U64>(8LLU)) || (((*(_126242_i)) + 1LL) >= (*(_126255_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1ceee8973_Token>> _128225_exprTokens = nullptr;;
				if ((_126617_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart, (*(_126242_i)));
				} else {
					_128225_exprTokens=(*(_126255_tokens)).slice(_126413_exprStart);
				};
				return _1a4d68565_buildExpr(_self_, &(_128225_exprTokens));;
			};
		}
	_iter_next_1a8761553:;
	}
	_iter_end_1a8761553:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>> _1a4d71073_buildEnumItems(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _129439_tokens) {
	jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>> _129517_items = jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129617_i = 0LL;;
	for (; (_129617_i < (*(_129439_tokens)).len()); (_129617_i)++) {
		{
			jule::Ptr<_1ceee8973_Token> _129821_t = (*(_129439_tokens))[_129617_i];;
			jule::Ptr<_1a48795d7_EnumItemDecl> _129921_item = jule::new_ptr<_1a48795d7_EnumItemDecl>();;
			_129921_item.get()._field_Token=_129821_t;
			if ((_129921_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
				_1a4d67e38_pushErr(_self_.ptr(), _129921_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129921_item.get()._field_Ident=_129921_item.get()._field_Token.get()._field_Kind;
			if ((((_129617_i + 1LL) >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[(_129617_i + 1LL)].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				if (((_129617_i + 1LL) < (*(_129439_tokens)).len())) {
					(_129617_i)++;
				};
				_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
				goto _iter_next_1a8765e3c;
			};
			(_129617_i)++;
			_129821_t=(*(_129439_tokens))[_129617_i];
			(_129617_i)++;
			if ((_129821_t.get()._field_Id != static_cast<jule::U64>(11LLU))) {
				_1a4d67e38_pushErr(_self_.ptr(), _129821_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1a8765e3c;
			};
			if (((_129617_i >= (*(_129439_tokens)).len()) || ((*(_129439_tokens))[_129617_i].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_1a4d67e38_pushErr(_self_.ptr(), _129821_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1a8765e3c;
			};
			_129921_item.get()._field_Expr=_1a4d70c65_buildEnumItemExpr(_self_, &(_129617_i), _129439_tokens);
			_129517_items = jule::alloc_for_append(_129517_items,1);_129517_items.__push(_129921_item);;
		}
	_iter_next_1a8765e3c:;
	}
	_iter_end_1a8765e3c:;;
	return _129517_items;;
}



inline jule::Ptr<_1a487a110_EnumDecl> _1a4d71381_buildEnumDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _133138_tokens) {
	if (((*(_133138_tokens)).len() < 3LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_133138_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a487a110_EnumDecl> _133617_e = jule::new_ptr<_1a487a110_EnumDecl>(_1a487a110_EnumDecl{._field_Token=(*(_133138_tokens))[1LL], });;
	if ((_133617_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Ident=_133617_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134417_i = 2LL;;
	if (((*(_133138_tokens))[_134417_i].get()._field_Id == static_cast<jule::U64>(11LLU))) {
		(_134417_i)++;
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), (*(_133138_tokens))[(_134417_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133617_e;;
		};
		({
			__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, _133138_tokens, (&(_134417_i)), true);
			_133617_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134417_i >= (*(_133138_tokens)).len())) {
			_1a4d6780b_stop(_self_.ptr());
			_1a4d67e38_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133617_e;;
		};
	} else {
		_133617_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _136117_itemTokens = _1a4d6573d_range(&(_134417_i), jule::Str("{", 1), jule::Str("}", 1), _133138_tokens);;
	if ((_136117_itemTokens == nullptr)) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _133617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133617_e;;
	} else if ((_134417_i < (*(_133138_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_133138_tokens))[_134417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133617_e.get()._field_Public=_1a4d77178_isPub(&(_133617_e.get()._field_Ident));
	_133617_e.get()._field_End=(*(_133138_tokens))[(_134417_i - 1LL)];
	_133617_e.get()._field_Items=_1a4d71073_buildEnumItems(_self_, &(_136117_itemTokens));
	return _133617_e;;
}



inline jule::Any _1a4d7168e_buildNodeEnumDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _137642_tokens) {
	if ((((*(_137642_tokens)).len() > 3LL) && ((*(_137642_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		if (((*(_137642_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::Any(_1a4d708ad_buildTypeEnumDecl(_self_, _137642_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1a4d71381_buildEnumDecl(_self_, _137642_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1a487b41e_FieldDecl> _1a4d7199c_buildField(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _138534_tokens) {
	jule::Ptr<_1a487b41e_FieldDecl> _138617_f = jule::new_ptr<_1a487b41e_FieldDecl>();;
	_138617_f.get()._field_Mutable=(_138534_tokens[0LL].get()._field_Id == static_cast<jule::U64>(35LLU));
	if (_138617_f.get()._field_Mutable) {
		if ((_138534_tokens.len() == 1LL)) {
			_1a4d67e38_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(1LL);
	};
	_138617_f.get()._field_Token=_138534_tokens[0LL];
	if ((_138617_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _138617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138617_f.get()._field_Ident=_138617_f.get()._field_Token.get()._field_Kind;
	if ((_138534_tokens.len() == 1LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _138534_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138534_tokens[1LL].get()._field_Id != static_cast<jule::U64>(11LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _138534_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138534_tokens=_138534_tokens.slice(2LL);
	jule::I64 _141417_i = 0LL;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, &(_138534_tokens), (&(_141417_i)), true);
		_138617_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141417_i < _138534_tokens.len())) {
		jule::Ptr<_1ceee8973_Token> _141717_token = _138534_tokens[_141417_i];;
		if (((_141717_token.get()._field_Id != static_cast<jule::U64>(7LLU)) || (_141717_token.get()._field_Kind != jule::Str("=", 1)))) {
			_1a4d67e38_pushErr(_self_.ptr(), _138534_tokens[_141417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141417_i)++;
		if ((_141417_i >= _138534_tokens.len())) {
			_1a4d67e38_pushErr(_self_.ptr(), _141717_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138534_tokens=_138534_tokens.slice(_141417_i);
		_138617_f.get()._field_Default=_1a4d68565_buildExpr(_self_, &(_138534_tokens));
	};
	_138617_f.get()._field_Public=_1a4d77178_isPub(&(_138617_f.get()._field_Ident));
	return _138617_f;;
}



inline jule::Slice<jule::Ptr<_1a487b41e_FieldDecl>> _1a4d71caa_buildStructDeclFields(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _143445_tokens) {
	jule::Slice<jule::Ptr<_1a487b41e_FieldDecl>> _143517_fields = nullptr;;
	jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _143617_stmts = _1a4d4a8ee_splitStmts(&(_143445_tokens));;
	{
		auto expr = &(_143617_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a878240e:;
		if (it != expr_end) {
			jule::Ptr<_1a4d4a558_stmt> _143721_stmt = *it;
			{
				_143445_tokens=_143721_stmt.get()._field_tokens;
				jule::Ptr<_1a487b41e_FieldDecl> _143921_f = _1a4d7199c_buildField(_self_, _143445_tokens);;
				_143517_fields = jule::alloc_for_append(_143517_fields,1);_143517_fields.__push(_143921_f);;
			}
			_iter_next_1a878240e:;
			++it;
			goto _iter_begin_1a878240e;
		}
		_iter_end_1a878240e:;
	};
	return _143517_fields;;
}



inline jule::Ptr<_1a487bbc2_StructDecl> _1a4d720b8_buildStructDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _144540_tokens) {
	if (((*(_144540_tokens)).len() < 3LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_144540_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _145117_i = 1LL;;
	jule::Ptr<_1a487bbc2_StructDecl> _145217_s = jule::new_ptr<_1a487bbc2_StructDecl>(_1a487bbc2_StructDecl{._field_Token=(*(_144540_tokens))[_145117_i], });;
	if ((_145217_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_145117_i)++;
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	_145217_s.get()._field_Ident=_145217_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1ceee8973_Token> _146613_errorToken = (*(_144540_tokens))[_145117_i];;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _146717_genericsTokens = _1a4d6573d_range(&(_145117_i), jule::Str("[", 1), jule::Str("]", 1), _144540_tokens);;
	if ((_146717_genericsTokens != nullptr)) {
		_145217_s.get()._field_Generics=_1a4d6b139_buildGenerics(_self_, &(_146717_genericsTokens), &(_146613_errorToken));
	};
	if ((_145117_i >= (*(_144540_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_144540_tokens))[(_145117_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _147717_bodyTokens = _1a4d6573d_range(&(_145117_i), jule::Str("{", 1), jule::Str("}", 1), _144540_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _145217_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145217_s;;
	};
	if ((_145117_i < (*(_144540_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_144540_tokens))[_145117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145217_s.get()._field_Public=_1a4d77178_isPub(&(_145217_s.get()._field_Ident));
	_145217_s.get()._field_Fields=_1a4d71caa_buildStructDeclFields(_self_, _147717_bodyTokens);
	_145217_s.get()._field_End=(*(_144540_tokens))[(_145117_i - 1LL)];
	return _145217_s;;
}



inline void _1a4d7233d_checkMethodReceiver(_1a4d674cb_parser* _self_, jule::Ptr<_1a4873438_FnDecl>* _149339_f) {
	if ((*(_149339_f)).get()._field_Statically) {
		if ((((*(_149339_f)).get()._field_Params.len() > 0LL) && _1a487247b_IsSelf((*(_149339_f)).get()._field_Params[0LL].ptr()))) {
			_1a4d67e38_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149339_f)).get()._field_Params.len() == 0LL)) {
		_1a4d67e38_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1a4872118_ParamDecl> _150513_param = (*(_149339_f)).get()._field_Params[0LL];;
	if ((!(_1a487247b_IsSelf(_150513_param.ptr())))) {
		_1a4d67e38_pushErr(_self_, (*(_149339_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Slice<jule::Ptr<_1a4873438_FnDecl>> _1a4d7264b_buildTraitMethods(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _151241_tokens) {
	jule::Slice<jule::Ptr<_1a4873438_FnDecl>> _151317_methods = nullptr;;
	jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _151417_stmts = _1a4d4a8ee_splitStmts(&(_151241_tokens));;
	{
		auto expr = &(_151417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87960e3:;
		if (it != expr_end) {
			jule::Ptr<_1a4d4a558_stmt> _151521_stmt = *it;
			{
				_151241_tokens=_151521_stmt.get()._field_tokens;
				if ((_151241_tokens.len() == 0LL)) {
					goto _iter_next_1a87960e3;
				};
				jule::Ptr<_1a4873438_FnDecl> _152021_f = _1a4d6d999_buildFn(_self_, &(_151241_tokens), true, true);;
				if ((_152021_f != nullptr)) {
					if (_1a487378a_IsAnon(_152021_f.ptr())) {
						_1a4d67e38_pushErr(_self_.ptr(), _152021_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
					_1a4d7233d_checkMethodReceiver(_self_.ptr(), &(_152021_f));
					if ((_152021_f.get()._field_Generics.len() > 0LL)) {
						_1a4d67e38_pushErr(_self_.ptr(), _152021_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
					};
					_151317_methods = jule::alloc_for_append(_151317_methods,1);_151317_methods.__push(_152021_f);;
				};
			}
			_iter_next_1a87960e3:;
			++it;
			goto _iter_begin_1a87960e3;
		}
		_iter_end_1a87960e3:;
	};
	return _151317_methods;;
}



inline jule::Ptr<_1a487c2cc_TraitDecl> _1a4d72959_buildTraitDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _153539_tokens) {
	if (((*(_153539_tokens)).len() < 3LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_153539_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a487c2cc_TraitDecl> _154017_t = jule::new_ptr<_1a487c2cc_TraitDecl>(_1a487c2cc_TraitDecl{._field_Token=(*(_153539_tokens))[1LL], });;
	if ((_154017_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _154017_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154017_t.get()._field_Ident=_154017_t.get()._field_Token.get()._field_Kind;
	jule::I64 _154817_i = 2LL;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _154917_bodyTokens = _1a4d6573d_range(&(_154817_i), jule::Str("{", 1), jule::Str("}", 1), _153539_tokens);;
	if ((_154917_bodyTokens == nullptr)) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _154017_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_154817_i < (*(_153539_tokens)).len())) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_153539_tokens))[_154817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154017_t.get()._field_Public=_1a4d77178_isPub(&(_154017_t.get()._field_Ident));
	_154017_t.get()._field_Methods=_1a4d7264b_buildTraitMethods(_self_, _154917_bodyTokens);
	_154017_t.get()._field_End=(*(_153539_tokens))[(_154817_i - 1LL)];
	return _154017_t;;
}



inline jule::Ptr<_1a4873438_FnDecl> _1a4d72c67_buildCppLinkFn(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _156538_tokens) {
	_156538_tokens=_156538_tokens.slice(1LL);
	jule::Ptr<_1a4873438_FnDecl> _156717_f = _1a4d6d999_buildFn(_self_, &(_156538_tokens), false, true);;
	if ((_156717_f != nullptr)) {
		if (_1a487378a_IsAnon(_156717_f.ptr())) {
			_1a4d67e38_pushErr(_self_.ptr(), _156717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		_156717_f.get()._field_Public=false;
		_156717_f.get()._field_CppLinked=true;
	};
	return _156717_f;;
}



inline jule::Ptr<_1a4874417_VarDecl> _1a4d73075_buildCppLinkVar(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _157839_tokens) {
	_157839_tokens=_157839_tokens.slice(1LL);
	jule::Ptr<_1a4874417_VarDecl> _158017_v = _1a4d6a974_buildVar(_self_, _157839_tokens);;
	if ((_158017_v != nullptr)) {
		_158017_v.get()._field_Public=false;
		_158017_v.get()._field_CppLinked=true;
		if ((_158017_v.get()._field_Expr != nullptr)) {
			_1a4d67e38_pushErr(_self_.ptr(), _158017_v.get()._field_Token, jule::Str("cpp linked variables cannot have expression", 43), jule::Slice<jule::Any>());
		};
	};
	return _158017_v;;
}



inline jule::Ptr<_1a487bbc2_StructDecl> _1a4d73383_buildCppLinkStruct(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _159142_tokens) {
	_159142_tokens=_159142_tokens.slice(1LL);
	jule::Ptr<_1a487bbc2_StructDecl> _159317_s = _1a4d720b8_buildStructDecl(_self_, &(_159142_tokens));;
	if ((_159317_s != nullptr)) {
		_159317_s.get()._field_Public=false;
		{
			auto expr = &(_159317_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a87a55ec:;
			if (it != expr_end) {
				jule::Ptr<_1a487b41e_FieldDecl> _159625_f = *it;
				{
					_159625_f.get()._field_Public=true;
				}
				_iter_next_1a87a55ec:;
				++it;
				goto _iter_begin_1a87a55ec;
			}
			_iter_end_1a87a55ec:;
		};
		_159317_s.get()._field_CppLinked=true;
	};
	return _159317_s;;
}



inline jule::Ptr<_1a4877c78_TypeAliasDecl> _1a4d73691_buildCppLinkTypeAlias(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _160545_tokens) {
	_160545_tokens=_160545_tokens.slice(1LL);
	jule::Ptr<_1a4877c78_TypeAliasDecl> _160717_t = _1a4d69b60_buildTypeAliasDecl(_self_, &(_160545_tokens));;
	if ((_160717_t != nullptr)) {
		_160717_t.get()._field_Public=false;
		_160717_t.get()._field_CppLinked=true;
	};
	return _160717_t;;
}



inline jule::Ptr<_1a4879164_UseDecl> _1a4d7399e_buildCppLinkUse(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _161539_tokens) {
	if ((_161539_tokens.len() == 1LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _161539_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161539_tokens=_161539_tokens.slice(1LL);
	;
	return _1a4d6edda_buildUseDecl(_self_.ptr(), _161539_tokens, true);;
}



inline jule::Any _1a4d73cac_buildCppLink(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _162637_tokens) {
	jule::Ptr<_1ceee8973_Token> _162717_token = (*(_162637_tokens))[0LL];;
	if (((*(_162637_tokens)).len() == 1LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _162717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_162717_token=(*(_162637_tokens))[1LL];
	{
		auto &_match_expr{ _162717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a87aa1d4:;
			{
				return jule::Any(_1a4d72c67_buildCppLinkFn(_self_, (*(_162637_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1a87aad83:;
			{
				return jule::Any(_1a4d73075_buildCppLinkVar(_self_, (*(_162637_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a87aade9:;
			{
				return jule::Any(_1a4d73383_buildCppLinkStruct(_self_, (*(_162637_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a87aae60:;
			{
				return jule::Any(_1a4d73691_buildCppLinkTypeAlias(_self_, (*(_162637_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1a87aac2e:;
			{
				_1a4d67e38_pushErr(_self_.ptr(), _162717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a87aad1c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4873438_FnDecl> _1a4d740ba_getMethod(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _165034_tokens) {
	jule::I64 _165117_i = 0LL;;
	jule::Ptr<_1ceee8973_Token> _165217_token = (*(_165034_tokens))[_165117_i];;
	if ((_165217_token.get()._field_Id == static_cast<jule::U64>(37LLU))) {
		if (((_165117_i + 1LL) >= (*(_165034_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165117_i)++;
		_165217_token=(*(_165034_tokens))[_165117_i];
	};
	if ((_165217_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_165117_i + 1LL) >= (*(_165034_tokens)).len())) {
			_1a4d67e38_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165117_i)++;
		_165217_token=(*(_165034_tokens))[_165117_i];
	};
	if ((_165217_token.get()._field_Id != static_cast<jule::U64>(32LLU))) {
		_1a4d67e38_pushErr(_self_.ptr(), _165217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a4873438_FnDecl> _167617_f = _1a4d6d999_buildFn(_self_, _165034_tokens, true, false);;
	if (((_167617_f != nullptr) && _1a487378a_IsAnon(_167617_f.ptr()))) {
		_1a4d67e38_pushErr(_self_.ptr(), _167617_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _167617_f;;
}



inline void _1a4d743d9_parseImplBody(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1a487c8d7_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _168417_stmts = _1a4d4a8ee_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87b3c48:;
		if (it != expr_end) {
			jule::Ptr<_1a4d4a558_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_1ceee8973_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(38LLU)) {
						_case_begin_1a87b4397:;
						{
							_1a4d68ae8_pushDirective(_self_.ptr(), _1a4d68873_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_1a87b3c48;
						}
					}
					_match_end_1a87b4d7b:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(9LLU)) {
						_case_begin_1a87b4ed0:;
						{
							jule::Ptr<_1a4874417_VarDecl> _169625_v = _1a4d6a974_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								(*(_168338_ipl)).get()._field_Statics = jule::alloc_for_append((*(_168338_ipl)).get()._field_Statics,1);(*(_168338_ipl)).get()._field_Statics.__push(_169625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(37LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1a87b53a9:;
						{
							jule::Ptr<_1a4873438_FnDecl> _170325_f = _1a4d740ba_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_1a4d7233d_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_1a4d74c7a_applyFnMeta(_self_.ptr(), &(_170325_f));
								(*(_168338_ipl)).get()._field_Methods = jule::alloc_for_append((*(_168338_ipl)).get()._field_Methods,1);(*(_168338_ipl)).get()._field_Methods.__push(_170325_f);;
							};
						}
					}
					else {
						_case_begin_1a87b5343:;
						{
							_1a4d67e38_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1a87b3c48;
						}
					}
					_match_end_1a87b5a6e:;
				};
			}
			_iter_next_1a87b3c48:;
			++it;
			goto _iter_begin_1a87b3c48;
		}
		_iter_end_1a87b3c48:;
	};
}



inline jule::Ptr<_1a487c8d7_Impl> _1a4d746e7_buildImpl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _171633_tokens) {
	jule::Ptr<_1ceee8973_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172317_i = 1LL;;
	jule::Ptr<_1a48619a9_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1a4d67e38_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a487c8d7_Impl> _173417_ipl = jule::new_ptr<_1a487c8d7_Impl>(_1a487c8d7_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U64>(12LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_171717_token.get()._field_Kind == jule::Str("{", 1)))) {
			({
				jule::Ptr<_1a48619a9_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_1a48619a9_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _177217_bodyTokens = _1a4d6573d_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_1a4d6780b_stop(_self_.ptr());
		_1a4d67e38_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_1a4d67e38_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_1a4d743d9_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _1a4d74a05_buildNodeData(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _178738_tokens) {
	jule::Ptr<_1ceee8973_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1a87c53b9:;
			{
				jule::Ptr<_1a4873438_FnDecl> _179221_f = _1a4d6d999_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
					if (_1a487378a_IsAnon(_179221_f.ptr())) {
						_1a4d67e38_pushErr(_self_.ptr(), _179221_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(9LLU) || _match_expr == static_cast<jule::U64>(35LLU) || _match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1a87c62ee:;
			{
				return jule::Any(_1a4d6a974_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1a87c6365:;
			{
				return jule::Any(_1a4d69b60_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1a87c63cb:;
			{
				return _1a4d7168e_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1a87c5a3a:;
			{
				return jule::Any(_1a4d720b8_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1a87c5aa1:;
			{
				return jule::Any(_1a4d72959_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1a87c5b17:;
			{
				return jule::Any(_1a4d746e7_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a87c5b7d:;
			{
				return _1a4d73cac_buildCppLink(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_1a87c59a2:;
			{
				_1a4d67e38_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a87c5809:;
	};
}



inline void _1a4d74c7a_applyFnMeta(_1a4d674cb_parser* _self_, jule::Ptr<_1a4873438_FnDecl>* _182335_f) {
	(*(_182335_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1a4d75000_applyMeta(_1a4d674cb_parser* _self_, _1a3c1cc01_Node* _182833_node) {
	{
		auto &_match_expr{ (*(_182833_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a87cbd4e:;
			{
				jule::Ptr<_1a4874417_VarDecl> _183121_v = (*(_182833_node))._field_Data.cast_ptr<_1a4874417_VarDecl>(&__jule_any_type16);;
				if ((_183121_v == nullptr)) {
					return;;
				};
				_183121_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a87cbdb5:;
			{
				jule::Ptr<_1a4873438_FnDecl> _183821_f = (*(_182833_node))._field_Data.cast_ptr<_1a4873438_FnDecl>(&__jule_any_type14);;
				if ((_183821_f == nullptr)) {
					return;;
				};
				_1a4d74c7a_applyFnMeta(_self_, &(_183821_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a87cbe2b:;
			{
				jule::Ptr<_1a487bbc2_StructDecl> _184421_sd = (*(_182833_node))._field_Data.cast_ptr<_1a487bbc2_StructDecl>(&__jule_any_type13);;
				if ((_184421_sd == nullptr)) {
					return;;
				};
				_184421_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1a87cbb40:;
	};
}



inline void _1a4d75275_pushUseDecl(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1a4879164_UseDecl>* _185336_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_185336_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), (*(_185336_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1a4d68257_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1a4d75583_pushMetaNodes(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _186138_tokens) {
	{
		auto &_match_expr{ (*(_186138_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1a87d27e4:;
			{
				;
				jule::Ptr<_1a4879164_UseDecl> _186521_decl = _1a4d6edda_buildUseDecl(_self_.ptr(), (*(_186138_tokens)), false);;
				_1a4d75275_pushUseDecl(_self_, &(_186521_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a87d286b:;
			{
				if ((((*(_186138_tokens)).len() > 1LL) && ((*(_186138_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
					jule::Ptr<_1a4879164_UseDecl> _187025_decl = _1a4d7399e_buildCppLinkUse(_self_, (*(_186138_tokens)));;
					_1a4d75275_pushUseDecl(_self_, &(_187025_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1a87d28e3:;
			{
				_1a4d68ae8_pushDirective(_self_.ptr(), _1a4d68873_buildDirective(_self_.ptr(), (*(_186138_tokens))));
				return true;;
			}
		}
		_match_end_1a87d2717:;
	};
	return false;;
}



inline _1a3c1cc01_Node _1a4d75891_parseNode(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _188134_st) {
	_1a3c1cc01_Node _188217_node = _1a3c1cc01_Node{._field_Token=(*(_188134_st))[0LL], };;
	if (_1a4d75583_pushMetaNodes(_self_, _188134_st)) {
		return _188217_node;;
	};
	jule::Any _189017_data = _1a4d74a05_buildNodeData(_self_, _188134_st);;
	if ((_189017_data == nullptr)) {
		return _188217_node;;
	};
	_188217_node._field_Data=_189017_data;
	_1a4d75000_applyMeta(_self_.ptr(), &(_188217_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _188217_node;;
}



inline void _1a4d75b16_appendNode(jule::Ptr<_1a4d674cb_parser> _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _190535_st) {
	if (((*(_190535_st)).len() == 0LL)) {
		return;;
	};
	_1a3c1cc01_Node _190917_node = _1a4d75891_parseNode(_self_, _190535_st);;
	if (((_190917_node._field_Data == nullptr) || _1a4d67a70_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190917_node);;
}



inline void _1a4d76078_removeRange(_1a4d674cb_parser* _self_, jule::I64 _191630_i, jule::Str _191638_kind, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _191650_tokens, jule::Slice<jule::I64>* _191673_ranges) {
	jule::Str _191713_close = _1a4d66552_getCloseKindOfBrace(_191638_kind);;
	for (; (_191630_i >= 0LL); (_191630_i)--) {
		{
			jule::Ptr<_1ceee8973_Token> _191917_tok = (*(_191650_tokens))[(*(_191673_ranges))[_191630_i]];;
			if ((_191917_tok.get()._field_Kind != _191713_close)) {
				goto _iter_next_1a87dbd1a;
			};
			(*(_191673_ranges))=jule::append((*(_191673_ranges)).slice(0LL, _191630_i),(*(_191673_ranges)).slice((_191630_i + 1LL)));
			goto _iter_end_1a87dbd1a;
		}
	_iter_next_1a87dbd1a:;
	}
	_iter_end_1a87dbd1a:;;
}



inline void _1a4d76441_pushWrongOrderCloseErr(_1a4d674cb_parser* _self_, jule::Ptr<_1ceee8973_Token>* _192842_t, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _192854_tokens, jule::Slice<jule::I64>* _192873_ranges) {
	{
		auto &_match_expr{ (*(_192854_tokens))[(*(_192873_ranges))[((*(_192873_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1a87ddda5:;
			{
				_1a4d67e38_pushErr(_self_, (*(_192842_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1a87dde2c:;
			{
				_1a4d67e38_pushErr(_self_, (*(_192842_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1a87ddea4:;
			{
				_1a4d67e38_pushErr(_self_, (*(_192842_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a87ddc84:;
	};
}



inline void _1a4d768a3_pushRangeClose(_1a4d674cb_parser* _self_, jule::Ptr<_1ceee8973_Token> _193933_t, jule::Str _193944_left, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _193956_tokens, jule::Slice<jule::I64>* _193979_ranges) {
	jule::I64 _194013_n = (*(_193979_ranges)).len();;
	if ((_194013_n == 0LL)) {
		{
			auto &_match_expr{ _193933_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1a87e198a:;
				{
					_1a4d67e38_pushErr(_self_, _193933_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1a87e1a12:;
				{
					_1a4d67e38_pushErr(_self_, _193933_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1a87e1a89:;
				{
					_1a4d67e38_pushErr(_self_, _193933_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1a87e1759:;
		};
		return;;
	} else if (((*(_193956_tokens))[(*(_193979_ranges))[(_194013_n - 1LL)]].get()._field_Kind != _193944_left)) {
		_1a4d76441_pushWrongOrderCloseErr(_self_, &(_193933_t), _193956_tokens, _193979_ranges);
	};
	_1a4d76078_removeRange(_self_, static_cast<jule::I64>((_194013_n - 1LL)), _193933_t.get()._field_Kind, _193956_tokens, _193979_ranges);
}



inline void _1a4d76b28_checkRanges(_1a4d674cb_parser* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _195731_tokens) {
	jule::Slice<jule::I64> _195817_ranges = nullptr;;
	{
		auto expr = _195731_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87e4a8c:;
		if (it != expr_end) {
			jule::I64 _196013_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> *_196016_token = it;
			{
				if (((*(_196016_token)).get()._field_Id != static_cast<jule::U64>(3LLU))) {
					goto _iter_next_1a87e4a8c;
				};
				{
					auto &_match_expr{ (*(_196016_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1a87e5d02:;
						{
							_195817_ranges = jule::alloc_for_append(_195817_ranges,1);_195817_ranges.__push(_196013_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a87e5d9b:;
						{
							_1a4d768a3_pushRangeClose(_self_, (*(_196016_token)), jule::Str("(", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1a87e5e12:;
						{
							_1a4d768a3_pushRangeClose(_self_, (*(_196016_token)), jule::Str("{", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a87e5e78:;
						{
							_1a4d768a3_pushRangeClose(_self_, (*(_196016_token)), jule::Str("[", 1), _195731_tokens, &(_195817_ranges));
						}
					}
					_match_end_1a87e587e:;
				};
			}
			_iter_next_1a87e4a8c:;
			++it;
			_196013_i++;
			goto _iter_begin_1a87e4a8c;
		}
		_iter_end_1a87e4a8c:;
	};
	{
		auto expr = &(_195817_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a87e4828:;
		if (it != expr_end) {
			jule::I64 _197816_i = *it;
			{
				jule::Ptr<_1ceee8973_Token> _197917_token = (*(_195731_tokens))[_197816_i];;
				{
					auto &_match_expr{ _197917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a87e850d:;
						{
							_1a4d67e38_pushErr(_self_, _197917_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1a87e8574:;
						{
							_1a4d67e38_pushErr(_self_, _197917_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a87e85da:;
						{
							_1a4d67e38_pushErr(_self_, _197917_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1a87e82cc:;
				};
			}
			_iter_next_1a87e4828:;
			++it;
			goto _iter_begin_1a87e4828;
		}
		_iter_end_1a87e4828:;
	};
}



inline void _1a4d76d9d_parse(jule::Ptr<_1a4d674cb_parser> _self_, jule::Ptr<_1ceeedd0d_File>* _199130_f) {
	_self_.get()._field_ast=jule::new_ptr<_1a3c1be0e_Ast>(_1a3c1be0e_Ast{._field_File=(*(_199130_f)), });
	_1a4d76b28_checkRanges(_self_.ptr(), &((*(_199130_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _200117_stmts = _1a4d4a8ee_splitStmts(&((*(_199130_f)).get()._field_Tokens));;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1a4d4a558_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(38LLU))) {
				goto _iter_end_1a87eb4cd;
			};
			if ((!(_1ceb4b40b_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1a87eb4cd;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1a4d68873_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_1a87eb4cd:;
	}
	_iter_end_1a87eb4cd:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1a4d4a558_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1a4d75b16_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_1a4d67a70_stopped(_self_.ptr())) {
				goto _iter_end_1a87ea543;
			};
		}
	_iter_next_1a87ea543:;
	}
	_iter_end_1a87ea543:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1a4d67e38_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d674cb_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _1a4d787b7_pushErr(_1a4d781e0_typeBuilder* _self_, jule::Ptr<_1ceee8973_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1a4d67e38_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1a4d78ad6_pushSuggestion(_1a4d781e0_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1a4d68257_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d78d4a_buildPrim(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1a48619a9_TypeDecl> _5517_t = _1a4d77c5b_buildPrimType((*(_self_))._field_tokens[(*((*(_self_))._field_i))]);;
	((*((*(_self_))._field_i)))++;
	return _5517_t;;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d790ae_buildNamespace(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1a48619a9_TypeDecl> _6117_t = jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1a4862a76_NamespaceTypeDecl> _6517_nst = jule::new_ptr<_1a4862a76_NamespaceTypeDecl>();;
	jule::I64 _6617_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ceee8973_Token> _6821_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6617_n & 1LL) == 0LL)) {
				if ((_6821_token.get()._field_Id != static_cast<jule::U64>(2LLU))) {
					_1a4d787b7_pushErr(_self_, _6821_token, jule::Str("invalid syntax", 14));
					_1a4d78ad6_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_6517_nst.get()._field_Idents = jule::alloc_for_append(_6517_nst.get()._field_Idents,1);_6517_nst.get()._field_Idents.__push(_6821_token);;
			} else if ((_6821_token.get()._field_Id != static_cast<jule::U64>(22LLU))) {
				goto _iter_end_1a8804e21;
			};
			(_6617_n)++;
		}
	_iter_next_1a8804e21:;
	}
	_iter_end_1a8804e21:;;
	_6517_nst.get()._field_Idents=_6517_nst.get()._field_Idents.slice(0LL, (_6517_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_6517_nst.get()._field_Kind=_1a4d797eb_buildIdent(_self_);
	_6117_t.get()._field_Kind=jule::Any(_6517_nst, &__jule_any_type97);
	return _6117_t;;
}



inline jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _1a4d79323_buildGenerics(_1a4d781e0_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1ceee8973_Token> _9413_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_9413_token.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_9413_token.get()._field_Kind != jule::Str("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _9917_parts = _1a4d79587_identGenerics(_self_);;
	if ((_9917_parts.len() == 0LL)) {
		_1a4d787b7_pushErr(_self_, _9413_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>> _10517_types = jule::Slice<jule::Ptr<_1a48619a9_TypeDecl>>::alloc(0LL, _9917_parts.len());;
	{
		auto expr = &(_9917_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a880c5ee:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _10621_part = *it;
			{
				jule::I64 _10721_j = 0LL;;
				jule::Ptr<_1a48619a9_TypeDecl> _10822_t;;
				({
					__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &(_10621_part), (&(_10721_j)), true);
					_10822_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10721_j < _10621_part.len())) {
					_1a4d787b7_pushErr(_self_, _10621_part[_10721_j], jule::Str("invalid syntax", 14));
				};
				_10517_types = jule::alloc_for_append(_10517_types,1);_10517_types.__push(_10822_t);;
			}
			_iter_next_1a880c5ee:;
			++it;
			goto _iter_begin_1a880c5ee;
		}
		_iter_end_1a880c5ee:;
	};
	return _10517_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1a4d79587_identGenerics(_1a4d781e0_typeBuilder* _self_) {
	jule::I64 _11813_first = (*((*(_self_))._field_i));;
	jule::I64 _11917_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1ceee8973_Token> _12117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_12117_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _12117_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1a88110a3:;
						{
							(_11917_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1a881112a:;
						{
							(_11917_rangeN)--;
						}
					}
					_match_end_1a8810d83:;
				};
			};
			if ((_11917_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1a880ecb6;
			};
		}
	_iter_next_1a880ecb6:;
	}
	_iter_end_1a880ecb6:;;
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _13517_tokens = (*(_self_))._field_tokens.slice((_11813_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _13618_parts;;
	jule::Slice<_1ceb4952a_Log> _13625_errors;;
	({
		__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d662aa_parts(&(_13517_tokens), static_cast<jule::U64>(8LLU), true);
		_13618_parts = __jule_assign_result.__jule_result_arg0;
		_13625_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13625_errors);
	};
	return _13618_parts;;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d797eb_buildIdent(_1a4d781e0_typeBuilder* _self_) {
	jule::Bool _14417_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_14417_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return _1a4d790ae_buildNamespace(_self_);;
	};
	jule::Ptr<_1ceee8973_Token> _14817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a4862070_IdentTypeDecl> _14917_it = jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_14817_token, ._field_Ident=_14817_token.get()._field_Kind, ._field_CppLinked=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a48619a9_TypeDecl> _15517_itd = jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_14917_it, &__jule_any_type19)});;
	if (((!(_14417_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_14917_it.get()._field_Generics=_1a4d79323_buildGenerics(_self_);
		return _15517_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1a4d787b7_pushErr(_self_, _14817_token, jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		_1a4d787b7_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _15517_itd;;
	};
	jule::Ptr<_1a48626be_SubIdentTypeDecl> _17217_sit = jule::new_ptr<_1a48626be_SubIdentTypeDecl>();;
	_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_14917_it);;
	jule::Ptr<_1a48619a9_TypeDecl> _17417_ident = _1a4d797eb_buildIdent(_self_);;
	{
		auto &_match_expr{ _17417_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a881acb1:;
			{
				_17217_sit.get()._field_Idents = jule::alloc_for_append(_17217_sit.get()._field_Idents,1);_17217_sit.get()._field_Idents.__push(_17417_ident.get()._field_Kind.cast_ptr<_1a4862070_IdentTypeDecl>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a881ad8d:;
			{
				_17217_sit.get()._field_Idents=jule::append(_17217_sit.get()._field_Idents,_17417_ident.get()._field_Kind.cast_ptr<_1a48626be_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);
			}
		}
		_match_end_1a881ac06:;
	};
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_14817_token, ._field_Kind=jule::Any(_17217_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d79a60_buildCppLink(_1a4d781e0_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(20LLU)))) {
		_1a4d787b7_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1a48619a9_TypeDecl> _19317_t = _1a4d797eb_buildIdent(_self_);;
	_19317_t.get()._field_Kind.cast_ptr<_1a4862070_IdentTypeDecl>(&__jule_any_type19).get()._field_CppLinked=true;
	return _19317_t;;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d79cc4_buildFn(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _19917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1a4873438_FnDecl> _20017_f = _1a4d6d548_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_20017_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a487378a_IsAnon(_20017_f.ptr())))) {
		_1a4d787b7_pushErr(_self_, _20017_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_19917_token, ._field_Kind=jule::Any(_20017_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a038_buildPtr(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _21417_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a4d787b7_pushErr(_self_, _21417_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4863835_PtrTypeDecl>(_1a4863835_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type78)});;
	};
	jule::Ptr<_1a48619a9_TypeDecl> _23117_elem = _1a4d7b226_step(_self_);;
	if ((_23117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_21417_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4863835_PtrTypeDecl>(_1a4863835_PtrTypeDecl{._field_Elem=_23117_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a29c_buildSptr(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _24517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1a4d787b7_pushErr(_self_, _24517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a48619a9_TypeDecl> _25217_elem = _1a4d7b226_step(_self_);;
	if ((_25217_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_24517_token, ._field_Kind=jule::Any(jule::new_ptr<_1a4862d62_SptrTypeDecl>(_1a4862d62_SptrTypeDecl{._field_Elem=_25217_elem}), &__jule_any_type79)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a511_buildOp(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _26617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26617_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a88284b6:;
			{
				return _1a4d7a038_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1a8829594:;
			{
				return _1a4d7a29c_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1a882960a:;
			{
				return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1a4862d62_SptrTypeDecl>(_1a4862d62_SptrTypeDecl{._field_Elem=_1a4d7a29c_buildSptr(_self_)}), &__jule_any_type79)});;
			}
		}
		else {
			_case_begin_1a8828b48:;
			{
				_1a4d787b7_pushErr(_self_, _26617_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1a88289c2:;
	};
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a775_buildSlc(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _28517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1a48619a9_TypeDecl> _28717_elem = _1a4d7b226_step(_self_);;
	if ((_28717_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_28517_token, ._field_Kind=jule::Any(jule::new_ptr<_1a486325d_SlcTypeDecl>(_1a486325d_SlcTypeDecl{._field_Elem=_28717_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7a9d9_buildArr(_1a4d781e0_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _30017_exprTokens = _1a4d6573d_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a4d787b7_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a48619a9_TypeDecl> _30617_elem = _1a4d7b226_step(_self_);;
	if ((_30617_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4863eb7_ArrTypeDecl> _31117_arrt = jule::new_ptr<_1a4863eb7_ArrTypeDecl>(_1a4863eb7_ArrTypeDecl{._field_Elem=_30617_elem, });;
	jule::Ptr<_1ceee8973_Token> _31517_token = _30017_exprTokens[0LL];;
	if ((((_30017_exprTokens.len() == 1LL) && (_31517_token.get()._field_Id == static_cast<jule::U64>(7LLU))) && (_31517_token.get()._field_Kind == jule::Str("...", 3)))) {
	} else {
		_31117_arrt.get()._field_Size=_1a4d68565_buildExpr((*(_self_))._field_p, &(_30017_exprTokens));
	};
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_31517_token, ._field_Kind=jule::Any(_31117_arrt, &__jule_any_type76)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7ac4d_buildMap(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _32917_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a4d787b7_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _33717_keyTokens = _1a4d6573d_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1a4d787b7_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33717_keyTokens.len() == 0LL)) {
		_1a4d787b7_pushErr(_self_, _32917_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1a4864715_MapTypeDecl> _34617_mapt = jule::new_ptr<_1a4864715_MapTypeDecl>();;
	jule::I64 _34717_j = 0LL;;
	jule::Ptr<_1a48619a9_TypeDecl> _34818_keyt;;
	jule::Bool _34828_ok = false;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &(_33717_keyTokens), (&(_34717_j)), (*(_self_))._field_err);
		_34818_keyt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	} else if ((_34717_j < _33717_keyTokens.len())) {
		_1a4d787b7_pushErr(_self_, _33717_keyTokens[_34717_j], jule::Str("invalid syntax", 14));
	};
	_34617_mapt.get()._field_Key=_34818_keyt;
	jule::Ptr<_1a48619a9_TypeDecl> _35618_valt;;
	({
		__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_assign_result = _1a4d69852_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35618_valt = __jule_assign_result.__jule_result_arg0;
		_34828_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34828_ok))) {
		return nullptr;;
	};
	_34617_mapt.get()._field_Val=_35618_valt;
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_32917_mapToken, ._field_Kind=jule::Any(_34617_mapt, &__jule_any_type80)});;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7aeb2_buildEnumerable(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _36817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36817_token.get()._field_Id != static_cast<jule::U64>(3LLU))) || (_36817_token.get()._field_Kind != jule::Str("[", 1)))) {
		_1a4d787b7_pushErr(_self_, _36817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36817_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36817_token.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_36817_token.get()._field_Kind == jule::Str("]", 1)))) {
		return _1a4d7a775_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1a4d7a9d9_buildArr(_self_);;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d7b226_step(_1a4d781e0_typeBuilder* _self_) {
	jule::Ptr<_1ceee8973_Token> _38513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _38513_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1a883c9e7:;
			{
				return _1a4d78d4a_buildPrim(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1a883c387:;
			{
				return _1a4d797eb_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1a883c3ed:;
			{
				return _1a4d79a60_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1a883c464:;
			{
				return _1a4d79cc4_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1a883cd38:;
			{
				return _1a4d7a511_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1a883cd9e:;
			{
				return _1a4d7aeb2_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1a883ce15:;
			{
				return _1a4d7ac4d_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1a883c288:;
			{
				((*((*(_self_))._field_i)))++;
				_1a4d787b7_pushErr(_self_, _38513_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1a883c112:;
	};
}



inline __jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool _1a4d7b48a_build(_1a4d781e0_typeBuilder* _self_) {
	__jule_tuple_x_1a48619a9_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1a48619a9_TypeDecl> _41117_root = _1a4d7b226_step(_self_);;
	if ((_41117_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1a4d77a4c_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _41117_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d781e0_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a50b43_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1b5a524e6_pushErr(_1b5a51e96_directiveEval* _self_, jule::Ptr<_1ceee8973_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1ceb4996a_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _1b5a5289d_splitOperans(_1b5a51e96_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_1ceee8973_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1a8862d08:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1a8860e8d;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1a8862d6e:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1a8862ad8:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
				goto _iter_next_1a8860e8d;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1a8860e8d:;
	}
	_iter_end_1a8860e8d:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_1b5a524e6_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1b5a52bab_evalDirectiveIdent(_1b5a51e96_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8865d1c:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1a8865d1c:;
			++it;
			goto _iter_begin_1a8865d1c;
		}
		_iter_end_1a8865d1c:;
	};
	return false;;
}



inline jule::Bool _1b5a52eb9_evalDirectivePart(_1b5a51e96_directiveEval* _self_, jule::Slice<jule::Ptr<_1ceee8973_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)) && (_8740_part[0LL].get()._field_Kind == jule::Str("!", 1)));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1b5a524e6_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1b5a52bab_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1b5a5322d_eval(_1b5a51e96_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1b5a524e6_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _11317_logicalOrParts = _1b5a5289d_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a886c153:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _12021_logicalAndParts = _1b5a5289d_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a886d352:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1ceee8973_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_1ceee8973_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_12621_first.get()._field_Kind == jule::Str("(", 1)))) {
								jule::Ptr<_1ceee8973_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_12825_end.get()._field_Kind != jule::Str(")", 1)))) {
									_1b5a524e6_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1b5a52eb9_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1a886d352:;
						++it;
						goto _iter_begin_1a886d352;
					}
					_iter_end_1a886d352:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1a886c153:;
			++it;
			goto _iter_begin_1a886c153;
		}
		_iter_end_1a886c153:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a51e96_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4d35e6c_JuleImporter> static__1a4d1580e_New(_1b5a50b43_CompileInfo _5819_info) {
	jule::Ptr<_1a4d35e6c_JuleImporter> _5917_imp = jule::new_ptr<_1a4d35e6c_JuleImporter>(_1a4d35e6c_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1ceb54898_PathStdlib}), });;
	_1b5a5145c_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>> _1a4d099bd_AllPackages(_1a4d35e6c_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1a4d2de76_SetModPath(_1a4d35e6c_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1a4d3131e_GetModPath(_1a4d35e6c_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1a4d0d582_ModById(_1a4d35e6c_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a4d7b820_GetImport(_1a4d35e6c_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88754be:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1a88754be:;
			++it;
			goto _iter_begin_1a88754be;
		}
		_iter_end_1a88754be:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log _1a4d7bbc7_ImportPackage(_1a4d35e6c_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1e78a8925_DirEntry>> _9717_dirents = ({
		auto except = static__1e8603bad_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1ceb4952a_Log>::make({_1a4d2bc65_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1b5a620c7_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1ceb4952a_Log> _10525_errs = _1b5a6236e_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1a3c1be0e_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1a3c1be0e_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8879506:;
		if (it != expr_end) {
			jule::Ptr<_1e78a8925_DirEntry> _11316_dirent = *it;
			{
				if ((_1e77decbd_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1ceabd59d_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1a8879506;
				};
				jule::Str _11917__path = _1e86d32ba_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1ceeedd0d_File> _12021_file = _1d000033c_NewFileSet(_11917__path);;
				_1ceeee490_Fill(_12021_file.ptr(), _1a4d22981_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1ceb4952a_Log> _12221_errors = _1d000abd8_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1a4d47d80_FileInfo> _12721_finfo = _1a4d4849b_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1b5a50071_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1a8879506;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1ceb4952a_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d7c38c_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1a8879506;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1a8879506:;
			++it;
			goto _iter_begin_1a8879506;
		}
		_iter_end_1a8879506:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a4d7be4c_Imported(_1a4d35e6c_JuleImporter* _self_, jule::Ptr<_1a53e27e2_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a887ea17:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_CppLinked == _15331_imp.get()._field_CppLinked) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1a887ea17:;
			++it;
			goto _iter_begin_1a887ea17;
		}
		_iter_end_1a887ea17:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a88812dd:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1a88812dd:;
				++it;
				_16217_i++;
				goto _iter_begin_1a88812dd;
			}
			_iter_end_1a88812dd:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_1ceb4952a_Log _1a4d7c38c_isPassBuildDirectives(_1a4d35e6c_JuleImporter* _self_, jule::Ptr<_1a3c1be0e_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8884412:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _18021_td = *it;
			{
				if ((_18021_td.get()._field_Tag.get()._field_Kind != jule::Str("build", 5))) {
					goto _iter_next_1a8884412;
				};
				_1b5a51e96_directiveEval _18421_de = _1b5a51e96_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1b5a5322d_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1a8884412:;
			++it;
			goto _iter_begin_1a8884412;
		}
		_iter_end_1a8884412:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d35e6c_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d7d547_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a88a7149_isCommonOrdered(jule::Slice<jule::Ptr<_1a487d19b_Struct>> _1834_s, jule::Ptr<_1a487d19b_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88a81e4:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a88a8a0d:;
					if (it != expr_end) {
						jule::Ptr<_1a487d19b_Struct> *_2020_t2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_t2)))) {
								return false;;
							};
						}
						_iter_next_1a88a8a0d:;
						++it;
						goto _iter_begin_1a88a8a0d;
					}
					_iter_end_1a88a8a0d:;
				};
			}
			_iter_next_1a88a81e4:;
			++it;
			goto _iter_begin_1a88a81e4;
		}
		_iter_end_1a88a81e4:;
	};
	return true;;
}

inline jule::Bool _1a88ae3a4_isCommonOrdered(jule::Slice<jule::Ptr<_1a5418939_Var>> _1834_s, jule::Ptr<_1a5418939_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88b040a:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a88b0c24:;
					if (it != expr_end) {
						jule::Ptr<_1a5418939_Var> *_2020_t2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_t2)))) {
								return false;;
							};
						}
						_iter_next_1a88b0c24:;
						++it;
						goto _iter_begin_1a88b0c24;
					}
					_iter_end_1a88b0c24:;
				};
			}
			_iter_next_1a88b040a:;
			++it;
			goto _iter_begin_1a88b040a;
		}
		_iter_end_1a88b040a:;
	};
	return true;;
}



inline void _1a88a16e8_orderCommon(jule::Slice<jule::Ptr<_1a487d19b_Struct>>* _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88a2a29:;
		if (it != expr_end) {
			jule::I64 _3314_j = it - expr->begin();
			jule::Ptr<_1a487d19b_Struct> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					(*(_3135_s)).swap(_3217_i, _3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1a88a2a29:;
			++it;
			_3314_j++;
			goto _iter_begin_1a88a2a29;
		}
		_iter_end_1a88a2a29:;
	};
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _4017_sp = (*(_3135_s)).slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto expr = &(_4017_sp);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88a4d7d:;
		if (it != expr_end) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1a88a7149_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)), _4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k, static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1a88a5ba3:;
				}
				_iter_end_1a88a5ba3:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1a88a4d7d;
				};
				(_4117_n)--;
			}
			_iter_next_1a88a4d7d:;
			++it;
			goto _iter_begin_1a88a4d7d;
		}
		_iter_end_1a88a4d7d:;
	};
}

inline void _1a88a2089_orderCommon(jule::Slice<jule::Ptr<_1a5418939_Var>>* _3135_s) {
	jule::I64 _3217_i = 0LL;;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88a9c84:;
		if (it != expr_end) {
			jule::I64 _3314_j = it - expr->begin();
			jule::Ptr<_1a5418939_Var> _3321_t = *it;
			{
				if ((_3321_t.get()._field_CppLinked || (_3321_t.get()._field_Depends.len() == 0LL))) {
					(*(_3135_s)).swap(_3217_i, _3314_j);
					(_3217_i)++;
				};
			}
			_iter_next_1a88a9c84:;
			++it;
			_3314_j++;
			goto _iter_begin_1a88a9c84;
		}
		_iter_end_1a88a9c84:;
	};
	jule::Slice<jule::Ptr<_1a5418939_Var>> _4017_sp = (*(_3135_s)).slice(_3217_i);;
	jule::I64 _4117_n = (_4017_sp.len() - 1LL);;
	{
		auto expr = &(_4017_sp);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88ac0d8:;
		if (it != expr_end) {
			{
				jule::Bool _4321_swapped = false;;
				jule::I64 _4421_k = 0LL;;
				for (; (_4421_k < _4117_n); (_4421_k)++) {
					{
						if ((!(_1a88ae3a4_isCommonOrdered(_4017_sp.slice((_4421_k + 1LL)), _4017_sp[_4421_k])))) {
							_4017_sp.swap(_4421_k, static_cast<jule::I64>((_4421_k + 1LL)));
							_4321_swapped=true;
						};
					}
				_iter_next_1a88ace0d:;
				}
				_iter_end_1a88ace0d:;;
				if ((!(_4321_swapped))) {
					goto _iter_end_1a88ac0d8;
				};
				(_4117_n)--;
			}
			_iter_next_1a88ac0d8:;
			++it;
			goto _iter_begin_1a88ac0d8;
		}
		_iter_end_1a88ac0d8:;
	};
}



inline void static__1a4d7e16e_orderStructures(jule::Slice<jule::Ptr<_1a487d19b_Struct>>* _6036_structs) {
	_1a88a16e8_orderCommon(_6036_structs);
}



inline void static__1a4d7e37d_orderVars(jule::Slice<jule::Ptr<_1a5418939_Var>>* _6630_vars) {
	_1a88a2089_orderCommon(_6630_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1a4d7d79a_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d47ce6_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1a5d7e03b_optimizeChild(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c40dc_Scope>* _3938_s) {
	jule::Ptr<_1a5d7da63_scopeDeadCode> _4017_sdc = jule::new_ptr<_1a5d7da63_scopeDeadCode>(_1a5d7da63_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a5d8167b_optimizeStmts(_4017_sdc);
	};
}



inline void _1a5d7e2d3_optimizeBodyChildExceptional(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c40dc_Scope>* _5053_s) {
	jule::Ptr<_1a5d7da63_scopeDeadCode> _5117_sdc = jule::new_ptr<_1a5d7da63_scopeDeadCode>(_1a5d7da63_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1a5d8167b_optimizeStmts(_5117_sdc);
	};
}



inline void _1a5d7e569_optimizeBodyChild(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c40dc_Scope>* _6142_s) {
	jule::Ptr<_1a5d7da63_scopeDeadCode> _6217_sdc = jule::new_ptr<_1a5d7da63_scopeDeadCode>(_1a5d7da63_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1a5d8167b_optimizeStmts(_6217_sdc);
	};
}



inline void _1a5d7e7de_optimizeExprModel(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1a5d829bd_exprDeadCode _7213_edc = static__1a5d830ea_new(&(_self_));;
	_1a5d88d15_optimize(&_7213_edc, _7142_model);
}



inline void _1a5d7e9ba_eliminateFollowed(_1a5d7da63_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1a5d7da63_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1a8a77e96:;
	}
	_iter_end_1a8a77e96:;;
}



inline void _1a5d7ec40_pushGoto(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c6b17_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1a8a7a87d:;
	}
	_iter_end_1a8a7a87d:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1a53c6b17_GotoSt>>::make({_9232_gt}));
}



inline void _1a5d7eeb5_pushLabel(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c682b_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1a8a7c0dd;
			};
			(_10317_i)++;
		}
	_iter_next_1a8a7c0dd:;
	}
	_iter_end_1a8a7c0dd:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1a53c682b_Label>>::make({_10233_l}));
}



inline void _1a5d8023a_optimizeRangeIter(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c5c8c_RangeIter> _11541_it) {
	_1a5d7e7de_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1a5d7e569_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1a5d804b0_optimizeWhileIter(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c53a7_WhileIter> _12041_it) {
	_1a5d7e7de_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1a5d814a0_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1a5d7e569_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1a5d80735_optimizeInfIter(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c4e34_InfIter> _12839_it) {
	_1a5d7e569_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1a5d809aa_optimizeConditional(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c4b48_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a83138:;
		if (it != expr_end) {
			jule::Ptr<_1a53c44d8_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1a5d7e7de_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1a5d7e569_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1a8a83138:;
			++it;
			goto _iter_begin_1a8a83138;
		}
		_iter_end_1a8a83138:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1a5d7e03b_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1a5d7e569_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a5d80c30_optimizeMatch(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c7d38_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a85bb8:;
		if (it != expr_end) {
			jule::Ptr<_1a53c8883_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8a864d2:;
					if (it != expr_end) {
						jule::Ptr<_1a5466305_Data> _15225_expr = *it;
						{
							_1a5d7e7de_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1a8a864d2:;
						++it;
						goto _iter_begin_1a8a864d2;
					}
					_iter_end_1a8a864d2:;
				};
				_1a5d7e569_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1a8a85bb8:;
			++it;
			goto _iter_begin_1a8a85bb8;
		}
		_iter_end_1a8a85bb8:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1a5d7e03b_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1a5d7e569_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1a5d80ea5_optimizeAssign(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c7442_Assign> _16838_assign) {
	_1a5d7e7de_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1a5d7e7de_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1a5d8122a_optimizeMultiAssign(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Ptr<_1a53c77e9_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a8986a:;
		if (it != expr_end) {
			jule::Ptr<_1a5466305_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1a5d7e7de_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1a8a8986a:;
			++it;
			goto _iter_begin_1a8a8986a;
		}
		_iter_end_1a8a8986a:;
	};
	_1a5d7e7de_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1a5d814a0_optimizeStmt(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a8a8aeed:;
			{
				jule::Ptr<_1a53c40dc_Scope> _18521_scope = _18236_st.cast_ptr<_1a53c40dc_Scope>(&__jule_any_type21);;
				if (_18521_scope.get()._field_Deferred) {
					_1a5d81967_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1a5d7e03b_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a8a8b174:;
			{
				_1a5d8023a_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1a53c5c8c_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a8a8b1da:;
			{
				_1a5d804b0_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1a53c53a7_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a8a8b251:;
			{
				_1a5d80735_optimizeInfIter(_self_, _18236_st.cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a8a8b2c8:;
			{
				_1a5d809aa_optimizeConditional(_self_, _18236_st.cast_ptr<_1a53c4b48_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a8a8b350:;
			{
				_1a5d80c30_optimizeMatch(_self_, _18236_st.cast_ptr<_1a53c7d38_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a8a8b3c7:;
			{
				_1a5d80ea5_optimizeAssign(_self_, _18236_st.cast_ptr<_1a53c7442_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a8a8b44e:;
			{
				_1a5d8122a_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1a53c77e9_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a8a8b4c6:;
			{
				jule::Ptr<_1a5466305_Data> _20621_d = _18236_st.cast_ptr<_1a5466305_Data>(&__jule_any_type23);;
				if (_self_.get()._field_except) {
					goto _match_end_1a8a8b10d;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type29) {
						_case_begin_1a8a90b5c:;
						{
							_1a5d7e9ba_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1a8a91b08:;
						{
							_1a5d7e7de_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1a8a91aa3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a8a8b54d:;
			{
				_1a5d7e9ba_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a8a8b5c5:;
			{
				_1a5d7ec40_pushGoto(_self_, _18236_st.cast_ptr<_1a53c6b17_GotoSt>(&__jule_any_type42));
				_1a5d7e9ba_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a8a8b64c:;
			{
				_1a5d7eeb5_pushLabel(_self_, _18236_st.cast_ptr<_1a53c682b_Label>(&__jule_any_type20));
			}
		}
		_match_end_1a8a8b10d:;
	};
}



inline void _1a5d8167b_optimizeStmts(jule::Ptr<_1a5d7da63_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1a5d814a0_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1a8a9404a:;
	}
	_iter_end_1a8a9404a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d7da63_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1a5d829bd_exprDeadCode static__1a5d830ea_new(jule::Ptr<_1a5d7da63_scopeDeadCode>* _5024_s) {
	return _1a5d829bd_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1a5d83370_binary(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53962ac_BinopExprModel> _5625_m) {
	_1a5d88d15_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1a5d88d15_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1a5d835e5_unary(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5396664_UnaryExprModel> _6124_m) {
	_1a5d88d15_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1a5d8386a_structureLit(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5396e17_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a971a2:;
		if (it != expr_end) {
			jule::Ptr<_1a5396a60_StructArgExprModel> _6621_arg = *it;
			{
				_1a5d88d15_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1a8a971a2:;
			++it;
			goto _iter_begin_1a8a971a2;
		}
		_iter_end_1a8a971a2:;
	};
}



inline void _1a5d83ae0_allocStructure(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5397225_AllocStructLitExprModel> _7133_m) {
	_1a5d8386a_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1a5d83d65_casting(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5397775_CastingExprModel> _7526_m) {
	_1a5d88d15_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1a5d840da_args(_1a5d829bd_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a99391:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1a5d88d15_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1a8a99391:;
			++it;
			goto _iter_begin_1a8a99391;
		}
		_iter_end_1a8a99391:;
	};
}



inline void _1a5d84360_funcCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5398127_FnCallExprModel> _8527_m) {
	_1a5d88d15_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1a5d840da_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1a5d7e2d3_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1a5d845d5_slice(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53984ce_SliceExprModel> _9324_m) {
	_1a5d840da_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1a5d8485a_array(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539b207_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1a5d88d15_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1a5d840da_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1a5d84ad0_indexing(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5398952_IndexingExprModel> _10427_m) {
	_1a5d88d15_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1a5d88d15_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1a5d84d55_anonFunc(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5398d09_AnonFnExprModel> _10927_m) {
	_1a5d81967_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1a5d850ca_mapExpr(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5399634_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aa0188:;
		if (it != expr_end) {
			jule::Ptr<_1a53991b1_KeyValPairExprModel> _11421_pair = *it;
			{
				_1a5d88d15_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1a5d88d15_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1a8aa0188:;
			++it;
			goto _iter_begin_1a8aa0188;
		}
		_iter_end_1a8aa0188:;
	};
}



inline void _1a5d85350_slicing(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a5399b73_SlicingExprModel> _12026_m) {
	_1a5d88d15_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1a5d88d15_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1a5d88d15_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1a5d855c5_traitSub(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539a1b2_TraitSubIdentExprModel> _12827_m) {
	_1a5d88d15_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1a5d8584a_structureSub(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539a998_StructSubIdentExprModel> _13231_m) {
	_1a5d88d15_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1a5d85ac0_commonSub(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539ba54_CommonSubIdentExprModel> _13628_m) {
	_1a5d88d15_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1a5d85d45_tuple(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539bd51_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aa4533:;
		if (it != expr_end) {
			jule::Ptr<_1a5466305_Data> _14121_d = *it;
			{
				_1a5d88d15_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1a8aa4533:;
			++it;
			goto _iter_begin_1a8aa4533;
		}
		_iter_end_1a8aa4533:;
	};
}



inline void _1a5d860ba_newCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1a5d88d15_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1a5d86340_outCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539c22a_BuiltinOutCallExprModel> _15226_m) {
	_1a5d88d15_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1a5d865b5_outlnCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel> _15628_m) {
	_1a5d88d15_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1a5d8683a_panicCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539d209_BuiltinPanicCallExprModel> _16028_m) {
	_1a5d88d15_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1a5d86ab0_assertCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel> _16429_m) {
	_1a5d88d15_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1a5d86d35_errorCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel> _16828_m) {
	_1a5d88d15_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1a5d870aa_makeCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1a5d88d15_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1a5d88d15_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1a5d87330_appendCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539e051_BuiltinAppendCallExprModel> _18129_m) {
	_1a5d88d15_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1a5d88d15_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1a5d875a5_lenCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539e370_BuiltinLenCallExprModel> _18626_m) {
	_1a5d88d15_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1a5d8782a_capCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539e68e_BuiltinCapCallExprModel> _19026_m) {
	_1a5d88d15_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1a5d87aa0_cloneCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539c934_BuiltinCloneCallExprModel> _19428_m) {
	_1a5d88d15_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1a5d87d25_deleteCall(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel> _19829_m) {
	_1a5d88d15_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1a5d88d15_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1a5d8809a_sizeof(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53a088d_SizeofExprModel> _20525_m) {
	_1a5d88d15_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1a5d88320_alignof(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53a0b79_AlignofExprModel> _20926_m) {
	_1a5d88d15_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1a5d88595_integratedToStr(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53a1273_IntegratedToStrExprModel> _21334_m) {
	_1a5d88d15_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1a5d8881a_free(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53a1927_FreeExprModel> _21723_m) {
	_1a5d88d15_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1a5d88a90_backendEmit(_1a5d829bd_exprDeadCode* _self_, jule::Ptr<_1a53a163b_BackendEmitExprModel> _22130_m) {
	_1a5d840da_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1a5d88d15_optimize(_1a5d829bd_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a8ab1c7c:;
			{
				_1a5d83370_binary(_self_, (*(_22528_model)).cast_ptr<_1a53962ac_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a8ab1d04:;
			{
				_1a5d835e5_unary(_self_, (*(_22528_model)).cast_ptr<_1a5396664_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a8ab1d7b:;
			{
				_1a5d8386a_structureLit(_self_, (*(_22528_model)).cast_ptr<_1a5396e17_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a8ab2255:;
			{
				_1a5d83ae0_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1a5397225_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8ab22bb:;
			{
				_1a5d83d65_casting(_self_, (*(_22528_model)).cast_ptr<_1a5397775_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8ab2343:;
			{
				_1a5d84360_funcCall(_self_, (*(_22528_model)).cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a8ab23ba:;
			{
				_1a5d845d5_slice(_self_, (*(_22528_model)).cast_ptr<_1a53984ce_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a8ab2442:;
			{
				_1a5d8485a_array(_self_, (*(_22528_model)).cast_ptr<_1a539b207_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a8ab24b9:;
			{
				_1a5d84ad0_indexing(_self_, (*(_22528_model)).cast_ptr<_1a5398952_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a8ab2541:;
			{
				_1a5d84d55_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1a5398d09_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a8ab25b8:;
			{
				_1a5d850ca_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1a5399634_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a8ab2640:;
			{
				_1a5d85350_slicing(_self_, (*(_22528_model)).cast_ptr<_1a5399b73_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a8ab26b7:;
			{
				_1a5d855c5_traitSub(_self_, (*(_22528_model)).cast_ptr<_1a539a1b2_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a8ab273e:;
			{
				_1a5d8584a_structureSub(_self_, (*(_22528_model)).cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a8ab27b6:;
			{
				_1a5d85ac0_commonSub(_self_, (*(_22528_model)).cast_ptr<_1a539ba54_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8ab283d:;
			{
				_1a5d85d45_tuple(_self_, (*(_22528_model)).cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a8ab28b5:;
			{
				_1a5d86340_outCall(_self_, (*(_22528_model)).cast_ptr<_1a539c22a_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a8ab293c:;
			{
				_1a5d865b5_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1a539c615_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a8ab29b4:;
			{
				_1a5d860ba_newCall(_self_, (*(_22528_model)).cast_ptr<_1a539cd1e_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a8ab2a3b:;
			{
				_1a5d8683a_panicCall(_self_, (*(_22528_model)).cast_ptr<_1a539d209_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a8ab2ab3:;
			{
				_1a5d86ab0_assertCall(_self_, (*(_22528_model)).cast_ptr<_1a539d6b0_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8ab2b3a:;
			{
				_1a5d86d35_errorCall(_self_, (*(_22528_model)).cast_ptr<_1a53a0591_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a8ab2bb2:;
			{
				_1a5d870aa_makeCall(_self_, (*(_22528_model)).cast_ptr<_1a539db66_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a8ab2c39:;
			{
				_1a5d87330_appendCall(_self_, (*(_22528_model)).cast_ptr<_1a539e051_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a8ab2cb1:;
			{
				_1a5d875a5_lenCall(_self_, (*(_22528_model)).cast_ptr<_1a539e370_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a8ab2d38:;
			{
				_1a5d8782a_capCall(_self_, (*(_22528_model)).cast_ptr<_1a539e68e_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a8ab2db0:;
			{
				_1a5d87aa0_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1a539c934_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a8ab2e37:;
			{
				_1a5d87d25_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1a539ed43_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a8ab2eae:;
			{
				_1a5d8809a_sizeof(_self_, (*(_22528_model)).cast_ptr<_1a53a088d_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a8ab3036:;
			{
				_1a5d88320_alignof(_self_, (*(_22528_model)).cast_ptr<_1a53a0b79_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a8ab30ad:;
			{
				_1a5d88595_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1a53a1273_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a8ab3135:;
			{
				_1a5d8881a_free(_self_, (*(_22528_model)).cast_ptr<_1a53a1927_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8ab31ac:;
			{
				_1a5d88a90_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1a53a163b_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1a8ab1e7a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d829bd_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5667150_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b567d5a6_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a3c3d914_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b56cd727_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b56cd914_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a3e43333_scopeOptimizer> static__1ce2988d3_new(jule::Ptr<_1a53c40dc_Scope> _4523_scope) {
	return jule::new_ptr<_1a3e43333_scopeOptimizer>(_1a3e43333_scopeOptimizer{._field_scope=_4523_scope});;
}



inline void _1ce29a7c5_setCurrentStmt(_1a3e43333_scopeOptimizer* _self_, jule::Any _5137_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5137_stmt))))));
}



inline void _1ce2972a5_optimizeData(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a5466305_Data> _5535_d) {
	{
		auto &_match_expr{ _5535_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8aed11a:;
			{
				jule::Ptr<_1a5398127_FnCallExprModel> _5821_m = _5535_d.get()._field_Model.cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34);;
				if (_1e7712174_Production) {
					if (((!(_1a53a8511_IsBuiltin(_5821_m.get()._field_Func.ptr()))) && _1b55c5982_isStdPackage(_5821_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1ce29a7c5_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1a8aece0b:;
	};
	static__1b56c5c2a_optimize(&(_5535_d.get()._field_Model));
}



inline void _1ce544e48_optimizeVar(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a5418939_Var> _7034_v) {
	if ((_7034_v.get()._field_Value != nullptr)) {
		static__1b56c5c2a_optimize(&(_7034_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1ce54c2d5_optimizeConditional(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c4b48_Conditional> _7642_c) {
	{
		auto expr = &(_7642_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b010eb:;
		if (it != expr_end) {
			jule::Ptr<_1a53c44d8_If> _7721_elif = *it;
			{
				static__1b56c5c2a_optimize(&(_7721_elif.get()._field_Expr));
				_1b55b948c_optimizeChild(_self_, _7721_elif.get()._field_Scope);
			}
			_iter_next_1a8b010eb:;
			++it;
			goto _iter_begin_1a8b010eb;
		}
		_iter_end_1a8b010eb:;
	};
	if ((_7642_c.get()._field_Default != nullptr)) {
		_1b55b948c_optimizeChild(_self_, _7642_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1a3c40064_Cond))) {
		return;;
	};
	jule::Bool _8917_constCase = false;;
	{
		auto expr = &(_7642_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b02e00:;
		if (it != expr_end) {
			jule::I64 _9214_i = it - expr->begin();
			jule::Ptr<_1a53c44d8_If> _9221_elif = *it;
			{
				if ((!(_1b55d7455_isConstantValidConditionalCase(&(_9221_elif))))) {
					goto _iter_next_1a8b02e00;
				};
				_8917_constCase=true;
				_7642_c.get()._field_Elifs=_7642_c.get()._field_Elifs.slice(0LL, _9214_i);
				_7642_c.get()._field_Default=jule::new_ptr<_1a53c47c4_Else>(_1a53c47c4_Else{._field_Scope=_9221_elif.get()._field_Scope});
				goto _iter_end_1a8b02e00;
			}
			_iter_next_1a8b02e00:;
			++it;
			_9214_i++;
			goto _iter_begin_1a8b02e00;
		}
		_iter_end_1a8b02e00:;
	};
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a53c44d8_If>* _10917_i = (&(_7642_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1a53c44d8_If>* _11013_end = (&(_7642_c.get()._field_Elifs[(_7642_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_10917_i <= _11013_end); (_10917_i)++) {
		{
			{
				if (_1b566ae34_isUnreachableConditionalCase(&((*(_10917_i))))) {
					(*(_10917_i))=nullptr;
				};
			};
		}
	_iter_next_1a8b0608a:;
	}
	_iter_end_1a8b0608a:;;
	if ((_7642_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_8917_constCase))) {
		return;;
	};
	jule::I64 _12817_only = -1LL;;
	{
		auto expr = &(_7642_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b076da:;
		if (it != expr_end) {
			jule::I64 _12913_j = it - expr->begin();
			jule::Ptr<_1a53c44d8_If> _12916_elif = *it;
			{
				if ((_12916_elif != nullptr)) {
					if ((_12817_only != -1LL)) {
						return;;
					};
					_12817_only=_12913_j;
				};
			}
			_iter_next_1a8b076da:;
			++it;
			_12913_j++;
			goto _iter_begin_1a8b076da;
		}
		_iter_end_1a8b076da:;
	};
	if ((_12817_only != -1LL)) {
		_1ce29a7c5_setCurrentStmt(_self_, jule::Any(_7642_c.get()._field_Elifs[_12817_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _1ce57065a_buildDefaultConstatTrueCase(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c8883_Case> _14550_case, jule::I64* _14568_i, jule::Ptr<_1a53c7d38_Match>* _14581_m) {
	_14550_case.get()._field_Exprs=nullptr;
	jule::I64 _14713_start = (*(_14568_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14550_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a8b0a15a;
			};
			jule::Any *_15322_stmt = &(_14550_case.get()._field_Scope.get()._field_Stmts[(_14550_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15322_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1a8b0a666:;
					{
						((*(_14568_i)))++;
						if (((*(_14568_i)) >= (*(_14581_m)).get()._field_Cases.len())) {
							(*(_15322_stmt))=jule::Any((*(_14581_m)).get()._field_Default.get()._field_Scope, &__jule_any_type21);
							goto _iter_end_1a8b0a15a;
						};
						_14550_case=(*(_14581_m)).get()._field_Cases[(*(_14568_i))];
						(*(_15322_stmt))=jule::Any(_14550_case.get()._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1a8b0bb95:;
					{
						goto _iter_end_1a8b0a15a;
					}
				}
				_match_end_1a8b0baa7:;
			};
		}
	_iter_next_1a8b0a15a:;
	}
	_iter_end_1a8b0a15a:;;
	(*(_14581_m)).get()._field_Default=(*(_14581_m)).get()._field_Cases[_14713_start];
	(*(_14581_m)).get()._field_Cases=(*(_14581_m)).get()._field_Cases.slice(0LL, _14713_start);
}



inline void _1ce576ce3_optimizeMatch(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c7d38_Match> _17136_m) {
	{
		auto expr = &(_17136_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b0dbec:;
		if (it != expr_end) {
			jule::Ptr<_1a53c8883_Case> _17221_case = *it;
			{
				{
					auto expr = &(_17221_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b0e538:;
					if (it != expr_end) {
						jule::Ptr<_1a5466305_Data> _17325_expr = *it;
						{
							static__1b56c5c2a_optimize(&(_17325_expr.get()._field_Model));
						}
						_iter_next_1a8b0e538:;
						++it;
						goto _iter_begin_1a8b0e538;
					}
					_iter_end_1a8b0e538:;
				};
				_1b55b948c_optimizeChild(_self_, _17221_case.get()._field_Scope);
			}
			_iter_next_1a8b0dbec:;
			++it;
			goto _iter_begin_1a8b0dbec;
		}
		_iter_end_1a8b0dbec:;
	};
	if ((_17136_m.get()._field_Default != nullptr)) {
		_1b55b948c_optimizeChild(_self_, _17136_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1a3c40064_Cond))) {
		return;;
	};
	jule::Bool _18617_constCase = false;;
	{
		auto expr = &(_17136_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b1113e:;
		if (it != expr_end) {
			jule::I64 _18918_i = it - expr->begin();
			jule::Ptr<_1a53c8883_Case> _18925_case = *it;
			{
				if ((!(_1b564e896_isConstantValidMatchCase(&(_18925_case))))) {
					goto _iter_next_1a8b1113e;
				};
				_18617_constCase=true;
				_1ce57065a_buildDefaultConstatTrueCase(_self_, _18925_case, &(_18918_i), &(_17136_m));
				goto _iter_end_1a8b1113e;
			}
			_iter_next_1a8b1113e:;
			++it;
			_18918_i++;
			goto _iter_begin_1a8b1113e;
		}
		_iter_end_1a8b1113e:;
	};
	if ((_17136_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1a53c8883_Case>* _20317_i = (&(_17136_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1a53c8883_Case>* _20413_end = (&(_17136_m.get()._field_Cases[(_17136_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20317_i <= _20413_end); (_20317_i)++) {
		{
			{
				if (_1b56b3e16_isUnreachableMatchCase(&((*(_20317_i))))) {
					(*(_20317_i))=nullptr;
				};
			};
		}
	_iter_next_1a8b13ce0:;
	}
	_iter_end_1a8b13ce0:;;
	if ((!(_18617_constCase))) {
		return;;
	};
	jule::I64 _21817_only = -1LL;;
	{
		auto expr = &(_17136_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b14d9b:;
		if (it != expr_end) {
			jule::I64 _21913_j = it - expr->begin();
			jule::Ptr<_1a53c8883_Case> _21916_case = *it;
			{
				if ((_21916_case != nullptr)) {
					if ((_21817_only != -1LL)) {
						return;;
					};
					_21817_only=_21913_j;
				};
			}
			_iter_next_1a8b14d9b:;
			++it;
			_21913_j++;
			goto _iter_begin_1a8b14d9b;
		}
		_iter_end_1a8b14d9b:;
	};
	if ((_21817_only != -1LL)) {
		_1ce29a7c5_setCurrentStmt(_self_, jule::Any(_17136_m.get()._field_Cases[_21817_only].get()._field_Scope, &__jule_any_type21));
	};
}



inline void _1ce57aab6_optimizeRangeIter(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c5c8c_RangeIter> _23540_it) {
	static__1b56c5c2a_optimize(&(_23540_it.get()._field_Expr.get()._field_Model));
	_1b55b948c_optimizeChild(_self_, _23540_it.get()._field_Scope);
}



inline void _1ce5864b7_optimizeWhileIter(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c53a7_WhileIter> _24040_it) {
	static__1b56c5c2a_optimize(&(_24040_it.get()._field_Expr));
	_1ce5da3b7_optimizeStmt(_self_, _24040_it.get()._field_Next);
	_1b55b948c_optimizeChild(_self_, _24040_it.get()._field_Scope);
}



inline jule::Bool _1ce58b7db_substr(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c7442_Assign> _24629_a) {
	{
		auto &_match_expr{ _24629_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a8b18e16:;
			{
				jule::Ptr<_1a5399b73_SlicingExprModel> _24921_sem = _24629_a.get()._field_R.get()._field_Model.cast_ptr<_1a5399b73_SlicingExprModel>(&__jule_any_type98);;
				if ((_24921_sem.get()._field_Expr == _24629_a.get()._field_L.get()._field_Model)) {
					_1ce29a7c5_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b56cd727_MutSlicingExprModel>(_1b56cd727_MutSlicingExprModel{._field_Token=_24921_sem.get()._field_Token, ._field_Expr=_24921_sem.get()._field_Expr, ._field_Left=_24921_sem.get()._field_Left, ._field_Right=_24921_sem.get()._field_Right}), &__jule_any_type126));
					return true;;
				};
			}
		}
		_match_end_1a8b18db1:;
	};
	return false;;
}



inline jule::Bool _1ce596c58_strInsert(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c7442_Assign> _26332_a) {
	{
		auto &_match_expr{ _26332_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a8b1b259:;
			{
				jule::Ptr<_1a53962ac_BinopExprModel> _26621_m = _26332_a.get()._field_R.get()._field_Model.cast_ptr<_1a53962ac_BinopExprModel>(&__jule_any_type117);;
				if ((_26621_m.get()._field_Right.get()._field_Model == _26332_a.get()._field_L.get()._field_Model)) {
					_1ce29a7c5_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b56cd914_StrInsertBeginExprModel>(_1b56cd914_StrInsertBeginExprModel{._field_Dest=_26332_a.get()._field_L.get()._field_Model, ._field_Expr=_26621_m.get()._field_Left.get()._field_Model}), &__jule_any_type127));
					return true;;
				};
			}
		}
		_match_end_1a8b1aeb2:;
	};
	return false;;
}



inline jule::Bool _1ce59dc93_strAssign(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c7442_Assign> _27832_a) {
	if ((_27832_a.get()._field_Op.get()._field_Kind != jule::Str("=", 1))) {
		return false;;
	};
	jule::Ptr<_1a5496ed4_Prim> _28213_lp = _1a549461e_Prim(_27832_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_28213_lp == nullptr) || (!(_1a549a218_IsStr(_28213_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1ce58b7db_substr(_self_, _27832_a) || _1ce596c58_strInsert(_self_, _27832_a)) {
			_case_begin_1a8b1e9dd:;
			{
				return true;;
			}
		}
		_match_end_1a8b1e944:;
	};
	return false;;
}



inline void _1ce5ad49a_optimizeAssign(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c7442_Assign> _29437_assign) {
	if ((_1ce297a47_Copy && _1ce59dc93_strAssign(_self_, _29437_assign))) {
		return;;
	};
	static__1b56c5c2a_optimize(&(_29437_assign.get()._field_L.get()._field_Model));
	static__1b56c5c2a_optimize(&(_29437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _29437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a8b21847:;
			{
				if ((_1b567b9e4_Math && (_1a5495a71_Struct(_29437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_29437_assign.get()._field_Op.get()._field_Kind=_29437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_29437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _30725_model = jule::Any(jule::new_ptr<_1a53962ac_BinopExprModel>(_1a53962ac_BinopExprModel{._field_Left=_29437_assign.get()._field_L, ._field_Right=_29437_assign.get()._field_R, ._field_Op=_29437_assign.get()._field_Op}), &__jule_any_type117);;
					static__1b56c5c2a_optimize(&(_30725_model));
					{
						auto &_match_expr{ _30725_model };
						
						if (_match_expr.type == &__jule_any_type117) {
							_case_begin_1a8b23c23:;
							{
								_29437_assign.get()._field_R=jule::new_ptr<_1a5395ce5_OperandExprModel>((*(_29437_assign.get()._field_R)));
								_29437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_29437_assign.get()._field_R.get()._field_Model=_30725_model;
								return;;
							}
						}
						_match_end_1a8b239c0:;
					};
					_29437_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1a8b21759:;
	};
	if (_1ce602005_Append) {
		{
			auto &_match_expr{ _29437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1a8b257b3:;
				{
					jule::Ptr<_1a539e051_BuiltinAppendCallExprModel> _32825_m = _29437_assign.get()._field_R.get()._field_Model.cast_ptr<_1a539e051_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					{
						auto &_match_expr{ _32825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_1a8b2682a:;
							{
								{
									auto &_match_expr{ _32825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_1a8b270ab:;
										{
											_1ce29a7c5_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1a3c3d914_PushToSliceExprModel>(_1a3c3d914_PushToSliceExprModel{._field_Dest=_32825_m.get()._field_Dest, ._field_Elems=_32825_m.get()._field_Elements.cast_ptr<_1a53984ce_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type128));
										}
									}
									_match_end_1a8b27056:;
								};
							}
						}
						_match_end_1a8b2661b:;
					};
				}
			}
			_match_end_1a8b2243b:;
		};
	};
}



inline void _1ce5b4b55_optimizeMultiAssign(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c77e9_MultiAssign> _34442_assign) {
	{
		auto expr = &(_34442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b25bc0:;
		if (it != expr_end) {
			jule::Ptr<_1a5466305_Data> _34521_l = *it;
			{
				if ((_34521_l != nullptr)) {
					static__1b56c5c2a_optimize(&(_34521_l.get()._field_Model));
				};
			}
			_iter_next_1a8b25bc0:;
			++it;
			goto _iter_begin_1a8b25bc0;
		}
		_iter_end_1a8b25bc0:;
	};
	static__1b56c5c2a_optimize(&(_34442_assign.get()._field_R));
}



inline void _1ce5bc1e0_optimizeRet(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c92ac_RetSt> _35334_r) {
	static__1b56c5c2a_optimize(&(_35334_r.get()._field_Expr));
}



inline void _1ce5da3b7_optimizeStmt(_1a3e43333_scopeOptimizer* _self_, jule::Any _35735_stmt) {
	{
		auto &_match_expr{ _35735_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a8b294cb:;
			{
				_1b55b948c_optimizeChild(_self_, _35735_stmt.cast_ptr<_1a53c40dc_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a8b29553:;
			{
				_1ce2972a5_optimizeData(_self_, _35735_stmt.cast_ptr<_1a5466305_Data>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8b295ca:;
			{
				_1ce544e48_optimizeVar(_self_, _35735_stmt.cast_ptr<_1a5418939_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a8b29652:;
			{
				_1ce54c2d5_optimizeConditional(_self_, _35735_stmt.cast_ptr<_1a53c4b48_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a8b296c9:;
			{
				_1ce57aab6_optimizeRangeIter(_self_, _35735_stmt.cast_ptr<_1a53c5c8c_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a8b29751:;
			{
				_1ce5864b7_optimizeWhileIter(_self_, _35735_stmt.cast_ptr<_1a53c53a7_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a8b297c8:;
			{
				_1b55b948c_optimizeChild(_self_, _35735_stmt.cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a8b29850:;
			{
				_1ce5ad49a_optimizeAssign(_self_, _35735_stmt.cast_ptr<_1a53c7442_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a8b298c7:;
			{
				_1ce5b4b55_optimizeMultiAssign(_self_, _35735_stmt.cast_ptr<_1a53c77e9_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a8b2994e:;
			{
				_1ce576ce3_optimizeMatch(_self_, _35735_stmt.cast_ptr<_1a53c7d38_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a8b299c6:;
			{
				_1ce5bc1e0_optimizeRet(_self_, _35735_stmt.cast_ptr<_1a53c92ac_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1a8b29322:;
	};
}



inline void _1b55b948c_optimizeChild(_1a3e43333_scopeOptimizer* _self_, jule::Ptr<_1a53c40dc_Scope> _38436_child) {
	jule::Ptr<_1a3e43333_scopeOptimizer> _38517_so = static__1ce2988d3_new(_38436_child);;
	_1b55bcdca_optimize(_38517_so.ptr());
}



inline void _1b55bcdca_optimize(_1a3e43333_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b30aa9:;
		if (it != expr_end) {
			jule::I64 _39114_i = it - expr->begin();
			jule::Any _39121_stmt = *it;
			{
				(*(_self_))._field_i=_39114_i;
				_1ce5da3b7_optimizeStmt(_self_, _39121_stmt);
			}
			_iter_next_1a8b30aa9:;
			++it;
			_39114_i++;
			goto _iter_begin_1a8b30aa9;
		}
		_iter_end_1a8b30aa9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e43333_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1b56c5c2a_optimize(jule::Any* _5829_model) {
	if (_1a5c86251_exprEnabled) {
		jule::Ptr<_1a3e43520_exprOptimizer> _6121_exop = jule::new_ptr<_1a3e43520_exprOptimizer>(_1a3e43520_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1b56a3884_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1a3c5186c_strCond(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53962ac_BinopExprModel> _6826_m) {
	jule::Ptr<_1a5496ed4_Prim> _6913_lp = _1a549461e_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1a549a218_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Kind != jule::Str("==", 2)) && (_6826_m.get()._field_Op.get()._field_Kind != jule::Str("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8b39497:;
			{
				({
					jule::Ptr<_1a5395ce5_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1a5395ce5_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1a8b39442:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8b38c16:;
			{
				goto _match_end_1a8b39e8c;
			}
		}
		else {
			_case_begin_1a8b3a531:;
			{
				return true;;
			}
		}
		_match_end_1a8b39e8c:;
	};
	_julec_label_opt:;
	jule::Ptr<_1a5389ec6_Const> _8813_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
	if ((!(_1a538c00b_ReadStr(_8813_c.ptr()).empty()))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1a8b3bba3:;
			{
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1a539ba54_CommonSubIdentExprModel>(_1a539ba54_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1a8b3bc2a:;
			{
				jule::Ptr<_1ceee8973_Token> _10021_op = _6826_m.get()._field_Op;;
				_10021_op.get()._field_Kind=jule::Str("!", 1);
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1a5396664_UnaryExprModel>(_1a5396664_UnaryExprModel{._field_Expr=jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Model=jule::Any(jule::new_ptr<_1a539ba54_CommonSubIdentExprModel>(_1a539ba54_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10021_op}), &__jule_any_type74);
			}
		}
		_match_end_1a8b3b488:;
	};
	return true;;
}



inline void _1a3c71b45_binary(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53962ac_BinopExprModel> _11625_m) {
	static__1b56c5c2a_optimize(&(_11625_m.get()._field_Left.get()._field_Model));
	static__1b56c5c2a_optimize(&(_11625_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _11625_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8b40b0d:;
			{
				goto _match_end_1a8b40613;
			}
		}
		else {
			_case_begin_1a8b406bd:;
			{
				return;;
			}
		}
		_match_end_1a8b40613:;
	};
	if ((_1a3c40064_Cond && _1a3c5186c_strCond(_self_, _11625_m))) {
		return;;
	};
	if ((!(_1b567b9e4_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _11625_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a8b416d0:;
			{
				jule::Bool _13618_ok = false;;
				jule::U64 _13622_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a3c3d64a_checkForBitShiftOpt(&(_11625_m.get()._field_Left), &(_11625_m.get()._field_Right));
					_13618_ok = __jule_assign_result.__jule_result_arg0;
					_13622_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_13618_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1a5389ec6_Const> _13925_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
					_1a538cea7_SetU64(_13925_c.ptr(), _13622_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1a8b41757:;
			{
				jule::Bool _14418_ok = false;;
				jule::U64 _14422_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1a3c3d64a_checkForBitShiftOpt(&(_11625_m.get()._field_Left), &(_11625_m.get()._field_Right));
					_14418_ok = __jule_assign_result.__jule_result_arg0;
					_14422_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_14418_ok) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1a5389ec6_Const> _14725_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
					_1a538cea7_SetU64(_14725_c.ptr(), _14422_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1a8b417ce:;
			{
				jule::Ptr<_1a5389ec6_Const> _15221_c = _11625_m.get()._field_Right.get()._field_Model.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
				jule::F64 _15317_d = _1a538c9ac_AsF64(_15221_c.ptr());;
				if ((_15317_d == 2LL)) {
					_11625_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1a538cc32_SetI64(_15221_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1a8b41658:;
	};
	jule::Any _15917_model = jule::Any(jule::new_ptr<_1b5667150_UnsafeBinopExprModel>(_1b5667150_UnsafeBinopExprModel{._field_Node=_11625_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_15917_model))))));
}



inline void _1a3c94393_unary(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5396664_UnaryExprModel> _16324_m) {
	static__1b56c5c2a_optimize(&(_16324_m.get()._field_Expr.get()._field_Model));
	if ((_1a3c3edee_Ptr && (_16324_m.get()._field_Op.get()._field_Kind == jule::Str("*", 1)))) {
		{
			auto &_match_expr{ _16324_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1a8b48594:;
				{
					jule::Ptr<_1a5396664_UnaryExprModel> _16825_um = _16324_m.get()._field_Expr.get()._field_Model.cast_ptr<_1a5396664_UnaryExprModel>(&__jule_any_type74);;
					if ((_16825_um.get()._field_Op.get()._field_Kind == jule::Str("&", 1))) {
						(*((*(_self_))._field_model))=_16825_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1a8b4853e:;
		};
	};
}



inline void _1a3ca5849_structureLit(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5396e17_StructLitExprModel> _17631_m) {
	{
		auto expr = &(_17631_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b4a0ac:;
		if (it != expr_end) {
			jule::Ptr<_1a5396a60_StructArgExprModel> _17721_arg = *it;
			{
				static__1b56c5c2a_optimize(&(_17721_arg.get()._field_Expr));
			}
			_iter_next_1a8b4a0ac:;
			++it;
			goto _iter_begin_1a8b4a0ac;
		}
		_iter_end_1a8b4a0ac:;
	};
}



inline void _1a3cbd0d1_allocStructure(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5397225_AllocStructLitExprModel> _18233_m) {
	_1a3ca5849_structureLit(_self_, _18233_m.get()._field_Lit);
}



inline void _1a3cd7183_casting(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5397775_CastingExprModel> _18626_m) {
	static__1b56c5c2a_optimize(&(_18626_m.get()._field_Expr));
}



inline void _1a3ce1566_args(_1a3e43520_exprOptimizer* _self_, jule::Slice<jule::Any>* _19024_args) {
	{
		auto expr = _19024_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b4ba5e:;
		if (it != expr_end) {
			jule::I64 _19114_i = it - expr->begin();
			jule::Any _19121_arg = *it;
			{
				static__1b56c5c2a_optimize(&(_19121_arg));
				(*(_19024_args))[_19114_i]=_19121_arg;
			}
			_iter_next_1a8b4ba5e:;
			++it;
			_19114_i++;
			goto _iter_begin_1a8b4ba5e;
		}
		_iter_end_1a8b4ba5e:;
	};
}



inline void _1a3ce813e_scope(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53c40dc_Scope>* _19725_s) {
	jule::Ptr<_1a3e43333_scopeOptimizer> _19817_scopt = static__1ce2988d3_new((*(_19725_s)));;
	_1b55bcdca_optimize(_19817_scopt.ptr());
}



inline void _1a3ced4c9_funcCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5398127_FnCallExprModel> _20227_m) {
	static__1b56c5c2a_optimize(&(_20227_m.get()._field_Expr));
	_1a3ce1566_args(_self_, &(_20227_m.get()._field_Args));
	if ((_20227_m.get()._field_Except != nullptr)) {
		_1a3ce813e_scope(_self_, &(_20227_m.get()._field_Except));
	};
}



inline void _1a3d1ee79_slice(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53984ce_SliceExprModel> _21024_m) {
	_1a3ce1566_args(_self_, &(_21024_m.get()._field_Elems));
}



inline void _1a3d25a2e_array(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539b207_ArrayExprModel> _21424_m) {
	if (((_21424_m.get()._field_Elems.len() == 2LL) && (_21424_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _21621_elem = _21424_m.get()._field_Elems[0LL];;
		static__1b56c5c2a_optimize(&(_21621_elem));
		_21424_m.get()._field_Elems[0LL]=_21621_elem;
	};
	_1a3ce1566_args(_self_, &(_21424_m.get()._field_Elems));
}



inline void _1a3d26e2b_indexing(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5398952_IndexingExprModel> _22327_m) {
	static__1b56c5c2a_optimize(&(_22327_m.get()._field_Expr.get()._field_Model));
	static__1b56c5c2a_optimize(&(_22327_m.get()._field_Index.get()._field_Model));
	if ((!(_1b567bb59_Access))) {
		return;;
	};
	jule::Bool _22913_array = (_1a5495334_Arr(_22327_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_22913_array && _1a5466bb8_IsConst(_22327_m.get()._field_Index.ptr()))) {
		jule::Any _23221_model = jule::Any(jule::new_ptr<_1b567d5a6_UnsafeIndexingExprModel>(_1b567d5a6_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_23221_model))))));
		return;;
	};
	{
		auto &_match_expr{ _22327_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8b5524e:;
			{
				jule::Ptr<_1a5418939_Var> _23817_i = _22327_m.get()._field_Index.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
				if ((_23817_i.get()._field_Mutable || (_23817_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1a8b550ea;
				};
				{
					auto &_match_expr{ _22327_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a8b569ae:;
						{
							jule::Ptr<_1a5418939_Var> _24421_r = _22327_m.get()._field_Expr.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
							if ((_23817_i.get()._field_IterRelation.get()._field_Range == _24421_r)) {
								jule::Any _24729_model = jule::Any(jule::new_ptr<_1b567d5a6_UnsafeIndexingExprModel>(_1b567d5a6_UnsafeIndexingExprModel{._field_Node=_22327_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24729_model))))));
							};
						}
					}
					_match_end_1a8b56959:;
				};
			}
		}
		_match_end_1a8b550ea:;
	};
}



inline void _1a3d46cb4_anonFunc(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5398d09_AnonFnExprModel> _25427_m) {
	_1a3ce813e_scope(_self_, &(_25427_m.get()._field_Func.get()._field_Scope));
}



inline void _1a3d61790_mapExpr(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5399634_MapExprModel> _25826_m) {
	{
		auto expr = &(_25826_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b59077:;
		if (it != expr_end) {
			jule::Ptr<_1a53991b1_KeyValPairExprModel> _25921_pair = *it;
			{
				static__1b56c5c2a_optimize(&(_25921_pair.get()._field_Key));
				static__1b56c5c2a_optimize(&(_25921_pair.get()._field_Val));
			}
			_iter_next_1a8b59077:;
			++it;
			goto _iter_begin_1a8b59077;
		}
		_iter_end_1a8b59077:;
	};
}



inline void _1a3d6ccc9_slicing(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a5399b73_SlicingExprModel> _26526_m) {
	static__1b56c5c2a_optimize(&(_26526_m.get()._field_Expr));
	static__1b56c5c2a_optimize(&(_26526_m.get()._field_Left));
	if ((_26526_m.get()._field_Right != nullptr)) {
		static__1b56c5c2a_optimize(&(_26526_m.get()._field_Right));
	};
}



inline void _1a3d707c1_traitSub(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539a1b2_TraitSubIdentExprModel> _27327_m) {
	static__1b56c5c2a_optimize(&(_27327_m.get()._field_Expr));
}



inline void _1a3d87178_structureSub(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539a998_StructSubIdentExprModel> _27731_m) {
	static__1b56c5c2a_optimize(&(_27731_m.get()._field_Expr.get()._field_Model));
}



inline void _1a3d8cb73_commonSub(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539ba54_CommonSubIdentExprModel> _28128_m) {
	static__1b56c5c2a_optimize(&(_28128_m.get()._field_Expr));
}



inline void _1a3d97ed0_tuple(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539bd51_TupleExprModel> _28524_m) {
	{
		auto expr = &(_28524_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b5c388:;
		if (it != expr_end) {
			jule::Ptr<_1a5466305_Data> _28621_d = *it;
			{
				static__1b56c5c2a_optimize(&(_28621_d.get()._field_Model));
			}
			_iter_next_1a8b5c388:;
			++it;
			goto _iter_begin_1a8b5c388;
		}
		_iter_end_1a8b5c388:;
	};
}



inline void _1a3d9de09_newCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel> _29126_m) {
	if ((_29126_m.get()._field_Init != nullptr)) {
		static__1b56c5c2a_optimize(&(_29126_m.get()._field_Init));
	};
}



inline void _1a3e2c2d9_outCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539c22a_BuiltinOutCallExprModel> _29726_m) {
	static__1b56c5c2a_optimize(&(_29726_m.get()._field_Expr));
}



inline void _1ce56a91e_outlnCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel> _30128_m) {
	static__1b56c5c2a_optimize(&(_30128_m.get()._field_Expr));
}



inline void _1ce5b6b02_panicCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539d209_BuiltinPanicCallExprModel> _30528_m) {
	static__1b56c5c2a_optimize(&(_30528_m.get()._field_Expr));
}



inline void _1b5611957_assertCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel> _30929_m) {
	static__1b56c5c2a_optimize(&(_30929_m.get()._field_Expr));
}



inline void _1b5629695_errorCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel> _31328_m) {
	static__1b56c5c2a_optimize(&(_31328_m.get()._field_Err.get()._field_Model));
}



inline void _1b562a7b7_makeCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel> _31727_m) {
	if ((_31727_m.get()._field_Len != nullptr)) {
		static__1b56c5c2a_optimize(&(_31727_m.get()._field_Len));
	};
	if ((_31727_m.get()._field_Cap != nullptr)) {
		static__1b56c5c2a_optimize(&(_31727_m.get()._field_Cap));
	};
}



inline void _1b562cb3d_appendCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539e051_BuiltinAppendCallExprModel> _32629_m) {
	static__1b56c5c2a_optimize(&(_32629_m.get()._field_Dest));
	static__1b56c5c2a_optimize(&(_32629_m.get()._field_Elements));
}



inline void _1b562d853_lenCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539e370_BuiltinLenCallExprModel> _33126_m) {
	static__1b56c5c2a_optimize(&(_33126_m.get()._field_Expr.get()._field_Model));
}



inline void _1b5646c67_capCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539e68e_BuiltinCapCallExprModel> _33526_m) {
	static__1b56c5c2a_optimize(&(_33526_m.get()._field_Expr.get()._field_Model));
}



inline void _1b565cd27_cloneCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539c934_BuiltinCloneCallExprModel> _33928_m) {
	static__1b56c5c2a_optimize(&(_33928_m.get()._field_Expr));
}



inline void _1a3c3e041_deleteCall(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel> _34329_m) {
	static__1b56c5c2a_optimize(&(_34329_m.get()._field_Dest.get()._field_Model));
	if ((_34329_m.get()._field_Key != nullptr)) {
		static__1b56c5c2a_optimize(&(_34329_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1a3c4904b_sizeof(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53a088d_SizeofExprModel> _35025_m) {
	static__1b56c5c2a_optimize(&(_35025_m.get()._field_Expr));
}



inline void _1a3c580c1_alignof(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53a0b79_AlignofExprModel> _35426_m) {
	static__1b56c5c2a_optimize(&(_35426_m.get()._field_Expr));
}



inline void _1a3c84163_integratedToStr(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53a1273_IntegratedToStrExprModel> _35834_m) {
	static__1b56c5c2a_optimize(&(_35834_m.get()._field_Expr));
}



inline void _1a3d3b979_free(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53a1927_FreeExprModel> _36223_m) {
	static__1b56c5c2a_optimize(&(_36223_m.get()._field_Expr));
}



inline void _1ce587ce3_backendEmit(_1a3e43520_exprOptimizer* _self_, jule::Ptr<_1a53a163b_BackendEmitExprModel> _36630_m) {
	_1a3ce1566_args(_self_, &(_36630_m.get()._field_Exprs));
}



inline void _1b56a3884_do(_1a3e43520_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a8b666a0:;
			{
				_1a3c71b45_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53962ac_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a8b6699c:;
			{
				_1a3c94393_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5396664_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a8b66a13:;
			{
				_1a3ca5849_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5396e17_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a8b66a79:;
			{
				_1a3cbd0d1_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5397225_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8b66ae0:;
			{
				_1a3cd7183_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5397775_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8b66b67:;
			{
				_1a3ced4c9_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a8b66bde:;
			{
				_1a3d1ee79_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53984ce_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a8b66c66:;
			{
				_1a3d25a2e_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539b207_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a8b66cdd:;
			{
				_1a3d26e2b_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5398952_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a8b66d65:;
			{
				_1a3d46cb4_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5398d09_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a8b66ddc:;
			{
				_1a3d61790_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5399634_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a8b66e64:;
			{
				_1a3d6ccc9_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a5399b73_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a8b66edb:;
			{
				_1a3d707c1_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539a1b2_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a8b67063:;
			{
				_1a3d87178_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a8b670da:;
			{
				_1a3d8cb73_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539ba54_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8b67162:;
			{
				_1a3d97ed0_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a8b671d9:;
			{
				_1a3e2c2d9_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539c22a_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a8b67261:;
			{
				_1ce56a91e_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539c615_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a8b672d8:;
			{
				_1a3d9de09_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539cd1e_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a8b67360:;
			{
				_1ce5b6b02_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539d209_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a8b673d7:;
			{
				_1b5611957_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539d6b0_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8b6745e:;
			{
				_1b5629695_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53a0591_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a8b674d6:;
			{
				_1b562a7b7_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539db66_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a8b6755d:;
			{
				_1b562cb3d_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539e051_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a8b675d5:;
			{
				_1b562d853_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539e370_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a8b6765c:;
			{
				_1b5646c67_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539e68e_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a8b676d4:;
			{
				_1b565cd27_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539c934_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a8b6775b:;
			{
				_1a3c3e041_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a539ed43_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a8b677d3:;
			{
				_1a3c4904b_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53a088d_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a8b6785a:;
			{
				_1a3c580c1_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53a0b79_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a8b678d2:;
			{
				_1a3c84163_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53a1273_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a8b67959:;
			{
				_1a3d3b979_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53a1927_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8b679d1:;
			{
				_1ce587ce3_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1a53a163b_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1a8b6664a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a3e43520_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a4dacbc5_Optimizer> static__1a5ca4093_New(jule::Ptr<_1a4ce7615_IR>* _2524_ir) {
	return jule::new_ptr<_1a4dacbc5_Optimizer>(_1a4dacbc5_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1a5cb2513_optimizeGlobal(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a5418939_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_CppLinked))) {
		static__1b56c5c2a_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1a5ce15ca_optimizeFunction(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a53a44c9_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b7e80b:;
		if (it != expr_end) {
			jule::Ptr<_1a53a717a_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1a3e43333_scopeOptimizer> _4221_so = static__1ce2988d3_new(_4121_ins.get()._field_Scope);;
				_1b55bcdca_optimize(_4221_so.ptr());
			}
			_iter_next_1a8b7e80b:;
			++it;
			goto _iter_begin_1a8b7e80b;
		}
		_iter_end_1a8b7e80b:;
	};
}



inline void _1a5d00dae_optimizeStruct(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a487d19b_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_CppLinked) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b80cd5:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b814cd:;
					if (it != expr_end) {
						jule::Ptr<_1a487d388_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1b56c5c2a_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1a8b814cd:;
						++it;
						goto _iter_begin_1a8b814cd;
					}
					_iter_end_1a8b814cd:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b82006:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _5725_m = *it;
						{
							_1a5ce15ca_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1a8b82006:;
						++it;
						goto _iter_begin_1a8b82006;
					}
					_iter_end_1a8b82006:;
				};
			}
			_iter_next_1a8b80cd5:;
			++it;
			goto _iter_begin_1a8b80cd5;
		}
		_iter_end_1a8b80cd5:;
	};
}



inline void _1a5d090b5_optimizeGlobals(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a53e574b_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b828db:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b835ce:;
					if (it != expr_end) {
						jule::Ptr<_1a5418939_Var> _6525_v = *it;
						{
							_1a5cb2513_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1a8b835ce:;
						++it;
						goto _iter_begin_1a8b835ce;
					}
					_iter_end_1a8b835ce:;
				};
			}
			_iter_next_1a8b828db:;
			++it;
			goto _iter_begin_1a8b828db;
		}
		_iter_end_1a8b828db:;
	};
}



inline void _1a5d18d0b_optimizeFunctions(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a53e574b_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b83b62:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b84899:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _7325_func = *it;
						{
							_1a5ce15ca_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1a8b84899:;
						++it;
						goto _iter_begin_1a8b84899;
					}
					_iter_end_1a8b84899:;
				};
			}
			_iter_next_1a8b83b62:;
			++it;
			goto _iter_begin_1a8b83b62;
		}
		_iter_end_1a8b83b62:;
	};
}



inline void _1a5d1a549_optimizeStructs(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a53e574b_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b84e2c:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8b85b64:;
					if (it != expr_end) {
						jule::Ptr<_1a487d19b_Struct> _8125_s = *it;
						{
							_1a5d00dae_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1a8b85b64:;
						++it;
						goto _iter_begin_1a8b85b64;
					}
					_iter_end_1a8b85b64:;
				};
			}
			_iter_next_1a8b84e2c:;
			++it;
			goto _iter_begin_1a8b84e2c;
		}
		_iter_end_1a8b84e2c:;
	};
}



inline void _1a5cb5aaa_optimizePackage(_1a4dacbc5_Optimizer* _self_, jule::Ptr<_1a53e574b_Package>* _8739_p) {
	_1a5d090b5_optimizeGlobals(_self_, _8739_p);
	_1a5d18d0b_optimizeFunctions(_self_, _8739_p);
	_1a5d1a549_optimizeStructs(_self_, _8739_p);
}



inline void _1a5ce4413_Optimize(_1a4dacbc5_Optimizer* _self_) {
	_1a5d14620_detectEnabled();
	if (_1ce59423e_Deadcode) {
		_1a5d7c644_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1a5c86dbc_scopeEnabled || _1a5c86251_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8b87e0d:;
			if (it != expr_end) {
				jule::Ptr<_1a53e27e2_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_CppLinked))) {
						_1a5cb5aaa_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1a8b87e0d:;
				++it;
				goto _iter_begin_1a8b87e0d;
			}
			_iter_end_1a8b87e0d:;
		};
		_1a5cb5aaa_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1ce59423e_Deadcode) {
		_1a5d823e6_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a4dacbc5_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1a5d9bcc3_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1a5d9d06b_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1a5d9bcc3_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d9cd7e_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1a5d9e600_LogFlat(_1ceb4952a_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1a5d9e80e_LogError(_1ceb4952a_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1a5d9bcc3_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1a5382dd1_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1a5382dd1_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1ceac4dce_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1ceac4dce_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1a5382dd1_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1ceaa53cb_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1ceaa53cb_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1ceaa53cb_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1a5d9d06b_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1a5d9ea1d_Log(_1ceb4952a_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1a8b97978:;
			{
				static__1a5d9e600_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1a8b979de:;
			{
				static__1a5d9e80e_LogError(_6520_l);
			}
		}
		_match_end_1a8b97824:;
	};
}



inline void static__1a5d9ec2c_PrintLogs(jule::Slice<_1ceb4952a_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b98946:;
		if (it != expr_end) {
			_1ceb4952a_Log *_7616_l = it;
			{
				static__1a5d9ea1d_Log(_7616_l);
			}
			_iter_next_1a8b98946:;
			++it;
			goto _iter_begin_1a8b98946;
		}
		_iter_end_1a8b98946:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1a5382dd1_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d9e39c_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1a6633504_Unix(_1a663314c_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1a6635a89_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1a6635e1e_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a663314c_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a66337e0_Time static__1a6633b86_Unix(jule::U64 _9120_sec) {
	return _1a66337e0_Time{._field_sec=_9120_sec};;
}



inline _1a66337e0_Time static__1a6633d84_Now(void) {
	return static__1a6633b86_Unix(static_cast<jule::U64>(_1a663577b_unix()));;
}



inline jule::U64 _1a66342d5_Unix(_1a66337e0_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1a6634549_Day(_1a66337e0_Time* _self_) {
	return _1a66354c3_Abs(_self_)._field_Day;;
}



inline jule::U64 _1a66347ad_Month(_1a66337e0_Time* _self_) {
	return _1a66354c3_Abs(_self_)._field_Month;;
}



inline jule::U64 _1a6634a22_Year(_1a66337e0_Time* _self_) {
	return _1a66354c3_Abs(_self_)._field_Year;;
}



inline jule::U64 _1a6634c86_Second(_1a66337e0_Time* _self_) {
	return _1a66354c3_Abs(_self_)._field_Second;;
}



inline jule::U64 _1a6634eea_Minute(_1a66337e0_Time* _self_) {
	return _1a66354c3_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1a663525e_Hour(_1a66337e0_Time* _self_) {
	return _1a66354c3_Abs(_self_)._field_Hour;;
}



inline _1a663314c_AbsTime _1a66354c3_Abs(_1a66337e0_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a66326ce_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1a66326ce_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1a8bcd283:;
	}
	_iter_end_1a8bcd283:;;
	_1a663314c_AbsTime _17417_t = _1a663314c_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a66337e0_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ced54ea5_scopeCoder> static__1cec72db2_new(jule::Ptr<_1a663a60a_ObjectCoder>* _6124_oc) {
	return jule::new_ptr<_1ced54ea5_scopeCoder>(_1ced54ea5_scopeCoder{._field_oc=(*(_6124_oc))});;
}



inline void _1a8c6c2cd_iterHead(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c5c8c_RangeIter>* _6832_it, jule::Bool* _6844_ref, jule::Str* _6856_begin) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1ce297a47_Copy && _1a5734e64_isCopyOptimizable(&((*(_6832_it)).get()._field_Expr)))) {
		(*(_6844_ref))=true;
		{
			auto &_match_expr{ (*(_6832_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a8c6db70:;
				{
					jule::Ptr<_1a5418939_Var> _7721_v = (*(_6832_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
					if (_7721_v.get()._field_Reference) {
						_1a62c68c3_model(_self_.get()._field_oc.get()._field_ec, (*(_6832_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1a8c706bb;
					};
					goto _case_begin_1a8c70721;
				}
			}
			else {
				_case_begin_1a8c70721:;
				{
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a62c68c3_model(_self_.get()._field_oc.get()._field_ec, (*(_6832_it)).get()._field_Expr.get()._field_Model);
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1a8c706bb:;
		};
	} else {
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_6832_it)).get()._field_Expr.get()._field_Model);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_6844_ref))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_6844_ref))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, (*(_6856_begin)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
}



inline void _1ceced15c_rangeIndexIter(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c5c8c_RangeIter>* _11739_it) {
	jule::Str _11813_begin = static__1a62d0767_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11739_it)))));;
	jule::Str _11913_next = static__1a62d0ca6_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11739_it)))));;
	jule::Bool _12117_ref = false;;
	_1a8c6c2cd_iterHead(_self_, _11739_it, &(_12117_ref), &(_11813_begin));
	if (((*(_11739_it)).get()._field_KeyA != nullptr)) {
		_1a663ce9d_varInitExpr(_self_.get()._field_oc, &((*(_11739_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12117_ref) {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6614cdd_indent(_self_.get()._field_oc);
	};
	if (((*(_11739_it)).get()._field_KeyB != nullptr)) {
		(*(_11739_it)).get()._field_KeyB.get()._field_Reference=(_1ce297a47_Copy && _1a575ba7e_isIterCopyOptimizable(&((*(_11739_it)).get()._field_Expr), &((*(_11739_it)).get()._field_KeyB)));
		_1a663ce9d_varInitExpr(_self_.get()._field_oc, &((*(_11739_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_11739_it)).get()._field_KeyB.get()._field_Reference) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6614cdd_indent(_self_.get()._field_oc);
	};
	_1a5737e34_scope(_self_, (*(_11739_it)).get()._field_Scope);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, _11913_next);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a6614cdd_indent(_self_.get()._field_oc);
	if (((*(_11739_it)).get()._field_KeyA != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, static__1a62d04c0_var((*(_11739_it)).get()._field_KeyA));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a6614cdd_indent(_self_.get()._field_oc);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6305b88_write(_self_.get()._field_oc, _11813_begin);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0a0e_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11739_it))))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1cecee207_rangeHashmapIter(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c5c8c_RangeIter>* _18041_it) {
	jule::Str _18113_begin = static__1a62d0767_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18041_it)))));;
	jule::Str _18213_next = static__1a62d0ca6_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18041_it)))));;
	jule::Bool _18417_ref = false;;
	_1a8c6c2cd_iterHead(_self_, _18041_it, &(_18417_ref), &(_18113_begin));
	if (((*(_18041_it)).get()._field_KeyA != nullptr)) {
		_1a663ce9d_varInitExpr(_self_.get()._field_oc, &((*(_18041_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6614cdd_indent(_self_.get()._field_oc);
	};
	if (((*(_18041_it)).get()._field_KeyB != nullptr)) {
		_1a663ce9d_varInitExpr(_self_.get()._field_oc, &((*(_18041_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6614cdd_indent(_self_.get()._field_oc);
	};
	_1a5737e34_scope(_self_, (*(_18041_it)).get()._field_Scope);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, _18213_next);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6305b88_write(_self_.get()._field_oc, _18113_begin);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0a0e_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18041_it))))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a573127e_ifCase(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c44d8_If> _22330_i) {
	if ((_22330_i.get()._field_Expr != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22330_i.get()._field_Expr);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a5737e34_scope(_self_, _22330_i.get()._field_Scope);
}



inline void _1a5740007_conditional(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c4b48_Conditional> _23235_c) {
	jule::Bool _23317_writed = false;;
	{
		auto expr = &(_23235_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c935bd:;
		if (it != expr_end) {
			jule::Ptr<_1a53c44d8_If> _23421_elif = *it;
			{
				if ((_23421_elif == nullptr)) {
					goto _iter_next_1a8c935bd;
				};
				if (_23317_writed) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23317_writed=true;
				_1a573127e_ifCase(_self_, _23421_elif);
			}
			_iter_next_1a8c935bd:;
			++it;
			goto _iter_begin_1a8c935bd;
		}
		_iter_end_1a8c935bd:;
	};
	if ((_23235_c.get()._field_Default != nullptr)) {
		if (_23317_writed) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a5737e34_scope(_self_, _23235_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1a5742823_infIter(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c4e34_InfIter> _25231_it) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a5737e34_scope(_self_, _25231_it.get()._field_Scope);
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0ca6_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25231_it))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0a0e_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25231_it))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1cec861b1_whileIter(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c53a7_WhileIter> _26933_it) {
	if (((_26933_it.get()._field_Expr != nullptr) && (_26933_it.get()._field_Next == nullptr))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _26933_it.get()._field_Expr);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_26933_it.get()._field_Expr != nullptr)) {
			_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _26933_it.get()._field_Expr);
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_26933_it.get()._field_Next != nullptr)) {
			_1ced5ae12_st(_self_, _26933_it.get()._field_Next);
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a5737e34_scope(_self_, _26933_it.get()._field_Scope);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0ca6_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26933_it))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0a0e_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_26933_it))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1cec86a0d_rangeIter(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c5c8c_RangeIter> _30233_it) {
	{
		
		if ((_1a5495598_Slc(_30233_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ca3556:;
			{
				_1ceced15c_rangeIndexIter(_self_, &(_30233_it));
			}
		}
		else if ((_1a5495334_Arr(_30233_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ca3226:;
			{
				_1ceced15c_rangeIndexIter(_self_, &(_30233_it));
			}
		}
		else if ((_1a5496049_Map(_30233_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ca328c:;
			{
				_1cecee207_rangeHashmapIter(_self_, &(_30233_it));
			}
		}
		else {
			_case_begin_1a8ca31b0:;
			{
				_1ceced15c_rangeIndexIter(_self_, &(_30233_it));
			}
		}
		_match_end_1a8ca30e4:;
	};
}



inline void _1ceceb7ed_cont(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c6188_ContSt> _31524_c) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0ca6_iterNext(_31524_c.get()._field_It));
}



inline void _1ced14a69_label(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c682b_Label> _32025_l) {
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d104d_label(&(_32025_l.get()._field_Ident)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1ced1a278_gotoSt(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c6b17_GotoSt> _32526_gt) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d104d_label(&(_32526_gt.get()._field_Ident)));
}



inline void _1ced40e08_postfix(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c6ebe_Postfix> _33031_p) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33031_p.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a6305b88_write(_self_.get()._field_oc, _33031_p.get()._field_Op);
}



inline void _1ced41e09_assign(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c7442_Assign> _33730_a) {
	_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33730_a.get()._field_L.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, _33730_a.get()._field_Op.get()._field_Kind);
	_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33730_a.get()._field_R.get()._field_Model);
}



inline void _1a5726b59_mapLookupAssign(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c77e9_MultiAssign>* _34340_a) {
	jule::Ptr<_1a5398952_IndexingExprModel> _34417_iem = (*(_34340_a)).get()._field_R.cast_ptr<_1a5398952_IndexingExprModel>(&__jule_any_type45);;
	_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34417_iem.get()._field_Expr.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34417_iem.get()._field_Index.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34340_a)).get()._field_L[0LL] != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34340_a)).get()._field_L[0LL].get()._field_Model);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34340_a)).get()._field_L[1LL] != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34340_a)).get()._field_L[1LL].get()._field_Model);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1cec4e72e_multiAssignTup(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c77e9_MultiAssign>* _36639_a) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a661126d_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1a539bd51_TupleExprModel> _37017_tup = (*(_36639_a)).get()._field_R.cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_37017_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cb392e:;
		if (it != expr_end) {
			jule::I64 _37214_i = it - expr->begin();
			jule::Ptr<_1a5466305_Data> _37221_r = *it;
			{
				_1a6614cdd_indent(_self_.get()._field_oc);
				jule::Ptr<_1a5466305_Data> _37421_l = (*(_36639_a)).get()._field_L[_37214_i];;
				if ((_37421_l != nullptr)) {
					{
						auto &_match_expr{ _37421_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a8cb62e4:;
							{
								jule::Ptr<_1a5418939_Var> _37829_v = _37421_l.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
								if ((_37829_v.get()._field_Reference && (!(_1a5418d02_IsInitialized(_37829_v.ptr()))))) {
									_1a6305b88_write(_self_.get()._field_oc, static__1a62d04c0_var(_37829_v));
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37221_r.get()._field_Model);
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36639_a)).get()._field_L[_37214_i]=nullptr;
									goto _iter_next_1a8cb392e;
								};
							}
						}
						_match_end_1a8cb628e:;
					};
					_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37421_l.get()._field_Kind));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a6305b88_write(_self_.get()._field_oc, static__1a62cd9c9_toOut(&(_1ced532e4_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37214_i))));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37221_r.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a8cb392e:;
			++it;
			_37214_i++;
			goto _iter_begin_1a8cb392e;
		}
		_iter_end_1a8cb392e:;
	};
	{
		auto expr = &((*(_36639_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cbac99:;
		if (it != expr_end) {
			jule::I64 _39914_i = it - expr->begin();
			jule::Ptr<_1a5466305_Data> _39921_l = *it;
			{
				if ((_39921_l == nullptr)) {
					goto _iter_next_1a8cbac99;
				};
				_1a6614cdd_indent(_self_.get()._field_oc);
				_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _39921_l.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a6305b88_write(_self_.get()._field_oc, static__1a62cd9c9_toOut(&(_1ced532e4_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_39914_i))));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a8cbac99:;
			++it;
			_39914_i++;
			goto _iter_begin_1a8cbac99;
		}
		_iter_end_1a8cbac99:;
	};
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ced01a34_multiAssignFn(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c77e9_MultiAssign>* _41538_a) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	jule::Ptr<_1a5398127_FnCallExprModel> _42017_f = (*(_41538_a)).get()._field_R.cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34);;
	_1a664b72b_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42017_f.get()._field_Func.get()._field_Result));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41538_a)).get()._field_R);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41538_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cc219b:;
		if (it != expr_end) {
			jule::I64 _42614_i = it - expr->begin();
			jule::Ptr<_1a5466305_Data> _42621_l = *it;
			{
				if ((_42621_l != nullptr)) {
					_1a6614cdd_indent(_self_.get()._field_oc);
					_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42621_l.get()._field_Model);
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_42614_i));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1a8cc219b:;
			++it;
			_42614_i++;
			goto _iter_begin_1a8cc219b;
		}
		_iter_end_1a8cc219b:;
	};
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1ced11390_multiAssign(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c77e9_MultiAssign> _44135_a) {
	{
		auto &_match_expr{ _44135_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a8cc591e:;
			{
				_1a5726b59_mapLookupAssign(_self_, &(_44135_a));
				return;;
			}
		}
		_match_end_1a8cc5710:;
	};
	{
		auto &_match_expr{ _44135_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8cc5644:;
			{
				_1cec4e72e_multiAssignTup(_self_, &(_44135_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8cc6788:;
			{
				_1ced01a34_multiAssignFn(_self_, &(_44135_a));
			}
		}
		else {
			_case_begin_1a8cc5ca4:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:455:13"));;
			}
		}
		_match_end_1a8cc63ae:;
	};
}



inline jule::Fn<void(void)> _1a5729b6d_matchExpr(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c7d38_Match> _45933_m) {
	if ((!(_1a5466bb8_IsConst(_45933_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1a538e140_IsBool(_45933_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1a538bc97_ReadBool(_45933_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _45933_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a573a695_case(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c7d38_Match> _46928_m, jule::Ptr<_1a53c8883_Case> _46943_c) {
	if (((_46943_c.get()._field_Exprs.len() != 0LL) && (!(_1a53c8344_IsGenericTypeMatch(_46928_m.ptr()))))) {
		if (((_46928_m.get()._field_Cases.len() > 0LL) && (_46928_m.get()._field_Cases[0LL] == _46943_c))) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_46943_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8ccbc00:;
			if (it != expr_end) {
				jule::I64 _47618_i = it - expr->begin();
				jule::Ptr<_1a5466305_Data> _47625_expr = *it;
				{
					{
						
						if ((!(_46928_m.get()._field_TypeMatch))) {
							_case_begin_1a8cd309c:;
							{
								jule::Fn<void(void)> _47925_caseExpr = _1a5729b6d_matchExpr(_self_, _46928_m);;
								if (_1a5466ec6_GoodOperand(_46928_m.get()._field_Expr.ptr(), &(_47625_expr))) {
									if ((_47925_caseExpr != nullptr)) {
										_47925_caseExpr();
										_1a6305b88_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47625_expr.get()._field_Model);
								} else {
									_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47625_expr.get()._field_Model);
									if ((_47925_caseExpr != nullptr)) {
										_1a6305b88_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_47925_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1a8ccce32:;
							{
								_1a6305b88_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1a5492287_TypeKind> _49529_tk = _47625_expr.get()._field_Model.cast_ptr<_1a5492287_TypeKind>(&__jule_any_type90);;
								if ((_1a5495cd5_Trait(_46928_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1cec8e87e_boolean(_self_.get()._field_oc.get()._field_ec, (_1a5494883_Sptr(_47625_expr.get()._field_Kind.ptr()) != nullptr));
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(static_cast<jule::I64>(_1a62d6020_findTypeOffset(_self_.get()._field_oc.ptr(), _1a5495cd5_Trait(_46928_m.get()._field_Expr.get()._field_Kind.ptr()), _47625_expr.get()._field_Kind))));
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50329_j = _1a630a286_pushAnyType(_self_.get()._field_oc, &(_49529_tk));;
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_50329_j));
								};
							}
						}
						_match_end_1a8cccd66:;
					};
					if (((_46943_c.get()._field_Exprs.len() - _47618_i) > 1LL)) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1a8ccbc00:;
				++it;
				_47618_i++;
				goto _iter_begin_1a8ccbc00;
			}
			_iter_end_1a8ccbc00:;
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_46928_m.get()._field_Default == _46943_c) && (_46928_m.get()._field_Cases.len() != 0LL))) {
		_1a6614cdd_indent(_self_.get()._field_oc);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d158c_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_46943_c))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_46943_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1a6614cdd_indent(_self_.get()._field_oc);
		_1a5737e34_scope(_self_, _46943_c.get()._field_Scope);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1cec752e3_matchSt(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c7d38_Match> _53731_m) {
	if (((_53731_m.get()._field_Cases.len() == 0LL) && (_53731_m.get()._field_Default == nullptr))) {
		return;;
	};
	jule::Bool _54213_genericTypeMatch = _1a53c8344_IsGenericTypeMatch(_53731_m.ptr());;
	if ((_54213_genericTypeMatch && ((_53731_m.get()._field_Default == nullptr) || (_53731_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	if (((!(_54213_genericTypeMatch)) && (!(_1a5466bb8_IsConst(_53731_m.get()._field_Expr.ptr()))))) {
		if ((_1ce297a47_Copy && _1a5734e64_isCopyOptimizable(&(_53731_m.get()._field_Expr)))) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _53731_m.get()._field_Expr.get()._field_Model);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a6614cdd_indent(_self_.get()._field_oc);
	};
	if ((_53731_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_53731_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a859d082:;
			if (it != expr_end) {
				jule::Ptr<_1a53c8883_Case> _56625_c = *it;
				{
					if ((_56625_c == nullptr)) {
						goto _iter_next_1a859d082;
					};
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a6614cdd_indent(_self_.get()._field_oc);
					_1a573a695_case(_self_, _53731_m, _56625_c);
				}
				_iter_next_1a859d082:;
				++it;
				goto _iter_begin_1a859d082;
			}
			_iter_end_1a859d082:;
		};
	};
	if ((_53731_m.get()._field_Default != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a573a695_case(_self_, _53731_m, _53731_m.get()._field_Default);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d12e5_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53731_m))));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1cecd5441_fallSt(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c8e38_FallSt> _59326_f) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d158c_caseBegin(_59326_f.get()._field_DestCase));
}



inline void _1ced08a5d_breakSt(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c6540_BreakSt> _59827_b) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_59827_b.get()._field_It != 0LLU)) {
		_1a6305b88_write(_self_.get()._field_oc, static__1a62d0a0e_iterEnd(_59827_b.get()._field_It));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, static__1a62d12e5_matchEnd(_59827_b.get()._field_Mtch));
	};
}



inline void _1a574aa29_setResult(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c92ac_RetSt> _60733_r) {
	if ((_60733_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _60733_r.get()._field_Expr);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1a6614cdd_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1a5466305_Data>> _61517_datas = _60733_r.get()._field_Expr.cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_61517_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85a8158:;
		if (it != expr_end) {
			jule::I64 _61613_i = it - expr->begin();
			jule::Ptr<_1a5466305_Data> _61616_data = *it;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_61613_i));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61616_data.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a6614cdd_indent(_self_.get()._field_oc);
			}
			_iter_next_1a85a8158:;
			++it;
			_61613_i++;
			goto _iter_begin_1a85a8158;
		}
		_iter_end_1a85a8158:;
	};
}



inline void _1cec639b8_retSt(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c92ac_RetSt> _62629_r) {
	if (_1a53a493b_IsVoid(_62629_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62629_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62629_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62629_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62629_r.get()._field_Func.get()._field_Result));
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62629_r.get()._field_Expr);
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1a572753e_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62629_r.get()._field_Expr);
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62629_r.get()._field_Expr != nullptr)) {
		_1a574aa29_setResult(_self_, _62629_r);
	};
	if (_62629_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a664b72b_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62629_r.get()._field_Func.get()._field_Result));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1cec7b140_var(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a5418939_Var> _66227_v) {
	if ((!(_66227_v.get()._field_Constant))) {
		_1a663d0d0_var(_self_.get()._field_oc, _66227_v);
	};
}



inline void _1ced5ae12_st(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Any _66926_st) {
	if ((_66926_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _66926_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a85b4939:;
			{
				_1a5737e34_scope(_self_, _66926_st.cast_ptr<_1a53c40dc_Scope>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a85b45d7:;
			{
				_1cec7b140_var(_self_, _66926_st.cast_ptr<_1a5418939_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a85b5000:;
			{
				_1a62c68c3_model(_self_.get()._field_oc.get()._field_ec, _66926_st.cast_ptr<_1a5466305_Data>(&__jule_any_type23).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a85b5066:;
			{
				_1a5740007_conditional(_self_, _66926_st.cast_ptr<_1a53c4b48_Conditional>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a85b50cc:;
			{
				_1a5742823_infIter(_self_, _66926_st.cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a85b5143:;
			{
				_1cec861b1_whileIter(_self_, _66926_st.cast_ptr<_1a53c53a7_WhileIter>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a85b51a9:;
			{
				_1cec86a0d_rangeIter(_self_, _66926_st.cast_ptr<_1a53c5c8c_RangeIter>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a85b5220:;
			{
				_1ceceb7ed_cont(_self_, _66926_st.cast_ptr<_1a53c6188_ContSt>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a85b5286:;
			{
				_1ced14a69_label(_self_, _66926_st.cast_ptr<_1a53c682b_Label>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a85b530d:;
			{
				_1ced1a278_gotoSt(_self_, _66926_st.cast_ptr<_1a53c6b17_GotoSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a85b5385:;
			{
				_1ced40e08_postfix(_self_, _66926_st.cast_ptr<_1a53c6ebe_Postfix>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a85b540c:;
			{
				_1ced41e09_assign(_self_, _66926_st.cast_ptr<_1a53c7442_Assign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a85b5484:;
			{
				_1ced11390_multiAssign(_self_, _66926_st.cast_ptr<_1a53c77e9_MultiAssign>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a85b550b:;
			{
				_1cec752e3_matchSt(_self_, _66926_st.cast_ptr<_1a53c7d38_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a85b5583:;
			{
				_1cecd5441_fallSt(_self_, _66926_st.cast_ptr<_1a53c8e38_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a85b560a:;
			{
				_1ced08a5d_breakSt(_self_, _66926_st.cast_ptr<_1a53c6540_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a85b5682:;
			{
				_1cec639b8_retSt(_self_, _66926_st.cast_ptr<_1a53c92ac_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1a85b5709:;
			{
				_1a62c485a_pushToSlice(_self_.get()._field_oc.get()._field_ec, _66926_st.cast_ptr<_1a3c3d914_PushToSliceExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1a85b5781:;
			{
				_1a62c63c8_mutSlicing(_self_.get()._field_oc.get()._field_ec, _66926_st.cast_ptr<_1b56cd727_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1a85b5808:;
			{
				_1a62c664d_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _66926_st.cast_ptr<_1b56cd914_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_1a85b43b7:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1a85b4362:;
	};
}



inline void _1a5729024_scopeStmts(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c40dc_Scope>* _71935_s) {
	{
		auto expr = &((*(_71935_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85c078b:;
		if (it != expr_end) {
			jule::Any _72021_st = *it;
			{
				_1a6614cdd_indent(_self_.get()._field_oc);
				_1ced5ae12_st(_self_, _72021_st);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a85c078b:;
			++it;
			goto _iter_begin_1a85c078b;
		}
		_iter_end_1a85c078b:;
	};
}



inline void _1a5737e34_scope(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53c40dc_Scope> _72829_s) {
	_1a661126d_addIndent(_self_.get()._field_oc);
	if (_72829_s.get()._field_Deferred) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a5729024_scopeStmts(_self_, &(_72829_s));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_72829_s.get()._field_Deferred) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1cececd3d_funcScope(jule::Ptr<_1ced54ea5_scopeCoder> _self_, jule::Ptr<_1a53a717a_FnIns> _74433_f) {
	if ((_74433_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a661126d_addIndent(_self_.get()._field_oc);
	if ((!(_1a53a493b_IsVoid(_74433_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1a549bc53_Tuple> _75121_tup = _1a54962ad_Tup(_74433_f.get()._field_Result.ptr());;
		if ((_75121_tup != nullptr)) {
			_1a6614cdd_indent(_self_.get()._field_oc);
			_1a664b0dd_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _75121_tup);
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_75121_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a85c6880:;
				if (it != expr_end) {
					jule::I64 _75622_i = it - expr->begin();
					jule::Ptr<_1a5492287_TypeKind> _75629_t = *it;
					{
						if (_1a664da19_shouldInitialized(&(_75629_t))) {
							_1a6614cdd_indent(_self_.get()._field_oc);
							_1a6305b88_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_75622_i));
							_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1a62c6b48_initExpr(_self_.get()._field_oc.get()._field_ec, _75629_t);
							_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1a85c6880:;
					++it;
					_75622_i++;
					goto _iter_begin_1a85c6880;
				}
				_iter_end_1a85c6880:;
			};
		} else if ((_74433_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1a6614cdd_indent(_self_.get()._field_oc);
			_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _74433_f.get()._field_Result));
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1a664da19_shouldInitialized(&(_74433_f.get()._field_Result))) {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a62c6b48_initExpr(_self_.get()._field_oc.get()._field_ec, _74433_f.get()._field_Result);
			};
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1a5729024_scopeStmts(_self_, &(_74433_f.get()._field_Scope));
	if ((_74433_f.get()._field_Decl.get()._field_Exceptional && _1a53a493b_IsVoid(_74433_f.get()._field_Decl.ptr()))) {
		_1a6614cdd_indent(_self_.get()._field_oc);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1ced54ea5_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cec7eb5a_exprCoder> static__1ced52964_new(jule::Ptr<_1a663a60a_ObjectCoder>* _10424_oc) {
	return jule::new_ptr<_1cec7eb5a_exprCoder>(_1cec7eb5a_exprCoder{._field_oc=(*(_10424_oc))});;
}



inline void _1ced52a96_string(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5389ec6_Const>* _11027_c) {
	jule::Str _11113_content = _1a538c00b_ReadStr((*(_11027_c)).ptr());;
	if ((_11113_content.len() == 0LL)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _11613_bytes = static_cast<jule::Slice<jule::U8>>(_11113_content);;
	jule::Str _11713_len = _1a5382b39_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11613_bytes.len())), 10LL);;
	jule::Str _11813_lit = _1a62c784c_cstrLit(_11613_bytes);;
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a6305b88_write(_self_.get()._field_oc, _11813_lit);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a6305b88_write(_self_.get()._field_oc, _11713_len);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1cec8e87e_boolean(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Bool _12727_b) {
	if (_12727_b) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1cec8e9b1_nilLit(jule::Ptr<_1cec7eb5a_exprCoder> _self_) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1ced1c852_ftoaSpecialCases(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::F64* _13937_x) {
	{
		
		if (_1a534d495_IsNaN((*(_13937_x)))) {
			_case_begin_1a85ea497:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1a534d709_IsInf((*(_13937_x)), 1LL)) {
			_case_begin_1a85e9cc1:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1a534d709_IsInf((*(_13937_x)), -1LL)) {
			_case_begin_1a85e9d37:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1a85e9c5a:;
			{
				return false;;
			}
		}
		_match_end_1a85e9b8e:;
	};
	return true;;
}



inline void _1ced1c984_float32(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5389ec6_Const>* _15328_c) {
	jule::F64 _15413_x = _1a538c9ac_AsF64((*(_15328_c)).ptr());;
	if (_1ced1c852_ftoaSpecialCases(_self_, &(_15413_x))) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a85ecc91:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a85ec9a5:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1a85ec93e:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a62c7b5a_ftoa(_15413_x, 32LL));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1a85ec81d:;
	};
}



inline void _1ced1cab6_float64(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5389ec6_Const>* _17228_c) {
	jule::F64 _17313_x = _1a538c9ac_AsF64((*(_17228_c)).ptr());;
	if (_1ced1c852_ftoaSpecialCases(_self_, &(_17313_x))) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1a8600b95:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1a860137c:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1a8600843:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a62c7b5a_ftoa(_17313_x, 64LL));
			}
		}
		_match_end_1a8600722:;
	};
}



inline void _1a57260a9_constant(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5389ec6_Const> _19032_c) {
	{
		
		if (_1a538e3a4_IsStr(_19032_c.ptr())) {
			_case_begin_1a86028cd:;
			{
				_1ced52a96_string(_self_, &(_19032_c));
			}
		}
		else if (_1a538e140_IsBool(_19032_c.ptr())) {
			_case_begin_1a8602944:;
			{
				_1cec8e87e_boolean(_self_, _1a538bc97_ReadBool(_19032_c.ptr()));
			}
		}
		else if (_1a538e618_IsF64(_19032_c.ptr())) {
			_case_begin_1a86029aa:;
			{
				{
					
					if ((_19032_c.get()._field_Kind == jule::Str("f32", 3))) {
						_case_begin_1a8604c87:;
						{
							_1ced1c984_float32(_self_, &(_19032_c));
						}
					}
					else {
						_case_begin_1a86048e1:;
						{
							_1ced1cab6_float64(_self_, &(_19032_c));
						}
					}
					_match_end_1a8604825:;
				};
			}
		}
		else if (_1a538db67_IsI64(_19032_c.ptr())) {
			_case_begin_1a8602a21:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a62c7e02_itoa(static_cast<jule::I64>(_1a538b7be_ReadI64(_19032_c.ptr()))));
			}
		}
		else if (_1a538ddcb_IsU64(_19032_c.ptr())) {
			_case_begin_1a860334b:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a62c8199_utoa(static_cast<jule::U64>(_1a538ba33_ReadU64(_19032_c.ptr()))));
			}
		}
		else if (_1a538e87c_IsNil(_19032_c.ptr())) {
			_case_begin_1a86033b2:;
			{
				_1cec8e9b1_nilLit(_self_);
			}
		}
		else {
			_case_begin_1a8602867:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1a860279b:;
	};
}



inline void _1a57261db_divByZeroBinary(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1ceee8973_Token>* _21436_op, jule::Ptr<_1a5395ce5_OperandExprModel>* _21453_l, jule::Ptr<_1a5395ce5_OperandExprModel>* _21480_r) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21436_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1a86080a9:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1a8608131:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1a8608043:;
	};
	if ((!(_1e7712174_Production))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a663ac04_locInfo(_self_.get()._field_oc, _21436_op);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a572753e_possibleRefExpr(_self_, (*(_21453_l)).get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a572753e_possibleRefExpr(_self_, (*(_21480_r)).get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a572631d_unsafeBinary(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53962ac_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("==", 2)) || (_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2)))) {
		if (_1a62c8ce3_isAny(&(_23636_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1a54931bc_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1a62c8ce3_isAny(&(_23636_m.get()._field_Right.get()._field_Kind)))))) {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Kind == jule::Str("!=", 2))) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _1a630a286_pushAnyType(_self_.get()._field_oc, &(_23636_m.get()._field_Right.get()._field_Kind));;
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_24625_i));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1a572753e_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a572753e_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a572753e_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a6305b88_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a572753e_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a5726450_binary(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53962ac_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1a86147ad:;
			{
				if ((_1a5495a71_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1a57261db_divByZeroBinary(_self_, &(_26730_m.get()._field_Op), &(_26730_m.get()._field_Left), &(_26730_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1a8614736:;
	};
	_1a572631d_unsafeBinary(_self_, _26730_m);
}



inline void _1a5726e34_var(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5418939_Var> _27927_m) {
	if (_27927_m.get()._field_CppLinked) {
		jule::Ptr<_1a3c1d0ec_Directive> _28117_d = _1a664d3dc_findDirective(&(_27927_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1a6305b88_write(_self_.get()._field_oc, _1a66404ab_concatAllParts(_28117_d.get()._field_Args));
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d04c0_var(_27927_m));
}



inline void _1a5727066_structureIns(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a487d575_StructIns> _29036_m) {
	_1a6305b88_write(_self_.get()._field_oc, _1a6645538_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _1a5727198_unary(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5396664_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1a86193b7:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a572753e_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1a861943e:;
			{
				if ((_1e7712174_Production || (_1a5494883_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1a861932e;
				};
				_1a572753e_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a663ac04_locInfo(_self_.get()._field_oc, &(_29429_m.get()._field_Op));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1a861932e:;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a6305b88_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a572753e_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a57272ca_structureLit(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5396e17_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a6305b88_write(_self_.get()._field_oc, static__1a62cee81_structureIns(&(_31836_m.get()._field_Strct)));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_CppLinked) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_31836_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8621743:;
			if (it != expr_end) {
				jule::I64 _33117_i = it - expr->begin();
				jule::Ptr<_1a487d388_FieldIns> _33120_f = *it;
				{
					{
						auto expr = &(_31836_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a862227c:;
						if (it != expr_end) {
							jule::Ptr<_1a5396a60_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a6305b88_write(_self_.get()._field_oc, static__1a62d0228_field(&(_33229_arg.get()._field_Field.get()._field_Decl)));
									_1a6305b88_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a572753e_possibleRefExpr(_self_, _33229_arg.get()._field_Expr);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1a8621743;
								};
							}
							_iter_next_1a862227c:;
							++it;
							goto _iter_begin_1a862227c;
						}
						_iter_end_1a862227c:;
					};
				}
				_iter_next_1a8621743:;
				++it;
				_33117_i++;
				goto _iter_begin_1a8621743;
			}
			_iter_end_1a8621743:;
		};
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a572740c_allocStructure(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5397225_AllocStructLitExprModel> _34938_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a6305b88_write(_self_.get()._field_oc, static__1a62cee81_structureIns(&(_34938_m.get()._field_Lit.get()._field_Strct)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a57272ca_structureLit(_self_, _34938_m.get()._field_Lit);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a572753e_possibleRefExpr(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Any _35735_expr) {
	{
		auto &_match_expr{ _35735_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8627a35:;
			{
				jule::Ptr<_1a5418939_Var> _36017_v = _35735_expr.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
				if (_36017_v.get()._field_Reference) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1a62c68c3_model(_self_, _35735_expr);
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1a8627936:;
	};
	_1a62c68c3_model(_self_, _35735_expr);
}



inline void _1a5727671_casting(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5397775_CastingExprModel> _37131_m) {
	{
		
		if (_1a62c8ce3_isAny(&(_37131_m.get()._field_Kind))) {
			_case_begin_1a8629cac:;
			{
				if (_1a54931bc_IsNil(_37131_m.get()._field_ExprKind.ptr())) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1a54950c0_TypeEnum(_37131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
					return;;
				};
				jule::I64 _38217_i = _1a630a286_pushAnyType(_self_.get()._field_oc, &(_37131_m.get()._field_ExprKind));;
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _37131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1a862d662:;
						{
							jule::Ptr<_1a5496ed4_Prim> _38621_prim = _1a549461e_Prim(_37131_m.get()._field_ExprKind.ptr());;
							if (((_38621_prim != nullptr) && _1a5389404_IsInt(_38621_prim.get()._field_Kind))) {
								_1a6305b88_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1a6305b88_write(_self_.get()._field_oc, _1a6642766_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _38621_prim));
								_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
								_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1a862e542;
							};
							goto _case_begin_1a862e597;
						}
					}
					else {
						_case_begin_1a862e597:;
						{
							_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
						}
					}
					_match_end_1a862e542:;
				};
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_38217_i));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a5494ae7_Ptr(_37131_m.get()._field_ExprKind.ptr()) != nullptr) || (_1a5494ae7_Ptr(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8629d23:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("))", 2));
			}
		}
		else if (_1a62c8ce3_isAny(&(_37131_m.get()._field_ExprKind))) {
			_case_begin_1a8629d89:;
			{
				_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1a5494883_Sptr(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1a5494883_Sptr(_37131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				};
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1e7712174_Production))) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a663ac04_locInfo(_self_.get()._field_oc, &(_37131_m.get()._field_Token));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(static_cast<jule::I64>(_1a630a286_pushAnyType(_self_.get()._field_oc, &(_37131_m.get()._field_Kind)))));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a5495cd5_Trait(_37131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a8629e00:;
			{
				_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1a5494883_Sptr(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1a5494883_Sptr(_37131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				};
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1e7712174_Production))) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a663ac04_locInfo(_self_.get()._field_oc, &(_37131_m.get()._field_Token));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(static_cast<jule::I64>(_1a62d6020_findTypeOffset(_self_.get()._field_oc.ptr(), _1a5495cd5_Trait(_37131_m.get()._field_ExprKind.ptr()), _37131_m.get()._field_Kind))));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else if ((_1a5495cd5_Trait(_37131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a862bce2:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(static_cast<jule::I64>(_1a62d6020_findTypeOffset(_self_.get()._field_oc.ptr(), _1a5495cd5_Trait(_37131_m.get()._field_Kind.ptr()), _37131_m.get()._field_ExprKind))));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		else {
			_case_begin_1a8629c46:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
				_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37131_m.get()._field_Kind));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(", 2));
				_1a572753e_possibleRefExpr(_self_, _37131_m.get()._field_Expr);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a8629b7a:;
	};
}



inline void _1a572794b_models(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Slice<jule::Any> _46230_args) {
	if ((_46230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_46230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d3373a:;
		if (it != expr_end) {
			jule::I64 _46614_i = it - expr->begin();
			jule::Any _46621_a = *it;
			{
				_1a572753e_possibleRefExpr(_self_, _46621_a);
				if (((_46230_args.len() - _46614_i) > 1LL)) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a8d3373a:;
			++it;
			_46614_i++;
			goto _iter_begin_1a8d3373a;
		}
		_iter_end_1a8d3373a:;
	};
}



inline void _1a5727a7d_args(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398127_FnCallExprModel>* _47429_m) {
	jule::I64 _47517_j = 0LL;;
	if ((((*(_47429_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_47429_m)).get()._field_Func.get()._field_Decl.get()._field_Statically)))) {
		(_47517_j)++;
	};
	{
		auto expr = &((*(_47429_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d3651d:;
		if (it != expr_end) {
			jule::I64 _47913_i = it - expr->begin();
			jule::Any _47916_arg = *it;
			{
				jule::Ptr<_1a53a62ab_ParamIns> _48017_p = (*(_47429_m)).get()._field_Func.get()._field_Params[_47517_j];;
				if (((_48017_p.get()._field_Decl != nullptr) && _48017_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _47916_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a8d37cd3:;
							{
								jule::Ptr<_1a5418939_Var> _48425_v = _47916_arg.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
								if (_48425_v.get()._field_Reference) {
									_1a62c68c3_model(_self_, _47916_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1a8d37be5:;
					};
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a62c68c3_model(_self_, _47916_arg);
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1a572753e_possibleRefExpr(_self_, _47916_arg);
				_julec_label_end:;
				if ((((*(_47429_m)).get()._field_Args.len() - _47913_i) > 1LL)) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_47517_j)++;
			}
			_iter_next_1a8d3651d:;
			++it;
			_47913_i++;
			goto _iter_begin_1a8d3651d;
		}
		_iter_end_1a8d3651d:;
	};
}



inline void _1a5727bb0_modelForCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Any _50436_expr) {
	{
		auto &_match_expr{ _50436_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a8d3c018:;
			{
				_1a62c210a_funcIns(_self_, _50436_expr.cast_ptr<_1a53a717a_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a8d3c090:;
			{
				jule::Ptr<_1a539a998_StructSubIdentExprModel> _51021_ssie = _50436_expr.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51021_ssie.get()._field_Method != nullptr)) {
					_1a62c210a_funcIns(_self_, _51021_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1a8d3be08:;
	};
	_1a572753e_possibleRefExpr(_self_, _50436_expr);
}



inline void _1a5727ce2_pushCallInf(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398127_FnCallExprModel>* _51932_m) {
	if ((_1e7712174_Production || ((!((*(_51932_m)).get()._field_Func.get()._field_Anon)) && (!(_1a62c881a_isBuiltinCallHasDebuginf(_51932_m)))))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_51932_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_51932_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a8d4025d:;
				{
					if ((*(_51932_m)).get()._field_Expr.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_CppLinked) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1a8d40439;
				}
			}
			else {
				_case_begin_1a8d40439:;
				{
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1a8d40307:;
		};
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a663ac04_locInfo(_self_.get()._field_oc, &((*(_51932_m)).get()._field_Token));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_51932_m)).get()._field_Args.len() != 0LL)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1a5763844_isWrapped(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398127_FnCallExprModel>* _54434_m) {
	if ((((!(_1a53a8511_IsBuiltin((*(_54434_m)).get()._field_Func.ptr()))) && ((*(_54434_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a53a32b9_IsSelf((*(_54434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_54434_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a8d43d88:;
				{
					jule::Ptr<_1a539a998_StructSubIdentExprModel> _54825_ssie = (*(_54434_m)).get()._field_Expr.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1a53a352d_IsRef((*(_54434_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1a5494883_Sptr(_54825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a8d4465d:;
							{
								goto _match_end_1a8d44c02;
							}
						}
						else {
							_case_begin_1a8d44c68:;
							{
								if ((_1a5495a71_Struct(_54825_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_54825_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1a6305b88_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a62c68c3_model(_self_, _54825_ssie.get()._field_Expr.get()._field_Model);
										_1a6305b88_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1a8d44c02:;
					};
				}
			}
			_match_end_1a8d43b79:;
		};
	};
	return false;;
}



inline void _1a5763976_pureFuncCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398127_FnCallExprModel>* _56837_m) {
	jule::Bool _56913_wrapped = _1a5763844_isWrapped(_self_, _56837_m);;
	_1a5727bb0_modelForCall(_self_, (*(_56837_m)).get()._field_Expr);
	if ((!(_1a53a8511_IsBuiltin((*(_56837_m)).get()._field_Func.ptr())))) {
		if (((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_CppLinked && ((*(_56837_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1a664d772_hasDirective(&((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_56837_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8d4a653:;
					if (it != expr_end) {
						jule::I64 _57526_i = it - expr->begin();
						jule::Ptr<_1a5490a5a_InsGeneric> _57533_g = *it;
						{
							_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _57533_g.get()._field_Kind));
							if ((((*(_56837_m)).get()._field_Func.get()._field_Generics.len() - _57526_i) > 1LL)) {
								_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1a8d4a653:;
						++it;
						_57526_i++;
						goto _iter_begin_1a8d4a653;
					}
					_iter_end_1a8d4a653:;
				};
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a5727ce2_pushCallInf(_self_, _56837_m);
	jule::Bool _58617_locinfo = false;;
	if ((((!(_1a53a8511_IsBuiltin((*(_56837_m)).get()._field_Func.ptr()))) && ((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1a53a32b9_IsSelf((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_56837_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a8d4e0b3:;
				{
					jule::Ptr<_1a539a998_StructSubIdentExprModel> _59025_ssie = (*(_56837_m)).get()._field_Expr.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1a53a352d_IsRef((*(_56837_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1a8d52c98:;
							{
								_1a572753e_possibleRefExpr(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1a5494883_Sptr(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a8d52d0e:;
							{
								_1a572753e_possibleRefExpr(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
								_1a6305b88_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1e7712174_Production))) {
									_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a663ac04_locInfo(_self_.get()._field_oc, &((*(_56837_m)).get()._field_Token));
									_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1a8d5002b:;
							{
								if ((_1a5495a71_Struct(_59025_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _59025_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1a8d4e921:;
											{
												jule::Ptr<_1a5418939_Var> _60733_v = _59025_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
												if (_60733_v.get()._field_Reference) {
													goto _match_end_1a8d50a98;
												};
												goto _case_begin_1a8d50aed;
											}
										}
										else {
											_case_begin_1a8d50aed:;
											{
												_1a6305b88_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1a8d50a98:;
									};
								};
								if (_56913_wrapped) {
									_1a6305b88_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a62c68c3_model(_self_, _59025_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1a8d4eeb5:;
					};
					if (((*(_56837_m)).get()._field_Args.len() > 0LL)) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1a8d4e129:;
				{
					_1a572753e_possibleRefExpr(_self_, (*(_56837_m)).get()._field_Expr.cast_ptr<_1a539a1b2_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_1e7712174_Production))) {
						_58617_locinfo=true;
					};
					if (((*(_56837_m)).get()._field_Args.len() > 0LL)) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1a8d4dda4:;
		};
	};
	_1a5727a7d_args(_self_, _56837_m);
	if (_58617_locinfo) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a663ac04_locInfo(_self_.get()._field_oc, &((*(_56837_m)).get()._field_Token));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_56913_wrapped) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1a5763aa8_coFuncCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398127_FnCallExprModel>* _64935_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a661126d_addIndent(_self_.get()._field_oc);
	jule::Str _65217_head = jule::Str("std::thread([", 13);;
	if (((*(_64935_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		_65217_head+=jule::Str("_self_", 6);
		if (((*(_64935_m)).get()._field_Args.len() > 0LL)) {
			_65217_head+=jule::Str(", ", 2);
		};
	};
	{
		auto expr = &((*(_64935_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d5c5bb:;
		if (it != expr_end) {
			jule::I64 _65913_i = it - expr->begin();
			jule::Any _65916_arg = *it;
			{
				if ((_65913_i > 0LL)) {
					_65217_head+=jule::Str(", ", 2);
				};
				{
					auto &_match_expr{ _65916_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a8d5e4be:;
						{
							jule::Ptr<_1a5418939_Var> _66525_v = _65916_arg.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
							_65217_head+=static__1a62d04c0_var(_66525_v);
							goto _iter_next_1a8d5c5bb;
						}
					}
					_match_end_1a8d5dc71:;
				};
				jule::Str _66917_name = (jule::Str("_co_arg_", 8) + _1a5382dd1_Itoa(_65913_i));;
				_65217_head+=_66917_name;
				_1a6614cdd_indent(_self_.get()._field_oc);
				_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_64935_m)).get()._field_Func.get()._field_Params[_65913_i].get()._field_Kind));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_64935_m)).get()._field_Func.get()._field_Params[_65913_i].get()._field_Decl.get()._field_Reference) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1a6305b88_write(_self_.get()._field_oc, _66917_name);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a572753e_possibleRefExpr(_self_, _65916_arg);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _68117_argS = jule::Any(_66917_name, &__jule_any_type5);;
				(*(_64935_m)).get()._field_Args[_65913_i]=(*(((jule::Any*)((&(_68117_argS))))));
			}
			_iter_next_1a8d5c5bb:;
			++it;
			_65913_i++;
			goto _iter_begin_1a8d5c5bb;
		}
		_iter_end_1a8d5c5bb:;
	};
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, _65217_head);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a5763976_pureFuncCall(_self_, _64935_m);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a5763bda_writeUseExpr(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a717a_FnIns>* _69937_f, jule::Ptr<_1a5466305_Data> _69952_d) {
	if ((_1a54962ad_Tup(_69952_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a572753e_possibleRefExpr(_self_, _69952_d.get()._field_Model);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1a539bd51_TupleExprModel> _70517_tup = _69952_d.get()._field_Model.cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88);;
	_1a664b0dd_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1a54962ad_Tup((*(_69937_f)).get()._field_Result.ptr()));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_70517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d6a4db:;
		if (it != expr_end) {
			jule::I64 _70813_i = it - expr->begin();
			jule::Ptr<_1a5466305_Data> _70816_data = *it;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_70813_i));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1a572753e_possibleRefExpr(_self_, _70816_data.get()._field_Model);
				if (((_70517_tup.get()._field_Datas.len() - _70813_i) > 1LL)) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1a8d6a4db:;
			++it;
			_70813_i++;
			goto _iter_begin_1a8d6a4db;
		}
		_iter_end_1a8d6a4db:;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1a62be2d3_funcCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398127_FnCallExprModel> _72032_m) {
	if (_72032_m.get()._field_IsCo) {
		_1a5763aa8_coFuncCall(_self_, &(_72032_m));
		return;;
	};
	if (((_1a53a8511_IsBuiltin(_72032_m.get()._field_Func.ptr()) || (!(_72032_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_72032_m.get()._field_Except != nullptr) && (_72032_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1a5763976_pureFuncCall(_self_, &(_72032_m));
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a5763976_pureFuncCall(_self_, &(_72032_m));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	if ((_72032_m.get()._field_Except != nullptr)) {
		if (((_72032_m.get()._field_Func.get()._field_Result == nullptr) || (!(_72032_m.get()._field_Assigned)))) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a5737e34_scope(_self_.get()._field_oc.get()._field_sc, _72032_m.get()._field_Except);
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _74621_forwarded = _1a62c8551_isForwarded(&(_72032_m.get()._field_Except));;
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_74621_forwarded) {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _75125_stmt = _72032_m.get()._field_Except.get()._field_Stmts[(_72032_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _75125_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1a8d74bbb:;
					{
						_72032_m.get()._field_Except.get()._field_Stmts=_72032_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_72032_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1a6305b88_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1a661126d_addIndent(_self_.get()._field_oc);
						_1a5729024_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_72032_m.get()._field_Except));
						_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a6614cdd_indent(_self_.get()._field_oc);
						_1a5763bda_writeUseExpr(_self_, &(_72032_m.get()._field_Func), _75125_stmt.cast_ptr<_1a5466305_Data>(&__jule_any_type23));
						_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a661178a_doneIndent(_self_.get()._field_oc);
						_1a6614cdd_indent(_self_.get()._field_oc);
						_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1a8d75a9b:;
					{
						_1a5737e34_scope(_self_.get()._field_oc.get()._field_sc, _72032_m.get()._field_Except);
					}
				}
				_match_end_1a8d75a46:;
			};
			if (_74621_forwarded) {
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a62c6b48_initExpr(_self_, _72032_m.get()._field_Func.get()._field_Result);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a6305b88_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a661178a_doneIndent(_self_.get()._field_oc);
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a663ac04_locInfo(_self_.get()._field_oc, &(_72032_m.get()._field_Token));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1a53a493b_IsVoid(_72032_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1a6614cdd_indent(_self_.get()._field_oc);
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a661178a_doneIndent(_self_.get()._field_oc);
	};
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a62c023a_slice(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53984ce_SliceExprModel> _79129_m) {
	if ((_79129_m.get()._field_Elems.len() == 0LL)) {
		_1a6305b88_write(_self_.get()._field_oc, _1a66441d5_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _79129_m.get()._field_ElemKind));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, _1a66441d5_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _79129_m.get()._field_ElemKind));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a572794b_models(_self_, _79129_m.get()._field_Elems);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a62c03b1_indexing(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398952_IndexingExprModel> _80332_m) {
	_1a572753e_possibleRefExpr(_self_, _80332_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1e7712174_Production || (_1a5494ae7_Ptr(_80332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a5496049_Map(_80332_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1a62c8a4b_isExprComesFromBind(&(_80332_m.get()._field_Expr))) {
			_case_begin_1a8d82426:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a572753e_possibleRefExpr(_self_, _80332_m.get()._field_Index.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a8d82b96:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a663ac04_locInfo(_self_.get()._field_oc, &(_80332_m.get()._field_Token));
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1a572753e_possibleRefExpr(_self_, _80332_m.get()._field_Index.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a8d82b30:;
	};
}



inline void _1a62c0625_unsafeIndexing(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1b567d5a6_UnsafeIndexingExprModel> _82338_m) {
	_1a572753e_possibleRefExpr(_self_, _82338_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1e7712174_Production || (_1a5494ae7_Ptr(_82338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1a5496049_Map(_82338_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d869ad:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a572753e_possibleRefExpr(_self_, _82338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a8d872a5:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a572753e_possibleRefExpr(_self_, _82338_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a8d8723e:;
	};
}



inline void _1a62c089a_anonFunc(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5398d09_AnonFnExprModel> _84032_m) {
	_1a6305b88_write(_self_.get()._field_oc, _1a6646baa_func(_self_.get()._field_oc.get()._field_tc.ptr(), _84032_m.get()._field_Func));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a663cd6b_paramsIns(_self_.get()._field_oc, &(_84032_m.get()._field_Func.get()._field_Params));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a664658e_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_84032_m.get()._field_Func));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1cececd3d_funcScope(_self_.get()._field_oc.get()._field_sc, _84032_m.get()._field_Func);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c0b20_mapExpr(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5399634_MapExprModel> _85131_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _85131_m.get()._field_KeyKind));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _85131_m.get()._field_ValKind));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_85131_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_85131_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8d911e3:;
			if (it != expr_end) {
				jule::I64 _85818_i = it - expr->begin();
				jule::Ptr<_1a53991b1_KeyValPairExprModel> _85825_pair = *it;
				{
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a572753e_possibleRefExpr(_self_, _85825_pair.get()._field_Key);
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a572753e_possibleRefExpr(_self_, _85825_pair.get()._field_Val);
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_85131_m.get()._field_Entries.len() - _85818_i) > 1LL)) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1a8d911e3:;
				++it;
				_85818_i++;
				goto _iter_begin_1a8d911e3;
			}
			_iter_end_1a8d911e3:;
		};
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a62c0d95_slicing(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5399b73_SlicingExprModel> _87231_m) {
	_1a572753e_possibleRefExpr(_self_, _87231_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1e7712174_Production))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a663ac04_locInfo(_self_.get()._field_oc, &(_87231_m.get()._field_Token));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a572753e_possibleRefExpr(_self_, _87231_m.get()._field_Left);
	if ((_87231_m.get()._field_Right != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a572753e_possibleRefExpr(_self_, _87231_m.get()._field_Right);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c111a_traitSub(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539a1b2_TraitSubIdentExprModel> _88832_m) {
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce69a_traitDecl(_88832_m.get()._field_Trt));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a572753e_possibleRefExpr(_self_, _88832_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce15b_func(&(_88832_m.get()._field_Method)));
}



inline void _1a62c1390_structureSub(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539a998_StructSubIdentExprModel> _89736_m) {
	_1a572753e_possibleRefExpr(_self_, _89736_m.get()._field_Expr.get()._field_Model);
	if ((_89736_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1a5494ae7_Ptr(_89736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1a5494883_Sptr(_89736_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_1e7712174_Production))) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1a663ac04_locInfo(_self_.get()._field_oc, &(_89736_m.get()._field_Token));
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a6305b88_write(_self_.get()._field_oc, static__1a62d0228_field(&(_89736_m.get()._field_Field.get()._field_Decl)));
}



inline void _1a62c1615_commonIdent(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539b4e3_CommonIdentExprModel> _91831_m) {
	_1a6305b88_write(_self_.get()._field_oc, _91831_m.get()._field_Ident);
}



inline void _1a62c188a_commonSub(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539ba54_CommonSubIdentExprModel> _92233_m) {
	_1a572753e_possibleRefExpr(_self_, _92233_m.get()._field_Expr);
	{
		
		if ((_1a5494ae7_Ptr(_92233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a8da02ce:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1a5494883_Sptr(_92233_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a8da09d8:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1e7712174_Production))) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a663ac04_locInfo(_self_.get()._field_oc, &(_92233_m.get()._field_Token));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1a8da0972:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1a8da090b:;
	};
	_1a6305b88_write(_self_.get()._field_oc, _92233_m.get()._field_Ident);
}



inline void _1a62c1b10_array(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539b207_ArrayExprModel> _94129_m) {
	_1a6305b88_write(_self_.get()._field_oc, _1a6645846_array(_self_.get()._field_oc.get()._field_tc.ptr(), _94129_m.get()._field_Kind));
	if ((_94129_m.get()._field_Elems.len() == 0LL)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_94129_m.get()._field_Elems.len() == 2LL) && (_94129_m.get()._field_Elems[1LL] == nullptr))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a572753e_possibleRefExpr(_self_, _94129_m.get()._field_Elems[0LL]);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a572794b_models(_self_, _94129_m.get()._field_Elems);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a62c1d85_funcInsCommon(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a717a_FnIns> _96437_m) {
	_1a6305b88_write(_self_.get()._field_oc, _1a6646baa_func(_self_.get()._field_oc.get()._field_tc.ptr(), _96437_m));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a62c210a_funcIns(_self_, _96437_m);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c210a_funcIns(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a717a_FnIns> _97131_m) {
	if (((_97131_m.get()._field_Decl != nullptr) && _97131_m.get()._field_Decl.get()._field_CppLinked)) {
		jule::Ptr<_1a3c1d0ec_Directive> _97317_d = _1a664d3dc_findDirective(&(_97131_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_97317_d != nullptr)) {
			_1a6305b88_write(_self_.get()._field_oc, _1a66404ab_concatAllParts(_97317_d.get()._field_Args));
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce403_funcIns(&(_97131_m)));
}



inline void _1a62c2380_tuple(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539bd51_TupleExprModel> _98229_m) {
	{
		auto expr = &(_98229_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8daccd1:;
		if (it != expr_end) {
			jule::I64 _98314_i = it - expr->begin();
			jule::Ptr<_1a5466305_Data> _98321_d = *it;
			{
				_1a572753e_possibleRefExpr(_self_, _98321_d.get()._field_Model);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_98229_m.get()._field_Datas.len() - _98314_i) > 1LL)) {
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a6614cdd_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1a8daccd1:;
			++it;
			_98314_i++;
			goto _iter_begin_1a8daccd1;
		}
		_iter_end_1a8daccd1:;
	};
}



inline void _1a62c2605_newCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539cd1e_BuiltinNewCallExprModel> _99331_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _99331_m.get()._field_Kind));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_99331_m.get()._field_Init != nullptr)) {
		_1a572753e_possibleRefExpr(_self_, _99331_m.get()._field_Init);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c287a_outCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539c22a_BuiltinOutCallExprModel> _100331_m) {
	if ((_100331_m.get()._field_Debug && _1e7712174_Production)) {
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a572753e_possibleRefExpr(_self_, _100331_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c2b00_outlnCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539c615_BuiltinOutlnCallExprModel> _101233_m) {
	if ((_101233_m.get()._field_Debug && _1e7712174_Production)) {
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a572753e_possibleRefExpr(_self_, _101233_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c2d75_panicCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539d209_BuiltinPanicCallExprModel> _102133_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a572753e_possibleRefExpr(_self_, _102133_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a663ac04_locInfo(_self_.get()._field_oc, &(_102133_m.get()._field_Token));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a62c30ea_assertCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel> _102934_m) {
	if (_1e7712174_Production) {
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a572753e_possibleRefExpr(_self_, _102934_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a6305b88_write(_self_.get()._field_oc, _1a62c784c_cstrLit(static_cast<jule::Slice<jule::U8>>(_102934_m.get()._field_Log)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a663ac04_locInfo(_self_.get()._field_oc, &(_102934_m.get()._field_Token));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a62c3370_errorCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a0591_BuiltinErrorCallExprModel> _104233_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1a53a493b_IsVoid(_104233_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _104233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a8dbaa03:;
				{
					jule::Ptr<_1a5418939_Var> _104721_v = _104233_m.get()._field_Err.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
					if ((_104721_v.get()._field_Ident == jule::Str("error", 5))) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1a8dba99d:;
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a664b72b_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_104233_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _104233_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a8dbd7d6:;
				{
					jule::Ptr<_1a5418939_Var> _105921_v = _104233_m.get()._field_Err.get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
					if ((_105921_v.get()._field_Ident == jule::Str("error", 5))) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1a8dbd72b:;
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1a572753e_possibleRefExpr(_self_, _104233_m.get()._field_Err.get()._field_Model);
	jule::I64 _106813_i = _1a630a286_pushAnyType(_self_.get()._field_oc, &(_104233_m.get()._field_Err.get()._field_Kind));;
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_106813_i));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a62c35e5_copyCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a01a6_BuiltinCopyCallExprModel> _107432_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a572753e_possibleRefExpr(_self_, _107432_m.get()._field_Dest.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a549461e_Prim(_107432_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a572753e_possibleRefExpr(_self_, _107432_m.get()._field_Src.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1a549461e_Prim(_107432_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c386a_lenCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539e370_BuiltinLenCallExprModel> _109031_m) {
	_1a572753e_possibleRefExpr(_self_, _109031_m.get()._field_Expr.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1a62c3ae0_capCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539e68e_BuiltinCapCallExprModel> _109531_m) {
	_1a572753e_possibleRefExpr(_self_, _109531_m.get()._field_Expr.get()._field_Model);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1a62c3d65_deleteCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel> _110034_m) {
	_1a572753e_possibleRefExpr(_self_, _110034_m.get()._field_Dest.get()._field_Model);
	if ((_110034_m.get()._field_Key != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1a572753e_possibleRefExpr(_self_, _110034_m.get()._field_Key.get()._field_Model);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1a62c40da_makeCallSlice(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>* _111138_m) {
	jule::Ptr<_1a549b1c5_Slc> _111217_slice = _1a5495598_Slc((*(_111138_m)).get()._field_Kind.ptr());;
	_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_111138_m)).get()._field_Kind));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a572753e_possibleRefExpr(_self_, (*(_111138_m)).get()._field_Len);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_111138_m)).get()._field_Cap != nullptr)) {
		_1a572753e_possibleRefExpr(_self_, (*(_111138_m)).get()._field_Cap);
	} else {
		_1a572753e_possibleRefExpr(_self_, (*(_111138_m)).get()._field_Len);
	};
	if (_1a664da19_shouldInitialized(&(_111217_slice.get()._field_Elem))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a62c6b48_initExpr(_self_, _111217_slice.get()._field_Elem);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c4360_makeCallStr(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel>* _112936_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a572753e_possibleRefExpr(_self_, (*(_112936_m)).get()._field_Len);
	if (((*(_112936_m)).get()._field_Cap != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a572753e_possibleRefExpr(_self_, (*(_112936_m)).get()._field_Cap);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c45d5_makeCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539db66_BuiltinMakeCallExprModel> _114032_m) {
	if ((_1a5495598_Slc(_114032_m.get()._field_Kind.ptr()) != nullptr)) {
		_1a62c40da_makeCallSlice(_self_, &(_114032_m));
		return;;
	};
	_1a62c4360_makeCallStr(_self_, &(_114032_m));
}



inline void _1a62c485a_pushToSlice(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a3c3d914_PushToSliceExprModel> _114835_m) {
	jule::I64 _114913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1a572753e_possibleRefExpr(_self_, _114835_m.get()._field_Dest);
	jule::Str _115113_dest = _self_.get()._field_oc.get()._field_Obj.slice(_114913_n);;
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1a6305b88_write(_self_.get()._field_oc, _115113_dest);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(static_cast<jule::I64>(_114835_m.get()._field_Elems.get()._field_Elems.len())));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_114835_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8dd549b:;
		if (it != expr_end) {
			jule::Any _115821_e = *it;
			{
				_1a6305b88_write(_self_.get()._field_oc, _115113_dest);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1a572753e_possibleRefExpr(_self_, _115821_e);
				_1a6305b88_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1a8dd549b:;
			++it;
			goto _iter_begin_1a8dd549b;
		}
		_iter_end_1a8dd549b:;
	};
}



inline void _1a62c4ad0_appendCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539e051_BuiltinAppendCallExprModel> _116734_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a572753e_possibleRefExpr(_self_, _116734_m.get()._field_Dest);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a572753e_possibleRefExpr(_self_, _116734_m.get()._field_Elements);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c4d55_cloneCall(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539c934_BuiltinCloneCallExprModel> _117533_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a572753e_possibleRefExpr(_self_, _117533_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c50ca_sizeof(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a088d_SizeofExprModel> _118130_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a572753e_possibleRefExpr(_self_, _118130_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c5350_alignof(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a0b79_AlignofExprModel> _118731_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a572753e_possibleRefExpr(_self_, _118731_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1a62c565d_runeLit(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a0e65_RuneExprModel> _119327_m) {
	if ((_119327_m.get()._field_Code <= 127LL)) {
		jule::Str _119521_b = _1a62c7286_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_119327_m.get()._field_Code)));;
		if ((_119521_b == jule::Str("'", 1))) {
			_119521_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _119521_b) + jule::Str("'", 1));;
	};
	return _1a62c7e02_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_119327_m.get()._field_Code)));;
}



inline void _1a62c58d3_structureStatic(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a539ad3e_StructStaticIdentExprModel> _120439_m) {
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce403_funcIns(&(_120439_m.get()._field_Method)));
}



inline void _1a62c5b58_integratedToStr(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a1273_IntegratedToStrExprModel> _120839_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a572753e_possibleRefExpr(_self_, _120839_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a62c5dcd_backendEmit(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a163b_BackendEmitExprModel> _121435_m) {
	if ((_121435_m.get()._field_Exprs.len() == 0LL)) {
		_1a6305b88_write(_self_.get()._field_oc, _121435_m.get()._field_Code);
		return;;
	};
	jule::I64 _121913_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _122017_args = jule::Slice<jule::Any>::alloc(_121435_m.get()._field_Exprs.len(), _121435_m.get()._field_Exprs.len());;
	{
		auto expr = &(_121435_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8de0e24:;
		if (it != expr_end) {
			jule::I64 _122114_i = it - expr->begin();
			jule::Any _122121_expr = *it;
			{
				_1a572753e_possibleRefExpr(_self_, _122121_expr);
				_122017_args[_122114_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_121913_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _121913_n);
			}
			_iter_next_1a8de0e24:;
			++it;
			_122114_i++;
			goto _iter_begin_1a8de0e24;
		}
		_iter_end_1a8de0e24:;
	};
	_1a6305b88_write(_self_.get()._field_oc, _1a4a899a1_Format(_121435_m.get()._field_Code, _122017_args));
}



inline void _1a62c6153_free(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a53a1927_FreeExprModel> _122928_m) {
	_1a572753e_possibleRefExpr(_self_, _122928_m.get()._field_Expr);
	if (_1e77119d1_RC) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a62c63c8_mutSlicing(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1b56cd727_MutSlicingExprModel> _123834_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a572753e_possibleRefExpr(_self_, _123834_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1e7712174_Production))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a663ac04_locInfo(_self_.get()._field_oc, &(_123834_m.get()._field_Token));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a572753e_possibleRefExpr(_self_, _123834_m.get()._field_Left);
	if ((_123834_m.get()._field_Right != nullptr)) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a572753e_possibleRefExpr(_self_, _123834_m.get()._field_Right);
	};
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a62c664d_strInsertBegin(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1b56cd914_StrInsertBeginExprModel> _125538_m) {
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a572753e_possibleRefExpr(_self_, _125538_m.get()._field_Dest);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1a572753e_possibleRefExpr(_self_, _125538_m.get()._field_Expr);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1a62c68c3_model(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Any _126329_m) {
	{
		auto &_match_expr{ _126329_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a8deb517:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _126329_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a8deb7e2:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _126329_m.cast_ptr<_1a5492287_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8deb858:;
			{
				_1a57260a9_constant(_self_, _126329_m.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8deb8be:;
			{
				_1a5726e34_var(_self_, _126329_m.cast_ptr<_1a5418939_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a8deb935:;
			{
				_1a5727066_structureIns(_self_, _126329_m.cast_ptr<_1a487d575_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a8dec43b:;
			{
				_1a62c1d85_funcInsCommon(_self_, _126329_m.cast_ptr<_1a53a717a_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1a8dec4a2:;
			{
				_1a572631d_unsafeBinary(_self_, _126329_m.cast_ptr<_1b5667150_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a8dec518:;
			{
				_1a5726450_binary(_self_, _126329_m.cast_ptr<_1a53962ac_BinopExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a8dec57e:;
			{
				_1a5727198_unary(_self_, _126329_m.cast_ptr<_1a5396664_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a8dec5e5:;
			{
				_1a57272ca_structureLit(_self_, _126329_m.cast_ptr<_1a5396e17_StructLitExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a8dec65b:;
			{
				_1a572740c_allocStructure(_self_, _126329_m.cast_ptr<_1a5397225_AllocStructLitExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8dec6c2:;
			{
				_1a5727671_casting(_self_, _126329_m.cast_ptr<_1a5397775_CastingExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a8dec738:;
			{
				_1a62be2d3_funcCall(_self_, _126329_m.cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a8dec79e:;
			{
				_1a62c023a_slice(_self_, _126329_m.cast_ptr<_1a53984ce_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a8dec815:;
			{
				_1a62c1b10_array(_self_, _126329_m.cast_ptr<_1a539b207_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1a8dec87b:;
			{
				_1a62c0625_unsafeIndexing(_self_, _126329_m.cast_ptr<_1b567d5a6_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a8dec8e2:;
			{
				_1a62c03b1_indexing(_self_, _126329_m.cast_ptr<_1a5398952_IndexingExprModel>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a8dec969:;
			{
				_1a62c089a_anonFunc(_self_, _126329_m.cast_ptr<_1a5398d09_AnonFnExprModel>(&__jule_any_type105));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a8dec9e1:;
			{
				_1a62c0b20_mapExpr(_self_, _126329_m.cast_ptr<_1a5399634_MapExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a8deca68:;
			{
				_1a62c0d95_slicing(_self_, _126329_m.cast_ptr<_1a5399b73_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a8decae0:;
			{
				_1a62c111a_traitSub(_self_, _126329_m.cast_ptr<_1a539a1b2_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a8decb67:;
			{
				_1a62c1390_structureSub(_self_, _126329_m.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a8decbde:;
			{
				_1a62c1615_commonIdent(_self_, _126329_m.cast_ptr<_1a539b4e3_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a8decc66:;
			{
				_1a62c188a_commonSub(_self_, _126329_m.cast_ptr<_1a539ba54_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8deccdd:;
			{
				_1a62c2380_tuple(_self_, _126329_m.cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a8decd65:;
			{
				_1a62c287a_outCall(_self_, _126329_m.cast_ptr<_1a539c22a_BuiltinOutCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a8decddc:;
			{
				_1a62c2b00_outlnCall(_self_, _126329_m.cast_ptr<_1a539c615_BuiltinOutlnCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a8dece64:;
			{
				_1a62c2605_newCall(_self_, _126329_m.cast_ptr<_1a539cd1e_BuiltinNewCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a8decedb:;
			{
				_1a62c2d75_panicCall(_self_, _126329_m.cast_ptr<_1a539d209_BuiltinPanicCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a8ded063:;
			{
				_1a62c30ea_assertCall(_self_, _126329_m.cast_ptr<_1a539d6b0_BuiltinAssertCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8ded0da:;
			{
				_1a62c3370_errorCall(_self_, _126329_m.cast_ptr<_1a53a0591_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a8ded162:;
			{
				_1a62c45d5_makeCall(_self_, _126329_m.cast_ptr<_1a539db66_BuiltinMakeCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a8ded1d9:;
			{
				_1a62c4ad0_appendCall(_self_, _126329_m.cast_ptr<_1a539e051_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a8ded261:;
			{
				_1a62c4d55_cloneCall(_self_, _126329_m.cast_ptr<_1a539c934_BuiltinCloneCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a8ded2d8:;
			{
				_1a62c35e5_copyCall(_self_, _126329_m.cast_ptr<_1a53a01a6_BuiltinCopyCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a8ded360:;
			{
				_1a62c386a_lenCall(_self_, _126329_m.cast_ptr<_1a539e370_BuiltinLenCallExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a8ded3d7:;
			{
				_1a62c3ae0_capCall(_self_, _126329_m.cast_ptr<_1a539e68e_BuiltinCapCallExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a8ded45e:;
			{
				_1a62c3d65_deleteCall(_self_, _126329_m.cast_ptr<_1a539ed43_BuiltinDeleteCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a8ded4d6:;
			{
				_1a62c50ca_sizeof(_self_, _126329_m.cast_ptr<_1a53a088d_SizeofExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a8ded55d:;
			{
				_1a62c5350_alignof(_self_, _126329_m.cast_ptr<_1a53a0b79_AlignofExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a8ded5d5:;
			{
				_1a6305b88_write(_self_.get()._field_oc, _1a62c565d_runeLit(_self_, _126329_m.cast_ptr<_1a53a0e65_RuneExprModel>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a8ded65c:;
			{
				_1a62c58d3_structureStatic(_self_, _126329_m.cast_ptr<_1a539ad3e_StructStaticIdentExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a8ded6d4:;
			{
				_1a62c5b58_integratedToStr(_self_, _126329_m.cast_ptr<_1a53a1273_IntegratedToStrExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8ded75b:;
			{
				_1a62c5dcd_backendEmit(_self_, _126329_m.cast_ptr<_1a53a163b_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a8ded7d3:;
			{
				_1a62c6153_free(_self_, _126329_m.cast_ptr<_1a53a1927_FreeExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1a8ded85a:;
			{
				_1a62c63c8_mutSlicing(_self_, _126329_m.cast_ptr<_1b56cd727_MutSlicingExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1a8ded8d2:;
			{
				_1a62c664d_strInsertBegin(_self_, _126329_m.cast_ptr<_1b56cd914_StrInsertBeginExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_1a8deb68d:;
			{
				_1a6305b88_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1a8deb5b1:;
	};
}



inline void _1a62c6b48_initExpr(jule::Ptr<_1cec7eb5a_exprCoder> _self_, jule::Ptr<_1a5492287_TypeKind> _136432_t) {
	if (_1a5493b6d_NilCompatible(_136432_t.ptr())) {
		if ((_1a5494ae7_Ptr(_136432_t.ptr()) != nullptr)) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1a549bc53_Tuple> _137417_tup = _1a54962ad_Tup(_136432_t.ptr());;
	if ((_137417_tup != nullptr)) {
		_1a664b0dd_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _137417_tup);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_137417_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8e18e19:;
			if (it != expr_end) {
				jule::I64 _137818_i = it - expr->begin();
				jule::Ptr<_1a5492287_TypeKind> _137825_tt = *it;
				{
					if ((!(_1a664da19_shouldInitialized(&(_137825_tt))))) {
						goto _iter_next_1a8e18e19;
					};
					_1a6305b88_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1a6305b88_write(_self_.get()._field_oc, _1a5382dd1_Itoa(_137818_i));
					_1a6305b88_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1a62c6b48_initExpr(_self_, _137825_tt);
					if (((_137417_tup.get()._field_Types.len() - _137818_i) > 1LL)) {
						_1a6305b88_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1a8e18e19:;
				++it;
				_137818_i++;
				goto _iter_begin_1a8e18e19;
			}
			_iter_end_1a8e18e19:;
		};
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1a53b8521_Enum> _139317_enm = _1a5494d5b_Enum(_136432_t.ptr());;
	if ((_139317_enm != nullptr)) {
		_1a62c68c3_model(_self_, _139317_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1a5496ed4_Prim> _139813_prim = _1a549461e_Prim(_136432_t.ptr());;
	if ((_139813_prim != nullptr)) {
		if (_1a53899ba_IsNum(_139813_prim.get()._field_Kind)) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1a5499ea4_IsBool(_139813_prim.ptr())) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1a549a218_IsStr(_139813_prim.ptr())) {
			_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1a5495334_Arr(_136432_t.ptr()) != nullptr)) {
		jule::Ptr<_1a549d370_Arr> _141021_arr = _1a5495334_Arr(_136432_t.ptr());;
		_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a62c6b48_initExpr(_self_, _141021_arr.get()._field_Elem);
		_1a6305b88_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1a487d575_StructIns> _141717_s = _1a5495a71_Struct(_136432_t.ptr());;
	if ((((_141717_s != nullptr) && _141717_s.get()._field_Decl.get()._field_CppLinked) && (_1a664d3dc_findDirective(&(_141717_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, _1a6646eb8_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _136432_t));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1cec7eb5a_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a62c9497_deriveCoder> static__1a62c9871_new(jule::Ptr<_1a663a60a_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1a62c9497_deriveCoder>(_1a62c9497_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1a62c9b7e_cloneFuncDecl(_1a62c9497_deriveCoder* _self_, jule::Ptr<_1a487d19b_Struct>* _1633_s) {
	jule::Str _1717_obj = _1a664522a_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	_1717_obj+=jule::Str(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1a62c9e8c_cloneFuncDef(_1a62c9497_deriveCoder* _self_, jule::Ptr<_1a487d19b_Struct>* _2232_s) {
	jule::Str _2317_obj = _1a664522a_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	_2317_obj+=jule::Str("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a62c9497_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a62cadb1_TestCoder> static__1a62cb334_New(jule::Ptr<_1a663a60a_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1a62cadb1_TestCoder>(_1a62cadb1_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1a53e27e2_ImportInfo> _1a62cb598_findTestingPackage(jule::Ptr<_1a62cadb1_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e27c91:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _3521_imp = *it;
			{
				if ((_3521_imp.get()._field_LinkPath == jule::Str("std::testing", 12))) {
					return _3521_imp;;
				};
			}
			_iter_next_1a8e27c91:;
			++it;
			goto _iter_begin_1a8e27c91;
		}
		_iter_end_1a8e27c91:;
	};
	return nullptr;;
}



inline void _1a62cb81d_appendTest(jule::Ptr<_1a62cadb1_TestCoder> _self_, jule::Ptr<_1a53a717a_FnIns> _4334_f) {
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a62cbed3_callTmReset(_self_);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \";\n", 35));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a6305b88_write(_self_.get()._field_oc, _1a62c784c_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(");\n", 3));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce403_funcIns(&(_4334_f)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a62cba93_appendPackageTests(jule::Ptr<_1a62cadb1_TestCoder> _self_, jule::Ptr<_1a53e574b_Package>* _6043_p) {
	{
		auto expr = &((*(_6043_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8e2d46c:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _6121_file = *it;
			{
				{
					auto expr = &(_6121_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8e2dca8:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _6225_f = *it;
						{
							if (_1a664d772_hasDirective(&(_6225_f.get()._field_Directives), jule::Str("test", 4))) {
								_1a62cb81d_appendTest(_self_, _6225_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1a8e2dca8:;
						++it;
						goto _iter_begin_1a8e2dca8;
					}
					_iter_end_1a8e2dca8:;
				};
			}
			_iter_next_1a8e2d46c:;
			++it;
			goto _iter_begin_1a8e2d46c;
		}
		_iter_end_1a8e2d46c:;
	};
}



inline jule::Bool _1a62cbd07_readyTestingPackage(jule::Ptr<_1a62cadb1_TestCoder> _self_) {
	jule::Ptr<_1a53e27e2_ImportInfo> _7117_p = _1a62cb598_findTestingPackage(_self_);;
	if ((_7117_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1a53e3c33_FindStruct(_7117_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1a4857384_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1a4857384_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1a4857384_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1a62cbed3_callTmReset(jule::Ptr<_1a62cadb1_TestCoder> _self_) {
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce15b_func(&(_self_.get()._field_tmReset)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a62cc1ae_callTmFailed(jule::Ptr<_1a62cadb1_TestCoder> _self_) {
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce15b_func(&(_self_.get()._field_tmFailed)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a62cc38a_callTmSkipped(jule::Ptr<_1a62cadb1_TestCoder> _self_) {
	_1a6305b88_write(_self_.get()._field_oc, static__1a62ce15b_func(&(_self_.get()._field_tmSkipped)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a62cc566_Serialize(jule::Ptr<_1a62cadb1_TestCoder> _self_) {
	_1a663eb81_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a663e9a5_end(_self_.get()._field_oc);
	});;
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	if ((!(_1a62cbd07_readyTestingPackage(_self_)))) {
		_1a6305b88_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a661178a_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1a6305b88_write(_self_.get()._field_oc, _1a6642d82_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1a6645538_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a6305b88_write(_self_.get()._field_oc, _1a6645538_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a661126d_addIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a62cc1ae_callTmFailed(_self_);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a62cc38a_callTmSkipped(_self_);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a62cba93_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a661178a_doneIndent(_self_.get()._field_oc);
	_1a6614cdd_indent(_self_.get()._field_oc);
	_1a6305b88_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a62cadb1_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1a62cd9c9_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=_1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		_3521_obj+=jule::Str("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	_4217_obj+=jule::Str("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1a62cddb4_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=_1a5382dd1_Itoa(_5423_row);
	_5517_obj+=_1a5382dd1_Itoa(_5433_col);
	_5517_obj+=jule::Str("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1a62ce15b_func(jule::Ptr<_1a53a44c9_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_CppLinked) {
			_case_begin_1a8e4651d:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if (((*(_6521_f)).get()._field_Ident == jule::Str("main", 4))) {
			_case_begin_1a8e46584:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1a53a4ba0_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1a8e45929:;
			{
				jule::Str _7221_obj = static__1a62cd9c9_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1a8e458b3:;
			{
				return static__1a62cd9c9_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1a8e45819:;
	};
}



inline jule::Str static__1a62ce403_funcIns(jule::Ptr<_1a53a717a_FnIns>* _8424_f) {
	if (_1a53a8511_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_CppLinked || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1a62ce15b_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1a62cd9c9_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1a62ce69a_traitDecl(jule::Ptr<_1a53b63cb_Trait> _9525_t) {
	if (_1a53b6e48_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1a62cd9c9_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1a62ce942_param(jule::Ptr<_1a53a2b8c_Param>* _10322_p) {
	if ((_1ceeeb4ae_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _1ceeeb217_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1a53a32b9_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1a62cddb4_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1a62cddb4_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1a62cebd9_structure(jule::Ptr<_1a487d19b_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_CppLinked) {
		if (_1a664d772_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1a62cd9c9_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1a62cee81_structureIns(jule::Ptr<_1a487d575_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_CppLinked || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1a62cebd9_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1a62cd9c9_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1a62d0228_field(jule::Ptr<_1a4852208_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_CppLinked) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1a62d04c0_var(jule::Ptr<_1a5418939_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_CppLinked) {
			_case_begin_1a55a618c:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("error", 5))) {
			_case_begin_1a5570530:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if ((_14423_v.get()._field_Ident == jule::Str("self", 4))) {
			_case_begin_1a5586c61:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1a5586cc7:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1a557ab23:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1a5382dd1_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1a557ab89:;
			{
				return static__1a62cddb4_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1a554c056:;
			{
				return static__1a62cd9c9_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1a5578a77:;
	};
}



inline jule::Str static__1a62d0767_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	_16517_obj+=jule::Str("_iter_begin_", 12);
	_16517_obj+=_1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1a62d0a0e_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	_17317_obj+=jule::Str("_iter_end_", 10);
	_17317_obj+=_1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1a62d0ca6_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	_18117_obj+=jule::Str("_iter_next_", 11);
	_18117_obj+=_1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1a62d104d_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	_18917_obj+=jule::Str("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1a62d12e5_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	_19717_obj+=jule::Str("_match_end_", 11);
	_19717_obj+=_1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1a62d158c_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	_20517_obj+=jule::Str("_case_begin_", 12);
	_20517_obj+=_1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a62cd512_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a65cc1b2_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a62d62b7_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a6641446_Str(_1a664115a_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a6641754_Equal(jule::Ptr<_1a664115a_customType> _self_, jule::Ptr<_1a5492287_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a664115a_customType _Src) {
	_Stream << _1a6641446_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a6641b0b_typeCoder> static__1a664214a_new(jule::Ptr<_1a663a60a_ObjectCoder>* _6224_oc) {
	jule::Ptr<_1a6641b0b_typeCoder> _6317_tc = jule::new_ptr<_1a6641b0b_typeCoder>(_1a6641b0b_typeCoder{._field_oc=(*(_6224_oc)), });;
	_6317_tc.get()._field_rc=static__1a6649905_new(&(_6317_tc));
	return _6317_tc;;
}



inline jule::Str _1a6642458_toType(_1a6641b0b_typeCoder* _self_, jule::Str _6929_id) {
	if ((_6929_id != jule::Str("uintptr", 7))) {
		_6929_id=_1a47aea5b_RealKindOf(_6929_id);
	};
	if (((97LL <= _6929_id[0LL]) && (_6929_id[0LL] <= 122LLU))) {
		_6929_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _6929_id);;
}



inline jule::Str _1a6642766_prim(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a5496ed4_Prim> _8023_p) {
	return _1a6642458_toType(_self_, _1a5497347_Str(_8023_p.ptr()));;
}



inline jule::Str _1a6642a74_tuple(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a549bc53_Tuple> _8528_t) {
	jule::Str _8617_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8528_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d099a8:;
		if (it != expr_end) {
			jule::Ptr<_1a5492287_TypeKind> _8721_tk = *it;
			{
				_8617_obj+=_1a6646eb8_kind(_self_, _8721_tk);
				_8617_obj+=jule::Str(",", 1);
			}
			_iter_next_1a8d099a8:;
			++it;
			goto _iter_begin_1a8d099a8;
		}
		_iter_end_1a8d099a8:;
	};
	(_8617_obj).mut_slice(0LL, (_8617_obj.len() - 1LL));;
	_8617_obj+=jule::Str(">", 1);
	return _8617_obj;;
}



inline jule::Str _1a6642d82_asSptr(_1a6641b0b_typeCoder* _self_, jule::Str _9725_elem) {
	jule::Str _9817_obj = jule::Str("jule::Ptr<", 10);;
	_9817_obj+=_9725_elem;
	_9817_obj+=jule::Str(">", 1);
	return _9817_obj;;
}



inline jule::Str _1a6643190_asPtr(_1a6641b0b_typeCoder* _self_, jule::Str _10524_elem) {
	return (_10524_elem + jule::Str("*", 1));;
}



inline jule::Str _1a664349d_sptr(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a549a768_Sptr> _11027_sptr) {
	return _1a6642d82_asSptr(_self_, _1a6646eb8_kind(_self_, _11027_sptr.get()._field_Elem));;
}



inline jule::Str _1a66437ab_ptr(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a549dccc_Ptr> _11526_p) {
	;
	if (_1a549e7a0_IsUnsafe(_11526_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12017_elem = _1a6646eb8_kind(_self_, _11526_p.get()._field_Elem);;
	_12017_elem+=jule::Str("*", 1);
	return _12017_elem;;
}



inline jule::Str _1a6643ab9_enumDecl(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a53b8521_Enum> _12631_e) {
	return _1a6646eb8_kind(_self_, _12631_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1a6643dc7_typeEnumDecl(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a53b9b1b_TypeEnum> _13135_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1a66441d5_asSlice(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a5492287_TypeKind> _13530_elem) {
	jule::Str _13617_obj = jule::Str("jule::Slice<", 12);;
	_13617_obj+=_1a6646eb8_kind(_self_, _13530_elem);
	_13617_obj+=jule::Str(">", 1);
	return _13617_obj;;
}



inline jule::Str _1a66444e3_slice(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a549b1c5_Slc> _14328_s) {
	return _1a66441d5_asSlice(_self_, _14328_s.get()._field_Elem);;
}



inline jule::Str _1a6644801_mapType(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a549c77b_Map> _14830_m) {
	jule::Str _14917_obj = jule::Str("jule::Map<", 10);;
	_14917_obj+=_1a6646eb8_kind(_self_, _14830_m.get()._field_Key);
	_14917_obj+=jule::Str(",", 1);
	_14917_obj+=_1a6646eb8_kind(_self_, _14830_m.get()._field_Val);
	_14917_obj+=jule::Str(">", 1);
	return _14917_obj;;
}



inline jule::Str _1a6644b0e_traitIdent(_1a6641b0b_typeCoder* _self_, jule::Str _15729_ident) {
	jule::Str _15817_obj = jule::Str("jule::Trait<", 12);;
	_15817_obj+=_15729_ident;
	_15817_obj+=jule::Str(">", 1);
	return _15817_obj;;
}



inline jule::Str _1a6644e1c_traitDecl(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a53b63cb_Trait> _16528_t) {
	return _1a6644b0e_traitIdent(_self_, static__1a62ce69a_traitDecl(_16528_t));;
}



inline jule::Str _1a664522a_structure(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a487d19b_Struct> _17028_s) {
	jule::Str _17117_rep = jule::Str();;
	if ((_17028_s.get()._field_CppLinked && (!(_1a664d772_hasDirective(&(_17028_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		_17117_rep+=jule::Str("struct ", 7);
	};
	_17117_rep+=static__1a62cebd9_structure(&(_17028_s));
	return _17117_rep;;
}



inline jule::Str _1a6645538_structureIns(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a487d575_StructIns> _18035_s) {
	if (_18035_s.get()._field_Decl.get()._field_CppLinked) {
		jule::Str _18221_ident = static__1a62cee81_structureIns(&(_18035_s));;
		if ((_18035_s.get()._field_Generics.len() > 0LL)) {
			_18221_ident+=jule::Str("<", 1);
			{
				auto expr = &(_18035_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a8d15e26:;
				if (it != expr_end) {
					jule::Ptr<_1a5490a5a_InsGeneric> _18529_g = *it;
					{
						_18221_ident+=_1a6646eb8_kind(_self_, _18529_g.get()._field_Kind);
						_18221_ident+=jule::Str(",", 1);
					}
					_iter_next_1a8d15e26:;
					++it;
					goto _iter_begin_1a8d15e26;
				}
				_iter_end_1a8d15e26:;
			};
			(_18221_ident).mut_slice(0LL, (_18221_ident.len() - 1LL));;
			_18221_ident+=jule::Str(">", 1);
		};
		jule::Ptr<_1a3c1d0ec_Directive> _19217_d = _1a664d3dc_findDirective(&(_18035_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19217_d != nullptr)) {
			(_18221_ident).buffer.insert(0, ((_1a66404ab_concatAllParts(_19217_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18221_ident;;
	};
	return static__1a62cee81_structureIns(&(_18035_s));;
}



inline jule::Str _1a6645846_array(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a549d370_Arr> _20228_a) {
	jule::Str _20317_obj = jule::Str("jule::Array<", 12);;
	_20317_obj+=_1a6646eb8_kind(_self_, _20228_a.get()._field_Elem);
	_20317_obj+=jule::Str(",", 1);
	_20317_obj+=_1a5382dd1_Itoa(_20228_a.get()._field_N);
	_20317_obj+=jule::Str(">", 1);
	return _20317_obj;;
}



inline jule::Str _1a6645e62_paramIns(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a53a62ab_ParamIns>* _22832_p) {
	jule::Str _22917_obj = jule::Str();;
	if ((*(_22832_p)).get()._field_Decl.get()._field_Variadic) {
		_22917_obj+=jule::Str("jule::Slice<", 12);
		_22917_obj+=_1a6646eb8_kind(_self_, (*(_22832_p)).get()._field_Kind);
		_22917_obj+=jule::Str(">", 1);
	} else {
		_22917_obj+=_1a6646eb8_kind(_self_, (*(_22832_p)).get()._field_Kind);
	};
	if ((*(_22832_p)).get()._field_Decl.get()._field_Reference) {
		_22917_obj+=jule::Str("*", 1);
	};
	return _22917_obj;;
}



inline void _1a664658e_funcInsResult(_1a6641b0b_typeCoder* _self_, jule::Str* _25837_s, jule::Ptr<_1a53a717a_FnIns>* _25850_f) {
	if (_1a53a493b_IsVoid((*(_25850_f)).get()._field_Decl.ptr())) {
		if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
			(*(_25837_s))+=jule::Str("jule::VoidExceptional", 21);
		} else {
			(*(_25837_s))+=jule::Str("void", 4);
		};
		return;;
	};
	if ((*(_25850_f)).get()._field_Decl.get()._field_Exceptional) {
		(*(_25837_s))+=jule::Str("jule::Exceptional<", 18);
		_1a664b72b_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
		(*(_25837_s))+=jule::Str(">", 1);
		return;;
	};
	_1a664b72b_codeMut1((*(_self_))._field_rc.ptr(), _25837_s, &((*(_25850_f)).get()._field_Result));
}



inline jule::Str _1a664689c_anonFunc(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a53a717a_FnIns> _27631_f) {
	if (((_27631_f.get()._field_Result != nullptr) && (_1a54962ad_Tup(_27631_f.get()._field_Result.ptr()) != nullptr))) {
		_1a63094b6_pushResultIns((*(_self_))._field_oc, &(_27631_f));
	};
	jule::Str _28017_decl = jule::Str();;
	_1a664658e_funcInsResult(_self_, &(_28017_decl), &(_27631_f));
	_28017_decl+=jule::Str("(", 1);
	if ((_27631_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27631_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a90e1454:;
			if (it != expr_end) {
				jule::Ptr<_1a53a62ab_ParamIns> _28425_param = *it;
				{
					if (_1a53a32b9_IsSelf(_28425_param.get()._field_Decl.ptr())) {
						goto _iter_next_1a90e1454;
					};
					_28017_decl+=_1a6645e62_paramIns(_self_, &(_28425_param));
					_28017_decl+=jule::Str(",", 1);
				}
				_iter_next_1a90e1454:;
				++it;
				goto _iter_begin_1a90e1454;
			}
			_iter_end_1a90e1454:;
		};
		(_28017_decl).mut_slice(0LL, (_28017_decl.len() - 1LL));;
	} else {
		_28017_decl+=jule::Str("void", 4);
	};
	_28017_decl+=jule::Str(")", 1);
	return _28017_decl;;
}



inline jule::Str _1a6646baa_func(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a53a717a_FnIns> _30027_f) {
	jule::Str _30117_obj = jule::Str("jule::Fn<", 9);;
	_30117_obj+=_1a664689c_anonFunc(_self_, _30027_f);
	_30117_obj+=jule::Str(">", 1);
	return _30117_obj;;
}



inline jule::Str _1a6646eb8_kind(_1a6641b0b_typeCoder* _self_, jule::Ptr<_1a5492287_TypeKind> _30827_k) {
	{
		
		if ((_1a5495a71_Struct(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4600:;
			{
				return _1a6645538_structureIns(_self_, _1a5495a71_Struct(_30827_k.ptr()));;
			}
		}
		else if (_1a5492e58_CppLinked(_30827_k.ptr())) {
			_case_begin_1a90e4677:;
			{
				return _30827_k.get()._field_CppIdent;;
			}
		}
		else if ((_1a549461e_Prim(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e46ee:;
			{
				return _1a6642766_prim(_self_, _1a549461e_Prim(_30827_k.ptr()));;
			}
		}
		else if ((_1a54962ad_Tup(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4776:;
			{
				return _1a6642a74_tuple(_self_, _1a54962ad_Tup(_30827_k.ptr()));;
			}
		}
		else if ((_1a5494883_Sptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e47ed:;
			{
				return _1a664349d_sptr(_self_, _1a5494883_Sptr(_30827_k.ptr()));;
			}
		}
		else if ((_1a5494ae7_Ptr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4875:;
			{
				return _1a66437ab_ptr(_self_, _1a5494ae7_Ptr(_30827_k.ptr()));;
			}
		}
		else if ((_1a5494d5b_Enum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e48ec:;
			{
				return _1a6643ab9_enumDecl(_self_, _1a5494d5b_Enum(_30827_k.ptr()));;
			}
		}
		else if ((_1a54950c0_TypeEnum(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4974:;
			{
				return _1a6643dc7_typeEnumDecl(_self_, _1a54950c0_TypeEnum(_30827_k.ptr()));;
			}
		}
		else if ((_1a5495598_Slc(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e49eb:;
			{
				return _1a66444e3_slice(_self_, _1a5495598_Slc(_30827_k.ptr()));;
			}
		}
		else if ((_1a5496049_Map(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4a73:;
			{
				return _1a6644801_mapType(_self_, _1a5496049_Map(_30827_k.ptr()));;
			}
		}
		else if ((_1a5495cd5_Trait(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4aea:;
			{
				return _1a6644e1c_traitDecl(_self_, _1a5495cd5_Trait(_30827_k.ptr()));;
			}
		}
		else if ((_1a5495334_Arr(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4b72:;
			{
				return _1a6645846_array(_self_, _1a5495334_Arr(_30827_k.ptr()));;
			}
		}
		else if ((_1a549580c_Fn(_30827_k.ptr()) != nullptr)) {
			_case_begin_1a90e4be9:;
			{
				return _1a6646baa_func(_self_, _1a549580c_Fn(_30827_k.ptr()));;
			}
		}
		_match_end_1a90e4424:;
	};
	{
		auto &_match_expr{ _30827_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1a90e4ca4:;
			{
				return _30827_k.get()._field_Kind.cast_ptr<_1a664115a_customType>(13).get()._field_kind;;
			}
		}
		else {
			_case_begin_1a90ebc89:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1a90eb7a0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a6641b0b_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a66493e9_resultCoder> static__1a6649905_new(jule::Ptr<_1a6641b0b_typeCoder>* _36224_tc) {
	return jule::new_ptr<_1a66493e9_resultCoder>(_1a66493e9_resultCoder{._field_tc=(*(_36224_tc))});;
}



inline void _1a6649c24_ptr(_1a66493e9_resultCoder* _self_, jule::Str* _36627_s, jule::Ptr<_1a549dccc_Ptr> _36639_p) {
	(*(_36627_s))+=jule::Str("p", 1);
	_1a664b40c_codeMut(_self_, _36627_s, &(_36639_p.get()._field_Elem));
}



inline void _1a664a043_sptr(_1a66493e9_resultCoder* _self_, jule::Str* _37128_s, jule::Ptr<_1a549a768_Sptr> _37140_p) {
	(*(_37128_s))+=jule::Str("x", 1);
	_1a664b40c_codeMut(_self_, _37128_s, &(_37140_p.get()._field_Elem));
}



inline void _1a664a362_mapType(_1a66493e9_resultCoder* _self_, jule::Str* _37631_s, jule::Ptr<_1a549c77b_Map> _37643_p) {
	(*(_37631_s))+=jule::Str("m", 1);
	_1a664b40c_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Key));
	_1a664b40c_codeMut(_self_, _37631_s, &(_37643_p.get()._field_Val));
}



inline void _1a664a681_slice(_1a66493e9_resultCoder* _self_, jule::Str* _38229_s, jule::Ptr<_1a549b1c5_Slc> _38241_slc) {
	(*(_38229_s))+=jule::Str("s", 1);
	_1a664b40c_codeMut(_self_, _38229_s, &(_38241_slc.get()._field_Elem));
}



inline void _1a664a9a0_arr(_1a66493e9_resultCoder* _self_, jule::Str* _38727_s, jule::Ptr<_1a549d370_Arr> _38739_arr) {
	(*(_38727_s))+=jule::Str("a", 1);
	(*(_38727_s))+=_1a5382b39_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38739_arr.get()._field_N)), 16LL);
	_1a664b40c_codeMut(_self_, _38727_s, &(_38739_arr.get()._field_Elem));
}



inline void _1a664acbe_func(_1a66493e9_resultCoder* _self_, jule::Str* _39328_s, jule::Ptr<_1a53a717a_FnIns> _39340_f) {
	(*(_39328_s))+=jule::Str("f", 1);
	{
		auto expr = &(_39340_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9103026:;
		if (it != expr_end) {
			jule::Ptr<_1a53a62ab_ParamIns> _39521_p = *it;
			{
				if (_39521_p.get()._field_Decl.get()._field_Reference) {
					(*(_39328_s))+=jule::Str("r", 1);
				};
				_1a664b40c_codeMut(_self_, _39328_s, &(_39521_p.get()._field_Kind));
			}
			_iter_next_1a9103026:;
			++it;
			goto _iter_begin_1a9103026;
		}
		_iter_end_1a9103026:;
	};
	if ((_39340_f.get()._field_Result != nullptr)) {
		_1a664b40c_codeMut(_self_, _39328_s, &(_39340_f.get()._field_Result));
	};
}



inline void _1a664b0dd_tup(_1a66493e9_resultCoder* _self_, jule::Str* _40627_s, jule::Ptr<_1a549bc53_Tuple> _40639_tup) {
	{
		auto expr = &(_40639_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9104b71:;
		if (it != expr_end) {
			jule::Ptr<_1a5492287_TypeKind> _40721_t = *it;
			{
				(*(_40627_s))+=jule::Str("__jule_tuple_", 13);
				_1a664b40c_codeMut(_self_, _40627_s, &(_40721_t));
			}
			_iter_next_1a9104b71:;
			++it;
			goto _iter_begin_1a9104b71;
		}
		_iter_end_1a9104b71:;
	};
}



inline void _1a664b40c_codeMut(_1a66493e9_resultCoder* _self_, jule::Str* _41331_s, jule::Ptr<_1a5492287_TypeKind>* _41344_t) {
	{
		auto &_match_expr{ (*(_41344_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1a9105ca4:;
			{
				_1a6649c24_ptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a549dccc_Ptr>(12));
			}
		}
		else if (_match_expr.type_is(true, 7)) {
			_case_begin_1a910605c:;
			{
				_1a664a043_sptr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a549a768_Sptr>(7));
			}
		}
		else if (_match_expr.type_is(true, 10)) {
			_case_begin_1a91060c3:;
			{
				_1a664a362_mapType(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a549c77b_Map>(10));
			}
		}
		else if (_match_expr.type_is(true, 8)) {
			_case_begin_1a9106139:;
			{
				_1a664a681_slice(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a549b1c5_Slc>(8));
			}
		}
		else if (_match_expr.type_is(true, 11)) {
			_case_begin_1a91061a0:;
			{
				_1a664a9a0_arr(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a549d370_Arr>(11));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a9106733:;
			{
				_1a664acbe_func(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a53a717a_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a9106799:;
			{
				jule::Ptr<_1a53b8521_Enum> _42817_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_1a53b8521_Enum>(3);;
				(*(_41331_s))+=static__1a62cd9c9_toOut(&(_42817_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42817_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a9106810:;
			{
				jule::Ptr<_1a53b9b1b_TypeEnum> _43117_te = (*(_41344_t)).get()._field_Kind.cast_ptr<_1a53b9b1b_TypeEnum>(4);;
				(*(_41331_s))+=static__1a62cd9c9_toOut(&(_43117_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43117_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a9106876:;
			{
				jule::Ptr<_1a487d575_StructIns> _43421_si = (*(_41344_t)).get()._field_Kind.cast_ptr<_1a487d575_StructIns>(0);;
				(*(_41331_s))+=static__1a62cee81_structureIns(&(_43421_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a91068dc:;
			{
				jule::Ptr<_1a53b63cb_Trait> _43721_trt = (*(_41344_t)).get()._field_Kind.cast_ptr<_1a53b63cb_Trait>(2);;
				(*(_41331_s))+=static__1a62ce69a_traitDecl(_43721_trt);
			}
		}
		else if (_match_expr.type_is(true, 6)) {
			_case_begin_1a9106953:;
			{
				(*(_41331_s))+=(*(_41344_t)).get()._field_Kind.cast_ptr<_1a5496ed4_Prim>(6).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 9)) {
			_case_begin_1a91069b9:;
			{
				_1a664b0dd_tup(_self_, _41331_s, (*(_41344_t)).get()._field_Kind.cast_ptr<_1a549bc53_Tuple>(9));
			}
		}
		else {
			_case_begin_1a9105ed5:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:444:13"));;
			}
		}
		_match_end_1a9105d3c:;
	};
}



inline void _1a664b72b_codeMut1(_1a66493e9_resultCoder* _self_, jule::Str* _44832_s, jule::Ptr<_1a5492287_TypeKind>* _44845_t) {
	jule::Ptr<_1a549bc53_Tuple> _44917_tup = _1a54962ad_Tup((*(_44845_t)).ptr());;
	if ((_44917_tup != nullptr)) {
		_1a664b0dd_tup(_self_, _44832_s, _44917_tup);
	} else {
		(*(_44832_s))+=_1a6646eb8_kind((*(_self_))._field_tc.ptr(), (*(_44845_t)));
	};
}



inline jule::Str _1a664ba06_code(_1a66493e9_resultCoder* _self_, jule::Ptr<_1a5492287_TypeKind>* _45728_t) {
	jule::Str _45817_s = jule::Str::alloc(0LL, 20LL);;
	_1a664b40c_codeMut(_self_, &(_45817_s), _45728_t);
	return _45817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a66493e9_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a9111672_Name(_1a9111298_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a91117a4_What(_1a9111298_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a91118d6_Reset(_1a9111298_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a9111a29_Short(_1a9111298_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9111298_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a9114a82_Name(_1a9114ee4_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a91152d0_What(_1a9114ee4_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a9115412_Reset(_1a9114ee4_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a9115544_Short(_1a9114ee4_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a9114ee4_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a9118349_Name(_1a91187ab_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a9118a97_What(_1a91187ab_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a9118bc9_Reset(_1a91187ab_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a9118d0b_Short(_1a91187ab_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a91187ab_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a911bb55_Name(_1a911c0b7_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a911c3a3_What(_1a911c0b7_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a911c4d5_Reset(_1a911c0b7_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a911c617_Short(_1a911c0b7_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a911c0b7_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a912041c_Name(_1a912087e_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a9120b6a_What(_1a912087e_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a9120c9c_Reset(_1a912087e_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a9120dce_Short(_1a912087e_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a912087e_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6699ba8_FlagSet> static__1a6699e94_New(void) {
	return jule::new_ptr<_1a6699ba8_FlagSet>(_1a6699ba8_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a6698239_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a6698239_CommonFlag> _1a669a428_FindFlag(_1a6699ba8_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a912ab64:;
		if (it != expr_end) {
			jule::Trait<_1a6698239_CommonFlag> _7221_flag = *it;
			{
				if ((_1a6698239_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a666855b_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1a912ab64:;
			++it;
			goto _iter_begin_1a912ab64;
		}
		_iter_end_1a912ab64:;
	};
	return nullptr;;
}



inline jule::Trait<_1a6698239_CommonFlag> _1a669a736_FindFlagShort(_1a6699ba8_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a912b291:;
		if (it != expr_end) {
			jule::Trait<_1a6698239_CommonFlag> _8221_flag = *it;
			{
				if ((_1a6698239_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a666868d_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1a912b291:;
			++it;
			goto _iter_begin_1a912b291;
		}
		_iter_end_1a912b291:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1a6698239_CommonFlag>> _1a669a99a_Flags(_1a6699ba8_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a669aca8_Parse(_1a6699ba8_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a669c381_argParser _11617_ap = _1a669c381_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a669d76c_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1a669ae84_Reset(_1a6699ba8_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a912d051:;
		if (it != expr_end) {
			jule::Trait<_1a6698239_CommonFlag> _12616_f = *it;
			{
				_1a6698239_CommonFlag_mptr_data[(_12616_f).type_offset]._1a6668946_Reset(_12616_f);
			}
			_iter_next_1a912d051:;
			++it;
			goto _iter_begin_1a912d051;
		}
		_iter_end_1a912d051:;
	};
}



inline jule::Ptr<_1a912087e_Flag> _1a91911a2_addFlagCommon(_1a6699ba8_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a91927e1:;
			{
				goto _match_end_1a919278b;
			}
		}
		_match_end_1a919278b:;
	};
	if ((_1a669a428_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a669a736_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a912087e_Flag> _14817_flag = jule::new_ptr<_1a912087e_Flag>(_1a912087e_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1a6698239_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1a911c0b7_Flag> _1a91999e6_addFlagCommon(_1a6699ba8_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a919b0d0:;
			{
				goto _match_end_1a919b036;
			}
		}
		_match_end_1a919b036:;
	};
	if ((_1a669a428_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a669a736_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + static_cast<jule::Str>(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a911c0b7_Flag> _14817_flag = jule::new_ptr<_1a911c0b7_Flag>(_1a911c0b7_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1a6698239_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1a918e139_AddVar(_1a6699ba8_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a912087e_Flag> _17617_flag = _1a91911a2_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1a91979b1_AddVar(_1a6699ba8_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a911c0b7_Flag> _17617_flag = _1a91999e6_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6699ba8_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cebd5440_Cmd> static__1cebd5891_New(jule::Str _2619_path) {
	return jule::new_ptr<_1cebd5440_Cmd>(_1cebd5440_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1cebd5a6c_Spawn(_1cebd5440_Cmd* _self_) {
	({
		auto except = _1cec1dd6e_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1cebd5c48_Kill(_1cebd5440_Cmd* _self_) {
	({
		auto except = _1cec1e04a_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1cebd5eac_Wait(_1cebd5440_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1cec1e2ae_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1cec1dd6e_spawn(_1cebd5440_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:79:13"));;
	};
	jule::Str _8113_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8213_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8213_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type131));
	};
	if ((_1e8585bd9_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
		_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type131));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a6854eea:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type131));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a6854e0c:;
			{
				_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				jule::Slice<jule::Str> _9721_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9721_args[0LL]=_8113_path;
				_9721_args=jule::append(_9721_args,(*(_self_))._field_Args);
				({
					auto except = _1cec1dae9_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_1cec1d8da_execvp(&(_8113_path), &(_9721_args));
				jule::Str _10217_code = _1cec1ace4_Itoa(static_cast<jule::I64>(_1e779e772_GetLastErrno()));;
				{
					_1e859947d_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), (&(_10217_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10217_code.len())));
				};
				_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				_1cec2049c_Exit(1LL);
			}
		}
		else {
			_case_begin_1a6852a97:;
			{
				_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				jule::Array<jule::U8,16> _10821_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10917_n = _1e8598c1e_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])), (&(_10821_buf[0LL])), 16LLU);;
				_1e8599093_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				if ((_10917_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11322_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1cebd6d48_AtoiBp((&(_10821_buf[0LL])), _10917_n);
						_11322_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_1cec1e9a7_processErrorFromCode(_11322_code), &__jule_any_type131));
				};
			}
		}
		_match_end_1a6852a42:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1cec1e04a_kill(_1cebd5440_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:121:13"));;
	};
	if ((kill((*(_self_))._field_attrs._field_pid, 1LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1cec1ebe9_getLastProcessError(), &__jule_any_type131));
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1cec1e2ae_wait(_1cebd5440_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:131:13"));;
	};
	jule::I64 _13317_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13317_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_1cec1ebe9_getLastProcessError(), &__jule_any_type131));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13317_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1cebd5440_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1a4ce7615_IR__jule_tuple_s_1ceb4952a_Log static__1a4ce95d4_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1a4ce7615_IR__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	jule::Ptr<_1a4d35e6c_JuleImporter> _2817_importer = static__1a4d1580e_New(_1a4d7cc94_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1a3c1be0e_Ast>> _2918_files;;
	jule::Slice<_1ceb4952a_Log> _2929_logs;;
	({
		__jule_tuple_sx_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d7bbc7_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53e574b_Package> _3918_pkg;;
	({
		__jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a54ae705_AnalyzePackage(_2918_files, jule::Trait<_1a53deb74_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1a4ce7615_IR> _4417_ir = jule::new_ptr<_1a4ce7615_IR>(_1a4ce7615_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1a4d099bd_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1a4d7ca96_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1a4ce7802_appendStructs(_1a4ce7615_IR* _self_, jule::Ptr<_1a53e574b_Package>* _5633_p, jule::Slice<jule::Ptr<_1a487d19b_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8898e1b:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8899757:;
					if (it != expr_end) {
						jule::Ptr<_1a487d19b_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_CppLinked))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_1a8899757:;
						++it;
						goto _iter_begin_1a8899757;
					}
					_iter_end_1a8899757:;
				};
			}
			_iter_next_1a8898e1b:;
			++it;
			goto _iter_begin_1a8898e1b;
		}
		_iter_end_1a8898e1b:;
	};
}



inline jule::Slice<jule::Ptr<_1a487d19b_Struct>> _1a4ce6a43_GetAllStructures(_1a4ce7615_IR* _self_) {
	jule::Slice<jule::Ptr<_1a487d19b_Struct>> _6917_buffer = nullptr;;
	_1a4ce7802_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8899603:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_CppLinked))) {
					_1a4ce7802_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1a8899603:;
			++it;
			goto _iter_begin_1a8899603;
		}
		_iter_end_1a8899603:;
	};
	return _6917_buffer;;
}



inline void _1a4d7c579_appendGlobals(_1a4ce7615_IR* _self_, jule::Ptr<_1a53e574b_Package>* _7933_p, jule::Slice<jule::Ptr<_1a5418939_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a889bd53:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a889c67d:;
					if (it != expr_end) {
						jule::Ptr<_1a5418939_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_CppLinked))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_1a889c67d:;
						++it;
						goto _iter_begin_1a889c67d;
					}
					_iter_end_1a889c67d:;
				};
			}
			_iter_next_1a889bd53:;
			++it;
			goto _iter_begin_1a889bd53;
		}
		_iter_end_1a889bd53:;
	};
}



inline jule::Slice<jule::Ptr<_1a5418939_Var>> _1a4d7c6ab_GetAllGlobals(_1a4ce7615_IR* _self_) {
	jule::Slice<jule::Ptr<_1a5418939_Var>> _9217_buffer = nullptr;;
	_1a4d7c579_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a889e075:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_CppLinked))) {
					_1a4d7c579_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1a889e075:;
			++it;
			goto _iter_begin_1a889e075;
		}
		_iter_end_1a889e075:;
	};
	return _9217_buffer;;
}



inline void _1a4d7c7dd_Order(_1a4ce7615_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1a4ce6a43_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1a4d7c6ab_GetAllGlobals(_self_);
	static__1a4d7e16e_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1a4d7e37d_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1a4ce7615_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a5d48159_ObjectDeadCode> static__1a5d48632_new(jule::Ptr<_1a4ce7615_IR>* _3424_ir) {
	return jule::new_ptr<_1a5d48159_ObjectDeadCode>(_1a5d48159_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1a88d6420_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53b63cb_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1a53b63cb_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a88d819c:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1a88d7db1:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88d8884:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a88d8884:;
			++it;
			_5213_i++;
			goto _iter_begin_1a88d8884;
		}
		_iter_end_1a88d8884:;
	};
	return false;;
}

inline jule::Bool _1a88db15b_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53a717a_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1a53a717a_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a88dd405:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1a88dd34a:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88ddbca:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a88ddbca:;
			++it;
			_5213_i++;
			goto _iter_begin_1a88ddbca;
		}
		_iter_end_1a88ddbca:;
	};
	return false;;
}

inline jule::Bool _1a88e3c13_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a487d575_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1a487d575_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a88ebb94:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1a88e6a90:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88ebad9:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a88ebad9:;
			++it;
			_5213_i++;
			goto _iter_begin_1a88ebad9;
		}
		_iter_end_1a88ebad9:;
	};
	return false;;
}

inline jule::Bool _1a88ee559_isLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a5418939_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1a5418939_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a89010c7:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1a8900ea6:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8901836:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a8901836:;
			++it;
			_5213_i++;
			goto _iter_begin_1a8901836;
		}
		_iter_end_1a8901836:;
	};
	return false;;
}



inline void _1a88d6772_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53b63cb_Trait> _6035_t) {
	{
		
{
			_case_begin_1a88da27b:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1a88d9e29:;
	};
}

inline void _1a88dbc50_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53a717a_FnIns> _6035_t) {
	{
		
{
			_case_begin_1a88e0c54:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1a88e09ce:;
	};
}

inline void _1a88e2eed_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a487d575_StructIns> _6035_t) {
	{
		
{
			_case_begin_1a88e46e7:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1a88e440b:;
	};
}

inline void _1a88ee8ab_pushLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a5418939_Var> _6035_t) {
	{
		
{
			_case_begin_1a89034e7:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1a890341a:;
	};
}



inline void _1a5d7a80c_setReferencesAsLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53aa0e5_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1a53aa711_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1a53aaa1e_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1a88d5023:;
					{
						jule::Ptr<_1a53b63cb_Trait> _8225_t = _7921_ref.cast_ptr<_1a53b63cb_Trait>(&__jule_any_type10);;
						if (_1a88d6420_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1a88d4550;
						};
						_1a88d6772_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a88d8444:;
							if (it != expr_end) {
								jule::Ptr<_1a53a44c9_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a88d6cd3:;
										if (it != expr_end) {
											jule::Ptr<_1a53a717a_FnIns> _8833_mins = *it;
											{
												if (_1a88db15b_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1a88d6cd3;
												};
												_1a88dbc50_pushLive(_self_, _8833_mins);
												_1a5d7a80c_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1a88d6cd3:;
											++it;
											goto _iter_begin_1a88d6cd3;
										}
										_iter_end_1a88d6cd3:;
									};
								}
								_iter_next_1a88d8444:;
								++it;
								goto _iter_begin_1a88d8444;
							}
							_iter_end_1a88d8444:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1a88d5089:;
					{
						jule::Ptr<_1a53a717a_FnIns> _9725_f = _7921_ref.cast_ptr<_1a53a717a_FnIns>(&__jule_any_type7);;
						if (_1a88db15b_isLive(_self_, &(_9725_f))) {
							goto _match_end_1a88d51aa;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1a88e3c13_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1a88e2eed_pushLive(_self_, _9725_f.get()._field_Owner);
								_1a5d7a80c_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1a88dbc50_pushLive(_self_, _9725_f);
						_1a5d7a80c_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1a88d52ba:;
					{
						jule::Ptr<_1a5418939_Var> _11025_v = _7921_ref.cast_ptr<_1a5418939_Var>(&__jule_any_type8);;
						if (_1a88ee559_isLive(_self_, &(_11025_v))) {
							goto _match_end_1a88d51aa;
						};
						_1a88ee8ab_pushLive(_self_, _11025_v);
						_1a5d7a80c_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1a88d5331:;
					{
						jule::Ptr<_1a487d575_StructIns> _11725_s = _7921_ref.cast_ptr<_1a487d575_StructIns>(&__jule_any_type9);;
						if (_1a88e3c13_isLive(_self_, &(_11725_s))) {
							goto _match_end_1a88d51aa;
						};
						_1a88e2eed_pushLive(_self_, _11725_s);
						_1a5d7a80c_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a890662c:;
							if (it != expr_end) {
								jule::Ptr<_1a53a44c9_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a8906d25:;
										if (it != expr_end) {
											jule::Ptr<_1a53a717a_FnIns> _12433_mins = *it;
											{
												if (_1a88db15b_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1a8906d25;
												};
												_1a88dbc50_pushLive(_self_, _12433_mins);
												_1a5d7a80c_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1a8906d25:;
											++it;
											goto _iter_begin_1a8906d25;
										}
										_iter_end_1a8906d25:;
									};
								}
								_iter_next_1a890662c:;
								++it;
								goto _iter_begin_1a890662c;
							}
							_iter_end_1a890662c:;
						};
					}
				}
				_match_end_1a88d51aa:;
			};
		}
	_iter_next_1a88d4550:;
	}
	_iter_end_1a88d4550:;;
}



inline void _1a5d7aa82_inits(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53e574b_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88d4929:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8909388:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _13825_f = *it;
						{
							if ((_13825_f.get()._field_Ident == jule::Str("init", 4))) {
								jule::Ptr<_1a53a717a_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1a5d7a80c_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1a8909388:;
						++it;
						goto _iter_begin_1a8909388;
					}
					_iter_end_1a8909388:;
				};
			}
			_iter_next_1a88d4929:;
			++it;
			goto _iter_begin_1a88d4929;
		}
		_iter_end_1a88d4929:;
	};
}



inline void _1a5d7ad07_collectLivePackage(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53e574b_Package>* _14843_pkg) {
	_1a5d7aa82_inits(_self_, _14843_pkg);
	if (_1e7711717_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a890b753:;
			if (it != expr_end) {
				jule::Ptr<_1a54614cb_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a890c07d:;
						if (it != expr_end) {
							jule::Ptr<_1a53a44c9_Fn> _15529_f = *it;
							{
								if (_1a5d7cd1a_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1a53a717a_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1a5d7a80c_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1a890c07d:;
							++it;
							goto _iter_begin_1a890c07d;
						}
						_iter_end_1a890c07d:;
					};
				}
				_iter_next_1a890b753:;
				++it;
				goto _iter_begin_1a890b753;
			}
			_iter_end_1a890b753:;
		};
	};
}



inline void _1a5d7aed3_collectLive(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a890b70e:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_CppLinked))) {
					_1a5d7ad07_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1a890b70e:;
			++it;
			goto _iter_begin_1a890b70e;
		}
		_iter_end_1a890b70e:;
	};
	_1a5d7ad07_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1a53a44c9_Fn> _17517_main = _1a53e7000_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1a53a717a_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1a5d7a80c_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1a5d7b258_removeDeadGlobals(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a5418939_Var>>* _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1a5418939_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1a88ee559_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1a8a57cbc;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1a8a57cbc:;
	}
	_iter_end_1a8a57cbc:;;
}



inline void _1a5d7b4cd_removeDeadFns(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a53a44c9_Fn>>* _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1a53a44c9_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a53a717a_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1a88db15b_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1a8a5be58;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1a8a5be58:;
			}
			_iter_end_1a8a5be58:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1a8a5a363;
			};
			(_19417_i)++;
		}
	_iter_next_1a8a5a363:;
	}
	_iter_end_1a8a5a363:;;
}



inline void _1a5d7b753_removeDeadStructs(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a487d19b_Struct>>* _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1a487d19b_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1a487d575_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1a5d7b4cd_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1a88e3c13_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1a8a60e7e;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1a8a60e7e:;
			}
			_iter_end_1a8a60e7e:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1a8a5ed5c;
			};
			(_21517_i)++;
		}
	_iter_next_1a8a5ed5c:;
	}
	_iter_end_1a8a5ed5c:;;
}



inline void _1a5d7b9c8_removeDeadTraits(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1a53b63cb_Trait>>* _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1a53b63cb_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1a88d6420_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1a8a63679;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1a487d19b_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1a8a653d4;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1a8a653d4:;
			}
			_iter_end_1a8a653d4:;;
			(_23717_i)++;
		}
	_iter_next_1a8a63679:;
	}
	_iter_end_1a8a63679:;;
}



inline void _1a5d7bc4d_removeDeadsFile(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a54614cb_SymbolTable>* _25740_file) {
	_1a5d7b4cd_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1a5d7b753_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1a5d7b9c8_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1a5d7b258_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1a5d7bec3_removeDeadsPackage(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_, jule::Ptr<_1a53e574b_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a6987d:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _26521_file = *it;
			{
				_1a5d7bc4d_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1a8a6987d:;
			++it;
			goto _iter_begin_1a8a6987d;
		}
		_iter_end_1a8a6987d:;
	};
}



inline void _1a5d7c19e_removeDeads(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a6a74c:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_CppLinked))) {
					_1a5d7bec3_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1a8a6a74c:;
			++it;
			goto _iter_begin_1a8a6a74c;
		}
		_iter_end_1a8a6a74c:;
	};
	_1a5d7bec3_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a5d7c37a_elimanate(jule::Ptr<_1a5d48159_ObjectDeadCode> _self_) {
	_1a5d7aed3_collectLive(_self_);
	_1a5d7c19e_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d48159_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a484cd5d_Str(_1a487d575_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_25017_kind+=jule::Str("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7789a11:;
			if (it != expr_end) {
				jule::Ptr<_1a5490a5a_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1a5492683_Str((*(_25420_g)).get()._field_Kind.ptr());
					_25017_kind+=jule::Str(",", 1);
				}
				_iter_next_1a7789a11:;
				++it;
				goto _iter_begin_1a7789a11;
			}
			_iter_end_1a7789a11:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		_25017_kind+=jule::Str("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1a4853dca_Equal(jule::Ptr<_1a487d575_StructIns> _self_, jule::Ptr<_1a5492287_TypeKind> _26521_other) {
	jule::Ptr<_1a487d575_StructIns> _26613_s = _1a5495a71_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1a5492991_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1a778d0ca:;
	}
	_iter_end_1a778d0ca:;;
	return true;;
}



inline jule::Bool _1a4855030_Same(_1a487d575_StructIns* _self_, jule::Ptr<_1a487d575_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7790462:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1a5490a5a_InsGeneric> *_29716_g = it;
			{
				if ((!(_1a5492991_Equal((*(_29716_g)).get()._field_Kind, _29319_s.get()._field_Generics[_29713_i].get()._field_Kind)))) {
					return false;;
				};
			}
			_iter_next_1a7790462:;
			++it;
			_29713_i++;
			goto _iter_begin_1a7790462;
		}
		_iter_end_1a7790462:;
	};
	return true;;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a4857384_FindMethod(_1a487d575_StructIns* _self_, jule::Str _30729_ident, jule::Bool _30741_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7791d37:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _30821_f = *it;
			{
				if (((_30821_f.get()._field_Statically == _30741_statically) && (_30821_f.get()._field_Ident == _30729_ident))) {
					return _30821_f;;
				};
			}
			_iter_next_1a7791d37:;
			++it;
			goto _iter_begin_1a7791d37;
		}
		_iter_end_1a7791d37:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a487d388_FieldIns> _1a48586a4_FindField(_1a487d575_StructIns* _self_, jule::Str _31828_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7793003:;
		if (it != expr_end) {
			jule::Ptr<_1a487d388_FieldIns> _31921_f = *it;
			{
				if ((_31921_f.get()._field_Decl.get()._field_Ident == _31828_ident)) {
					return _31921_f;;
				};
			}
			_iter_next_1a7793003:;
			++it;
			goto _iter_begin_1a7793003;
		}
		_iter_end_1a7793003:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5418939_Var> _1a483a620_FindStatic(_1a487d575_StructIns* _self_, jule::Str _32929_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7793575:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _33021_v = *it;
			{
				if ((_33021_v.get()._field_Ident == _32929_ident)) {
					return _33021_v;;
				};
			}
			_iter_next_1a7793575:;
			++it;
			goto _iter_begin_1a7793575;
		}
		_iter_end_1a7793575:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a487d575_StructIns _Src) {
	_Stream << _1a484cd5d_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a663a60a_ObjectCoder> static__1a62d57a0_New(jule::Ptr<_1a4ce7615_IR>* _8624_ir, _1a65cc1b2_SerializationInfo _8633_info) {
	jule::Ptr<_1a663a60a_ObjectCoder> _8717_oc = jule::new_ptr<_1a663a60a_ObjectCoder>(_1a663a60a_ObjectCoder{._field_ir=(*(_8624_ir)), ._field_info=_8633_info, });;
	_8717_oc.get()._field_ec=static__1ced52964_new(&(_8717_oc));
	_8717_oc.get()._field_sc=static__1cec72db2_new(&(_8717_oc));
	_8717_oc.get()._field_tc=static__1a664214a_new(&(_8717_oc));
	_8717_oc.get()._field_dc=static__1a62c9871_new(_8717_oc);
	return _8717_oc;;
}



inline void _1a6305b88_write(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Str _9825_s) {
	_self_.get()._field_Obj+=_9825_s;
}



inline void _1a661126d_addIndent(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer+=jule::Str("\t", 1);
}



inline void _1a661178a_doneIndent(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1a6614cdd_indent(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1a661acc2_findAnyType(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a5492287_TypeKind>* _11736_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5643757:;
		if (it != expr_end) {
			jule::I64 _11814_i = it - expr->begin();
			jule::Ptr<_1a5492287_TypeKind> _11821_at = *it;
			{
				if (_1a5492991_Equal(_11821_at, (*(_11736_t)))) {
					return _11814_i;;
				};
			}
			_iter_next_1a5643757:;
			++it;
			_11814_i++;
			goto _iter_begin_1a5643757;
		}
		_iter_end_1a5643757:;
	};
	return -1LL;;
}



inline jule::I64 _1a630a286_pushAnyType(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a5492287_TypeKind>* _12636_t) {
	jule::I64 _12717_i = _1a661acc2_findAnyType(_self_, _12636_t);;
	if ((_12717_i != -1LL)) {
		return _12717_i;;
	};
	_12717_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push((*(_12636_t)));;
	jule::Str _13313_si = _1a5382dd1_Itoa(_12717_i);;
	if ((_1a5494883_Sptr((*(_12636_t)).ptr()) != nullptr)) {
		jule::Str _13517_elem_kind = _1a6646eb8_kind(_self_.get()._field_tc.ptr(), _1a5494883_Sptr((*(_12636_t)).ptr()).get()._field_Elem);;
		jule::Str _13617_kind = _1a6642d82_asSptr(_self_.get()._field_tc.ptr(), _13517_elem_kind);;
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_13517_elem_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_13617_kind;
		_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _16217_comparable = _1a5493695_Comparable((*(_12636_t)).ptr());;
		jule::Str _16317_kind = _1a6646eb8_kind(_self_.get()._field_tc.ptr(), (*(_12636_t)));;
		if ((_16317_kind == jule::Str("[<unimplemented_type_kind>]", 27))) {
			jule::outln(_1a5492683_Str((*(_12636_t)).ptr()));
		};
		_self_.get()._field_anyObj+=jule::Str("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str(">().dealloc(); }\n", 17);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(void *alloc, void *other) noexcept { return *static_cast<", 61);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(alloc) == *static_cast<", 26);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str("*>(other); }\n", 13);
		};
		_self_.get()._field_anyObj+=jule::Str("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*static_cast<const ", 77);
		_self_.get()._field_anyObj+=_16317_kind;
		_self_.get()._field_anyObj+=jule::Str("*>(alloc)); }\n", 14);
		_self_.get()._field_anyObj+=jule::Str("struct jule::Any::Type ", 23);
		_self_.get()._field_anyObj+=jule::Str("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_dealloc, ", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq, ", 5);
		};
		_self_.get()._field_anyObj+=jule::Str(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_13313_si;
		_self_.get()._field_anyObj+=jule::Str("_to_str};\n", 10);
		if (_16217_comparable) {
			_self_.get()._field_anyObj+=jule::Str("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_16317_kind;
			_self_.get()._field_anyObj+=jule::Str(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_13313_si;
			_self_.get()._field_anyObj+=jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _12717_i;;
}



inline void _1a63094b6_pushResultIns(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53a717a_FnIns>* _22538_f) {
	jule::Str _22613_s = _1a664ba06_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_22538_f)).get()._field_Result));;
	jule::Bool _22717_ok = false;;
	_self_.get()._field_resultMap.lookup(_22613_s, nullptr, &(_22717_ok));
	if (_22717_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_22613_s]=false;
	jule::Str _23217_obj = jule::Str::alloc(0LL, 128LL);;
	_23217_obj+=jule::Str("struct ", 7);
	_23217_obj+=_22613_s;
	_23217_obj+=jule::Str(" {\n", 3);
	{
		auto expr = &(_1a54962ad_Tup((*(_22538_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5656528:;
		if (it != expr_end) {
			jule::I64 _23614_i = it - expr->begin();
			jule::Ptr<_1a5492287_TypeKind> _23621_t = *it;
			{
				_23217_obj+=jule::Str("\t", 1);
				_23217_obj+=_1a6646eb8_kind(_self_.get()._field_tc.ptr(), _23621_t);
				_23217_obj+=jule::Str(" ", 1);
				_23217_obj+=jule::Str("__jule_result_arg", 17);
				_23217_obj+=_1a5382dd1_Itoa(_23614_i);
				_23217_obj+=jule::Str(";\n", 2);
			}
			_iter_next_1a5656528:;
			++it;
			_23614_i++;
			goto _iter_begin_1a5656528;
		}
		_iter_end_1a5656528:;
	};
	_23217_obj+=jule::Str("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_23217_obj);;
}



inline void _1a6613737_pushResult(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53a44c9_Fn>* _24835_f) {
	if ((_1a53a493b_IsVoid((*(_24835_f)).ptr()) || ((*(_24835_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _25217_n = (*(_24835_f)).get()._field_Instances.len();;
	if (((*(_24835_f)).get()._field_Generics.len() == 0LL)) {
		_25217_n=1LL;
	};
	{
		auto expr = (*(_24835_f)).get()._field_Instances.slice(0LL, _25217_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a5659e77:;
		if (it != expr_end) {
			jule::Ptr<_1a53a717a_FnIns> _25621_ins = *it;
			{
				_1a63094b6_pushResultIns(_self_, &(_25621_ins));
			}
			_iter_next_1a5659e77:;
			++it;
			goto _iter_begin_1a5659e77;
		}
		_iter_end_1a5659e77:;
	};
}



inline jule::I64 _1a62d6020_findTypeOffset(_1a663a60a_ObjectCoder* _self_, jule::Ptr<_1a53b63cb_Trait> _26129_t, jule::Ptr<_1a5492287_TypeKind> _26144_k) {
	if ((_26129_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1a487d575_StructIns> _26517_s = nullptr;;
	if ((_1a5494883_Sptr(_26144_k.ptr()) != nullptr)) {
		_26144_k=_1a5494883_Sptr(_26144_k.ptr()).get()._field_Elem;
	};
	if ((_1a5495a71_Struct(_26144_k.ptr()) == nullptr)) {
		return -1LL;;
	};
	_26517_s=_1a5495a71_Struct(_26144_k.ptr());
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a565cb6c:;
		if (it != expr_end) {
			jule::Ptr<_1a62d62b7_traitHash> *_27316_hash = it;
			{
				if ((((*(_27316_hash)).get()._field_t == _26129_t) && ((*(_27316_hash)).get()._field_s == _26517_s))) {
					return (*(_27316_hash)).get()._field_i;;
				};
			}
			_iter_next_1a565cb6c:;
			++it;
			goto _iter_begin_1a565cb6c;
		}
		_iter_end_1a565cb6c:;
	};
	return -1LL;;
}



inline void _1a663ac04_locInfo(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1ceee8973_Token>* _28228_t) {
	jule::Str *_28314_loc = &((*(_28228_t)).get()._field_File.get()._field_Path);;
	if (_1e7712174_Production) {
		{
			
			if (_1ceaa4a18_HasPrefix((*(_28314_loc)), _1ceb54898_PathStdlib)) {
				_case_begin_1a5660598:;
				{
					_1a6305b88_write(_self_, _1a62c752d_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)).slice((_1e86d6d29_Dir(_1ceb54898_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_1ceaa4a18_HasPrefix((*(_28314_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1a565ee8d:;
				{
					_1a6305b88_write(_self_, _1a62c752d_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)).slice((_1e86d6d29_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1a565eae7:;
				{
					_1a6305b88_write(_self_, _1a62c752d_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)))));
				}
			}
			_match_end_1a565ea2b:;
		};
	} else {
		_1a6305b88_write(_self_, _1a62c752d_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_28314_loc)))));
	};
	_1a6305b88_write(_self_, jule::Str(":", 1));
	_1a6305b88_write(_self_, _1a5382dd1_Itoa((*(_28228_t)).get()._field_Row));
	_1a6305b88_write(_self_, jule::Str(":", 1));
	_1a6305b88_write(_self_, _1a5382dd1_Itoa((*(_28228_t)).get()._field_Column));
}



inline void _1a663ad36_head(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a66337e0_Time _30913_time = static__1a6633d84_Now();;
	_1a663314c_AbsTime _31013_abs = _1a66354c3_Abs(&_30913_time);;
	_1a6305b88_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a6305b88_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a6305b88_write(_self_, jule::Str("jule0.0.13 @master", 18));
	_1a6305b88_write(_self_, jule::Str("\n", 1));
	_1a6305b88_write(_self_, jule::Str("// Date: ", 9));
	_1a6305b88_write(_self_, _1a53827a4_FmtUint(_31013_abs._field_Day, 10LL));
	_1a6305b88_write(_self_, jule::Str("/", 1));
	_1a6305b88_write(_self_, _1a53827a4_FmtUint(_31013_abs._field_Month, 10LL));
	_1a6305b88_write(_self_, jule::Str("/", 1));
	_1a6305b88_write(_self_, _1a53827a4_FmtUint(_31013_abs._field_Year, 10LL));
	_1a6305b88_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a6305b88_write(_self_, _self_.get()._field_info._field_Compiler);
	_1a6305b88_write(_self_, jule::Str(" ", 1));
	_1a6305b88_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	if (_1e7712174_Production) {
		_1a6305b88_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1e77119d1_RC))) {
		_1a6305b88_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1e7711daa_Safety))) {
		_1a6305b88_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a663ae68_links(_self_);
	_1a6305b88_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a6305b88_write(_self_, _1cebb0d11_PathApi);
	_1a6305b88_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a663ae68_links(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a566a9d2:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _34716_used = *it;
			{
				{
					
					if ((!(_34716_used.get()._field_CppLinked))) {
						_case_begin_1a566b51b:;
						{
							goto _iter_next_1a566a9d2;
						}
					}
					else if (_1ceb3c452_IsStdHeaderPath(_34716_used.get()._field_Path)) {
						_case_begin_1a566b593:;
						{
							_1a6305b88_write(_self_, jule::Str("#include ", 9));
							_1a6305b88_write(_self_, _34716_used.get()._field_Path);
							_1a6305b88_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1ceb3c672_IsValidHeaderExt(_1e86d4783_Ext(_34716_used.get()._field_Path))) {
						_case_begin_1a566b61a:;
						{
							_1a6305b88_write(_self_, jule::Str("#include \"", 10));
							_1a6305b88_write(_self_, _34716_used.get()._field_Path);
							_1a6305b88_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1a566b3ea:;
				};
			}
			_iter_next_1a566a9d2:;
			++it;
			goto _iter_begin_1a566a9d2;
		}
		_iter_end_1a566a9d2:;
	};
}



inline void _1a663b09a_prepareStructure(_1a663a60a_ObjectCoder* _self_, jule::Ptr<_1a487d19b_Struct>* _36340_s) {
	{
		auto expr = &((*(_36340_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a566b21e:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _36421_ins = *it;
			{
				{
					auto expr = &(_36421_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a566e464:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _36525_m = *it;
						{
							if (_36525_m.get()._field_Statically) {
								goto _iter_next_1a566e464;
							};
							{
								auto expr = &(_36525_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a56701bd:;
								if (it != expr_end) {
									jule::Ptr<_1a53a717a_FnIns> _36929_mins = *it;
									{
										jule::Ptr<_1a53a62ab_ParamIns> _37029_p = _36929_mins.get()._field_Params[0LL];;
										if ((!(_1a53a352d_IsRef(_37029_p.get()._field_Decl.ptr())))) {
											_37029_p.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a664115a_customType>(_1a664115a_customType{._field_kind=_1a6643190_asPtr((*(_self_))._field_tc.ptr(), _1a6646eb8_kind((*(_self_))._field_tc.ptr(), _37029_p.get()._field_Kind))}), 13)});
										} else {
											_37029_p.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a664115a_customType>(_1a664115a_customType{._field_kind=_1a6646eb8_kind((*(_self_))._field_tc.ptr(), _37029_p.get()._field_Kind)}), 13)});
										};
									}
									_iter_next_1a56701bd:;
									++it;
									goto _iter_begin_1a56701bd;
								}
								_iter_end_1a56701bd:;
							};
						}
						_iter_next_1a566e464:;
						++it;
						goto _iter_begin_1a566e464;
					}
					_iter_end_1a566e464:;
				};
			}
			_iter_next_1a566b21e:;
			++it;
			goto _iter_begin_1a566b21e;
		}
		_iter_end_1a566b21e:;
	};
}



inline void _1a663b1cc_prepareStructures(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a566e3a9:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _39021_s = *it;
			{
				if ((_39021_s.get()._field_Token != nullptr)) {
					_1a663b09a_prepareStructure(_self_.ptr(), &(_39021_s));
				};
			}
			_iter_next_1a566e3a9:;
			++it;
			goto _iter_begin_1a566e3a9;
		}
		_iter_end_1a566e3a9:;
	};
}



inline void _1a663b30e_iterPackages(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)> _39732_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5673b50:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _39821_used = *it;
			{
				if ((!(_39821_used.get()._field_CppLinked))) {
					_39732_f(&(_39821_used.get()._field_Package));
				};
			}
			_iter_next_1a5673b50:;
			++it;
			goto _iter_begin_1a5673b50;
		}
		_iter_end_1a5673b50:;
	};
	_39732_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a663b441_buildTraitMap(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b30e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>([=](jule::Ptr<_1a53e574b_Package>* _40735_pkg) mutable -> void {
		_1a66401c0_iterFiles(_40735_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>([=](jule::Ptr<_1a54614cb_SymbolTable>* _40836_file) mutable -> void {
			{
				auto expr = &((*(_40836_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a5676d84:;
				if (it != expr_end) {
					jule::Ptr<_1a53b63cb_Trait> _40929_t = *it;
					{
						if ((_40929_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_40929_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a62d62b7_traitHash>(_1a62d62b7_traitHash{._field_t=_40929_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1a5676d84;
						};
						jule::I64 _42129_i = 0LL;;
						{
							auto expr = &(_40929_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a5677626:;
							if (it != expr_end) {
								jule::Ptr<_1a487d19b_Struct> _42233_s = *it;
								{
									{
										auto expr = &(_42233_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a5679606:;
										if (it != expr_end) {
											jule::Ptr<_1a487d575_StructIns> _42337_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1a62d62b7_traitHash>(_1a62d62b7_traitHash{._field_t=_40929_t, ._field_s=_42337_ins, ._field_i=_42129_i}));;
												(_42129_i)++;
											}
											_iter_next_1a5679606:;
											++it;
											goto _iter_begin_1a5679606;
										}
										_iter_end_1a5679606:;
									};
								}
								_iter_next_1a5677626:;
								++it;
								goto _iter_begin_1a5677626;
							}
							_iter_end_1a5677626:;
						};
					}
					_iter_next_1a5676d84:;
					++it;
					goto _iter_begin_1a5676d84;
				}
				_iter_end_1a5676d84:;
			};
		}));
	}));
}



inline void _1a663b573_traitDecls(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b30e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>([=](jule::Ptr<_1a53e574b_Package>* _43835_pkg) mutable -> void {
		_1a66401c0_iterFiles(_43835_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>([=](jule::Ptr<_1a54614cb_SymbolTable>* _43936_file) mutable -> void {
			{
				auto expr = &((*(_43936_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a567b6a2:;
				if (it != expr_end) {
					jule::Ptr<_1a53b63cb_Trait> _44029_t = *it;
					{
						if ((_44029_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a6614cdd_indent(_self_);
						_1a6305b88_write(_self_, jule::Str("struct ", 7));
						_1a6305b88_write(_self_, static__1a62ce69a_traitDecl(_44029_t));
						_1a6305b88_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1a567b6a2:;
					++it;
					goto _iter_begin_1a567b6a2;
				}
				_iter_end_1a567b6a2:;
			};
		}));
	}));
}



inline void _1a663b6a5_structurePlainDecl(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d19b_Struct>* _45343_s) {
	{
		auto expr = &((*(_45343_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56794e6:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _45421_ins = *it;
			{
				_1a6305b88_write(_self_, jule::Str("struct ", 7));
				_1a6305b88_write(_self_, static__1a62cee81_structureIns(&(_45421_ins)));
				_1a6305b88_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a56794e6:;
			++it;
			goto _iter_begin_1a56794e6;
		}
		_iter_end_1a56794e6:;
	};
}



inline void _1a663b7d7_structurePlainDecls(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a567e595:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _46221_s = *it;
			{
				if ((_46221_s.get()._field_Token != nullptr)) {
					_1a663b6a5_structurePlainDecl(_self_, &(_46221_s));
				};
			}
			_iter_next_1a567e595:;
			++it;
			goto _iter_begin_1a567e595;
		}
		_iter_end_1a567e595:;
	};
}



inline void _1a663b919_fieldDecl(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d388_FieldIns>* _46934_f) {
	_1a6305b88_write(_self_, _1a6646eb8_kind(_self_.get()._field_tc.ptr(), (*(_46934_f)).get()._field_Kind));
	_1a6305b88_write(_self_, jule::Str(" ", 1));
	_1a6305b88_write(_self_, static__1a62d0228_field(&((*(_46934_f)).get()._field_Decl)));
	if (((*(_46934_f)).get()._field_Default == nullptr)) {
		if (_1a664da19_shouldInitialized(&((*(_46934_f)).get()._field_Kind))) {
			_1a6305b88_write(_self_, jule::Str(" = ", 3));
			_1a62c6b48_initExpr(_self_.get()._field_ec, (*(_46934_f)).get()._field_Kind);
		};
	} else {
		_1a6305b88_write(_self_, jule::Str(" = ", 3));
		_1a572753e_possibleRefExpr(_self_.get()._field_ec, (*(_46934_f)).get()._field_Default.get()._field_Model);
	};
	_1a6305b88_write(_self_, jule::Str(";", 1));
}



inline void _1a663ba4b_structureDestructor(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _48744_s) {
	;
	jule::Ptr<_1a53a44c9_Fn> _49013_disposeMethod = _1a4857384_FindMethod((*(_48744_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _49117_disposed = static__1a5419d58_Dispose(_49013_disposeMethod);;
	if ((!(_49117_disposed))) {
		return;;
	};
	_1a6305b88_write(_self_, jule::Str("~", 1));
	_1a6305b88_write(_self_, static__1a62cee81_structureIns(_48744_s));
	_1a6305b88_write(_self_, jule::Str("(void) { ", 9));
	_1a6305b88_write(_self_, static__1a62ce15b_func(&(_49013_disposeMethod)));
	_1a6305b88_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a663bb7d_structureDeriveDefsDecls(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _50345_s) {
	if (_1a484320a_IsDerives((*(_50345_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, _1a62c9b7e_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_50345_s)).get()._field_Decl)));
		_1a6305b88_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a663bcb0_structureOperatorEq(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Str* _51140_ident, jule::Ptr<_1a487d575_StructIns>* _51157_s) {
	if ((!((*(_51157_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_51157_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1a663c024_structureOperator(_self_, _51140_ident, &((*(_51157_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1a6614cdd_indent(_self_);
	if (_1b56a492e_Inline) {
		_1a6305b88_write(_self_, jule::Str("inline ", 7));
	};
	_1a6305b88_write(_self_, jule::Str("bool operator==(", 16));
	_1a6305b88_write(_self_, (*(_51140_ident)));
	_1a6305b88_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_51157_s)).get()._field_Fields.len() > 0LL)) {
		_1a661126d_addIndent(_self_);
		_1a6305b88_write(_self_, jule::Str("\n", 1));
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, jule::Str("return ", 7));
		_1a661126d_addIndent(_self_);
		jule::Bool _53421_writed = false;;
		{
			auto expr = &((*(_51157_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a568c273:;
			if (it != expr_end) {
				jule::Ptr<_1a487d388_FieldIns> _53525_f = *it;
				{
					jule::Ptr<_1a487d575_StructIns> _53721_strct = _1a5495a71_Struct(_53525_f.get()._field_Kind.ptr());;
					if ((((_53721_strct != nullptr) && (_53721_strct.get()._field_Decl != nullptr)) && _53721_strct.get()._field_Decl.get()._field_CppLinked)) {
						goto _iter_next_1a568c273;
					};
					if (_53421_writed) {
						_1a6305b88_write(_self_, jule::Str(" &&", 3));
					};
					_53421_writed=true;
					_1a6305b88_write(_self_, jule::Str("\n", 1));
					_1a6614cdd_indent(_self_);
					_1a6305b88_write(_self_, jule::Str("this->", 6));
					jule::Str _54821_fIdent = static__1a62d0228_field(&(_53525_f.get()._field_Decl));;
					_1a6305b88_write(_self_, _54821_fIdent);
					_1a6305b88_write(_self_, jule::Str(" == _other.", 11));
					_1a6305b88_write(_self_, _54821_fIdent);
				}
				_iter_next_1a568c273:;
				++it;
				goto _iter_begin_1a568c273;
			}
			_iter_end_1a568c273:;
		};
		_1a661178a_doneIndent(_self_);
		if ((!(_53421_writed))) {
			_1a6305b88_write(_self_, jule::Str("true", 4));
		};
		_1a6305b88_write(_self_, jule::Str(";\n", 2));
		_1a661178a_doneIndent(_self_);
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, jule::Str("}", 1));
	} else {
		_1a6305b88_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a663bde2_structureOperatorNotEq(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Str* _56743_ident, jule::Ptr<_1a487d575_StructIns>* _56760_s) {
	if ((!((*(_56760_s)).get()._field_Comparable))) {
		return;;
	};
	_1a6614cdd_indent(_self_);
	if (_1b56a492e_Inline) {
		_1a6305b88_write(_self_, jule::Str("inline ", 7));
	};
	_1a6305b88_write(_self_, jule::Str("bool operator!=(", 16));
	_1a6305b88_write(_self_, (*(_56743_ident)));
	_1a6305b88_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a663c024_structureOperator(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Str* _58138_ident, jule::Ptr<_1a53a717a_FnIns>* _58155_f, jule::Str _58166_op) {
	if (((*(_58155_f)) == nullptr)) {
		return;;
	};
	jule::Bool _58613_unary = ((*(_58155_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _58713_assignment = _1a53a493b_IsVoid((*(_58155_f)).get()._field_Decl.ptr());;
	_1a6614cdd_indent(_self_);
	if (_1b56a492e_Inline) {
		_1a6305b88_write(_self_, jule::Str("inline ", 7));
	};
	if (_58713_assignment) {
		_1a6305b88_write(_self_, (*(_58138_ident)));
		_1a6305b88_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1a549461e_Prim((*(_58155_f)).get()._field_Result.ptr()) == nullptr)) {
			_1a6305b88_write(_self_, (*(_58138_ident)));
		} else {
			_1a6305b88_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a6305b88_write(_self_, jule::Str(" operator", 9));
	_1a6305b88_write(_self_, _58166_op);
	_1a6305b88_write(_self_, jule::Str("(", 1));
	if ((!(_58613_unary))) {
		jule::Ptr<_1a53a62ab_ParamIns> _60921_p = (*(_58155_f)).get()._field_Params[1LL];;
		_1a6305b88_write(_self_, _1a6645e62_paramIns(_self_.get()._field_tc.ptr(), &(_60921_p)));
		_1a6305b88_write(_self_, jule::Str(" _other", 7));
	};
	_1a6305b88_write(_self_, jule::Str(") { ", 4));
	if ((!(_58713_assignment))) {
		_1a6305b88_write(_self_, jule::Str("return ", 7));
	};
	_1a6305b88_write(_self_, static__1a62ce403_funcIns(_58155_f));
	if ((!(_58613_unary))) {
		_1a6305b88_write(_self_, jule::Str("(this, _other); ", 16));
		if (_58713_assignment) {
			_1a6305b88_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a6305b88_write(_self_, jule::Str("}", 1));
	} else {
		_1a6305b88_write(_self_, jule::Str("(this); }", 9));
	};
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a663c156_structureOperators(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _63043_s) {
	jule::Str _63113_ident = static__1a62cee81_structureIns(_63043_s);;
	_1a663bcb0_structureOperatorEq(_self_, &(_63113_ident), _63043_s);
	_1a663bde2_structureOperatorNotEq(_self_, &(_63113_ident), _63043_s);
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1a663c024_structureOperator(_self_, &(_63113_ident), &((*(_63043_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1a663c288_structureInsDecl(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _66941_s) {
	if (((*(_66941_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_66941_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a56a9768:;
			if (it != expr_end) {
				jule::Ptr<_1a53a44c9_Fn> _67125_m = *it;
				{
					_1a6613737_pushResult(_self_, &(_67125_m));
					_1a663c893_funcDecl(_self_, &(_67125_m), false);
				}
				_iter_next_1a56a9768:;
				++it;
				goto _iter_begin_1a56a9768;
			}
			_iter_end_1a56a9768:;
		};
	};
	_1a6305b88_write(_self_, jule::Str("struct ", 7));
	jule::Str _67813_outIdent = static__1a62cee81_structureIns(_66941_s);;
	_1a6305b88_write(_self_, _67813_outIdent);
	_1a6305b88_write(_self_, jule::Str(" {\n", 3));
	_1a661126d_addIndent(_self_);
	{
		auto expr = &((*(_66941_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56ab913:;
		if (it != expr_end) {
			jule::Ptr<_1a487d388_FieldIns> _68421_f = *it;
			{
				_1a6614cdd_indent(_self_);
				_1a663b919_fieldDecl(_self_, &(_68421_f));
				_1a6305b88_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1a56ab913:;
			++it;
			goto _iter_begin_1a56ab913;
		}
		_iter_end_1a56ab913:;
	};
	_1a6614cdd_indent(_self_);
	_1a663ba4b_structureDestructor(_self_, _66941_s);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_1a6614cdd_indent(_self_);
	_1a6305b88_write(_self_, _67813_outIdent);
	_1a6305b88_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1a663bb7d_structureDeriveDefsDecls(_self_, _66941_s);
	_1a663c156_structureOperators(_self_, _66941_s);
	_1a6305b88_write(_self_, jule::Str("\n", 1));
	_1a661178a_doneIndent(_self_);
	_1a6614cdd_indent(_self_);
	_1a6305b88_write(_self_, jule::Str("};", 2));
}



inline void _1a663c3ba_structureDecl(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d19b_Struct>* _70938_s) {
	{
		auto expr = &((*(_70938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56b07b3:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _71021_ins = *it;
			{
				_1a663c288_structureInsDecl(_self_, &(_71021_ins));
			}
			_iter_next_1a56b07b3:;
			++it;
			goto _iter_begin_1a56b07b3;
		}
		_iter_end_1a56b07b3:;
	};
}



inline void _1a663c4ec_structureDecls(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56b1682:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _71621_s = *it;
			{
				if ((_71621_s.get()._field_Token != nullptr)) {
					_1a663c3ba_structureDecl(_self_, &(_71621_s));
					_1a6305b88_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1a56b1682:;
			++it;
			goto _iter_begin_1a56b1682;
		}
		_iter_end_1a56b1682:;
	};
}



inline void _1a663c62e_paramsDecls(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>* _72436_params) {
	if (((*(_72436_params)).len() == 0LL)) {
		_1a6305b88_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a6305b88_write(_self_, jule::Str("(", 1));
	{
		auto expr = _72436_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56b3662:;
		if (it != expr_end) {
			jule::I64 _73114_i = it - expr->begin();
			jule::Ptr<_1a53a62ab_ParamIns> _73121_p = *it;
			{
				_1a6305b88_write(_self_, _1a6645e62_paramIns(_self_.get()._field_tc.ptr(), &(_73121_p)));
				if ((((*(_72436_params)).len() - _73114_i) > 1LL)) {
					_1a6305b88_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a56b3662:;
			++it;
			_73114_i++;
			goto _iter_begin_1a56b3662;
		}
		_iter_end_1a56b3662:;
	};
	_1a6305b88_write(_self_, jule::Str(")", 1));
}



inline void _1a663c761_funcHead(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53a717a_FnIns>* _74133_f, jule::Bool _74144_ptr) {
	if ((((!(_74144_ptr)) && _1b56a492e_Inline) && (!(_1a53a4e14_IsEntryPoint((*(_74133_f)).get()._field_Decl.ptr()))))) {
		_1a6305b88_write(_self_, jule::Str("inline ", 7));
	};
	_1a664658e_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _74133_f);
	if (_74144_ptr) {
		_1a6305b88_write(_self_, jule::Str("(*", 2));
		_1a6305b88_write(_self_, static__1a62ce403_funcIns(_74133_f));
		_1a6305b88_write(_self_, jule::Str(")", 1));
	} else {
		_1a6305b88_write(_self_, jule::Str(" ", 1));
		_1a6305b88_write(_self_, static__1a62ce403_funcIns(_74133_f));
	};
}



inline void _1a663c893_funcDecl(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53a44c9_Fn>* _75633_f, jule::Bool _75641_ptr) {
	{
		auto expr = &((*(_75633_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56b89ec:;
		if (it != expr_end) {
			jule::Ptr<_1a53a717a_FnIns> _75721_c = *it;
			{
				_1a6614cdd_indent(_self_);
				_1a663c761_funcHead(_self_, &(_75721_c), _75641_ptr);
				_1a663c62e_paramsDecls(_self_, &(_75721_c.get()._field_Params));
				_1a6305b88_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a56b89ec:;
			++it;
			goto _iter_begin_1a56b89ec;
		}
		_iter_end_1a56b89ec:;
	};
}



inline void _1a663c9c5_funcDecls(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b30e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>([=](jule::Ptr<_1a53e574b_Package>* _76635_pkg) mutable -> void {
		_1a66401c0_iterFiles(_76635_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>([=](jule::Ptr<_1a54614cb_SymbolTable>* _76736_file) mutable -> void {
			{
				auto expr = &((*(_76736_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a56bbe40:;
				if (it != expr_end) {
					jule::Ptr<_1a53a44c9_Fn> _76829_f = *it;
					{
						if (((!(_76829_f.get()._field_CppLinked)) && (_76829_f.get()._field_Token != nullptr))) {
							_1a6613737_pushResult(_self_, &(_76829_f));
							_1a663c893_funcDecl(_self_, &(_76829_f), false);
						};
					}
					_iter_next_1a56bbe40:;
					++it;
					goto _iter_begin_1a56bbe40;
				}
				_iter_end_1a56bbe40:;
			};
		}));
	}));
}



inline void _1a663cb07_traitDataTypes(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b30e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>([=](jule::Ptr<_1a53e574b_Package>* _77935_pkg) mutable -> void {
		_1a66401c0_iterFiles(_77935_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>([=](jule::Ptr<_1a54614cb_SymbolTable>* _78036_file) mutable -> void {
			{
				auto expr = &((*(_78036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a56bed99:;
				if (it != expr_end) {
					jule::Ptr<_1a53b63cb_Trait> _78129_t = *it;
					{
						if ((_78129_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a6305b88_write(_self_, jule::Str("struct ", 7));
						_1a6305b88_write(_self_, static__1a62ce69a_traitDecl(_78129_t));
						_1a6305b88_write(_self_, jule::Str("MptrData", 8));
						_1a6305b88_write(_self_, jule::Str(" {\n", 3));
						_1a661126d_addIndent(_self_);
						{
							auto expr = &(_78129_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a56c1ede:;
							if (it != expr_end) {
								jule::Ptr<_1a53a44c9_Fn> _79033_m = *it;
								{
									jule::Ptr<_1a53a717a_FnIns> _79133_ins = _79033_m.get()._field_Instances[0LL];;
									jule::Ptr<_1a53a62ab_ParamIns> _79233_p = _79133_ins.get()._field_Params[0LL];;
									_79233_p.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_78129_t, 2)});
									{
										auto expr = _79133_ins.get()._field_Params.slice(1LL);
										auto it = expr.begin();
										auto expr_end = expr.end();
										_iter_begin_1a56c3ce3:;
										if (it != expr_end) {
											jule::I64 _79630_i = it - expr.begin();
											jule::Ptr<_1a53a62ab_ParamIns> _79637_ip = *it;
											{
												if (_1ceeeb4ae_IsAnonIdent(_79637_ip.get()._field_Decl.get()._field_Ident)) {
													_79637_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1a5382dd1_Itoa(_79630_i));
												};
											}
											_iter_next_1a56c3ce3:;
											++it;
											_79630_i++;
											goto _iter_begin_1a56c3ce3;
										}
										_iter_end_1a56c3ce3:;
									};
									if ((!(_1e7712174_Production))) {
										_79133_ins.get()._field_Params = jule::alloc_for_append(_79133_ins.get()._field_Params,1);_79133_ins.get()._field_Params.__push(jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a664115a_customType>(_1a664115a_customType{._field_kind=jule::Str("const char*", 11)}), 13)})}));;
									};
									_1a6613737_pushResult(_self_, &(_79033_m));
									_1a663c893_funcDecl(_self_, &(_79033_m), true);
								}
								_iter_next_1a56c1ede:;
								++it;
								goto _iter_begin_1a56c1ede;
							}
							_iter_end_1a56c1ede:;
						};
						_1a661178a_doneIndent(_self_);
						_1a6614cdd_indent(_self_);
						_1a6305b88_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1a56bed99:;
					++it;
					goto _iter_begin_1a56bed99;
				}
				_iter_end_1a56bed99:;
			};
		}));
	}));
}



inline void _1a663cc39_paramIns(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53a62ab_ParamIns>* _82433_p) {
	_1a6305b88_write(_self_, _1a6645e62_paramIns(_self_.get()._field_tc.ptr(), _82433_p));
	_1a6305b88_write(_self_, jule::Str(" ", 1));
	_1a6305b88_write(_self_, static__1a62ce942_param(&((*(_82433_p)).get()._field_Decl)));
}



inline void _1a663cd6b_paramsIns(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>* _83034_params) {
	if (((*(_83034_params)).len() == 0LL)) {
		_1a6305b88_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a6305b88_write(_self_, jule::Str("(", 1));
	{
		auto expr = _83034_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56c88ec:;
		if (it != expr_end) {
			jule::I64 _83614_i = it - expr->begin();
			jule::Ptr<_1a53a62ab_ParamIns> _83621_p = *it;
			{
				_1a663cc39_paramIns(_self_, &(_83621_p));
				if ((((*(_83034_params)).len() - _83614_i) > 1LL)) {
					_1a6305b88_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a56c88ec:;
			++it;
			_83614_i++;
			goto _iter_begin_1a56c88ec;
		}
		_iter_end_1a56c88ec:;
	};
	_1a6305b88_write(_self_, jule::Str(")", 1));
}



inline void _1a663ce9d_varInitExpr(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a5418939_Var>* _84536_v, jule::Fn<void(void)> _84545_init) {
	if ((*(_84536_v)).get()._field_Statically) {
		_1a6305b88_write(_self_, jule::Str("static ", 7));
	};
	_1a6305b88_write(_self_, _1a6646eb8_kind(_self_.get()._field_tc.ptr(), (*(_84536_v)).get()._field_Kind.get()._field_Kind));
	_1a6305b88_write(_self_, jule::Str(" ", 1));
	if ((*(_84536_v)).get()._field_Reference) {
		_1a6305b88_write(_self_, jule::Str("*", 1));
	};
	_1a6305b88_write(_self_, static__1a62d04c0_var((*(_84536_v))));
	if ((_84545_init != nullptr)) {
		_1a6305b88_write(_self_, jule::Str(" = ", 3));
		_84545_init();
	};
	_1a6305b88_write(_self_, jule::Str(";", 1));
}



inline void _1a663d0d0_var(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a5418939_Var> _86327_v) {
	if (_1ceeeb217_IsIgnoreIdent(_86327_v.get()._field_Ident)) {
		return;;
	};
	if (((_86327_v.get()._field_Value != nullptr) && (_86327_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_86327_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_86327_v.get()._field_Reference) {
				_1a663ce9d_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a6305b88_write(_self_, jule::Str("&(", 2));
					_1a62c68c3_model(_self_.get()._field_ec, _86327_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1a6305b88_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1a663ce9d_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a572753e_possibleRefExpr(_self_.get()._field_ec, _86327_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1a663ce9d_varInitExpr(_self_, &(_86327_v), nullptr);
		return;;
	};
	if (_86327_v.get()._field_Reference) {
		_1a663ce9d_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6305b88_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1a664da19_shouldInitialized(&(_86327_v.get()._field_Kind.get()._field_Kind))) {
		_1a663ce9d_varInitExpr(_self_, &(_86327_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a62c6b48_initExpr(_self_.get()._field_ec, _86327_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1a663ce9d_varInitExpr(_self_, &(_86327_v), nullptr);
}



inline void _1a663d212_func(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53a44c9_Fn>* _89429_f) {
	{
		auto expr = &((*(_89429_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56d5860:;
		if (it != expr_end) {
			jule::Ptr<_1a53a717a_FnIns> _89521_ins = *it;
			{
				_1a663c761_funcHead(_self_, &(_89521_ins), false);
				_1a663cd6b_paramsIns(_self_, &(_89521_ins.get()._field_Params));
				_1a6305b88_write(_self_, jule::Str(" ", 1));
				_1cececd3d_funcScope(_self_.get()._field_sc, _89521_ins);
				if ((_89521_ins.get()._field_Scope != nullptr)) {
					_1a6305b88_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1a56d5860:;
			++it;
			goto _iter_begin_1a56d5860;
		}
		_iter_end_1a56d5860:;
	};
}



inline void _1a663d344_traitWrappers(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56d79a5:;
		if (it != expr_end) {
			jule::Ptr<_1a62d62b7_traitHash> _90721_hash = *it;
			{
				{
					auto expr = &(_90721_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a56d829c:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _90825_m = *it;
						{
							jule::Str _90921_ident = _90825_m.get()._field_Ident;;
							_90825_m.get()._field_Instances[0LL].get()._field_Scope=nullptr;
							_90825_m.get()._field_Ident=((_90921_ident + jule::Str("_", 1)) + _1a5382dd1_Itoa(_90721_hash.get()._field_i));
							_1a663d212_func(_self_, &(_90825_m));
							_90825_m.get()._field_Ident=_90921_ident;
							if ((_90721_hash.get()._field_s == nullptr)) {
								if (_1e7712174_Production) {
									_1a6305b88_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
								} else {
									_1a6305b88_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
								};
								goto _iter_next_1a56d829c;
							};
							jule::Bool _92521_ptr = (!(_1a53a352d_IsRef(_90825_m.get()._field_Params[0LL].ptr())));;
							jule::Ptr<_1a53a44c9_Fn> _92725_sm = _1a4857384_FindMethod(_90721_hash.get()._field_s.ptr(), _90825_m.get()._field_Ident, false);;
							if (((_92725_sm == nullptr) || (_92725_sm.get()._field_Instances.len() == 0LL))) {
								goto _iter_next_1a56d829c;
							};
							_1a661126d_addIndent(_self_);
							_1a6305b88_write(_self_, jule::Str("{\n", 2));
							_1a6614cdd_indent(_self_);
							if ((_92725_sm.get()._field_Exceptional || (!(_1a53a493b_IsVoid(_92725_sm.ptr()))))) {
								_1a6305b88_write(_self_, jule::Str("return ", 7));
							};
							_1a6305b88_write(_self_, static__1a62ce15b_func(&(_92725_sm)));
							_1a6305b88_write(_self_, jule::Str("(", 1));
							if (_92521_ptr) {
								_1a6305b88_write(_self_, jule::Str("_self_.safe_ptr<", 16));
								_1a6305b88_write(_self_, _1a6645538_structureIns(_self_.get()._field_tc.ptr(), _90721_hash.get()._field_s));
								_1a6305b88_write(_self_, jule::Str(">(", 2));
								if ((!(_1e7712174_Production))) {
									_1a6305b88_write(_self_, jule::Str("_00___file", 10));
								};
								_1a6305b88_write(_self_, jule::Str(")", 1));
							} else {
								_1a6305b88_write(_self_, jule::Str("_self_.data.as<", 15));
								_1a6305b88_write(_self_, _1a664522a_structure(_self_.get()._field_tc.ptr(), _92725_sm.get()._field_Owner));
								_1a6305b88_write(_self_, jule::Str(">()", 3));
							};
							{
								auto expr = _90825_m.get()._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1a56e010b:;
								if (it != expr_end) {
									jule::Ptr<_1a53a2b8c_Param> _95324_mp = *it;
									{
										_1a6305b88_write(_self_, jule::Str(", ", 2));
										_1a6305b88_write(_self_, static__1a62ce942_param(&(_95324_mp)));
									}
									_iter_next_1a56e010b:;
									++it;
									goto _iter_begin_1a56e010b;
								}
								_iter_end_1a56e010b:;
							};
							_1a6305b88_write(_self_, jule::Str(");\n}\n", 5));
							_1a661178a_doneIndent(_self_);
						}
						_iter_next_1a56d829c:;
						++it;
						goto _iter_begin_1a56d829c;
					}
					_iter_end_1a56d829c:;
				};
			}
			_iter_next_1a56d79a5:;
			++it;
			goto _iter_begin_1a56d79a5;
		}
		_iter_end_1a56d79a5:;
	};
}



inline void _1a663d476_traitDatas(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	jule::Ptr<_1a53b63cb_Trait> _96417_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56d7e28:;
		if (it != expr_end) {
			jule::Ptr<_1a62d62b7_traitHash> _96521_hash = *it;
			{
				jule::Str _96617_ident = static__1a62ce69a_traitDecl(_96521_hash.get()._field_t);;
				if ((_96521_hash.get()._field_t != _96417_old)) {
					if ((_96417_old != nullptr)) {
						_1a661178a_doneIndent(_self_);
						_1a6614cdd_indent(_self_);
						_1a6305b88_write(_self_, jule::Str("};\n", 3));
					};
					_1a6305b88_write(_self_, jule::Str("static ", 7));
					_1a6305b88_write(_self_, _96617_ident);
					_1a6305b88_write(_self_, jule::Str("MptrData ", 9));
					_1a6305b88_write(_self_, _96617_ident);
					_1a6305b88_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
					_96417_old=_96521_hash.get()._field_t;
					_1a661126d_addIndent(_self_);
				};
				_1a6614cdd_indent(_self_);
				_1a6305b88_write(_self_, jule::Str("{\n", 2));
				_1a661126d_addIndent(_self_);
				{
					auto expr = &(_96521_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a56e7da0:;
					if (it != expr_end) {
						jule::Ptr<_1a53a44c9_Fn> _98425_m = *it;
						{
							jule::Str _98521_mIdent = static__1a62ce15b_func(&(_98425_m));;
							_1a6614cdd_indent(_self_);
							_1a6305b88_write(_self_, jule::Str(".", 1));
							_1a6305b88_write(_self_, _98521_mIdent);
							_1a6305b88_write(_self_, jule::Str("=", 1));
							_1a6305b88_write(_self_, _98521_mIdent);
							_1a6305b88_write(_self_, jule::Str("_", 1));
							_1a6305b88_write(_self_, _1a5382dd1_Itoa(_96521_hash.get()._field_i));
							_1a6305b88_write(_self_, jule::Str(",\n", 2));
						}
						_iter_next_1a56e7da0:;
						++it;
						goto _iter_begin_1a56e7da0;
					}
					_iter_end_1a56e7da0:;
				};
				_1a661178a_doneIndent(_self_);
				_1a6614cdd_indent(_self_);
				_1a6305b88_write(_self_, jule::Str("},\n", 3));
			}
			_iter_next_1a56d7e28:;
			++it;
			goto _iter_begin_1a56d7e28;
		}
		_iter_end_1a56d7e28:;
	};
	if ((_96417_old != nullptr)) {
		_1a661178a_doneIndent(_self_);
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a663d5a8_globals(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a56ebe1a:;
		if (it != expr_end) {
			jule::Ptr<_1a5418939_Var> _100721_v = *it;
			{
				_1a6305b88_write(_self_, _1a6646eb8_kind(_self_.get()._field_tc.ptr(), _100721_v.get()._field_Kind.get()._field_Kind));
				_1a6305b88_write(_self_, jule::Str(" ", 1));
				_1a6305b88_write(_self_, static__1a62d04c0_var(_100721_v));
				_1a6305b88_write(_self_, jule::Str(" = ", 3));
				_1a62c68c3_model(_self_.get()._field_ec, _100721_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1a6305b88_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a56ebe1a:;
			++it;
			goto _iter_begin_1a56ebe1a;
		}
		_iter_end_1a56ebe1a:;
	};
}



inline void _1a663d6da_decls(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b573_traitDecls(_self_);
	_1a663b7d7_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a663c4ec_structureDecls(_self_);
	_1a663c9c5_funcDecls(_self_);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_1a663cb07_traitDataTypes(_self_);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_1a663d344_traitWrappers(_self_);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_1a663d476_traitDatas(_self_);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1a663d5a8_globals(_self_);
}



inline void _1a663d81c_structureMethods(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _103441_s) {
	{
		auto expr = &((*(_103441_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5702b13:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _103521_f = *it;
			{
				_1a663d212_func(_self_, &(_103521_f));
				_1a6305b88_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a5702b13:;
			++it;
			goto _iter_begin_1a5702b13;
		}
		_iter_end_1a5702b13:;
	};
}



inline void _1a663d94e_structureDeriveDefs(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _104144_s) {
	if (_1a484320a_IsDerives((*(_104144_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a6305b88_write(_self_, _1a62c9e8c_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_104144_s)).get()._field_Decl)));
		_1a6305b88_write(_self_, jule::Str("{\n", 2));
		_1a661126d_addIndent(_self_);
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, _1a6645538_structureIns(_self_.get()._field_tc.ptr(), (*(_104144_s))));
		_1a6305b88_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_104144_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8e7bdc2:;
			if (it != expr_end) {
				jule::Ptr<_1a487d388_FieldIns> _104920_f = *it;
				{
					jule::Str _105021_ident = static__1a62d0228_field(&(_104920_f.get()._field_Decl));;
					_1a6614cdd_indent(_self_);
					_1a6305b88_write(_self_, jule::Str("clone.", 6));
					_1a6305b88_write(_self_, _105021_ident);
					_1a6305b88_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a6305b88_write(_self_, _105021_ident);
					_1a6305b88_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1a8e7bdc2:;
				++it;
				goto _iter_begin_1a8e7bdc2;
			}
			_iter_end_1a8e7bdc2:;
		};
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, jule::Str("return clone;\n", 14));
		_1a661178a_doneIndent(_self_);
		_1a6305b88_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a663da81_structureOstream(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _106541_s) {
	_1a6614cdd_indent(_self_);
	_1a6305b88_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a6305b88_write(_self_, static__1a62cee81_structureIns(_106541_s));
	_1a6305b88_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a661126d_addIndent(_self_);
	_1a6614cdd_indent(_self_);
	jule::Ptr<_1a53a44c9_Fn> _107317_fts = _1a4857384_FindMethod((*(_106541_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1a541a100_Str(_107317_fts)) {
		_1a6305b88_write(_self_, jule::Str("_Stream << ", 11));
		_1a6305b88_write(_self_, static__1a62ce15b_func(&(_107317_fts)));
		_1a6305b88_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a6305b88_write(_self_, jule::Str("_Stream << \"", 12));
		_1a6305b88_write(_self_, (*(_106541_s)).get()._field_Decl.get()._field_Ident);
		_1a6305b88_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_106541_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a891147d:;
			if (it != expr_end) {
				jule::I64 _108318_i = it - expr->begin();
				jule::Ptr<_1a487d388_FieldIns> _108325_f = *it;
				{
					_1a6614cdd_indent(_self_);
					_1a6305b88_write(_self_, jule::Str("_Stream << \"", 12));
					_1a6305b88_write(_self_, _108325_f.get()._field_Decl.get()._field_Ident);
					_1a6305b88_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1a487d575_StructIns> _109021_strct = _1a5495a71_Struct(_108325_f.get()._field_Kind.ptr());;
					if ((((_109021_strct != nullptr) && (_109021_strct.get()._field_Decl != nullptr)) && _109021_strct.get()._field_Decl.get()._field_CppLinked)) {
						_1a6305b88_write(_self_, jule::Str(" cpp.", 5));
						_1a6305b88_write(_self_, static__1a62d0228_field(&(_108325_f.get()._field_Decl)));
						_1a6305b88_write(_self_, jule::Str("\"", 1));
					} else {
						_1a6305b88_write(_self_, jule::Str("\" << _Src.", 10));
						_1a6305b88_write(_self_, static__1a62d0228_field(&(_108325_f.get()._field_Decl)));
					};
					if (((_108318_i + 1LL) < (*(_106541_s)).get()._field_Fields.len())) {
						_1a6305b88_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a6305b88_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1a891147d:;
				++it;
				_108318_i++;
				goto _iter_begin_1a891147d;
			}
			_iter_end_1a891147d:;
		};
		_1a6614cdd_indent(_self_);
		_1a6305b88_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a6614cdd_indent(_self_);
	_1a6305b88_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a661178a_doneIndent(_self_);
	_1a6305b88_write(_self_, jule::Str("}", 1));
}



inline void _1a663dc4b_structureIns(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d575_StructIns>* _111637_s) {
	_1a663d81c_structureMethods(_self_, _111637_s);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_1a663d94e_structureDeriveDefs(_self_, _111637_s);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	_1a663da81_structureOstream(_self_, _111637_s);
}



inline void _1a663dec1_structure(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a487d19b_Struct>* _112434_s) {
	{
		auto expr = &((*(_112434_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cdc507:;
		if (it != expr_end) {
			jule::Ptr<_1a487d575_StructIns> _112521_ins = *it;
			{
				_1a663dc4b_structureIns(_self_, &(_112521_ins));
				_1a6305b88_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a8cdc507:;
			++it;
			goto _iter_begin_1a8cdc507;
		}
		_iter_end_1a8cdc507:;
	};
}



inline void _1a663e19c_structures(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cdd717:;
		if (it != expr_end) {
			jule::Ptr<_1a487d19b_Struct> _113221_s = *it;
			{
				if ((_113221_s.get()._field_Token != nullptr)) {
					_1a663dec1_structure(_self_, &(_113221_s));
					_1a6305b88_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1a8cdd717:;
			++it;
			goto _iter_begin_1a8cdd717;
		}
		_iter_end_1a8cdd717:;
	};
}



inline void _1a663e378_funcs(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b30e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>([=](jule::Ptr<_1a53e574b_Package>* _114135_pkg) mutable -> void {
		_1a66401c0_iterFiles(_114135_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>([=](jule::Ptr<_1a54614cb_SymbolTable>* _114236_file) mutable -> void {
			{
				auto expr = &((*(_114236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a8ce18a2:;
				if (it != expr_end) {
					jule::Ptr<_1a53a44c9_Fn> _114329_f = *it;
					{
						if (((!(_1e7711717_Test)) && _1a664d772_hasDirective(&(_114329_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1a8ce18a2;
						};
						if (((!(_114329_f.get()._field_CppLinked)) && (_114329_f.get()._field_Token != nullptr))) {
							_1a663d212_func(_self_, &(_114329_f));
							_1a6305b88_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1a8ce18a2:;
					++it;
					goto _iter_begin_1a8ce18a2;
				}
				_iter_end_1a8ce18a2:;
			};
		}));
	}));
}



inline void _1a663e5ed_pushInit(jule::Ptr<_1a663a60a_ObjectCoder> _self_, jule::Ptr<_1a53e574b_Package>* _115633_pkg) {
	_1a66401c0_iterFiles(_115633_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)>([=](jule::Ptr<_1a54614cb_SymbolTable>* _115732_file) mutable -> void {
		{
			auto expr = &((*(_115732_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8ce4102:;
			if (it != expr_end) {
				jule::Ptr<_1a53a44c9_Fn> _115820_f = *it;
				{
					if ((_115820_f.get()._field_Ident == jule::Str("init", 4))) {
						_1a6614cdd_indent(_self_);
						_1a6305b88_write(_self_, static__1a62ce15b_func(&(_115820_f)));
						_1a6305b88_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1a8ce4102:;
				++it;
				goto _iter_begin_1a8ce4102;
			}
			_iter_end_1a8ce4102:;
		};
	}));
}



inline void _1a663e7c9_initCaller(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a6305b88_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a661126d_addIndent(_self_);
	_1a663b30e_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1a53e574b_Package>*)>([=](jule::Ptr<_1a53e574b_Package>* _117135_pkg) mutable -> void {
		_1a663e5ed_pushInit(_self_, _117135_pkg);
	}));
	_1a661178a_doneIndent(_self_);
	_1a6305b88_write(_self_, jule::Str("\n}", 2));
}



inline void _1a663e9a5_end(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a6305b88_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1e7711717_Test) {
		_1a6305b88_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a6305b88_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a6305b88_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a663eb81_serializeHead(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663b1cc_prepareStructures(_self_);
	_1a663b441_buildTraitMap(_self_);
	_1a663ad36_head(_self_);
	_1a6305b88_write(_self_, jule::Str("\n", 1));
	_1a663d6da_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _120621_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8cea7ac:;
			if (it != expr_end) {
				jule::Str _120720_decl = *it;
				{
					_120621_head+=_120720_decl;
					_self_.get()._field_declPos+=_120720_decl.len();
				}
				_iter_next_1a8cea7ac:;
				++it;
				goto _iter_begin_1a8cea7ac;
			}
			_iter_end_1a8cea7ac:;
		};
		_120621_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_120621_head;
	};
	_1a6305b88_write(_self_, jule::Str("\n", 1));
	_1a663e19c_structures(_self_);
	_1a663e378_funcs(_self_);
	_1a663e7c9_initCaller(_self_);
	_1a6305b88_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _122221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_122221_head+=_self_.get()._field_anyObj;
		_122221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_122221_head;
	};
}



inline void _1a663ed5c_Serialize(jule::Ptr<_1a663a60a_ObjectCoder> _self_) {
	_1a663eb81_serializeHead(_self_);
	_1a663e9a5_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a663a60a_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1a9133ba0_parseInteger(_1a669c381_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1a913682e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ceaa4a18_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1a9136c91:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ceaa4a18_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1a9136e39:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ceaa4a18_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1a9136b81:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1a91364ee:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a9136488:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a91363bc:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1a913bc74_parseInteger(_1a669c381_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1a913e8ae:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1ceaa4a18_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1a913ed21:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ceaa4a18_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1a913eeb9:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1ceaa4a18_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1a913ec11:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1a913e57e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a913e518:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a913e44c:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a669cb78_getData(_1a669c381_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a669cdba_processFlag(_1a669c381_argParser* _self_, jule::Trait<_1a6698239_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a9130e33:;
			{
				jule::Ptr<_1a911c0b7_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1a911c0b7_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1a9130dbc:;
	};
	jule::Str _22513_data = _1a669cb78_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a6698239_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a666855b_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a9132484:;
			{
				jule::Ptr<_1a9111298_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1a9111298_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1a9133ba0_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1a5045bd7_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a6698239_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a666855b_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a9132e46:;
			{
				jule::Ptr<_1a9114ee4_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1a9114ee4_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a913bc74_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1a4e4704a_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a6698239_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a666855b_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a9132eac:;
			{
				jule::Ptr<_1a91187ab_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1a91187ab_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1a537c97a_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a6698239_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a666855b_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a9133023:;
			{
				(*((*(_21735_flag)).cast_ptr<_1a912087e_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1a9132dd0:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a669d140_singleDash(_1a669c381_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9147059:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1a6698239_CommonFlag> _26321_flag = _1a669a736_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + static_cast<jule::Str>((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1a669cdba_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1a9147059:;
			++it;
			goto _iter_begin_1a9147059;
		}
		_iter_end_1a9147059:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a669d3b5_doubleDash(_1a669c381_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1a6698239_CommonFlag> _27617_flag = _1a669a428_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1a669cdba_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a669d591_tryArg(_1a669c381_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1a669d3b5_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a669d140_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a669d76c_parse(_1a669c381_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a669d591_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1a914c9aa:;
	}
	_iter_end_1a914c9aa:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a669c381_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1e8552ce9_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1e8567528_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _1e779e772_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1e8585bd9_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _1e858602a_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _1e8586415_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _1e8586756_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _1e8586c2e_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _1e8586ec6_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _1e858726d_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _1e8587aed_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _1e8587d95_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _1e858813c_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _1e8598834_Seek(jule::I64 _159_handle, jule::I64 _1522_offset, jule::I64 _1535_origin) {
	return static_cast<jule::I64>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I64 _1e8598c1e_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _1e8599093_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _1e859947d_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _1e859968c_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _1e77de4b5_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _1e77bd2b8_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _1e8652c1d_getLastOsError(void) {
	jule::I64 _309_err = _1e779e772_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a645acdd:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a645a6e4:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a645a76b:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a645a7e3:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a645aa24:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a645aa8a:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a645ab01:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1a645a53a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a645a4d5:;
	};
}



inline jule::Slice<jule::Str> _1e8653c41_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1e86541b4_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1e8654a77_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1e8654a77_getwd(void) {
	jule::U8* _1113_buff = _1e8586756_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1e8652c1d_getLastOsError(), &__jule_any_type132));
	};
	jule::Str _159_pwd = _1e8567528_BytePtrToStr(_1113_buff);;
	{
		_1e8552ce9_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _1ce96d21c_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1ce9cd48b__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1ce9d67c4_isExcludingLatin(_1ce977402_Letter, _7613_r);;
}



inline jule::Bool _1ce9d5be1_is16(jule::Slice<_1ce9d412e_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6cc29c8:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1ce9d412e_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a6cc29c8:;
				++it;
				_19313_i++;
				goto _iter_begin_1a6cc29c8;
			}
			_iter_end_1a6cc29c8:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1ce9d412e_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1a6cc249a:;
	}
	_iter_end_1a6cc249a:;;
	return false;;
}



inline jule::Bool _1ce9d6032_is32(jule::Slice<_1ce9d45a2_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a6cc8d64:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1ce9d45a2_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a6cc8d64:;
				++it;
				_23013_i++;
				goto _iter_begin_1a6cc8d64;
			}
			_iter_end_1a6cc8d64:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1ce9d45a2_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1a6cc5ba7:;
	}
	_iter_end_1a6cc5ba7:;;
	return false;;
}



inline jule::Bool _1ce9d67c4_isExcludingLatin(jule::Ptr<_1ce9d4a25_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1ce9d412e_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1ce9d5be1_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1ce9d45a2_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1ce9d6032_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1ce9d6a6b_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1ce9cd48b__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1ce9d67c4_isExcludingLatin(_1ce97d958_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1cea9dc65_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1cea9cb43_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1cea9d1c6_acceptRange _1969_accept = _1cea9d4d4_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1cea9e084_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _1cea9cb43_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_1cea9d1c6_acceptRange _2439_accept = _1cea9d4d4_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1cea9e32b_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1ceaa0c01_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1a6d1eb24;
			};
		}
	_iter_next_1a6d1eb24:;
	}
	_iter_end_1a6d1eb24:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1ceaa00c9_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1ceaa041a_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1ceaa041a_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a6d33341:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a6d35046:;
			{
				_41242_r=128LL;
				goto _case_begin_1a6d33682;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a6d33682:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1a6d32be2:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1a6d32b8c:;
	};
}



inline jule::I64 _1ceaa0959_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a6d3d58d;
			};
			jule::U8 _48213_x = _1cea9cb43_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a6d3d58d;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a6d3d58d;
			};
			_1cea9d1c6_acceptRange _49213_accept = _1cea9d4d4_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a6d3d58d:;
	}
	_iter_end_1a6d3d58d:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ceaa0c01_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1ceacd602_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6d63c34:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1a6d63c34:;
			++it;
			_399_i++;
			goto _iter_begin_1a6d63c34;
		}
		_iter_end_1a6d63c34:;
	};
	return -1LL;;
}



inline jule::I64 _1ceacd778_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	jule::U8* _519_first = (&(_5017_s[0LL]));;
	jule::U8* _5213_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5213_it >= _519_first); (_5213_it)--) {
		{
			{
				if (((*(_5213_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5213_it - _519_first))));;
				};
			};
		}
	_iter_next_1a6d66121:;
	}
	_iter_end_1a6d66121:;;
	return -1LL;;
}



inline jule::I64 _1ceabcd3e_FindByteStr(jule::Str* _6417_s, jule::U8 _6425_b) {
	return static_cast<jule::I64>(_1ceacd602_FindByte(_1e77de4b5_Stobs(_6417_s), _6425_b));;
}



inline jule::I64 _1ceabd180_FindLastByteStr(jule::Str* _6921_s, jule::U8 _6929_b) {
	return static_cast<jule::I64>(_1ceacd778_FindLastByte(_1e77de4b5_Stobs(_6921_s), _6929_b));;
}



inline jule::Str _1ceaa53cb_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1a6d79e59:;
	}
	_iter_end_1a6d79e59:;;
	return _2013_ss;;
}



inline jule::Bool _1ceaa8786_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1a6d7ceb2:;
	}
	_iter_end_1a6d7ceb2:;;
	return true;;
}



inline jule::Bool _1ceaa4a18_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1ceaa8786_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1ceabd2e5_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1a6d7eed6:;
	}
	_iter_end_1a6d7eed6:;;
	return true;;
}



inline jule::Bool _1ceabd59d_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1ceabd2e5_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _1ceabd988_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1ceaa8786_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1a6d840b7:;
	}
	_iter_end_1a6d840b7:;;
	return -1LL;;
}



inline jule::I64 _1ceabe2c4_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1a6d86619;
					};
				}
			_iter_next_1a6d87d79:;
			}
			_iter_end_1a6d87d79:;;
			return _9413_j;;
		}
	_iter_next_1a6d86619:;
	}
	_iter_end_1a6d86619:;;
	return -1LL;;
}



inline jule::I64 _1ceabe615_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_1ceabe2c4_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _1ceac08ad_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1a6d90777:;
	}
	_iter_end_1a6d90777:;;
	return -1LL;;
}



inline jule::I64 _1ceac11e9_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_1ceabd180_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _1ceac200d_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _1e77de4b5_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _1e77de4b5_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ceac08ad_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1a6d9600d:;
	}
	_iter_end_1a6d9600d:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1ceac2739_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _1ceabd988_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1a6d9c410;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1a6d9c410:;
	}
	_iter_end_1a6d9c410:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _1ceac2a7a_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1ceabd988_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1ceac354d_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1ceac200d_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _1ceac388e_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _1ceabd988_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1a6da29ba;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1a6da29ba:;
	}
	_iter_end_1a6da29ba:;;
	return _31613_n;;
}



inline jule::Str _1ceac3d23_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _1ceac388e_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _1ceabd988_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1a6da67e3;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1a6da67e3:;
	}
	_iter_end_1a6da67e3:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _1ceac0d86_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ceac08ad_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1a6da940b:;
	}
	_iter_end_1a6da940b:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1ceac4dce_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _1e77de4b5_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _1e77de4b5_Stobs(&(_40321_cutset));;
	_1ceac0d86_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1ceac5187_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9e32b_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1ceac08ad_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1a6dada70:;
	}
	_iter_end_1a6dada70:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1ceac5819_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _1e77de4b5_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _1e77de4b5_Stobs(&(_43417_cutset));;
	_1ceac0d86_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1ceac5187_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _1ceac5b5a_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a6db346a:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a6db34d1:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1a6db3107:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a6db4537:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=(*(_45212_part));
			}
			_iter_next_1a6db4537:;
			++it;
			goto _iter_begin_1a6db4537;
		}
		_iter_end_1a6db4537:;
	};
	return _45113_s;;
}



inline jule::Str _1e86b13db_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _1ceac6210_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _1ceac5e9b_IsPathSep(_1099_originalPath[0LL])) && _1ceac5e9b_IsPathSep(_1099_originalPath[1LL]))) {
			return _1e86d0c24_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _1ceac5e9b_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_1e8691d6c_lazyBuff _12713_out = _1e8691d6c_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_1e869acaa_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_1ceac5e9b_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1a6dc3106:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _1ceac5e9b_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1a6dc5c74:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _1ceac5e9b_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1a6dc5cda:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1a6dc8bbc:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_1ceac5e9b_IsPathSep(static_cast<jule::U8>(_1e869847d_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1a6dc94d6:;
									}
									_iter_end_1a6dc94d6:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1a6dc8c33:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_1e869acaa_append(&_12713_out, 47LLU);
									};
									_1e869acaa_append(&_12713_out, '.');
									_1e869acaa_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1a6dc8837:;
						};
					}
				}
				else {
					_case_begin_1a6dc15bb:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_1e869acaa_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_1ceac5e9b_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_1e869acaa_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1a6dc2ab7:;
						}
						_iter_end_1a6dc2ab7:;;
					}
				}
				_match_end_1a6dc138a:;
			};
		}
	_iter_next_1a6dc1522:;
	}
	_iter_end_1a6dc1522:;;
	if ((_12713_out._field_w == 0LL)) {
		_1e869acaa_append(&_12713_out, '.');
	};
	return _1e86d0c24_FromSlash(_1e869c5d6_string(&_12713_out));;
}



inline jule::Str _1e86d0c24_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _1e86d32ba_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1ceac6474_join(_2259_elem);;
}



inline jule::Str _1e86d4783_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_1ceac5e9b_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1a6dcd166:;
	}
	_iter_end_1a6dcd166:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1e869c9e3_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1ceac6342_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _1e86b8a86_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _1ceac5e9b_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1a6dd0762:;
	}
	_iter_end_1a6dd0762:;;
	(_25413_path).mut_slice(_1e8692059_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_1ceac5e9b_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1a6dd207c:;
	}
	_iter_end_1a6dd207c:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return static_cast<jule::Str>(47LL);;
	};
	return _25413_path;;
}



inline jule::Str _1e86d6d29_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _1e8692059_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_1ceac5e9b_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1a6dd439d:;
	}
	_iter_end_1a6dd439d:;;
	jule::Str _2919_dir = _1e86b13db_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if (((_2919_dir == jule::Str(".", 1)) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _1e8692059_VolumeName(jule::Str _30315_path) {
	return _1e86d0c24_FromSlash(_30315_path.slice(0LL, _1ceac6210_volumeNameLen(_30315_path)));;
}



inline jule::Bool _1ceac5e9b_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1ceac60cd_IsAbs(jule::Str _5310_path) {
	return _1ceaa4a18_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I64 _1ceac6210_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1ceac6342_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1ceac60cd_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1e86b13db_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _1e86541b4_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1ceac6474_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1ceac6474_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6800517:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _1e86b13db_Clean(_1ceac5b5a_Join(_739_elem.slice(_749_i), static_cast<jule::Str>(47LL)));;
				};
			}
			_iter_next_1a6800517:;
			++it;
			_749_i++;
			goto _iter_begin_1a6800517;
		}
		_iter_end_1a6800517:;
	};
	return jule::Str();;
}



inline jule::I64 _1e77c2cb2_getLastFsError(void) {
	jule::I64 _729_err = _1e779e772_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a680ec30:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a680e1b3:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1a680e625:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a680e68b:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a680e702:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a680e768:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1a680ed51:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a680edb7:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a680ee2d:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a680ee94:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a681001b:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a6810093:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a681011a:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a6810192:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a6810219:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1a6810291:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a6810318:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a6810390:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a6810417:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1a681048e:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a6810516:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a681058d:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a6810615:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a681068c:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a6810714:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1a681078b:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1a6810813:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1a681088a:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1a680e47c:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1a680e427:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1cebd6d48_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1a6837153:;
	}
	_iter_end_1a6837153:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _1cec1ace4_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _1cec1b0d0_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _1cec1b0d0_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _1cec1b0d0_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Str _1813_buf = jule::Str::alloc(20LL);;
	jule::I64 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1a6840bb7:;
	}
	_iter_end_1a6840bb7:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_1813_buf).mut_slice(_1913_i);;
	return _1813_buf;;
}



inline jule::Slice<char*> _1cec1d599_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s) {
	jule::Slice<char*> _3713_cs = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6860a72:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			{
				_3713_cs[_389_i]=((char*)((&((*(_3625_s))[_389_i][0LL]))));
			}
			_iter_next_1a6860a72:;
			++it;
			_389_i++;
			goto _iter_begin_1a6860a72;
		}
		_iter_end_1a6860a72:;
	};
	_3713_cs[(_3713_cs.len() - 1LL)]=nullptr;
	return _3713_cs;;
}



inline jule::I64 _1cec1d8da_execvp(jule::Str* _4512_file, jule::Slice<jule::Str>* _4524_argv) {
	jule::Slice<char*> _469_cargv = _1cec1d599_strSliceToCstrSlice(_4524_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4512_file))[0LL])))), (char*const*)(&(_469_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _1cec1dae9_setenv(jule::Slice<jule::Str>* _5212_envv) {
	;
	{
		auto expr = _5212_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6863b52:;
		if (it != expr_end) {
			jule::Str *_5412_env = it;
			{
				jule::I64 _5513_i = _1ceabcd3e_FindByteStr(_5412_env, '=');;
				if ((_5513_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type131));
				};
				{
					jule::Str _6017_key = (*(_5412_env)).slice(0LL, _5513_i);;
					if ((((*(_5412_env)).len() - _5513_i) == 1LL)) {
						jule::Str _6221_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6221_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type131));
						};
					} else {
						jule::Str _6721_val = (*(_5412_env)).slice((_5513_i + 1LL));;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6721_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type131));
						};
					};
				};
			}
			_iter_next_1a6863b52:;
			++it;
			goto _iter_begin_1a6863b52;
		}
		_iter_end_1a6863b52:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _1cec1e9a7_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1a686886b:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a686405e:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1a68652b3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1a6869be1:;
	};
}



inline jule::I64 _1cec1ebe9_getLastProcessError(void) {
	return _1cec1e9a7_processErrorFromCode(static_cast<jule::I64>(_1e779e772_GetLastErrno()));;
}



inline void _1cec2049c_Exit(jule::I64 _129_code) {
	_1e859968c_Exit(_129_code);
}



inline jule::Str _1cec2069a_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1ceb3c452_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1ceb3c672_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1e772b7dc_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2e53b:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a6e2e53b:;
			++it;
			goto _iter_begin_1a6e2e53b;
		}
		_iter_end_1a6e2e53b:;
	};
	return false;;
}



inline jule::Bool _1ceb3c919_IsValidCppExt(jule::Str _4118_ext) {
	if ((_4118_ext == jule::Str(".c", 2))) {
		return true;;
	};
	{
		auto expr = &(_1ceb3a708_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e2ed99:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1a6e2ed99:;
			++it;
			goto _iter_begin_1a6e2ed99;
		}
		_iter_end_1a6e2ed99:;
	};
	{
		auto expr = &(_1ceb3c353_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e311a8:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1a6e311a8:;
			++it;
			goto _iter_begin_1a6e311a8;
		}
		_iter_end_1a6e311a8:;
	};
	return false;;
}



inline jule::Str _1ceb4996a_Logf(jule::Str _3009_fmt, jule::Slice<jule::Any> _30022_args) {
	return _1ceb4a383_applyFmt(_3009_fmt, _30022_args);;
}



inline jule::Str _1ceb49c56_argToStr(jule::Any _30413_arg) {
	{
		auto &_match_expr{ _30413_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a6e3260a:;
			{
				return _30413_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1a6e32671:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::U8>(&__jule_any_type133));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a6e323eb:;
			{
				return static_cast<jule::Str>(_30413_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1a6e31ebc:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1a6e31cd0:;
	};
}



inline jule::I64 _1ceb49eed_findNextFmt(jule::Str _31716_fmt) {
	{
		auto expr = &(_31716_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e32d36:;
		if (it != expr_end) {
			jule::I64 _3189_i = it - expr->begin();
			jule::U8 *_31812_b = it;
			{
				if (((*(_31812_b)) == '@')) {
					return _3189_i;;
				};
			}
			_iter_next_1a6e32d36:;
			++it;
			_3189_i++;
			goto _iter_begin_1a6e32d36;
		}
		_iter_end_1a6e32d36:;
	};
	return -1LL;;
}



inline jule::Str _1ceb4a383_applyFmt(jule::Str _32617_fmt, jule::Slice<jule::Any> _32627_args) {
	jule::Str _32713_s = jule::Str();;
	{
		auto expr = &(_32627_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e34a3b:;
		if (it != expr_end) {
			jule::Any *_32812_arg = it;
			{
				jule::I64 _32913_i = _1ceb49eed_findNextFmt(_32617_fmt);;
				if ((_32913_i == -1LL)) {
					goto _iter_end_1a6e34a3b;
				};
				_32713_s+=_32617_fmt.slice(0LL, _32913_i);
				_32713_s+=_1ceb49c56_argToStr((*(_32812_arg)));
				(_32617_fmt).mut_slice((_32913_i + 1LL));;
			}
			_iter_next_1a6e34a3b:;
			++it;
			goto _iter_begin_1a6e34a3b;
		}
		_iter_end_1a6e34a3b:;
	};
	_32713_s+=_32617_fmt;
	return _32713_s;;
}



inline jule::Bool _1ceb4b40b_IsTopDirective(jule::Str _2819_directive) {
	return ((_2819_directive == jule::Str("pass", 4)) || (_2819_directive == jule::Str("build", 5)));;
}



inline jule::Bool _1ceb4c83b_IsWindows(jule::Str _3714_os) {
	return (_3714_os == jule::Str("windows", 7));;
}



inline jule::Bool _1ceb4cae4_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == jule::Str("darwin", 6));;
}



inline jule::Bool _1ceb4cd8b_IsLinux(jule::Str _4312_os) {
	return (_4312_os == jule::Str("linux", 5));;
}



inline jule::Bool _1ceb4d1aa_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == jule::Str("i386", 4));;
}



inline jule::Bool _1ceb4d452_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == jule::Str("amd64", 5));;
}



inline jule::Bool _1ceb4d6e9_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == jule::Str("arm64", 5));;
}



inline jule::Bool _1ceb4d991_IsUnix(jule::Str _5511_os) {
	return (_1ceb4cae4_IsDarwin(_5511_os) || _1ceb4cd8b_IsLinux(_5511_os));;
}



inline jule::Bool _1ceb4dd15_Is32Bit(jule::Str _5812_arch) {
	return _1ceb4d1aa_IsI386(_5812_arch);;
}



inline jule::Bool _1ceb4e0ac_Is64Bit(jule::Str _6112_arch) {
	return (_1ceb4d452_IsAmd64(_6112_arch) || _1ceb4d6e9_IsArm64(_6112_arch));;
}



inline void _1cebb16a2_init(void) {
	jule::Str _2513_path = _1cec2069a_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1cebb085a_PathWd=({
			auto except = _1e86541b4_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1cebaec22_PathExec=_1e86d6d29_Dir(_2513_path);
		_1ceb54898_PathStdlib=_1e86d32ba_Join(jule::Slice<jule::Str>::make({_1cebaec22_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1cebb0d11_PathApi=_1e86d32ba_Join(jule::Slice<jule::Str>::make({_1cebaec22_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1ceee917c_IsUnaryOp(jule::Str _31214_kind) {
	{
		auto expr = &(_1cee48131_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e7d9a8:;
		if (it != expr_end) {
			jule::Str *_31312_op = it;
			{
				if ((_31214_kind == (*(_31312_op)))) {
					return true;;
				};
			}
			_iter_next_1a6e7d9a8:;
			++it;
			goto _iter_begin_1a6e7d9a8;
		}
		_iter_end_1a6e7d9a8:;
	};
	return false;;
}



inline jule::Bool _1ceee9468_IsBinOp(jule::Str _32212_kind) {
	{
		auto expr = &(_1cee48384_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e7de4d:;
		if (it != expr_end) {
			jule::Str *_32312_op = it;
			{
				if ((_32212_kind == (*(_32312_op)))) {
					return true;;
				};
			}
			_iter_next_1a6e7de4d:;
			++it;
			goto _iter_begin_1a6e7de4d;
		}
		_iter_end_1a6e7de4d:;
	};
	return false;;
}



inline jule::Bool _1ceee9a2e_IsStr(jule::Str _34210_k) {
	return ((!(_34210_k.empty())) && ((_34210_k[0LL] == '\"') || _1ceee9cc6_IsRawStr(_34210_k)));;
}



inline jule::Bool _1ceee9cc6_IsRawStr(jule::Str _34513_k) {
	return ((!(_34513_k.empty())) && (_34513_k[0LL] == '`'));;
}



inline jule::Bool _1ceeea06d_IsRune(jule::Str _34911_k) {
	return ((!(_34911_k.empty())) && (_34911_k[0LL] == '\''));;
}



inline jule::Bool _1ceeea689_IsBool(jule::Str _35511_k) {
	return ((_35511_k == jule::Str("true", 4)) || (_35511_k == jule::Str("false", 5)));;
}



inline jule::Bool _1ceeea931_IsFloat(jule::Str _35812_k) {
	if (_1ceaa4a18_HasPrefix(_35812_k, jule::Str("0x", 2))) {
		return _1ceac354d_ContainsAny(_35812_k, jule::Str(".pP", 3));;
	};
	return _1ceac354d_ContainsAny(_35812_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1ceeeabc8_IsNum(jule::Str _36610_k) {
	if (_36610_k.empty()) {
		return false;;
	};
	jule::U8 _3719_b = _36610_k[0LL];;
	return ((_3719_b == '.') || (('0' <= _3719_b) && (_3719_b <= '9')));;
}



inline jule::Bool _1ceeeb217_IsIgnoreIdent(jule::Str _38118_ident) {
	return (_38118_ident == jule::Str("_", 1));;
}



inline jule::Bool _1ceeeb4ae_IsAnonIdent(jule::Str _38416_ident) {
	return (_38416_ident == jule::Str("<anonymous>", 11));;
}



inline jule::Bool _1ceeeb9ed_IsSpace(jule::I32 _39712_r) {
	{
		auto expr = &(_1cee47e11_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e878a2:;
		if (it != expr_end) {
			jule::I32 *_39812_cr = it;
			{
				if ((_39712_r == (*(_39812_cr)))) {
					return true;;
				};
			}
			_iter_next_1a6e878a2:;
			++it;
			goto _iter_begin_1a6e878a2;
		}
		_iter_end_1a6e878a2:;
	};
	return false;;
}



inline jule::Bool _1ceeebe4e_IsLetter(jule::I32 _40713_r) {
	return _1ce96d21c_IsLetter(_40713_r);;
}



inline jule::Bool _1ceeec48d_IsDecimal(jule::U8 _42714_b) {
	return (('0' <= _42714_b) && (_42714_b <= '9'));;
}



inline jule::Bool _1ceeec735_IsBinary(jule::U8 _43013_b) {
	return ((_43013_b == '0') || (_43013_b == '1'));;
}



inline jule::Bool _1ceeec9cc_IsOctal(jule::U8 _43312_b) {
	return (('0' <= _43312_b) && (_43312_b <= '7'));;
}



inline jule::Bool _1ceeecc74_IsHex(jule::U8 _43610_b) {
	{
		
		if ((('0' <= _43610_b) && (_43610_b <= '9'))) {
			_case_begin_1a6e8c665:;
			{
				return true;;
			}
		}
		else if ((('a' <= _43610_b) && (_43610_b <= 'f'))) {
			_case_begin_1a6e8be8e:;
			{
				return true;;
			}
		}
		else if ((('A' <= _43610_b) && (_43610_b <= 'F'))) {
			_case_begin_1a6e8c005:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a6e8be28:;
			{
				return false;;
			}
		}
		_match_end_1a6e8bd5c:;
	};
}



inline jule::Bool _1ceeed01b_IsAssign(jule::U64 _45113_id) {
	return (((((((_45113_id == static_cast<jule::U64>(2LLU)) || (_45113_id == static_cast<jule::U64>(30LLU))) || (_45113_id == static_cast<jule::U64>(33LLU))) || (_45113_id == static_cast<jule::U64>(20LLU))) || (_45113_id == static_cast<jule::U64>(27LLU))) || (_45113_id == static_cast<jule::U64>(3LLU))) || (_45113_id == static_cast<jule::U64>(7LLU)));;
}



inline jule::Bool _1ceeed2b3_IsPostfixOp(jule::Str _46216_kind) {
	{
		auto expr = &(_1ceee2e78_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e909ba:;
		if (it != expr_end) {
			jule::Str *_46312_op = it;
			{
				if ((_46216_kind == (*(_46312_op)))) {
					return true;;
				};
			}
			_iter_next_1a6e909ba:;
			++it;
			goto _iter_begin_1a6e909ba;
		}
		_iter_end_1a6e909ba:;
	};
	return false;;
}



inline jule::Bool _1ceeed55a_IsAssignOp(jule::Str _47215_kind) {
	if (_1ceeed2b3_IsPostfixOp(_47215_kind)) {
		return true;;
	};
	{
		auto expr = &(_1ceee3275_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e91bb9:;
		if (it != expr_end) {
			jule::Str *_47612_op = it;
			{
				if ((_47215_kind == (*(_47612_op)))) {
					return true;;
				};
			}
			_iter_next_1a6e91bb9:;
			++it;
			goto _iter_begin_1a6e91bb9;
		}
		_iter_end_1a6e91bb9:;
	};
	return false;;
}



inline jule::Ptr<_1ceeedd0d_File> _1d000033c_NewFileSet(jule::Str _6315_path) {
	return jule::new_ptr<_1ceeedd0d_File>(_1ceeedd0d_File{._field_Path=_6315_path, });;
}



inline _1ceb4952a_Log _1d0001ad0_makeErr(jule::I64 _11112_row, jule::I64 _11122_col, jule::Ptr<_1ceeedd0d_File>* _11133_f, jule::Str _11143_fmt, jule::Slice<jule::Any> _11156_args) {
	return _1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_11112_row, ._field_Column=_11122_col, ._field_Path=(*(_11133_f)).get()._field_Path, ._field_Text=_1ceb4996a_Logf(_11143_fmt, _11156_args), };;
}



inline jule::Bool _1d0001e65_bytesHasPrefix(jule::Slice<jule::U8>* _12120_bytes, jule::Str _12135_prefix) {
	if (((*(_12120_bytes)).len() < _12135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_12135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6e9b542:;
		if (it != expr_end) {
			jule::I64 _1259_i = it - expr->begin();
			{
				if (((*(_12120_bytes))[_1259_i] != _12135_prefix[_1259_i])) {
					return false;;
				};
			}
			_iter_next_1a6e9b542:;
			++it;
			_1259_i++;
			goto _iter_begin_1a6e9b542;
		}
		_iter_end_1a6e9b542:;
	};
	return true;;
}



inline jule::Str _1d00022a6_floatFmtE(jule::Slice<jule::U8>* _13315_txt, jule::I64 _13332_i) {
	jule::Str __jule_func_result;
	(_13332_i)++;
	if ((_13332_i >= (*(_13315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13913_b = (*(_13315_txt))[_13332_i];;
	if ((_13913_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13913_b == '+') || (_13913_b == '-'))) {
		(_13332_i)++;
		if ((_13332_i >= (*(_13315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_13315_txt))[_13332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1539_first = _13332_i;;
	for (; (_13332_i < (*(_13315_txt)).len()); (_13332_i)++) {
		{
			_13913_b=(*(_13315_txt))[_13332_i];
			if (((_13913_b != '_') && (!(_1ceeec48d_IsDecimal(_13913_b))))) {
				goto _iter_end_1a6e9ee6e;
			};
		}
	_iter_next_1a6e9ee6e:;
	}
	_iter_end_1a6e9ee6e:;;
	if ((_13332_i == _1539_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_13315_txt)).slice(0LL, _13332_i));
	return __jule_func_result;;
}



inline jule::Str _1d000263b_floatFmtP(jule::Slice<jule::U8>* _16715_txt, jule::I64 _16728_i) {
	return _1d00022a6_floatFmtE(_16715_txt, _16728_i);;
}



inline jule::Str _1d000297c_floatFmtDotnp(jule::Slice<jule::U8>* _17119_txt, jule::I64 _17136_i) {
	if (((*(_17119_txt))[_17136_i] != '.')) {
		return jule::Str();;
	};
	(_17136_i)++;
	_julec_label_loop:;
	for (; (_17136_i < (*(_17119_txt)).len()); (_17136_i)++) {
		{
			jule::U8 _17913_b = (*(_17119_txt))[_17136_i];;
			{
				
				if ((_17913_b == '_') || _1ceeec48d_IsDecimal(_17913_b)) {
					_case_begin_1a6ea2cc9:;
					{
						goto _iter_next_1a6ea216e;
					}
				}
				else if (_1d0004231_isFloatFmtP(_17913_b, _17136_i)) {
					_case_begin_1a6ea2d40:;
					{
						return _1d000263b_floatFmtP(_17119_txt, _17136_i);;
					}
				}
				else {
					_case_begin_1a6ea2c63:;
					{
						goto _iter_end_1a6ea216e;
					}
				}
				_match_end_1a6ea2bec:;
			};
		}
	_iter_next_1a6ea216e:;
	}
	_iter_end_1a6ea216e:;;
	return jule::Str();;
}



inline jule::Str _1d0002cbd_floatFmtDotfp(jule::Slice<jule::U8>* _19219_txt, jule::I64 _19236_i) {
	_19236_i+=2LL;
	return _1d00022a6_floatFmtE(_19219_txt, _19236_i);;
}



inline jule::Str _1d000310e_floatFmtDotp(jule::Slice<jule::U8>* _19718_txt, jule::I64 _19735_i) {
	(_19735_i)++;
	return _1d00022a6_floatFmtE(_19718_txt, _19735_i);;
}



inline jule::Str _1d0003560_floatNum(jule::Slice<jule::U8>* _20214_txt, jule::I64 _20231_i) {
	jule::Str __jule_func_result;
	(_20231_i)++;
	if ((_20231_i >= (*(_20214_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)));
		return __jule_func_result;;
	};
	if (((*(_20214_txt))[_20231_i] == '_')) {
		(_20231_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
		return __jule_func_result;;
	};
	for (; (_20231_i < (*(_20214_txt)).len()); (_20231_i)++) {
		{
			jule::U8 _21213_b = (*(_20214_txt))[_20231_i];;
			if (((_20231_i > 1LL) && ((_21213_b == 'e') || (_21213_b == 'E')))) {
				__jule_func_result = _1d00022a6_floatFmtE(_20214_txt, _20231_i);
				return __jule_func_result;;
			};
			if (((_21213_b != '_') && (!(_1ceeec48d_IsDecimal(_21213_b))))) {
				goto _iter_end_1a6ea565b;
			};
		}
	_iter_next_1a6ea565b:;
	}
	_iter_end_1a6ea565b:;;
	if ((_20231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_20214_txt)).slice(0LL, _20231_i));
	return __jule_func_result;;
}



inline jule::Str _1d0003807_commonNum(jule::Slice<jule::U8>* _22715_txt) {
	jule::Str __jule_func_result;
	jule::I64 _22813_i = 0LL;;
	_julec_label_loop:;
	for (; (_22813_i < (*(_22715_txt)).len()); (_22813_i)++) {
		{
			jule::U8 _23113_b = (*(_22715_txt))[_22813_i];;
			{
				
				if ((_23113_b == '.')) {
					_case_begin_1a6ea95c7:;
					{
						__jule_func_result = _1d0003560_floatNum(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((_23113_b == '_')) {
					_case_begin_1a6ea964e:;
					{
						goto _iter_next_1a6ea88d4;
					}
				}
				else if (_1d0003de0_isFloatFmtE(_23113_b, _22813_i)) {
					_case_begin_1a6ea96c6:;
					{
						__jule_func_result = _1d00022a6_floatFmtE(_22715_txt, _22813_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1ceeec48d_IsDecimal(_23113_b)))) {
					_case_begin_1a6ea974d:;
					{
						goto _iter_end_1a6ea88d4;
					}
				}
				_match_end_1a6ea94ea:;
			};
		}
	_iter_next_1a6ea88d4:;
	}
	_iter_end_1a6ea88d4:;;
	if ((_22813_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_22715_txt)).slice(0LL, _22813_i));
	return __jule_func_result;;
}



inline jule::Str _1d0003a9e_binaryNum(jule::Slice<jule::U8>* _25015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1d0001e65_bytesHasPrefix(_25015_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_25015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _25913_i = 2LL;;
	for (; (_25913_i < (*(_25015_txt)).len()); (_25913_i)++) {
		{
			if ((((*(_25015_txt))[_25913_i] != '_') && (!(_1ceeec735_IsBinary((*(_25015_txt))[_25913_i]))))) {
				goto _iter_end_1a6eaaed0;
			};
		}
	_iter_next_1a6eaaed0:;
	}
	_iter_end_1a6eaaed0:;;
	if ((_25913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_25015_txt)).slice(0LL, _25913_i));
	return __jule_func_result;;
}



inline jule::Bool _1d0003de0_isFloatFmtE(jule::U8 _27216_b, jule::I64 _27225_i) {
	return ((_27225_i > 0LL) && ((_27216_b == 'e') || (_27216_b == 'E')));;
}



inline jule::Bool _1d0004231_isFloatFmtP(jule::U8 _27616_b, jule::I64 _27625_i) {
	return ((_27625_i > 0LL) && ((_27616_b == 'p') || (_27616_b == 'P')));;
}



inline jule::Bool _1d0004572_isFloatFmtDotnp(jule::Slice<jule::U8>* _28021_txt, jule::I64 _28038_i) {
	if (((*(_28021_txt))[_28038_i] != '.')) {
		return false;;
	};
	(_28038_i)++;
	_julec_label_loop:;
	for (; (_28038_i < (*(_28021_txt)).len()); (_28038_i)++) {
		{
			jule::U8 _28713_b = (*(_28021_txt))[_28038_i];;
			{
				
				if ((_28713_b == '_') || _1ceeec48d_IsDecimal(_28713_b)) {
					_case_begin_1a6eb1e09:;
					{
						goto _iter_next_1a6eb0c1b;
					}
				}
				else if (_1d0004231_isFloatFmtP(_28713_b, _28038_i)) {
					_case_begin_1a6eb1e70:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a6eb1d93:;
					{
						goto _iter_end_1a6eb0c1b;
					}
				}
				_match_end_1a6eb1d2c:;
			};
		}
	_iter_next_1a6eb0c1b:;
	}
	_iter_end_1a6eb0c1b:;;
	return false;;
}



inline jule::Bool _1d00048b3_isFloatFmtDotp(jule::Slice<jule::U8>* _30120_txt, jule::I64 _30133_i) {
	{
		
		if (((*(_30120_txt)).len() < 3LL)) {
			_case_begin_1a6eb3aed:;
			{
				goto _case_begin_1a6eb3427;
			}
		}
		else if (((*(_30120_txt))[_30133_i] != '.')) {
			_case_begin_1a6eb3427:;
			{
				goto _case_begin_1a6eb348d;
			}
		}
		else if ((((*(_30120_txt))[(_30133_i + 1LL)] != 'p') && ((*(_30120_txt))[(_30133_i + 1LL)] != 'P'))) {
			_case_begin_1a6eb348d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a6eb33b1:;
			{
				return true;;
			}
		}
		_match_end_1a6eb32e5:;
	};
}



inline jule::Bool _1d0004c04_isFloatFmtDotfp(jule::Slice<jule::U8>* _31421_txt, jule::I64 _31434_i) {
	{
		
		if (((*(_31421_txt)).len() < 4LL)) {
			_case_begin_1a6eb5dec:;
			{
				goto _case_begin_1a6eb5737;
			}
		}
		else if (((*(_31421_txt))[_31434_i] != '.')) {
			_case_begin_1a6eb5737:;
			{
				goto _case_begin_1a6eb579d;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 1LL)] != 'f') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'F'))) {
			_case_begin_1a6eb579d:;
			{
				goto _case_begin_1a6eb5814;
			}
		}
		else if ((((*(_31421_txt))[(_31434_i + 2LL)] != 'p') && ((*(_31421_txt))[(_31434_i + 1LL)] != 'P'))) {
			_case_begin_1a6eb5814:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a6eb52c5:;
			{
				return true;;
			}
		}
		_match_end_1a6eb5209:;
	};
}



inline jule::Str _1d0005155_octalNum(jule::Slice<jule::U8>* _32914_txt) {
	jule::Str __jule_func_result;
	if (((*(_32914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _33713_octalStart = 1LL;;
	jule::Bool _33913_o = false;;
	if (((*(_32914_txt))[1LL] == 'o')) {
		if (((*(_32914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_33713_octalStart)++;
		_33913_o=true;
	};
	jule::I64 _34813_i = _33713_octalStart;;
	for (; (_34813_i < (*(_32914_txt)).len()); (_34813_i)++) {
		{
			jule::U8 _35013_b = (*(_32914_txt))[_34813_i];;
			if ((_35013_b == '.')) {
				if (_33913_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1d0003560_floatNum(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (_1d0003de0_isFloatFmtE(_35013_b, _34813_i)) {
				__jule_func_result = _1d00022a6_floatFmtE(_32914_txt, _34813_i);
				return __jule_func_result;;
			};
			if (((_35013_b != '_') && (!(_1ceeec9cc_IsOctal(_35013_b))))) {
				goto _iter_end_1a6eb9e45;
			};
		}
	_iter_next_1a6eb9e45:;
	}
	_iter_end_1a6eb9e45:;;
	if ((_34813_i == _33713_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32914_txt)).slice(0LL, _34813_i));
	return __jule_func_result;;
}



inline jule::Str _1d00053ec_hexNum(jule::Slice<jule::U8>* _37112_txt) {
	jule::Str __jule_func_result;
	if (((*(_37112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_37112_txt))[0LL] != '0') || (((*(_37112_txt))[1LL] != 'x') && ((*(_37112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _38013_i = 2LL;;
	_julec_label_loop:;
	for (; (_38013_i < (*(_37112_txt)).len()); (_38013_i)++) {
		{
			jule::U8 _38313_b = (*(_37112_txt))[_38013_i];;
			{
				
				if (_1d00048b3_isFloatFmtDotp(_37112_txt, _38013_i)) {
					_case_begin_1a6ec0e5c:;
					{
						__jule_func_result = _1d000310e_floatFmtDotp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1d0004c04_isFloatFmtDotfp(_37112_txt, _38013_i)) {
					_case_begin_1a6ec0ed4:;
					{
						__jule_func_result = _1d0002cbd_floatFmtDotfp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1d0004231_isFloatFmtP(_38313_b, _38013_i)) {
					_case_begin_1a6ec105b:;
					{
						__jule_func_result = _1d000263b_floatFmtP(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (_1d0004572_isFloatFmtDotnp(_37112_txt, _38013_i)) {
					_case_begin_1a6ec10d3:;
					{
						__jule_func_result = _1d000297c_floatFmtDotnp(_37112_txt, _38013_i);
						return __jule_func_result;;
					}
				}
				else if (((_38313_b != '_') && (!(_1ceeecc74_IsHex(_38313_b))))) {
					_case_begin_1a6ec115a:;
					{
						goto _iter_end_1a6ec019d;
					}
				}
				_match_end_1a6ec0d6e:;
			};
		}
	_iter_next_1a6ec019d:;
	}
	_iter_end_1a6ec019d:;;
	if ((_38013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_37112_txt)).slice(0LL, _38013_i));
	return __jule_func_result;;
}



inline jule::Str _1d000573d_hexEscape(jule::Slice<jule::U8>* _40415_txt, jule::I64 _40428_n) {
	jule::Str __jule_func_result;
	if (((*(_40415_txt)).len() < _40428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _41013_i = 2LL;;
	for (; (_41013_i < _40428_n); (_41013_i)++) {
		{
			if ((!(_1ceeecc74_IsHex((*(_40415_txt))[_41013_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a6ec3833:;
	}
	_iter_end_1a6ec3833:;;
	__jule_func_result=static_cast<jule::Str>((*(_40415_txt)).slice(0LL, _40428_n));
	return __jule_func_result;;
}



inline jule::Str _1d00059d5_bigUnicodePointEscape(jule::Slice<jule::U8>* _42227_txt) {
	return _1d000573d_hexEscape(_42227_txt, 10LL);;
}



inline jule::Str _1d0005c9e_littleUnicodePointEscape(jule::Slice<jule::U8>* _42730_txt) {
	return _1d000573d_hexEscape(_42730_txt, 6LL);;
}



inline jule::Str _1d0005e58_hexByteEscape(jule::Slice<jule::U8>* _43219_txt) {
	return _1d000573d_hexEscape(_43219_txt, 4LL);;
}



inline jule::Str _1d00061de_byteEscape(jule::Slice<jule::U8>* _43716_txt) {
	jule::Str __jule_func_result;
	if (((*(_43716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1ceeec9cc_IsOctal((*(_43716_txt))[1LL]))) || (!(_1ceeec9cc_IsOctal((*(_43716_txt))[2LL])))) || (!(_1ceeec9cc_IsOctal((*(_43716_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_43716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1ceb4952a_Log> _1d000abd8_Lex(jule::Ptr<_1ceeedd0d_File> _82612_f, jule::I64 _82622_mode) {
	if ((_82612_f == nullptr)) {
		return nullptr;;
	};
	_1d00068c6_lex _83113_lex = _1d00068c6_lex{._field_mode=_82622_mode, ._field_file=_82612_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1d0009467_newLine(&_83113_lex);
	_1d0007465_lex(&_83113_lex);
	if ((_83113_lex._field_errors.len() > 0LL)) {
		return _83113_lex._field_errors;;
	};
	_82612_f.get()._field_Tokens=_83113_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1a533e871_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1a5346ceb_Len64(_6119_x)));;
}



inline jule::I64 _1a53407a6_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1a5341444_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1a534119c_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a533ee7b__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1a5341444_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1a5340542__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1a5346a54_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1a5346ceb_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a53479ab_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a534913e_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1a52a5551_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a52a583c_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a52a5ad4_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a52a5e03_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a52a83de_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a6c0db23:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a534d709_IsInf(_4714_f, 0LL) || _1a534d495_IsNaN(_4714_f)) {
			_case_begin_1a6c0db9a:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a6c0da13:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a534d83b_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1a52a5ad4_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a52a5e03_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1a534d363_NaN(void) {
	return static_cast<jule::F64>(_1a52a5e03_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1a534d495_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1a534d5c7_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1a52a5e03_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1a52a5e03_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1a534d709_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a534d83b_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a534ed26_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a534e70a_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a534d495_IsNaN(_1118_x) || _1a534d709_IsInf(_1118_x, 1LL)) {
			_case_begin_1a6c4ec74:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a6c4eceb:;
			{
				return static_cast<jule::F64>(_1a534d363_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a6c4ed73:;
			{
				return static_cast<jule::F64>(_1a534d5c7_Inf(-1LL));;
			}
		}
		_match_end_1a6c4eba8:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a52a83de_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1a534ed26_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1a52a5e03_F64FromBits(static_cast<jule::U64>((_1a52a5ad4_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a5353bc6_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1a534ed26_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1a71e24ad:;
		}
		_iter_end_1a71e24ad:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1a5354116_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a52a83de_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1a534e70a_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1a482d1e5_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1a482585d_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1a4e6a07e_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1a482585d_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1a5034d6e_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a7442b09:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1a52a5551_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1a5034d6e_floatInfo>)((&(_1a48102c6_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a7442cd5:;
			{
				_8313_bits=static_cast<jule::U64>(_1a52a5ad4_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1a5034d6e_floatInfo>)((&(_1a4810738_f64info))));
			}
		}
		else {
			_case_begin_1a74424dd:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a7440eae:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1a74463c1:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a74487e1:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1a7448989:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1a7447889:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1a74477bd:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a7446e2c:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a7442d4b:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a744636b:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1a50d89c2_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1a5038b64_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1a4e378cb_decimalSlice _13213_digs = _1a4e378cb_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1a537d45e_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a744c471:;
				{
					_8258_prec=static_cast<jule::I64>(_1a4e6a07e_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a744c4e8:;
				{
					_8258_prec=static_cast<jule::I64>(_1a4e6a07e_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a744c581:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a744b827:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a744eab1:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a744e165:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1a744e484:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a744e5b6:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1a537cd98_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1a537ceca_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1a4dd4b31_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1a4e487bb_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1a4dd4b31_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1a5034d6e_floatInfo* _18327_flt) {
	_1a537ecac_decimal _18413_d = _1a537ecac_decimal{};;
	_1a537ee99_assign(&_18413_d, _1835_mant);
	_1a53800cb_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1a4e378cb_decimalSlice _18713_digs = _1a4e378cb_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1a500c891_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1a4e378cb_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7454665:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7456c94:;
				{
					_18233_prec=static_cast<jule::I64>(_1a4e6a07e_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7456d4e:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a7456a85:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a745868b:;
				{
					_1a5380472_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7458713:;
				{
					_1a5380472_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a745878a:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1a5380472_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1a745857b:;
		};
		_18713_digs=_1a4e378cb_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1a4e487bb_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1a4e487bb_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1a4e378cb_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a745bd54:;
			{
				return _1a5035d92_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a745bdba:;
			{
				return _1a50b661a_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a745be31:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1a5035d92_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1a50b661a_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1a4e6a07e_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1a745bc11:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1a500c891_roundShortest(_1a537ecac_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1a5034d6e_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1a537ecac_decimal _28713_upper = _1a537ecac_decimal{};;
	_1a537ee99_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1a53800cb_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1a537ecac_decimal _30613_lower = _1a537ecac_decimal{};;
	_1a537ee99_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1a53800cb_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1a7469889;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1a746e938:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1a746e9b0:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1a746ea37:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a746e86c:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1a7472c16:;
					{
						_1a5380472_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a7472c8d:;
					{
						_1a538020d_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a7472d15:;
					{
						_1a5380340_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1a7472b4a:;
			};
		}
	_iter_next_1a7469889:;
	}
	_iter_end_1a7469889:;;
}



inline jule::Slice<jule::U8> _1a5035d92_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1a4e378cb_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1a4811be0_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1a7477e91:;
		}
		_iter_end_1a7477e91:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a7479e0a:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a7479cea:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1a7479a53:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1a74799ed:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1a50b661a_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1a4e378cb_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1a4811be0_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1a747e6e5:;
		}
		_iter_end_1a747e6e5:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1a74804a4:;
		}
		_iter_end_1a74804a4:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1a50d89c2_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1a5034d6e_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a53839c5_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a53839c5_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1a5038b64_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1a5034d6e_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a748385e:;
	}
	_iter_end_1a748385e:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1a748b8bc:;
		}
		_iter_end_1a748b8bc:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1a748cb43:;
		}
		_iter_end_1a748cb43:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1a4e10431_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a7490c56:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a7490cbc:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1a74905d5:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1a7490580:;
	};
	return _50613_dst;;
}



inline jule::I64 _1a4811be0_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1a4e6a07e_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1a4e10431_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1a47ebb42_ConvError _1a4e46e18_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__1a47ebb42_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1a749c229:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1a749c12a:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1a4e10431_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1a749e02d:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1a4e10431_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1a749dd41:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1a4e10431_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1a749dda7:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a749d99a:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1a749d8ce:;
					};
				};
			}
		}
		else {
			_case_begin_1a74965a8:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a7496542:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a74a3c14:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a74a332e:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a74a3609:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1a74a3483:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a74a36e7:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a74a4d58:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a74a3939:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74a5e69:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a7204998:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1a4e10431_lower(_10912_c)) && (_1a4e10431_lower(_10912_c) <= 'z'))) {
						_case_begin_1a7205735:;
						{
							_11017_d=static_cast<jule::U8>(((_1a4e10431_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a720416d:;
						{
							goto _iter_next_1a74a5e69;
						}
					}
					else {
						_case_begin_1a6bb73a1:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a6bb734b:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1a74a5e69:;
			++it;
			goto _iter_begin_1a74a5e69;
		}
		_iter_end_1a74a5e69:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a4e4704a_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a4e46e18_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1a5045bd7_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a4e46e18_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type134));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type134));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1a47ee0a6_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a52a5e03_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1a533e871_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(_4122_man, _1a5036ed6_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(_4122_man, _1a5036ed6_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a52a5e03_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a47ee1d8_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a52a583c_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1a533e871_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(_11022_man, _1a5036ed6_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(_11022_man, _1a5036ed6_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1a52a583c_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1a537b380_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1a72261a1:;
	}
	_iter_end_1a72261a1:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a537b4b2_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a722a55c:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1a722a5d4;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a722a5d4:;
			{
				jule::I64 _8317_caseN = _1a537b380_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a534d5c7_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a722a65b:;
			{
				if ((_1a537b380_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a534d363_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a722a491:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a537b5e4_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a72311cd:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a7231255:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a723108a:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1a4e10431_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1a72373c1:;
					{
						goto _iter_next_1a7236821;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1a7237448:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1a7236821;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1a72374c0:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1a7236821;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a7236821;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1a4e10431_lower(_13313_c))) && (_1a4e10431_lower(_13313_c) <= 'f'))) {
					_case_begin_1a7237547:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1a4e10431_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a7236821;
					}
				}
				_match_end_1a72372e4:;
			};
			goto _iter_end_1a7236821;
		}
	_iter_next_1a7236821:;
	}
	_iter_end_1a7236821:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1a4e10431_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a724192a;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1a724192a:;
		}
		_iter_end_1a724192a:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a537c12d_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1a4810738_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1a724b87a:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1a724b902:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a537bbcc_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1a537bbcc_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1a724b979:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1a537bbcc_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a724b7ae:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a537c260_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1a48102c6_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1a7251176:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1a72511ed:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a537bdec_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1a537bdec_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1a7251275:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1a537bdec_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a72510aa:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a47ebb42_ConvError _1a537c392_atofHex(jule::Str _55112_s, _1a5034d6e_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__1a47ebb42_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I64 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1a725606b:;
	}
	_iter_end_1a725606b:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a743c5a4:;
	}
	_iter_end_1a743c5a4:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1a74ad317:;
	}
	_iter_end_1a74ad317:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1a48102c6_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1a52a583c_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a52a5e03_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a47ebb42_ConvError _1a537c5d4_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a47ebb42_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537b4b2_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537b5e4_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a537c392_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1a48102c6_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a537c260_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a47ee1d8_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a47ee1d8_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a537ecac_decimal _66213_d = _1a537ecac_decimal{};;
	if ((!(_1a537b847_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a537b979_floatBits(&_66213_d, &(_1a48102c6_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1a52a583c_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError _1a537c716_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537b4b2_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537b5e4_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a537c392_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1a4810738_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a537c12d_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a47ee0a6_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a47ee0a6_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a537ecac_decimal _71913_d = _1a537ecac_decimal{};;
	if ((!(_1a537b847_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a537b979_floatBits(&_71913_d, &(_1a4810738_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1a52a5e03_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError _1a537c848_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a537c5d4_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a537c716_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a537c97a_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a47ebb42_ConvError __jule_assign_result = _1a537c848_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type134));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type134));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1a537cd98_ryuFtoaFixed32(_1a4e378cb_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1a5346a54_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1a537d591_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dcab_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1a537e020_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1a537d32c_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1a537ceca_ryuFtoaFixed64(_1a4e378cb_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1a5346ceb_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1a537d591_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dddd_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1a537e020_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1a537d32c_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1a537d32c_formatDecimal(_1a4e378cb_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1a537d22d_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a7613846:;
	}
	_iter_end_1a7613846:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1a76172ea:;
	}
	_iter_end_1a76172ea:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a761d0d1:;
	}
	_iter_end_1a761d0d1:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1a537d45e_ryuFtoaShortest(_1a4e378cb_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1a5034d6e_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a5341444_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1a537da47_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a537d805_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1a537da47_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1a537d591_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1a48102c6_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dcab_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dcab_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dcab_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dddd_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dddd_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a537dddd_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1a537e020_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1a537e020_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1a537e020_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1a537da47_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1a537d591_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1a537d6c3_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a537d805_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1a5034d6e_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1a537da47_ryuDigits(_1a4e378cb_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a537e152_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a537e152_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a537e152_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1a537db79_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1a537db79_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1a763ce36:;
		}
		_iter_end_1a763ce36:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1a537db79_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a763d4ca:;
	}
	_iter_end_1a763d4ca:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1a763cb28:;
	}
	_iter_end_1a763cb28:;;
}



inline void _1a537db79_ryuDigits32(_1a4e378cb_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1a76439ec;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a76439ec:;
	}
	_iter_end_1a76439ec:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1a764a4b5:;
	}
	_iter_end_1a764a4b5:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a537dcab_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1a5036ed6_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a537d6c3_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a537dddd_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1a5036ed6_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a537d6c3_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a534913e_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a53479ab_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a537e020_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1a765956d:;
	}
	_iter_end_1a765956d:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a537e152_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1a5380818_trim(_1a537ecac_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1a765cb37:;
	}
	_iter_end_1a765cb37:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1a538094a_rightShift(_1a537ecac_decimal* _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1a76613ee:;
				}
				_iter_end_1a76613ee:;;
				goto _iter_end_1a7660046;
			};
			jule::U64 _48213_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1a7660046:;
	}
	_iter_end_1a7660046:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1a7663ba4:;
	}
	_iter_end_1a7663ba4:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1a76640d3:;
	}
	_iter_end_1a76640d3:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1a5380818_trim(_46320_a);
}



inline jule::Bool _1a5380ac1_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1a76684a0:;
	}
	_iter_end_1a76684a0:;;
	return false;;
}



inline void _1a5380d46_leftShift(_1a537ecac_decimal* _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1a537ebad_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1a5380ac1_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1a537ebad_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = (*(_53119_a))._field_nd;;
	jule::I64 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1a766b9e2:;
	}
	_iter_end_1a766b9e2:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1a766e550:;
	}
	_iter_end_1a766e550:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1a5380818_trim(_53119_a);
}



inline jule::Bool _1a5381187_shouldRoundUp(_1a537ecac_decimal* _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1a53827a4_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1a5383200_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a53839c5_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1a5382b39_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1a5383200_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1a53839c5_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1a5382dd1_Itoa(jule::I64 _809_i) {
	return _1a5382b39_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1a5383200_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1a5383497_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1a53839c5_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1a76ac24c:;
		}
		_iter_end_1a76ac24c:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1a5383497_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1a53407a6_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1a76b5a2a:;
		}
		_iter_end_1a76b5a2a:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1a76b8643:;
		}
		_iter_end_1a76b8643:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1a47aea5b_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a76d29ae:;
			{
				return _1a4709dd5_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a76d2a25:;
			{
				return _1a4799eca_SysUint;;
			}
		}
		else {
			_case_begin_1a76d2daa:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a76d3361:;
	};
}



inline jule::I64 _1a47d2056_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a76d4373:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a76d43d9:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a76d3e11:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a76d3e77:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3)) {
			_case_begin_1a76d3edd:;
			{
				return _1a4791c19_BitSize;;
			}
		}
		else {
			_case_begin_1a76d3938:;
			{
				return -1LL;;
			}
		}
		_match_end_1a76d3d67:;
	};
}



inline jule::Str _1a4709687_IntFromBits(jule::I64 _8616_bits) {
	{
		auto &_match_expr{ _8616_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a76d630e:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a76d6375:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a76d6122:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a76d6188:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1a76d45b5:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a76d5d58:;
	};
}



inline jule::Str _1a47d24b8_UintFromBits(jule::I64 _10417_bits) {
	{
		auto &_match_expr{ _10417_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a76d7783:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a76d77e9:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a76d7585:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a76d75eb:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1a76d7101:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a76d6ebe:;
	};
}



inline jule::Str _1a4791ea0_FloatFromBits(jule::I64 _12218_bits) {
	{
		auto &_match_expr{ _12218_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a76d8c07:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a76d8c6d:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1a76d8575:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a76d8443:;
	};
}



inline jule::Bool _1a46e1240_CheckBitFloat(jule::Str _15018_val, jule::I64 _15028_bit) {
	({
		auto except = _1a537c97a_ParseFloat(_15018_val, _15028_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1a4785180_BitsizeOfFloat(jule::F64 _16019_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16019_x) && (_16019_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a76ddc51:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a76dcda4:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a76dcd0a:;
	};
}



inline jule::I64 _1a472da85_BitsizeOfInt(jule::I64 _17617_x) {
	{
		
		if (((-128LL <= _17617_x) && (_17617_x <= 127LL))) {
			_case_begin_1a76deb31:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17617_x) && (_17617_x <= 32767LL))) {
			_case_begin_1a76deb97:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17617_x) && (_17617_x <= 2147483647LL))) {
			_case_begin_1a76dec0d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a76de35b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a76de290:;
	};
}



inline jule::I64 _1a472dbb7_BitsizeOfUint(jule::U64 _19618_x) {
	{
		
		if ((_19618_x <= 255LLU)) {
			_case_begin_1a76e1a45:;
			{
				return 8LLU;;
			}
		}
		else if ((_19618_x <= 65535LLU)) {
			_case_begin_1a76e1aab:;
			{
				return 16LLU;;
			}
		}
		else if ((_19618_x <= 4294967295LLU)) {
			_case_begin_1a76e1b22:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a76e0e84:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a76e0a99:;
	};
}



inline void _1a4790de4_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1ceb55e82_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a76e2bab:;
				{
					_1a4791c19_BitSize=64LLU;
					_1a4709dd5_SysInt=jule::Str("i64", 3);
					_1a4799eca_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a76e2c33:;
				{
					_1a4791c19_BitSize=32LLU;
					_1a4709dd5_SysInt=jule::Str("i32", 3);
					_1a4799eca_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1a76e2b01:;
		};
	};
}



inline void _1a4791026_init(void) {
	_1a4790de4_UpdateTarget();
}



inline jule::F64 _1a5386368_Min(jule::Str _6112_k) {
	_6112_k=_1a47aea5b_RealKindOf(_6112_k);
	{
		auto &_match_expr{ _6112_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a76e554e:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a76e55b5:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a76e5065:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a76e50dc:;
			{
				return jule::MIN_I64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a76e5164:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a76e51db:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a76e2e64:;
			{
				return 0LL;;
			}
		}
		_match_end_1a76e312e:;
	};
}



inline jule::F64 _1a538649a_Max(jule::Str _8312_k) {
	_8312_k=_1a47aea5b_RealKindOf(_8312_k);
	{
		auto &_match_expr{ _8312_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a76e5a16:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a76e6b16:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a76e6b7c:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a76e6be3:;
			{
				return jule::MAX_I64;;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a76e6c6a:;
			{
				return 255LL;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a76e6ece:;
			{
				return 65535LL;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a76e7045:;
			{
				return 4294967295LL;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a76e70bc:;
			{
				return jule::MAX_U64;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a76e7144:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a76e7353:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a76e673c:;
			{
				return 0LL;;
			}
		}
		_match_end_1a76e66d7:;
	};
}



inline jule::Bool _1a53867a8_IsI8Compatible(jule::Str _623_k) {
	return (_623_k == jule::Str("i8", 2));;
}



inline jule::Bool _1a53868da_IsI16Compatible(jule::Str _1124_k) {
	return ((_1124_k == jule::Str("i8", 2)) || (_1124_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1a5386a1c_IsI32Compatible(jule::Str _1724_k) {
	return ((((_1724_k == jule::Str("i8", 2)) || (_1724_k == jule::Str("i16", 3))) || (_1724_k == jule::Str("i32", 3))) || (_1724_k == jule::Str("u8", 2)));;
}



inline jule::Bool _1a5386b4e_IsI64Compatible(jule::Str _2524_k) {
	return ((((_2524_k == jule::Str("i8", 2)) || (_2524_k == jule::Str("i16", 3))) || (_2524_k == jule::Str("i32", 3))) || (_2524_k == jule::Str("i64", 3)));;
}



inline jule::Bool _1a5386c81_IsU8Compatible(jule::Str _3323_k) {
	return (_3323_k == jule::Str("u8", 2));;
}



inline jule::Bool _1a5386db3_IsU16Compatible(jule::Str _3824_k) {
	return ((_3824_k == jule::Str("u8", 2)) || (_3824_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1a5386ee5_IsU32Compatible(jule::Str _4324_k) {
	return (((_4324_k == jule::Str("u8", 2)) || (_4324_k == jule::Str("u16", 3))) || (_4324_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1a5387127_IsU64Compatible(jule::Str _5024_k) {
	return ((((_5024_k == jule::Str("u8", 2)) || (_5024_k == jule::Str("u16", 3))) || (_5024_k == jule::Str("u32", 3))) || (_5024_k == jule::Str("u64", 3)));;
}



inline jule::Bool _1a5387259_IsF32Compatible(jule::Str _5824_k) {
	return (_5824_k == jule::Str("f32", 3));;
}



inline jule::Bool _1a538738b_IsF64Compatible(jule::Str _6324_k) {
	return (_6324_k == jule::Str("f64", 3));;
}



inline jule::Bool _1a53874bd_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a7700092:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a7700878:;
			{
				return (_7036_k2 == jule::Str("int", 3));;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a77008de:;
			{
				return (_7036_k2 == jule::Str("uintptr", 7));;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a770036c:;
			{
				return (_7036_k2 == jule::Str("uint", 4));;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a77003d3:;
			{
				return _1a53867a8_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7700449:;
			{
				return _1a53868da_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a77004b0:;
			{
				return _1a5386a1c_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7700988:;
			{
				return _1a5386b4e_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a77009ee:;
			{
				return _1a5386c81_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a7700a65:;
			{
				return _1a5386db3_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a7700acb:;
			{
				return _1a5386ee5_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a7700b42:;
			{
				return _1a5387127_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7700ba8:;
			{
				return _1a5387259_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7700c30:;
			{
				return _1a538738b_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a7700ca7:;
			{
				return (_7036_k2 == jule::Str("bool", 4));;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a7700d2e:;
			{
				return (_7036_k2 == jule::Str("str", 3));;
			}
		}
		else {
			_case_begin_1a770025c:;
			{
				return false;;
			}
		}
		_match_end_1a770012a:;
	};
}



inline jule::Bool _1a5387600_IsI16Greater(jule::Str _11021_k) {
	return (_11021_k == jule::Str("i8", 2));;
}



inline jule::Bool _1a5387732_IsI32Greater(jule::Str _11521_k) {
	return ((_11521_k == jule::Str("i8", 2)) || (_11521_k == jule::Str("i16", 3)));;
}



inline jule::Bool _1a5387864_IsI64Greater(jule::Str _12021_k) {
	return (((_12021_k == jule::Str("i8", 2)) || (_12021_k == jule::Str("i16", 3))) || (_12021_k == jule::Str("i32", 3)));;
}



inline jule::Bool _1a5387996_IsU16Greater(jule::Str _12721_k) {
	return (_12721_k == jule::Str("u8", 2));;
}



inline jule::Bool _1a5387d09_IsU32Greater(jule::Str _13221_k) {
	return ((_13221_k == jule::Str("u8", 2)) || (_13221_k == jule::Str("u16", 3)));;
}



inline jule::Bool _1a5387e3b_IsU64Greater(jule::Str _13821_k) {
	return (((_13821_k == jule::Str("u8", 2)) || (_13821_k == jule::Str("u16", 3))) || (_13821_k == jule::Str("u32", 3)));;
}



inline jule::Bool _1a538806d_IsF32Greater(jule::Str _14517_k) {
	return (_14517_k != jule::Str("f64", 3));;
}



inline jule::Bool _1a53881a0_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1a53882d2_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a77013e5:;
			{
				return _1a5388d71_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a770894c:;
			{
				return _1a538915c_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a77089b3:;
			{
				return _1a538915c_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7708a29:;
			{
				return _1a5387600_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7708672:;
			{
				return _1a5387732_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a77086d8:;
			{
				return _1a5387864_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a770874e:;
			{
				return _1a5387996_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a77087b5:;
			{
				return _1a5387d09_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a7708c5a:;
			{
				return _1a5387e3b_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7708cc1:;
			{
				return _1a538806d_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7708d37:;
			{
				return _1a53881a0_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a7708dae:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a770850c:;
			{
				return false;;
			}
		}
		_match_end_1a7708463:;
	};
}



inline jule::Bool _1a5388d71_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == jule::Str("i8", 2)) || (_2717_k == jule::Str("i16", 3))) || (_2717_k == jule::Str("i32", 3))) || (_2717_k == jule::Str("i64", 3))) || (_2717_k == jule::Str("int", 3)));;
}



inline jule::Bool _1a538915c_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == jule::Str("u8", 2)) || (_3619_k == jule::Str("u16", 3))) || (_3619_k == jule::Str("u32", 3))) || (_3619_k == jule::Str("u64", 3))) || (_3619_k == jule::Str("uint", 4))) || (_3619_k == jule::Str("uintptr", 7)));;
}



inline jule::Bool _1a5389404_IsInt(jule::Str _4610_k) {
	return (_1a5388d71_IsSigInt(_4610_k) || _1a538915c_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1a5389723_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == jule::Str("f32", 3)) || (_5112_k == jule::Str("f64", 3)));;
}



inline jule::Bool _1a53899ba_IsNum(jule::Str _5610_k) {
	return (_1a5389404_IsInt(_5610_k) || _1a5389723_IsFloat(_5610_k));;
}



inline jule::Bool _1a5389c62_IsSigNum(jule::Str _6113_k) {
	return (_1a5388d71_IsSigInt(_6113_k) || _1a5389723_IsFloat(_6113_k));;
}



inline void _1a53936e9_lshiftUnsig(_1a5389ec6_Const* _59021_c, _1a5389ec6_Const* _59032_x) {
	jule::U64 _5919_l = _1a538c748_AsU64(_59021_c);;
	jule::U64 _5929_r = _1a538c748_AsU64(_59032_x);;
	_1a538cea7_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1a53939e6_rshiftUnsig(_1a5389ec6_Const* _59621_c, _1a5389ec6_Const* _59632_x) {
	jule::U64 _5979_l = _1a538c748_AsU64(_59621_c);;
	jule::U64 _5989_r = _1a538c748_AsU64(_59632_x);;
	_1a538cea7_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1a5431e80_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1a5432106_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1a544e84e_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1a544de9c_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1a544e299_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1a544eb90_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_1ceaa00c9_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1a74b310d:;
	}
	_iter_end_1a74b310d:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1a544e541_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a74b7431:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a74b7497:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a74b750d:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a74b7574:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a74b75eb:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a74b7673:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a74b76ea:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a74b7772:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a74b77e9:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a74b7871:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a74b7310:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1a544e84e_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1a544e541_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a74bd4e2:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1a4e4704a_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a74bcd82:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1a4e4704a_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a74bcde8:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a4e4704a_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1a74bb688:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1a4e4704a_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1a74bba73:;
	};
}



inline jule::Slice<jule::U8> _1a544eb90_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1a544e84e_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1259_r));;
}



inline jule::I64 _1a48c5600_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1a750257b:;
	}
	_iter_end_1a750257b:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1a48c6502_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9dc65_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1a750512d:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a7505194:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1a7504d20:;
			};
		}
	_iter_next_1a75043e6:;
	}
	_iter_end_1a75043e6:;;
	return nullptr;;
}



inline void _1a48c6c0b_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		(*(_4722_buf))+=jule::Str("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a750611d:;
			{
				(*(_4722_buf))+=_1a482d1e5_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type135))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7506daa:;
			{
				(*(_4722_buf))+=_1a482d1e5_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1a7507064:;
			{
				(*(_4722_buf))+=_1a5382b39_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1a75061a6:;
			{
				(*(_4722_buf))+=_1a5382b39_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a75069d1:;
			{
				(*(_4722_buf))+=_1a5382b39_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7506a47:;
			{
				(*(_4722_buf))+=_1a5382b39_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1a75070db:;
			{
				(*(_4722_buf))+=_1a53827a4_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1a7507152:;
			{
				(*(_4722_buf))+=_1a53827a4_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1a75071b8:;
			{
				(*(_4722_buf))+=_1a53827a4_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a750722e:;
			{
				(*(_4722_buf))+=_1a53827a4_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a7507295:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a750730b:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					(*(_4722_buf))+=jule::Str("true", 4);
				} else {
					(*(_4722_buf))+=jule::Str("false", 5);
				};
			}
		}
		else {
			_case_begin_1a750687c:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1a7505617:;
	};
}



inline void _1a48c7415_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any>* _8651_args) {
	jule::Any _879_arg = (*(_8651_args))[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1a48c6c0b_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1a49088ca_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any>* _9460_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1a48c7415_applyFmtByDefault(_9436_buf, _9451_j, _9460_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		(*(_9436_buf))+=jule::Str("{}", 2);
		return;;
	};
	_1e77bd2b8_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1a4912917_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _1e77de4b5_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1a48c5600_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1a48c5600_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_1e77bd2b8_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1a48c6502_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1a7513955;
			};
			_1a49088ca_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), &(_11322_args));
			if ((_11913_j >= _11322_args.len())) {
				_1e77bd2b8_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1a7513955;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1a7513955:;
	}
	_iter_end_1a7513955:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_1e77bd2b8_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1a4a899a1_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1a4912917_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1a53a928c_parameterUsesGenerics(jule::Ptr<_1a53a62ab_ParamIns>* _37431_p, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>* _37446_generics) {
	if (_1a53a32b9_IsSelf((*(_37431_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1a54a8e91_kindUsesGenerics(&((*(_37431_p)).get()._field_Kind), _37446_generics);;
}



inline jule::Ptr<_1a5496665_TypeSymbol> _1a53ab7ab_buildType(jule::Ptr<_1a48619a9_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1a546737d_Value> _1a53aba97_buildExpr(jule::Ptr<_1a4865eca_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a53abd3e_buildTypeAlias(jule::Ptr<_1a4877c78_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1a5491594_TypeAlias>(_1a5491594_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_CppLinked=_11223_decl.get()._field_CppLinked, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1a53ab7ab_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1a4852208_Field> _1a53ac15d_buildField(jule::Ptr<_1a487b41e_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1a4852208_Field>(_1a4852208_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1a53ab7ab_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1a4852208_Field>> _1a53ac405_buildFields(jule::Slice<jule::Ptr<_1a487b41e_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1a4852208_Field>> _13513_fields = jule::Slice<jule::Ptr<_1a4852208_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77bdced:;
		if (it != expr_end) {
			jule::Ptr<_1a487b41e_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1a53ac15d_buildField(_13617_decl));;
			}
			_iter_next_1a77bdced:;
			++it;
			goto _iter_begin_1a77bdced;
		}
		_iter_end_1a77bdced:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1a487d19b_Struct> _1a53ac69c_buildStruct(jule::Ptr<_1a487bbc2_StructDecl> _14220_decl) {
	return jule::new_ptr<_1a487d19b_Struct>(_1a487d19b_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1a53ac405_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_CppLinked=_14220_decl.get()._field_CppLinked, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1a53a2b8c_Param> _1a53ac944_buildParam(jule::Ptr<_1a4872118_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1a53ab7ab_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1a53a2b8c_Param>> _1a53accb8_buildParams(jule::Slice<jule::Ptr<_1a4872118_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1a53a2b8c_Param>> _16613_params = jule::Slice<jule::Ptr<_1a53a2b8c_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77c1949:;
		if (it != expr_end) {
			jule::Ptr<_1a4872118_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1a53ac944_buildParam(_16717_decl));;
			}
			_iter_next_1a77c1949:;
			++it;
			goto _iter_begin_1a77c1949;
		}
		_iter_end_1a77c1949:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1a53a24b6_RetType> _1a53ad060_buildRetType(jule::Ptr<_1a4864abc_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1a53a24b6_RetType>(_1a53a24b6_RetType{._field_Kind=_1a53ab7ab_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53ad307_buildFn(jule::Ptr<_1a4873438_FnDecl> _18316_decl) {
	return jule::new_ptr<_1a53a44c9_Fn>(_1a53a44c9_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_CppLinked=_18316_decl.get()._field_CppLinked, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1a53ad060_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1a53accb8_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _1a53ad59e_buildMethods(jule::Slice<jule::Ptr<_1a4873438_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1a53a44c9_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1a53a44c9_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77c5288:;
		if (it != expr_end) {
			jule::Ptr<_1a4873438_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1a53ad307_buildFn(_20317_decl));;
			}
			_iter_next_1a77c5288:;
			++it;
			goto _iter_begin_1a77c5288;
		}
		_iter_end_1a77c5288:;
	};
	return _20213_methods;;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a53ad846_buildTrait(jule::Ptr<_1a487c2cc_TraitDecl> _20919_decl) {
	return jule::new_ptr<_1a53b63cb_Trait>(_1a53b63cb_Trait{._field_Token=_20919_decl.get()._field_Token, ._field_Ident=_20919_decl.get()._field_Ident, ._field_Public=_20919_decl.get()._field_Public, ._field_Methods=_1a53ad59e_buildMethods(&(_20919_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1a53b7a2b_EnumItem> _1a53adadd_buildEnumItem(jule::Ptr<_1a48795d7_EnumItemDecl> _21822_decl) {
	return jule::new_ptr<_1a53b7a2b_EnumItem>(_1a53b7a2b_EnumItem{._field_Token=_21822_decl.get()._field_Token, ._field_Ident=_21822_decl.get()._field_Ident, ._field_Value=_1a53aba97_buildExpr(_21822_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>> _1a53add85_buildEnumItems(jule::Slice<jule::Ptr<_1a48795d7_EnumItemDecl>>* _22624_decls) {
	jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>> _22713_items = jule::Slice<jule::Ptr<_1a53b7a2b_EnumItem>>::alloc(0LL, (*(_22624_decls)).len());;
	{
		auto expr = _22624_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77c76ca:;
		if (it != expr_end) {
			jule::Ptr<_1a48795d7_EnumItemDecl> _22817_decl = *it;
			{
				_22713_items = jule::alloc_for_append(_22713_items,1);_22713_items.__push(_1a53adadd_buildEnumItem(_22817_decl));;
			}
			_iter_next_1a77c76ca:;
			++it;
			goto _iter_begin_1a77c76ca;
		}
		_iter_end_1a77c76ca:;
	};
	return _22713_items;;
}



inline jule::Ptr<_1a53b8521_Enum> _1a53ae12c_buildEnum(jule::Ptr<_1a487a110_EnumDecl> _23418_decl) {
	return jule::new_ptr<_1a53b8521_Enum>(_1a53b8521_Enum{._field_Token=_23418_decl.get()._field_Token, ._field_Public=_23418_decl.get()._field_Public, ._field_Ident=_23418_decl.get()._field_Ident, ._field_Kind=_1a53ab7ab_buildType(_23418_decl.get()._field_Kind), ._field_Items=_1a53add85_buildEnumItems(&(_23418_decl.get()._field_Items))});;
}



inline jule::Ptr<_1a53b9555_TypeEnumItem> _1a53ae57d_buildTypeEnumItem(jule::Ptr<_1a487ab16_TypeEnumItemDecl> _24426_decl) {
	return jule::new_ptr<_1a53b9555_TypeEnumItem>(_1a53b9555_TypeEnumItem{._field_Token=_24426_decl.get()._field_Token, ._field_Ident=_24426_decl.get()._field_Ident, ._field_Kind=_1a53ab7ab_buildType(_24426_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>> _1a53ae825_buildTypeEnumItems(jule::Slice<jule::Ptr<_1a487ab16_TypeEnumItemDecl>>* _25228_decls) {
	jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>> _25313_items = jule::Slice<jule::Ptr<_1a53b9555_TypeEnumItem>>::alloc(0LL, (*(_25228_decls)).len());;
	{
		auto expr = _25228_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77c9c82:;
		if (it != expr_end) {
			jule::Ptr<_1a487ab16_TypeEnumItemDecl> _25417_decl = *it;
			{
				_25313_items = jule::alloc_for_append(_25313_items,1);_25313_items.__push(_1a53ae57d_buildTypeEnumItem(_25417_decl));;
			}
			_iter_next_1a77c9c82:;
			++it;
			goto _iter_begin_1a77c9c82;
		}
		_iter_end_1a77c9c82:;
	};
	return _25313_items;;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53aeabc_buildTypeEnum(jule::Ptr<_1a487b221_TypeEnumDecl> _26022_decl) {
	return jule::new_ptr<_1a53b9b1b_TypeEnum>(_1a53b9b1b_TypeEnum{._field_Token=_26022_decl.get()._field_Token, ._field_Public=_26022_decl.get()._field_Public, ._field_Ident=_26022_decl.get()._field_Ident, ._field_Items=_1a53ae825_buildTypeEnumItems(&(_26022_decl.get()._field_Items))});;
}



inline jule::Ptr<_1a5418939_Var> _1a53aed64_buildVar(jule::Ptr<_1a4874417_VarDecl> _26917_decl) {
	return jule::new_ptr<_1a5418939_Var>(_1a5418939_Var{._field_Token=_26917_decl.get()._field_Token, ._field_Ident=_26917_decl.get()._field_Ident, ._field_CppLinked=_26917_decl.get()._field_CppLinked, ._field_Constant=_26917_decl.get()._field_Constant, ._field_Mutable=_26917_decl.get()._field_Mutable, ._field_Public=_26917_decl.get()._field_Public, ._field_Statically=_26917_decl.get()._field_Statically, ._field_Reference=_26917_decl.get()._field_Reference, ._field_Kind=_1a53ab7ab_buildType(_26917_decl.get()._field_Kind), ._field_Value=_1a53aba97_buildExpr(_26917_decl.get()._field_Expr), ._field_Refers=static__1a53aa37b_new(), ._field_Directives=_26917_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1a5418939_Var>> _1a53b010b_buildVars(jule::Slice<jule::Ptr<_1a4874417_VarDecl>> _28618_decls) {
	jule::Slice<jule::Ptr<_1a5418939_Var>> _28713_vars = jule::Slice<jule::Ptr<_1a5418939_Var>>::alloc(0LL, _28618_decls.len());;
	{
		auto expr = &(_28618_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a77ccdb7:;
		if (it != expr_end) {
			jule::Ptr<_1a4874417_VarDecl> _28817_decl = *it;
			{
				_28713_vars = jule::alloc_for_append(_28713_vars,1);_28713_vars.__push(_1a53aed64_buildVar(_28817_decl));;
			}
			_iter_next_1a77ccdb7:;
			++it;
			goto _iter_begin_1a77ccdb7;
		}
		_iter_end_1a77ccdb7:;
	};
	return _28713_vars;;
}



inline jule::Ptr<_1a53be082_Impl> _1a53b03a3_buildImpl(jule::Ptr<_1a487c8d7_Impl> _29418_decl) {
	return jule::new_ptr<_1a53be082_Impl>(_1a53be082_Impl{._field_Base=_29418_decl.get()._field_Base, ._field_Dest=_29418_decl.get()._field_Dest, ._field_Methods=_1a53ad59e_buildMethods(&(_29418_decl.get()._field_Methods)), ._field_Statics=_1a53b010b_buildVars(_29418_decl.get()._field_Statics)});;
}



inline jule::Bool _1a53bd427_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1a5492287_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1a79d33b9:;
			{
				jule::Ptr<_1a5496ed4_Prim> _14513_prim = _1a549461e_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1a5389c62_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1a79d240c:;
			{
				jule::Ptr<_1a5496ed4_Prim> _15113_prim = _1a549461e_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1a538915c_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1a79d3122:;
			{
				jule::Ptr<_1a5496ed4_Prim> _15713_prim = _1a549461e_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1a5389723_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1a79d3199:;
			{
				jule::Ptr<_1a5496ed4_Prim> _16313_prim = _1a549461e_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1a53899ba_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1a79d3221:;
			{
				return _1a5493909_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1a79d2e02:;
			{
				return (!(_1a5493909_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1a79d2e68:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1a79d2ee0:;
			{
				jule::Ptr<_1a5496ed4_Prim> _17513_prim = _1a549461e_Prim((*(_14234_g)).ptr());;
				if ((_17513_prim != nullptr)) {
					return (_1a53899ba_IsNum(_17513_prim.get()._field_Kind) || _1a549a218_IsStr(_17513_prim.ptr()));;
				};
				if ((_1a5494ae7_Ptr((*(_14234_g)).ptr()) != nullptr)) {
					return true;;
				};
				jule::Ptr<_1a487d575_StructIns> _18213_s = _1a5495a71_Struct((*(_14234_g)).ptr());;
				if ((_18213_s != nullptr)) {
					return ((((_18213_s.get()._field_Operators._field_Gt != nullptr) && (_18213_s.get()._field_Operators._field_GtEq != nullptr)) && (_18213_s.get()._field_Operators._field_Lt != nullptr)) && (_18213_s.get()._field_Operators._field_LtEq != nullptr));;
				};
				jule::Ptr<_1a53b8521_Enum> _18913_enm = _1a5494d5b_Enum((*(_14234_g)).ptr());;
				if ((_18913_enm != nullptr)) {
					return _1a53899ba_IsNum(_1a5492683_Str(_18913_enm.get()._field_Kind.get()._field_Kind.ptr()));;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a79d2be3:;
			{
				return false;;
			}
		}
		_match_end_1a79d2b49:;
	};
}



inline jule::Bool _1a53bd713_isBuiltinConstraint(jule::Str* _19925_ident) {
	{
		auto expr = &(_1a53bb887_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a79db9aa:;
		if (it != expr_end) {
			jule::Str *_20012_bc = it;
			{
				if (((*(_19925_ident)) == (*(_20012_bc)))) {
					return true;;
				};
			}
			_iter_next_1a79db9aa:;
			++it;
			goto _iter_begin_1a79db9aa;
		}
		_iter_end_1a79db9aa:;
	};
	return false;;
}



inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53c111c_newScopeCheckerBase(jule::Ptr<_1a53ea93d_Sema>* _5829_s, jule::Ptr<_1a53a717a_FnIns> _5843_owner) {
	return jule::new_ptr<_1a53cab4e_scopeChecker>(_1a53cab4e_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1a54614cb_SymbolTable>(), });;
}



inline jule::Ptr<_1a53cab4e_scopeChecker> _1a53c14a2_newScopeChecker(jule::Ptr<_1a53ea93d_Sema>* _6625_s, jule::Ptr<_1a53a717a_FnIns> _6639_owner) {
	jule::Ptr<_1a53cab4e_scopeChecker> _6713_base = _1a53c111c_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1a53c98b7_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1a53c9d3a_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1a53c98b7_scopeLabel> _1a53c17e3_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1a53cab4e_scopeChecker> _7636_scope) {
	jule::Ptr<_1a53c98b7_scopeLabel> _7713_label = _1a53ce625_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1a53ce625_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1a7a0153b:;
	}
	_iter_end_1a7a0153b:;;
	return _7713_label;;
}



inline jule::Bool _1a53c1b78_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1a53c40dc_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a7a03098:;
			{
				jule::Ptr<_1a5398127_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a7a03120:;
			{
				jule::Ptr<_1a5466305_Data> _9813_d = _9021_Model.cast_ptr<_1a5466305_Data>(&__jule_any_type23);;
				return _1a53c1b78_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1a7a03010:;
	};
	return false;;
}



inline jule::Bool _1a53c1eb9_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1a53c40dc_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a7a05496:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a53c40dc_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a7a0551d:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1a53c4e34_InfIter>(&__jule_any_type36).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a7a05287:;
			{
				jule::Ptr<_1a53c5c8c_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1a53c5c8c_RangeIter>(&__jule_any_type40);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1a53c1b78_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a7a0530e:;
			{
				jule::Ptr<_1a53c53a7_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1a53c53a7_WhileIter>(&__jule_any_type38);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1a53c1b78_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1a53c1b78_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a7a05386:;
			{
				jule::Ptr<_1a53c7d38_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1a53c7d38_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7a088b7:;
					if (it != expr_end) {
						jule::Ptr<_1a53c8883_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a7a097ec:;
								if (it != expr_end) {
									jule::Ptr<_1a5466305_Data> *_12420_expr = it;
									{
										if (_1a53c1b78_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1a7a097ec:;
									++it;
									goto _iter_begin_1a7a097ec;
								}
								_iter_end_1a7a097ec:;
							};
						}
						_iter_next_1a7a088b7:;
						++it;
						goto _iter_begin_1a7a088b7;
					}
					_iter_end_1a7a088b7:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a7a0351b:;
			{
				jule::Ptr<_1a53c4b48_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1a53c4b48_Conditional>(&__jule_any_type35);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7a0aca4:;
					if (it != expr_end) {
						jule::Ptr<_1a53c44d8_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1a53c1b78_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1a7a0aca4:;
						++it;
						goto _iter_begin_1a7a0aca4;
					}
					_iter_end_1a7a0aca4:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a7a03582:;
			{
				jule::Ptr<_1a5466305_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1a5466305_Data>(&__jule_any_type23);;
				return _1a53c1b78_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1a7a034a5:;
			{
				return false;;
			}
		}
		_match_end_1a7a03450:;
	};
}



inline jule::I64 _1a53c230a_countMatchType(jule::Ptr<_1a53c7d38_Match>* _14720_m, jule::Ptr<_1a5492287_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1a5492683_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7a0dc0d:;
		if (it != expr_end) {
			jule::Ptr<_1a53c8883_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1a7a0dc0d;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7a0ea55:;
					if (it != expr_end) {
						jule::Ptr<_1a5466305_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1a7a0dc0d;
							};
							if ((_1499_kind == _1a5492683_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1a5492287_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1a7a0ea55:;
						++it;
						goto _iter_begin_1a7a0ea55;
					}
					_iter_end_1a7a0ea55:;
				};
			}
			_iter_next_1a7a0dc0d:;
			++it;
			goto _iter_begin_1a7a0dc0d;
		}
		_iter_end_1a7a0dc0d:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1a5466305_Data>> _1a53c25a2_getDatasFromTupleData(jule::Ptr<_1a5466305_Data>* _17131_d) {
	if ((_1a54962ad_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1a7a13608:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1a539bd51_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1a7a1124e:;
				{
					jule::Ptr<_1a549bc53_Tuple> _17721_t = _1a54962ad_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1a5466305_Data>> _17821_r = jule::Slice<jule::Ptr<_1a5466305_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7a12195:;
						if (it != expr_end) {
							jule::Ptr<_1a5492287_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1a7a12195:;
							++it;
							goto _iter_begin_1a7a12195;
						}
						_iter_end_1a7a12195:;
					};
					return _17821_r;;
				}
			}
			_match_end_1a7a111a5:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1a5466305_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1a53c2ddd_checkMut(jule::Ptr<_1a53ea93d_Sema>* _20618_s, jule::Ptr<_1a5466305_Data>* _20629_left, jule::Ptr<_1a5466305_Data> _20646_right, jule::Ptr<_1ceee8973_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1a7a16782:;
			{
				_1a53ed600_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1a5493909_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1a7a160bc:;
			{
				if (((_20660_op.get()._field_Kind != jule::Str("=", 1)) && (_1a5495a71_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1a53ed600_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7a16056:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a7a15e9b:;
	};
}



inline jule::Bool _1a53c3372_checkAssign(jule::Ptr<_1a53ea93d_Sema>* _22521_s, jule::Ptr<_1a5466305_Data>* _22536_left, jule::Ptr<_1a5466305_Data> _22553_right, jule::Ptr<_1ceee8973_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1a53a717a_FnIns> _2269_f = _1a549580c_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1a53ed600_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1a5466bb8_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1a7a1b27b:;
			{
				_1a53ed600_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1a53ed91e_pushSugggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1a7a1aae9:;
			{
				_1a53ed600_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1a53c2ddd_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1a7a1ab60:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a7a1aa83:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a7a1a962:;
	};
}



inline jule::Bool _1a53c3619_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a7a180e1:;
			{
				return (!((*(_24731_n)).cast_ptr<_1a4870446_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a7a1ce92:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7a1cd1b:;
			{
				return false;;
			}
		}
		_match_end_1a7a1ac09:;
	};
}



inline jule::Bool _1a53c38b1_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type46) {
			_case_begin_1a7a1de82:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a7a1dee8:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1a5466305_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1a7a1e7ce:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a7a1eb86:;
						{
							return false;;
						}
					}
					_match_end_1a7a1e8cd:;
				};
			}
		}
		else {
			_case_begin_1a7a1d24a:;
			{
				return false;;
			}
		}
		_match_end_1a7a1d1e5:;
	};
}



inline jule::Bool _1a53c3b58_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7a202b3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7a1ed95:;
			{
				return false;;
			}
		}
		_match_end_1a7a1eca7:;
	};
}



inline jule::Ptr<_1a5418939_Var> _1a53e0009_findVarInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_cpp_linked) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b67b47:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1a5418939_Var> _4817_v = _1a54621ad_FindVar(_4717_f.ptr(), _4649_ident, _4661_cpp_linked);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1a7b67b47:;
			++it;
			goto _iter_begin_1a7b67b47;
		}
		_iter_end_1a7b67b47:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a53e0438_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_cpp_linked) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b690ee:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1a5491594_TypeAlias> _6017_ta = _1a5462565_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_cpp_linked);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1a7b690ee:;
			++it;
			goto _iter_begin_1a7b690ee;
		}
		_iter_end_1a7b690ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a487d19b_Struct> _1a53e0823_findStructInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_cpp_linked) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b6a595:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1a487d19b_Struct> _7217_s = _1a546291c_FindStruct(_7117_f.ptr(), _7052_ident, _7064_cpp_linked);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1a7b6a595:;
			++it;
			goto _iter_begin_1a7b6a595;
		}
		_iter_end_1a7b6a595:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53a44c9_Fn> _1a53e0c85_findFnInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_cpp_linked) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b6ba3b:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1a53a44c9_Fn> _8417_f = _1a5462cc4_FindFn(_8317_file.ptr(), _8248_ident, _8260_cpp_linked);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1a7b6ba3b:;
			++it;
			goto _iter_begin_1a7b6ba3b;
		}
		_iter_end_1a7b6ba3b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b63cb_Trait> _1a53e1093_findTraitInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b6c0be:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1a53b63cb_Trait> _9617_t = _1a54630d2_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1a7b6c0be:;
			++it;
			goto _iter_begin_1a7b6c0be;
		}
		_iter_end_1a7b6c0be:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b8521_Enum> _1a53e13d4_findEnumInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b6e0b0:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1a53b8521_Enum> _10817_e = _1a54633e0_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1a7b6e0b0:;
			++it;
			goto _iter_begin_1a7b6e0b0;
		}
		_iter_end_1a7b6e0b0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1a53b9b1b_TypeEnum> _1a53e1725_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b70369:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1a53b9b1b_TypeEnum> _12017_e = _1a54636ed_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1a7b70369:;
			++it;
			goto _iter_begin_1a7b70369;
		}
		_iter_end_1a7b70369:;
	};
	return nullptr;;
}



inline jule::Any _1a53e1c20_defByIdentPackage(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_cppLinked) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b71832:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1a5464578_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_cppLinked);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1a7b71832:;
			++it;
			goto _iter_begin_1a7b71832;
		}
		_iter_end_1a7b71832:;
	};
	return nullptr;;
}



inline jule::Bool _1a53e7d25_isStdPackage(jule::Str _36117_f, jule::Str _36125_p) {
	return _1ceaa4a18_HasPrefix(_36117_f, _1e86d32ba_Join(jule::Slice<jule::Str>::make({_1ceb54898_PathStdlib,_36125_p})));;
}



inline jule::Bool _1a53e8b06_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7b87381:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a7b873e7:;
			{
				jule::Ptr<_1a539a998_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1a53e8b06_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a7b87194:;
			{
				jule::Ptr<_1a539a1b2_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1a539a1b2_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1a53e8b06_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a7b8720a:;
			{
				jule::Ptr<_1a5396664_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1a5396664_UnaryExprModel>(&__jule_any_type74);;
				if ((_2317_unary.get()._field_Op.get()._field_Kind != jule::Str("*", 1))) {
					return false;;
				};
				if ((_1a5494ae7_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1a5494883_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1a53e8b06_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1a7b8676a:;
			{
				return false;;
			}
		}
		_match_end_1a7b86715:;
	};
}



inline _1ceb4952a_Log _1a53e9024_compilerErr(jule::Ptr<_1ceee8973_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_1ceb4952a_Log _4213_log = _1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_1ceb4996a_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_1ceeeeeda_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1a53e9365_impIsLookupable(jule::Ptr<_1a53e27e2_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_CppLinked) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1a53e51b8_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1a53e9662_appendRetVars(jule::Slice<jule::Ptr<_1a5418939_Var>>* _6723_dest, jule::Ptr<_1a53a717a_FnIns>* _6742_f) {
	if ((_1a53a493b_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1a5492287_TypeKind>> _7213_types = _1a53a829c_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b90224:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _7317_ident = *it;
			{
				if ((_1ceeeb217_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _1ceeeb4ae_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1a7b90224;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_1a5418939_Var>(_1a5418939_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Data=jule::new_ptr<_1a5466305_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1a7b90224:;
			++it;
			_7310_i++;
			goto _iter_begin_1a7b90224;
		}
		_iter_end_1a7b90224:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1a53e991a_appendParamVars(jule::Slice<jule::Ptr<_1a5418939_Var>>* _9725_dest, jule::Ptr<_1a53a717a_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b93e2b:;
		if (it != expr_end) {
			jule::Ptr<_1a53a62ab_ParamIns> _10217_p = *it;
			{
				if ((_1ceeeb217_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _1ceeeb4ae_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1a7b93e2b;
				};
				jule::Ptr<_1a5418939_Var> _10717_v = jule::new_ptr<_1a5418939_Var>(_1a5418939_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(), ._field_Value=jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Data=jule::new_ptr<_1a5466305_Data>()}), });;
				{
					
					if (_1a53a32b9_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1a7b96813:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a5491d58_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1a53a352d_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1a53a352d_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549a768_Sptr>(_1a549a768_Sptr{._field_Elem=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_CppIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 7);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1a7b96549:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549b1c5_Slc>(_1a549b1c5_Slc{._field_Elem=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_CppIdent=_10217_p.get()._field_Kind.get()._field_CppIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 8)});
						}
					}
					else {
						_case_begin_1a7b945be:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1a7b96428:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1a7b93e2b:;
			++it;
			goto _iter_begin_1a7b93e2b;
		}
		_iter_end_1a7b93e2b:;
	};
}



inline void _1a53e9be5_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1a5491594_TypeAlias>>* _15734_dest, jule::Ptr<_1a53a717a_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b9b9d3:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1a5490a5a_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1a486dca2_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1a5491594_TypeAlias>(_1a5491594_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1a7b9b9d3:;
			++it;
			_16710_i++;
			goto _iter_begin_1a7b9b9d3;
		}
		_iter_end_1a7b9b9d3:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1a487d575_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7b9d100:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1a5490a5a_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1a486dca2_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1a5491594_TypeAlias>(_1a5491594_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1a7b9d100:;
				++it;
				_18114_i++;
				goto _iter_begin_1a7b9d100;
			}
			_iter_end_1a7b9d100:;
		};
	};
}



inline jule::Ptr<_1a54614cb_SymbolTable> _1a53ea047_findFile(jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>* _19518_files, jule::Ptr<_1ceeedd0d_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ba0102:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1a7ba0102:;
			++it;
			goto _iter_begin_1a7ba0102;
		}
		_iter_end_1a7ba0102:;
	};
	return nullptr;;
}



inline void _1a53ea4a9_pushSugggestion(_1ceb4952a_Log* _20431_log, jule::Str _20442_fmt, jule::Slice<jule::Any> _20455_args) {
	_20431_log->_field_Suggestion=_1ceb4996a_Logf(_20442_fmt, _20455_args);
}



inline jule::Bool _1a543239d_traitHasReferenceReceiver(jule::Ptr<_1a53b63cb_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7d9d93d:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1a7d9d93d;
				};
				jule::Ptr<_1a53a2b8c_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1a53a352d_IsRef(_3313_p.ptr()) && _1a53a32b9_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1a7d9d93d:;
			++it;
			goto _iter_begin_1a7d9d93d;
		}
		_iter_end_1a7d9d93d:;
	};
	return false;;
}



inline jule::Bool _1a54324d0_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1a5466305_Data>* _4132_d) {
	jule::Str _429_value = _1a482d1e5_FmtFloat(static_cast<jule::F64>(_1a538c9ac_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1a46e1240_CheckBitFloat(_429_value, static_cast<jule::I64>(_1a47d2056_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1a544dc16_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1a5466305_Data>* _4630_d) {
	jule::F64 _479_min = _1a5386368_Min(_4618_kind);;
	jule::F64 _489_max = _1a538649a_Max(_4618_kind);;
	{
		
		if (_1a538e618_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7da4944:;
			{
				jule::F64 _5113_x = _1a538c270_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a5353bc6_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1a538ddcb_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7da50c6:;
			{
				jule::F64 _5813_x = _1a538c9ac_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1a538db67_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7da514d:;
			{
				jule::F64 _6313_x = _1a538c9ac_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1a7da4ea5:;
	};
	return false;;
}



inline jule::Bool _1a544dd48_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1a5466305_Data>* _6932_d) {
	jule::F64 _709_max = _1a538649a_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && (_6920_kind == jule::Str("u8", 2)))) {
		return _1a5431e80_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1a538b7be_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1a538e618_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7da9d78:;
			{
				jule::F64 _7713_x = _1a538c270_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a5353bc6_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1a538ddcb_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7da9dde:;
			{
				jule::F64 _8713_x = _1a538c9ac_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1a538db67_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7da9e66:;
			{
				jule::F64 _9213_x = _1a538c9ac_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1a7da9707:;
	};
	return false;;
}



inline jule::Bool _1a544ede3_intAssignable(jule::Str _9818_kind, jule::Ptr<_1a5466305_Data>* _9830_d) {
	{
		
		if (_1a5388d71_IsSigInt(_9818_kind)) {
			_case_begin_1a7dae597:;
			{
				return _1a544dc16_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1a538915c_IsUnsigInt(_9818_kind)) {
			_case_begin_1a7dade48:;
			{
				return _1a544dd48_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1a7daa63c:;
			{
				return false;;
			}
		}
		_match_end_1a7daa571:;
	};
}



inline jule::Ptr<_1a5492287_TypeKind> _1a5460552_lenKind(void) {
	return jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)});;
}



inline jule::Ptr<_1a3c1d0ec_Directive> _1a548b935_findDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _412223_directives, jule::Str _412254_d) {
	{
		auto expr = _412223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e4671c:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _412317_dr = *it;
			{
				if ((_412317_dr.get()._field_Tag.get()._field_Kind == _412254_d)) {
					return _412317_dr;;
				};
			}
			_iter_next_1a7e4671c:;
			++it;
			goto _iter_begin_1a7e4671c;
		}
		_iter_end_1a7e4671c:;
	};
	return nullptr;;
}



inline jule::Any _1a548bcba_findBuiltinsImport(jule::Str _413123_ident, jule::Ptr<_1a53e27e2_ImportInfo> _413135_imp) {
	return _1a48bd0a9_findPackageBuiltinDef(_413135_imp.get()._field_LinkPath, _413123_ident);;
}



inline void _1a548bec9_fitBitsize(jule::Ptr<_1a5466305_Data>* _413820_d) {
	jule::Ptr<_1a5496ed4_Prim> _413913_prim = _1a549461e_Prim((*(_413820_d)).get()._field_Kind.ptr());;
	jule::I64 _41409_z = _1a47d2056_BitsizeOf(_1a5497347_Str(_413913_prim.ptr()));;
	if ((_41409_z == 64LLU)) {
		return;;
	};
	jule::I64 _414513_k = 0LL;;
	{
		
		if (_1a538db67_IsI64((*(_413820_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7e4e14d:;
			{
				_414513_k=static_cast<jule::I64>(_1a472da85_BitsizeOfInt(static_cast<jule::I64>(_1a538b7be_ReadI64((*(_413820_d)).get()._field_Constant.ptr()))));
				if ((_414513_k > _41409_z)) {
					_413913_prim.get()._field_Kind=_1a4709687_IntFromBits(_414513_k);
				};
			}
		}
		else if (_1a538ddcb_IsU64((*(_413820_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7e4e1c5:;
			{
				_414513_k=static_cast<jule::I64>(_1a472dbb7_BitsizeOfUint(static_cast<jule::U64>(_1a538ba33_ReadU64((*(_413820_d)).get()._field_Constant.ptr()))));
				if ((_414513_k > _41409_z)) {
					_413913_prim.get()._field_Kind=_1a47d24b8_UintFromBits(_414513_k);
				};
			}
		}
		else if (_1a538e618_IsF64((*(_413820_d)).get()._field_Constant.ptr())) {
			_case_begin_1a7e4e24c:;
			{
				_414513_k=static_cast<jule::I64>(_1a4785180_BitsizeOfFloat(static_cast<jule::F64>(_1a538c270_ReadF64((*(_413820_d)).get()._field_Constant.ptr()))));
				if ((_414513_k > _41409_z)) {
					_413913_prim.get()._field_Kind=_1a4791ea0_FloatFromBits(_414513_k);
				};
			}
		}
		_match_end_1a7e4e082:;
	};
}



inline void _1a548c2c6_makeStructLitAlloc(jule::Ptr<_1a5466305_Data>* _416528_d, jule::Ptr<_1a5396e17_StructLitExprModel>* _416543_lit) {
	(*(_416528_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549a768_Sptr>(_1a549a768_Sptr{._field_Elem=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>((*(_416543_lit)).get()._field_Strct, 0)})}), 7)});
	(*(_416528_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a5397225_AllocStructLitExprModel>(_1a5397225_AllocStructLitExprModel{._field_Lit=(*(_416543_lit))}), &__jule_any_type118);
}



inline jule::Ptr<_1a5418939_Var> _1a548c617_buildErrorVar(jule::Ptr<_1a53c40dc_Scope>* _417623_s, jule::Ptr<_1a4869eac_FnCallExpr>* _417639_fc) {
	return jule::new_ptr<_1a5418939_Var>(_1a5418939_Var{._field_Scope=(*(_417623_s)), ._field_Token=(*(_417639_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("any", 3)), 6)})}), ._field_Value=jule::new_ptr<_1a546737d_Value>(_1a546737d_Value{._field_Data=jule::new_ptr<_1a5466305_Data>()}), });;
}



inline jule::Any _1a548c958_findBuiltinsSema(jule::Str _419521_ident, jule::Ptr<_1a53ea93d_Sema> _419537_s) {
	{
		auto expr = &(_419537_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e5384a:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _419617_imp = *it;
			{
				if ((_419617_imp.get()._field_ImportAll || _1a53e51b8_existIdent(_419617_imp.ptr(), _419521_ident))) {
					jule::Any _419821_def = _1a548bcba_findBuiltinsImport(_419521_ident, _419617_imp);;
					if ((_419821_def != nullptr)) {
						return _419821_def;;
					};
				};
			}
			_iter_next_1a7e5384a:;
			++it;
			goto _iter_begin_1a7e5384a;
		}
		_iter_end_1a7e5384a:;
	};
	jule::Str _420613_ppath = _1ceeee704_Dir(_419537_s.get()._field_file.get()._field_File.ptr());;
	if (_1ceaa4a18_HasPrefix(_420613_ppath, _1ceb54898_PathStdlib)) {
		(_420613_ppath).mut_slice(_1ceb54898_PathStdlib.len());;
		_420613_ppath=(jule::Str("std", 3) + _1ceac3d23_Replace(_420613_ppath, static_cast<jule::Str>(47LL), jule::Str("::", 2), -1LL));
		return _1a48bd0a9_findPackageBuiltinDef(_420613_ppath, _419521_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1a548cc00_isOkForShifting(jule::Ptr<_1a5466305_Data>* _422025_d) {
	if (_1a5466bb8_IsConst((*(_422025_d)).ptr())) {
		{
			
			if (_1a538db67_IsI64((*(_422025_d)).get()._field_Constant.ptr())) {
				_case_begin_1a7e5829a:;
				{
					return (_1a538b7be_ReadI64((*(_422025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1a538ddcb_IsU64((*(_422025_d)).get()._field_Constant.ptr())) {
				_case_begin_1a7e57ac4:;
				{
					return true;;
				}
			}
			else if (_1a538e618_IsF64((*(_422025_d)).get()._field_Constant.ptr())) {
				_case_begin_1a7e57b3a:;
				{
					return (_1a538c270_ReadF64((*(_422025_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1a7e57a5d:;
				{
					return false;;
				}
			}
			_match_end_1a7e57992:;
		};
	};
	jule::Ptr<_1a5496ed4_Prim> _42339_prim = _1a549461e_Prim((*(_422025_d)).get()._field_Kind.ptr());;
	return ((_42339_prim != nullptr) && _1a5389404_IsInt(_1a5497347_Str(_42339_prim.ptr())));;
}



inline jule::Bool _1a548d0a7_isInstancedStruct(jule::Ptr<_1a487d575_StructIns> _423722_s) {
	return (_423722_s.get()._field_Decl.get()._field_Generics.len() == _423722_s.get()._field_Generics.len());;
}



inline jule::Bool _1a548d41a_isPtrArithmeticCompatible(jule::Ptr<_1a5466305_Data>* _424135_l, jule::Ptr<_1a5466305_Data>* _424150_r) {
	jule::Ptr<_1a549dccc_Ptr> _42429_ptr = _1a5494ae7_Ptr((*(_424150_r)).get()._field_Kind.ptr());;
	if ((_42429_ptr != nullptr)) {
		return _1a5492991_Equal(_1a5494ae7_Ptr((*(_424135_l)).get()._field_Kind.ptr()).get()._field_Elem, _42429_ptr.get()._field_Elem);;
	};
	if (_1a5466bb8_IsConst((*(_424150_r)).ptr())) {
		return _1a544ede3_intAssignable(jule::Str("int", 3), _424150_r);;
	};
	_1a54500be_typeCompatibilityChecker _424913_tcc = _1a54500be_typeCompatibilityChecker{._field_dest=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)}), ._field_src=(*(_424150_r)).get()._field_Kind, };;
	return _1a54516a8_check(&_424913_tcc);;
}



inline void _1a548d65c_applyCastKindModel(jule::Ptr<_1a5466305_Data>* _425828_d, jule::Ptr<_1a5492287_TypeKind>* _425843_t) {
	(*(_425828_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a5397775_CastingExprModel>(_1a5397775_CastingExprModel{._field_Expr=(*(_425828_d)).get()._field_Model, ._field_Kind=(*(_425843_t)), ._field_ExprKind=(*(_425828_d)).get()._field_Kind}), &__jule_any_type100);
}



inline void _1a548d915_applyCastKind(jule::Ptr<_1a5466305_Data>* _426623_d, jule::Ptr<_1a5492287_TypeKind>* _426638_t) {
	_1a548d65c_applyCastKindModel(_426623_d, _426638_t);
	(*(_426623_d)).get()._field_Kind=(*(_426638_t));
}



inline jule::Ptr<_1a5466305_Data> _1a548db13_buildVoidData(void) {
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("void", 4)), 6)}), });;
}



inline jule::Str _1a548ddcc_checkDataForIntegerIndexing(jule::Ptr<_1a5466305_Data>* _427937_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_427937_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1a549461e_Prim((*(_427937_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a7e602c4:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1a5389404_IsInt(_1a5497347_Str(_1a549461e_Prim((*(_427937_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a7e6033a:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1a5466bb8_IsConst((*(_427937_d)).ptr())) {
			_case_begin_1a7e603a1:;
			{
				if ((_1a538c9ac_AsF64((*(_427937_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1a549461e_Prim((*(_427937_d)).get()._field_Kind.ptr()) == nullptr) || _1a5466bb8_IsConst((*(_427937_d)).ptr()) || (_1a47aea5b_RealKindOf(_1a5497347_Str(_1a549461e_Prim((*(_427937_d)).get()._field_Kind.ptr()).ptr())) != _1a47aea5b_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1a7e60417:;
			{
				jule::Ptr<_1a5492287_TypeKind> _429617_t = jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)});;
				_1a548d915_applyCastKind(_427937_d, &(_429617_t));
			}
		}
		_match_end_1a7e5ee0b:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1a548e196_applyCastModelByEnum(jule::Ptr<_1a5466305_Data>* _430530_d, jule::Ptr<_1a53b8521_Enum> _430544_e) {
	if ((_430544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1a5496ed4_Prim> _43099_p = _1a549461e_Prim(_430544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1a549a218_IsStr(_43099_p.ptr())) {
		return;;
	};
	_1a548d65c_applyCastKindModel(_430530_d, &(_430544_e.get()._field_Kind.get()._field_Kind));
}



inline void _1a548e44e_castConstByType(jule::Str* _431621_t, jule::Ptr<_1a5466305_Data>* _431634_d) {
	{
		
		if (_1a5388d71_IsSigInt((*(_431621_t)))) {
			_case_begin_1a7e6550a:;
			{
				{
					auto _match_expr{ _1a47d2056_BitsizeOf(_1a47aea5b_RealKindOf((*(_431621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a7e66154:;
						{
							_1a538cc32_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1a538c4d4_AsI64((*(_431634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a7e661cb:;
						{
							_1a538cc32_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1a538c4d4_AsI64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a7e66242:;
						{
							_1a538cc32_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1a538c4d4_AsI64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a7e662a8:;
						{
							_1a538cc32_SetI64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1a538c4d4_AsI64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a7e65791:;
				};
			}
		}
		else if (_1a538915c_IsUnsigInt((*(_431621_t)))) {
			_case_begin_1a7e65582:;
			{
				{
					auto _match_expr{ _1a47d2056_BitsizeOf(_1a47aea5b_RealKindOf((*(_431621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a7e6961e:;
						{
							_1a538cea7_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1a538c748_AsU64((*(_431634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a7e696a7:;
						{
							_1a538cea7_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1a538c748_AsU64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a7e6971d:;
						{
							_1a538cea7_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1a538c748_AsU64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a7e69784:;
						{
							_1a538cea7_SetU64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1a538c748_AsU64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a7e6597d:;
				};
			}
		}
		else if (_1a5389723_IsFloat((*(_431621_t)))) {
			_case_begin_1a7e65609:;
			{
				{
					auto _match_expr{ _1a47d2056_BitsizeOf(_1a47aea5b_RealKindOf((*(_431621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a7e6caea:;
						{
							_1a538d727_SetF64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1a538c9ac_AsF64((*(_431634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a7e6cb83:;
						{
							_1a538d727_SetF64((*(_431634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1a538c9ac_AsF64((*(_431634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a7e6b2be:;
				};
			}
		}
		_match_end_1a7e653d9:;
	};
}



inline void _1a548e95a_updateModelToGenericIns(jule::Any* _435033_m, jule::Ptr<_1a53a717a_FnIns>* _435052_f) {
	{
		auto &_match_expr{ (*(_435033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a7e6db40:;
			{
				(*(_435033_m))=jule::Any((*(_435052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a7e6dba6:;
			{
				(*(_435033_m)).cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_435052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a7e6dc1c:;
			{
				(*(_435033_m)).cast_ptr<_1a539ad3e_StructStaticIdentExprModel>(&__jule_any_type103).get()._field_Method=(*(_435052_f));
			}
		}
		_match_end_1a7e65c36:;
	};
}



inline jule::Bool _1a548eb9c_pushSubIdentFromExpr(jule::Any _436129_expr, jule::Ptr<_1a48626be_SubIdentTypeDecl>* _436150_t) {
	{
		auto &_match_expr{ _436129_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a7e71208:;
			{
				jule::Ptr<_1a4867b8b_IdentExpr> _436417_e = _436129_expr.cast_ptr<_1a4867b8b_IdentExpr>(&__jule_any_type86);;
				(*(_436150_t)).get()._field_Idents = jule::alloc_for_append((*(_436150_t)).get()._field_Idents,1);(*(_436150_t)).get()._field_Idents.__push(jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_436417_e.get()._field_Token, ._field_Ident=_436417_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a7e7126e:;
			{
				jule::Ptr<_1a486942e_SubIdentExpr> _437017_e = _436129_expr.cast_ptr<_1a486942e_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_1a548eb9c_pushSubIdentFromExpr(_437017_e.get()._field_Expr.get()._field_Kind, _436150_t)))) {
					return false;;
				};
				(*(_436150_t)).get()._field_Idents = jule::alloc_for_append((*(_436150_t)).get()._field_Idents,1);(*(_436150_t)).get()._field_Idents.__push(jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_437017_e.get()._field_Ident, ._field_Ident=_437017_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1a7e70b64:;
			{
				return false;;
			}
		}
		_match_end_1a7e70b0e:;
	};
	return true;;
}



inline jule::Bool _1a54a8e91_kindUsesGenerics(jule::Ptr<_1a5492287_TypeKind>* _158226_k, jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>* _158241_generics) {
	{
		auto expr = _158241_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a827299e:;
		if (it != expr_end) {
			jule::Ptr<_1a486dca2_GenericDecl> *_158312_g = it;
			{
				if (static__1a54a8a95_exist(&((*(_158312_g)).get()._field_Ident), _158226_k)) {
					return true;;
				};
			}
			_iter_next_1a827299e:;
			++it;
			goto _iter_begin_1a827299e;
		}
		_iter_end_1a827299e:;
	};
	return false;;
}



inline jule::Bool _1a54a9326_hasDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _159222_directives, jule::Str _159253_tag) {
	{
		auto expr = _159222_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82730cb:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _159317_dr = *it;
			{
				if ((_159317_dr.get()._field_Tag.get()._field_Kind == _159253_tag)) {
					return true;;
				};
			}
			_iter_next_1a82730cb:;
			++it;
			goto _iter_begin_1a82730cb;
		}
		_iter_end_1a82730cb:;
	};
	return false;;
}



inline jule::Bool _1a54a95bd_canGetPtr(jule::Ptr<_1a5466305_Data>* _160119_d) {
	if (((!((*(_160119_d)).get()._field_Lvalue)) || _1a5466bb8_IsConst((*(_160119_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1a549580c_Fn((*(_160119_d)).get()._field_Kind.ptr()) != nullptr) || (_1a5494d5b_Enum((*(_160119_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1a827551d:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a8274d69:;
			{
				return true;;
			}
		}
		_match_end_1a8274d14:;
	};
}



inline jule::Bool _1a54a98dc_isValidForSptrType(jule::Ptr<_1a5492287_TypeKind>* _161428_t) {
	jule::Ptr<_1a487d575_StructIns> _161513_s = _1a5495a71_Struct((*(_161428_t)).ptr());;
	if ((((_161513_s != nullptr) && (_161513_s.get()._field_Decl != nullptr)) && _161513_s.get()._field_Decl.get()._field_CppLinked)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1a54a9b84_isValidForRef(jule::Ptr<_1a5492287_TypeKind>* _162323_t) {
	return (_1a549580c_Fn((*(_162323_t)).ptr()) == nullptr);;
}



inline jule::Bool _1a54a9e4d_isBuiltinStrConvertable(jule::Ptr<_1a5492287_TypeKind>* _162633_t) {
	return (((!(_1a5493431_Void((*(_162633_t)).ptr()))) && (_1a549580c_Fn((*(_162633_t)).ptr()) == nullptr)) && (_1a54962ad_Tup((*(_162633_t)).ptr()) == nullptr));;
}



inline jule::Str _1a54aa1c3_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _163027_tokens) {
	jule::Str _163113_s = (*(_163027_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_163027_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a8279115:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_163212_token = it;
			{
				_163113_s+=jule::Str("::", 2);
				_163113_s+=(*(_163212_token)).get()._field_Kind;
			}
			_iter_next_1a8279115:;
			++it;
			goto _iter_begin_1a8279115;
		}
		_iter_end_1a8279115:;
	};
	return _163113_s;;
}



inline jule::Ptr<_1a5496ed4_Prim> _1a54aa57a_buildPrimType(jule::Str _163918_kind) {
	return jule::new_ptr<_1a5496ed4_Prim>(_1a5496ed4_Prim{._field_Kind=_163918_kind});;
}



inline jule::Ptr<_1a487d19b_Struct> _1a54aa822_getStructFromKind(jule::Ptr<_1a5492287_TypeKind> _164526_k) {
	{
		
		if ((_164526_k == nullptr)) {
			_case_begin_1a827a314:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5495a71_Struct(_164526_k.ptr()) != nullptr)) {
			_case_begin_1a827a37a:;
			{
				return _1a5495a71_Struct(_164526_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1a5494883_Sptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1a827a3e1:;
			{
				return _1a54aa822_getStructFromKind(_1a5494883_Sptr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1a5495598_Slc(_164526_k.ptr()) != nullptr)) {
			_case_begin_1a827a457:;
			{
				return _1a54aa822_getStructFromKind(_1a5495598_Slc(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1a5495334_Arr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1a827a6dd:;
			{
				return _1a54aa822_getStructFromKind(_1a5495334_Arr(_164526_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1a5494ae7_Ptr(_164526_k.ptr()) != nullptr)) {
			_case_begin_1a827a754:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1a827a29d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a827981e:;
	};
}



inline jule::Bool _1a54aaab9_isPrim(jule::Str _166811_kind) {
	return ((((((((((((((((_166811_kind == jule::Str("i8", 2)) || (_166811_kind == jule::Str("i16", 3))) || (_166811_kind == jule::Str("i32", 3))) || (_166811_kind == jule::Str("i64", 3))) || (_166811_kind == jule::Str("u8", 2))) || (_166811_kind == jule::Str("u16", 3))) || (_166811_kind == jule::Str("u32", 3))) || (_166811_kind == jule::Str("u64", 3))) || (_166811_kind == jule::Str("f32", 3))) || (_166811_kind == jule::Str("f64", 3))) || (_166811_kind == jule::Str("int", 3))) || (_166811_kind == jule::Str("uint", 4))) || (_166811_kind == jule::Str("uintptr", 7))) || (_166811_kind == jule::Str("bool", 4))) || (_166811_kind == jule::Str("str", 3))) || (_166811_kind == jule::Str("any", 3)));;
}



inline void _1a54aad72_applyImplicitCast(jule::Ptr<_1a5492287_TypeKind>* _168727_dest, jule::Ptr<_1a5466305_Data>* _168749_d) {
	if (_1a54931bc_IsNil((*(_168749_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1a5496ed4_Prim> _16919_destPrim = _1a549461e_Prim((*(_168727_dest)).ptr());;
	jule::Ptr<_1a5496ed4_Prim> _16929_prim = _1a549461e_Prim((*(_168749_d)).get()._field_Kind.ptr());;
	if ((_16919_destPrim != nullptr)) {
		if (_1a549a47c_IsAny(_16919_destPrim.ptr())) {
			if (((_16929_prim == nullptr) || (!(_1a549a47c_IsAny(_16929_prim.ptr()))))) {
				_1a548d915_applyCastKind(_168749_d, _168727_dest);
			};
			return;;
		};
		if (((((((!(_1a5492e58_CppLinked((*(_168749_d)).get()._field_Kind.ptr()))) && (!((*(_168749_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_168749_d)).get()._field_Lvalue))) && (!(_1a5466bb8_IsConst((*(_168749_d)).ptr())))) && (_16929_prim != nullptr)) && _1a53899ba_IsNum(_16929_prim.get()._field_Kind))) {
			_1a548d915_applyCastKind(_168749_d, _168727_dest);
		};
		return;;
	};
	if (((_1a5495cd5_Trait((*(_168727_dest)).ptr()) != nullptr) && (_1a5495cd5_Trait((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1a548d65c_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
	if (((_1a54950c0_TypeEnum((*(_168727_dest)).ptr()) != nullptr) && (_1a54950c0_TypeEnum((*(_168749_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1a548d65c_applyCastKindModel(_168749_d, _168727_dest);
		return;;
	};
}



inline __jule_tuple_x_1a54614cb_SymbolTable__jule_tuple_s_1ceb4952a_Log _1a54adddb_buildSymbols(jule::Ptr<_1a3c1be0e_Ast>* _1622_ast, jule::Trait<_1a53deb74_Importer>* _1638_importer, jule::Ptr<_1a53b0903_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1a54614cb_SymbolTable__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	jule::Ptr<_1a53b0903_symbolBuilder> _1713_sb = jule::new_ptr<_1a53b0903_symbolBuilder>(_1a53b0903_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1a53b58a3_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log _1a54ae31a_analyzePackage(jule::Slice<jule::Ptr<_1a3c1be0e_Ast>>* _3024_files, jule::Trait<_1a53deb74_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1a54614cb_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a837b1d4:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1be0e_Ast> _3317_f = *it;
			{
				jule::Ptr<_1a54614cb_SymbolTable> _3418_table;;
				jule::Slice<_1ceb4952a_Log> _3429_errors;;
				({
					__jule_tuple_x_1a54614cb_SymbolTable__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a54adddb_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1a837b1d4:;
			++it;
			goto _iter_begin_1a837b1d4;
		}
		_iter_end_1a837b1d4:;
	};
	jule::Ptr<_1a53ea93d_Sema> _4113_sema = jule::new_ptr<_1a53ea93d_Sema>(_1a53ea93d_Sema{._field_flags=(*(_3065_flags))});;
	_1a541588c_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53e574b_Package> _4913_pkg = jule::new_ptr<_1a53e574b_Package>(_1a53e574b_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _4913_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log _1a54ae705_AnalyzePackage(jule::Slice<jule::Ptr<_1a3c1be0e_Ast>> _7323_files, jule::Trait<_1a53deb74_Importer> _7342_importer, jule::I64 _7362_flags) {
	__jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	if ((_7323_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1a53e574b_Package> _7714_package;;
	jule::Slice<_1ceb4952a_Log> _7727_logs;;
	({
		__jule_tuple_x_1a53e574b_Package__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a54ae31a_analyzePackage(&(_7323_files), &(_7342_importer), &(_7362_flags));
		_7714_package = __jule_assign_result.__jule_result_arg0;
		_7727_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7714_package;
	__jule_func_result.__jule_result_arg1 = _7727_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1a53a717a_FnIns> _1a4c1d937_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1a8384ab1:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _2620_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a4c6442d_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1a8385276:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _2920_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a519067d_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1a8385364:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _3220_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a51d8660_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1a83853ca:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _3520_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a51d8990_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1a8384dad:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _3820_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52368bc_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1a8384e24:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _4120_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a521d343_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1a8384e9b:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _4420_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52bd844_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8385023:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _4720_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52bde4e_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a8385452:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _5020_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52be2e5_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1a83854c9:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _5320_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52be559_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1a8385551:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _5620_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52be68b_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1a83855c8:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _5920_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1e85b3c7d_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1a8384c48:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8384b9e:;
	};
}



inline jule::Ptr<_1a5491594_TypeAlias> _1a4c3d0d8_findBuiltinTypeAlias(jule::Str _6625_ident) {
	{
		auto &_match_expr{ _6625_ident };
		
		if (_match_expr == jule::Str("byte", 4)) {
			_case_begin_1a838ca86:;
			{
				static jule::Ptr<_1a5491594_TypeAlias> _6920_t = jule::new_ptr<_1a5491594_TypeAlias>(_1a5491594_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("u8", 2)), 6)})}), });;
				return _6920_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4)) {
			_case_begin_1a838caec:;
			{
				static jule::Ptr<_1a5491594_TypeAlias> _7920_t = jule::new_ptr<_1a5491594_TypeAlias>(_1a5491594_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1a5496665_TypeSymbol>(_1a5496665_TypeSymbol{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("i32", 3)), 6)})}), });;
				return _7920_t;;
			}
		}
		else {
			_case_begin_1a838c4c0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a838bee7:;
	};
}



inline jule::Any _1a4c8c236_findBuiltinDef(jule::Str _9319_ident) {
	jule::Ptr<_1a53a717a_FnIns> _9413_f = _1a4c1d937_findBuiltinFn(_9319_ident);;
	if ((_9413_f != nullptr)) {
		return jule::Any(_9413_f, &__jule_any_type7);;
	};
	jule::Ptr<_1a5491594_TypeAlias> _9813_ta = _1a4c3d0d8_findBuiltinTypeAlias(_9319_ident);;
	if ((_9813_ta != nullptr)) {
		return jule::Any(_9813_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1a4c96a48_findBuiltinDefStdDebug(jule::Str _10527_ident) {
	{
		auto &_match_expr{ _10527_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1a8390a12:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _10820_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52c034b_builtinCallerStdDebugOut), });;
				return jule::Any(_10820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1a839121b:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _11120_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52c047d_builtinCallerStdDebugOutln), });;
				return jule::Any(_11120_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a83907d1:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8390bdd:;
	};
}



inline jule::Any _1a48ba76b_findBuiltinDefStdMem(jule::Str _11825_ident) {
	{
		auto &_match_expr{ _11825_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1a8392a9c:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _12120_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52bec41_builtinCallerStdMemSizeOf), });;
				return jule::Any(_12120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1a8392b13:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _12420_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52bed73_builtinCallerStdMemAlignOf), });;
				return jule::Any(_12420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1a83928c1:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _12720_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52beea5_builtinCallerStdMemFree), });;
				return jule::Any(_12720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a8390d31:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8391b12:;
	};
}



inline jule::Any _1a48bc30b_findBuiltinDefStdJuleIntegrated(jule::Str _13436_ident) {
	{
		auto &_match_expr{ _13436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1a8394d68:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _13720_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52c00d7_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_13720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1a8394dce:;
			{
				static jule::Ptr<_1a53a717a_FnIns> _14020_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_Decl=jule::new_ptr<_1a53a44c9_Fn>(_1a53a44c9_Fn{._field_Generics=jule::Slice<jule::Ptr<_1a486dca2_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a52c0219_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_14020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a8392b79:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8393dcd:;
	};
}



inline jule::Any _1a48bd0a9_findPackageBuiltinDef(jule::Str _15226_link_path, jule::Str _15242_ident) {
	{
		auto &_match_expr{ _15226_link_path };
		
		if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1a8396c8d:;
			{
				return _1a4c96a48_findBuiltinDefStdDebug(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1a8396d04:;
			{
				return _1a48ba76b_findBuiltinDefStdMem(_15242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1a8396ab2:;
			{
				return _1a48bc30b_findBuiltinDefStdJuleIntegrated(_15242_ident);;
			}
		}
		else {
			_case_begin_1a83966a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1a83957b4:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a4956a6b_builtinCallerCommonPlain(jule::Ptr<_1a5467d73_Eval>* _16534_e, jule::Ptr<_1a4869eac_FnCallExpr>* _16549_fc, jule::Ptr<_1a5466305_Data>* _16571_d) {
	jule::Ptr<_1a53a717a_FnIns> _16613_f = _1a549580c_Fn((*(_16571_d)).get()._field_Kind.ptr());;
	_1a5458094_fnCallArgChecker _16813_fcac = _1a5458094_fnCallArgChecker{._field_e=(*(_16534_e)), ._field_args=(*(_16549_fc)).get()._field_Args, ._field_errorToken=(*(_16549_fc)).get()._field_Token, ._field_f=_16613_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1a545a45e_check(&_16813_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1a5398127_FnCallExprModel> _17913_model = jule::new_ptr<_1a5398127_FnCallExprModel>(_1a5398127_FnCallExprModel{._field_Token=(*(_16549_fc)).get()._field_Token, ._field_Func=_16613_f, ._field_Expr=(*(_16571_d)).get()._field_Model, ._field_Args=_16813_fcac._field_argModels, });;
	if ((_16613_f.get()._field_Result == nullptr)) {
		(*(_16571_d))=_1a548db13_buildVoidData();
	} else {
		(*(_16571_d))=jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=_16613_f.get()._field_Result, });
	};
	(*(_16571_d)).get()._field_Model=jule::Any(_17913_model, &__jule_any_type34);
	return (*(_16571_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a4a701d4_builtinCallerCommon(jule::Ptr<_1a5467d73_Eval>* _19829_e, jule::Ptr<_1a4869eac_FnCallExpr>* _19844_fc, jule::Ptr<_1a5466305_Data>* _19866_d) {
	return _1a4956a6b_builtinCallerCommonPlain(_19829_e, _19844_fc, _19866_d);;
}



inline jule::Ptr<_1a5466305_Data> _1a4bbb1dc_builtinCallerCommonMut(jule::Ptr<_1a5467d73_Eval>* _20232_e, jule::Ptr<_1a4869eac_FnCallExpr>* _20247_fc, jule::Ptr<_1a5466305_Data>* _20269_d) {
	if ((!((*(_20269_d)).get()._field_Mutable))) {
		_1a546837e_pushErr((*(_20232_e)).ptr(), (*(_20247_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1a4a701d4_builtinCallerCommon(_20232_e, _20247_fc, _20269_d);;
}



inline jule::Ptr<_1a5466305_Data> _1a4c1d22d_builtinCallerError(jule::Ptr<_1a5467d73_Eval>* _20928_e, jule::Ptr<_1a4869eac_FnCallExpr>* _20943_fc) {
	if (((*(_20943_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_20943_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _21713_expr = _1a5483795_evalExpr((*(_20928_e)), (*(_20943_fc)).get()._field_Args[0LL]);;
	if ((_21713_expr == nullptr)) {
		return nullptr;;
	};
	if (_1a54666e0_IsNil(_21713_expr.ptr())) {
		_1a546837e_pushErr((*(_20928_e)).ptr(), (*(_20943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _22613_d = _1a548db13_buildVoidData();;
	_22613_d.get()._field_Model=jule::Any(jule::new_ptr<_1a53a0591_BuiltinErrorCallExprModel>(_1a53a0591_BuiltinErrorCallExprModel{._field_Err=_21713_expr}), &__jule_any_type22);
	return _22613_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a4c6442d_builtinCallerOut(jule::Ptr<_1a5467d73_Eval>* _23126_e, jule::Ptr<_1a4869eac_FnCallExpr>* _23141_fc, jule::Ptr<_1a5466305_Data>* ) {
	if (((*(_23141_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_23141_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _24013_expr = _1a5483795_evalExpr((*(_23126_e)), (*(_23141_fc)).get()._field_Args[0LL]);;
	if ((_24013_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a54a9e4d_isBuiltinStrConvertable(&(_24013_expr.get()._field_Kind))))) {
		_1a546837e_pushErr((*(_23126_e)).ptr(), (*(_23141_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _25013_d = _1a548db13_buildVoidData();;
	_25013_d.get()._field_Model=jule::Any(jule::new_ptr<_1a539c22a_BuiltinOutCallExprModel>(_1a539c22a_BuiltinOutCallExprModel{._field_Expr=_24013_expr.get()._field_Model, }), &__jule_any_type27);
	return _25013_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a519067d_builtinCallerOutln(jule::Ptr<_1a5467d73_Eval>* _25528_e, jule::Ptr<_1a4869eac_FnCallExpr>* _25543_fc, jule::Ptr<_1a5466305_Data>* _25565_d) {
	(*(_25565_d))=_1a4c6442d_builtinCallerOut(_25528_e, _25543_fc, _25565_d);
	if (((*(_25565_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_25565_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539c615_BuiltinOutlnCallExprModel>(_1a539c615_BuiltinOutlnCallExprModel{._field_Expr=(*(_25565_d)).get()._field_Model.cast_ptr<_1a539c22a_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Expr, }), &__jule_any_type28);
	return (*(_25565_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a51d8660_builtinCallerNew(jule::Ptr<_1a5467d73_Eval>* _26726_e, jule::Ptr<_1a4869eac_FnCallExpr>* _26741_fc, jule::Ptr<_1a5466305_Data>* _26763_d) {
	if (((*(_26741_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_26741_fc)).get()._field_Args.len() > 2LL)) {
		_1a546837e_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _27613_t = _1a5483179_evalExprKind((*(_26726_e)), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_27613_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_27613_t.get()._field_Decl))) {
		_1a546837e_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1a54a98dc_isValidForSptrType(&(_27613_t.get()._field_Kind))))) {
		jule::Ptr<_1a487d575_StructIns> _28717_s = _1a5495a71_Struct(_27613_t.get()._field_Kind.ptr());;
		if ((((_28717_s != nullptr) && (_28717_s.get()._field_Decl != nullptr)) && _28717_s.get()._field_Decl.get()._field_CppLinked)) {
			_1a546837e_pushErr((*(_26726_e)).ptr(), (*(_26741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("cpp-linked structures cannot supports reference counting", 56), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_26763_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(jule::new_ptr<_1a549a768_Sptr>(_1a549a768_Sptr{._field_Elem=_27613_t.get()._field_Kind}), 7)});
	if (((*(_26741_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a5492287_TypeKind> _30117_old = (*(_26726_e)).get()._field_prefix;;
		(*(_26726_e)).get()._field_prefix=_27613_t.get()._field_Kind;
		jule::Ptr<_1a5466305_Data> _30417_init = _1a5483795_evalExpr((*(_26726_e)), (*(_26741_fc)).get()._field_Args[1LL]);;
		(*(_26726_e)).get()._field_prefix=_30117_old;
		if ((_30417_init != nullptr)) {
			jule::Ptr<_1ceee8973_Token> _30921_token = (*(_26741_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1a54083eb_checkValidityForInitExpr((*(_26726_e)).get()._field_s, (!((*(_26726_e)).get()._field_immutable)), false, &(_27613_t.get()._field_Kind), &(_30417_init), &(_30921_token));
			_1a54054d6_checkAssignType((*(_26726_e)).get()._field_s, false, &(_27613_t.get()._field_Kind), &(_30417_init), _30921_token);
			(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539cd1e_BuiltinNewCallExprModel>(_1a539cd1e_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, ._field_Init=_30417_init.get()._field_Model}), &__jule_any_type119);
		};
	} else {
		(*(_26763_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539cd1e_BuiltinNewCallExprModel>(_1a539cd1e_BuiltinNewCallExprModel{._field_Kind=_27613_t.get()._field_Kind, }), &__jule_any_type119);
	};
	return (*(_26763_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a51d8990_builtinCallerPanic(jule::Ptr<_1a5467d73_Eval>* _32928_e, jule::Ptr<_1a4869eac_FnCallExpr>* _32943_fc, jule::Ptr<_1a5466305_Data>* ) {
	if (((*(_32943_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_32943_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _33813_expr = _1a5483795_evalExpr((*(_32928_e)), (*(_32943_fc)).get()._field_Args[0LL]);;
	if ((_33813_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a549461e_Prim(_33813_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a549a218_IsStr(_1a549461e_Prim(_33813_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1a546837e_pushErr((*(_32928_e)).ptr(), (*(_32943_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _34713_d = _1a548db13_buildVoidData();;
	_34713_d.get()._field_Model=jule::Any(jule::new_ptr<_1a539d209_BuiltinPanicCallExprModel>(_1a539d209_BuiltinPanicCallExprModel{._field_Token=(*(_32943_fc)).get()._field_Token, ._field_Expr=_33813_expr.get()._field_Model}), &__jule_any_type29);
	return _34713_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a52368bc_builtinCallerMake(jule::Ptr<_1a5467d73_Eval>* _35527_e, jule::Ptr<_1a4869eac_FnCallExpr>* _35542_fc, jule::Ptr<_1a5466305_Data>* _35564_d) {
	if (((*(_35542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_35542_fc)).get()._field_Args.len() == 1LL)) {
			_1a546837e_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1a546837e_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _36513_t = _1a5483179_evalExprKind((*(_35527_e)), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_36513_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_36513_t.get()._field_Decl))) {
		_1a546837e_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_35542_fc)).get()._field_Args.len() > 3LL)) {
		_1a546837e_pushErr((*(_35527_e)).ptr(), (*(_35542_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_35564_d)).get()._field_Kind=_36513_t.get()._field_Kind;
	jule::Ptr<_1a5466305_Data> _38113_lenExpr = _1a5483795_evalExpr(_1a5404bcd_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[1LL]);;
	if ((_38113_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1a5471970_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_38113_lenExpr), (*(_35542_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1a539db66_BuiltinMakeCallExprModel> _38813_model = jule::new_ptr<_1a539db66_BuiltinMakeCallExprModel>(_1a539db66_BuiltinMakeCallExprModel{._field_Kind=_36513_t.get()._field_Kind, ._field_Len=_38113_lenExpr.get()._field_Model, });;
	(*(_35564_d)).get()._field_Model=jule::Any(_38813_model, &__jule_any_type120);
	if (((*(_35542_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1a5466305_Data> _39417_capExpr = _1a5483795_evalExpr(_1a5404bcd_evalp((*(_35527_e)).get()._field_s, (*(_35527_e)).get()._field_lookup, _36513_t.get()._field_Kind), (*(_35542_fc)).get()._field_Args[2LL]);;
		if ((_39417_capExpr == nullptr)) {
			return (*(_35564_d));;
		};
		_1a5471970_checkIntegerIndexingByData((*(_35527_e)).ptr(), &(_39417_capExpr), (*(_35542_fc)).get()._field_Args[2LL].get()._field_Token);
		_38813_model.get()._field_Cap=_39417_capExpr.get()._field_Model;
	};
	return (*(_35564_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a521d343_builtinCallerAppend(jule::Ptr<_1a5467d73_Eval>* _40429_e, jule::Ptr<_1a4869eac_FnCallExpr>* _40444_fc, jule::Ptr<_1a5466305_Data>* _40466_d) {
	if (((*(_40444_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_40444_fc)).get()._field_Args.len() == 1LL)) {
			_1a546837e_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1a546837e_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _41413_t = _1a5483795_evalExpr((*(_40429_e)), (*(_40444_fc)).get()._field_Args[0LL]);;
	if ((_41413_t == nullptr)) {
		return nullptr;;
	};
	if ((_1a5495598_Slc(_41413_t.get()._field_Kind.ptr()) == nullptr)) {
		_1a546837e_pushErr((*(_40429_e)).ptr(), (*(_40444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a53a717a_FnIns> _42413_f = jule::new_ptr<_1a53a717a_FnIns>(_1a53a717a_FnIns{._field_Params=jule::Slice<jule::Ptr<_1a53a62ab_ParamIns>>::make({jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Mutable=true, }), ._field_Kind=_41413_t.get()._field_Kind}),jule::new_ptr<_1a53a62ab_ParamIns>(_1a53a62ab_ParamIns{._field_Decl=jule::new_ptr<_1a53a2b8c_Param>(_1a53a2b8c_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1a5495598_Slc(_41413_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_41413_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1a5466305_Data>(jule::Ptr<_1a5467d73_Eval>*,jule::Ptr<_1a4869eac_FnCallExpr>*,jule::Ptr<_1a5466305_Data>*)>(_1a4956a6b_builtinCallerCommonPlain), });;
	(*(_40466_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_42413_f, 1)});
	(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539b4e3_CommonIdentExprModel>(_1a539b4e3_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_40466_d))=_1a4956a6b_builtinCallerCommonPlain(_40429_e, _40444_fc, _40466_d);
	if (((*(_40466_d)) != nullptr)) {
		jule::Ptr<_1a5398127_FnCallExprModel> _45217_model = (*(_40466_d)).get()._field_Model.cast_ptr<_1a5398127_FnCallExprModel>(&__jule_any_type34);;
		(*(_40466_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539e051_BuiltinAppendCallExprModel>(_1a539e051_BuiltinAppendCallExprModel{._field_Dest=_45217_model.get()._field_Args[0LL], ._field_Elements=_45217_model.get()._field_Args[1LL]}), &__jule_any_type25);
	};
	return (*(_40466_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bd5d0_callerCopySlice(jule::Ptr<_1a5466305_Data>* _46125_dest, jule::Ptr<_1a5467d73_Eval>* _46143_e, jule::Ptr<_1a4869eac_FnCallExpr>* _46158_fc, jule::Ptr<_1a5466305_Data>* _46180_d) {
	if ((!((*(_46125_dest)).get()._field_Mutable))) {
		_1a546837e_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _46613_src = _1a5483795_evalExpr((*(_46143_e)), (*(_46158_fc)).get()._field_Args[1LL]);;
	if ((_46613_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a549b1c5_Slc> _47013_slc = _1a5495598_Slc(_46613_src.get()._field_Kind.ptr());;
	if ((_47013_slc != nullptr)) {
		if (((!(_46613_src.get()._field_Mutable)) && _1a5493909_Mutable(_47013_slc.get()._field_Elem.ptr()))) {
			_1a546837e_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1a5492991_Equal((*(_46125_dest)).get()._field_Kind, _46613_src.get()._field_Kind)))) {
			_1a546837e_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1a5496ed4_Prim> _48013_destPrim = _1a549461e_Prim(_1a5495598_Slc((*(_46125_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1a5496ed4_Prim> _48113_prim = _1a549461e_Prim(_46613_src.get()._field_Kind.ptr());;
		if (((((_48013_destPrim == nullptr) || (_48113_prim == nullptr)) || (!(_1a549a218_IsStr(_48113_prim.ptr())))) || (!(_1a54987dd_IsU8(_48013_destPrim.ptr()))))) {
			_1a546837e_pushErr((*(_46143_e)).ptr(), (*(_46158_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_46125_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_46613_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_46180_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_46180_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a53a01a6_BuiltinCopyCallExprModel>(_1a53a01a6_BuiltinCopyCallExprModel{._field_Dest=(*(_46125_dest)), ._field_Src=_46613_src}), &__jule_any_type31);
	return (*(_46180_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bd712_callerCopyStr(jule::Ptr<_1a5466305_Data>* _49523_dest, jule::Ptr<_1a5467d73_Eval>* _49541_e, jule::Ptr<_1a4869eac_FnCallExpr>* _49556_fc, jule::Ptr<_1a5466305_Data>* _49578_d) {
	if ((!((*(_49523_dest)).get()._field_Mutable))) {
		_1a546837e_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _50013_src = _1a5483795_evalExpr((*(_49541_e)), (*(_49556_fc)).get()._field_Args[1LL]);;
	if ((_50013_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1a549461e_Prim(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a83d45b1:;
			{
				if (_1a549a218_IsStr(_1a549461e_Prim(_50013_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1a5495598_Slc(_50013_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a83d4627:;
			{
				jule::Ptr<_1a549b1c5_Slc> _51017_slc = _1a5495598_Slc(_50013_src.get()._field_Kind.ptr());;
				if (((_1a549461e_Prim(_51017_slc.get()._field_Elem.ptr()) != nullptr) && _1a54987dd_IsU8(_1a549461e_Prim(_51017_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1a83d4391:;
	};
	_1a546837e_pushErr((*(_49541_e)).ptr(), (*(_49556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str((*(_49523_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1a5492683_Str(_50013_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_49578_d)).get()._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("int", 3)), 6)});
	(*(_49578_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a53a01a6_BuiltinCopyCallExprModel>(_1a53a01a6_BuiltinCopyCallExprModel{._field_Dest=(*(_49523_dest)), ._field_Src=_50013_src}), &__jule_any_type31);
	return (*(_49578_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bd844_builtinCallerCopy(jule::Ptr<_1a5467d73_Eval>* _52527_e, jule::Ptr<_1a4869eac_FnCallExpr>* _52542_fc, jule::Ptr<_1a5466305_Data>* _52564_d) {
	if (((*(_52542_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_52542_fc)).get()._field_Args.len() == 1LL)) {
			_1a546837e_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1a546837e_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_52542_fc)).get()._field_Args.len() > 2LL)) {
		_1a546837e_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _53813_dest = _1a5483795_evalExpr((*(_52527_e)), (*(_52542_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_53813_dest == nullptr)) {
			_case_begin_1a83de599:;
			{
				return nullptr;;
			}
		}
		else if ((_1a5495598_Slc(_53813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a83de610:;
			{
				return _1a52bd5d0_callerCopySlice(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else if (((_1a549461e_Prim(_53813_dest.get()._field_Kind.ptr()) != nullptr) && _1a549a218_IsStr(_1a549461e_Prim(_53813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a83de401:;
			{
				return _1a52bd712_callerCopyStr(&(_53813_dest), _52527_e, _52542_fc, _52564_d);;
			}
		}
		else {
			_case_begin_1a83dd653:;
			{
				_1a546837e_pushErr((*(_52527_e)).ptr(), (*(_52542_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a83dd5dc:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a52bd976_callerLenSlice(jule::Ptr<_1a5466305_Data>* _55224_expr, jule::Ptr<_1a5466305_Data>* _55242_d) {
	(*(_55242_d)).get()._field_Kind=_1a5460552_lenKind();
	(*(_55242_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539e370_BuiltinLenCallExprModel>(_1a539e370_BuiltinLenCallExprModel{._field_Expr=(*(_55224_expr))}), &__jule_any_type121);
	return (*(_55242_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bdaa8_callerLenMap(jule::Ptr<_1a5466305_Data>* _56022_expr, jule::Ptr<_1a5466305_Data>* _56040_d) {
	(*(_56040_d)).get()._field_Kind=_1a5460552_lenKind();
	(*(_56040_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539e370_BuiltinLenCallExprModel>(_1a539e370_BuiltinLenCallExprModel{._field_Expr=(*(_56022_expr))}), &__jule_any_type121);
	return (*(_56040_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bdbda_callerLenArr(jule::Ptr<_1a5466305_Data>* _56822_expr, jule::Ptr<_1a5466305_Data>* _56840_d) {
	(*(_56840_d)).get()._field_Kind=_1a5460552_lenKind();
	(*(_56840_d)).get()._field_Constant=static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a5495334_Arr((*(_56822_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_56840_d)).get()._field_Model=jule::Any((*(_56840_d)).get()._field_Constant, &__jule_any_type47);
	return (*(_56840_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bdd1c_callerLenStr(jule::Ptr<_1a5466305_Data>* _57522_expr, jule::Ptr<_1a5466305_Data>* _57540_d) {
	(*(_57540_d)).get()._field_Kind=_1a5460552_lenKind();
	if (_1a5466bb8_IsConst((*(_57522_expr)).ptr())) {
		(*(_57540_d)).get()._field_Constant=static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a538c00b_ReadStr((*(_57522_expr)).get()._field_Constant.ptr()).len())));
		(*(_57540_d)).get()._field_Model=jule::Any((*(_57540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_57540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539e370_BuiltinLenCallExprModel>(_1a539e370_BuiltinLenCallExprModel{._field_Expr=(*(_57522_expr))}), &__jule_any_type121);
	};
	return (*(_57540_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52bde4e_builtinCallerLen(jule::Ptr<_1a5467d73_Eval>* _58826_e, jule::Ptr<_1a4869eac_FnCallExpr>* _58841_fc, jule::Ptr<_1a5466305_Data>* _58863_d) {
	if (((*(_58841_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_58841_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _59613_dest = _1a5483795_evalExpr((*(_58826_e)), (*(_58841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_59613_dest == nullptr)) {
			_case_begin_1a83e9131:;
			{
				return nullptr;;
			}
		}
		else if (_59613_dest.get()._field_Decl) {
			_case_begin_1a83e9197:;
			{
				_1a546837e_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5495598_Slc(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a83e8e88:;
			{
				return _1a52bd976_callerLenSlice(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1a5495334_Arr(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a83e9010:;
			{
				return _1a52bdbda_callerLenArr(&(_59613_dest), _58863_d);;
			}
		}
		else if ((_1a5496049_Map(_59613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a83e8251:;
			{
				return _1a52bdaa8_callerLenMap(&(_59613_dest), _58863_d);;
			}
		}
		else if (((_1a549461e_Prim(_59613_dest.get()._field_Kind.ptr()) != nullptr) && _1a549a218_IsStr(_1a549461e_Prim(_59613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a83e82b7:;
			{
				return _1a52bdd1c_callerLenStr(&(_59613_dest), _58863_d);;
			}
		}
		else {
			_case_begin_1a83e81da:;
			{
				_1a546837e_pushErr((*(_58826_e)).ptr(), (*(_58841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a83e8174:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a52be081_callerCapSlice(jule::Ptr<_1a5466305_Data>* _61724_expr, jule::Ptr<_1a5466305_Data>* _61742_d) {
	(*(_61742_d)).get()._field_Kind=_1a5460552_lenKind();
	(*(_61742_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539e68e_BuiltinCapCallExprModel>(_1a539e68e_BuiltinCapCallExprModel{._field_Expr=(*(_61724_expr))}), &__jule_any_type122);
	return (*(_61742_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52be1b3_callerCapStr(jule::Ptr<_1a5466305_Data>* _62522_expr, jule::Ptr<_1a5466305_Data>* _62540_d) {
	(*(_62540_d)).get()._field_Kind=_1a5460552_lenKind();
	if (_1a5466bb8_IsConst((*(_62522_expr)).ptr())) {
		(*(_62540_d)).get()._field_Constant=static__1a538a449_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1a538c00b_ReadStr((*(_62522_expr)).get()._field_Constant.ptr()).cap())));
		(*(_62540_d)).get()._field_Model=jule::Any((*(_62540_d)).get()._field_Constant, &__jule_any_type47);
	} else {
		(*(_62540_d)).get()._field_Model=jule::Any(jule::new_ptr<_1a539e68e_BuiltinCapCallExprModel>(_1a539e68e_BuiltinCapCallExprModel{._field_Expr=(*(_62522_expr))}), &__jule_any_type122);
	};
	return (*(_62540_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52be2e5_builtinCallerCap(jule::Ptr<_1a5467d73_Eval>* _63826_e, jule::Ptr<_1a4869eac_FnCallExpr>* _63841_fc, jule::Ptr<_1a5466305_Data>* _63863_d) {
	if (((*(_63841_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63841_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _64613_dest = _1a5483795_evalExpr((*(_63826_e)), (*(_63841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64613_dest == nullptr)) {
			_case_begin_1a8403a86:;
			{
				return nullptr;;
			}
		}
		else if (_64613_dest.get()._field_Decl) {
			_case_begin_1a8403aec:;
			{
				_1a546837e_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5495598_Slc(_64613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a84038dd:;
			{
				return _1a52be081_callerCapSlice(&(_64613_dest), _63863_d);;
			}
		}
		else if (((_1a549461e_Prim(_64613_dest.get()._field_Kind.ptr()) != nullptr) && _1a549a218_IsStr(_1a549461e_Prim(_64613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a8403954:;
			{
				return _1a52be1b3_callerCapStr(&(_64613_dest), _63863_d);;
			}
		}
		else {
			_case_begin_1a8402b40:;
			{
				_1a546837e_pushErr((*(_63826_e)).ptr(), (*(_63841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8402ac9:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a52be427_callerDeleteMap(jule::Ptr<_1a5467d73_Eval>* _66325_e, jule::Ptr<_1a4869eac_FnCallExpr>* _66340_fc, jule::Ptr<_1a5466305_Data>* _66362_expr, jule::Ptr<_1a5466305_Data>* _66380_d) {
	if ((!((*(_66362_expr)).get()._field_Mutable))) {
		_1a546837e_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_66380_d))=_1a548db13_buildVoidData();
	jule::Ptr<_1a539ed43_BuiltinDeleteCallExprModel> _66813_model = jule::new_ptr<_1a539ed43_BuiltinDeleteCallExprModel>(_1a539ed43_BuiltinDeleteCallExprModel{._field_Dest=(*(_66362_expr)), });;
	if (((*(_66340_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a5466305_Data> _67217_key = _1a5483795_evalExpr((*(_66325_e)), (*(_66340_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_67217_key == nullptr)) {
				_case_begin_1a840a087:;
				{
					return nullptr;;
				}
			}
			else if (_67217_key.get()._field_Decl) {
				_case_begin_1a84088e3:;
				{
					_1a546837e_pushErr((*(_66325_e)).ptr(), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a840887c:;
				{
					;
					jule::Ptr<_1a5492287_TypeKind> _68121_keyType = _1a5496049_Map((*(_66362_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1a54054d6_checkAssignType((*(_66325_e)).get()._field_s, false, &(_68121_keyType), &(_67217_key), (*(_66340_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a8408816:;
		};
		_66813_model.get()._field_Key=_67217_key;
	};
	(*(_66380_d)).get()._field_Model=jule::Any(_66813_model, &__jule_any_type32);
	return (*(_66380_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52be559_builtinCallerDelete(jule::Ptr<_1a5467d73_Eval>* _69229_e, jule::Ptr<_1a4869eac_FnCallExpr>* _69244_fc, jule::Ptr<_1a5466305_Data>* _69266_d) {
	if (((*(_69244_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69244_fc)).get()._field_Args.len() > 2LL)) {
		_1a546837e_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _70013_dest = _1a5483795_evalExpr((*(_69229_e)), (*(_69244_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70013_dest == nullptr)) {
			_case_begin_1a8410488:;
			{
				return nullptr;;
			}
		}
		else if (_70013_dest.get()._field_Decl) {
			_case_begin_1a84104ee:;
			{
				_1a546837e_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1a5496049_Map(_70013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a84102e0:;
			{
				return _1a52be427_callerDeleteMap(_69229_e, _69244_fc, &(_70013_dest), _69266_d);;
			}
		}
		else {
			_case_begin_1a840e542:;
			{
				_1a546837e_pushErr((*(_69229_e)).ptr(), (*(_69244_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a840e4cb:;
	};
}



inline jule::Ptr<_1a5466305_Data> _1a52be68b_builtinCallerClone(jule::Ptr<_1a5467d73_Eval>* _71528_e, jule::Ptr<_1a4869eac_FnCallExpr>* _71543_fc, jule::Ptr<_1a5466305_Data>* ) {
	if (((*(_71543_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_71543_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _72413_d = _1a5483179_evalExprKind((*(_71528_e)), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_72413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5494146_SupportsCloning(_72413_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1a5495598_Slc(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1a5496049_Map(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1a5495334_Arr(_72413_d.get()._field_Kind.ptr()) != nullptr) || (_1a5494883_Sptr(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a8415559:;
				{
					{
						_1a546837e_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1a5495a71_Struct(_72413_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a8414db6:;
				{
					{
						_1a546837e_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			else {
				_case_begin_1a8414d50:;
				{
					{
						_1a546837e_pushErr((*(_71528_e)).ptr(), (*(_71543_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1a5492683_Str(_72413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type75)}));
					};
				}
			}
			_match_end_1a8414987:;
		};
	};
	_72413_d.get()._field_Mutable=true;
	_72413_d.get()._field_Model=jule::Any(jule::new_ptr<_1a539c934_BuiltinCloneCallExprModel>(_1a539c934_BuiltinCloneCallExprModel{._field_Expr=_72413_d.get()._field_Model}), &__jule_any_type26);
	return _72413_d;;
}



inline jule::Ptr<_1a5466305_Data> _1e85b3c7d_builtinCallerAssert(jule::Ptr<_1a5467d73_Eval>* _75729_e, jule::Ptr<_1a4869eac_FnCallExpr>* _75744_fc, jule::Ptr<_1a5466305_Data>* ) {
	if (((*(_75744_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_75744_fc)).get()._field_Args.len() > 2LL)) {
		_1a546837e_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _76613_expr = _1a5483795_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[0LL]);;
	if ((_76613_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1a549461e_Prim(_76613_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1a5499ea4_IsBool(_1a549461e_Prim(_76613_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1a546837e_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a539d6b0_BuiltinAssertCallExprModel> _77513_model = jule::new_ptr<_1a539d6b0_BuiltinAssertCallExprModel>(_1a539d6b0_BuiltinAssertCallExprModel{._field_Token=(*(_75744_fc)).get()._field_Token, ._field_Expr=_76613_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_75744_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1a5466305_Data> _78317_log = _1a5483795_evalExpr((*(_75729_e)), (*(_75744_fc)).get()._field_Args[1LL]);;
		if ((_78317_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1a5466bb8_IsConst(_78317_log.ptr()))) || (_1a549461e_Prim(_78317_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1a549a218_IsStr(_1a549461e_Prim(_78317_log.get()._field_Kind.ptr()).ptr()))))) {
			_1a546837e_pushErr((*(_75729_e)).ptr(), (*(_75744_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1a5492683_Str(_78317_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_77513_model.get()._field_Log=_1a538c00b_ReadStr(_78317_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1a5466305_Data> _79613_d = _1a548db13_buildVoidData();;
	_79613_d.get()._field_Model=jule::Any(_77513_model, &__jule_any_type30);
	return _79613_d;;
}



inline jule::Ptr<_1a5466305_Data> _1a52bec41_builtinCallerStdMemSizeOf(jule::Ptr<_1a5467d73_Eval>* _80135_e, jule::Ptr<_1a4869eac_FnCallExpr>* _80150_fc, jule::Ptr<_1a5466305_Data>* ) {
	jule::Ptr<_1a5466305_Data> _80213_result = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_80150_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _80213_result;;
	};
	if (((*(_80150_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_80135_e)).ptr(), (*(_80150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _81413_d = _1a5483179_evalExprKind((*(_80135_e)), (*(_80150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_81413_d == nullptr)) {
		return _80213_result;;
	};
	_80213_result.get()._field_Model=jule::Any(jule::new_ptr<_1a53a088d_SizeofExprModel>(_1a53a088d_SizeofExprModel{._field_Expr=_81413_d.get()._field_Model}), &__jule_any_type123);
	return _80213_result;;
}



inline jule::Ptr<_1a5466305_Data> _1a52bed73_builtinCallerStdMemAlignOf(jule::Ptr<_1a5467d73_Eval>* _82336_e, jule::Ptr<_1a4869eac_FnCallExpr>* _82351_fc, jule::Ptr<_1a5466305_Data>* ) {
	jule::Ptr<_1a5466305_Data> _82413_result = jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("uint", 4)), 6)}), });;
	if (((*(_82351_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _82413_result;;
	};
	if (((*(_82351_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_82336_e)).ptr(), (*(_82351_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _83613_d = _1a5483179_evalExprKind((*(_82336_e)), (*(_82351_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_83613_d == nullptr)) {
		return _82413_result;;
	};
	_82413_result.get()._field_Model=jule::Any(jule::new_ptr<_1a53a0b79_AlignofExprModel>(_1a53a0b79_AlignofExprModel{._field_Expr=_83613_d.get()._field_Model}), &__jule_any_type124);
	return _82413_result;;
}



inline jule::Ptr<_1a5466305_Data> _1a52beea5_builtinCallerStdMemFree(jule::Ptr<_1a5467d73_Eval>* _84533_e, jule::Ptr<_1a4869eac_FnCallExpr>* _84548_fc, jule::Ptr<_1a5466305_Data>* ) {
	if (((*(_84548_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_84548_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _85413_d = _1a5483179_evalExprKind((*(_84533_e)), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_85413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a5493dd2_PerformsRC(_85413_d.get()._field_Kind.ptr())))) {
		_1a546837e_pushErr((*(_84533_e)).ptr(), (*(_84548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _86313_result = _1a548db13_buildVoidData();;
	_86313_result.get()._field_Model=jule::Any(jule::new_ptr<_1a53a1927_FreeExprModel>(_1a53a1927_FreeExprModel{._field_Expr=_85413_d.get()._field_Model}), &__jule_any_type33);
	return _86313_result;;
}



inline jule::Ptr<_1a5466305_Data> _1a52c00d7_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1a5467d73_Eval>* _86845_e, jule::Ptr<_1a4869eac_FnCallExpr>* _86860_fc, jule::Ptr<_1a5466305_Data>* ) {
	if (((*(_86860_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86860_fc)).get()._field_Args.len() > 1LL)) {
		_1a546837e_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected", 53), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1a5466305_Data> _87713_d = _1a5483179_evalExprKind((*(_86845_e)), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_87713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1a54a9e4d_isBuiltinStrConvertable(&(_87713_d.get()._field_Kind))))) {
		_1a546837e_pushErr((*(_86845_e)).ptr(), (*(_86860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1a5466305_Data>(_1a5466305_Data{._field_Kind=jule::new_ptr<_1a5492287_TypeKind>(_1a5492287_TypeKind{._field_Kind=jule::Trait<_1a5491d58_Kind>(_1a54aa57a_buildPrimType(jule::Str("str", 3)), 6)}), ._field_Model=jule::Any(jule::new_ptr<_1a53a1273_IntegratedToStrExprModel>(_1a53a1273_IntegratedToStrExprModel{._field_Expr=_87713_d.get()._field_Model}), &__jule_any_type125), });;
}



inline jule::Ptr<_1a5466305_Data> _1a52c0219_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1a5467d73_Eval>* _89544_e, jule::Ptr<_1a4869eac_FnCallExpr>* _89559_fc, jule::Ptr<_1a5466305_Data>* _89581_d) {
	if ((!(_1a5468cb9_isUnsafe((*(_89544_e)).ptr())))) {
		_1a546837e_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_89559_fc)).get()._field_Args.len() < 1LL)) {
		_1a546837e_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _90513_argd = _1a5483795_evalExpr((*(_89544_e)), (*(_89559_fc)).get()._field_Args[0LL]);;
	if ((_90513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1a549461e_Prim(_90513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1a549a218_IsStr(_1a549461e_Prim(_90513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1a546837e_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type99),jule::Any(_1a5492683_Str(_90513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1a5466bb8_IsConst(_90513_argd.ptr()))) || (!(_1a538e3a4_IsStr(_90513_argd.get()._field_Constant.ptr()))))) {
		_1a546837e_pushErr((*(_89544_e)).ptr(), (*(_89559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1a5466305_Data> _92013_r = _1a548db13_buildVoidData();;
	jule::Ptr<_1a53a717a_FnIns> _92213_f = _1a549580c_Fn((*(_89581_d)).get()._field_Kind.ptr());;
	if ((_92213_f.get()._field_Generics.len() > 0LL)) {
		_92013_r.get()._field_Kind=_92213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1a53a163b_BackendEmitExprModel> _92713_model = jule::new_ptr<_1a53a163b_BackendEmitExprModel>(_1a53a163b_BackendEmitExprModel{._field_Code=_1a538c00b_ReadStr(_90513_argd.get()._field_Constant.ptr()), });;
	if (((*(_89559_fc)).get()._field_Args.len() > 1LL)) {
		_92713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_89559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_89559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a843d142:;
			if (it != expr_end) {
				jule::Ptr<_1a4865eca_Expr> _93321_arg = *it;
				{
					_90513_argd=_1a5483179_evalExprKind((*(_89544_e)), _93321_arg.get()._field_Kind);
					if ((_90513_argd == nullptr)) {
						return nullptr;;
					};
					_92713_model.get()._field_Exprs = jule::alloc_for_append(_92713_model.get()._field_Exprs,1);_92713_model.get()._field_Exprs.__push(_90513_argd.get()._field_Model);;
				}
				_iter_next_1a843d142:;
				++it;
				goto _iter_begin_1a843d142;
			}
			_iter_end_1a843d142:;
		};
	};
	_92013_r.get()._field_Model=jule::Any(_92713_model, &__jule_any_type24);
	return _92013_r;;
}



inline jule::Ptr<_1a5466305_Data> _1a52c034b_builtinCallerStdDebugOut(jule::Ptr<_1a5467d73_Eval>* _94634_e, jule::Ptr<_1a4869eac_FnCallExpr>* _94649_fc, jule::Ptr<_1a5466305_Data>* _94671_d) {
	(*(_94671_d))=_1a4c6442d_builtinCallerOut(_94634_e, _94649_fc, _94671_d);
	if (((*(_94671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_94671_d)).get()._field_Model.cast_ptr<_1a539c22a_BuiltinOutCallExprModel>(&__jule_any_type27).get()._field_Debug=true;
	return (*(_94671_d));;
}



inline jule::Ptr<_1a5466305_Data> _1a52c047d_builtinCallerStdDebugOutln(jule::Ptr<_1a5467d73_Eval>* _95536_e, jule::Ptr<_1a4869eac_FnCallExpr>* _95551_fc, jule::Ptr<_1a5466305_Data>* _95573_d) {
	(*(_95573_d))=_1a519067d_builtinCallerOutln(_95536_e, _95551_fc, _95573_d);
	if (((*(_95573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_95573_d)).get()._field_Model.cast_ptr<_1a539c615_BuiltinOutlnCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_95573_d));;
}



inline jule::Bool _1b5a61e2e_FindModuleFile(jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8443213:;
		if (it != expr_end) {
			jule::Ptr<_1e78a8925_DirEntry> *_1312_d = it;
			{
				if (((!(_1e77decbd_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && ((*(_1312_d)).get()._field_Name == jule::Str("jule.mod", 8)))) {
					return true;;
				};
			}
			_iter_next_1a8443213:;
			++it;
			goto _iter_begin_1a8443213;
		}
		_iter_end_1a8443213:;
	};
	return false;;
}



inline jule::Str _1b5a620c7_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1e78a8925_DirEntry>> _2617_dirents = ({
				auto except = static__1e8603bad_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a8443444;
				} jule::Slice<jule::Ptr<_1e78a8925_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1b5a61e2e_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1e86d6d29_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1a8443444;
			};
		}
	_iter_next_1a8443444:;
	}
	_iter_end_1a8443444:;;
	return jule::Str();;
}



inline jule::Slice<_1ceb4952a_Log> _1b5a6236e_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1e78a64d3_Read(_1e86d32ba_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1ceb4952a_Log>::make({_1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1ceac5819_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1ceb4952a_Log>::make({_1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1a4d47d80_FileInfo> _1a4d4849b_ParseFile(jule::Ptr<_1ceeedd0d_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1a4d47d80_FileInfo> _2713_finf = jule::new_ptr<_1a4d47d80_FileInfo>();;
	({
		__jule_tuple_x_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log __jule_assign_result = _1a4d48a2e_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log _1a4d48a2e_parseFileset(jule::Ptr<_1ceeedd0d_File> _5521_f) {
	__jule_tuple_x_1a3c1be0e_Ast__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	jule::Ptr<_1a4d674cb_parser> _5613_p = jule::new_ptr<_1a4d674cb_parser>();;
	_1a4d76d9d_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1a4871942_ScopeTree> _1a4d4948b_newScope(void) {
	return jule::new_ptr<_1a4871942_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1a4d49744_isSt(jule::Ptr<_1ceee8973_Token> _499_current, jule::Ptr<_1ceee8973_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(5LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(5LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a4d49a85_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(22LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1ceee8973_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(20LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(7LLU)) && _1ceee9468_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1a4d49e1a_nextStPos(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_1ceee8973_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(3LLU)) {
					_case_begin_1a84c312d:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1a84ca399:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1a4d49a85_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4d49744_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1a84c3914:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4d49744_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1a84c3749:;
						};
						goto _iter_next_1a84c1835;
					}
				}
				_match_end_1a84c30b7:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1a84c1835;
			};
			if ((_7213_i > _7033_start)) {
				if (_1a4d49a85_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1a84c1835;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4d49744_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1a4d49744_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1a84c1835;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a84c1835:;
	}
	_iter_end_1a84c1835:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_bool _1a4d4a25b_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_1ceee8973_Token>> _13228_tokens) {
	__jule_tuple_sx_1ceee8973_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a4d49e1a_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1ceee8973_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1ceee8973_Token__jule_tuple_bool __jule_assign_result = _1a4d4a25b_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _1a4d4a8ee_splitStmts(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1a4d4a558_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1a4d4a558_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1ceee8973_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_1ceee8973_Token__jule_tuple_bool __jule_assign_result = _1a4d4a25b_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1a4d4a558_stmt>(_1a4d4a558_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1a84d2eea:;
	}
	_iter_end_1a84d2eea:;;
	return _15513_stmts;;
}



inline jule::Bool _1a4d620db_isTypeOp(jule::Str* _88814_kind) {
	return ((((*(_88814_kind)) == jule::Str("&", 1)) || ((*(_88814_kind)) == jule::Str("&&", 2))) || ((*(_88814_kind)) == jule::Str("*", 1)));;
}



inline jule::Bool _1a4d623c7_isTypeRange(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _89521_tokens) {
	jule::Bool _89613_op = false;;
	{
		auto expr = _89521_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a858ba43:;
		if (it != expr_end) {
			jule::I64 _8979_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _89712_token = *it;
			{
				if ((_89712_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					if ((_89712_token.get()._field_Kind == jule::Str("[", 1))) {
						if (_89613_op) {
							return true;;
						};
						jule::I64 _90325_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_1ceee8973_Token>> _90425_lTokens = (*(_89521_tokens)).slice(_8979_i);;
						{
							auto expr = &(_90425_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a858cdb8:;
							if (it != expr_end) {
								jule::Ptr<_1ceee8973_Token> _90524_lToken = *it;
								{
									{
										auto &_match_expr{ _90524_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(3LLU)) {
											_case_begin_1a858e54b:;
											{
												{
													auto &_match_expr{ _90524_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1a858ed87:;
														{
															(_90325_rangeN)++;
															goto _iter_next_1a858cdb8;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1a858ee0e:;
														{
															(_90325_rangeN)--;
															goto _iter_next_1a858cdb8;
														}
													}
													_match_end_1a858ebbc:;
												};
											}
										}
										_match_end_1a858e309:;
									};
									if ((_90325_rangeN == 0LL)) {
										return _1a4d620db_isTypeOp(&(_90524_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1a858cdb8:;
								++it;
								goto _iter_begin_1a858cdb8;
							}
							_iter_end_1a858cdb8:;
						};
						return true;;
					};
				};
				if ((!(_1a4d620db_isTypeOp(&(_89712_token.get()._field_Kind))))) {
					return false;;
				};
				_89613_op=true;
			}
			_iter_next_1a858ba43:;
			++it;
			_8979_i++;
			goto _iter_begin_1a858ba43;
		}
		_iter_end_1a858ba43:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1ceee8973_Token>> _1a4d6266e_getBlockExpr(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _93322_tokens) {
	jule::I64 _93413_braceN = 0LL;;
	jule::I64 _93513_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8591619:;
		if (it != expr_end) {
			jule::I64 _9369_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ _93612_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(17LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
						_case_begin_1a85923d9:;
						{
							(_93513_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a8592461:;
						{
							{
								auto &_match_expr{ _93612_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a85931ed:;
									{
										if (((_93413_braceN > 0LL) || (_93513_skipToNextBraceClose > 0LL))) {
											if ((_93513_skipToNextBraceClose > 0LL)) {
												(_93513_skipToNextBraceClose)--;
											};
											(_93413_braceN)++;
											goto _match_end_1a8593330;
										};
										return (*(_93322_tokens)).slice(0LL, _9369_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a859386e:;
									{
										(_93413_braceN)++;
									}
								}
								else {
									_case_begin_1a8593396:;
									{
										(_93413_braceN)--;
									}
								}
								_match_end_1a8593330:;
							};
						}
					}
					_match_end_1a8592340:;
				};
			}
			_iter_next_1a8591619:;
			++it;
			_9369_i++;
			goto _iter_begin_1a8591619;
		}
		_iter_end_1a8591619:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token _1a4d62a04_splitDelim(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _96420_tokens, jule::U64 _96438_delim) {
	__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_func_result;
	jule::I64 _96513_rangeN = 0LL;;
	{
		auto expr = _96420_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8591e33:;
		if (it != expr_end) {
			jule::I64 _9669_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _96612_token = *it;
			{
				{
					auto &_match_expr{ _96612_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(3LLU)) {
						_case_begin_1a8595a4c:;
						{
							{
								auto &_match_expr{ _96612_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1a859682d:;
									{
										(_96513_rangeN)++;
										goto _iter_next_1a8591e33;
									}
								}
								else {
									_case_begin_1a8596443:;
									{
										(_96513_rangeN)--;
									}
								}
								_match_end_1a8596278:;
							};
						}
					}
					else if (_match_expr == _96438_delim) {
						_case_begin_1a8595ac4:;
						{
							if ((_96513_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1ceee8973_Token>> _98025_l = (*(_96420_tokens)).slice(0LL, _9669_i);;
								jule::Slice<jule::Ptr<_1ceee8973_Token>> _98125_r = (*(_96420_tokens)).slice((_9669_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98025_l;
								__jule_func_result.__jule_result_arg1 = _98125_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1a859582c:;
				};
			}
			_iter_next_1a8591e33:;
			++it;
			_9669_i++;
			goto _iter_begin_1a8591e33;
		}
		_iter_end_1a8591e33:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1a4d62c9b_findLowestPrecOp(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _99122_tokens) {
	jule::U8 _99613_prec = 255LLU;;
	jule::I64 _99713_precPos = -1LL;;
	jule::I64 _99913_braceN = 0LL;;
	jule::Bool _100013_skipToNextBraceOpen = false;;
	{
		auto expr = _99122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5a61bed:;
		if (it != expr_end) {
			jule::I64 _10019_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> *_100112_token = it;
			{
				{
					
					if (((*(_100112_token)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
						_case_begin_1a7870487:;
						{
							{
								auto &_match_expr{ (*(_100112_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1a78710d1:;
									{
										_100013_skipToNextBraceOpen=false;
										goto _case_begin_1a78717eb;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1a78717eb:;
									{
										(_99913_braceN)++;
									}
								}
								else {
									_case_begin_1a7871367:;
									{
										(_99913_braceN)--;
									}
								}
								_match_end_1a787119c:;
							};
							goto _iter_next_1b5a61bed;
						}
					}
					else if (_100013_skipToNextBraceOpen) {
						_case_begin_1a787050e:;
						{
							goto _iter_next_1b5a61bed;
						}
					}
					else if (((*(_100112_token)).get()._field_Id == static_cast<jule::U64>(16LLU))) {
						_case_begin_1a7870586:;
						{
							_100013_skipToNextBraceOpen=true;
							goto _iter_next_1b5a61bed;
						}
					}
					else if ((_10019_i == 0LL)) {
						_case_begin_1a787060d:;
						{
							goto _iter_next_1b5a61bed;
						}
					}
					else if (((*(_100112_token)).get()._field_Id != static_cast<jule::U64>(7LLU))) {
						_case_begin_1a7870685:;
						{
							goto _iter_next_1b5a61bed;
						}
					}
					else if ((_99913_braceN > 0LL)) {
						_case_begin_1a787070c:;
						{
							goto _iter_next_1b5a61bed;
						}
					}
					_match_end_1a7870333:;
				};
				jule::Ptr<_1ceee8973_Token> _102813_left = (*(_99122_tokens))[(_10019_i - 1LL)];;
				if (((_102813_left.get()._field_Id == static_cast<jule::U64>(7LLU)) || (_102813_left.get()._field_Id == static_cast<jule::U64>(11LLU)))) {
					goto _iter_next_1b5a61bed;
				};
				if ((((_10019_i > 1LL) && (_102813_left.get()._field_Id == static_cast<jule::U64>(3LLU))) && (_102813_left.get()._field_Kind == jule::Str("]", 1)))) {
					jule::Ptr<_1ceee8973_Token> _103617_lleft = (*(_99122_tokens))[(_10019_i - 2LL)];;
					if (((_103617_lleft.get()._field_Id == static_cast<jule::U64>(3LLU)) && (_103617_lleft.get()._field_Kind == jule::Str("[", 1)))) {
						if ((((*(_100112_token)).get()._field_Kind == jule::Str("&", 1)) || ((*(_100112_token)).get()._field_Kind == jule::Str("*", 1)))) {
							goto _iter_next_1b5a61bed;
						};
					};
				};
				jule::U8 _104513_p = _1ceee8d2a_Prec((*(_100112_token)).ptr());;
				if (((_104513_p != 0LLU) && (_104513_p <= _99613_prec))) {
					_99613_prec=_104513_p;
					_99713_precPos=_10019_i;
				};
			}
			_iter_next_1b5a61bed:;
			++it;
			_10019_i++;
			goto _iter_begin_1b5a61bed;
		}
		_iter_end_1b5a61bed:;
	};
	return _99713_precPos;;
}



inline jule::Ptr<_1a4867b8b_IdentExpr> _1a4d63043_buildIdentExpr(jule::Ptr<_1ceee8973_Token>* _105424_token) {
	return jule::new_ptr<_1a4867b8b_IdentExpr>(_1a4867b8b_IdentExpr{._field_Token=(*(_105424_token)), ._field_Ident=(*(_105424_token)).get()._field_Kind, ._field_CppLinked=false});;
}



inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_int _1a4d632da_getRangeExprTokens(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _106228_tokens) {
	__jule_tuple_sx_1ceee8973_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106313_rangeN = 0LL;;
	jule::I64 _106413_i = ((*(_106228_tokens)).len() - 1LL);;
	for (; (_106413_i >= 0LL); (_106413_i)--) {
		{
			jule::Ptr<_1ceee8973_Token> _106613_tok = (*(_106228_tokens))[_106413_i];;
			if ((_106613_tok.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _106613_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a787a030:;
						{
							(_106313_rangeN)++;
						}
					}
					else {
						_case_begin_1a7879b34:;
						{
							(_106313_rangeN)--;
						}
					}
					_match_end_1a7879925:;
				};
			};
			if ((_106313_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106228_tokens)).slice(0LL, _106413_i);
				__jule_func_result.__jule_result_arg1 = _106313_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1a7878b11:;
	}
	_iter_end_1a7878b11:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106313_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1a4d64044_checkAssignTokens(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1ceeed01b_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8684bb3:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a8685e39:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1a8685a3d:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1a868582e:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1a8684bb3;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(7LLU)) && _1ceeed55a_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1a8684bb3:;
			++it;
			goto _iter_begin_1a8684bb3;
		}
		_iter_end_1a8684bb3:;
	};
	return false;;
}



inline _1ceb4952a_Log _1a4d65265_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_1ceeedd0d_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_1ceb4996a_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_1ceee8973_Token>> _1a4d6573d_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_1ceee8973_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1ceee8973_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(3LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_1ceee8973_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1a868b736:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1a868b7ad:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1a868b516:;
				};
			};
		}
	_iter_next_1a868a746:;
	}
	_iter_end_1a868a746:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token _1a4d659d5_rangeLast(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _10319_tokens) {
	__jule_tuple_sx_1ceee8973_Token__jule_tuple_sx_1ceee8973_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(3LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1ceee8973_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1a8690a26:;
						{
							(_10913_braceN)++;
							goto _iter_next_1a868c77b;
						}
					}
					else {
						_case_begin_1a869062a:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1a869041b:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1a868c77b:;
	}
	_iter_end_1a868c77b:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log _1a4d65dc0_partsKind(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _13713_parts = nullptr;;
	jule::Slice<_1ceb4952a_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a869372c:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a8694d9e:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1a869372c;
							}
						}
						else {
							_case_begin_1a86949a3:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1a8694794:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1a869372c;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_1ceb4952a_Log _16121_err = _1a4d65265_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1a869372c:;
			++it;
			_1429_i++;
			goto _iter_begin_1a869372c;
		}
		_iter_end_1a869372c:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_1ceee8973_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log _1a4d662aa_parts(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_1ceee8973_Token__jule_tuple_s_1ceb4952a_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1ceee8973_Token>>> _18913_parts = nullptr;;
	jule::Slice<_1ceb4952a_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8699da4:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_1ceee8973_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(3LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1a869b526:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1a8699da4;
							}
						}
						else {
							_case_begin_1a869b12a:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1a869ae1b:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1a8699da4;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_1ceb4952a_Log _21321_err = _1a4d65265_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1a8699da4:;
			++it;
			_1949_i++;
			goto _iter_begin_1a8699da4;
		}
		_iter_end_1a8699da4:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_1ceee8973_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1a4d66552_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1a869e9be:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1a869ea35:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1a869e7b0:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1a869a68a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a869e20a:;
	};
}



inline _1ceb4952a_Log _1a4d6693c_compilerErr(jule::Ptr<_1ceee8973_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_1ceb4996a_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_1ceeeeeda_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1a4d66d6b_pushSuggestion(_1ceb4952a_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_1ceb4996a_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1a4d67113_tokstoa(jule::Slice<jule::Ptr<_1ceee8973_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86a25e8:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1a86a25e8:;
			++it;
			goto _iter_begin_1a86a25e8;
		}
		_iter_end_1a86a25e8:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86a2c9c:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1a86a2c9c:;
			++it;
			goto _iter_begin_1a86a2c9c;
		}
		_iter_end_1a86a2c9c:;
	};
	return _26313_s;;
}



inline jule::Bool _1a4d77178_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1cea9e084_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1ce9d6a6b_IsUpper(_203810_r);;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d77a4c_buildVoidType(void) {
	return jule::new_ptr<_1a48619a9_TypeDecl>();;
}



inline jule::Ptr<_1a48619a9_TypeDecl> _1a4d77c5b_buildPrimType(jule::Ptr<_1ceee8973_Token> _2322_t) {
	return jule::new_ptr<_1a48619a9_TypeDecl>(_1a48619a9_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1a4862070_IdentTypeDecl>(_1a4862070_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type19)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1b5a4ed0c_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a884dbd4:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4c83b_IsWindows(_1cebd4593_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a884d5da:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4cae4_IsDarwin(_1cebd4593_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a884d651:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4cd8b_IsLinux(_1cebd4593_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1a884d6b7:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4d991_IsUnix(_1cebd4593_Os);
			}
		}
		else {
			_case_begin_1a884cd8c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a884d2aa:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b5a4ee3e_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a8850a82:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4d1aa_IsI386(_1ceb55e82_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a8850ae8:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4d452_IsAmd64(_1ceb55e82_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a8850b5e:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4d6e9_IsArm64(_1ceb55e82_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1a8850bc5:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4e0ac_Is64Bit(_1ceb55e82_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1a8850c3b:;
			{
				__jule_func_result.__jule_result_arg0=_1ceb4dd15_Is32Bit(_1ceb55e82_Arch);
			}
		}
		else {
			_case_begin_1a8850334:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a8850752:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b5a50071_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1e86b8a86_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1e86d4783_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1ceac11e9_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ed0c_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ee3e_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_1ceac11e9_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ed0c_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ee3e_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ee3e_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ed0c_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b5a4ed0c_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1b5a50e51_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_1cebd4593_Os);;
	if (_1ceb4d991_IsUnix(_1cebd4593_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _1b5a511a4_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_1ceb55e82_Arch);;
	if (_1ceb4e0ac_Is64Bit(_1ceb55e82_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_1ceb4dd15_Is32Bit(_1ceb55e82_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _1b5a5145c_initVars(jule::Slice<jule::Str>* _5518_vars, _1b5a50b43_CompileInfo* _5532_info) {
	_1b5a50e51_setOsVars(_5518_vars);
	_1b5a511a4_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a885bc7a:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a885bce1:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1a885bc25:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a885c264:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a885c2ca:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a885c341:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1a885c198:;
	};
}



inline jule::Slice<jule::U8> _1a4d22981_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1e78a64d3_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1cec2049c_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1ceb4952a_Log _1a4d2bc65_flatCompilerErr(jule::Str _4120_text) {
	return _1ceb4952a_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1a4d7c920_pushPasses(jule::Ptr<_1a53e574b_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a888d6c4:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a888e142:;
					if (it != expr_end) {
						_1a53ab459_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1a888e142;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a88900cc:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1a888e142;
										};
									}
									_iter_next_1a88900cc:;
									++it;
									goto _iter_begin_1a88900cc;
								}
								_iter_end_1a88900cc:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_1a888e142:;
						++it;
						goto _iter_begin_1a888e142;
					}
					_iter_end_1a888e142:;
				};
			}
			_iter_next_1a888d6c4:;
			++it;
			goto _iter_begin_1a888d6c4;
		}
		_iter_end_1a888d6c4:;
	};
}



inline jule::Slice<jule::Str> _1a4d7ca96_getAllUniquePasses(jule::Ptr<_1a53e574b_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1a53e27e2_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1a4d7c920_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a889162d:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_CppLinked))) {
					_1a4d7c920_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1a889162d:;
			++it;
			goto _iter_begin_1a889162d;
		}
		_iter_end_1a889162d:;
	};
	return _12913_passes;;
}



inline _1b5a50b43_CompileInfo _1a4d7cc94_buildCompileInfo(void) {
	_1b5a50b43_CompileInfo _14213_info = _1b5a50b43_CompileInfo{._field_Prod=_1e7712174_Production, ._field_Test=_1e7711717_Test, };;
	{
		auto &_match_expr{ _1e770e979_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a889294d:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a88929c5:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1a88928c6:;
	};
	{
		auto &_match_expr{ _1e7710eca_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a8892310:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a8892d6b:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a8892dd2:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1a8893278:;
	};
	return _14213_info;;
}



inline void _1a5d7c644_EliminateDefines(jule::Ptr<_1a4ce7615_IR>* _28526_ir) {
	jule::Ptr<_1a5d48159_ObjectDeadCode> _28613_ocd = static__1a5d48632_new(_28526_ir);;
	_1a5d7c37a_elimanate(_28613_ocd);
}



inline jule::Ptr<_1a3c1d0ec_Directive> _1a5d7c9c9_findDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88d221d:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1a88d221d:;
			++it;
			goto _iter_begin_1a88d221d;
		}
		_iter_end_1a88d221d:;
	};
	return nullptr;;
}



inline jule::Bool _1a5d7cd1a_hasDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1a5d7c9c9_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1a5d81967_eliminateDeadCodeOfScope(jule::Ptr<_1a53c40dc_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1a53c682b_Label>> _2429_labels = jule::Slice<jule::Ptr<_1a53c682b_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1a53c6b17_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1a53c6b17_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1a5d7da63_scopeDeadCode> _24413_sdc = jule::new_ptr<_1a5d7da63_scopeDeadCode>(_1a5d7da63_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1a53c682b_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1a53c6b17_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1a5d8167b_optimizeStmts(_24413_sdc);
	};
}



inline void _1a5d81bed_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1a53a44c9_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a6ce47:;
		if (it != expr_end) {
			jule::Ptr<_1a53a44c9_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8a70048:;
					if (it != expr_end) {
						jule::Ptr<_1a53a717a_FnIns> _25621_ins = *it;
						{
							_1a5d81967_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1a8a70048:;
						++it;
						goto _iter_begin_1a8a70048;
					}
					_iter_end_1a8a70048:;
				};
			}
			_iter_next_1a8a6ce47:;
			++it;
			goto _iter_begin_1a8a6ce47;
		}
		_iter_end_1a8a6ce47:;
	};
}



inline void _1a5d81e40_eliminateFunctionsScopePackage(jule::Ptr<_1a53e574b_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a704bb:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _26317_f = *it;
			{
				_1a5d81bed_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1a8a704bb:;
			++it;
			goto _iter_begin_1a8a704bb;
		}
		_iter_end_1a8a704bb:;
	};
}



inline void _1a5d821d7_eliminateScopePackage(jule::Ptr<_1a53e574b_Package>* _26831_pkg) {
	_1a5d81e40_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1a5d823e6_EliminateScopes(jule::Ptr<_1a4ce7615_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1a53e27e2_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_CppLinked))) {
				_1a5d821d7_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1a8a71b2c:;
	}
	_iter_end_1a8a71b2c:;;
	_1a5d821d7_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1b55c5982_isStdPackage(jule::Str _39817_f, jule::Str _39825_p) {
	return _1ceaa4a18_HasPrefix(_39817_f, _1e86d32ba_Join(jule::Slice<jule::Str>::make({_1ceb54898_PathStdlib,_39825_p})));;
}



inline jule::Bool _1b55d7455_isConstantValidConditionalCase(jule::Ptr<_1a53c44d8_If>* _40236_i) {
	{
		auto &_match_expr{ (*(_40236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8ae57d8:;
			{
				jule::Ptr<_1a5389ec6_Const> _40513_c = (*(_40236_i)).get()._field_Expr.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
				return (_1a538e140_IsBool(_40513_c.ptr()) && _1a538bc97_ReadBool(_40513_c.ptr()));;
			}
		}
		_match_end_1a8ae5673:;
	};
	return false;;
}



inline jule::Bool _1b55dc38e_isUnreachableExpr(jule::Any* _41123_expr) {
	{
		auto &_match_expr{ (*(_41123_expr)) };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8ae6223:;
			{
				jule::Ptr<_1a5389ec6_Const> _41413_c = (*(_41123_expr)).cast_ptr<_1a5389ec6_Const>(&__jule_any_type47);;
				return (_1a538e140_IsBool(_41413_c.ptr()) && (!(_1a538bc97_ReadBool(_41413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a8ae629a:;
			{
				jule::Ptr<_1a53962ac_BinopExprModel> _41713_m = (*(_41123_expr)).cast_ptr<_1a53962ac_BinopExprModel>(&__jule_any_type117);;
				if ((_41713_m.get()._field_Op.get()._field_Kind == jule::Str("&&", 2))) {
					return (_1b55dc38e_isUnreachableExpr(&(_41713_m.get()._field_Left.get()._field_Model)) || _1b55dc38e_isUnreachableExpr(&(_41713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1a8ae58a4:;
	};
	return false;;
}



inline jule::Bool _1b564e896_isConstantValidMatchCase(jule::Ptr<_1a53c8883_Case>* _42630_case) {
	{
		auto expr = &((*(_42630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ae7598:;
		if (it != expr_end) {
			jule::Ptr<_1a5466305_Data> *_42712_expr = it;
			{
				if (((_1a5466bb8_IsConst((*(_42712_expr)).ptr()) && _1a538e140_IsBool((*(_42712_expr)).get()._field_Constant.ptr())) && _1a538bc97_ReadBool((*(_42712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1a8ae7598:;
			++it;
			goto _iter_begin_1a8ae7598;
		}
		_iter_end_1a8ae7598:;
	};
	return false;;
}



inline jule::Bool _1b566ae34_isUnreachableConditionalCase(jule::Ptr<_1a53c44d8_If>* _43534_i) {
	return _1b55dc38e_isUnreachableExpr(&((*(_43534_i)).get()._field_Expr));;
}



inline jule::Bool _1b56b3e16_isUnreachableMatchCase(jule::Ptr<_1a53c8883_Case>* _43928_case) {
	{
		auto expr = &((*(_43928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8aeaea3:;
		if (it != expr_end) {
			jule::Ptr<_1a5466305_Data> *_44012_expr = it;
			{
				if ((!(_1b55dc38e_isUnreachableExpr(&((*(_44012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1a8aeaea3:;
			++it;
			goto _iter_begin_1a8aeaea3;
		}
		_iter_end_1a8aeaea3:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1a3c3d64a_checkForBitShiftOpt(jule::Ptr<_1a5395ce5_OperandExprModel>* _45125_l, jule::Ptr<_1a5395ce5_OperandExprModel>* _45148_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1a5389404_IsInt(_1a5492683_Str((*(_45125_l)).get()._field_Kind.ptr())))) || (!(_1a5389404_IsInt(_1a5492683_Str((*(_45148_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_45148_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a8b325d3:;
			{
				goto _match_end_1a8b33084;
			}
		}
		else {
			_case_begin_1a8b331c7:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1a8b33084:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1a538c748_AsU64((*(_45148_r)).get()._field_Model.cast_ptr<_1a5389ec6_Const>(&__jule_any_type47).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4659_j = _1a5354116_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4669_z = static_cast<jule::U64>(_4659_j);;
	if ((static_cast<jule::F64>(_4669_z) != _4659_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4669_z;
	return __jule_func_result;;
}



inline void _1a3c7e515_PushOptLevel(jule::I64 _3217_level) {
	_1ce297a47_Copy=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ce59423e_Deadcode=(_3217_level >= static_cast<jule::I64>(1LL));
	_1ce602005_Append=(_3217_level >= static_cast<jule::I64>(1LL));
	_1b567b9e4_Math=(_3217_level >= static_cast<jule::I64>(1LL));
	_1b567bb59_Access=(_3217_level >= static_cast<jule::I64>(1LL));
	_1b56a492e_Inline=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a3c3edee_Ptr=(_3217_level >= static_cast<jule::I64>(1LL));
	_1a3c40064_Cond=(_3217_level >= static_cast<jule::I64>(1LL));
}



inline void _1a5d14620_detectEnabled(void) {
	_1a5c86251_exprEnabled=(((_1a3c3edee_Ptr || _1b567b9e4_Math) || _1b567bb59_Access) || _1a3c40064_Cond);
	_1a5c86dbc_scopeEnabled=((_1a3c40064_Cond || _1ce602005_Append) || _1ce297a47_Copy);
}



inline void _1a5da0656_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1cec2049c_Exit(1LL);
}



inline jule::U64 _1a663577b_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1a6635a89_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1a6635e1e_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1a8bb9e2e:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a8bba0b6:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a8bba12c:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a8bba193:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a8bba209:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a8bba270:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1a8bba2d6:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1a8bba34c:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a8bba3b3:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1a8bba429:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a8bba4a1:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1a8bb9dc9:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1a5734e64_isCopyOptimizable(jule::Ptr<_1a5466305_Data>* _79123_expr) {
	if ((!((*(_79123_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_79123_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a8c6885c:;
			{
				return false;;
			}
		}
		_match_end_1a8c68807:;
	};
	return true;;
}



inline jule::Bool _1a575ba7e_isIterCopyOptimizable(jule::Ptr<_1a5466305_Data>* _80227_expr, jule::Ptr<_1a5418939_Var>* _80241_v) {
	if (((!((*(_80227_expr)).get()._field_Lvalue)) && (!(_1a5493909_Mutable((*(_80227_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_80241_v)).get()._field_Mutable)) && (!((*(_80227_expr)).get()._field_Mutable)));;
}



inline jule::Str _1a62c6e9a_decomposeCommonEsq(jule::U8 _142923_b) {
	{
		auto &_match_expr{ _142923_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a85ceda5:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a85d0438:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a85d049e:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a85d0515:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a85d013b:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a85d01a2:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a85d0218:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a85d027e:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a85d0757:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a85d07bd:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1a85ceee8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a85cee3d:;
	};
}



inline jule::Str _1a62c7286_sbtoa(jule::U8 _145610_b) {
	if ((_145610_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_145610_b < 128LLU)) {
		jule::Str _146113_seq = _1a62c6e9a_decomposeCommonEsq(_145610_b);;
		if ((!(_146113_seq.empty()))) {
			return _146113_seq;;
		};
		if (((32LL <= _145610_b) && (_145610_b <= 126LLU))) {
			return static_cast<jule::Str>(_145610_b);;
		};
	};
	jule::Str _14699_seq = _1a53827a4_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_145610_b)), 8LL);;
	if ((_14699_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _14699_seq);;
	};
	return (jule::Str("\\", 1) + _14699_seq);;
}



inline jule::Str _1a62c752d_cstrBytes(jule::Slice<jule::U8> _147614_bytes) {
	jule::Str _147713_lit = jule::Str::alloc(0LL, _147614_bytes.len());;
	{
		auto expr = &(_147614_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85d632e:;
		if (it != expr_end) {
			jule::U8 *_147812_b = it;
			{
				_147713_lit+=_1a62c7286_sbtoa((*(_147812_b)));
			}
			_iter_next_1a85d632e:;
			++it;
			goto _iter_begin_1a85d632e;
		}
		_iter_end_1a85d632e:;
	};
	return _147713_lit;;
}



inline jule::Str _1a62c784c_cstrLit(jule::Slice<jule::U8> _148412_bytes) {
	return ((jule::Str("\"", 1) + _1a62c752d_cstrBytes(_148412_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1a62c7b5a_ftoa(jule::F64 _14889_f, jule::I64 _148817_bitsize) {
	if ((_148817_bitsize != 32LL)) {
		if ((_14889_f == static_cast<jule::F64>(static_cast<jule::I64>(_14889_f)))) {
			return _1a62c7e02_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_14889_f)));;
		};
		if ((_14889_f == static_cast<jule::F64>(static_cast<jule::U64>(_14889_f)))) {
			return _1a62c8199_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_14889_f)));;
		};
	};
	jule::Str _149713_m = _1a482d1e5_FmtFloat(_14889_f, 'f', -1LL, _148817_bitsize);;
	if ((!(_1ceac2a7a_Contains(_149713_m, jule::Str(".", 1))))) {
		_149713_m+=jule::Str(".0", 2);
	};
	return _149713_m;;
}



inline jule::Str _1a62c7e02_itoa(jule::I64 _15049_x) {
	{
		
		if ((_15049_x == jule::MAX_I64)) {
			_case_begin_1a85d9909:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15049_x == jule::MIN_I64)) {
			_case_begin_1a85d9970:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1a85d97b6:;
	};
	jule::Str _15129_fmt = _1a5382b39_FmtInt(_15049_x, 10LL);;
	if (_1ceb4e0ac_Is64Bit(jule::Str("arm64", 5))) {
		return (_15129_fmt + jule::Str("LL", 2));;
	};
	return (_15129_fmt + jule::Str("L", 1));;
}



inline jule::Str _1a62c8199_utoa(jule::U64 _15199_x) {
	{
		
		if ((_15199_x == jule::MAX_U64)) {
			_case_begin_1a85db5cb:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1a85db4cc:;
	};
	jule::Str _15259_fmt = _1a53827a4_FmtUint(_15199_x, 10LL);;
	if (_1ceb4e0ac_Is64Bit(jule::Str("arm64", 5))) {
		return (_15259_fmt + jule::Str("LLU", 3));;
	};
	return (_15259_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1a62c8551_isForwarded(jule::Ptr<_1a53c40dc_Scope>* _153217_s) {
	jule::Any _15339_last = (*(_153217_s)).get()._field_Stmts[((*(_153217_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15339_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a85dcda2:;
			{
				{
					auto &_match_expr{ _15339_last.cast_ptr<_1a5466305_Data>(&__jule_any_type23).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a85dde2a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a85de2e3:;
						{
							return false;;
						}
					}
					_match_end_1a85de029:;
				};
			}
		}
		else {
			_case_begin_1a85dd666:;
			{
				return true;;
			}
		}
		_match_end_1a85dd589:;
	};
}



inline jule::Bool _1a62c881a_isBuiltinCallHasDebuginf(jule::Ptr<_1a5398127_FnCallExprModel>* _154730_m) {
	if ((!(_1a53a8511_IsBuiltin((*(_154730_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_154730_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a85dec83:;
			{
				jule::Ptr<_1a539ba54_CommonSubIdentExprModel> _155313_csie = (*(_154730_m)).get()._field_Expr.cast_ptr<_1a539ba54_CommonSubIdentExprModel>(&__jule_any_type73);;
				return (_155313_csie.get()._field_Ident == jule::Str("swap", 4));;
			}
		}
		else {
			_case_begin_1a85de546:;
			{
				return false;;
			}
		}
		_match_end_1a85de4e1:;
	};
}



inline jule::Bool _1a62c8a4b_isExprComesFromBind(jule::Ptr<_1a5466305_Data>* _156025_d) {
	{
		auto &_match_expr{ (*(_156025_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a85e1856:;
			{
				return (*(_156025_d)).get()._field_Model.cast_ptr<_1a5418939_Var>(&__jule_any_type8).get()._field_CppLinked;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a85e18bc:;
			{
				return (*(_156025_d)).get()._field_Model.cast_ptr<_1a539a998_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_CppLinked;;
			}
		}
		else {
			_case_begin_1a85e0ec6:;
			{
				return false;;
			}
		}
		_match_end_1a85e0e71:;
	};
}



inline jule::Bool _1a62c8ce3_isAny(jule::Ptr<_1a5492287_TypeKind>* _157215_t) {
	if ((_1a54950c0_TypeEnum((*(_157215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1a5496ed4_Prim> _15769_prim = _1a549461e_Prim((*(_157215_t)).ptr());;
	return ((_15769_prim != nullptr) && _1a549a47c_IsAny(_15769_prim.ptr()));;
}



inline void _1a66401c0_iterFiles(jule::Ptr<_1a53e574b_Package>* _123519_pkg, jule::Fn<void(jule::Ptr<_1a54614cb_SymbolTable>*)> _123534_f) {
	{
		auto expr = &((*(_123519_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a563c212:;
		if (it != expr_end) {
			jule::Ptr<_1a54614cb_SymbolTable> _123617_file = *it;
			{
				_123534_f(&(_123617_file));
			}
			_iter_next_1a563c212:;
			++it;
			goto _iter_begin_1a563c212;
		}
		_iter_end_1a563c212:;
	};
}



inline jule::Str _1a66404ab_concatAllParts(jule::Slice<jule::Ptr<_1ceee8973_Token>> _124219_parts) {
	jule::I64 _124313_n = 0LL;;
	{
		auto expr = &(_124219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a563d4cc:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_124412_part = it;
			{
				_124313_n+=(*(_124412_part)).get()._field_Kind.len();
			}
			_iter_next_1a563d4cc:;
			++it;
			goto _iter_begin_1a563d4cc;
		}
		_iter_end_1a563d4cc:;
	};
	if ((_124313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _125013_s = jule::Str::alloc(0LL, _124313_n);;
	{
		auto expr = &(_124219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a563c8a5:;
		if (it != expr_end) {
			jule::Ptr<_1ceee8973_Token> *_125112_p = it;
			{
				_125013_s+=(*(_125112_p)).get()._field_Kind;
			}
			_iter_next_1a563c8a5:;
			++it;
			goto _iter_begin_1a563c8a5;
		}
		_iter_end_1a563c8a5:;
	};
	return _125013_s;;
}



inline jule::Ptr<_1a3c1d0ec_Directive> _1a664d3dc_findDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _46523_directives, jule::Str _46554_tag) {
	{
		auto expr = _46523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cee75b:;
		if (it != expr_end) {
			jule::Ptr<_1a3c1d0ec_Directive> _46617_dr = *it;
			{
				if ((_46617_dr.get()._field_Tag.get()._field_Kind == _46554_tag)) {
					return _46617_dr;;
				};
			}
			_iter_next_1a8cee75b:;
			++it;
			goto _iter_begin_1a8cee75b;
		}
		_iter_end_1a8cee75b:;
	};
	return nullptr;;
}



inline jule::Bool _1a664d772_hasDirective(jule::Slice<jule::Ptr<_1a3c1d0ec_Directive>>* _47518_directives, jule::Str _47549_tag) {
	return (_1a664d3dc_findDirective(_47518_directives, _47549_tag) != nullptr);;
}



inline jule::Bool _1a664da19_shouldInitialized(jule::Ptr<_1a5492287_TypeKind>* _48227_t) {
	jule::Ptr<_1a5496ed4_Prim> _4839_prim = _1a549461e_Prim((*(_48227_t)).ptr());;
	if ((_4839_prim != nullptr)) {
		return ((!(_1a549a47c_IsAny(_4839_prim.ptr()))) && (!(_1a549a218_IsStr(_4839_prim.ptr()))));;
	};
	{
		
		if ((_1a5494883_Sptr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d025a5:;
			{
				return false;;
			}
		}
		else if ((_1a5496049_Map((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d01ecd:;
			{
				return false;;
			}
		}
		else if ((_1a5495598_Slc((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d02055:;
			{
				return false;;
			}
		}
		else if ((_1a5495cd5_Trait((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d020cc:;
			{
				return false;;
			}
		}
		else if ((_1a549580c_Fn((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d02286:;
			{
				return false;;
			}
		}
		else if ((_1a5495334_Arr((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d022ec:;
			{
				jule::Ptr<_1a549d370_Arr> _49917_arr = _1a5495334_Arr((*(_48227_t)).ptr());;
				return _1a664da19_shouldInitialized(&(_49917_arr.get()._field_Elem));;
			}
		}
		else if ((_1a5495a71_Struct((*(_48227_t)).ptr()) != nullptr)) {
			_case_begin_1a8d02363:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a8d0185c:;
			{
				return true;;
			}
		}
		_match_end_1a8d01807:;
	};
}



inline void _1ceb2b980_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1ceb20600_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1ceb2b980_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1ceb2b210_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1ceb2b210_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a915d8de:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1a915d8de:;
			++it;
			goto _iter_begin_1a915d8de;
		}
		_iter_end_1a915d8de:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_1ceb2b210_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91602a3:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_1ceaa53cb_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					_4913_s+=jule::Str("\n", 1);
				};
			}
			_iter_next_1a91602a3:;
			++it;
			_519_i++;
			goto _iter_begin_1a91602a3;
		}
		_iter_end_1a91602a3:;
	};
	jule::outln(_4913_s);
}



inline void _1ceb20732_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1ceb2b980_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.13 @master", 18));
}



inline void _1ceb184e9_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1ceb1862b_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1ceb2d344_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1ceb2b980_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1a9167244:;
			{
				_1ceb184e9_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1a9166e58:;
			{
				_1ceb1862b_toolDistarch();
			}
		}
		else {
			_case_begin_1a91657d6:;
			{
				_1ceb2b980_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1a9166c6b:;
	};
}



inline void _1ceb2d476_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1ceb2b980_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.13 @master", 33));
	jule::outln(jule::Str("architecture: arm64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _1e770e979_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1e7710eca_CppStd));
}



inline void _1ceb3933e_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1ceb2b980_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1a916b633:;
			{
				({
					auto except = static__1e78a6ed9_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1ceb2b980_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a916a016:;
			{
				_1ceb2b980_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1a916b259:;
	};
}



inline jule::Bool _1ceb3c0bc_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1a916cc61:;
			{
				_1ceb20600_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1a916d190:;
			{
				_1ceb20732_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1a916d206:;
			{
				_1ceb2d344_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1a916d2e4:;
			{
				_1ceb2d476_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1a916d35a:;
			{
				_1ceb3933e_mod(_15320_args);
			}
		}
		else {
			_case_begin_1a916c821:;
			{
				return false;;
			}
		}
		_match_end_1a916c755:;
	};
	return true;;
}



inline void _1ceb3c1ee_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help,\n    version       Show version,\n    tool          Tools for effective Jule,\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 310));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1e8653c41_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1ceb3c1ee_showInfo();
		return;;
	};
	if (_1ceb3c0bc_processCommand(&(_18913_args))) {
		return;;
	};
	_1a669e40a_compileCommand(&(_18913_args));
}



inline void _1a666d5c7_init(void) {
	_1e770e979_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1e85b3ec0_File> _1a6671bb3_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1e86d6d29_Dir((*(_4316_path)));;
	({
		auto except = static__1e77deb25_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1e862d6ee_Create(_449_dir);
				if (!except.ok()) {
					_1a5da0656_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1e78a5e1c_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1a5da0656_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a667cd01_clearObjects(void) {
	({
		auto except = static__1e78a667b_Remove(_1a6669150_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1e8608564_Remove(_1a6669392_OutDir);
}



inline void _1a666b806_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1cebd5440_Cmd> _7313_cmd = static__1cebd5891_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1ceac2739_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1cebd5a6c_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type131) == _match_expr) {
					_case_begin_1a9174ce0:;
					{
						static__1a5d9d06b_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type131) == _match_expr) {
					_case_begin_1a91745c5:;
					{
						static__1a5d9d06b_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a9174707:;
					{
						static__1a5d9d06b_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1a917465d:;
			};
			_1a5da0656_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _1cebd5eac_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1e770e979_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1a5d9d06b_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1a5da0656_Throw(jule::Str());
	};
	_1a667cd01_clearObjects();
}



inline jule::Bool _1a668c816_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _1ceac11e9_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1ceb3c919_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1a6691908_pushCompCmdClang(jule::Str* _10726_cmd) {
	(*(_10726_cmd))+=jule::Str("-Wno-everything ", 16);
	(*(_10726_cmd))+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e7710eca_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a917353b:;
			{
				(*(_10726_cmd))+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a9178a3b:;
			{
				(*(_10726_cmd))+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a9178aa2:;
			{
				(*(_10726_cmd))+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a917881b:;
	};
	(*(_10726_cmd))+=jule::Str(" ", 1);
	if (_1e7712174_Production) {
		(*(_10726_cmd))+=jule::Str("-O3 ", 4);
		(*(_10726_cmd))+=jule::Str("-flto ", 6);
		(*(_10726_cmd))+=jule::Str("-DNDEBUG ", 9);
		(*(_10726_cmd))+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		(*(_10726_cmd))+=jule::Str("-O0 ", 4);
	};
}



inline void _1a6669abd_pushCompCmdGcc(jule::Str* _13324_cmd) {
	(*(_13324_cmd))+=jule::Str("-w ", 3);
	(*(_13324_cmd))+=jule::Str("--std=", 6);
	{
		auto &_match_expr{ _1e7710eca_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a9178ed1:;
			{
				(*(_13324_cmd))+=jule::Str("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a917b2d0:;
			{
				(*(_13324_cmd))+=jule::Str("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a917b346:;
			{
				(*(_13324_cmd))+=jule::Str("c++20", 5);
			}
		}
		_match_end_1a917b0b0:;
	};
	(*(_13324_cmd))+=jule::Str(" ", 1);
	if (_1e7712174_Production) {
		(*(_13324_cmd))+=jule::Str("-O3 ", 4);
		(*(_13324_cmd))+=jule::Str("-DNDEBUG ", 9);
		(*(_13324_cmd))+=jule::Str("-fomit-frame-pointer ", 21);
	} else {
		(*(_13324_cmd))+=jule::Str("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1a666ea4b_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1a4ce7615_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_1e7710caa_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _1e770e979_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a917d18e:;
			{
				_1a6669abd_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a917e239:;
			{
				_1a6691908_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1a917e107:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a917eadb:;
		if (it != expr_end) {
			jule::Str *_17112_pass = it;
			{
				_16113_cmd+=(*(_17112_pass));
				_16113_cmd+=jule::Str(" ", 1);
			}
			_iter_next_1a917eadb:;
			++it;
			goto _iter_begin_1a917eadb;
		}
		_iter_end_1a917eadb:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a917e2b1:;
		if (it != expr_end) {
			jule::Ptr<_1a53e27e2_ImportInfo> *_17712_u = it;
			{
				if (((*(_17712_u)).get()._field_CppLinked && _1a668c816_isCppSourceFile((*(_17712_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17712_u)).get()._field_Path;
					_16113_cmd+=jule::Str(" ", 1);
				};
			}
			_iter_next_1a917e2b1:;
			++it;
			goto _iter_begin_1a917e2b1;
		}
		_iter_end_1a917e2b1:;
	};
	if ((!(_1a6669804_Out.empty()))) {
		_16113_cmd+=jule::Str("-o ", 3);
		_16113_cmd+=_1a6669804_Out;
		_16113_cmd+=jule::Str(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1a6669150_getCompilePath(void) {
	return _1e86d32ba_Join(jule::Slice<jule::Str>::make({_1a6669392_OutDir,_1a66696a0_OutName}));;
}



inline void _1a6678b21_applyTargetIndependentOptimizations(jule::Ptr<_1a4ce7615_IR>* _20045_ir) {
	jule::Ptr<_1a4dacbc5_Optimizer> _20113_opt = static__1a5ca4093_New(_20045_ir);;
	_1a5ce4413_Optimize(_20113_opt.ptr());
}



inline void _1a6668a78_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1e770e979_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a9180a43:;
			{
				_1a5da0656_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a9182cba:;
			{
				if (_1e7710caa_CompilerPath.empty()) {
					_1e7710caa_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a9182d31:;
			{
				if (_1e7710caa_CompilerPath.empty()) {
					_1e7710caa_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1a9182c54:;
			{
				_1a5da0656_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1e770e979_Compiler));
			}
		}
		_match_end_1a9182847:;
	};
}



inline void _1a666c85c_checkTargetArch(jule::Str _22220_arch) {
	if ((((_22220_arch != jule::Str("amd64", 5)) && (_22220_arch != jule::Str("arm64", 5))) && (_22220_arch != jule::Str("i386", 4)))) {
		_1a5da0656_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22220_arch));
	};
}



inline void _1a666c98e_checkTargetOs(jule::Str _23018_os) {
	if ((((_23018_os != jule::Str("windows", 7)) && (_23018_os != jule::Str("linux", 5))) && (_23018_os != jule::Str("darwin", 6)))) {
		_1a5da0656_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23018_os));
	};
}



inline void _1a669d98c_checkTargetFlag(jule::Str* _23821_target) {
	if ((*(_23821_target)).empty()) {
		_1a5da0656_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2439_parts = _1ceac2739_Split((*(_23821_target)), jule::Str("-", 1), -1LL);;
	if ((_2439_parts.len() != 2LL)) {
		_1a5da0656_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_23821_target))));
	};
	jule::Str _24810_os;;
	jule::Str _24814_arch;;
	({
		jule::Str ___jule_assign_arg = _2439_parts[0LL];
		jule::Str _1___jule_assign_arg = _2439_parts[1LL];
		_24810_os = ___jule_assign_arg;
		_24814_arch = _1___jule_assign_arg;
	});
	if ((_24810_os != jule::Str("native", 6))) {
		_1a666c98e_checkTargetOs(_24810_os);
		_1cebd4593_Os=_24810_os;
	};
	if ((_24814_arch != jule::Str("native", 6))) {
		_1a666c85c_checkTargetArch(_24814_arch);
		_1ceb55e82_Arch=_24814_arch;
	};
	_1a4790de4_UpdateTarget();
}



inline void _1a669dabe_checkOptFlag(jule::Str* _26118_opt) {
	if ((*(_26118_opt)).empty()) {
		_1a5da0656_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26118_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1a918a872:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1a918ad7d:;
			{
				_1a3c7e515_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1a918a6a7:;
			{
				_1a5da0656_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26118_opt))));
			}
		}
		_match_end_1a918a652:;
	};
}



inline void _1a669de32_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1e7710eca_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a918ade4:;
			{
				goto _match_end_1a918bc4c;
			}
		}
		else {
			_case_begin_1a918b7eb:;
			{
				_1a5da0656_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _1e7710eca_CppStd));
			}
		}
		_match_end_1a918bc4c:;
	};
}



inline jule::Slice<jule::Str> _1a669e064_checkFlags(jule::Slice<jule::Str>* _28616_args) {
	jule::Str _28713_opt = jule::Str("L0", 2);;
	jule::Str _28813_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a6699ba8_FlagSet> _29013_fs = static__1a6699e94_New();;
	_1a918e139_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28713_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1a918e139_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_28813_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1a918e139_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a6669804_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e77111ea_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e771144d_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1a918e139_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e770e979_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1a918e139_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e7710caa_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e7712174_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e77119d1_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1e7711daa_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1a918e139_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1e7710eca_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce297a47_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce59423e_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ce602005_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b567b9e4_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b567bb59_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b56a492e_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a3c3edee_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1a91979b1_AddVar(_29013_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1a3c40064_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	jule::Slice<jule::Str> _31213_content = ({
		auto except = _1a669aca8_Parse(_29013_fs.ptr(), (*(_28616_args)));
		(except.ok()) ? (except.result) : ({
			_1a5da0656_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1a6668a78_checkCompilerFlag();
	_1a669de32_checkCppStdFlag();
	_1a669d98c_checkTargetFlag(&(_28813_target));
	_1a669dabe_checkOptFlag(&(_28713_opt));
	return _31213_content;;
}



inline void _1a669e196_setupSemaFlags(jule::I64* _32524_flags) {
	if (_1e77111ea_Shadowing) {
		(*(_32524_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1a4ce7615_IR> _1a669e2c8_buildIr(jule::Slice<jule::Str>* _33113_args) {
	jule::Slice<jule::Str> _3329_content = _1a669e064_checkFlags(_33113_args);;
	jule::I64 _33413_semaFlags = static_cast<jule::I64>(0LL);;
	_1a669e196_setupSemaFlags(&(_33413_semaFlags));
	if ((_3329_content.len() == 0LL)) {
		_1a5da0656_Throw(_1ceb4996a_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3329_content.len() > 1LL)) {
		_1a5da0656_Throw((jule::Str("undefined content: ", 19) + _3329_content[1LL]));
	};
	jule::Str _34214_path;;
	jule::Bool _34220_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1e869c9e3_Abs(_3329_content[0LL]);
		_34214_path = __jule_assign_result.__jule_result_arg0;
		_34220_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34220_ok))) {
		_1a5da0656_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1e85b4388_Status> _3489_inf = ({
		auto except = static__1e77deb25_Of(_1ceb54898_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a5da0656_Throw(_1ceb4996a_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1e85b4388_Status>(nullptr);});
	});;
	if ((!(_1e77decbd_IsDir(_3489_inf.ptr())))) {
		_1a5da0656_Throw(_1ceb4996a_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1a4ce7615_IR> _35614_ir;;
	jule::Slice<_1ceb4952a_Log> _35618_logs;;
	({
		__jule_tuple_x_1a4ce7615_IR__jule_tuple_s_1ceb4952a_Log __jule_assign_result = static__1a4ce95d4_Build(_34214_path, _33413_semaFlags);
		_35614_ir = __jule_assign_result.__jule_result_arg0;
		_35618_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_35614_ir == nullptr) && (_35618_logs == nullptr))) {
		_1a5da0656_Throw(_1ceb4996a_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34214_path, &__jule_any_type5)})));
	};
	if ((_35618_logs != nullptr)) {
		static__1a5d9ec2c_PrintLogs(&(_35618_logs));
		_1a5da0656_Throw(jule::Str());
	};
	return _35614_ir;;
}



inline void _1a669e40a_compileCommand(jule::Slice<jule::Str>* _37124_args) {
	(*(_37124_args))=(*(_37124_args)).slice(1LL);
	if (((*(_37124_args))[0LL] == jule::Str("test", 4))) {
		_1e7711717_Test=true;
		(*(_37124_args))=(*(_37124_args)).slice(1LL);
	};
	jule::Ptr<_1a4ce7615_IR> _37713_ir = _1a669e2c8_buildIr(_37124_args);;
	;
	if ((!(_1e7711717_Test))) {
		jule::Ptr<_1a53a44c9_Fn> _38217_main = _1a53e7000_FindFn(_37713_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38217_main == nullptr)) {
			_1a5da0656_Throw(_1ceb4996a_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a6678b21_applyTargetIndependentOptimizations(&(_37713_ir));
	_1a4d7c7dd_Order(_37713_ir.ptr());
	jule::Str _39310_compiler;;
	jule::Str _39320_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a666ea4b_genCompileCmd(_1a6669150_getCompilePath(), &(_37713_ir));
		_39310_compiler = __jule_assign_result.__jule_result_arg0;
		_39320_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a663a60a_ObjectCoder> _39513_oc = static__1a62d57a0_New(&(_37713_ir), _1a65cc1b2_SerializationInfo{._field_Compiler=_39310_compiler, ._field_CompilerCommand=_39320_compilerCmd});;
	if (_1e7711717_Test) {
		jule::Ptr<_1a62cadb1_TestCoder> _40017_tc = static__1a62cb334_New(&(_39513_oc));;
		_1a62cc566_Serialize(_40017_tc);
	} else {
		_1a663ed5c_Serialize(_39513_oc);
	};
	jule::Str _4069_path = _1a6669150_getCompilePath();;
	jule::Ptr<_1e85b3ec0_File> _40713_file = _1a6671bb3_openOutput(&(_4069_path));;
	({
		auto except = _1e77a0b08_WriteStr(_40713_file.ptr(), &(_39513_oc.get()._field_Obj));
		if (!except.ok()) {
			_1a5da0656_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1e77bde67_Close(_40713_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:411:5"));
	});
	if ((!(_1e771144d_Transpilation))) {
		_1a666b806_compileIr(_39310_compiler, _39320_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1cebb16a2_init();
	_1a4791026_init();
	_1a666d5c7_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}